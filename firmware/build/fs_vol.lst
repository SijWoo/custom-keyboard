ARM GAS  /tmp/ccvXhXom.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fs_vol.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FSVol_ObjFindEx,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	FSVol_ObjFindEx:
  26              	.LVL0:
  27              	.LFB36:
  28              		.file 1 "rtos/uC-FS/Source/fs_vol.c"
   1:rtos/uC-FS/Source/fs_vol.c **** /*
   2:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
   3:rtos/uC-FS/Source/fs_vol.c **** *                                                uC/FS
   4:rtos/uC-FS/Source/fs_vol.c **** *                                      The Embedded File System
   5:rtos/uC-FS/Source/fs_vol.c **** *
   6:rtos/uC-FS/Source/fs_vol.c **** *                         (c) Copyright 2008-2019; Silicon Laboratories Inc.,
   7:rtos/uC-FS/Source/fs_vol.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-FS/Source/fs_vol.c **** *
   9:rtos/uC-FS/Source/fs_vol.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-FS/Source/fs_vol.c **** *
  11:rtos/uC-FS/Source/fs_vol.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-FS/Source/fs_vol.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-FS/Source/fs_vol.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-FS/Source/fs_vol.c **** *                  license, you may not use this software.
  15:rtos/uC-FS/Source/fs_vol.c **** *
  16:rtos/uC-FS/Source/fs_vol.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-FS/Source/fs_vol.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-FS/Source/fs_vol.c **** *
  19:rtos/uC-FS/Source/fs_vol.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-FS/Source/fs_vol.c **** *
  21:rtos/uC-FS/Source/fs_vol.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  23:rtos/uC-FS/Source/fs_vol.c **** */
  24:rtos/uC-FS/Source/fs_vol.c **** 
  25:rtos/uC-FS/Source/fs_vol.c **** /*
  26:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  27:rtos/uC-FS/Source/fs_vol.c **** *
  28:rtos/uC-FS/Source/fs_vol.c **** *                                 FILE SYSTEM SUITE VOLUME MANAGEMENT
  29:rtos/uC-FS/Source/fs_vol.c **** *
  30:rtos/uC-FS/Source/fs_vol.c **** * Filename : fs_vol.c
ARM GAS  /tmp/ccvXhXom.s 			page 2


  31:rtos/uC-FS/Source/fs_vol.c **** * Version  : v4.07.06
  32:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  33:rtos/uC-FS/Source/fs_vol.c **** */
  34:rtos/uC-FS/Source/fs_vol.c **** 
  35:rtos/uC-FS/Source/fs_vol.c **** /*
  36:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  37:rtos/uC-FS/Source/fs_vol.c **** *                                               MODULE
  38:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  39:rtos/uC-FS/Source/fs_vol.c **** */
  40:rtos/uC-FS/Source/fs_vol.c **** 
  41:rtos/uC-FS/Source/fs_vol.c **** #define  MICRIUM_SOURCE
  42:rtos/uC-FS/Source/fs_vol.c **** #define  FS_VOL_MODULE
  43:rtos/uC-FS/Source/fs_vol.c **** 
  44:rtos/uC-FS/Source/fs_vol.c **** 
  45:rtos/uC-FS/Source/fs_vol.c **** /*
  46:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  47:rtos/uC-FS/Source/fs_vol.c **** *                                            INCLUDE FILES
  48:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  49:rtos/uC-FS/Source/fs_vol.c **** */
  50:rtos/uC-FS/Source/fs_vol.c **** 
  51:rtos/uC-FS/Source/fs_vol.c **** #include  <cpu_core.h>
  52:rtos/uC-FS/Source/fs_vol.c **** #include  <lib_mem.h>
  53:rtos/uC-FS/Source/fs_vol.c **** #include  "fs.h"
  54:rtos/uC-FS/Source/fs_vol.c **** #include  "fs_cache.h"
  55:rtos/uC-FS/Source/fs_vol.c **** #include  "fs_dev.h"
  56:rtos/uC-FS/Source/fs_vol.c **** #include  "fs_err.h"
  57:rtos/uC-FS/Source/fs_vol.c **** #include  "fs_partition.h"
  58:rtos/uC-FS/Source/fs_vol.c **** #include  "fs_sys.h"
  59:rtos/uC-FS/Source/fs_vol.c **** #include  "fs_type.h"
  60:rtos/uC-FS/Source/fs_vol.c **** #include  "fs_vol.h"
  61:rtos/uC-FS/Source/fs_vol.c **** 
  62:rtos/uC-FS/Source/fs_vol.c **** 
  63:rtos/uC-FS/Source/fs_vol.c **** /*
  64:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  65:rtos/uC-FS/Source/fs_vol.c **** *                                            LOCAL DEFINES
  66:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  67:rtos/uC-FS/Source/fs_vol.c **** */
  68:rtos/uC-FS/Source/fs_vol.c **** 
  69:rtos/uC-FS/Source/fs_vol.c **** 
  70:rtos/uC-FS/Source/fs_vol.c **** /*
  71:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  72:rtos/uC-FS/Source/fs_vol.c **** *                                           LOCAL CONSTANTS
  73:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  74:rtos/uC-FS/Source/fs_vol.c **** */
  75:rtos/uC-FS/Source/fs_vol.c **** 
  76:rtos/uC-FS/Source/fs_vol.c **** 
  77:rtos/uC-FS/Source/fs_vol.c **** /*
  78:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  79:rtos/uC-FS/Source/fs_vol.c **** *                                          LOCAL DATA TYPES
  80:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  81:rtos/uC-FS/Source/fs_vol.c **** */
  82:rtos/uC-FS/Source/fs_vol.c **** 
  83:rtos/uC-FS/Source/fs_vol.c **** 
  84:rtos/uC-FS/Source/fs_vol.c **** /*
  85:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  86:rtos/uC-FS/Source/fs_vol.c **** *                                            LOCAL TABLES
  87:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
ARM GAS  /tmp/ccvXhXom.s 			page 3


  88:rtos/uC-FS/Source/fs_vol.c **** */
  89:rtos/uC-FS/Source/fs_vol.c **** 
  90:rtos/uC-FS/Source/fs_vol.c **** 
  91:rtos/uC-FS/Source/fs_vol.c **** /*
  92:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  93:rtos/uC-FS/Source/fs_vol.c **** *                                       LOCAL GLOBAL VARIABLES
  94:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
  95:rtos/uC-FS/Source/fs_vol.c **** */
  96:rtos/uC-FS/Source/fs_vol.c **** 
  97:rtos/uC-FS/Source/fs_vol.c **** FS_STATIC  MEM_POOL    FSVol_Pool;                              /* Pool of volumes.                
  98:rtos/uC-FS/Source/fs_vol.c **** FS_STATIC  FS_VOL    **FSVol_Tbl;                               /* Tbl of vol.                     
  99:rtos/uC-FS/Source/fs_vol.c **** 
 100:rtos/uC-FS/Source/fs_vol.c **** FS_STATIC  FS_QTY      FSVol_Cnt;                               /* Current number of open volumes. 
 101:rtos/uC-FS/Source/fs_vol.c **** FS_STATIC  FS_QTY      FSVol_VolCntMax;                         /* Maximum number of open volumes. 
 102:rtos/uC-FS/Source/fs_vol.c **** 
 103:rtos/uC-FS/Source/fs_vol.c **** 
 104:rtos/uC-FS/Source/fs_vol.c **** /*
 105:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 106:rtos/uC-FS/Source/fs_vol.c **** *                                      LOCAL FUNCTION PROTOTYPES
 107:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 108:rtos/uC-FS/Source/fs_vol.c **** */
 109:rtos/uC-FS/Source/fs_vol.c **** 
 110:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------- VOLUME OBJECT MANA
 111:rtos/uC-FS/Source/fs_vol.c **** static  void     FSVol_ObjClr    (FS_VOL            *p_vol);    /* Clear    a volume object.       
 112:rtos/uC-FS/Source/fs_vol.c **** 
 113:rtos/uC-FS/Source/fs_vol.c **** static  FS_VOL  *FSVol_ObjFind   (CPU_CHAR          *name_vol,  /* Find     a volume object by name
 114:rtos/uC-FS/Source/fs_vol.c ****                                   FS_ERR            *p_err);
 115:rtos/uC-FS/Source/fs_vol.c **** 
 116:rtos/uC-FS/Source/fs_vol.c **** static  FS_VOL  *FSVol_ObjFindEx (CPU_CHAR          *name_vol,  /* Find     a volume object by name
 117:rtos/uC-FS/Source/fs_vol.c ****                                   FS_DEV            *p_dev,
 118:rtos/uC-FS/Source/fs_vol.c ****                                   FS_PARTITION_NBR   partition_nbr);
 119:rtos/uC-FS/Source/fs_vol.c **** 
 120:rtos/uC-FS/Source/fs_vol.c **** static  void     FSVol_ObjFree   (FS_VOL            *p_vol);    /* Free     a volume object.       
 121:rtos/uC-FS/Source/fs_vol.c **** 
 122:rtos/uC-FS/Source/fs_vol.c **** static  FS_VOL  *FSVol_ObjGet    (void);                        /* Allocate a volume object.       
 123:rtos/uC-FS/Source/fs_vol.c **** 
 124:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- LOCKED ACCESS 
 125:rtos/uC-FS/Source/fs_vol.c **** static  void     FSVol_OpenLocked(FS_VOL            *p_vol,     /* Open volume.                    
 126:rtos/uC-FS/Source/fs_vol.c ****                                   FS_ERR            *p_err);
 127:rtos/uC-FS/Source/fs_vol.c **** 
 128:rtos/uC-FS/Source/fs_vol.c **** /*
 129:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 130:rtos/uC-FS/Source/fs_vol.c **** *                                     LOCAL CONFIGURATION ERRORS
 131:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 132:rtos/uC-FS/Source/fs_vol.c **** */
 133:rtos/uC-FS/Source/fs_vol.c **** 
 134:rtos/uC-FS/Source/fs_vol.c **** 
 135:rtos/uC-FS/Source/fs_vol.c **** /*
 136:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 137:rtos/uC-FS/Source/fs_vol.c **** *                                         FSVol_CacheAssign()
 138:rtos/uC-FS/Source/fs_vol.c **** *
 139:rtos/uC-FS/Source/fs_vol.c **** * Description : Assign cache to a volume.
 140:rtos/uC-FS/Source/fs_vol.c **** *
 141:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol        Volume name.
 142:rtos/uC-FS/Source/fs_vol.c **** *
 143:rtos/uC-FS/Source/fs_vol.c **** *               p_cache_api     Pointer to...
 144:rtos/uC-FS/Source/fs_vol.c **** *                               (a) cache API to use; OR
ARM GAS  /tmp/ccvXhXom.s 			page 4


 145:rtos/uC-FS/Source/fs_vol.c **** *                               (b) NULL, if default cache API should be used.
 146:rtos/uC-FS/Source/fs_vol.c **** *
 147:rtos/uC-FS/Source/fs_vol.c **** *               p_cache_data    Pointer to cache data.
 148:rtos/uC-FS/Source/fs_vol.c **** *
 149:rtos/uC-FS/Source/fs_vol.c **** *               size            Size, in bytes, of cache buffer.
 150:rtos/uC-FS/Source/fs_vol.c **** *
 151:rtos/uC-FS/Source/fs_vol.c **** *               pct_mgmt        Percent of cache buffer dedicated to management sectors.
 152:rtos/uC-FS/Source/fs_vol.c **** *
 153:rtos/uC-FS/Source/fs_vol.c **** *               pct_dir         Percent of cache buffer dedicated to directory sectors.
 154:rtos/uC-FS/Source/fs_vol.c **** *
 155:rtos/uC-FS/Source/fs_vol.c **** *               mode            Cache mode.
 156:rtos/uC-FS/Source/fs_vol.c **** *
 157:rtos/uC-FS/Source/fs_vol.c **** *               p_err           Pointer to variable that will receive the return error code from th
 158:rtos/uC-FS/Source/fs_vol.c **** *
 159:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_NONE                      Cache created.
 160:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_NAME_NULL                 Argument 'name_vol' passed a N
 161:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_VOL_NOT_OPEN              Volume not open.
 162:rtos/uC-FS/Source/fs_vol.c **** *
 163:rtos/uC-FS/Source/fs_vol.c **** *                                                                    --- RETURNED BY FSCache_Assign
 164:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_NULL_PTR                  Argument 'p_cache_data' passed
 165:rtos/uC-FS/Source/fs_vol.c **** *                                                                        pointer.
 166:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_CACHE_INVALID_MODE        Mode specified invalid.
 167:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_CACHE_INVALID_SEC_TYPE    Sector type specified invalid.
 168:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_CACHE_TOO_SMALL           Size specified too small for c
 169:rtos/uC-FS/Source/fs_vol.c **** *
 170:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
 171:rtos/uC-FS/Source/fs_vol.c **** *
 172:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
 173:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 174:rtos/uC-FS/Source/fs_vol.c **** */
 175:rtos/uC-FS/Source/fs_vol.c **** 
 176:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT
 177:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_CacheAssign (CPU_CHAR          *name_vol,
 178:rtos/uC-FS/Source/fs_vol.c ****                          FS_VOL_CACHE_API  *p_cache_api,
 179:rtos/uC-FS/Source/fs_vol.c ****                          void              *p_cache_data,
 180:rtos/uC-FS/Source/fs_vol.c ****                          CPU_INT32U         size,
 181:rtos/uC-FS/Source/fs_vol.c ****                          CPU_INT08U         pct_mgmt,
 182:rtos/uC-FS/Source/fs_vol.c ****                          CPU_INT08U         pct_dir,
 183:rtos/uC-FS/Source/fs_vol.c ****                          FS_FLAGS           mode,
 184:rtos/uC-FS/Source/fs_vol.c ****                          FS_ERR            *p_err)
 185:rtos/uC-FS/Source/fs_vol.c **** {
 186:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 187:rtos/uC-FS/Source/fs_vol.c **** 
 188:rtos/uC-FS/Source/fs_vol.c **** 
 189:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 190:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 191:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 192:rtos/uC-FS/Source/fs_vol.c ****     }
 193:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 194:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 195:rtos/uC-FS/Source/fs_vol.c ****         return;
 196:rtos/uC-FS/Source/fs_vol.c ****     }
 197:rtos/uC-FS/Source/fs_vol.c ****     if (p_cache_data == (void *)0) {                            /* Validate cache data ptr.        
 198:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 199:rtos/uC-FS/Source/fs_vol.c ****         return;
 200:rtos/uC-FS/Source/fs_vol.c ****     }
 201:rtos/uC-FS/Source/fs_vol.c ****     if ((mode != FS_VOL_CACHE_MODE_RD)         &&               /* Validate cache mode.            
ARM GAS  /tmp/ccvXhXom.s 			page 5


 202:rtos/uC-FS/Source/fs_vol.c ****         (mode != FS_VOL_CACHE_MODE_WR_THROUGH) &&
 203:rtos/uC-FS/Source/fs_vol.c ****         (mode != FS_VOL_CACHE_MODE_WR_BACK)) {
 204:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_CACHE_INVALID_MODE;
 205:rtos/uC-FS/Source/fs_vol.c ****         return;
 206:rtos/uC-FS/Source/fs_vol.c ****     }
 207:rtos/uC-FS/Source/fs_vol.c **** #endif
 208:rtos/uC-FS/Source/fs_vol.c **** 
 209:rtos/uC-FS/Source/fs_vol.c **** 
 210:rtos/uC-FS/Source/fs_vol.c **** 
 211:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 212:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_NO, p_err);      /* Vol may be unmounted.           
 213:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 214:rtos/uC-FS/Source/fs_vol.c ****         return;
 215:rtos/uC-FS/Source/fs_vol.c ****     }
 216:rtos/uC-FS/Source/fs_vol.c **** 
 217:rtos/uC-FS/Source/fs_vol.c **** 
 218:rtos/uC-FS/Source/fs_vol.c **** 
 219:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- CREATE CACHE
 220:rtos/uC-FS/Source/fs_vol.c ****     if (p_cache_api == (FS_VOL_CACHE_API *)0) {
 221:rtos/uC-FS/Source/fs_vol.c ****         p_cache_api =  (FS_VOL_CACHE_API *)&FSCache_Dflt;
 222:rtos/uC-FS/Source/fs_vol.c ****     }
 223:rtos/uC-FS/Source/fs_vol.c ****     p_vol->CacheAPI_Ptr = p_cache_api;
 224:rtos/uC-FS/Source/fs_vol.c ****     p_vol->CacheAPI_Ptr->Create(p_vol,
 225:rtos/uC-FS/Source/fs_vol.c ****                                 p_cache_data,
 226:rtos/uC-FS/Source/fs_vol.c ****                                 size,
 227:rtos/uC-FS/Source/fs_vol.c ****                                 p_vol->SecSize,
 228:rtos/uC-FS/Source/fs_vol.c ****                                 pct_mgmt,
 229:rtos/uC-FS/Source/fs_vol.c ****                                 pct_dir,
 230:rtos/uC-FS/Source/fs_vol.c ****                                 mode,
 231:rtos/uC-FS/Source/fs_vol.c ****                                 p_err);
 232:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 233:rtos/uC-FS/Source/fs_vol.c ****         p_vol->CacheAPI_Ptr = (FS_VOL_CACHE_API *)0;
 234:rtos/uC-FS/Source/fs_vol.c ****     }
 235:rtos/uC-FS/Source/fs_vol.c **** 
 236:rtos/uC-FS/Source/fs_vol.c **** 
 237:rtos/uC-FS/Source/fs_vol.c **** 
 238:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
 239:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
 240:rtos/uC-FS/Source/fs_vol.c **** }
 241:rtos/uC-FS/Source/fs_vol.c **** #endif
 242:rtos/uC-FS/Source/fs_vol.c **** 
 243:rtos/uC-FS/Source/fs_vol.c **** 
 244:rtos/uC-FS/Source/fs_vol.c **** /*
 245:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 246:rtos/uC-FS/Source/fs_vol.c **** *                                       FSVol_CacheInvalidate()
 247:rtos/uC-FS/Source/fs_vol.c **** *
 248:rtos/uC-FS/Source/fs_vol.c **** * Description : Invalidate cache on a volume.
 249:rtos/uC-FS/Source/fs_vol.c **** *
 250:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
 251:rtos/uC-FS/Source/fs_vol.c **** *
 252:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 253:rtos/uC-FS/Source/fs_vol.c **** *
 254:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE               Cache invalidated.
 255:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL          Argument 'name_vol' passed a NULL pointer
 256:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_CHNGD          Device has changed.
 257:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NO_CACHE       No cache assigned to volume.
 258:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN       Volume not open.
ARM GAS  /tmp/ccvXhXom.s 			page 6


 259:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_MOUNTED    Volume not mounted.
 260:rtos/uC-FS/Source/fs_vol.c **** *
 261:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
 262:rtos/uC-FS/Source/fs_vol.c **** *
 263:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
 264:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 265:rtos/uC-FS/Source/fs_vol.c **** */
 266:rtos/uC-FS/Source/fs_vol.c **** 
 267:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT
 268:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_CacheInvalidate (CPU_CHAR  *name_vol,
 269:rtos/uC-FS/Source/fs_vol.c ****                              FS_ERR    *p_err)
 270:rtos/uC-FS/Source/fs_vol.c **** {
 271:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 272:rtos/uC-FS/Source/fs_vol.c **** 
 273:rtos/uC-FS/Source/fs_vol.c **** 
 274:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 275:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 276:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 277:rtos/uC-FS/Source/fs_vol.c ****     }
 278:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 279:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 280:rtos/uC-FS/Source/fs_vol.c ****         return;
 281:rtos/uC-FS/Source/fs_vol.c ****     }
 282:rtos/uC-FS/Source/fs_vol.c **** #endif
 283:rtos/uC-FS/Source/fs_vol.c **** 
 284:rtos/uC-FS/Source/fs_vol.c **** 
 285:rtos/uC-FS/Source/fs_vol.c **** 
 286:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 287:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_YES, p_err);     /* Vol MUST be mounted.            
 288:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 289:rtos/uC-FS/Source/fs_vol.c ****         return;
 290:rtos/uC-FS/Source/fs_vol.c ****     }
 291:rtos/uC-FS/Source/fs_vol.c **** 
 292:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->CacheAPI_Ptr == (FS_VOL_CACHE_API *)0) {
 293:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NO_CACHE;
 294:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 295:rtos/uC-FS/Source/fs_vol.c ****         return;
 296:rtos/uC-FS/Source/fs_vol.c ****     }
 297:rtos/uC-FS/Source/fs_vol.c **** 
 298:rtos/uC-FS/Source/fs_vol.c **** 
 299:rtos/uC-FS/Source/fs_vol.c **** 
 300:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- CLEAN CACHE
 301:rtos/uC-FS/Source/fs_vol.c ****     p_vol->CacheAPI_Ptr->Invalidate(p_vol, p_err);
 302:rtos/uC-FS/Source/fs_vol.c **** 
 303:rtos/uC-FS/Source/fs_vol.c **** 
 304:rtos/uC-FS/Source/fs_vol.c **** 
 305:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
 306:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
 307:rtos/uC-FS/Source/fs_vol.c **** }
 308:rtos/uC-FS/Source/fs_vol.c **** #endif
 309:rtos/uC-FS/Source/fs_vol.c **** 
 310:rtos/uC-FS/Source/fs_vol.c **** 
 311:rtos/uC-FS/Source/fs_vol.c **** /*
 312:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 313:rtos/uC-FS/Source/fs_vol.c **** *                                         FSVol_CacheFlush()
 314:rtos/uC-FS/Source/fs_vol.c **** *
 315:rtos/uC-FS/Source/fs_vol.c **** * Description : Flush cache on a volume.
ARM GAS  /tmp/ccvXhXom.s 			page 7


 316:rtos/uC-FS/Source/fs_vol.c **** *
 317:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
 318:rtos/uC-FS/Source/fs_vol.c **** *
 319:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will the receive the return error code from th
 320:rtos/uC-FS/Source/fs_vol.c **** *
 321:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                   Cache flushed.
 322:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL              Argument 'name_vol' passed a NULL poi
 323:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_CHNGD              Device has changed.
 324:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NO_CACHE           No cache assigned to volume.
 325:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN           Volume not open.
 326:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_MOUNTED        Volume not mounted.
 327:rtos/uC-FS/Source/fs_vol.c **** *
 328:rtos/uC-FS/Source/fs_vol.c **** *                                                             -------- RETURNED BY CACHE Flush() --
 329:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_SEC_NBR    Sector start or count invalid.
 330:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level formatte
 331:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_IO                 Device I/O error.
 332:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_TIMEOUT            Device timeout error.
 333:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_PRESENT        Device is not present.
 334:rtos/uC-FS/Source/fs_vol.c **** *
 335:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
 336:rtos/uC-FS/Source/fs_vol.c **** *
 337:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
 338:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 339:rtos/uC-FS/Source/fs_vol.c **** */
 340:rtos/uC-FS/Source/fs_vol.c **** 
 341:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT
 342:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_CacheFlush (CPU_CHAR  *name_vol,
 343:rtos/uC-FS/Source/fs_vol.c ****                         FS_ERR    *p_err)
 344:rtos/uC-FS/Source/fs_vol.c **** {
 345:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 346:rtos/uC-FS/Source/fs_vol.c **** 
 347:rtos/uC-FS/Source/fs_vol.c **** 
 348:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 349:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 350:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 351:rtos/uC-FS/Source/fs_vol.c ****     }
 352:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 353:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 354:rtos/uC-FS/Source/fs_vol.c ****         return;
 355:rtos/uC-FS/Source/fs_vol.c ****     }
 356:rtos/uC-FS/Source/fs_vol.c **** #endif
 357:rtos/uC-FS/Source/fs_vol.c **** 
 358:rtos/uC-FS/Source/fs_vol.c **** 
 359:rtos/uC-FS/Source/fs_vol.c **** 
 360:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 361:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_YES, p_err);     /* Vol MUST be mounted.            
 362:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 363:rtos/uC-FS/Source/fs_vol.c ****         return;
 364:rtos/uC-FS/Source/fs_vol.c ****     }
 365:rtos/uC-FS/Source/fs_vol.c **** 
 366:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->CacheAPI_Ptr == (FS_VOL_CACHE_API *)0) {
 367:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NO_CACHE;
 368:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 369:rtos/uC-FS/Source/fs_vol.c ****         return;
 370:rtos/uC-FS/Source/fs_vol.c ****     }
 371:rtos/uC-FS/Source/fs_vol.c **** 
 372:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 8


 373:rtos/uC-FS/Source/fs_vol.c **** 
 374:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- FLUSH CACHE
 375:rtos/uC-FS/Source/fs_vol.c ****     p_vol->CacheAPI_Ptr->Flush(p_vol, p_err);
 376:rtos/uC-FS/Source/fs_vol.c **** 
 377:rtos/uC-FS/Source/fs_vol.c **** 
 378:rtos/uC-FS/Source/fs_vol.c **** 
 379:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
 380:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
 381:rtos/uC-FS/Source/fs_vol.c **** }
 382:rtos/uC-FS/Source/fs_vol.c **** #endif
 383:rtos/uC-FS/Source/fs_vol.c **** 
 384:rtos/uC-FS/Source/fs_vol.c **** 
 385:rtos/uC-FS/Source/fs_vol.c **** /*
 386:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 387:rtos/uC-FS/Source/fs_vol.c **** *                                            FSVol_Close()
 388:rtos/uC-FS/Source/fs_vol.c **** *
 389:rtos/uC-FS/Source/fs_vol.c **** * Description : Close & free a volume.
 390:rtos/uC-FS/Source/fs_vol.c **** *
 391:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
 392:rtos/uC-FS/Source/fs_vol.c **** *
 393:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 394:rtos/uC-FS/Source/fs_vol.c **** *
 395:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE            Volume closed.
 396:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL       Argument 'name_vol' passed a NULL pointer.
 397:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN    Volume not open.
 398:rtos/uC-FS/Source/fs_vol.c **** *
 399:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
 400:rtos/uC-FS/Source/fs_vol.c **** *
 401:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
 402:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 403:rtos/uC-FS/Source/fs_vol.c **** */
 404:rtos/uC-FS/Source/fs_vol.c **** 
 405:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_Close (CPU_CHAR  *name_vol,
 406:rtos/uC-FS/Source/fs_vol.c ****                    FS_ERR    *p_err)
 407:rtos/uC-FS/Source/fs_vol.c **** {
 408:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 409:rtos/uC-FS/Source/fs_vol.c **** 
 410:rtos/uC-FS/Source/fs_vol.c **** 
 411:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 412:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 413:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 414:rtos/uC-FS/Source/fs_vol.c ****     }
 415:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 416:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 417:rtos/uC-FS/Source/fs_vol.c ****         return;
 418:rtos/uC-FS/Source/fs_vol.c ****     }
 419:rtos/uC-FS/Source/fs_vol.c **** #endif
 420:rtos/uC-FS/Source/fs_vol.c **** 
 421:rtos/uC-FS/Source/fs_vol.c **** 
 422:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 423:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_NO, p_err);      /* Vol may be unmounted.           
 424:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 425:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == DEF_NULL) {
 426:rtos/uC-FS/Source/fs_vol.c ****         return;
 427:rtos/uC-FS/Source/fs_vol.c ****     }
 428:rtos/uC-FS/Source/fs_vol.c **** 
 429:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* Check if files or directories ar
ARM GAS  /tmp/ccvXhXom.s 			page 9


 430:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->RefCnt > 2u) {
 431:rtos/uC-FS/Source/fs_vol.c **** 
 432:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 433:rtos/uC-FS/Source/fs_vol.c **** 
 434:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
 435:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->FileCnt > 0) {
 436:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_FILES_OPEN;
 437:rtos/uC-FS/Source/fs_vol.c ****         } else if (p_vol->DirCnt > 0) {
 438:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_DIRS_OPEN;
 439:rtos/uC-FS/Source/fs_vol.c ****         } else {
 440:rtos/uC-FS/Source/fs_vol.c **** #endif
 441:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_FILES_OPEN;
 442:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
 443:rtos/uC-FS/Source/fs_vol.c ****         }
 444:rtos/uC-FS/Source/fs_vol.c **** #endif
 445:rtos/uC-FS/Source/fs_vol.c **** 
 446:rtos/uC-FS/Source/fs_vol.c **** 
 447:rtos/uC-FS/Source/fs_vol.c ****         return;
 448:rtos/uC-FS/Source/fs_vol.c ****     }
 449:rtos/uC-FS/Source/fs_vol.c **** 
 450:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- UNMOUNT VOL
 451:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->State == FS_VOL_STATE_MOUNTED) {
 452:rtos/uC-FS/Source/fs_vol.c ****         FSSys_VolClose(p_vol);                                  /* Close vol.                      
 453:rtos/uC-FS/Source/fs_vol.c ****     }
 454:rtos/uC-FS/Source/fs_vol.c **** 
 455:rtos/uC-FS/Source/fs_vol.c ****     FSDev_VolRemove(p_vol->DevPtr, p_vol);
 456:rtos/uC-FS/Source/fs_vol.c ****     p_vol->State = FS_VOL_STATE_CLOSING;
 457:rtos/uC-FS/Source/fs_vol.c **** 
 458:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
 459:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
 460:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Release(p_vol);                                       /* Release vol ref init.           
 461:rtos/uC-FS/Source/fs_vol.c **** 
 462:rtos/uC-FS/Source/fs_vol.c ****    *p_err = FS_ERR_NONE;
 463:rtos/uC-FS/Source/fs_vol.c **** 
 464:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT                                  /* ------------------- DELETE CACHE
 465:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->CacheAPI_Ptr != (FS_VOL_CACHE_API *)0) {
 466:rtos/uC-FS/Source/fs_vol.c ****         p_vol->CacheAPI_Ptr->Del(p_vol,
 467:rtos/uC-FS/Source/fs_vol.c ****                                  p_err);
 468:rtos/uC-FS/Source/fs_vol.c ****     }
 469:rtos/uC-FS/Source/fs_vol.c **** #endif
 470:rtos/uC-FS/Source/fs_vol.c **** 
 471:rtos/uC-FS/Source/fs_vol.c **** }
 472:rtos/uC-FS/Source/fs_vol.c **** 
 473:rtos/uC-FS/Source/fs_vol.c **** 
 474:rtos/uC-FS/Source/fs_vol.c **** /*
 475:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 476:rtos/uC-FS/Source/fs_vol.c **** *                                             FSVol_Fmt()
 477:rtos/uC-FS/Source/fs_vol.c **** *
 478:rtos/uC-FS/Source/fs_vol.c **** * Description : Format a volume.
 479:rtos/uC-FS/Source/fs_vol.c **** *
 480:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
 481:rtos/uC-FS/Source/fs_vol.c **** *
 482:rtos/uC-FS/Source/fs_vol.c **** *               p_fs_cfg    Pointer to file system-specific configuration information (see Note #2)
 483:rtos/uC-FS/Source/fs_vol.c **** *               --------    Validated by 'FSSys_Fmt()'.
 484:rtos/uC-FS/Source/fs_vol.c **** *
 485:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 486:rtos/uC-FS/Source/fs_vol.c **** *
ARM GAS  /tmp/ccvXhXom.s 			page 10


 487:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                Volume formatted successfully.
 488:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL           Argument 'name_vol' passed a NULL pointe
 489:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_DIRS_OPEN       Directories open on volume.
 490:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_FILES_OPEN      Files open on volume.
 491:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_INVALID_OP      Invalid operation on volume.
 492:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN        Volume not open.
 493:rtos/uC-FS/Source/fs_vol.c **** *
 494:rtos/uC-FS/Source/fs_vol.c **** *                                                          ---------- RETURNED BY FSSys_Fmt() -----
 495:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV                 Device access error.
 496:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_SIZE    Invalid device size.
 497:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_INVALID_SYS     Invalid file system parameters.
 498:rtos/uC-FS/Source/fs_vol.c **** *
 499:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
 500:rtos/uC-FS/Source/fs_vol.c **** *
 501:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) Function blocked if files or directories are open on the volume.  All files &
 502:rtos/uC-FS/Source/fs_vol.c **** *                   directories MUST be closed prior to formatting the volume.
 503:rtos/uC-FS/Source/fs_vol.c **** *
 504:rtos/uC-FS/Source/fs_vol.c **** *               (2) For any file system driver, if 'p_fs_cfg' is a pointer to NULL, then the defaul
 505:rtos/uC-FS/Source/fs_vol.c **** *                   configuration will be selected.  If non-NULL, the argument should be passed a p
 506:rtos/uC-FS/Source/fs_vol.c **** *                   to the appropriate configuration structure.
 507:rtos/uC-FS/Source/fs_vol.c **** *
 508:rtos/uC-FS/Source/fs_vol.c **** *               (3) Formatting invalidates cache contents.
 509:rtos/uC-FS/Source/fs_vol.c **** *
 510:rtos/uC-FS/Source/fs_vol.c **** *               (4) (a) If the volume format or subsequent volume open fails with an invalid system
 511:rtos/uC-FS/Source/fs_vol.c **** *                       size error, the volume is NOT closed, so that further formats can be attemp
 512:rtos/uC-FS/Source/fs_vol.c **** *                       with a different set of parameters.  See also 'FSVol_Open() Note #2'.
 513:rtos/uC-FS/Source/fs_vol.c **** *
 514:rtos/uC-FS/Source/fs_vol.c **** *                   (b) If the volume format for subsequent volume open fails with a device access 
 515:rtos/uC-FS/Source/fs_vol.c **** *                       the volume is NOT closed, so that further formats or volume operations can 
 516:rtos/uC-FS/Source/fs_vol.c **** *                       attempted once a working device is connected.  See also 'FSVol_Open() Note 
 517:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 518:rtos/uC-FS/Source/fs_vol.c **** */
 519:rtos/uC-FS/Source/fs_vol.c **** 
 520:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 521:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_Fmt (CPU_CHAR  *name_vol,
 522:rtos/uC-FS/Source/fs_vol.c ****                  void      *p_fs_cfg,
 523:rtos/uC-FS/Source/fs_vol.c ****                  FS_ERR    *p_err)
 524:rtos/uC-FS/Source/fs_vol.c **** {
 525:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 526:rtos/uC-FS/Source/fs_vol.c **** 
 527:rtos/uC-FS/Source/fs_vol.c **** 
 528:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 529:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 530:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 531:rtos/uC-FS/Source/fs_vol.c ****     }
 532:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 533:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 534:rtos/uC-FS/Source/fs_vol.c ****         return;
 535:rtos/uC-FS/Source/fs_vol.c ****     }
 536:rtos/uC-FS/Source/fs_vol.c **** #endif
 537:rtos/uC-FS/Source/fs_vol.c **** 
 538:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 539:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_NO, p_err);      /* Vol may be unmounted.           
 540:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 541:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 542:rtos/uC-FS/Source/fs_vol.c ****         return;
 543:rtos/uC-FS/Source/fs_vol.c ****     }
ARM GAS  /tmp/ccvXhXom.s 			page 11


 544:rtos/uC-FS/Source/fs_vol.c **** 
 545:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* Chk vol mode.                   
 546:rtos/uC-FS/Source/fs_vol.c ****     if (DEF_BIT_IS_CLR(p_vol->AccessMode, FS_VOL_ACCESS_MODE_WR) == DEF_YES) {
 547:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 548:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
 549:rtos/uC-FS/Source/fs_vol.c ****         return;
 550:rtos/uC-FS/Source/fs_vol.c ****     }
 551:rtos/uC-FS/Source/fs_vol.c **** 
 552:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->DevPtr->State != FS_DEV_STATE_LOW_FMT_VALID) {   /* Chk if dev present & low fmt'd. 
 553:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 554:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV;
 555:rtos/uC-FS/Source/fs_vol.c ****         return;
 556:rtos/uC-FS/Source/fs_vol.c ****     }
 557:rtos/uC-FS/Source/fs_vol.c **** 
 558:rtos/uC-FS/Source/fs_vol.c **** 
 559:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- UNMOUNT VOL
 560:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->State == FS_VOL_STATE_MOUNTED) {
 561:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->FileCnt != (FS_QTY)0) {                      /* See Notes #1.                   
 562:rtos/uC-FS/Source/fs_vol.c ****             FSVol_ReleaseUnlock(p_vol);
 563:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_FILES_OPEN;
 564:rtos/uC-FS/Source/fs_vol.c ****             return;
 565:rtos/uC-FS/Source/fs_vol.c ****         }
 566:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
 567:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->DirCnt != (FS_QTY)0) {                       /* See Notes #1.                   
 568:rtos/uC-FS/Source/fs_vol.c ****             FSVol_ReleaseUnlock(p_vol);
 569:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_DIRS_OPEN;
 570:rtos/uC-FS/Source/fs_vol.c ****             return;
 571:rtos/uC-FS/Source/fs_vol.c ****         }
 572:rtos/uC-FS/Source/fs_vol.c **** #endif
 573:rtos/uC-FS/Source/fs_vol.c ****     }
 574:rtos/uC-FS/Source/fs_vol.c **** 
 575:rtos/uC-FS/Source/fs_vol.c **** 
 576:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT                                  /* Flush & clean cache (see Notes #
 577:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->CacheAPI_Ptr != (FS_VOL_CACHE_API *)0) {
 578:rtos/uC-FS/Source/fs_vol.c ****         p_vol->CacheAPI_Ptr->Flush(p_vol, p_err);
 579:rtos/uC-FS/Source/fs_vol.c ****         p_vol->CacheAPI_Ptr->Invalidate(p_vol, p_err);
 580:rtos/uC-FS/Source/fs_vol.c ****     }
 581:rtos/uC-FS/Source/fs_vol.c **** #endif
 582:rtos/uC-FS/Source/fs_vol.c **** 
 583:rtos/uC-FS/Source/fs_vol.c **** 
 584:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->State == FS_VOL_STATE_MOUNTED) {
 585:rtos/uC-FS/Source/fs_vol.c ****         p_vol->State = FS_VOL_STATE_OPEN;
 586:rtos/uC-FS/Source/fs_vol.c **** 
 587:rtos/uC-FS/Source/fs_vol.c ****         FSSys_VolClose(p_vol);
 588:rtos/uC-FS/Source/fs_vol.c ****     }
 589:rtos/uC-FS/Source/fs_vol.c **** 
 590:rtos/uC-FS/Source/fs_vol.c **** 
 591:rtos/uC-FS/Source/fs_vol.c **** 
 592:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ---------------------- FMT VOL -
 593:rtos/uC-FS/Source/fs_vol.c ****     FSSys_VolFmt(p_vol,
 594:rtos/uC-FS/Source/fs_vol.c ****                  p_fs_cfg,
 595:rtos/uC-FS/Source/fs_vol.c ****                  p_vol->SecSize,
 596:rtos/uC-FS/Source/fs_vol.c ****                  p_vol->PartitionSize,
 597:rtos/uC-FS/Source/fs_vol.c ****                  p_err);
 598:rtos/uC-FS/Source/fs_vol.c **** 
 599:rtos/uC-FS/Source/fs_vol.c **** 
 600:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 12


 601:rtos/uC-FS/Source/fs_vol.c ****     switch (*p_err) {
 602:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:
 603:rtos/uC-FS/Source/fs_vol.c ****              FSSys_VolOpen(p_vol, p_err);
 604:rtos/uC-FS/Source/fs_vol.c ****              switch (*p_err) {
 605:rtos/uC-FS/Source/fs_vol.c ****                  case FS_ERR_NONE:
 606:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->State      = FS_VOL_STATE_MOUNTED;
 607:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->RefreshCnt = p_vol->DevPtr->RefreshCnt;
 608:rtos/uC-FS/Source/fs_vol.c ****                       break;
 609:rtos/uC-FS/Source/fs_vol.c **** 
 610:rtos/uC-FS/Source/fs_vol.c **** 
 611:rtos/uC-FS/Source/fs_vol.c ****                  case FS_ERR_VOL_INVALID_SYS:                   /* Allow user for fmt the vol later
 612:rtos/uC-FS/Source/fs_vol.c ****                      *p_err = FS_ERR_PARTITION_NOT_FOUND;
 613:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->State = FS_VOL_STATE_PRESENT;
 614:rtos/uC-FS/Source/fs_vol.c ****                       break;
 615:rtos/uC-FS/Source/fs_vol.c **** 
 616:rtos/uC-FS/Source/fs_vol.c **** 
 617:rtos/uC-FS/Source/fs_vol.c ****                  case FS_ERR_DEV:                               /* Allow dev to be conn'd later (se
 618:rtos/uC-FS/Source/fs_vol.c ****                  default:
 619:rtos/uC-FS/Source/fs_vol.c ****                       FSVol_ReleaseUnlock(p_vol);
 620:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->State = FS_VOL_STATE_OPEN;
 621:rtos/uC-FS/Source/fs_vol.c ****                       return;
 622:rtos/uC-FS/Source/fs_vol.c ****              }
 623:rtos/uC-FS/Source/fs_vol.c ****              break;
 624:rtos/uC-FS/Source/fs_vol.c **** 
 625:rtos/uC-FS/Source/fs_vol.c **** 
 626:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_VOL_INVALID_SYS:                            /* Allow user for fmt the vol later
 627:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV_INVALID_SIZE:
 628:rtos/uC-FS/Source/fs_vol.c ****              FSVol_ReleaseUnlock(p_vol);
 629:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_PARTITION_NOT_FOUND;
 630:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_PRESENT;
 631:rtos/uC-FS/Source/fs_vol.c ****              return;
 632:rtos/uC-FS/Source/fs_vol.c **** 
 633:rtos/uC-FS/Source/fs_vol.c **** 
 634:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV:                                         /* Allow dev to be conn'd later (s
 635:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV_INVALID_LOW_FMT:
 636:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV_IO:
 637:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV_TIMEOUT:
 638:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV_NOT_PRESENT:
 639:rtos/uC-FS/Source/fs_vol.c ****         default:
 640:rtos/uC-FS/Source/fs_vol.c ****              FSVol_ReleaseUnlock(p_vol);
 641:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_OPEN;
 642:rtos/uC-FS/Source/fs_vol.c ****              return;
 643:rtos/uC-FS/Source/fs_vol.c ****     }
 644:rtos/uC-FS/Source/fs_vol.c **** 
 645:rtos/uC-FS/Source/fs_vol.c **** 
 646:rtos/uC-FS/Source/fs_vol.c **** 
 647:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
 648:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
 649:rtos/uC-FS/Source/fs_vol.c **** }
 650:rtos/uC-FS/Source/fs_vol.c **** #endif
 651:rtos/uC-FS/Source/fs_vol.c **** 
 652:rtos/uC-FS/Source/fs_vol.c **** 
 653:rtos/uC-FS/Source/fs_vol.c **** /*
 654:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 655:rtos/uC-FS/Source/fs_vol.c **** *                                          FSVol_IsMounted()
 656:rtos/uC-FS/Source/fs_vol.c **** *
 657:rtos/uC-FS/Source/fs_vol.c **** * Description : Determine whether a volume is mounted.
ARM GAS  /tmp/ccvXhXom.s 			page 13


 658:rtos/uC-FS/Source/fs_vol.c **** *
 659:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
 660:rtos/uC-FS/Source/fs_vol.c **** *
 661:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : DEF_YES if the volume is     open &  is     mounted.
 662:rtos/uC-FS/Source/fs_vol.c **** *               DEF_NO  if the volume is not open or is not mounted.
 663:rtos/uC-FS/Source/fs_vol.c **** *
 664:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
 665:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 666:rtos/uC-FS/Source/fs_vol.c **** */
 667:rtos/uC-FS/Source/fs_vol.c **** 
 668:rtos/uC-FS/Source/fs_vol.c **** CPU_BOOLEAN  FSVol_IsMounted (CPU_CHAR  *name_vol)
 669:rtos/uC-FS/Source/fs_vol.c **** {
 670:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 671:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR   err;
 672:rtos/uC-FS/Source/fs_vol.c **** 
 673:rtos/uC-FS/Source/fs_vol.c **** 
 674:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 675:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 676:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 677:rtos/uC-FS/Source/fs_vol.c ****     }
 678:rtos/uC-FS/Source/fs_vol.c **** #endif
 679:rtos/uC-FS/Source/fs_vol.c **** 
 680:rtos/uC-FS/Source/fs_vol.c **** 
 681:rtos/uC-FS/Source/fs_vol.c **** 
 682:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 683:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_YES, &err);      /* Vol MUST be mounted.            
 684:rtos/uC-FS/Source/fs_vol.c ****     (void)err;                                                 /* Err ignored. Ret val chk'd instea
 685:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 686:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 687:rtos/uC-FS/Source/fs_vol.c ****     }
 688:rtos/uC-FS/Source/fs_vol.c **** 
 689:rtos/uC-FS/Source/fs_vol.c **** 
 690:rtos/uC-FS/Source/fs_vol.c **** 
 691:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
 692:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
 693:rtos/uC-FS/Source/fs_vol.c **** 
 694:rtos/uC-FS/Source/fs_vol.c ****     return (DEF_YES);
 695:rtos/uC-FS/Source/fs_vol.c **** }
 696:rtos/uC-FS/Source/fs_vol.c **** 
 697:rtos/uC-FS/Source/fs_vol.c **** 
 698:rtos/uC-FS/Source/fs_vol.c **** /*
 699:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 700:rtos/uC-FS/Source/fs_vol.c **** *                                          FSVol_LabelGet()
 701:rtos/uC-FS/Source/fs_vol.c **** *
 702:rtos/uC-FS/Source/fs_vol.c **** * Description : Get volume label.
 703:rtos/uC-FS/Source/fs_vol.c **** *
 704:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
 705:rtos/uC-FS/Source/fs_vol.c **** *
 706:rtos/uC-FS/Source/fs_vol.c **** *               label       String buffer that will receive volume label.
 707:rtos/uC-FS/Source/fs_vol.c **** *
 708:rtos/uC-FS/Source/fs_vol.c **** *               len_max     Size of string buffer (see Note #1).
 709:rtos/uC-FS/Source/fs_vol.c **** *
 710:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 711:rtos/uC-FS/Source/fs_vol.c **** *
 712:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                   Label gotten.
 713:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_CHNGD              Device has changed.
 714:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL              Argument 'name_vol' passed a NULL poi
ARM GAS  /tmp/ccvXhXom.s 			page 14


 715:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NULL_PTR               Argument 'label' passed a NULL pointe
 716:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_MOUNTED        Volume not mounted.
 717:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN           Volume not open.
 718:rtos/uC-FS/Source/fs_vol.c **** *
 719:rtos/uC-FS/Source/fs_vol.c **** *                                                             ----- RETURNED BY FSSys_VolLabelSet()
 720:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV                    Device access error.
 721:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_LABEL_NOT_FOUND    Volume label was not found.
 722:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_LABEL_TOO_LONG     Volume label is too long.
 723:rtos/uC-FS/Source/fs_vol.c **** *
 724:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
 725:rtos/uC-FS/Source/fs_vol.c **** *
 726:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) 'len_max' is the maximum length string that can be stored in the buffer 'label'
 727:rtos/uC-FS/Source/fs_vol.c **** *                   does NOT include the final NULL character.  The buffer 'label' MUST be of at le
 728:rtos/uC-FS/Source/fs_vol.c **** *                   'len_max' + 1 characters.
 729:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 730:rtos/uC-FS/Source/fs_vol.c **** */
 731:rtos/uC-FS/Source/fs_vol.c **** 
 732:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_LabelGet (CPU_CHAR    *name_vol,
 733:rtos/uC-FS/Source/fs_vol.c ****                       CPU_CHAR    *label,
 734:rtos/uC-FS/Source/fs_vol.c ****                       CPU_SIZE_T   len_max,
 735:rtos/uC-FS/Source/fs_vol.c ****                       FS_ERR      *p_err)
 736:rtos/uC-FS/Source/fs_vol.c **** {
 737:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
 738:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN   empty;
 739:rtos/uC-FS/Source/fs_vol.c ****     CPU_SIZE_T    pos;
 740:rtos/uC-FS/Source/fs_vol.c **** 
 741:rtos/uC-FS/Source/fs_vol.c **** 
 742:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 743:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 744:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 745:rtos/uC-FS/Source/fs_vol.c ****     }
 746:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 747:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 748:rtos/uC-FS/Source/fs_vol.c ****         return;
 749:rtos/uC-FS/Source/fs_vol.c ****     }
 750:rtos/uC-FS/Source/fs_vol.c ****     if (label == (CPU_CHAR *)0) {                               /* Validate label ptr.             
 751:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 752:rtos/uC-FS/Source/fs_vol.c ****         return;
 753:rtos/uC-FS/Source/fs_vol.c ****     }
 754:rtos/uC-FS/Source/fs_vol.c ****     if (len_max == 0u) {                                        /* Validate buf length.            
 755:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_INVALID_SIZE;
 756:rtos/uC-FS/Source/fs_vol.c ****         return;
 757:rtos/uC-FS/Source/fs_vol.c ****     }
 758:rtos/uC-FS/Source/fs_vol.c **** #endif
 759:rtos/uC-FS/Source/fs_vol.c **** 
 760:rtos/uC-FS/Source/fs_vol.c **** 
 761:rtos/uC-FS/Source/fs_vol.c **** 
 762:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 763:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_YES, p_err);     /* Vol MUST be mounted.            
 764:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 765:rtos/uC-FS/Source/fs_vol.c ****         return;
 766:rtos/uC-FS/Source/fs_vol.c ****     }
 767:rtos/uC-FS/Source/fs_vol.c **** 
 768:rtos/uC-FS/Source/fs_vol.c **** 
 769:rtos/uC-FS/Source/fs_vol.c ****     label[0] = (CPU_CHAR)ASCII_CHAR_NULL;
 770:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- GET VOL LABE
 771:rtos/uC-FS/Source/fs_vol.c ****     FSSys_VolLabelGet(p_vol,
ARM GAS  /tmp/ccvXhXom.s 			page 15


 772:rtos/uC-FS/Source/fs_vol.c ****                       label,
 773:rtos/uC-FS/Source/fs_vol.c ****                       len_max,
 774:rtos/uC-FS/Source/fs_vol.c ****                       p_err);
 775:rtos/uC-FS/Source/fs_vol.c **** 
 776:rtos/uC-FS/Source/fs_vol.c **** 
 777:rtos/uC-FS/Source/fs_vol.c ****     pos = (len_max > 12u) ? (11u) : (len_max - 1u);
 778:rtos/uC-FS/Source/fs_vol.c ****     empty = DEF_YES;
 779:rtos/uC-FS/Source/fs_vol.c ****     while(pos > 0u) {
 780:rtos/uC-FS/Source/fs_vol.c ****         pos--;
 781:rtos/uC-FS/Source/fs_vol.c ****         if(label[pos] != (CPU_CHAR)ASCII_CHAR_SPACE) {
 782:rtos/uC-FS/Source/fs_vol.c ****             label[pos + 1u] = (CPU_CHAR)ASCII_CHAR_NULL;
 783:rtos/uC-FS/Source/fs_vol.c ****             empty = DEF_NO;
 784:rtos/uC-FS/Source/fs_vol.c ****             break;
 785:rtos/uC-FS/Source/fs_vol.c ****         }
 786:rtos/uC-FS/Source/fs_vol.c ****     }
 787:rtos/uC-FS/Source/fs_vol.c **** 
 788:rtos/uC-FS/Source/fs_vol.c ****     if(empty == DEF_YES) {
 789:rtos/uC-FS/Source/fs_vol.c ****         label[0] = (CPU_CHAR)ASCII_CHAR_NULL;
 790:rtos/uC-FS/Source/fs_vol.c ****     }
 791:rtos/uC-FS/Source/fs_vol.c **** 
 792:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
 793:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
 794:rtos/uC-FS/Source/fs_vol.c **** }
 795:rtos/uC-FS/Source/fs_vol.c **** 
 796:rtos/uC-FS/Source/fs_vol.c **** 
 797:rtos/uC-FS/Source/fs_vol.c **** /*
 798:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 799:rtos/uC-FS/Source/fs_vol.c **** *                                          FSVol_LabelSet()
 800:rtos/uC-FS/Source/fs_vol.c **** *
 801:rtos/uC-FS/Source/fs_vol.c **** * Description : Set volume label.
 802:rtos/uC-FS/Source/fs_vol.c **** *
 803:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
 804:rtos/uC-FS/Source/fs_vol.c **** *
 805:rtos/uC-FS/Source/fs_vol.c **** *               label       Volume label.
 806:rtos/uC-FS/Source/fs_vol.c **** *
 807:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 808:rtos/uC-FS/Source/fs_vol.c **** *
 809:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                  Label set.
 810:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_CHNGD             Device has changed.
 811:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL             Argument 'name_vol' passed a NULL poin
 812:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NULL_PTR              Argument 'label' passed a NULL pointer
 813:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_MOUNTED       Volume not mounted.
 814:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN          Volume not open.
 815:rtos/uC-FS/Source/fs_vol.c **** *
 816:rtos/uC-FS/Source/fs_vol.c **** *                                                            ------ RETURNED BY FSSys_VolLabelSet()
 817:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV                   Device access error.
 818:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DIR_FULL              Directory is full (space could not be 
 819:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_FULL              Device is full (space could not be all
 820:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_ENTRY_CORRUPT         File system entry is corrupt.
 821:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_LABEL_INVALID     Volume label is invalid.
 822:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_LABEL_TOO_LONG    Volume label is too long.
 823:rtos/uC-FS/Source/fs_vol.c **** *
 824:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
 825:rtos/uC-FS/Source/fs_vol.c **** *
 826:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
 827:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 828:rtos/uC-FS/Source/fs_vol.c **** */
ARM GAS  /tmp/ccvXhXom.s 			page 16


 829:rtos/uC-FS/Source/fs_vol.c **** 
 830:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 831:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_LabelSet (CPU_CHAR  *name_vol,
 832:rtos/uC-FS/Source/fs_vol.c ****                       CPU_CHAR  *label,
 833:rtos/uC-FS/Source/fs_vol.c ****                       FS_ERR    *p_err)
 834:rtos/uC-FS/Source/fs_vol.c **** {
 835:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 836:rtos/uC-FS/Source/fs_vol.c **** 
 837:rtos/uC-FS/Source/fs_vol.c **** 
 838:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 839:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 840:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 841:rtos/uC-FS/Source/fs_vol.c ****     }
 842:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 843:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 844:rtos/uC-FS/Source/fs_vol.c ****         return;
 845:rtos/uC-FS/Source/fs_vol.c ****     }
 846:rtos/uC-FS/Source/fs_vol.c ****     if (label == (CPU_CHAR *)0) {                               /* Validate label ptr.             
 847:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 848:rtos/uC-FS/Source/fs_vol.c ****         return;
 849:rtos/uC-FS/Source/fs_vol.c ****     }
 850:rtos/uC-FS/Source/fs_vol.c **** #endif
 851:rtos/uC-FS/Source/fs_vol.c **** 
 852:rtos/uC-FS/Source/fs_vol.c **** 
 853:rtos/uC-FS/Source/fs_vol.c **** 
 854:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 855:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_YES, p_err);     /* Vol MUST be mounted.            
 856:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 857:rtos/uC-FS/Source/fs_vol.c ****         return;
 858:rtos/uC-FS/Source/fs_vol.c ****     }
 859:rtos/uC-FS/Source/fs_vol.c **** 
 860:rtos/uC-FS/Source/fs_vol.c **** 
 861:rtos/uC-FS/Source/fs_vol.c **** 
 862:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- SET VOL LABE
 863:rtos/uC-FS/Source/fs_vol.c ****     FSSys_VolLabelSet(p_vol,
 864:rtos/uC-FS/Source/fs_vol.c ****                       label,
 865:rtos/uC-FS/Source/fs_vol.c ****                       p_err);
 866:rtos/uC-FS/Source/fs_vol.c **** 
 867:rtos/uC-FS/Source/fs_vol.c **** 
 868:rtos/uC-FS/Source/fs_vol.c **** 
 869:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
 870:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
 871:rtos/uC-FS/Source/fs_vol.c **** }
 872:rtos/uC-FS/Source/fs_vol.c **** #endif
 873:rtos/uC-FS/Source/fs_vol.c **** 
 874:rtos/uC-FS/Source/fs_vol.c **** 
 875:rtos/uC-FS/Source/fs_vol.c **** /*
 876:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 877:rtos/uC-FS/Source/fs_vol.c **** *                                            FSVol_Open()
 878:rtos/uC-FS/Source/fs_vol.c **** *
 879:rtos/uC-FS/Source/fs_vol.c **** * Description : Open a volume & mount on the file system.
 880:rtos/uC-FS/Source/fs_vol.c **** *
 881:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol        Volume name.  See Note #1.
 882:rtos/uC-FS/Source/fs_vol.c **** *
 883:rtos/uC-FS/Source/fs_vol.c **** *               name_dev        Device name.
 884:rtos/uC-FS/Source/fs_vol.c **** *
 885:rtos/uC-FS/Source/fs_vol.c **** *               partition_nbr   Partition number.  If 0, the default partition will be mounted.
ARM GAS  /tmp/ccvXhXom.s 			page 17


 886:rtos/uC-FS/Source/fs_vol.c **** *
 887:rtos/uC-FS/Source/fs_vol.c **** *               p_err           Pointer to variable that will receive the return error code from th
 888:rtos/uC-FS/Source/fs_vol.c **** *
 889:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_NONE                   Volume opened.
 890:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_DEV_NOT_OPEN           Device is not open.
 891:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_NAME_NULL              Argument 'name_vol'/'name_dev' pa
 892:rtos/uC-FS/Source/fs_vol.c **** *                                                                     a NULL pointer.
 893:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_VOL_ALREADY_OPEN       Volume is already open.
 894:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_VOL_INVALID_NAME       Volume name invalid.
 895:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_VOL_NONE_AVAIL         No volumes available.
 896:rtos/uC-FS/Source/fs_vol.c **** *
 897:rtos/uC-FS/Source/fs_vol.c **** *                                                                 --- RETURNED BY FSVol_OpenLocked(
 898:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_PARTITION_NOT_FOUND    No partition found.
 899:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_DEV                    Device error.
 900:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level form
 901:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_DEV_IO                 Device I/O error.
 902:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_DEV_NOT_PRESENT        Device is not present.
 903:rtos/uC-FS/Source/fs_vol.c **** *                                   FS_ERR_DEV_TIMEOUT            Device timeout error.
 904:rtos/uC-FS/Source/fs_vol.c **** *
 905:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
 906:rtos/uC-FS/Source/fs_vol.c **** *
 907:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) (a) Full valid path names follow the pattern
 908:rtos/uC-FS/Source/fs_vol.c **** *
 909:rtos/uC-FS/Source/fs_vol.c **** *                            [<vol_name>:]<... Path ...><File>
 910:rtos/uC-FS/Source/fs_vol.c **** *
 911:rtos/uC-FS/Source/fs_vol.c **** *                       where   <vol_name>     is the name of the volume, identical to the string
 912:rtos/uC-FS/Source/fs_vol.c **** *                                              passed as 'name_vol' to this function..
 913:rtos/uC-FS/Source/fs_vol.c **** *
 914:rtos/uC-FS/Source/fs_vol.c **** *                               <... Path ...> is the file path, which MUST always begin AND end wi
 915:rtos/uC-FS/Source/fs_vol.c **** *
 916:rtos/uC-FS/Source/fs_vol.c **** *                               <File>         is the file (or leaf directory) name, including exte
 917:rtos/uC-FS/Source/fs_vol.c **** *
 918:rtos/uC-FS/Source/fs_vol.c **** *                       For example :
 919:rtos/uC-FS/Source/fs_vol.c **** *                                                      <vol_name>    <... Path ...>    <File>
 920:rtos/uC-FS/Source/fs_vol.c **** *                           nand:0:\dir1\file.txt      nand:0            \dir1\        file.txt
 921:rtos/uC-FS/Source/fs_vol.c **** *                           nand:0:\file.txt           nand:0            \             file.txt
 922:rtos/uC-FS/Source/fs_vol.c **** *                           nand:\dir1\file.txt        nand              \dir1\        file.txt
 923:rtos/uC-FS/Source/fs_vol.c **** *                           \dir1\file.txt                               \dir1\        file.txt
 924:rtos/uC-FS/Source/fs_vol.c **** *                           \file.txt                                    \             file.txt
 925:rtos/uC-FS/Source/fs_vol.c **** *
 926:rtos/uC-FS/Source/fs_vol.c **** *                   (b) For file- & directory-access functions ('FSFile_Open()', etc.), the volume
 927:rtos/uC-FS/Source/fs_vol.c **** *                       name MAY be omitted.  In this case, the volume used will be the FIRST volum
 928:rtos/uC-FS/Source/fs_vol.c **** *                       opened.
 929:rtos/uC-FS/Source/fs_vol.c **** *
 930:rtos/uC-FS/Source/fs_vol.c **** *                   (c) A name is invalid if ...
 931:rtos/uC-FS/Source/fs_vol.c **** *
 932:rtos/uC-FS/Source/fs_vol.c **** *                       (1) ... it cannot be parsed :
 933:rtos/uC-FS/Source/fs_vol.c **** *
 934:rtos/uC-FS/Source/fs_vol.c **** *                           (a) Volume name too long.
 935:rtos/uC-FS/Source/fs_vol.c **** *                           (b) First character is colon.
 936:rtos/uC-FS/Source/fs_vol.c **** *
 937:rtos/uC-FS/Source/fs_vol.c **** *                       (2) ... it includes text after a valid volume name.
 938:rtos/uC-FS/Source/fs_vol.c **** *
 939:rtos/uC-FS/Source/fs_vol.c **** *                       (3) ... it is an empty string.
 940:rtos/uC-FS/Source/fs_vol.c **** *
 941:rtos/uC-FS/Source/fs_vol.c **** *               (2) If FS_ERR_PARTITION_NOT_FOUND is returned, then no valid partition (or valid fi
 942:rtos/uC-FS/Source/fs_vol.c **** *                   system) was found on the device.  It is still placed into the list of used volu
ARM GAS  /tmp/ccvXhXom.s 			page 18


 943:rtos/uC-FS/Source/fs_vol.c **** *                   however, it cannot be addressed as a mounted volume (e.g., files cannot be acce
 944:rtos/uC-FS/Source/fs_vol.c **** *                   Thereafter, unless a new device is inserted, the only valid commands are :
 945:rtos/uC-FS/Source/fs_vol.c **** *
 946:rtos/uC-FS/Source/fs_vol.c **** *                   (a) 'FSVol_Fmt()',   which places a file system on the device instance;
 947:rtos/uC-FS/Source/fs_vol.c **** *                   (b) 'FSVol_Close()', which removes the entry from the list of volumes;
 948:rtos/uC-FS/Source/fs_vol.c **** *                   (c) 'FSVol_Query()', which returns information about the device.
 949:rtos/uC-FS/Source/fs_vol.c **** *
 950:rtos/uC-FS/Source/fs_vol.c **** *               (3) If FS_ERR_DEV, FS_ERR_DEV_NOT_PRESENT, FS_ERR_DEV_IO or FS_ERR_DEV_TIMEOUT is r
 951:rtos/uC-FS/Source/fs_vol.c **** *                   then the volume has been added to the file system, though the underlying device
 952:rtos/uC-FS/Source/fs_vol.c **** *                   probably not present.  The volume will need to be either closed & re-added, or
 953:rtos/uC-FS/Source/fs_vol.c **** *                   refreshed.
 954:rtos/uC-FS/Source/fs_vol.c **** *
 955:rtos/uC-FS/Source/fs_vol.c **** *               (4) #### Support read-only volume access mode.
 956:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
 957:rtos/uC-FS/Source/fs_vol.c **** */
 958:rtos/uC-FS/Source/fs_vol.c **** 
 959:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_Open (CPU_CHAR          *name_vol,
 960:rtos/uC-FS/Source/fs_vol.c ****                   CPU_CHAR          *name_dev,
 961:rtos/uC-FS/Source/fs_vol.c ****                   FS_PARTITION_NBR   partition_nbr,
 962:rtos/uC-FS/Source/fs_vol.c ****                   FS_ERR            *p_err)
 963:rtos/uC-FS/Source/fs_vol.c **** {
 964:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV       *p_dev;
 965:rtos/uC-FS/Source/fs_vol.c ****     CPU_CHAR     *name_file;
 966:rtos/uC-FS/Source/fs_vol.c ****     CPU_CHAR      name_vol_copy[FS_CFG_MAX_VOL_NAME_LEN + 1u];
 967:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
 968:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN   lock_success;
 969:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR        err;
 970:rtos/uC-FS/Source/fs_vol.c **** 
 971:rtos/uC-FS/Source/fs_vol.c **** 
 972:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 973:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 974:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 975:rtos/uC-FS/Source/fs_vol.c ****     }
 976:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 977:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 978:rtos/uC-FS/Source/fs_vol.c ****         return;
 979:rtos/uC-FS/Source/fs_vol.c ****     }
 980:rtos/uC-FS/Source/fs_vol.c ****     if (name_dev == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 981:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 982:rtos/uC-FS/Source/fs_vol.c ****         return;
 983:rtos/uC-FS/Source/fs_vol.c ****     }
 984:rtos/uC-FS/Source/fs_vol.c **** #endif
 985:rtos/uC-FS/Source/fs_vol.c **** 
 986:rtos/uC-FS/Source/fs_vol.c **** 
 987:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ PARSE VOL NAM
 988:rtos/uC-FS/Source/fs_vol.c ****     name_file = FS_PathParse(name_vol,                          /* Parse file name.                
 989:rtos/uC-FS/Source/fs_vol.c ****                              name_vol_copy,
 990:rtos/uC-FS/Source/fs_vol.c ****                              p_err);
 991:rtos/uC-FS/Source/fs_vol.c **** 
 992:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 993:rtos/uC-FS/Source/fs_vol.c ****         return;
 994:rtos/uC-FS/Source/fs_vol.c ****     }
 995:rtos/uC-FS/Source/fs_vol.c **** 
 996:rtos/uC-FS/Source/fs_vol.c ****     if (name_file == (CPU_CHAR *)0) {                           /* Name could not be parsed (see No
 997:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_VOL_INVALID_NAME;
 998:rtos/uC-FS/Source/fs_vol.c ****         return;
 999:rtos/uC-FS/Source/fs_vol.c ****     }
ARM GAS  /tmp/ccvXhXom.s 			page 19


1000:rtos/uC-FS/Source/fs_vol.c **** 
1001:rtos/uC-FS/Source/fs_vol.c ****     if (*name_file != (CPU_CHAR)ASCII_CHAR_NULL) {              /* Name inc's text after good vol n
1002:rtos/uC-FS/Source/fs_vol.c ****         *p_err = FS_ERR_VOL_INVALID_NAME;
1003:rtos/uC-FS/Source/fs_vol.c ****          return;
1004:rtos/uC-FS/Source/fs_vol.c ****     }
1005:rtos/uC-FS/Source/fs_vol.c **** 
1006:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol_copy[0] == (CPU_CHAR)ASCII_CHAR_NULL) {        /* Vol name is empty str (see Note 
1007:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_NAME;
1008:rtos/uC-FS/Source/fs_vol.c ****         return;
1009:rtos/uC-FS/Source/fs_vol.c ****     }
1010:rtos/uC-FS/Source/fs_vol.c **** 
1011:rtos/uC-FS/Source/fs_vol.c **** 
1012:rtos/uC-FS/Source/fs_vol.c **** 
1013:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ---------------------- GET DEV -
1014:rtos/uC-FS/Source/fs_vol.c ****     p_dev = FSDev_Acquire(name_dev);                            /* Acquire ref to dev.             
1015:rtos/uC-FS/Source/fs_vol.c ****     if (p_dev == (FS_DEV *)0) {
1016:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_NOT_OPEN;
1017:rtos/uC-FS/Source/fs_vol.c ****         return;
1018:rtos/uC-FS/Source/fs_vol.c ****     }
1019:rtos/uC-FS/Source/fs_vol.c **** 
1020:rtos/uC-FS/Source/fs_vol.c **** 
1021:rtos/uC-FS/Source/fs_vol.c **** 
1022:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ INIT VOL STRU
1023:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Lock(p_err);                                          /* Acquire FS lock.                
1024:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
1025:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
1026:rtos/uC-FS/Source/fs_vol.c ****         return;
1027:rtos/uC-FS/Source/fs_vol.c ****     }
1028:rtos/uC-FS/Source/fs_vol.c **** 
1029:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_ObjFindEx(&name_vol_copy[0],                  /* Chk if vol is open.             
1030:rtos/uC-FS/Source/fs_vol.c ****                              p_dev,
1031:rtos/uC-FS/Source/fs_vol.c ****                              partition_nbr);
1032:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol != (FS_VOL *)0) {
1033:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
1034:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
1035:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_ALREADY_OPEN;
1036:rtos/uC-FS/Source/fs_vol.c ****         return;
1037:rtos/uC-FS/Source/fs_vol.c ****     }
1038:rtos/uC-FS/Source/fs_vol.c **** 
1039:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_ObjGet();                                     /* Alloc vol.                      
1040:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
1041:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
1042:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
1043:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NONE_AVAIL;
1044:rtos/uC-FS/Source/fs_vol.c ****         return;
1045:rtos/uC-FS/Source/fs_vol.c ****     }
1046:rtos/uC-FS/Source/fs_vol.c **** 
1047:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionNbr = partition_nbr;
1048:rtos/uC-FS/Source/fs_vol.c ****     p_vol->State        = FS_VOL_STATE_OPENING;
1049:rtos/uC-FS/Source/fs_vol.c ****     p_vol->AccessMode   = FS_VOL_ACCESS_MODE_RDWR;              /* See Note #4.                    
1050:rtos/uC-FS/Source/fs_vol.c ****     p_vol->DevPtr       = p_dev;
1051:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefCnt       = 1u;
1052:rtos/uC-FS/Source/fs_vol.c ****     Str_Copy_N(p_vol->Name, name_vol_copy, FS_CFG_MAX_VOL_NAME_LEN);
1053:rtos/uC-FS/Source/fs_vol.c **** 
1054:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Unlock();                                             /* Release FS lock.                
1055:rtos/uC-FS/Source/fs_vol.c **** 
1056:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 20


1057:rtos/uC-FS/Source/fs_vol.c **** 
1058:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- VALIDATE DEV
1059:rtos/uC-FS/Source/fs_vol.c ****     FSDev_AccessLock(name_dev, 0u, p_err);                      /* Acquire dev access lock.        
1060:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
1061:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
1062:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
1063:rtos/uC-FS/Source/fs_vol.c ****         return;
1064:rtos/uC-FS/Source/fs_vol.c ****     }
1065:rtos/uC-FS/Source/fs_vol.c **** 
1066:rtos/uC-FS/Source/fs_vol.c ****     lock_success = FSDev_Lock(p_dev);                           /* Acquire dev lock.               
1067:rtos/uC-FS/Source/fs_vol.c ****     if (lock_success != DEF_YES) {
1068:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
1069:rtos/uC-FS/Source/fs_vol.c ****         FSDev_AccessUnlock(name_dev, &err);
1070:rtos/uC-FS/Source/fs_vol.c ****         (void)err;                                             /* Err ignored (Already in err state
1071:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
1072:rtos/uC-FS/Source/fs_vol.c ****         return;
1073:rtos/uC-FS/Source/fs_vol.c ****     }
1074:rtos/uC-FS/Source/fs_vol.c **** 
1075:rtos/uC-FS/Source/fs_vol.c ****     switch (p_dev->State) {
1076:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_OPEN:                                 /* Dev is not present or not low fm
1077:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_PRESENT:
1078:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_OPEN;                  /* ... so vol is not open          
1079:rtos/uC-FS/Source/fs_vol.c ****              FSDev_VolAdd(p_dev, p_vol);                        /* ... but still add vol to dev's l
1080:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_DEV_NOT_PRESENT;
1081:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Unlock(p_dev);
1082:rtos/uC-FS/Source/fs_vol.c ****              FSDev_AccessUnlock(name_dev, &err);
1083:rtos/uC-FS/Source/fs_vol.c ****              (void)err;                                        /* Err ignored (Already in err state
1084:rtos/uC-FS/Source/fs_vol.c ****              return;
1085:rtos/uC-FS/Source/fs_vol.c **** 
1086:rtos/uC-FS/Source/fs_vol.c **** 
1087:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_LOW_FMT_VALID:
1088:rtos/uC-FS/Source/fs_vol.c ****              break;
1089:rtos/uC-FS/Source/fs_vol.c **** 
1090:rtos/uC-FS/Source/fs_vol.c **** 
1091:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_CLOSED:                               /* Dev closing or not rdy ...      
1092:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_CLOSING:
1093:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_OPENING:
1094:rtos/uC-FS/Source/fs_vol.c ****         default:
1095:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_CLOSING;               /* ... so vol should not be opened.
1096:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_DEV_NOT_OPEN;
1097:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Unlock(p_dev);
1098:rtos/uC-FS/Source/fs_vol.c ****              FSDev_AccessUnlock(name_dev, &err);
1099:rtos/uC-FS/Source/fs_vol.c ****              (void)err;                                        /* Err ignored (Already in err state
1100:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Release(p_dev);
1101:rtos/uC-FS/Source/fs_vol.c ****              return;
1102:rtos/uC-FS/Source/fs_vol.c **** 
1103:rtos/uC-FS/Source/fs_vol.c ****     }
1104:rtos/uC-FS/Source/fs_vol.c **** 
1105:rtos/uC-FS/Source/fs_vol.c **** 
1106:rtos/uC-FS/Source/fs_vol.c **** 
1107:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* --------------------- OPEN VOL -
1108:rtos/uC-FS/Source/fs_vol.c ****     FSVol_OpenLocked(p_vol, p_err);                             /* Open vol.                       
1109:rtos/uC-FS/Source/fs_vol.c **** 
1110:rtos/uC-FS/Source/fs_vol.c ****     switch (*p_err) {
1111:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:                                       /* Vol is mounted.                 
1112:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_MOUNTED;
1113:rtos/uC-FS/Source/fs_vol.c ****              break;
ARM GAS  /tmp/ccvXhXom.s 			page 21


1114:rtos/uC-FS/Source/fs_vol.c **** 
1115:rtos/uC-FS/Source/fs_vol.c **** 
1116:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_PARTITION_NOT_FOUND:                        /* Partition/sys NOT valid ... vol 
1117:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_PRESENT;
1118:rtos/uC-FS/Source/fs_vol.c ****              break;
1119:rtos/uC-FS/Source/fs_vol.c **** 
1120:rtos/uC-FS/Source/fs_vol.c **** 
1121:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV:                                        /* Dev access error ... vol dev NOT
1122:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV_IO:
1123:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV_TIMEOUT:
1124:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV_NOT_PRESENT:
1125:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_OPEN;
1126:rtos/uC-FS/Source/fs_vol.c ****              break;
1127:rtos/uC-FS/Source/fs_vol.c **** 
1128:rtos/uC-FS/Source/fs_vol.c **** 
1129:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_PARTITION_INVALID_NBR:
1130:rtos/uC-FS/Source/fs_vol.c ****         default:
1131:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_CLOSING;
1132:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Unlock(p_dev);
1133:rtos/uC-FS/Source/fs_vol.c ****              FSDev_AccessUnlock(name_dev, &err);
1134:rtos/uC-FS/Source/fs_vol.c ****              (void)err;                                        /* Err ignored (Already in err state
1135:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Release(p_dev);
1136:rtos/uC-FS/Source/fs_vol.c ****              return;
1137:rtos/uC-FS/Source/fs_vol.c ****     }
1138:rtos/uC-FS/Source/fs_vol.c **** 
1139:rtos/uC-FS/Source/fs_vol.c ****     FSDev_VolAdd(p_dev, p_vol);                                 /* Add vol to dev's list.          
1140:rtos/uC-FS/Source/fs_vol.c **** 
1141:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT
1142:rtos/uC-FS/Source/fs_vol.c ****     p_vol->CacheDataPtr = (void         *)0;
1143:rtos/uC-FS/Source/fs_vol.c ****     p_vol->CacheAPI_Ptr = (FS_VOL_CACHE_API *)0;
1144:rtos/uC-FS/Source/fs_vol.c **** #endif
1145:rtos/uC-FS/Source/fs_vol.c **** 
1146:rtos/uC-FS/Source/fs_vol.c **** 
1147:rtos/uC-FS/Source/fs_vol.c **** 
1148:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
1149:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Unlock(p_vol);                                        /* Keep init ref.                  
1150:rtos/uC-FS/Source/fs_vol.c **** }
1151:rtos/uC-FS/Source/fs_vol.c **** 
1152:rtos/uC-FS/Source/fs_vol.c **** 
1153:rtos/uC-FS/Source/fs_vol.c **** 
1154:rtos/uC-FS/Source/fs_vol.c **** /*
1155:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1156:rtos/uC-FS/Source/fs_vol.c **** *                                            FSVol_Query()
1157:rtos/uC-FS/Source/fs_vol.c **** *
1158:rtos/uC-FS/Source/fs_vol.c **** * Description : Obtain information about a volume.
1159:rtos/uC-FS/Source/fs_vol.c **** *
1160:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
1161:rtos/uC-FS/Source/fs_vol.c **** *
1162:rtos/uC-FS/Source/fs_vol.c **** *               p_info      Pointer to structure that will receive volume information.
1163:rtos/uC-FS/Source/fs_vol.c **** *
1164:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1165:rtos/uC-FS/Source/fs_vol.c **** *
1166:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE            Volume information obtained.
1167:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV             Device access error.
1168:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL       Argument 'name_vol' passed a NULL pointer.
1169:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NULL_PTR        Argument 'p_info' passed a NULL pointer.
1170:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN    Volume not open.
ARM GAS  /tmp/ccvXhXom.s 			page 22


1171:rtos/uC-FS/Source/fs_vol.c **** *
1172:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
1173:rtos/uC-FS/Source/fs_vol.c **** *
1174:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
1175:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1176:rtos/uC-FS/Source/fs_vol.c **** */
1177:rtos/uC-FS/Source/fs_vol.c **** 
1178:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_Query (CPU_CHAR     *name_vol,
1179:rtos/uC-FS/Source/fs_vol.c ****                    FS_VOL_INFO  *p_info,
1180:rtos/uC-FS/Source/fs_vol.c ****                    FS_ERR       *p_err)
1181:rtos/uC-FS/Source/fs_vol.c **** {
1182:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV_INFO   dev_info;
1183:rtos/uC-FS/Source/fs_vol.c ****     FS_SYS_INFO   sys_info;
1184:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV       *p_dev;
1185:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
1186:rtos/uC-FS/Source/fs_vol.c **** 
1187:rtos/uC-FS/Source/fs_vol.c **** 
1188:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1189:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
1190:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
1191:rtos/uC-FS/Source/fs_vol.c ****     }
1192:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
1193:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
1194:rtos/uC-FS/Source/fs_vol.c ****         return;
1195:rtos/uC-FS/Source/fs_vol.c ****     }
1196:rtos/uC-FS/Source/fs_vol.c ****     if (p_info == (FS_VOL_INFO *)0) {                           /* Validate info ptr.              
1197:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
1198:rtos/uC-FS/Source/fs_vol.c ****         return;
1199:rtos/uC-FS/Source/fs_vol.c ****     }
1200:rtos/uC-FS/Source/fs_vol.c **** #endif
1201:rtos/uC-FS/Source/fs_vol.c **** 
1202:rtos/uC-FS/Source/fs_vol.c **** 
1203:rtos/uC-FS/Source/fs_vol.c **** 
1204:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* Clr info.                       
1205:rtos/uC-FS/Source/fs_vol.c ****     p_info->State         = FS_VOL_STATE_CLOSED;
1206:rtos/uC-FS/Source/fs_vol.c ****     p_info->DevState      = FS_DEV_STATE_CLOSED;
1207:rtos/uC-FS/Source/fs_vol.c ****     p_info->DevSize       = 0u;
1208:rtos/uC-FS/Source/fs_vol.c ****     p_info->DevSecSize    = 0u;
1209:rtos/uC-FS/Source/fs_vol.c ****     p_info->PartitionSize = 0u;
1210:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolBadSecCnt  = 0u;
1211:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolUsedSecCnt = 0u;
1212:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolFreeSecCnt = 0u;
1213:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolTotSecCnt  = 0u;
1214:rtos/uC-FS/Source/fs_vol.c **** 
1215:rtos/uC-FS/Source/fs_vol.c **** 
1216:rtos/uC-FS/Source/fs_vol.c **** 
1217:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
1218:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_NO, p_err);      /* Vol may be unmounted.           
1219:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
1220:rtos/uC-FS/Source/fs_vol.c ****         return;
1221:rtos/uC-FS/Source/fs_vol.c ****     }
1222:rtos/uC-FS/Source/fs_vol.c **** 
1223:rtos/uC-FS/Source/fs_vol.c **** 
1224:rtos/uC-FS/Source/fs_vol.c **** 
1225:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- GET DEV INF
1226:rtos/uC-FS/Source/fs_vol.c ****     p_dev = p_vol->DevPtr;
1227:rtos/uC-FS/Source/fs_vol.c ****     if ((p_vol->State == FS_VOL_STATE_PRESENT) ||
ARM GAS  /tmp/ccvXhXom.s 			page 23


1228:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_MOUNTED)) {
1229:rtos/uC-FS/Source/fs_vol.c ****         FSDev_QueryLocked( p_dev,
1230:rtos/uC-FS/Source/fs_vol.c ****                           &dev_info,
1231:rtos/uC-FS/Source/fs_vol.c ****                            p_err);
1232:rtos/uC-FS/Source/fs_vol.c ****         if (*p_err != FS_ERR_NONE) {
1233:rtos/uC-FS/Source/fs_vol.c ****             *p_err  = FS_ERR_DEV;
1234:rtos/uC-FS/Source/fs_vol.c ****              FSVol_ReleaseUnlock(p_vol);
1235:rtos/uC-FS/Source/fs_vol.c ****              return;
1236:rtos/uC-FS/Source/fs_vol.c ****         }
1237:rtos/uC-FS/Source/fs_vol.c **** 
1238:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevState   = dev_info.State;
1239:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevSize    = dev_info.Size;
1240:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevSecSize = dev_info.SecSize;
1241:rtos/uC-FS/Source/fs_vol.c **** 
1242:rtos/uC-FS/Source/fs_vol.c ****     } else {
1243:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevState   = p_dev->State;
1244:rtos/uC-FS/Source/fs_vol.c ****     }
1245:rtos/uC-FS/Source/fs_vol.c **** 
1246:rtos/uC-FS/Source/fs_vol.c **** 
1247:rtos/uC-FS/Source/fs_vol.c **** 
1248:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- GET SYS INF
1249:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->State == FS_VOL_STATE_MOUNTED) {                 /* Vol mounted ... get sys info.   
1250:rtos/uC-FS/Source/fs_vol.c ****         p_info->State = FS_VOL_STATE_MOUNTED;
1251:rtos/uC-FS/Source/fs_vol.c ****         FSSys_VolQuery( p_vol,
1252:rtos/uC-FS/Source/fs_vol.c ****                        &sys_info,
1253:rtos/uC-FS/Source/fs_vol.c ****                         p_err);
1254:rtos/uC-FS/Source/fs_vol.c ****         if (*p_err == FS_ERR_NONE) {
1255:rtos/uC-FS/Source/fs_vol.c ****             p_info->PartitionSize = p_vol->PartitionSize;
1256:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolBadSecCnt  = sys_info.BadSecCnt;
1257:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolFreeSecCnt = sys_info.FreeSecCnt;
1258:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolUsedSecCnt = sys_info.UsedSecCnt;
1259:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolTotSecCnt  = sys_info.TotSecCnt;
1260:rtos/uC-FS/Source/fs_vol.c ****         }
1261:rtos/uC-FS/Source/fs_vol.c **** 
1262:rtos/uC-FS/Source/fs_vol.c ****     } else {                                                    /* Vol not mounted.                
1263:rtos/uC-FS/Source/fs_vol.c ****         p_info->State         = p_vol->State;
1264:rtos/uC-FS/Source/fs_vol.c ****         p_info->PartitionSize = p_vol->PartitionSize;
1265:rtos/uC-FS/Source/fs_vol.c ****     }
1266:rtos/uC-FS/Source/fs_vol.c **** 
1267:rtos/uC-FS/Source/fs_vol.c **** 
1268:rtos/uC-FS/Source/fs_vol.c **** 
1269:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
1270:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
1271:rtos/uC-FS/Source/fs_vol.c **** }
1272:rtos/uC-FS/Source/fs_vol.c **** 
1273:rtos/uC-FS/Source/fs_vol.c **** 
1274:rtos/uC-FS/Source/fs_vol.c **** /*
1275:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1276:rtos/uC-FS/Source/fs_vol.c **** *                                             FSVol_Rd()
1277:rtos/uC-FS/Source/fs_vol.c **** *
1278:rtos/uC-FS/Source/fs_vol.c **** * Description : Read data from volume sector(s).
1279:rtos/uC-FS/Source/fs_vol.c **** *
1280:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
1281:rtos/uC-FS/Source/fs_vol.c **** *
1282:rtos/uC-FS/Source/fs_vol.c **** *               p_dest      Pointer to destination buffer.
1283:rtos/uC-FS/Source/fs_vol.c **** *
1284:rtos/uC-FS/Source/fs_vol.c **** *               start       Start sector of read.
ARM GAS  /tmp/ccvXhXom.s 			page 24


1285:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument checked in 'FSVol_RdLocked()'.
1286:rtos/uC-FS/Source/fs_vol.c **** *
1287:rtos/uC-FS/Source/fs_vol.c **** *               cnt         Number of sectors to read.
1288:rtos/uC-FS/Source/fs_vol.c **** *               ---         Argument checked in 'FSVol_RdLocked()'.
1289:rtos/uC-FS/Source/fs_vol.c **** *
1290:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1291:rtos/uC-FS/Source/fs_vol.c **** *
1292:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE               Sector(s) read.
1293:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV                Device access error.
1294:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_CHNGD          Device has changed.
1295:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL          Argument 'name_vol' passed a NULL pointer
1296:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NULL_PTR           Argument 'p_dest' passed a NULL pointer.
1297:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_MOUNTED    Volume not mounted.
1298:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN       Volume not open.
1299:rtos/uC-FS/Source/fs_vol.c **** *
1300:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
1301:rtos/uC-FS/Source/fs_vol.c **** *
1302:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
1303:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1304:rtos/uC-FS/Source/fs_vol.c **** */
1305:rtos/uC-FS/Source/fs_vol.c **** 
1306:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_Rd (CPU_CHAR    *name_vol,
1307:rtos/uC-FS/Source/fs_vol.c ****                 void        *p_dest,
1308:rtos/uC-FS/Source/fs_vol.c ****                 FS_SEC_NBR   start,
1309:rtos/uC-FS/Source/fs_vol.c ****                 FS_SEC_QTY   cnt,
1310:rtos/uC-FS/Source/fs_vol.c ****                 FS_ERR      *p_err)
1311:rtos/uC-FS/Source/fs_vol.c **** {
1312:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
1313:rtos/uC-FS/Source/fs_vol.c **** 
1314:rtos/uC-FS/Source/fs_vol.c **** 
1315:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1316:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
1317:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
1318:rtos/uC-FS/Source/fs_vol.c ****     }
1319:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
1320:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
1321:rtos/uC-FS/Source/fs_vol.c ****         return;
1322:rtos/uC-FS/Source/fs_vol.c ****     }
1323:rtos/uC-FS/Source/fs_vol.c ****     if (p_dest == (void *)0) {                                  /* Validate dest ptr.              
1324:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
1325:rtos/uC-FS/Source/fs_vol.c ****         return;
1326:rtos/uC-FS/Source/fs_vol.c ****     }
1327:rtos/uC-FS/Source/fs_vol.c **** #endif
1328:rtos/uC-FS/Source/fs_vol.c **** 
1329:rtos/uC-FS/Source/fs_vol.c **** 
1330:rtos/uC-FS/Source/fs_vol.c **** 
1331:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
1332:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_YES, p_err);     /* Vol MUST be mounted.            
1333:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
1334:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
1335:rtos/uC-FS/Source/fs_vol.c ****         return;
1336:rtos/uC-FS/Source/fs_vol.c ****     }
1337:rtos/uC-FS/Source/fs_vol.c **** 
1338:rtos/uC-FS/Source/fs_vol.c **** 
1339:rtos/uC-FS/Source/fs_vol.c **** 
1340:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ---------------------- RD VOL --
1341:rtos/uC-FS/Source/fs_vol.c ****     FSVol_RdLocked(p_vol,
ARM GAS  /tmp/ccvXhXom.s 			page 25


1342:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
1343:rtos/uC-FS/Source/fs_vol.c ****                    start,
1344:rtos/uC-FS/Source/fs_vol.c ****                    cnt,
1345:rtos/uC-FS/Source/fs_vol.c ****                    p_err);
1346:rtos/uC-FS/Source/fs_vol.c **** 
1347:rtos/uC-FS/Source/fs_vol.c **** 
1348:rtos/uC-FS/Source/fs_vol.c **** 
1349:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
1350:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
1351:rtos/uC-FS/Source/fs_vol.c **** }
1352:rtos/uC-FS/Source/fs_vol.c **** 
1353:rtos/uC-FS/Source/fs_vol.c **** 
1354:rtos/uC-FS/Source/fs_vol.c **** /*
1355:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1356:rtos/uC-FS/Source/fs_vol.c **** *                                             FSVol_Refresh()
1357:rtos/uC-FS/Source/fs_vol.c **** *
1358:rtos/uC-FS/Source/fs_vol.c **** * Description : Refresh a volume.
1359:rtos/uC-FS/Source/fs_vol.c **** *
1360:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
1361:rtos/uC-FS/Source/fs_vol.c **** *
1362:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1363:rtos/uC-FS/Source/fs_vol.c **** *
1364:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                    Device refreshed.
1365:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL               Argument 'name_vol' passed a NULL po
1366:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_OPEN            Device is not open.
1367:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_VOL_OPEN            Volume open on device.
1368:rtos/uC-FS/Source/fs_vol.c **** *
1369:rtos/uC-FS/Source/fs_vol.c **** *                                                              ---------- FSDev_RefreshLocked() ---
1370:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_SEC_SIZE    Invalid device sector size.
1371:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_SIZE        Invalid device size.
1372:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_UNKNOWN             Unknown device error.
1373:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_UNIT_NBR    Device unit number is invalid.
1374:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_IO                  Device I/O error.
1375:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_PRESENT         Device is not present.
1376:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_TIMEOUT             Device timeout.
1377:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_OS_LOCK                 OS Lock NOT acquired.
1378:rtos/uC-FS/Source/fs_vol.c **** *
1379:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : DEF_YES, if volume has     changed.
1380:rtos/uC-FS/Source/fs_vol.c **** *               DEF_NO,  if volume has NOT changed.
1381:rtos/uC-FS/Source/fs_vol.c **** *
1382:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) If device has changed, all volumes open on the device must be refreshed & all f
1383:rtos/uC-FS/Source/fs_vol.c **** *                   closed and reopened.
1384:rtos/uC-FS/Source/fs_vol.c **** *
1385:rtos/uC-FS/Source/fs_vol.c **** *               (2) Errors resulting from device access are handled in 'FSDev_WrLocked()'.
1386:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1387:rtos/uC-FS/Source/fs_vol.c **** */
1388:rtos/uC-FS/Source/fs_vol.c **** 
1389:rtos/uC-FS/Source/fs_vol.c **** CPU_BOOLEAN  FSVol_Refresh (CPU_CHAR  *name_vol,
1390:rtos/uC-FS/Source/fs_vol.c ****                             FS_ERR    *p_err)
1391:rtos/uC-FS/Source/fs_vol.c **** {
1392:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
1393:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN   chngd;
1394:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN   vol_lock_ok;
1395:rtos/uC-FS/Source/fs_vol.c **** 
1396:rtos/uC-FS/Source/fs_vol.c **** 
1397:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1398:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
ARM GAS  /tmp/ccvXhXom.s 			page 26


1399:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(DEF_NO);
1400:rtos/uC-FS/Source/fs_vol.c ****     }
1401:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
1402:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
1403:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
1404:rtos/uC-FS/Source/fs_vol.c ****     }
1405:rtos/uC-FS/Source/fs_vol.c **** #endif
1406:rtos/uC-FS/Source/fs_vol.c **** 
1407:rtos/uC-FS/Source/fs_vol.c **** 
1408:rtos/uC-FS/Source/fs_vol.c **** 
1409:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
1410:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_Acquire(name_vol, p_err);
1411:rtos/uC-FS/Source/fs_vol.c **** 
1412:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {                                 /* Rtn err if vol not found.       
1413:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NOT_OPEN;
1414:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
1415:rtos/uC-FS/Source/fs_vol.c ****     }
1416:rtos/uC-FS/Source/fs_vol.c **** 
1417:rtos/uC-FS/Source/fs_vol.c ****     vol_lock_ok = FSVol_Lock(p_vol);
1418:rtos/uC-FS/Source/fs_vol.c ****     if (vol_lock_ok == DEF_NO) {
1419:rtos/uC-FS/Source/fs_vol.c ****         FSVol_Release(p_vol);
1420:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
1421:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
1422:rtos/uC-FS/Source/fs_vol.c ****     }
1423:rtos/uC-FS/Source/fs_vol.c **** 
1424:rtos/uC-FS/Source/fs_vol.c **** 
1425:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- VALIDATE VOL
1426:rtos/uC-FS/Source/fs_vol.c ****     switch (p_vol->State) {
1427:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
1428:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_PRESENT:
1429:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_MOUNTED:
1430:rtos/uC-FS/Source/fs_vol.c ****              break;
1431:rtos/uC-FS/Source/fs_vol.c **** 
1432:rtos/uC-FS/Source/fs_vol.c **** 
1433:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_CLOSED:
1434:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_CLOSING:
1435:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPENING:
1436:rtos/uC-FS/Source/fs_vol.c ****         default:
1437:rtos/uC-FS/Source/fs_vol.c ****              FSVol_ReleaseUnlock(p_vol);
1438:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_VOL_NOT_OPEN;
1439:rtos/uC-FS/Source/fs_vol.c ****              return (DEF_NO);
1440:rtos/uC-FS/Source/fs_vol.c ****     }
1441:rtos/uC-FS/Source/fs_vol.c **** 
1442:rtos/uC-FS/Source/fs_vol.c **** 
1443:rtos/uC-FS/Source/fs_vol.c **** 
1444:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- REFRESH VOL
1445:rtos/uC-FS/Source/fs_vol.c ****    (void)FSDev_RefreshLocked(p_vol->DevPtr, p_err);             /* Refresh dev.                    
1446:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
1447:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
1448:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
1449:rtos/uC-FS/Source/fs_vol.c ****     }
1450:rtos/uC-FS/Source/fs_vol.c **** 
1451:rtos/uC-FS/Source/fs_vol.c ****     chngd = FSVol_RefreshLocked(p_vol, p_err);                  /* Refresh vol.                    
1452:rtos/uC-FS/Source/fs_vol.c **** 
1453:rtos/uC-FS/Source/fs_vol.c **** 
1454:rtos/uC-FS/Source/fs_vol.c **** 
1455:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
ARM GAS  /tmp/ccvXhXom.s 			page 27


1456:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
1457:rtos/uC-FS/Source/fs_vol.c **** 
1458:rtos/uC-FS/Source/fs_vol.c ****     return (chngd);
1459:rtos/uC-FS/Source/fs_vol.c **** }
1460:rtos/uC-FS/Source/fs_vol.c **** 
1461:rtos/uC-FS/Source/fs_vol.c **** 
1462:rtos/uC-FS/Source/fs_vol.c **** /*
1463:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1464:rtos/uC-FS/Source/fs_vol.c **** *                                             FSVol_Wr()
1465:rtos/uC-FS/Source/fs_vol.c **** *
1466:rtos/uC-FS/Source/fs_vol.c **** * Description : Write data to volume sector(s).
1467:rtos/uC-FS/Source/fs_vol.c **** *
1468:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
1469:rtos/uC-FS/Source/fs_vol.c **** *
1470:rtos/uC-FS/Source/fs_vol.c **** *               p_src       Pointer to source buffer.
1471:rtos/uC-FS/Source/fs_vol.c **** *
1472:rtos/uC-FS/Source/fs_vol.c **** *               start       Start sector of read.
1473:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument checked in 'FSVol_WrLocked()'.
1474:rtos/uC-FS/Source/fs_vol.c **** *
1475:rtos/uC-FS/Source/fs_vol.c **** *               cnt         Number of sectors to read.
1476:rtos/uC-FS/Source/fs_vol.c **** *               ---         Argument checked in 'FSVol_WrLocked()'.
1477:rtos/uC-FS/Source/fs_vol.c **** *
1478:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1479:rtos/uC-FS/Source/fs_vol.c **** *
1480:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE               Sector(s) written.
1481:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV                Device access error.
1482:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_CHNGD          Device has changed.
1483:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NAME_NULL          Argument 'name_vol' passed a NULL pointer
1484:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NULL_PTR           Argument 'p_src' passed a NULL pointer.
1485:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_INVALID_OP     Invalid operation on volume.
1486:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_MOUNTED    Volume not mounted.
1487:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN       Volume not open.
1488:rtos/uC-FS/Source/fs_vol.c **** *
1489:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
1490:rtos/uC-FS/Source/fs_vol.c **** *
1491:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
1492:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1493:rtos/uC-FS/Source/fs_vol.c **** */
1494:rtos/uC-FS/Source/fs_vol.c **** 
1495:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1496:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_Wr (CPU_CHAR    *name_vol,
1497:rtos/uC-FS/Source/fs_vol.c ****                 void        *p_src,
1498:rtos/uC-FS/Source/fs_vol.c ****                 FS_SEC_NBR   start,
1499:rtos/uC-FS/Source/fs_vol.c ****                 FS_SEC_QTY   cnt,
1500:rtos/uC-FS/Source/fs_vol.c ****                 FS_ERR      *p_err)
1501:rtos/uC-FS/Source/fs_vol.c **** {
1502:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
1503:rtos/uC-FS/Source/fs_vol.c **** 
1504:rtos/uC-FS/Source/fs_vol.c **** 
1505:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1506:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
1507:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
1508:rtos/uC-FS/Source/fs_vol.c ****     }
1509:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
1510:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
1511:rtos/uC-FS/Source/fs_vol.c ****         return;
1512:rtos/uC-FS/Source/fs_vol.c ****     }
ARM GAS  /tmp/ccvXhXom.s 			page 28


1513:rtos/uC-FS/Source/fs_vol.c ****     if (p_src == (void *)0) {                                   /* Validate src ptr.               
1514:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
1515:rtos/uC-FS/Source/fs_vol.c ****         return;
1516:rtos/uC-FS/Source/fs_vol.c ****     }
1517:rtos/uC-FS/Source/fs_vol.c **** #endif
1518:rtos/uC-FS/Source/fs_vol.c **** 
1519:rtos/uC-FS/Source/fs_vol.c **** 
1520:rtos/uC-FS/Source/fs_vol.c **** 
1521:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
1522:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_YES, p_err);     /* Vol MUST be mounted.            
1523:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
1524:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
1525:rtos/uC-FS/Source/fs_vol.c ****         return;
1526:rtos/uC-FS/Source/fs_vol.c ****     }
1527:rtos/uC-FS/Source/fs_vol.c **** 
1528:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* Chk vol mode.                   
1529:rtos/uC-FS/Source/fs_vol.c ****     if (DEF_BIT_IS_CLR(p_vol->AccessMode, FS_VOL_ACCESS_MODE_WR) == DEF_YES) {
1530:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
1531:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
1532:rtos/uC-FS/Source/fs_vol.c ****         return;
1533:rtos/uC-FS/Source/fs_vol.c ****     }
1534:rtos/uC-FS/Source/fs_vol.c **** 
1535:rtos/uC-FS/Source/fs_vol.c **** 
1536:rtos/uC-FS/Source/fs_vol.c **** 
1537:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ---------------------- WR VOL --
1538:rtos/uC-FS/Source/fs_vol.c ****     FSVol_WrLocked(p_vol,
1539:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
1540:rtos/uC-FS/Source/fs_vol.c ****                    start,
1541:rtos/uC-FS/Source/fs_vol.c ****                    cnt,
1542:rtos/uC-FS/Source/fs_vol.c ****                    p_err);
1543:rtos/uC-FS/Source/fs_vol.c **** 
1544:rtos/uC-FS/Source/fs_vol.c **** 
1545:rtos/uC-FS/Source/fs_vol.c **** 
1546:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE VOL LO
1547:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ReleaseUnlock(p_vol);
1548:rtos/uC-FS/Source/fs_vol.c **** }
1549:rtos/uC-FS/Source/fs_vol.c **** #endif
1550:rtos/uC-FS/Source/fs_vol.c **** 
1551:rtos/uC-FS/Source/fs_vol.c **** 
1552:rtos/uC-FS/Source/fs_vol.c **** /*
1553:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1554:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1555:rtos/uC-FS/Source/fs_vol.c **** *                                     VOLUME MANAGEMENT FUNCTIONS
1556:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1557:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1558:rtos/uC-FS/Source/fs_vol.c **** */
1559:rtos/uC-FS/Source/fs_vol.c **** 
1560:rtos/uC-FS/Source/fs_vol.c **** /*
1561:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1562:rtos/uC-FS/Source/fs_vol.c **** *                                          FSVol_GetVolCnt()
1563:rtos/uC-FS/Source/fs_vol.c **** *
1564:rtos/uC-FS/Source/fs_vol.c **** * Description : Get the number of open volumes.
1565:rtos/uC-FS/Source/fs_vol.c **** *
1566:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : none.
1567:rtos/uC-FS/Source/fs_vol.c **** *
1568:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : The number of open volumes.
1569:rtos/uC-FS/Source/fs_vol.c **** *
ARM GAS  /tmp/ccvXhXom.s 			page 29


1570:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
1571:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1572:rtos/uC-FS/Source/fs_vol.c **** */
1573:rtos/uC-FS/Source/fs_vol.c **** 
1574:rtos/uC-FS/Source/fs_vol.c **** FS_QTY  FSVol_GetVolCnt (void)
1575:rtos/uC-FS/Source/fs_vol.c **** {
1576:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY  vol_cnt;
1577:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR  err;
1578:rtos/uC-FS/Source/fs_vol.c **** 
1579:rtos/uC-FS/Source/fs_vol.c **** 
1580:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ ACQUIRE FS LO
1581:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Lock(&err);
1582:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
1583:rtos/uC-FS/Source/fs_vol.c ****         return (0u);
1584:rtos/uC-FS/Source/fs_vol.c ****     }
1585:rtos/uC-FS/Source/fs_vol.c **** 
1586:rtos/uC-FS/Source/fs_vol.c **** 
1587:rtos/uC-FS/Source/fs_vol.c **** 
1588:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- GET VOL CNT
1589:rtos/uC-FS/Source/fs_vol.c ****     vol_cnt = FSVol_Cnt;
1590:rtos/uC-FS/Source/fs_vol.c **** 
1591:rtos/uC-FS/Source/fs_vol.c **** 
1592:rtos/uC-FS/Source/fs_vol.c **** 
1593:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ RELEASE FS LO
1594:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Unlock();
1595:rtos/uC-FS/Source/fs_vol.c **** 
1596:rtos/uC-FS/Source/fs_vol.c ****     return (vol_cnt);
1597:rtos/uC-FS/Source/fs_vol.c **** }
1598:rtos/uC-FS/Source/fs_vol.c **** 
1599:rtos/uC-FS/Source/fs_vol.c **** 
1600:rtos/uC-FS/Source/fs_vol.c **** /*
1601:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1602:rtos/uC-FS/Source/fs_vol.c **** *                                        FSVol_GetVolCntMax()
1603:rtos/uC-FS/Source/fs_vol.c **** *
1604:rtos/uC-FS/Source/fs_vol.c **** * Description : Get the maximum possible number of open volumes.
1605:rtos/uC-FS/Source/fs_vol.c **** *
1606:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : none.
1607:rtos/uC-FS/Source/fs_vol.c **** *
1608:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : The maximum number of open volumes.
1609:rtos/uC-FS/Source/fs_vol.c **** *
1610:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
1611:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1612:rtos/uC-FS/Source/fs_vol.c **** */
1613:rtos/uC-FS/Source/fs_vol.c **** 
1614:rtos/uC-FS/Source/fs_vol.c **** FS_QTY  FSVol_GetVolCntMax (void)
1615:rtos/uC-FS/Source/fs_vol.c **** {
1616:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY  vol_cnt_max;
1617:rtos/uC-FS/Source/fs_vol.c **** 
1618:rtos/uC-FS/Source/fs_vol.c **** 
1619:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ GET VOL CNT M
1620:rtos/uC-FS/Source/fs_vol.c ****     vol_cnt_max = FSVol_VolCntMax;
1621:rtos/uC-FS/Source/fs_vol.c **** 
1622:rtos/uC-FS/Source/fs_vol.c ****     return (vol_cnt_max);
1623:rtos/uC-FS/Source/fs_vol.c **** }
1624:rtos/uC-FS/Source/fs_vol.c **** 
1625:rtos/uC-FS/Source/fs_vol.c **** 
1626:rtos/uC-FS/Source/fs_vol.c **** /*
ARM GAS  /tmp/ccvXhXom.s 			page 30


1627:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1628:rtos/uC-FS/Source/fs_vol.c **** *                                         FSVol_GetVolName()
1629:rtos/uC-FS/Source/fs_vol.c **** *
1630:rtos/uC-FS/Source/fs_vol.c **** * Description : Get name of nth open volume.
1631:rtos/uC-FS/Source/fs_vol.c **** *
1632:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : vol_nbr     Number of volume to get.
1633:rtos/uC-FS/Source/fs_vol.c **** *
1634:rtos/uC-FS/Source/fs_vol.c **** *               name_vol    String buffer that will receive the volume name (see Note #2).
1635:rtos/uC-FS/Source/fs_vol.c **** *
1636:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1637:rtos/uC-FS/Source/fs_vol.c **** *
1638:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_NONE                 Volume name obtained.
1639:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_NAME_NULL            Argument 'name_vol' passed a NULL pointer.
1640:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_POOL_FULL            ALL blocks already available in pool
1641:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_NULL_PTR             Argument 'p_pool' passed a NULL pointer.
1642:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_INVALID_TYPE         Invalid pool type.
1643:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_OS_LOCK              File system access NOT acquired.
1644:rtos/uC-FS/Source/fs_vol.c **** *
1645:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
1646:rtos/uC-FS/Source/fs_vol.c **** *
1647:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) 'name_vol' MUST be a character array of 'FS_CFG_MAX_VOL_NAME_LEN + 1' character
1648:rtos/uC-FS/Source/fs_vol.c **** *
1649:rtos/uC-FS/Source/fs_vol.c **** *               (2) If the volume does not exist 'name_vol' will receive an empty string.
1650:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1651:rtos/uC-FS/Source/fs_vol.c **** */
1652:rtos/uC-FS/Source/fs_vol.c **** 
1653:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_GetVolName (FS_QTY     vol_nbr,
1654:rtos/uC-FS/Source/fs_vol.c ****                         CPU_CHAR  *name_vol,
1655:rtos/uC-FS/Source/fs_vol.c ****                         FS_ERR    *p_err)
1656:rtos/uC-FS/Source/fs_vol.c **** {
1657:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_ix;
1658:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_cnt_cur;
1659:rtos/uC-FS/Source/fs_vol.c **** 
1660:rtos/uC-FS/Source/fs_vol.c **** 
1661:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1662:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
1663:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
1664:rtos/uC-FS/Source/fs_vol.c ****     }
1665:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
1666:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
1667:rtos/uC-FS/Source/fs_vol.c ****         return;
1668:rtos/uC-FS/Source/fs_vol.c ****     }
1669:rtos/uC-FS/Source/fs_vol.c **** #endif
1670:rtos/uC-FS/Source/fs_vol.c **** 
1671:rtos/uC-FS/Source/fs_vol.c ****    *p_err       = FS_ERR_NONE;
1672:rtos/uC-FS/Source/fs_vol.c ****     name_vol[0] = (CPU_CHAR)ASCII_CHAR_NULL;                    /* See Note #2.                    
1673:rtos/uC-FS/Source/fs_vol.c **** 
1674:rtos/uC-FS/Source/fs_vol.c **** 
1675:rtos/uC-FS/Source/fs_vol.c **** 
1676:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ ACQUIRE FS LO
1677:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Lock(p_err);
1678:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
1679:rtos/uC-FS/Source/fs_vol.c ****         return;
1680:rtos/uC-FS/Source/fs_vol.c ****     }
1681:rtos/uC-FS/Source/fs_vol.c **** 
1682:rtos/uC-FS/Source/fs_vol.c **** 
1683:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- GET VOL NAME
ARM GAS  /tmp/ccvXhXom.s 			page 31


1684:rtos/uC-FS/Source/fs_vol.c ****     vol_cnt_cur = 0u;
1685:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
1686:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
1687:rtos/uC-FS/Source/fs_vol.c ****             if (vol_cnt_cur == vol_nbr) {
1688:rtos/uC-FS/Source/fs_vol.c ****                 Str_Copy_N(name_vol, FSVol_Tbl[vol_ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
1689:rtos/uC-FS/Source/fs_vol.c ****                 break;
1690:rtos/uC-FS/Source/fs_vol.c ****             } else {
1691:rtos/uC-FS/Source/fs_vol.c ****                 vol_cnt_cur++;
1692:rtos/uC-FS/Source/fs_vol.c ****             }
1693:rtos/uC-FS/Source/fs_vol.c ****         }
1694:rtos/uC-FS/Source/fs_vol.c ****     }
1695:rtos/uC-FS/Source/fs_vol.c **** 
1696:rtos/uC-FS/Source/fs_vol.c **** 
1697:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ RELEASE FS LO
1698:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Unlock();
1699:rtos/uC-FS/Source/fs_vol.c **** }
1700:rtos/uC-FS/Source/fs_vol.c **** 
1701:rtos/uC-FS/Source/fs_vol.c **** 
1702:rtos/uC-FS/Source/fs_vol.c **** /*
1703:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1704:rtos/uC-FS/Source/fs_vol.c **** *                                       FSVol_GetDfltVolName()
1705:rtos/uC-FS/Source/fs_vol.c **** *
1706:rtos/uC-FS/Source/fs_vol.c **** * Description : Get name of the default volume.
1707:rtos/uC-FS/Source/fs_vol.c **** *
1708:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    String buffer that will receive the volume name (see Note #2).
1709:rtos/uC-FS/Source/fs_vol.c **** *
1710:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1711:rtos/uC-FS/Source/fs_vol.c **** *
1712:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_NONE                 Volume name obtained.
1713:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_NAME_NULL            Argument 'name_vol' passed a NULL pointer.
1714:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_POOL_FULL            ALL blocks already available in pool
1715:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_NULL_PTR             Argument 'p_pool' passed a NULL pointer.
1716:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_INVALID_TYPE         Invalid pool type.
1717:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_OS_LOCK              File system access NOT acquired.
1718:rtos/uC-FS/Source/fs_vol.c **** *
1719:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
1720:rtos/uC-FS/Source/fs_vol.c **** *
1721:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) 'name_vol' MUST be a character array of 'FS_CFG_MAX_VOL_NAME_LEN + 1' character
1722:rtos/uC-FS/Source/fs_vol.c **** *
1723:rtos/uC-FS/Source/fs_vol.c **** *               (2) If the volume does not exist 'name_vol' will receive an empty string.
1724:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1725:rtos/uC-FS/Source/fs_vol.c **** */
1726:rtos/uC-FS/Source/fs_vol.c **** 
1727:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_GetDfltVolName (CPU_CHAR  *name_vol,
1728:rtos/uC-FS/Source/fs_vol.c ****                             FS_ERR    *p_err)
1729:rtos/uC-FS/Source/fs_vol.c **** {
1730:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_ix;
1731:rtos/uC-FS/Source/fs_vol.c **** 
1732:rtos/uC-FS/Source/fs_vol.c **** 
1733:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1734:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
1735:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
1736:rtos/uC-FS/Source/fs_vol.c ****     }
1737:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
1738:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
1739:rtos/uC-FS/Source/fs_vol.c ****         return;
1740:rtos/uC-FS/Source/fs_vol.c ****     }
ARM GAS  /tmp/ccvXhXom.s 			page 32


1741:rtos/uC-FS/Source/fs_vol.c **** #endif
1742:rtos/uC-FS/Source/fs_vol.c **** 
1743:rtos/uC-FS/Source/fs_vol.c ****    *p_err       = FS_ERR_NONE;
1744:rtos/uC-FS/Source/fs_vol.c ****     name_vol[0] = (CPU_CHAR)ASCII_CHAR_NULL;                    /* See Note #2.                    
1745:rtos/uC-FS/Source/fs_vol.c **** 
1746:rtos/uC-FS/Source/fs_vol.c **** 
1747:rtos/uC-FS/Source/fs_vol.c **** 
1748:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ ACQUIRE FS LO
1749:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Lock(p_err);
1750:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
1751:rtos/uC-FS/Source/fs_vol.c ****         return;
1752:rtos/uC-FS/Source/fs_vol.c ****     }
1753:rtos/uC-FS/Source/fs_vol.c **** 
1754:rtos/uC-FS/Source/fs_vol.c **** 
1755:rtos/uC-FS/Source/fs_vol.c **** 
1756:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- GET VOL NAME
1757:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
1758:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
1759:rtos/uC-FS/Source/fs_vol.c ****             Str_Copy_N(name_vol, FSVol_Tbl[vol_ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
1760:rtos/uC-FS/Source/fs_vol.c ****             break;
1761:rtos/uC-FS/Source/fs_vol.c ****         }
1762:rtos/uC-FS/Source/fs_vol.c ****     }
1763:rtos/uC-FS/Source/fs_vol.c **** 
1764:rtos/uC-FS/Source/fs_vol.c **** 
1765:rtos/uC-FS/Source/fs_vol.c **** 
1766:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ RELEASE FS LO
1767:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Unlock();
1768:rtos/uC-FS/Source/fs_vol.c **** }
1769:rtos/uC-FS/Source/fs_vol.c **** 
1770:rtos/uC-FS/Source/fs_vol.c **** 
1771:rtos/uC-FS/Source/fs_vol.c **** /*
1772:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1773:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_IsDflt()
1774:rtos/uC-FS/Source/fs_vol.c **** *
1775:rtos/uC-FS/Source/fs_vol.c **** * Description : Determine whether a volume is the default volume.
1776:rtos/uC-FS/Source/fs_vol.c **** *
1777:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
1778:rtos/uC-FS/Source/fs_vol.c **** *
1779:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1780:rtos/uC-FS/Source/fs_vol.c **** *
1781:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_NONE                 Volume name obtained.
1782:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_NAME_NULL            Argument 'name_vol' passed a NULL pointer.
1783:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_POOL_FULL            ALL blocks already available in pool
1784:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_NULL_PTR             Argument 'p_pool' passed a NULL pointer.
1785:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_INVALID_TYPE         Invalid pool type.
1786:rtos/uC-FS/Source/fs_vol.c **** *                           FS_ERR_OS_LOCK              File system access NOT acquired.
1787:rtos/uC-FS/Source/fs_vol.c **** *
1788:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : DEF_YES, if the volume with name 'name_vol' is the default volume.
1789:rtos/uC-FS/Source/fs_vol.c **** *               DEF_NO,  if no  volume with name 'name_vol' exists
1790:rtos/uC-FS/Source/fs_vol.c **** *                        or the volume with name 'name_vol' is not the default volume.
1791:rtos/uC-FS/Source/fs_vol.c **** 
1792:rtos/uC-FS/Source/fs_vol.c **** *
1793:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
1794:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1795:rtos/uC-FS/Source/fs_vol.c **** */
1796:rtos/uC-FS/Source/fs_vol.c **** 
1797:rtos/uC-FS/Source/fs_vol.c **** CPU_BOOLEAN  FSVol_IsDflt (CPU_CHAR  *name_vol,
ARM GAS  /tmp/ccvXhXom.s 			page 33


1798:rtos/uC-FS/Source/fs_vol.c ****                            FS_ERR    *p_err)
1799:rtos/uC-FS/Source/fs_vol.c **** {
1800:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL      *p_vol;
1801:rtos/uC-FS/Source/fs_vol.c ****     CPU_INT16S   cmp;
1802:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN  dflt;
1803:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY       vol_ix;
1804:rtos/uC-FS/Source/fs_vol.c **** 
1805:rtos/uC-FS/Source/fs_vol.c **** 
1806:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1807:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
1808:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(DEF_NO);
1809:rtos/uC-FS/Source/fs_vol.c ****     }
1810:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
1811:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
1812:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
1813:rtos/uC-FS/Source/fs_vol.c ****     }
1814:rtos/uC-FS/Source/fs_vol.c **** #endif
1815:rtos/uC-FS/Source/fs_vol.c **** 
1816:rtos/uC-FS/Source/fs_vol.c **** 
1817:rtos/uC-FS/Source/fs_vol.c ****    *p_err = FS_ERR_NONE;
1818:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ ACQUIRE FS LO
1819:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Lock(p_err);
1820:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
1821:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
1822:rtos/uC-FS/Source/fs_vol.c ****     }
1823:rtos/uC-FS/Source/fs_vol.c **** 
1824:rtos/uC-FS/Source/fs_vol.c **** 
1825:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* --------------------- GET DFLT -
1826:rtos/uC-FS/Source/fs_vol.c ****     p_vol = DEF_NULL;
1827:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
1828:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
1829:rtos/uC-FS/Source/fs_vol.c ****             p_vol = FSVol_Tbl[vol_ix];
1830:rtos/uC-FS/Source/fs_vol.c ****             break;
1831:rtos/uC-FS/Source/fs_vol.c ****         }
1832:rtos/uC-FS/Source/fs_vol.c ****     }
1833:rtos/uC-FS/Source/fs_vol.c **** 
1834:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol != (FS_VOL *)0) {
1835:rtos/uC-FS/Source/fs_vol.c ****         cmp  = Str_Cmp_N(name_vol, p_vol->Name, FS_CFG_MAX_VOL_NAME_LEN);
1836:rtos/uC-FS/Source/fs_vol.c ****         dflt = (cmp == 0) ? DEF_YES : DEF_NO;
1837:rtos/uC-FS/Source/fs_vol.c ****     } else {
1838:rtos/uC-FS/Source/fs_vol.c ****         dflt = DEF_NO;
1839:rtos/uC-FS/Source/fs_vol.c ****     }
1840:rtos/uC-FS/Source/fs_vol.c **** 
1841:rtos/uC-FS/Source/fs_vol.c **** 
1842:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ RELEASE FS LO
1843:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Unlock();
1844:rtos/uC-FS/Source/fs_vol.c **** 
1845:rtos/uC-FS/Source/fs_vol.c ****     return (dflt);
1846:rtos/uC-FS/Source/fs_vol.c **** }
1847:rtos/uC-FS/Source/fs_vol.c **** 
1848:rtos/uC-FS/Source/fs_vol.c **** 
1849:rtos/uC-FS/Source/fs_vol.c **** /*
1850:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1851:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1852:rtos/uC-FS/Source/fs_vol.c **** *                                         INTERNAL FUNCTIONS
1853:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1854:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
ARM GAS  /tmp/ccvXhXom.s 			page 34


1855:rtos/uC-FS/Source/fs_vol.c **** */
1856:rtos/uC-FS/Source/fs_vol.c **** 
1857:rtos/uC-FS/Source/fs_vol.c **** /*
1858:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1859:rtos/uC-FS/Source/fs_vol.c **** *                                         FSVol_ModuleInit()
1860:rtos/uC-FS/Source/fs_vol.c **** *
1861:rtos/uC-FS/Source/fs_vol.c **** * Description : Initialize File System Volume Management module.
1862:rtos/uC-FS/Source/fs_vol.c **** *
1863:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : vol_cnt     Number of volumes to allocate.
1864:rtos/uC-FS/Source/fs_vol.c **** *
1865:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1866:rtos/uC-FS/Source/fs_vol.c **** *               ----------  Argument validated by caller.
1867:rtos/uC-FS/Source/fs_vol.c **** *
1868:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE         Module initialized.
1869:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_MEM_ALLOC    Memory could not be allocated.
1870:rtos/uC-FS/Source/fs_vol.c **** *
1871:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
1872:rtos/uC-FS/Source/fs_vol.c **** *
1873:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
1874:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1875:rtos/uC-FS/Source/fs_vol.c **** */
1876:rtos/uC-FS/Source/fs_vol.c **** 
1877:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_ModuleInit (FS_QTY   vol_cnt,
1878:rtos/uC-FS/Source/fs_vol.c ****                         FS_ERR  *p_err)
1879:rtos/uC-FS/Source/fs_vol.c **** {
1880:rtos/uC-FS/Source/fs_vol.c ****     CPU_SIZE_T  octets_reqd;
1881:rtos/uC-FS/Source/fs_vol.c ****     LIB_ERR     pool_err;
1882:rtos/uC-FS/Source/fs_vol.c **** 
1883:rtos/uC-FS/Source/fs_vol.c **** 
1884:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_TRIAL_EN == DEF_ENABLED)                            /* Trial limitation: max 1 vol.    
1885:rtos/uC-FS/Source/fs_vol.c ****     if (vol_cnt > FS_TRIAL_MAX_VOL_CNT) {
1886:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_INVALID_CFG;
1887:rtos/uC-FS/Source/fs_vol.c ****         return;
1888:rtos/uC-FS/Source/fs_vol.c ****     }
1889:rtos/uC-FS/Source/fs_vol.c **** #endif
1890:rtos/uC-FS/Source/fs_vol.c **** 
1891:rtos/uC-FS/Source/fs_vol.c ****     FSVol_VolCntMax = 0u;
1892:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Cnt       = 0u;
1893:rtos/uC-FS/Source/fs_vol.c **** 
1894:rtos/uC-FS/Source/fs_vol.c **** 
1895:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- INIT VOL POO
1896:rtos/uC-FS/Source/fs_vol.c ****     Mem_PoolCreate(&FSVol_Pool,
1897:rtos/uC-FS/Source/fs_vol.c ****                     DEF_NULL,
1898:rtos/uC-FS/Source/fs_vol.c ****                     0,
1899:rtos/uC-FS/Source/fs_vol.c ****                     vol_cnt,
1900:rtos/uC-FS/Source/fs_vol.c ****                     sizeof(FS_VOL),
1901:rtos/uC-FS/Source/fs_vol.c ****                     sizeof(CPU_ALIGN),
1902:rtos/uC-FS/Source/fs_vol.c ****                    &octets_reqd,
1903:rtos/uC-FS/Source/fs_vol.c ****                    &pool_err);
1904:rtos/uC-FS/Source/fs_vol.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
1905:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_MEM_ALLOC;
1906:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_INFO(("FSVol_ModuleInit(): Could not alloc mem for vols: %d octets required.\r\n",
1907:rtos/uC-FS/Source/fs_vol.c ****         return;
1908:rtos/uC-FS/Source/fs_vol.c ****     }
1909:rtos/uC-FS/Source/fs_vol.c **** 
1910:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Tbl = (FS_VOL **)Mem_HeapAlloc(vol_cnt * sizeof(FS_VOL *),
1911:rtos/uC-FS/Source/fs_vol.c ****                                          sizeof(CPU_ALIGN),
ARM GAS  /tmp/ccvXhXom.s 			page 35


1912:rtos/uC-FS/Source/fs_vol.c ****                                         &octets_reqd,
1913:rtos/uC-FS/Source/fs_vol.c ****                                         &pool_err);
1914:rtos/uC-FS/Source/fs_vol.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
1915:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_MEM_ALLOC;
1916:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_INFO(("FSVol_ModuleInit(): Could not alloc mem for vols: %d octets required.\r\n",
1917:rtos/uC-FS/Source/fs_vol.c ****         return;
1918:rtos/uC-FS/Source/fs_vol.c ****     }
1919:rtos/uC-FS/Source/fs_vol.c **** 
1920:rtos/uC-FS/Source/fs_vol.c ****     Mem_Clr(FSVol_Tbl, vol_cnt * sizeof(FS_VOL *));
1921:rtos/uC-FS/Source/fs_vol.c **** 
1922:rtos/uC-FS/Source/fs_vol.c ****     FSVol_VolCntMax = vol_cnt;
1923:rtos/uC-FS/Source/fs_vol.c **** }
1924:rtos/uC-FS/Source/fs_vol.c **** 
1925:rtos/uC-FS/Source/fs_vol.c **** 
1926:rtos/uC-FS/Source/fs_vol.c **** /*
1927:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1928:rtos/uC-FS/Source/fs_vol.c **** *                                       FSVol_AcquireLockChk()
1929:rtos/uC-FS/Source/fs_vol.c **** *
1930:rtos/uC-FS/Source/fs_vol.c **** * Description : Acquire volume reference & lock.
1931:rtos/uC-FS/Source/fs_vol.c **** *
1932:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
1933:rtos/uC-FS/Source/fs_vol.c **** *
1934:rtos/uC-FS/Source/fs_vol.c **** *               mounted     Indicates whether volume must be mounted :
1935:rtos/uC-FS/Source/fs_vol.c **** *
1936:rtos/uC-FS/Source/fs_vol.c **** *                               DEF_YES    Volume must be mounted.
1937:rtos/uC-FS/Source/fs_vol.c **** *                               DEF_NO     Volume must be mounted or open.
1938:rtos/uC-FS/Source/fs_vol.c **** *
1939:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1940:rtos/uC-FS/Source/fs_vol.c **** *
1941:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE               Volume present & lock acquired.
1942:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_CHNGD          Device has changed.
1943:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_OPEN       Volume is not open.
1944:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_NOT_MOUNTED    Volume is not mounted.
1945:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_OS_LOCK            OS Lock NOT acquired.
1946:rtos/uC-FS/Source/fs_vol.c **** *
1947:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : Pointer to a volume, if found.
1948:rtos/uC-FS/Source/fs_vol.c **** *               Pointer to NULL,     otherwise.
1949:rtos/uC-FS/Source/fs_vol.c **** *
1950:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
1951:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
1952:rtos/uC-FS/Source/fs_vol.c **** */
1953:rtos/uC-FS/Source/fs_vol.c **** 
1954:rtos/uC-FS/Source/fs_vol.c **** FS_VOL  *FSVol_AcquireLockChk (CPU_CHAR     *name_vol,
1955:rtos/uC-FS/Source/fs_vol.c ****                                CPU_BOOLEAN   mounted,
1956:rtos/uC-FS/Source/fs_vol.c ****                                FS_ERR       *p_err)
1957:rtos/uC-FS/Source/fs_vol.c **** {
1958:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL      *p_vol;
1959:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN  vol_lock_ok;
1960:rtos/uC-FS/Source/fs_vol.c **** 
1961:rtos/uC-FS/Source/fs_vol.c **** 
1962:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1963:rtos/uC-FS/Source/fs_vol.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
1964:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION((FS_VOL *)0);
1965:rtos/uC-FS/Source/fs_vol.c ****     }
1966:rtos/uC-FS/Source/fs_vol.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
1967:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
1968:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
ARM GAS  /tmp/ccvXhXom.s 			page 36


1969:rtos/uC-FS/Source/fs_vol.c ****     }
1970:rtos/uC-FS/Source/fs_vol.c **** #endif
1971:rtos/uC-FS/Source/fs_vol.c **** 
1972:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE VOL LO
1973:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_Acquire(name_vol, p_err);                     /* Acquire vol ref.                
1974:rtos/uC-FS/Source/fs_vol.c **** 
1975:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {                                 /* Rtn err if vol not found.       
1976:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NOT_OPEN;
1977:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
1978:rtos/uC-FS/Source/fs_vol.c ****     }
1979:rtos/uC-FS/Source/fs_vol.c **** 
1980:rtos/uC-FS/Source/fs_vol.c ****     vol_lock_ok = FSVol_Lock(p_vol);
1981:rtos/uC-FS/Source/fs_vol.c ****     if (vol_lock_ok == DEF_NO) {
1982:rtos/uC-FS/Source/fs_vol.c ****         FSVol_Release(p_vol);
1983:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
1984:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
1985:rtos/uC-FS/Source/fs_vol.c ****     }
1986:rtos/uC-FS/Source/fs_vol.c **** 
1987:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- VALIDATE VOL
1988:rtos/uC-FS/Source/fs_vol.c ****     (void)FSVol_RefreshLocked(p_vol, p_err);                    /* Refresh vol.                    
1989:rtos/uC-FS/Source/fs_vol.c **** 
1990:rtos/uC-FS/Source/fs_vol.c ****     switch (p_vol->State) {
1991:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
1992:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_PRESENT:
1993:rtos/uC-FS/Source/fs_vol.c ****              if (mounted == DEF_YES) {                          /* If vol MUST be mounted ...      
1994:rtos/uC-FS/Source/fs_vol.c ****                  FSVol_ReleaseUnlock(p_vol);
1995:rtos/uC-FS/Source/fs_vol.c ****                  return ((FS_VOL *)0);
1996:rtos/uC-FS/Source/fs_vol.c ****              }
1997:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_NONE;                               /* Refresh expected to fail when vo
1998:rtos/uC-FS/Source/fs_vol.c ****              break;
1999:rtos/uC-FS/Source/fs_vol.c **** 
2000:rtos/uC-FS/Source/fs_vol.c **** 
2001:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_MOUNTED:
2002:rtos/uC-FS/Source/fs_vol.c ****              break;
2003:rtos/uC-FS/Source/fs_vol.c **** 
2004:rtos/uC-FS/Source/fs_vol.c **** 
2005:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_CLOSED:
2006:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_CLOSING:
2007:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPENING:
2008:rtos/uC-FS/Source/fs_vol.c ****         default:
2009:rtos/uC-FS/Source/fs_vol.c ****              FSVol_ReleaseUnlock(p_vol);
2010:rtos/uC-FS/Source/fs_vol.c ****              return ((FS_VOL *)0);
2011:rtos/uC-FS/Source/fs_vol.c ****     }
2012:rtos/uC-FS/Source/fs_vol.c **** 
2013:rtos/uC-FS/Source/fs_vol.c **** 
2014:rtos/uC-FS/Source/fs_vol.c **** 
2015:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------------ RTN ---
2016:rtos/uC-FS/Source/fs_vol.c ****     return (p_vol);
2017:rtos/uC-FS/Source/fs_vol.c **** }
2018:rtos/uC-FS/Source/fs_vol.c **** 
2019:rtos/uC-FS/Source/fs_vol.c **** 
2020:rtos/uC-FS/Source/fs_vol.c **** /*
2021:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2022:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_Acquire()
2023:rtos/uC-FS/Source/fs_vol.c **** *
2024:rtos/uC-FS/Source/fs_vol.c **** * Description : Acquire volume reference.
2025:rtos/uC-FS/Source/fs_vol.c **** *
ARM GAS  /tmp/ccvXhXom.s 			page 37


2026:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
2027:rtos/uC-FS/Source/fs_vol.c **** *               ----------  Argument validated by caller.
2028:rtos/uC-FS/Source/fs_vol.c **** *
2029:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2030:rtos/uC-FS/Source/fs_vol.c **** *               ----------  Argument validated by caller.
2031:rtos/uC-FS/Source/fs_vol.c **** *
2032:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE               Volume present & lock acquired.
2033:rtos/uC-FS/Source/fs_vol.c **** *
2034:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : Pointer to a volume, if found.
2035:rtos/uC-FS/Source/fs_vol.c **** *               Pointer to NULL,     otherwise.
2036:rtos/uC-FS/Source/fs_vol.c **** *
2037:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
2038:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2039:rtos/uC-FS/Source/fs_vol.c **** */
2040:rtos/uC-FS/Source/fs_vol.c **** 
2041:rtos/uC-FS/Source/fs_vol.c **** FS_VOL  *FSVol_Acquire (CPU_CHAR  *name_vol,
2042:rtos/uC-FS/Source/fs_vol.c ****                         FS_ERR    *p_err)
2043:rtos/uC-FS/Source/fs_vol.c **** {
2044:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
2045:rtos/uC-FS/Source/fs_vol.c **** 
2046:rtos/uC-FS/Source/fs_vol.c **** 
2047:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ ACQUIRE FS LO
2048:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Lock(p_err);
2049:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
2050:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
2051:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
2052:rtos/uC-FS/Source/fs_vol.c ****     }
2053:rtos/uC-FS/Source/fs_vol.c **** 
2054:rtos/uC-FS/Source/fs_vol.c **** 
2055:rtos/uC-FS/Source/fs_vol.c **** 
2056:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* --------------------- FIND VOL -
2057:rtos/uC-FS/Source/fs_vol.c ****     p_vol = FSVol_ObjFind(name_vol, p_err);                     /* Find vol.                       
2058:rtos/uC-FS/Source/fs_vol.c **** 
2059:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {                                 /* Rtn NULL if vol not found.      
2060:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
2061:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NOT_MOUNTED;
2062:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
2063:rtos/uC-FS/Source/fs_vol.c ****     }
2064:rtos/uC-FS/Source/fs_vol.c **** 
2065:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefCnt++;
2066:rtos/uC-FS/Source/fs_vol.c **** 
2067:rtos/uC-FS/Source/fs_vol.c **** 
2068:rtos/uC-FS/Source/fs_vol.c **** 
2069:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ RELEASE FS LO
2070:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Unlock();
2071:rtos/uC-FS/Source/fs_vol.c **** 
2072:rtos/uC-FS/Source/fs_vol.c ****     return (p_vol);
2073:rtos/uC-FS/Source/fs_vol.c **** }
2074:rtos/uC-FS/Source/fs_vol.c **** 
2075:rtos/uC-FS/Source/fs_vol.c **** 
2076:rtos/uC-FS/Source/fs_vol.c **** /*
2077:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2078:rtos/uC-FS/Source/fs_vol.c **** *                                         FSVol_AcquireDflt()
2079:rtos/uC-FS/Source/fs_vol.c **** *
2080:rtos/uC-FS/Source/fs_vol.c **** * Description : Acquire default volume reference.
2081:rtos/uC-FS/Source/fs_vol.c **** *
2082:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : none.
ARM GAS  /tmp/ccvXhXom.s 			page 38


2083:rtos/uC-FS/Source/fs_vol.c **** *
2084:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : Pointer to a volume, if found.
2085:rtos/uC-FS/Source/fs_vol.c **** *               Pointer to NULL,     otherwise.
2086:rtos/uC-FS/Source/fs_vol.c **** *
2087:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
2088:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2089:rtos/uC-FS/Source/fs_vol.c **** */
2090:rtos/uC-FS/Source/fs_vol.c **** 
2091:rtos/uC-FS/Source/fs_vol.c **** FS_VOL  *FSVol_AcquireDflt (void)
2092:rtos/uC-FS/Source/fs_vol.c **** {
2093:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL   *p_vol;
2094:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR    err;
2095:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_ix;
2096:rtos/uC-FS/Source/fs_vol.c **** 
2097:rtos/uC-FS/Source/fs_vol.c **** 
2098:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ ACQUIRE FS LO
2099:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Lock(&err);
2100:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
2101:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
2102:rtos/uC-FS/Source/fs_vol.c ****     }
2103:rtos/uC-FS/Source/fs_vol.c **** 
2104:rtos/uC-FS/Source/fs_vol.c **** 
2105:rtos/uC-FS/Source/fs_vol.c **** 
2106:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* --------------------- FIND VOL -
2107:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* Try to find vol ...             
2108:rtos/uC-FS/Source/fs_vol.c ****     p_vol = DEF_NULL;
2109:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
2110:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
2111:rtos/uC-FS/Source/fs_vol.c ****             p_vol = FSVol_Tbl[vol_ix];
2112:rtos/uC-FS/Source/fs_vol.c ****             break;
2113:rtos/uC-FS/Source/fs_vol.c ****         }
2114:rtos/uC-FS/Source/fs_vol.c ****     }
2115:rtos/uC-FS/Source/fs_vol.c **** 
2116:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol != DEF_NULL) {                                    /* ... rtn NULL if vol not found.  
2117:rtos/uC-FS/Source/fs_vol.c ****        p_vol->RefCnt++;
2118:rtos/uC-FS/Source/fs_vol.c ****     }
2119:rtos/uC-FS/Source/fs_vol.c **** 
2120:rtos/uC-FS/Source/fs_vol.c **** 
2121:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ RELEASE FS LO
2122:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Unlock();
2123:rtos/uC-FS/Source/fs_vol.c **** 
2124:rtos/uC-FS/Source/fs_vol.c ****     return (p_vol);
2125:rtos/uC-FS/Source/fs_vol.c **** }
2126:rtos/uC-FS/Source/fs_vol.c **** 
2127:rtos/uC-FS/Source/fs_vol.c **** 
2128:rtos/uC-FS/Source/fs_vol.c **** /*
2129:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2130:rtos/uC-FS/Source/fs_vol.c **** *                                        FSVol_ReleaseUnlock()
2131:rtos/uC-FS/Source/fs_vol.c **** *
2132:rtos/uC-FS/Source/fs_vol.c **** * Description : Release volume reference & lock.
2133:rtos/uC-FS/Source/fs_vol.c **** *
2134:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2135:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2136:rtos/uC-FS/Source/fs_vol.c **** *
2137:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2138:rtos/uC-FS/Source/fs_vol.c **** *
2139:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
ARM GAS  /tmp/ccvXhXom.s 			page 39


2140:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2141:rtos/uC-FS/Source/fs_vol.c **** */
2142:rtos/uC-FS/Source/fs_vol.c **** 
2143:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_ReleaseUnlock (FS_VOL  *p_vol)
2144:rtos/uC-FS/Source/fs_vol.c **** {
2145:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Unlock(p_vol);
2146:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Release(p_vol);
2147:rtos/uC-FS/Source/fs_vol.c **** }
2148:rtos/uC-FS/Source/fs_vol.c **** 
2149:rtos/uC-FS/Source/fs_vol.c **** 
2150:rtos/uC-FS/Source/fs_vol.c **** /*
2151:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2152:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_Release()
2153:rtos/uC-FS/Source/fs_vol.c **** *
2154:rtos/uC-FS/Source/fs_vol.c **** * Description : Release volume reference.
2155:rtos/uC-FS/Source/fs_vol.c **** *
2156:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2157:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2158:rtos/uC-FS/Source/fs_vol.c **** *
2159:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2160:rtos/uC-FS/Source/fs_vol.c **** *
2161:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The device reference is acquired in 'FSVol_Open()'.
2162:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2163:rtos/uC-FS/Source/fs_vol.c **** */
2164:rtos/uC-FS/Source/fs_vol.c **** 
2165:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_Release (FS_VOL  *p_vol)
2166:rtos/uC-FS/Source/fs_vol.c **** {
2167:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR   err;
2168:rtos/uC-FS/Source/fs_vol.c ****     FS_CTR   ref_cnt;
2169:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV  *p_dev;
2170:rtos/uC-FS/Source/fs_vol.c **** 
2171:rtos/uC-FS/Source/fs_vol.c **** 
2172:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ ACQUIRE FS LO
2173:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Lock(&err);
2174:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
2175:rtos/uC-FS/Source/fs_vol.c ****         return;
2176:rtos/uC-FS/Source/fs_vol.c ****     }
2177:rtos/uC-FS/Source/fs_vol.c **** 
2178:rtos/uC-FS/Source/fs_vol.c **** 
2179:rtos/uC-FS/Source/fs_vol.c **** 
2180:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- DEC REF CNT
2181:rtos/uC-FS/Source/fs_vol.c ****     ref_cnt = p_vol->RefCnt;
2182:rtos/uC-FS/Source/fs_vol.c ****     if (ref_cnt == 1u) {
2183:rtos/uC-FS/Source/fs_vol.c ****         p_dev = p_vol->DevPtr;
2184:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ObjFree(p_vol);
2185:rtos/uC-FS/Source/fs_vol.c ****     } else if (ref_cnt > 0u) {
2186:rtos/uC-FS/Source/fs_vol.c ****         p_vol->RefCnt = ref_cnt - 1u;
2187:rtos/uC-FS/Source/fs_vol.c ****     } else {
2188:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_DBG(("FSVol_Release(): Release cnt dec'd to zero.\r\n"));
2189:rtos/uC-FS/Source/fs_vol.c ****     }
2190:rtos/uC-FS/Source/fs_vol.c **** 
2191:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_Unlock();
2192:rtos/uC-FS/Source/fs_vol.c **** 
2193:rtos/uC-FS/Source/fs_vol.c **** 
2194:rtos/uC-FS/Source/fs_vol.c **** 
2195:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- RELEASE DEV
2196:rtos/uC-FS/Source/fs_vol.c ****     if (ref_cnt == 1u) {
ARM GAS  /tmp/ccvXhXom.s 			page 40


2197:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);                                   /* Release dev (see Note #1).      
2198:rtos/uC-FS/Source/fs_vol.c ****     }
2199:rtos/uC-FS/Source/fs_vol.c **** }
2200:rtos/uC-FS/Source/fs_vol.c **** 
2201:rtos/uC-FS/Source/fs_vol.c **** 
2202:rtos/uC-FS/Source/fs_vol.c **** /*
2203:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2204:rtos/uC-FS/Source/fs_vol.c **** *                                            FSVol_Lock()
2205:rtos/uC-FS/Source/fs_vol.c **** *
2206:rtos/uC-FS/Source/fs_vol.c **** * Description : Acquire volume lock.
2207:rtos/uC-FS/Source/fs_vol.c **** *
2208:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2209:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2210:rtos/uC-FS/Source/fs_vol.c **** *
2211:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : DEF_YES, if volume lock     acquired.
2212:rtos/uC-FS/Source/fs_vol.c **** *               DEF_NO,  if volume lock NOT acquired.
2213:rtos/uC-FS/Source/fs_vol.c **** *
2214:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
2215:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2216:rtos/uC-FS/Source/fs_vol.c **** */
2217:rtos/uC-FS/Source/fs_vol.c **** 
2218:rtos/uC-FS/Source/fs_vol.c **** CPU_BOOLEAN  FSVol_Lock (FS_VOL  *p_vol)
2219:rtos/uC-FS/Source/fs_vol.c **** {
2220:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR  err;
2221:rtos/uC-FS/Source/fs_vol.c **** 
2222:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------- ACQUIRE DEV ACCES
2223:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_DevAccessLock(p_vol->DevPtr->ID, 0u, &err);
2224:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
2225:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
2226:rtos/uC-FS/Source/fs_vol.c ****     }
2227:rtos/uC-FS/Source/fs_vol.c **** 
2228:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- ACQUIRE DEV LO
2229:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_DevLock(p_vol->DevPtr->ID, &err);
2230:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
2231:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_DevAccessUnlock(p_vol->DevPtr->ID);
2232:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
2233:rtos/uC-FS/Source/fs_vol.c ****     }
2234:rtos/uC-FS/Source/fs_vol.c **** 
2235:rtos/uC-FS/Source/fs_vol.c ****     return (DEF_YES);
2236:rtos/uC-FS/Source/fs_vol.c **** }
2237:rtos/uC-FS/Source/fs_vol.c **** 
2238:rtos/uC-FS/Source/fs_vol.c **** 
2239:rtos/uC-FS/Source/fs_vol.c **** /*
2240:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2241:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_Unlock()
2242:rtos/uC-FS/Source/fs_vol.c **** *
2243:rtos/uC-FS/Source/fs_vol.c **** * Description : Release volume lock.
2244:rtos/uC-FS/Source/fs_vol.c **** *
2245:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2246:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2247:rtos/uC-FS/Source/fs_vol.c **** *
2248:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2249:rtos/uC-FS/Source/fs_vol.c **** *
2250:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : none.
2251:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2252:rtos/uC-FS/Source/fs_vol.c **** */
2253:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 41


2254:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_Unlock (FS_VOL  *p_vol)
2255:rtos/uC-FS/Source/fs_vol.c **** {
2256:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE DEV LO
2257:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_DevUnlock(p_vol->DevPtr->ID);
2258:rtos/uC-FS/Source/fs_vol.c **** 
2259:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------- RELEASE DEV ACCES
2260:rtos/uC-FS/Source/fs_vol.c ****     FS_OS_DevAccessUnlock(p_vol->DevPtr->ID);
2261:rtos/uC-FS/Source/fs_vol.c **** }
2262:rtos/uC-FS/Source/fs_vol.c **** 
2263:rtos/uC-FS/Source/fs_vol.c **** 
2264:rtos/uC-FS/Source/fs_vol.c **** /*
2265:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2266:rtos/uC-FS/Source/fs_vol.c **** *                                         FSVol_OpenLocked()
2267:rtos/uC-FS/Source/fs_vol.c **** *
2268:rtos/uC-FS/Source/fs_vol.c **** * Description : Open a volume & mount on the file system.
2269:rtos/uC-FS/Source/fs_vol.c **** *
2270:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2271:rtos/uC-FS/Source/fs_vol.c **** *               ----------  Argument validated by caller.
2272:rtos/uC-FS/Source/fs_vol.c **** *
2273:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2274:rtos/uC-FS/Source/fs_vol.c **** *               ----------  Argument validated by caller.
2275:rtos/uC-FS/Source/fs_vol.c **** *
2276:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                   Volume opened.
2277:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_PARTITION_NOT_FOUND    No partition found.
2278:rtos/uC-FS/Source/fs_vol.c **** *
2279:rtos/uC-FS/Source/fs_vol.c **** *                                                             ---------- RETURNED BY FSSys_Open() -
2280:rtos/uC-FS/Source/fs_vol.c **** *                                                             ------- RETURNED BY FSPartition_Find(
2281:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV                    Device error.
2282:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level formatte
2283:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_IO                 Device I/O error.
2284:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_PRESENT        Device is not present.
2285:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_TIMEOUT            Device timeout error.
2286:rtos/uC-FS/Source/fs_vol.c **** *
2287:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2288:rtos/uC-FS/Source/fs_vol.c **** *
2289:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2290:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2291:rtos/uC-FS/Source/fs_vol.c **** */
2292:rtos/uC-FS/Source/fs_vol.c **** 
2293:rtos/uC-FS/Source/fs_vol.c **** static  void  FSVol_OpenLocked (FS_VOL  *p_vol,
2294:rtos/uC-FS/Source/fs_vol.c ****                                 FS_ERR  *p_err)
2295:rtos/uC-FS/Source/fs_vol.c **** {
2296:rtos/uC-FS/Source/fs_vol.c ****     FS_PARTITION_ENTRY  partition_entry;
2297:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_QTY          partition_size;
2298:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_NBR          partition_start;
2299:rtos/uC-FS/Source/fs_vol.c **** 
2300:rtos/uC-FS/Source/fs_vol.c **** 
2301:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ FIND PARTITIO
2302:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_PARTITION_EN == DEF_ENABLED)
2303:rtos/uC-FS/Source/fs_vol.c ****     FSPartition_Find( p_vol->DevPtr,                            /* Get partition params.           
2304:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->PartitionNbr,
2305:rtos/uC-FS/Source/fs_vol.c ****                      &partition_entry,
2306:rtos/uC-FS/Source/fs_vol.c ****                       p_err);
2307:rtos/uC-FS/Source/fs_vol.c **** #else
2308:rtos/uC-FS/Source/fs_vol.c ****     FSPartition_FindSimple( p_vol->DevPtr,                      /* Get partition params.           
2309:rtos/uC-FS/Source/fs_vol.c ****                            &partition_entry,
2310:rtos/uC-FS/Source/fs_vol.c ****                             p_err);
ARM GAS  /tmp/ccvXhXom.s 			page 42


2311:rtos/uC-FS/Source/fs_vol.c **** #endif
2312:rtos/uC-FS/Source/fs_vol.c **** 
2313:rtos/uC-FS/Source/fs_vol.c ****     switch (*p_err) {
2314:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:
2315:rtos/uC-FS/Source/fs_vol.c ****              partition_start = partition_entry.Start;
2316:rtos/uC-FS/Source/fs_vol.c ****              partition_size  = partition_entry.Size;
2317:rtos/uC-FS/Source/fs_vol.c **** 
2318:rtos/uC-FS/Source/fs_vol.c ****              if (partition_start > p_vol->DevPtr->Size) {       /* Verify partition info.          
2319:rtos/uC-FS/Source/fs_vol.c ****                  partition_start = 0u;
2320:rtos/uC-FS/Source/fs_vol.c ****                  partition_size  = p_vol->DevPtr->Size;
2321:rtos/uC-FS/Source/fs_vol.c ****              }
2322:rtos/uC-FS/Source/fs_vol.c ****              break;
2323:rtos/uC-FS/Source/fs_vol.c **** 
2324:rtos/uC-FS/Source/fs_vol.c **** 
2325:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_PARTITION_INVALID:                          /* Dev not partitioned.            
2326:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_PARTITION_ZERO:
2327:rtos/uC-FS/Source/fs_vol.c ****              partition_start = 0u;
2328:rtos/uC-FS/Source/fs_vol.c ****              partition_size  = p_vol->DevPtr->Size;
2329:rtos/uC-FS/Source/fs_vol.c ****              break;
2330:rtos/uC-FS/Source/fs_vol.c **** 
2331:rtos/uC-FS/Source/fs_vol.c **** 
2332:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_PARTITION_INVALID_SIG:                      /* If no partition ...             
2333:rtos/uC-FS/Source/fs_vol.c ****              partition_start = 0u;
2334:rtos/uC-FS/Source/fs_vol.c ****              partition_size  = p_vol->DevPtr->Size;
2335:rtos/uC-FS/Source/fs_vol.c ****              break;
2336:rtos/uC-FS/Source/fs_vol.c **** 
2337:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_PARTITION_INVALID_NBR:
2338:rtos/uC-FS/Source/fs_vol.c ****              if (p_vol->PartitionNbr == 0u) {                   /* Dev not partitioned.            
2339:rtos/uC-FS/Source/fs_vol.c ****                  partition_start = 0u;
2340:rtos/uC-FS/Source/fs_vol.c ****                  partition_size  = p_vol->DevPtr->Size;
2341:rtos/uC-FS/Source/fs_vol.c ****                  break;
2342:rtos/uC-FS/Source/fs_vol.c ****              } else {                                           /* If no partition ...             
2343:rtos/uC-FS/Source/fs_vol.c ****                  p_vol->State = FS_VOL_STATE_PRESENT;           /* ... vol not mounted.            
2344:rtos/uC-FS/Source/fs_vol.c ****                 *p_err = FS_ERR_PARTITION_NOT_FOUND;
2345:rtos/uC-FS/Source/fs_vol.c ****                  return;
2346:rtos/uC-FS/Source/fs_vol.c ****              }
2347:rtos/uC-FS/Source/fs_vol.c **** 
2348:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV:                                        /* If other err ...                
2349:rtos/uC-FS/Source/fs_vol.c ****         default:
2350:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_OPEN;                  /* ... vol dev not present.        
2351:rtos/uC-FS/Source/fs_vol.c ****              return;
2352:rtos/uC-FS/Source/fs_vol.c ****     }
2353:rtos/uC-FS/Source/fs_vol.c **** 
2354:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionStart = partition_start;
2355:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionSize  = partition_size;
2356:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefreshCnt     = p_vol->DevPtr->RefreshCnt;
2357:rtos/uC-FS/Source/fs_vol.c **** 
2358:rtos/uC-FS/Source/fs_vol.c **** 
2359:rtos/uC-FS/Source/fs_vol.c **** 
2360:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------------- INIT VOL FS
2361:rtos/uC-FS/Source/fs_vol.c ****     FSSys_VolOpen(p_vol, p_err);                                /* Get file sys properties.        
2362:rtos/uC-FS/Source/fs_vol.c ****     switch (*p_err) {
2363:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:                                       /* If vol opened ...               
2364:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State   = FS_VOL_STATE_MOUNTED;             /* ... vol mounted.                
2365:rtos/uC-FS/Source/fs_vol.c ****              p_vol->SecSize = p_vol->DevPtr->SecSize;
2366:rtos/uC-FS/Source/fs_vol.c ****              break;
2367:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 43


2368:rtos/uC-FS/Source/fs_vol.c **** 
2369:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_VOL_INVALID_SYS:                            /* If no partition or sys found ...
2370:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_PARTITION_NOT_FOUND:
2371:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State   = FS_VOL_STATE_PRESENT;             /* ... vol not mounted.            
2372:rtos/uC-FS/Source/fs_vol.c ****              p_vol->SecSize = p_vol->DevPtr->SecSize;
2373:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_PARTITION_NOT_FOUND;
2374:rtos/uC-FS/Source/fs_vol.c ****              break;
2375:rtos/uC-FS/Source/fs_vol.c **** 
2376:rtos/uC-FS/Source/fs_vol.c **** 
2377:rtos/uC-FS/Source/fs_vol.c ****                                                                /* If other err ...                 
2378:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_DEV:
2379:rtos/uC-FS/Source/fs_vol.c ****         default:
2380:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_OPEN;                  /* ... vol dev not present.        
2381:rtos/uC-FS/Source/fs_vol.c ****              return;
2382:rtos/uC-FS/Source/fs_vol.c ****     }
2383:rtos/uC-FS/Source/fs_vol.c **** }
2384:rtos/uC-FS/Source/fs_vol.c **** 
2385:rtos/uC-FS/Source/fs_vol.c **** 
2386:rtos/uC-FS/Source/fs_vol.c **** /*
2387:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2388:rtos/uC-FS/Source/fs_vol.c **** *                                          FSVol_RdLocked()
2389:rtos/uC-FS/Source/fs_vol.c **** *
2390:rtos/uC-FS/Source/fs_vol.c **** * Description : Read data from volume sector(s).
2391:rtos/uC-FS/Source/fs_vol.c **** *
2392:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2393:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2394:rtos/uC-FS/Source/fs_vol.c **** *
2395:rtos/uC-FS/Source/fs_vol.c **** *               p_dest      Pointer to destination buffer.
2396:rtos/uC-FS/Source/fs_vol.c **** *               ------      Argument validated by caller.
2397:rtos/uC-FS/Source/fs_vol.c **** *
2398:rtos/uC-FS/Source/fs_vol.c **** *               start       Start sector of read.
2399:rtos/uC-FS/Source/fs_vol.c **** *
2400:rtos/uC-FS/Source/fs_vol.c **** *               cnt         Number of sectors to read.
2401:rtos/uC-FS/Source/fs_vol.c **** *
2402:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2403:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2404:rtos/uC-FS/Source/fs_vol.c **** *
2405:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                   Volume sector(s) read.
2406:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_INVALID_SEC_NBR    Sector start or count invalid.
2407:rtos/uC-FS/Source/fs_vol.c **** *
2408:rtos/uC-FS/Source/fs_vol.c **** *                                                             ------- RETURNED BY FSDev_RdLocked() 
2409:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level formatte
2410:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_IO                 Device I/O error.
2411:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_TIMEOUT            Device timeout error.
2412:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_PRESENT        Device is not present.
2413:rtos/uC-FS/Source/fs_vol.c **** *
2414:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2415:rtos/uC-FS/Source/fs_vol.c **** *
2416:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2417:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2418:rtos/uC-FS/Source/fs_vol.c **** */
2419:rtos/uC-FS/Source/fs_vol.c **** 
2420:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_RdLocked (FS_VOL      *p_vol,
2421:rtos/uC-FS/Source/fs_vol.c ****                       void        *p_dest,
2422:rtos/uC-FS/Source/fs_vol.c ****                       FS_SEC_NBR   start,
2423:rtos/uC-FS/Source/fs_vol.c ****                       FS_SEC_QTY   cnt,
2424:rtos/uC-FS/Source/fs_vol.c ****                       FS_ERR      *p_err)
ARM GAS  /tmp/ccvXhXom.s 			page 44


2425:rtos/uC-FS/Source/fs_vol.c **** {
2426:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV      *p_dev;
2427:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
2428:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_QTY   size;
2429:rtos/uC-FS/Source/fs_vol.c **** #endif
2430:rtos/uC-FS/Source/fs_vol.c **** 
2431:rtos/uC-FS/Source/fs_vol.c **** 
2432:rtos/uC-FS/Source/fs_vol.c ****                                                                /* ------------------ VALIDATE ARGS 
2433:rtos/uC-FS/Source/fs_vol.c ****     p_dev = p_vol->DevPtr;
2434:rtos/uC-FS/Source/fs_vol.c **** 
2435:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
2436:rtos/uC-FS/Source/fs_vol.c ****     size  = p_vol->PartitionSize;
2437:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
2438:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
2439:rtos/uC-FS/Source/fs_vol.c ****         return;
2440:rtos/uC-FS/Source/fs_vol.c ****     }
2441:rtos/uC-FS/Source/fs_vol.c **** #endif
2442:rtos/uC-FS/Source/fs_vol.c **** 
2443:rtos/uC-FS/Source/fs_vol.c ****     start += p_vol->PartitionStart;
2444:rtos/uC-FS/Source/fs_vol.c **** 
2445:rtos/uC-FS/Source/fs_vol.c **** 
2446:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ---------------------- RD DEV --
2447:rtos/uC-FS/Source/fs_vol.c ****     FSDev_RdLocked(p_dev,
2448:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
2449:rtos/uC-FS/Source/fs_vol.c ****                    start,
2450:rtos/uC-FS/Source/fs_vol.c ****                    cnt,
2451:rtos/uC-FS/Source/fs_vol.c ****                    p_err);
2452:rtos/uC-FS/Source/fs_vol.c **** 
2453:rtos/uC-FS/Source/fs_vol.c **** 
2454:rtos/uC-FS/Source/fs_vol.c **** 
2455:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- UPDATE VOL STA
2456:rtos/uC-FS/Source/fs_vol.c ****     FS_CTR_STAT_ADD(p_vol->StatRdSecCtr, (FS_CTR)cnt);
2457:rtos/uC-FS/Source/fs_vol.c **** }
2458:rtos/uC-FS/Source/fs_vol.c **** 
2459:rtos/uC-FS/Source/fs_vol.c **** 
2460:rtos/uC-FS/Source/fs_vol.c **** 
2461:rtos/uC-FS/Source/fs_vol.c **** /*
2462:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2463:rtos/uC-FS/Source/fs_vol.c **** *                                         FSVol_RdLockedEx()
2464:rtos/uC-FS/Source/fs_vol.c **** *
2465:rtos/uC-FS/Source/fs_vol.c **** * Description : Read data from volume sector(s).
2466:rtos/uC-FS/Source/fs_vol.c **** *
2467:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2468:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2469:rtos/uC-FS/Source/fs_vol.c **** *
2470:rtos/uC-FS/Source/fs_vol.c **** *               p_dest      Pointer to destination buffer.
2471:rtos/uC-FS/Source/fs_vol.c **** *               ------      Argument validated by caller.
2472:rtos/uC-FS/Source/fs_vol.c **** *
2473:rtos/uC-FS/Source/fs_vol.c **** *               start       Start sector of read.
2474:rtos/uC-FS/Source/fs_vol.c **** *
2475:rtos/uC-FS/Source/fs_vol.c **** *               cnt         Number of sectors to read.
2476:rtos/uC-FS/Source/fs_vol.c **** *
2477:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2478:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2479:rtos/uC-FS/Source/fs_vol.c **** *
2480:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                   Volume sector(s) read.
2481:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_INVALID_SEC_NBR    Sector start or count invalid.
ARM GAS  /tmp/ccvXhXom.s 			page 45


2482:rtos/uC-FS/Source/fs_vol.c **** *
2483:rtos/uC-FS/Source/fs_vol.c **** *                                                             ------- RETURNED BY FSDev_RdLocked() 
2484:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level formatte
2485:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_IO                 Device I/O error.
2486:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_TIMEOUT            Device timeout error.
2487:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_PRESENT        Device is not present.
2488:rtos/uC-FS/Source/fs_vol.c **** *
2489:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2490:rtos/uC-FS/Source/fs_vol.c **** *
2491:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2492:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2493:rtos/uC-FS/Source/fs_vol.c **** */
2494:rtos/uC-FS/Source/fs_vol.c **** 
2495:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_RdLockedEx (FS_VOL      *p_vol,
2496:rtos/uC-FS/Source/fs_vol.c ****                         void        *p_dest,
2497:rtos/uC-FS/Source/fs_vol.c ****                         FS_SEC_NBR   start,
2498:rtos/uC-FS/Source/fs_vol.c ****                         FS_SEC_QTY   cnt,
2499:rtos/uC-FS/Source/fs_vol.c ****                         FS_FLAGS     sec_type,
2500:rtos/uC-FS/Source/fs_vol.c ****                         FS_ERR      *p_err)
2501:rtos/uC-FS/Source/fs_vol.c **** {
2502:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
2503:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_QTY  size;
2504:rtos/uC-FS/Source/fs_vol.c **** #endif
2505:rtos/uC-FS/Source/fs_vol.c **** 
2506:rtos/uC-FS/Source/fs_vol.c **** 
2507:rtos/uC-FS/Source/fs_vol.c ****     (void)sec_type;
2508:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ VALIDATE ARGS
2509:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
2510:rtos/uC-FS/Source/fs_vol.c ****     size = p_vol->PartitionSize;
2511:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
2512:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
2513:rtos/uC-FS/Source/fs_vol.c ****         return;
2514:rtos/uC-FS/Source/fs_vol.c ****     }
2515:rtos/uC-FS/Source/fs_vol.c **** #endif
2516:rtos/uC-FS/Source/fs_vol.c **** 
2517:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------- CHECK VOLUME VALI
2518:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->RefreshCnt != p_vol->DevPtr->RefreshCnt) {       /* Volume is invalid following a de
2519:rtos/uC-FS/Source/fs_vol.c ****     	*p_err = FS_ERR_DEV_CHNGD;                              /* cannot continue, return with error.
2520:rtos/uC-FS/Source/fs_vol.c ****     	 return;
2521:rtos/uC-FS/Source/fs_vol.c ****     }
2522:rtos/uC-FS/Source/fs_vol.c **** 
2523:rtos/uC-FS/Source/fs_vol.c **** 
2524:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT                                  /* ------------------ RD CACHED DAT
2525:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->CacheAPI_Ptr != (FS_VOL_CACHE_API *)0) {
2526:rtos/uC-FS/Source/fs_vol.c ****         p_vol->CacheAPI_Ptr->Rd(p_vol,
2527:rtos/uC-FS/Source/fs_vol.c ****                                 p_dest,
2528:rtos/uC-FS/Source/fs_vol.c ****                                 start,
2529:rtos/uC-FS/Source/fs_vol.c ****                                 cnt,
2530:rtos/uC-FS/Source/fs_vol.c ****                                 sec_type,
2531:rtos/uC-FS/Source/fs_vol.c ****                                 p_err);
2532:rtos/uC-FS/Source/fs_vol.c ****         FS_CTR_STAT_ADD(p_vol->StatRdSecCtr, (FS_CTR)cnt);
2533:rtos/uC-FS/Source/fs_vol.c ****         return;
2534:rtos/uC-FS/Source/fs_vol.c ****     }
2535:rtos/uC-FS/Source/fs_vol.c **** #endif
2536:rtos/uC-FS/Source/fs_vol.c **** 
2537:rtos/uC-FS/Source/fs_vol.c **** 
2538:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 46


2539:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ---------------------- RD DEV --
2540:rtos/uC-FS/Source/fs_vol.c ****     start += p_vol->PartitionStart;
2541:rtos/uC-FS/Source/fs_vol.c ****     FSDev_RdLocked(p_vol->DevPtr,
2542:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
2543:rtos/uC-FS/Source/fs_vol.c ****                    start,
2544:rtos/uC-FS/Source/fs_vol.c ****                    cnt,
2545:rtos/uC-FS/Source/fs_vol.c ****                    p_err);
2546:rtos/uC-FS/Source/fs_vol.c **** 
2547:rtos/uC-FS/Source/fs_vol.c **** 
2548:rtos/uC-FS/Source/fs_vol.c **** 
2549:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- UPDATE VOL STA
2550:rtos/uC-FS/Source/fs_vol.c ****     FS_CTR_STAT_ADD(p_vol->StatRdSecCtr, (FS_CTR)cnt);
2551:rtos/uC-FS/Source/fs_vol.c **** }
2552:rtos/uC-FS/Source/fs_vol.c **** 
2553:rtos/uC-FS/Source/fs_vol.c **** 
2554:rtos/uC-FS/Source/fs_vol.c **** /*
2555:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2556:rtos/uC-FS/Source/fs_vol.c **** *                                          FSVol_RefreshLocked()
2557:rtos/uC-FS/Source/fs_vol.c **** *
2558:rtos/uC-FS/Source/fs_vol.c **** * Description : Refresh a volume.
2559:rtos/uC-FS/Source/fs_vol.c **** *
2560:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2561:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2562:rtos/uC-FS/Source/fs_vol.c **** *
2563:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2564:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2565:rtos/uC-FS/Source/fs_vol.c **** *
2566:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                    Volume refreshed.
2567:rtos/uC-FS/Source/fs_vol.c **** *
2568:rtos/uC-FS/Source/fs_vol.c **** *                                                              ---- RETURNED BY FSDev_RefreshLocked
2569:rtos/uC-FS/Source/fs_vol.c **** *                                                              ----- RETURNED BY FSVol_OpenLocked()
2570:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_SEC_SIZE    Invalid device sector size.
2571:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_SIZE        Invalid device size.
2572:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_UNKNOWN             Unknown device error.
2573:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_UNIT_NBR    Device unit number is invalid.
2574:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_IO                  Device I/O error.
2575:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_PRESENT         Device is not present.
2576:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_TIMEOUT             Device timeout.
2577:rtos/uC-FS/Source/fs_vol.c **** *
2578:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : DEF_YES, if volume has     changed.
2579:rtos/uC-FS/Source/fs_vol.c **** *               DEF_NO,  if volume has NOT changed.
2580:rtos/uC-FS/Source/fs_vol.c **** *
2581:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2582:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2583:rtos/uC-FS/Source/fs_vol.c **** */
2584:rtos/uC-FS/Source/fs_vol.c **** 
2585:rtos/uC-FS/Source/fs_vol.c **** CPU_BOOLEAN  FSVol_RefreshLocked (FS_VOL  *p_vol,
2586:rtos/uC-FS/Source/fs_vol.c ****                                   FS_ERR  *p_err)
2587:rtos/uC-FS/Source/fs_vol.c **** {
2588:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN  chngd;
2589:rtos/uC-FS/Source/fs_vol.c **** 
2590:rtos/uC-FS/Source/fs_vol.c **** 
2591:rtos/uC-FS/Source/fs_vol.c ****     switch (p_vol->State) {
2592:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
2593:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_PRESENT:
2594:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_MOUNTED:
2595:rtos/uC-FS/Source/fs_vol.c ****              break;
ARM GAS  /tmp/ccvXhXom.s 			page 47


2596:rtos/uC-FS/Source/fs_vol.c **** 
2597:rtos/uC-FS/Source/fs_vol.c **** 
2598:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* If vol not open ...             
2599:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_CLOSED:
2600:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_CLOSING:
2601:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPENING:
2602:rtos/uC-FS/Source/fs_vol.c ****         default:
2603:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_VOL_NOT_OPEN;
2604:rtos/uC-FS/Source/fs_vol.c ****              return (DEF_NO);                                   /*                 ... vol not chng
2605:rtos/uC-FS/Source/fs_vol.c ****     }
2606:rtos/uC-FS/Source/fs_vol.c **** 
2607:rtos/uC-FS/Source/fs_vol.c **** 
2608:rtos/uC-FS/Source/fs_vol.c ****     chngd = DEF_NO;
2609:rtos/uC-FS/Source/fs_vol.c **** 
2610:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->State == FS_VOL_STATE_MOUNTED) {                 /* If vol was mounted ...          
2611:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->RefreshCnt == p_vol->DevPtr->RefreshCnt) {
2612:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_NONE;
2613:rtos/uC-FS/Source/fs_vol.c ****             return (DEF_NO);
2614:rtos/uC-FS/Source/fs_vol.c ****         }
2615:rtos/uC-FS/Source/fs_vol.c **** 
2616:rtos/uC-FS/Source/fs_vol.c ****         if(p_vol->RefreshCnt != p_vol->DevPtr->RefreshCnt) {    /*                    ... but dev c
2617:rtos/uC-FS/Source/fs_vol.c ****         	if (p_vol->RefCnt > 2u) {                           /*      ... check if files are open on
2618:rtos/uC-FS/Source/fs_vol.c ****         		p_vol->State = FS_VOL_STATE_OPEN;               /*      ... if yes, cannot close...      
2619:rtos/uC-FS/Source/fs_vol.c ****         	   *p_err = FS_ERR_DEV_CHNGD;
2620:rtos/uC-FS/Source/fs_vol.c ****         		chngd  = DEF_YES;
2621:rtos/uC-FS/Source/fs_vol.c ****         		return (chngd);
2622:rtos/uC-FS/Source/fs_vol.c ****         	} else {
2623:rtos/uC-FS/Source/fs_vol.c ****         		FSSys_VolClose(p_vol);                          /*                            ... otherwi
2624:rtos/uC-FS/Source/fs_vol.c ****                 p_vol->State = FS_VOL_STATE_OPEN;
2625:rtos/uC-FS/Source/fs_vol.c ****                 chngd        = DEF_YES;
2626:rtos/uC-FS/Source/fs_vol.c ****         	}
2627:rtos/uC-FS/Source/fs_vol.c ****         }
2628:rtos/uC-FS/Source/fs_vol.c ****     }
2629:rtos/uC-FS/Source/fs_vol.c **** 
2630:rtos/uC-FS/Source/fs_vol.c ****     if ((p_vol->State == FS_VOL_STATE_OPEN) ||                  /* Vol not mounted ...             
2631:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_PRESENT)) {
2632:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->DevPtr->State != FS_DEV_STATE_LOW_FMT_VALID) {
2633:rtos/uC-FS/Source/fs_vol.c ****            (void)FSDev_RefreshLocked(p_vol->DevPtr, p_err);     /*                ... refresh dev .
2634:rtos/uC-FS/Source/fs_vol.c **** 
2635:rtos/uC-FS/Source/fs_vol.c ****             if (*p_err != FS_ERR_NONE) {
2636:rtos/uC-FS/Source/fs_vol.c ****                 return (chngd);
2637:rtos/uC-FS/Source/fs_vol.c ****             }
2638:rtos/uC-FS/Source/fs_vol.c ****         }
2639:rtos/uC-FS/Source/fs_vol.c **** 
2640:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->RefCnt > 2u) {                               /* Cannot reopen automatically if f
2641:rtos/uC-FS/Source/fs_vol.c ****         	*p_err = FS_ERR_DEV_CHNGD;
2642:rtos/uC-FS/Source/fs_vol.c ****         	return (chngd);
2643:rtos/uC-FS/Source/fs_vol.c ****         }
2644:rtos/uC-FS/Source/fs_vol.c **** 
2645:rtos/uC-FS/Source/fs_vol.c ****         FSVol_OpenLocked(p_vol, p_err);                         /*                                .
2646:rtos/uC-FS/Source/fs_vol.c **** 
2647:rtos/uC-FS/Source/fs_vol.c ****         if (*p_err == FS_ERR_NONE) {
2648:rtos/uC-FS/Source/fs_vol.c ****             chngd = DEF_YES;
2649:rtos/uC-FS/Source/fs_vol.c ****         }
2650:rtos/uC-FS/Source/fs_vol.c ****     }
2651:rtos/uC-FS/Source/fs_vol.c **** 
2652:rtos/uC-FS/Source/fs_vol.c ****     return (chngd);
ARM GAS  /tmp/ccvXhXom.s 			page 48


2653:rtos/uC-FS/Source/fs_vol.c **** }
2654:rtos/uC-FS/Source/fs_vol.c **** 
2655:rtos/uC-FS/Source/fs_vol.c **** 
2656:rtos/uC-FS/Source/fs_vol.c **** /*
2657:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2658:rtos/uC-FS/Source/fs_vol.c **** *                                        FSVol_ReleaseLocked()
2659:rtos/uC-FS/Source/fs_vol.c **** *
2660:rtos/uC-FS/Source/fs_vol.c **** * Description : Release volume sector(s).
2661:rtos/uC-FS/Source/fs_vol.c **** *
2662:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2663:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2664:rtos/uC-FS/Source/fs_vol.c **** *
2665:rtos/uC-FS/Source/fs_vol.c **** *               start       Start sector of release.
2666:rtos/uC-FS/Source/fs_vol.c **** *
2667:rtos/uC-FS/Source/fs_vol.c **** *               cnt         Number of sectors to release.
2668:rtos/uC-FS/Source/fs_vol.c **** *
2669:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2670:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2671:rtos/uC-FS/Source/fs_vol.c **** *
2672:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                   Volume sector(s) released.
2673:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_SEC_NBR    Sector start or count invalid.
2674:rtos/uC-FS/Source/fs_vol.c **** *
2675:rtos/uC-FS/Source/fs_vol.c **** *                                                             ---- RETURNED BY FSDev_ReleaseLocked(
2676:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level formatte
2677:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_IO                 Device I/O error.
2678:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_TIMEOUT            Device timeout error.
2679:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_PRESENT        Device is not present.
2680:rtos/uC-FS/Source/fs_vol.c **** *
2681:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2682:rtos/uC-FS/Source/fs_vol.c **** *
2683:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2684:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2685:rtos/uC-FS/Source/fs_vol.c **** */
2686:rtos/uC-FS/Source/fs_vol.c **** 
2687:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
2688:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_ReleaseLocked (FS_VOL      *p_vol,
2689:rtos/uC-FS/Source/fs_vol.c ****                            FS_SEC_NBR   start,
2690:rtos/uC-FS/Source/fs_vol.c ****                            FS_SEC_QTY   cnt,
2691:rtos/uC-FS/Source/fs_vol.c ****                            FS_ERR      *p_err)
2692:rtos/uC-FS/Source/fs_vol.c **** {
2693:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_QTY  size;
2694:rtos/uC-FS/Source/fs_vol.c **** 
2695:rtos/uC-FS/Source/fs_vol.c **** 
2696:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ VALIDATE ARGS
2697:rtos/uC-FS/Source/fs_vol.c ****     size = p_vol->PartitionSize;
2698:rtos/uC-FS/Source/fs_vol.c ****     if (start > size) {                                         /* Validate start.                 
2699:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
2700:rtos/uC-FS/Source/fs_vol.c ****         return;
2701:rtos/uC-FS/Source/fs_vol.c ****     }
2702:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt - 1u > size) {                              /* Validate cnt.                   
2703:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
2704:rtos/uC-FS/Source/fs_vol.c ****         return;
2705:rtos/uC-FS/Source/fs_vol.c ****     }
2706:rtos/uC-FS/Source/fs_vol.c **** 
2707:rtos/uC-FS/Source/fs_vol.c **** 
2708:rtos/uC-FS/Source/fs_vol.c **** 
2709:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT                                  /* --------------- RELEASED CACHED 
ARM GAS  /tmp/ccvXhXom.s 			page 49


2710:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->CacheAPI_Ptr != (FS_VOL_CACHE_API *)0) {
2711:rtos/uC-FS/Source/fs_vol.c ****         p_vol->CacheAPI_Ptr->Release(p_vol,
2712:rtos/uC-FS/Source/fs_vol.c ****                                      start,
2713:rtos/uC-FS/Source/fs_vol.c ****                                      cnt,
2714:rtos/uC-FS/Source/fs_vol.c ****                                      p_err);
2715:rtos/uC-FS/Source/fs_vol.c ****     }
2716:rtos/uC-FS/Source/fs_vol.c **** #endif
2717:rtos/uC-FS/Source/fs_vol.c **** 
2718:rtos/uC-FS/Source/fs_vol.c **** 
2719:rtos/uC-FS/Source/fs_vol.c **** 
2720:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE DEV SE
2721:rtos/uC-FS/Source/fs_vol.c ****     start += p_vol->PartitionStart;
2722:rtos/uC-FS/Source/fs_vol.c ****     FSDev_ReleaseLocked(p_vol->DevPtr,
2723:rtos/uC-FS/Source/fs_vol.c ****                         start,
2724:rtos/uC-FS/Source/fs_vol.c ****                         cnt,
2725:rtos/uC-FS/Source/fs_vol.c ****                         p_err);
2726:rtos/uC-FS/Source/fs_vol.c **** }
2727:rtos/uC-FS/Source/fs_vol.c **** #endif
2728:rtos/uC-FS/Source/fs_vol.c **** 
2729:rtos/uC-FS/Source/fs_vol.c **** 
2730:rtos/uC-FS/Source/fs_vol.c **** /*
2731:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2732:rtos/uC-FS/Source/fs_vol.c **** *                                          FSVol_WrLocked()
2733:rtos/uC-FS/Source/fs_vol.c **** *
2734:rtos/uC-FS/Source/fs_vol.c **** * Description : Write data to volume sector(s).
2735:rtos/uC-FS/Source/fs_vol.c **** *
2736:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2737:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2738:rtos/uC-FS/Source/fs_vol.c **** *
2739:rtos/uC-FS/Source/fs_vol.c **** *               p_src       Pointer to source buffer.
2740:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2741:rtos/uC-FS/Source/fs_vol.c **** *
2742:rtos/uC-FS/Source/fs_vol.c **** *               start       Start sector of read.
2743:rtos/uC-FS/Source/fs_vol.c **** *
2744:rtos/uC-FS/Source/fs_vol.c **** *               cnt         Number of sectors to read.
2745:rtos/uC-FS/Source/fs_vol.c **** *
2746:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2747:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2748:rtos/uC-FS/Source/fs_vol.c **** *
2749:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                   Volume sector(s) written.
2750:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_INVALID_SEC_NBR    Sector start or count invalid.
2751:rtos/uC-FS/Source/fs_vol.c **** *
2752:rtos/uC-FS/Source/fs_vol.c **** *                                                             ------- RETURNED BY FSDev_WrLocked() 
2753:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level formatte
2754:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_IO                 Device I/O error.
2755:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_TIMEOUT            Device timeout error.
2756:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_PRESENT        Device is not present.
2757:rtos/uC-FS/Source/fs_vol.c **** *
2758:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2759:rtos/uC-FS/Source/fs_vol.c **** *
2760:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2761:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2762:rtos/uC-FS/Source/fs_vol.c **** */
2763:rtos/uC-FS/Source/fs_vol.c **** 
2764:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
2765:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_WrLocked (FS_VOL      *p_vol,
2766:rtos/uC-FS/Source/fs_vol.c ****                       void        *p_src,
ARM GAS  /tmp/ccvXhXom.s 			page 50


2767:rtos/uC-FS/Source/fs_vol.c ****                       FS_SEC_NBR   start,
2768:rtos/uC-FS/Source/fs_vol.c ****                       FS_SEC_QTY   cnt,
2769:rtos/uC-FS/Source/fs_vol.c ****                       FS_ERR      *p_err)
2770:rtos/uC-FS/Source/fs_vol.c **** {
2771:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV      *p_dev;
2772:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
2773:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_QTY   size;
2774:rtos/uC-FS/Source/fs_vol.c **** #endif
2775:rtos/uC-FS/Source/fs_vol.c **** 
2776:rtos/uC-FS/Source/fs_vol.c **** 
2777:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ VALIDATE ARGS
2778:rtos/uC-FS/Source/fs_vol.c ****     p_dev = p_vol->DevPtr;
2779:rtos/uC-FS/Source/fs_vol.c **** 
2780:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
2781:rtos/uC-FS/Source/fs_vol.c ****     size  = p_vol->PartitionSize;
2782:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
2783:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
2784:rtos/uC-FS/Source/fs_vol.c ****         return;
2785:rtos/uC-FS/Source/fs_vol.c ****     }
2786:rtos/uC-FS/Source/fs_vol.c **** #endif
2787:rtos/uC-FS/Source/fs_vol.c **** 
2788:rtos/uC-FS/Source/fs_vol.c ****     start += p_vol->PartitionStart;
2789:rtos/uC-FS/Source/fs_vol.c **** 
2790:rtos/uC-FS/Source/fs_vol.c **** 
2791:rtos/uC-FS/Source/fs_vol.c **** 
2792:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ---------------------- WR DEV --
2793:rtos/uC-FS/Source/fs_vol.c ****     FSDev_WrLocked(p_dev,
2794:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
2795:rtos/uC-FS/Source/fs_vol.c ****                    start,
2796:rtos/uC-FS/Source/fs_vol.c ****                    cnt,
2797:rtos/uC-FS/Source/fs_vol.c ****                    p_err);
2798:rtos/uC-FS/Source/fs_vol.c **** 
2799:rtos/uC-FS/Source/fs_vol.c **** 
2800:rtos/uC-FS/Source/fs_vol.c **** 
2801:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- UPDATE VOL STA
2802:rtos/uC-FS/Source/fs_vol.c ****     FS_CTR_STAT_ADD(p_vol->StatWrSecCtr, (FS_CTR)cnt);
2803:rtos/uC-FS/Source/fs_vol.c **** }
2804:rtos/uC-FS/Source/fs_vol.c **** #endif
2805:rtos/uC-FS/Source/fs_vol.c **** 
2806:rtos/uC-FS/Source/fs_vol.c **** 
2807:rtos/uC-FS/Source/fs_vol.c **** /*
2808:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2809:rtos/uC-FS/Source/fs_vol.c **** *                                         FSVol_WrLockedEx()
2810:rtos/uC-FS/Source/fs_vol.c **** *
2811:rtos/uC-FS/Source/fs_vol.c **** * Description : Write data to volume sector(s).
2812:rtos/uC-FS/Source/fs_vol.c **** *
2813:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2814:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2815:rtos/uC-FS/Source/fs_vol.c **** *
2816:rtos/uC-FS/Source/fs_vol.c **** *               p_src       Pointer to source buffer.
2817:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2818:rtos/uC-FS/Source/fs_vol.c **** *
2819:rtos/uC-FS/Source/fs_vol.c **** *               start       Start sector of read.
2820:rtos/uC-FS/Source/fs_vol.c **** *
2821:rtos/uC-FS/Source/fs_vol.c **** *               cnt         Number of sectors to read.
2822:rtos/uC-FS/Source/fs_vol.c **** *
2823:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
ARM GAS  /tmp/ccvXhXom.s 			page 51


2824:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2825:rtos/uC-FS/Source/fs_vol.c **** *
2826:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                   Volume sector(s) written.
2827:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_VOL_INVALID_SEC_NBR    Sector start or count invalid.
2828:rtos/uC-FS/Source/fs_vol.c **** *
2829:rtos/uC-FS/Source/fs_vol.c **** *                                                             ------- RETURNED BY FSDev_WrLocked() 
2830:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level formatte
2831:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_IO                 Device I/O error.
2832:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_TIMEOUT            Device timeout error.
2833:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_DEV_NOT_PRESENT        Device is not present.
2834:rtos/uC-FS/Source/fs_vol.c **** *
2835:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2836:rtos/uC-FS/Source/fs_vol.c **** *
2837:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2838:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2839:rtos/uC-FS/Source/fs_vol.c **** */
2840:rtos/uC-FS/Source/fs_vol.c **** 
2841:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
2842:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_WrLockedEx (FS_VOL      *p_vol,
2843:rtos/uC-FS/Source/fs_vol.c ****                         void        *p_src,
2844:rtos/uC-FS/Source/fs_vol.c ****                         FS_SEC_NBR   start,
2845:rtos/uC-FS/Source/fs_vol.c ****                         FS_SEC_QTY   cnt,
2846:rtos/uC-FS/Source/fs_vol.c ****                         FS_FLAGS     sec_type,
2847:rtos/uC-FS/Source/fs_vol.c ****                         FS_ERR      *p_err)
2848:rtos/uC-FS/Source/fs_vol.c **** {
2849:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
2850:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_QTY  size;
2851:rtos/uC-FS/Source/fs_vol.c **** #endif
2852:rtos/uC-FS/Source/fs_vol.c **** 
2853:rtos/uC-FS/Source/fs_vol.c **** 
2854:rtos/uC-FS/Source/fs_vol.c ****     (void)sec_type;
2855:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ VALIDATE ARGS
2856:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
2857:rtos/uC-FS/Source/fs_vol.c ****     size = p_vol->PartitionSize;
2858:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
2859:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
2860:rtos/uC-FS/Source/fs_vol.c ****         return;
2861:rtos/uC-FS/Source/fs_vol.c ****     }
2862:rtos/uC-FS/Source/fs_vol.c **** #endif
2863:rtos/uC-FS/Source/fs_vol.c **** 
2864:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* -------------- CHECK VOLUME VALI
2865:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->RefreshCnt != p_vol->DevPtr->RefreshCnt) {       /* Volume is invalid following a de
2866:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_CHNGD;                               /* cannot continue, return with err
2867:rtos/uC-FS/Source/fs_vol.c ****         return;
2868:rtos/uC-FS/Source/fs_vol.c ****     }
2869:rtos/uC-FS/Source/fs_vol.c **** 
2870:rtos/uC-FS/Source/fs_vol.c **** 
2871:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT                                  /* ----------------- WR THROUGH CAC
2872:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->CacheAPI_Ptr != (FS_VOL_CACHE_API *)0) {
2873:rtos/uC-FS/Source/fs_vol.c ****         p_vol->CacheAPI_Ptr->Wr(p_vol,
2874:rtos/uC-FS/Source/fs_vol.c ****                                 p_src,
2875:rtos/uC-FS/Source/fs_vol.c ****                                 start,
2876:rtos/uC-FS/Source/fs_vol.c ****                                 cnt,
2877:rtos/uC-FS/Source/fs_vol.c ****                                 sec_type,
2878:rtos/uC-FS/Source/fs_vol.c ****                                 p_err);
2879:rtos/uC-FS/Source/fs_vol.c ****         FS_CTR_STAT_ADD(p_vol->StatWrSecCtr, (FS_CTR)cnt);
2880:rtos/uC-FS/Source/fs_vol.c ****         return;
ARM GAS  /tmp/ccvXhXom.s 			page 52


2881:rtos/uC-FS/Source/fs_vol.c ****     }
2882:rtos/uC-FS/Source/fs_vol.c **** #endif
2883:rtos/uC-FS/Source/fs_vol.c **** 
2884:rtos/uC-FS/Source/fs_vol.c **** 
2885:rtos/uC-FS/Source/fs_vol.c **** 
2886:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ---------------------- WR DEV --
2887:rtos/uC-FS/Source/fs_vol.c ****     start += p_vol->PartitionStart;
2888:rtos/uC-FS/Source/fs_vol.c ****     FSDev_WrLocked(p_vol->DevPtr,
2889:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
2890:rtos/uC-FS/Source/fs_vol.c ****                    start,
2891:rtos/uC-FS/Source/fs_vol.c ****                    cnt,
2892:rtos/uC-FS/Source/fs_vol.c ****                    p_err);
2893:rtos/uC-FS/Source/fs_vol.c **** 
2894:rtos/uC-FS/Source/fs_vol.c **** 
2895:rtos/uC-FS/Source/fs_vol.c **** 
2896:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- UPDATE VOL STA
2897:rtos/uC-FS/Source/fs_vol.c ****     FS_CTR_STAT_ADD(p_vol->StatWrSecCtr, (FS_CTR)cnt);
2898:rtos/uC-FS/Source/fs_vol.c **** }
2899:rtos/uC-FS/Source/fs_vol.c **** #endif
2900:rtos/uC-FS/Source/fs_vol.c **** 
2901:rtos/uC-FS/Source/fs_vol.c **** 
2902:rtos/uC-FS/Source/fs_vol.c **** /*
2903:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2904:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_DirAdd()
2905:rtos/uC-FS/Source/fs_vol.c **** *
2906:rtos/uC-FS/Source/fs_vol.c **** * Description : Add directory to open directory list.
2907:rtos/uC-FS/Source/fs_vol.c **** *
2908:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2909:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2910:rtos/uC-FS/Source/fs_vol.c **** *
2911:rtos/uC-FS/Source/fs_vol.c **** *               p_dir       Pointer to directory.
2912:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2913:rtos/uC-FS/Source/fs_vol.c **** *
2914:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2915:rtos/uC-FS/Source/fs_vol.c **** *
2916:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2917:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2918:rtos/uC-FS/Source/fs_vol.c **** */
2919:rtos/uC-FS/Source/fs_vol.c **** 
2920:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
2921:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_DirAdd (FS_VOL  *p_vol,
2922:rtos/uC-FS/Source/fs_vol.c ****                     FS_DIR  *p_dir)
2923:rtos/uC-FS/Source/fs_vol.c **** {
2924:rtos/uC-FS/Source/fs_vol.c ****    (void)p_dir;                                                 /*lint --e{550} Suppress "Symbol no
2925:rtos/uC-FS/Source/fs_vol.c **** 
2926:rtos/uC-FS/Source/fs_vol.c ****     p_vol->DirCnt++;
2927:rtos/uC-FS/Source/fs_vol.c **** }
2928:rtos/uC-FS/Source/fs_vol.c **** #endif
2929:rtos/uC-FS/Source/fs_vol.c **** 
2930:rtos/uC-FS/Source/fs_vol.c **** 
2931:rtos/uC-FS/Source/fs_vol.c **** /*
2932:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2933:rtos/uC-FS/Source/fs_vol.c **** *                                          FSVol_DirRemove()
2934:rtos/uC-FS/Source/fs_vol.c **** *
2935:rtos/uC-FS/Source/fs_vol.c **** * Description : Remove directory from open directory list.
2936:rtos/uC-FS/Source/fs_vol.c **** *
2937:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
ARM GAS  /tmp/ccvXhXom.s 			page 53


2938:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2939:rtos/uC-FS/Source/fs_vol.c **** *
2940:rtos/uC-FS/Source/fs_vol.c **** *               p_dir       Pointer to directory.
2941:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2942:rtos/uC-FS/Source/fs_vol.c **** *
2943:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2944:rtos/uC-FS/Source/fs_vol.c **** *
2945:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2946:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2947:rtos/uC-FS/Source/fs_vol.c **** */
2948:rtos/uC-FS/Source/fs_vol.c **** 
2949:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
2950:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_DirRemove (FS_VOL  *p_vol,
2951:rtos/uC-FS/Source/fs_vol.c ****                        FS_DIR  *p_dir)
2952:rtos/uC-FS/Source/fs_vol.c **** {
2953:rtos/uC-FS/Source/fs_vol.c ****    (void)p_dir;                                                 /*lint --e{550} Suppress "Symbol no
2954:rtos/uC-FS/Source/fs_vol.c **** 
2955:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->DirCnt > 0u) {
2956:rtos/uC-FS/Source/fs_vol.c ****         p_vol->DirCnt--;
2957:rtos/uC-FS/Source/fs_vol.c ****     }
2958:rtos/uC-FS/Source/fs_vol.c **** }
2959:rtos/uC-FS/Source/fs_vol.c **** #endif
2960:rtos/uC-FS/Source/fs_vol.c **** 
2961:rtos/uC-FS/Source/fs_vol.c **** 
2962:rtos/uC-FS/Source/fs_vol.c **** /*
2963:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2964:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_FileAdd()
2965:rtos/uC-FS/Source/fs_vol.c **** *
2966:rtos/uC-FS/Source/fs_vol.c **** * Description : Add file to open file list.
2967:rtos/uC-FS/Source/fs_vol.c **** *
2968:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
2969:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2970:rtos/uC-FS/Source/fs_vol.c **** *
2971:rtos/uC-FS/Source/fs_vol.c **** *               p_file      Pointer to file.
2972:rtos/uC-FS/Source/fs_vol.c **** *               ------      Argument validated by caller.
2973:rtos/uC-FS/Source/fs_vol.c **** *
2974:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
2975:rtos/uC-FS/Source/fs_vol.c **** *
2976:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
2977:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2978:rtos/uC-FS/Source/fs_vol.c **** */
2979:rtos/uC-FS/Source/fs_vol.c **** 
2980:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_FileAdd (FS_VOL   *p_vol,
2981:rtos/uC-FS/Source/fs_vol.c ****                      FS_FILE  *p_file)
2982:rtos/uC-FS/Source/fs_vol.c **** {
2983:rtos/uC-FS/Source/fs_vol.c ****    (void)p_file;                                                /*lint --e{550} Suppress "Symbol no
2984:rtos/uC-FS/Source/fs_vol.c **** 
2985:rtos/uC-FS/Source/fs_vol.c ****     p_vol->FileCnt++;
2986:rtos/uC-FS/Source/fs_vol.c **** }
2987:rtos/uC-FS/Source/fs_vol.c **** 
2988:rtos/uC-FS/Source/fs_vol.c **** 
2989:rtos/uC-FS/Source/fs_vol.c **** /*
2990:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
2991:rtos/uC-FS/Source/fs_vol.c **** *                                         FSVol_FileRemove()
2992:rtos/uC-FS/Source/fs_vol.c **** *
2993:rtos/uC-FS/Source/fs_vol.c **** * Description : Remove file from open file list.
2994:rtos/uC-FS/Source/fs_vol.c **** *
ARM GAS  /tmp/ccvXhXom.s 			page 54


2995:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_dev       Pointer to device.
2996:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
2997:rtos/uC-FS/Source/fs_vol.c **** *
2998:rtos/uC-FS/Source/fs_vol.c **** *               p_file      Pointer to file.
2999:rtos/uC-FS/Source/fs_vol.c **** *               ------      Argument validated by caller.
3000:rtos/uC-FS/Source/fs_vol.c **** *
3001:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
3002:rtos/uC-FS/Source/fs_vol.c **** *
3003:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST have acquired a reference to the volume & hold the dev
3004:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3005:rtos/uC-FS/Source/fs_vol.c **** */
3006:rtos/uC-FS/Source/fs_vol.c **** 
3007:rtos/uC-FS/Source/fs_vol.c **** void  FSVol_FileRemove (FS_VOL   *p_vol,
3008:rtos/uC-FS/Source/fs_vol.c ****                         FS_FILE  *p_file)
3009:rtos/uC-FS/Source/fs_vol.c **** {
3010:rtos/uC-FS/Source/fs_vol.c ****    (void)p_file;                                                /*lint --e{550} Suppress "Symbol no
3011:rtos/uC-FS/Source/fs_vol.c **** 
3012:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol->FileCnt > 0u) {
3013:rtos/uC-FS/Source/fs_vol.c ****         p_vol->FileCnt--;
3014:rtos/uC-FS/Source/fs_vol.c ****     }
3015:rtos/uC-FS/Source/fs_vol.c **** }
3016:rtos/uC-FS/Source/fs_vol.c **** 
3017:rtos/uC-FS/Source/fs_vol.c **** 
3018:rtos/uC-FS/Source/fs_vol.c **** /*
3019:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3020:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3021:rtos/uC-FS/Source/fs_vol.c **** *                                           LOCAL FUNCTIONS
3022:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3023:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3024:rtos/uC-FS/Source/fs_vol.c **** */
3025:rtos/uC-FS/Source/fs_vol.c **** 
3026:rtos/uC-FS/Source/fs_vol.c **** /*
3027:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3028:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_ObjClr()
3029:rtos/uC-FS/Source/fs_vol.c **** *
3030:rtos/uC-FS/Source/fs_vol.c **** * Description : Clear a volume object.
3031:rtos/uC-FS/Source/fs_vol.c **** *
3032:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to volume.
3033:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
3034:rtos/uC-FS/Source/fs_vol.c **** *
3035:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
3036:rtos/uC-FS/Source/fs_vol.c **** *
3037:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST hold the file system lock.
3038:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3039:rtos/uC-FS/Source/fs_vol.c **** */
3040:rtos/uC-FS/Source/fs_vol.c **** 
3041:rtos/uC-FS/Source/fs_vol.c **** static  void  FSVol_ObjClr (FS_VOL  *p_vol)
3042:rtos/uC-FS/Source/fs_vol.c **** {
3043:rtos/uC-FS/Source/fs_vol.c ****     p_vol->State          =  FS_VOL_STATE_CLOSED;
3044:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefCnt         =  0u;
3045:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefreshCnt     =  0u;
3046:rtos/uC-FS/Source/fs_vol.c **** 
3047:rtos/uC-FS/Source/fs_vol.c ****     p_vol->AccessMode     =  FS_VOL_ACCESS_MODE_NONE;
3048:rtos/uC-FS/Source/fs_vol.c **** 
3049:rtos/uC-FS/Source/fs_vol.c ****     Mem_Set((void       *)&p_vol->Name[0],
3050:rtos/uC-FS/Source/fs_vol.c ****             (CPU_INT08U  ) ASCII_CHAR_NULL,
3051:rtos/uC-FS/Source/fs_vol.c ****             (CPU_SIZE_T  )(FS_CFG_MAX_VOL_NAME_LEN + 1u));
ARM GAS  /tmp/ccvXhXom.s 			page 55


3052:rtos/uC-FS/Source/fs_vol.c **** 
3053:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionNbr   =  0u;
3054:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionStart =  0u;
3055:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionSize  =  0u;
3056:rtos/uC-FS/Source/fs_vol.c ****     p_vol->SecSize        =  0u;
3057:rtos/uC-FS/Source/fs_vol.c **** 
3058:rtos/uC-FS/Source/fs_vol.c ****     p_vol->FileCnt        =  0u;
3059:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
3060:rtos/uC-FS/Source/fs_vol.c ****     p_vol->DirCnt         =  0u;
3061:rtos/uC-FS/Source/fs_vol.c **** #endif
3062:rtos/uC-FS/Source/fs_vol.c ****     p_vol->DevPtr         = (FS_DEV *)0;
3063:rtos/uC-FS/Source/fs_vol.c ****     p_vol->DataPtr        = (void   *)0;
3064:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT
3065:rtos/uC-FS/Source/fs_vol.c ****     p_vol->CacheDataPtr   = (void             *)0;
3066:rtos/uC-FS/Source/fs_vol.c ****     p_vol->CacheAPI_Ptr   = (FS_VOL_CACHE_API *)0;
3067:rtos/uC-FS/Source/fs_vol.c **** #endif
3068:rtos/uC-FS/Source/fs_vol.c **** 
3069:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_CTR_STAT_EN   == DEF_ENABLED)
3070:rtos/uC-FS/Source/fs_vol.c ****     p_vol->StatRdSecCtr   =  0u;
3071:rtos/uC-FS/Source/fs_vol.c ****     p_vol->StatWrSecCtr   =  0u;
3072:rtos/uC-FS/Source/fs_vol.c **** #endif
3073:rtos/uC-FS/Source/fs_vol.c **** }
3074:rtos/uC-FS/Source/fs_vol.c **** 
3075:rtos/uC-FS/Source/fs_vol.c **** 
3076:rtos/uC-FS/Source/fs_vol.c **** /*
3077:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3078:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_ObjFind()
3079:rtos/uC-FS/Source/fs_vol.c **** *
3080:rtos/uC-FS/Source/fs_vol.c **** * Description : Find a volume object by name.
3081:rtos/uC-FS/Source/fs_vol.c **** *
3082:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
3083:rtos/uC-FS/Source/fs_vol.c **** *               ----------  Argument validated by caller.
3084:rtos/uC-FS/Source/fs_vol.c **** *
3085:rtos/uC-FS/Source/fs_vol.c **** *               p_err       Pointer to variable that will receive the return error code from this f
3086:rtos/uC-FS/Source/fs_vol.c **** *               ----------  Argument validated by caller.
3087:rtos/uC-FS/Source/fs_vol.c **** *
3088:rtos/uC-FS/Source/fs_vol.c **** *                               FS_ERR_NONE                   Volume object found.
3089:rtos/uC-FS/Source/fs_vol.c **** *
3090:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : Pointer to a volume, if found.
3091:rtos/uC-FS/Source/fs_vol.c **** *               Pointer to NULL,     otherwise.
3092:rtos/uC-FS/Source/fs_vol.c **** *
3093:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST hold the file system lock.
3094:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3095:rtos/uC-FS/Source/fs_vol.c **** */
3096:rtos/uC-FS/Source/fs_vol.c **** 
3097:rtos/uC-FS/Source/fs_vol.c **** static  FS_VOL  *FSVol_ObjFind (CPU_CHAR  *name_vol,
3098:rtos/uC-FS/Source/fs_vol.c ****                                 FS_ERR    *p_err)
3099:rtos/uC-FS/Source/fs_vol.c **** {
3100:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY       ix;
3101:rtos/uC-FS/Source/fs_vol.c ****     CPU_INT16S   cmp;
3102:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL      *p_vol;
3103:rtos/uC-FS/Source/fs_vol.c **** 
3104:rtos/uC-FS/Source/fs_vol.c **** 
3105:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;
3106:rtos/uC-FS/Source/fs_vol.c ****     p_vol      = DEF_NULL;
3107:rtos/uC-FS/Source/fs_vol.c **** 
3108:rtos/uC-FS/Source/fs_vol.c ****     for (ix = 0u; ix < FSVol_VolCntMax; ix++) {
ARM GAS  /tmp/ccvXhXom.s 			page 56


3109:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
3110:rtos/uC-FS/Source/fs_vol.c ****             cmp = Str_Cmp_N(name_vol, FSVol_Tbl[ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
3111:rtos/uC-FS/Source/fs_vol.c ****             if (cmp == 0) {
3112:rtos/uC-FS/Source/fs_vol.c ****                 p_vol = FSVol_Tbl[ix];
3113:rtos/uC-FS/Source/fs_vol.c ****                 break;
3114:rtos/uC-FS/Source/fs_vol.c ****             }
3115:rtos/uC-FS/Source/fs_vol.c ****         }
3116:rtos/uC-FS/Source/fs_vol.c ****     }
3117:rtos/uC-FS/Source/fs_vol.c **** 
3118:rtos/uC-FS/Source/fs_vol.c ****     return (p_vol);
3119:rtos/uC-FS/Source/fs_vol.c **** }
3120:rtos/uC-FS/Source/fs_vol.c **** 
3121:rtos/uC-FS/Source/fs_vol.c **** 
3122:rtos/uC-FS/Source/fs_vol.c **** /*
3123:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3124:rtos/uC-FS/Source/fs_vol.c **** *                                          FSVol_ObjFindEx()
3125:rtos/uC-FS/Source/fs_vol.c **** *
3126:rtos/uC-FS/Source/fs_vol.c **** * Description : Find a volume object by name OR device/partition.
3127:rtos/uC-FS/Source/fs_vol.c **** *
3128:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : name_vol    Volume name.
3129:rtos/uC-FS/Source/fs_vol.c **** *
3130:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : Pointer to a volume, if found.
3131:rtos/uC-FS/Source/fs_vol.c **** *               Pointer to NULL,     otherwise.
3132:rtos/uC-FS/Source/fs_vol.c **** *
3133:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST hold the file system lock.
3134:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3135:rtos/uC-FS/Source/fs_vol.c **** */
3136:rtos/uC-FS/Source/fs_vol.c **** 
3137:rtos/uC-FS/Source/fs_vol.c **** static  FS_VOL  *FSVol_ObjFindEx (CPU_CHAR          *name_vol,
3138:rtos/uC-FS/Source/fs_vol.c ****                                   FS_DEV            *p_dev,
3139:rtos/uC-FS/Source/fs_vol.c ****                                   FS_PARTITION_NBR   partition_nbr)
3140:rtos/uC-FS/Source/fs_vol.c **** {
  29              		.loc 1 3140 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 3140 1 is_stmt 0 view .LVU1
  34 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 4, -24
  38              		.cfi_offset 5, -20
  39              		.cfi_offset 6, -16
  40              		.cfi_offset 7, -12
  41              		.cfi_offset 8, -8
  42              		.cfi_offset 14, -4
  43 0004 0546     		mov	r5, r0
  44 0006 0E46     		mov	r6, r1
  45 0008 1746     		mov	r7, r2
3141:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY       vol_ix;
  46              		.loc 1 3141 5 is_stmt 1 view .LVU2
3142:rtos/uC-FS/Source/fs_vol.c ****     CPU_INT16S   cmp;
  47              		.loc 1 3142 5 view .LVU3
3143:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL      *p_vol;
  48              		.loc 1 3143 5 view .LVU4
3144:rtos/uC-FS/Source/fs_vol.c **** 
3145:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 57


3146:rtos/uC-FS/Source/fs_vol.c ****     p_vol      = DEF_NULL;
  49              		.loc 1 3146 5 view .LVU5
  50              	.LVL1:
3147:rtos/uC-FS/Source/fs_vol.c **** 
3148:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
  51              		.loc 1 3148 5 view .LVU6
  52              		.loc 1 3148 17 is_stmt 0 view .LVU7
  53 000a 0024     		movs	r4, #0
  54              		.loc 1 3148 5 view .LVU8
  55 000c 06E0     		b	.L2
  56              	.LVL2:
  57              	.L9:
3149:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
3150:rtos/uC-FS/Source/fs_vol.c ****             cmp = Str_Cmp_N(name_vol, FSVol_Tbl[vol_ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
3151:rtos/uC-FS/Source/fs_vol.c ****             if ((cmp == 0)) {                                   /* Cmp names.                      
3152:rtos/uC-FS/Source/fs_vol.c ****                 p_vol = FSVol_Tbl[vol_ix];
  58              		.loc 1 3152 17 is_stmt 1 view .LVU9
  59              		.loc 1 3152 34 is_stmt 0 view .LVU10
  60 000e 144B     		ldr	r3, .L10
  61 0010 1B68     		ldr	r3, [r3]
  62              		.loc 1 3152 23 view .LVU11
  63 0012 53F80800 		ldr	r0, [r3, r8]
  64              	.LVL3:
3153:rtos/uC-FS/Source/fs_vol.c ****                 return (p_vol);
  65              		.loc 1 3153 17 is_stmt 1 view .LVU12
  66              		.loc 1 3153 24 is_stmt 0 view .LVU13
  67 0016 20E0     		b	.L1
  68              	.LVL4:
  69              	.L3:
3148:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
  70              		.loc 1 3148 49 is_stmt 1 discriminator 2 view .LVU14
3148:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
  71              		.loc 1 3148 55 is_stmt 0 discriminator 2 view .LVU15
  72 0018 0134     		adds	r4, r4, #1
  73              	.LVL5:
3148:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
  74              		.loc 1 3148 55 discriminator 2 view .LVU16
  75 001a A4B2     		uxth	r4, r4
  76              	.LVL6:
  77              	.L2:
3148:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
  78              		.loc 1 3148 23 is_stmt 1 discriminator 1 view .LVU17
3148:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
  79              		.loc 1 3148 30 is_stmt 0 discriminator 1 view .LVU18
  80 001c 114B     		ldr	r3, .L10+4
  81 001e 1B88     		ldrh	r3, [r3]
3148:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
  82              		.loc 1 3148 5 discriminator 1 view .LVU19
  83 0020 A342     		cmp	r3, r4
  84 0022 19D9     		bls	.L8
3149:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
  85              		.loc 1 3149 9 is_stmt 1 view .LVU20
3149:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
  86              		.loc 1 3149 22 is_stmt 0 view .LVU21
  87 0024 4FEA8408 		lsl	r8, r4, #2
  88 0028 0D4B     		ldr	r3, .L10
  89 002a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccvXhXom.s 			page 58


  90 002c 53F82410 		ldr	r1, [r3, r4, lsl #2]
3149:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
  91              		.loc 1 3149 12 view .LVU22
  92 0030 0029     		cmp	r1, #0
  93 0032 F1D0     		beq	.L3
3150:rtos/uC-FS/Source/fs_vol.c ****             if ((cmp == 0)) {                                   /* Cmp names.                      
  94              		.loc 1 3150 13 is_stmt 1 view .LVU23
3150:rtos/uC-FS/Source/fs_vol.c ****             if ((cmp == 0)) {                                   /* Cmp names.                      
  95              		.loc 1 3150 19 is_stmt 0 view .LVU24
  96 0034 0A22     		movs	r2, #10
  97 0036 1031     		adds	r1, r1, #16
  98 0038 2846     		mov	r0, r5
  99 003a FFF7FEFF 		bl	Str_Cmp_N
 100              	.LVL7:
3151:rtos/uC-FS/Source/fs_vol.c ****                 p_vol = FSVol_Tbl[vol_ix];
 101              		.loc 1 3151 13 is_stmt 1 view .LVU25
3151:rtos/uC-FS/Source/fs_vol.c ****                 p_vol = FSVol_Tbl[vol_ix];
 102              		.loc 1 3151 16 is_stmt 0 view .LVU26
 103 003e 0028     		cmp	r0, #0
 104 0040 E5D0     		beq	.L9
3154:rtos/uC-FS/Source/fs_vol.c ****             } else {
3155:rtos/uC-FS/Source/fs_vol.c ****                 if (FSVol_Tbl[vol_ix]->DevPtr == p_dev) {       /* Cmp dev/partition.              
 105              		.loc 1 3155 17 is_stmt 1 view .LVU27
 106              		.loc 1 3155 30 is_stmt 0 view .LVU28
 107 0042 074B     		ldr	r3, .L10
 108 0044 1B68     		ldr	r3, [r3]
 109 0046 53F80800 		ldr	r0, [r3, r8]
 110              	.LVL8:
 111              		.loc 1 3155 38 view .LVU29
 112 004a 036B     		ldr	r3, [r0, #48]
 113              		.loc 1 3155 20 view .LVU30
 114 004c B342     		cmp	r3, r6
 115 004e E3D1     		bne	.L3
3156:rtos/uC-FS/Source/fs_vol.c ****                     if (FSVol_Tbl[vol_ix]->PartitionNbr == partition_nbr) {
 116              		.loc 1 3156 21 is_stmt 1 view .LVU31
 117              		.loc 1 3156 42 is_stmt 0 view .LVU32
 118 0050 838B     		ldrh	r3, [r0, #28]
 119              		.loc 1 3156 24 view .LVU33
 120 0052 BB42     		cmp	r3, r7
 121 0054 E0D1     		bne	.L3
 122 0056 00E0     		b	.L1
 123              	.L8:
3157:rtos/uC-FS/Source/fs_vol.c ****                         p_vol = FSVol_Tbl[vol_ix];
3158:rtos/uC-FS/Source/fs_vol.c ****                         return (p_vol);
3159:rtos/uC-FS/Source/fs_vol.c ****                     }
3160:rtos/uC-FS/Source/fs_vol.c ****                 }
3161:rtos/uC-FS/Source/fs_vol.c ****             }
3162:rtos/uC-FS/Source/fs_vol.c ****         }
3163:rtos/uC-FS/Source/fs_vol.c ****     }
3164:rtos/uC-FS/Source/fs_vol.c **** 
3165:rtos/uC-FS/Source/fs_vol.c ****     return (p_vol);
 124              		.loc 1 3165 12 view .LVU34
 125 0058 0020     		movs	r0, #0
 126              	.LVL9:
 127              	.L1:
3166:rtos/uC-FS/Source/fs_vol.c **** }
 128              		.loc 1 3166 1 view .LVU35
ARM GAS  /tmp/ccvXhXom.s 			page 59


 129 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 130              	.LVL10:
 131              	.L11:
 132              		.loc 1 3166 1 view .LVU36
 133 005e 00BF     		.align	2
 134              	.L10:
 135 0060 00000000 		.word	.LANCHOR0
 136 0064 00000000 		.word	.LANCHOR1
 137              		.cfi_endproc
 138              	.LFE36:
 140              		.section	.text.FSVol_ObjFind,"ax",%progbits
 141              		.align	1
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	FSVol_ObjFind:
 148              	.LVL11:
 149              	.LFB35:
3099:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY       ix;
 150              		.loc 1 3099 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
3099:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY       ix;
 154              		.loc 1 3099 1 is_stmt 0 view .LVU38
 155 0000 70B5     		push	{r4, r5, r6, lr}
 156              	.LCFI1:
 157              		.cfi_def_cfa_offset 16
 158              		.cfi_offset 4, -16
 159              		.cfi_offset 5, -12
 160              		.cfi_offset 6, -8
 161              		.cfi_offset 14, -4
 162 0002 0546     		mov	r5, r0
3100:rtos/uC-FS/Source/fs_vol.c ****     CPU_INT16S   cmp;
 163              		.loc 1 3100 5 is_stmt 1 view .LVU39
3101:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL      *p_vol;
 164              		.loc 1 3101 5 view .LVU40
3102:rtos/uC-FS/Source/fs_vol.c **** 
 165              		.loc 1 3102 5 view .LVU41
3105:rtos/uC-FS/Source/fs_vol.c ****     p_vol      = DEF_NULL;
 166              		.loc 1 3105 5 view .LVU42
3106:rtos/uC-FS/Source/fs_vol.c **** 
 167              		.loc 1 3106 5 view .LVU43
 168              	.LVL12:
3108:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
 169              		.loc 1 3108 5 view .LVU44
3108:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
 170              		.loc 1 3108 13 is_stmt 0 view .LVU45
 171 0004 0024     		movs	r4, #0
3108:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
 172              		.loc 1 3108 5 view .LVU46
 173 0006 01E0     		b	.L13
 174              	.LVL13:
 175              	.L14:
3108:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
 176              		.loc 1 3108 41 is_stmt 1 discriminator 2 view .LVU47
ARM GAS  /tmp/ccvXhXom.s 			page 60


3108:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
 177              		.loc 1 3108 43 is_stmt 0 discriminator 2 view .LVU48
 178 0008 0134     		adds	r4, r4, #1
 179              	.LVL14:
3108:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
 180              		.loc 1 3108 43 discriminator 2 view .LVU49
 181 000a A4B2     		uxth	r4, r4
 182              	.LVL15:
 183              	.L13:
3108:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
 184              		.loc 1 3108 19 is_stmt 1 discriminator 1 view .LVU50
3108:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
 185              		.loc 1 3108 22 is_stmt 0 discriminator 1 view .LVU51
 186 000c 0B4B     		ldr	r3, .L19
 187 000e 1B88     		ldrh	r3, [r3]
3108:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[ix] != DEF_NULL) {
 188              		.loc 1 3108 5 discriminator 1 view .LVU52
 189 0010 A342     		cmp	r3, r4
 190 0012 11D9     		bls	.L18
3109:rtos/uC-FS/Source/fs_vol.c ****             cmp = Str_Cmp_N(name_vol, FSVol_Tbl[ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
 191              		.loc 1 3109 9 is_stmt 1 view .LVU53
3109:rtos/uC-FS/Source/fs_vol.c ****             cmp = Str_Cmp_N(name_vol, FSVol_Tbl[ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
 192              		.loc 1 3109 22 is_stmt 0 view .LVU54
 193 0014 A600     		lsls	r6, r4, #2
 194 0016 0A4B     		ldr	r3, .L19+4
 195 0018 1B68     		ldr	r3, [r3]
 196 001a 53F82410 		ldr	r1, [r3, r4, lsl #2]
3109:rtos/uC-FS/Source/fs_vol.c ****             cmp = Str_Cmp_N(name_vol, FSVol_Tbl[ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
 197              		.loc 1 3109 12 view .LVU55
 198 001e 0029     		cmp	r1, #0
 199 0020 F2D0     		beq	.L14
3110:rtos/uC-FS/Source/fs_vol.c ****             if (cmp == 0) {
 200              		.loc 1 3110 13 is_stmt 1 view .LVU56
3110:rtos/uC-FS/Source/fs_vol.c ****             if (cmp == 0) {
 201              		.loc 1 3110 19 is_stmt 0 view .LVU57
 202 0022 0A22     		movs	r2, #10
 203 0024 1031     		adds	r1, r1, #16
 204 0026 2846     		mov	r0, r5
 205 0028 FFF7FEFF 		bl	Str_Cmp_N
 206              	.LVL16:
3111:rtos/uC-FS/Source/fs_vol.c ****                 p_vol = FSVol_Tbl[ix];
 207              		.loc 1 3111 13 is_stmt 1 view .LVU58
3111:rtos/uC-FS/Source/fs_vol.c ****                 p_vol = FSVol_Tbl[ix];
 208              		.loc 1 3111 16 is_stmt 0 view .LVU59
 209 002c 0028     		cmp	r0, #0
 210 002e EBD1     		bne	.L14
3112:rtos/uC-FS/Source/fs_vol.c ****                 break;
 211              		.loc 1 3112 17 is_stmt 1 view .LVU60
3112:rtos/uC-FS/Source/fs_vol.c ****                 break;
 212              		.loc 1 3112 34 is_stmt 0 view .LVU61
 213 0030 034B     		ldr	r3, .L19+4
 214 0032 1B68     		ldr	r3, [r3]
3112:rtos/uC-FS/Source/fs_vol.c ****                 break;
 215              		.loc 1 3112 23 view .LVU62
 216 0034 9859     		ldr	r0, [r3, r6]
 217              	.LVL17:
3113:rtos/uC-FS/Source/fs_vol.c ****             }
ARM GAS  /tmp/ccvXhXom.s 			page 61


 218              		.loc 1 3113 17 is_stmt 1 view .LVU63
 219 0036 00E0     		b	.L12
 220              	.LVL18:
 221              	.L18:
3106:rtos/uC-FS/Source/fs_vol.c **** 
 222              		.loc 1 3106 16 is_stmt 0 view .LVU64
 223 0038 0020     		movs	r0, #0
3118:rtos/uC-FS/Source/fs_vol.c **** }
 224              		.loc 1 3118 5 is_stmt 1 view .LVU65
 225              	.LVL19:
 226              	.L12:
3119:rtos/uC-FS/Source/fs_vol.c **** 
 227              		.loc 1 3119 1 is_stmt 0 view .LVU66
 228 003a 70BD     		pop	{r4, r5, r6, pc}
 229              	.LVL20:
 230              	.L20:
3119:rtos/uC-FS/Source/fs_vol.c **** 
 231              		.loc 1 3119 1 view .LVU67
 232              		.align	2
 233              	.L19:
 234 003c 00000000 		.word	.LANCHOR1
 235 0040 00000000 		.word	.LANCHOR0
 236              		.cfi_endproc
 237              	.LFE35:
 239              		.section	.text.FSVol_ObjClr,"ax",%progbits
 240              		.align	1
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv4-sp-d16
 246              	FSVol_ObjClr:
 247              	.LVL21:
 248              	.LFB34:
3042:rtos/uC-FS/Source/fs_vol.c ****     p_vol->State          =  FS_VOL_STATE_CLOSED;
 249              		.loc 1 3042 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
3042:rtos/uC-FS/Source/fs_vol.c ****     p_vol->State          =  FS_VOL_STATE_CLOSED;
 253              		.loc 1 3042 1 is_stmt 0 view .LVU69
 254 0000 38B5     		push	{r3, r4, r5, lr}
 255              	.LCFI2:
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 3, -16
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 5, -8
 260              		.cfi_offset 14, -4
 261 0002 0446     		mov	r4, r0
3043:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefCnt         =  0u;
 262              		.loc 1 3043 5 is_stmt 1 view .LVU70
3043:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefCnt         =  0u;
 263              		.loc 1 3043 27 is_stmt 0 view .LVU71
 264 0004 0025     		movs	r5, #0
 265 0006 0580     		strh	r5, [r0]	@ movhi
3044:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefreshCnt     =  0u;
 266              		.loc 1 3044 5 is_stmt 1 view .LVU72
3044:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefreshCnt     =  0u;
ARM GAS  /tmp/ccvXhXom.s 			page 62


 267              		.loc 1 3044 27 is_stmt 0 view .LVU73
 268 0008 4560     		str	r5, [r0, #4]
3045:rtos/uC-FS/Source/fs_vol.c **** 
 269              		.loc 1 3045 5 is_stmt 1 view .LVU74
3045:rtos/uC-FS/Source/fs_vol.c **** 
 270              		.loc 1 3045 27 is_stmt 0 view .LVU75
 271 000a 8560     		str	r5, [r0, #8]
3047:rtos/uC-FS/Source/fs_vol.c **** 
 272              		.loc 1 3047 5 is_stmt 1 view .LVU76
3047:rtos/uC-FS/Source/fs_vol.c **** 
 273              		.loc 1 3047 27 is_stmt 0 view .LVU77
 274 000c C560     		str	r5, [r0, #12]
3049:rtos/uC-FS/Source/fs_vol.c ****             (CPU_INT08U  ) ASCII_CHAR_NULL,
 275              		.loc 1 3049 5 is_stmt 1 view .LVU78
 276 000e 0B22     		movs	r2, #11
 277 0010 2946     		mov	r1, r5
 278 0012 1030     		adds	r0, r0, #16
 279              	.LVL22:
3049:rtos/uC-FS/Source/fs_vol.c ****             (CPU_INT08U  ) ASCII_CHAR_NULL,
 280              		.loc 1 3049 5 is_stmt 0 view .LVU79
 281 0014 FFF7FEFF 		bl	Mem_Set
 282              	.LVL23:
3053:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionStart =  0u;
 283              		.loc 1 3053 5 is_stmt 1 view .LVU80
3053:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionStart =  0u;
 284              		.loc 1 3053 27 is_stmt 0 view .LVU81
 285 0018 A583     		strh	r5, [r4, #28]	@ movhi
3054:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionSize  =  0u;
 286              		.loc 1 3054 5 is_stmt 1 view .LVU82
3054:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionSize  =  0u;
 287              		.loc 1 3054 27 is_stmt 0 view .LVU83
 288 001a 2562     		str	r5, [r4, #32]
3055:rtos/uC-FS/Source/fs_vol.c ****     p_vol->SecSize        =  0u;
 289              		.loc 1 3055 5 is_stmt 1 view .LVU84
3055:rtos/uC-FS/Source/fs_vol.c ****     p_vol->SecSize        =  0u;
 290              		.loc 1 3055 27 is_stmt 0 view .LVU85
 291 001c 6562     		str	r5, [r4, #36]
3056:rtos/uC-FS/Source/fs_vol.c **** 
 292              		.loc 1 3056 5 is_stmt 1 view .LVU86
3056:rtos/uC-FS/Source/fs_vol.c **** 
 293              		.loc 1 3056 27 is_stmt 0 view .LVU87
 294 001e A562     		str	r5, [r4, #40]
3058:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
 295              		.loc 1 3058 5 is_stmt 1 view .LVU88
3058:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
 296              		.loc 1 3058 27 is_stmt 0 view .LVU89
 297 0020 A585     		strh	r5, [r4, #44]	@ movhi
3060:rtos/uC-FS/Source/fs_vol.c **** #endif
 298              		.loc 1 3060 5 is_stmt 1 view .LVU90
3060:rtos/uC-FS/Source/fs_vol.c **** #endif
 299              		.loc 1 3060 27 is_stmt 0 view .LVU91
 300 0022 E585     		strh	r5, [r4, #46]	@ movhi
3062:rtos/uC-FS/Source/fs_vol.c ****     p_vol->DataPtr        = (void   *)0;
 301              		.loc 1 3062 5 is_stmt 1 view .LVU92
3062:rtos/uC-FS/Source/fs_vol.c ****     p_vol->DataPtr        = (void   *)0;
 302              		.loc 1 3062 27 is_stmt 0 view .LVU93
 303 0024 2563     		str	r5, [r4, #48]
ARM GAS  /tmp/ccvXhXom.s 			page 63


3063:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT
 304              		.loc 1 3063 5 is_stmt 1 view .LVU94
3063:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_CACHE_MODULE_PRESENT
 305              		.loc 1 3063 27 is_stmt 0 view .LVU95
 306 0026 6563     		str	r5, [r4, #52]
3073:rtos/uC-FS/Source/fs_vol.c **** 
 307              		.loc 1 3073 1 view .LVU96
 308 0028 38BD     		pop	{r3, r4, r5, pc}
3073:rtos/uC-FS/Source/fs_vol.c **** 
 309              		.loc 1 3073 1 view .LVU97
 310              		.cfi_endproc
 311              	.LFE34:
 313              		.section	.text.FSVol_ObjGet,"ax",%progbits
 314              		.align	1
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	FSVol_ObjGet:
 321              	.LFB38:
3167:rtos/uC-FS/Source/fs_vol.c **** 
3168:rtos/uC-FS/Source/fs_vol.c **** 
3169:rtos/uC-FS/Source/fs_vol.c **** /*
3170:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3171:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_ObjFree()
3172:rtos/uC-FS/Source/fs_vol.c **** *
3173:rtos/uC-FS/Source/fs_vol.c **** * Description : Free a volume object.
3174:rtos/uC-FS/Source/fs_vol.c **** *
3175:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : p_vol       Pointer to a volume.
3176:rtos/uC-FS/Source/fs_vol.c **** *               -----       Argument validated by caller.
3177:rtos/uC-FS/Source/fs_vol.c **** *
3178:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : none.
3179:rtos/uC-FS/Source/fs_vol.c **** *
3180:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST hold the file system lock.
3181:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3182:rtos/uC-FS/Source/fs_vol.c **** */
3183:rtos/uC-FS/Source/fs_vol.c **** 
3184:rtos/uC-FS/Source/fs_vol.c **** static  void  FSVol_ObjFree (FS_VOL  *p_vol)
3185:rtos/uC-FS/Source/fs_vol.c **** {
3186:rtos/uC-FS/Source/fs_vol.c ****     LIB_ERR  pool_err;
3187:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY   vol_ix;
3188:rtos/uC-FS/Source/fs_vol.c **** 
3189:rtos/uC-FS/Source/fs_vol.c **** 
3190:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
3191:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
3192:rtos/uC-FS/Source/fs_vol.c ****             FSVol_Tbl[vol_ix] = DEF_NULL;
3193:rtos/uC-FS/Source/fs_vol.c ****             break;
3194:rtos/uC-FS/Source/fs_vol.c ****         }
3195:rtos/uC-FS/Source/fs_vol.c ****     }
3196:rtos/uC-FS/Source/fs_vol.c **** 
3197:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_DBG_MEM_CLR_EN == DEF_ENABLED)
3198:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ObjClr(p_vol);
3199:rtos/uC-FS/Source/fs_vol.c **** #endif
3200:rtos/uC-FS/Source/fs_vol.c **** 
3201:rtos/uC-FS/Source/fs_vol.c ****     Mem_PoolBlkFree(        &FSVol_Pool,
3202:rtos/uC-FS/Source/fs_vol.c ****                     (void *) p_vol,
3203:rtos/uC-FS/Source/fs_vol.c ****                             &pool_err);
ARM GAS  /tmp/ccvXhXom.s 			page 64


3204:rtos/uC-FS/Source/fs_vol.c **** 
3205:rtos/uC-FS/Source/fs_vol.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_INFO)
3206:rtos/uC-FS/Source/fs_vol.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
3207:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_INFO(("FSVol_ObjFree(): Could not free vol to pool.\r\n"));
3208:rtos/uC-FS/Source/fs_vol.c ****         return;
3209:rtos/uC-FS/Source/fs_vol.c ****     }
3210:rtos/uC-FS/Source/fs_vol.c **** #endif
3211:rtos/uC-FS/Source/fs_vol.c **** 
3212:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Cnt--;
3213:rtos/uC-FS/Source/fs_vol.c **** }
3214:rtos/uC-FS/Source/fs_vol.c **** 
3215:rtos/uC-FS/Source/fs_vol.c **** 
3216:rtos/uC-FS/Source/fs_vol.c **** /*
3217:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3218:rtos/uC-FS/Source/fs_vol.c **** *                                           FSVol_ObjGet()
3219:rtos/uC-FS/Source/fs_vol.c **** *
3220:rtos/uC-FS/Source/fs_vol.c **** * Description : Allocate a volume object.
3221:rtos/uC-FS/Source/fs_vol.c **** *
3222:rtos/uC-FS/Source/fs_vol.c **** * Argument(s) : none.
3223:rtos/uC-FS/Source/fs_vol.c **** *
3224:rtos/uC-FS/Source/fs_vol.c **** * Return(s)   : Pointer to a volume, if NO errors.
3225:rtos/uC-FS/Source/fs_vol.c **** *               Pointer to NULL,     otherwise.
3226:rtos/uC-FS/Source/fs_vol.c **** *
3227:rtos/uC-FS/Source/fs_vol.c **** * Note(s)     : (1) The function caller MUST hold the file system lock.
3228:rtos/uC-FS/Source/fs_vol.c **** ***************************************************************************************************
3229:rtos/uC-FS/Source/fs_vol.c **** */
3230:rtos/uC-FS/Source/fs_vol.c **** 
3231:rtos/uC-FS/Source/fs_vol.c **** static  FS_VOL  *FSVol_ObjGet (void)
3232:rtos/uC-FS/Source/fs_vol.c **** {
 322              		.loc 1 3232 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 8
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 30B5     		push	{r4, r5, lr}
 327              	.LCFI3:
 328              		.cfi_def_cfa_offset 12
 329              		.cfi_offset 4, -12
 330              		.cfi_offset 5, -8
 331              		.cfi_offset 14, -4
 332 0002 83B0     		sub	sp, sp, #12
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 24
3233:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL   *p_vol;
 335              		.loc 1 3233 5 view .LVU99
3234:rtos/uC-FS/Source/fs_vol.c ****     LIB_ERR   pool_err;
 336              		.loc 1 3234 5 view .LVU100
3235:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_ix;
 337              		.loc 1 3235 5 view .LVU101
3236:rtos/uC-FS/Source/fs_vol.c **** 
3237:rtos/uC-FS/Source/fs_vol.c **** 
3238:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
 338              		.loc 1 3238 5 view .LVU102
 339              	.LVL24:
 340              		.loc 1 3238 17 is_stmt 0 view .LVU103
 341 0004 0024     		movs	r4, #0
 342              	.LVL25:
 343              	.L24:
ARM GAS  /tmp/ccvXhXom.s 			page 65


 344              		.loc 1 3238 23 is_stmt 1 discriminator 1 view .LVU104
 345              		.loc 1 3238 30 is_stmt 0 discriminator 1 view .LVU105
 346 0006 124B     		ldr	r3, .L30
 347 0008 1B88     		ldrh	r3, [r3]
 348              		.loc 1 3238 5 discriminator 1 view .LVU106
 349 000a A342     		cmp	r3, r4
 350 000c 07D9     		bls	.L25
3239:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == DEF_NULL) {
 351              		.loc 1 3239 9 is_stmt 1 view .LVU107
 352              		.loc 1 3239 22 is_stmt 0 view .LVU108
 353 000e 114A     		ldr	r2, .L30+4
 354 0010 1268     		ldr	r2, [r2]
 355 0012 52F82420 		ldr	r2, [r2, r4, lsl #2]
 356              		.loc 1 3239 12 view .LVU109
 357 0016 12B1     		cbz	r2, .L25
3238:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == DEF_NULL) {
 358              		.loc 1 3238 49 is_stmt 1 discriminator 2 view .LVU110
3238:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == DEF_NULL) {
 359              		.loc 1 3238 55 is_stmt 0 discriminator 2 view .LVU111
 360 0018 0134     		adds	r4, r4, #1
 361              	.LVL26:
3238:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == DEF_NULL) {
 362              		.loc 1 3238 55 discriminator 2 view .LVU112
 363 001a A4B2     		uxth	r4, r4
 364              	.LVL27:
3238:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == DEF_NULL) {
 365              		.loc 1 3238 55 discriminator 2 view .LVU113
 366 001c F3E7     		b	.L24
 367              	.L25:
3240:rtos/uC-FS/Source/fs_vol.c ****             break;
3241:rtos/uC-FS/Source/fs_vol.c ****         }
3242:rtos/uC-FS/Source/fs_vol.c ****     }
3243:rtos/uC-FS/Source/fs_vol.c ****     if (vol_ix >= FSVol_VolCntMax) {
 368              		.loc 1 3243 5 is_stmt 1 view .LVU114
 369              		.loc 1 3243 8 is_stmt 0 view .LVU115
 370 001e A342     		cmp	r3, r4
 371 0020 14D9     		bls	.L28
3244:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_INFO(("FSVol_ObjGet(): Could not alloc vol from pool. Opened volume limit reached.
3245:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NULL);
3246:rtos/uC-FS/Source/fs_vol.c ****     }
3247:rtos/uC-FS/Source/fs_vol.c **** 
3248:rtos/uC-FS/Source/fs_vol.c **** 
3249:rtos/uC-FS/Source/fs_vol.c ****     p_vol = (FS_VOL *)Mem_PoolBlkGet(&FSVol_Pool,
 372              		.loc 1 3249 5 is_stmt 1 view .LVU116
 373              		.loc 1 3249 23 is_stmt 0 view .LVU117
 374 0022 0DF10602 		add	r2, sp, #6
 375 0026 3821     		movs	r1, #56
 376 0028 0B48     		ldr	r0, .L30+8
 377 002a FFF7FEFF 		bl	Mem_PoolBlkGet
 378              	.LVL28:
3250:rtos/uC-FS/Source/fs_vol.c ****                                       sizeof(FS_VOL),
3251:rtos/uC-FS/Source/fs_vol.c ****                                      &pool_err);
3252:rtos/uC-FS/Source/fs_vol.c ****    (void)pool_err;                                             /* Err ignored. Ret val chk'd instea
 379              		.loc 1 3252 4 is_stmt 1 view .LVU118
3253:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == DEF_NULL) {
 380              		.loc 1 3253 5 view .LVU119
 381              		.loc 1 3253 8 is_stmt 0 view .LVU120
ARM GAS  /tmp/ccvXhXom.s 			page 66


 382 002e 0546     		mov	r5, r0
 383 0030 48B1     		cbz	r0, .L23
3254:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_INFO(("FSVol_ObjGet(): Could not alloc vol from pool. Opened volume limit reached.
3255:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NULL);
3256:rtos/uC-FS/Source/fs_vol.c ****     }
3257:rtos/uC-FS/Source/fs_vol.c **** 
3258:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Tbl[vol_ix] = p_vol;
 384              		.loc 1 3258 5 is_stmt 1 view .LVU121
 385              		.loc 1 3258 14 is_stmt 0 view .LVU122
 386 0032 084B     		ldr	r3, .L30+4
 387 0034 1B68     		ldr	r3, [r3]
 388              		.loc 1 3258 23 view .LVU123
 389 0036 43F82400 		str	r0, [r3, r4, lsl #2]
3259:rtos/uC-FS/Source/fs_vol.c **** 
3260:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Cnt++;
 390              		.loc 1 3260 5 is_stmt 1 view .LVU124
 391              		.loc 1 3260 14 is_stmt 0 view .LVU125
 392 003a 084A     		ldr	r2, .L30+12
 393 003c 1388     		ldrh	r3, [r2]
 394 003e 0133     		adds	r3, r3, #1
 395 0040 1380     		strh	r3, [r2]	@ movhi
3261:rtos/uC-FS/Source/fs_vol.c **** 
3262:rtos/uC-FS/Source/fs_vol.c ****     FSVol_ObjClr(p_vol);
 396              		.loc 1 3262 5 is_stmt 1 view .LVU126
 397 0042 FFF7FEFF 		bl	FSVol_ObjClr
 398              	.LVL29:
3263:rtos/uC-FS/Source/fs_vol.c **** 
3264:rtos/uC-FS/Source/fs_vol.c **** 
3265:rtos/uC-FS/Source/fs_vol.c ****     return (p_vol);
 399              		.loc 1 3265 5 view .LVU127
 400              	.L23:
3266:rtos/uC-FS/Source/fs_vol.c **** }
 401              		.loc 1 3266 1 is_stmt 0 view .LVU128
 402 0046 2846     		mov	r0, r5
 403 0048 03B0     		add	sp, sp, #12
 404              	.LCFI5:
 405              		.cfi_remember_state
 406              		.cfi_def_cfa_offset 12
 407              		@ sp needed
 408 004a 30BD     		pop	{r4, r5, pc}
 409              	.LVL30:
 410              	.L28:
 411              	.LCFI6:
 412              		.cfi_restore_state
3245:rtos/uC-FS/Source/fs_vol.c ****     }
 413              		.loc 1 3245 16 view .LVU129
 414 004c 0025     		movs	r5, #0
 415 004e FAE7     		b	.L23
 416              	.L31:
 417              		.align	2
 418              	.L30:
 419 0050 00000000 		.word	.LANCHOR1
 420 0054 00000000 		.word	.LANCHOR0
 421 0058 00000000 		.word	.LANCHOR2
 422 005c 00000000 		.word	.LANCHOR3
 423              		.cfi_endproc
 424              	.LFE38:
ARM GAS  /tmp/ccvXhXom.s 			page 67


 426              		.section	.text.FSVol_OpenLocked,"ax",%progbits
 427              		.align	1
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	FSVol_OpenLocked:
 434              	.LVL31:
 435              	.LFB23:
2295:rtos/uC-FS/Source/fs_vol.c ****     FS_PARTITION_ENTRY  partition_entry;
 436              		.loc 1 2295 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 16
 439              		@ frame_needed = 0, uses_anonymous_args = 0
2295:rtos/uC-FS/Source/fs_vol.c ****     FS_PARTITION_ENTRY  partition_entry;
 440              		.loc 1 2295 1 is_stmt 0 view .LVU131
 441 0000 30B5     		push	{r4, r5, lr}
 442              	.LCFI7:
 443              		.cfi_def_cfa_offset 12
 444              		.cfi_offset 4, -12
 445              		.cfi_offset 5, -8
 446              		.cfi_offset 14, -4
 447 0002 85B0     		sub	sp, sp, #20
 448              	.LCFI8:
 449              		.cfi_def_cfa_offset 32
 450 0004 0446     		mov	r4, r0
 451 0006 0D46     		mov	r5, r1
2296:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_QTY          partition_size;
 452              		.loc 1 2296 5 is_stmt 1 view .LVU132
2297:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_NBR          partition_start;
 453              		.loc 1 2297 5 view .LVU133
2298:rtos/uC-FS/Source/fs_vol.c **** 
 454              		.loc 1 2298 5 view .LVU134
2308:rtos/uC-FS/Source/fs_vol.c ****                            &partition_entry,
 455              		.loc 1 2308 5 view .LVU135
 456 0008 0A46     		mov	r2, r1
 457 000a 01A9     		add	r1, sp, #4
 458              	.LVL32:
2308:rtos/uC-FS/Source/fs_vol.c ****                            &partition_entry,
 459              		.loc 1 2308 5 is_stmt 0 view .LVU136
 460 000c 006B     		ldr	r0, [r0, #48]
 461              	.LVL33:
2308:rtos/uC-FS/Source/fs_vol.c ****                            &partition_entry,
 462              		.loc 1 2308 5 view .LVU137
 463 000e FFF7FEFF 		bl	FSPartition_FindSimple
 464              	.LVL34:
2313:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:
 465              		.loc 1 2313 5 is_stmt 1 view .LVU138
2313:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:
 466              		.loc 1 2313 13 is_stmt 0 view .LVU139
 467 0012 2B88     		ldrh	r3, [r5]
2313:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:
 468              		.loc 1 2313 5 view .LVU140
 469 0014 7BB1     		cbz	r3, .L33
 470 0016 B3F57C7F 		cmp	r3, #1008
 471 001a 3DD8     		bhi	.L34
 472 001c B3F57A7F 		cmp	r3, #1000
ARM GAS  /tmp/ccvXhXom.s 			page 68


 473 0020 3AD9     		bls	.L34
 474 0022 A3F2E933 		subw	r3, r3, #1001
 475 0026 072B     		cmp	r3, #7
 476 0028 36D8     		bhi	.L34
 477 002a DFE803F0 		tbb	[pc, r3]
 478              	.L36:
 479 002e 0C       		.byte	(.L35-.L36)/2
 480 002f 29       		.byte	(.L38-.L36)/2
 481 0030 25       		.byte	(.L37-.L36)/2
 482 0031 35       		.byte	(.L34-.L36)/2
 483 0032 35       		.byte	(.L34-.L36)/2
 484 0033 35       		.byte	(.L34-.L36)/2
 485 0034 35       		.byte	(.L34-.L36)/2
 486 0035 0C       		.byte	(.L35-.L36)/2
 487              		.p2align 1
 488              	.L33:
2315:rtos/uC-FS/Source/fs_vol.c ****              partition_size  = partition_entry.Size;
 489              		.loc 1 2315 14 is_stmt 1 view .LVU141
2315:rtos/uC-FS/Source/fs_vol.c ****              partition_size  = partition_entry.Size;
 490              		.loc 1 2315 30 is_stmt 0 view .LVU142
 491 0036 019A     		ldr	r2, [sp, #4]
 492              	.LVL35:
2316:rtos/uC-FS/Source/fs_vol.c **** 
 493              		.loc 1 2316 14 is_stmt 1 view .LVU143
2316:rtos/uC-FS/Source/fs_vol.c **** 
 494              		.loc 1 2316 30 is_stmt 0 view .LVU144
 495 0038 0299     		ldr	r1, [sp, #8]
 496              	.LVL36:
2318:rtos/uC-FS/Source/fs_vol.c ****                  partition_start = 0u;
 497              		.loc 1 2318 14 is_stmt 1 view .LVU145
2318:rtos/uC-FS/Source/fs_vol.c ****                  partition_start = 0u;
 498              		.loc 1 2318 41 is_stmt 0 view .LVU146
 499 003a 236B     		ldr	r3, [r4, #48]
2318:rtos/uC-FS/Source/fs_vol.c ****                  partition_start = 0u;
 500              		.loc 1 2318 49 view .LVU147
 501 003c 5B6A     		ldr	r3, [r3, #36]
2318:rtos/uC-FS/Source/fs_vol.c ****                  partition_start = 0u;
 502              		.loc 1 2318 17 view .LVU148
 503 003e 9342     		cmp	r3, r2
 504 0040 2DD3     		bcc	.L47
2316:rtos/uC-FS/Source/fs_vol.c **** 
 505              		.loc 1 2316 30 view .LVU149
 506 0042 0B46     		mov	r3, r1
 507 0044 02E0     		b	.L39
 508              	.LVL37:
 509              	.L35:
2327:rtos/uC-FS/Source/fs_vol.c ****              partition_size  = p_vol->DevPtr->Size;
 510              		.loc 1 2327 14 is_stmt 1 view .LVU150
2328:rtos/uC-FS/Source/fs_vol.c ****              break;
 511              		.loc 1 2328 14 view .LVU151
2328:rtos/uC-FS/Source/fs_vol.c ****              break;
 512              		.loc 1 2328 37 is_stmt 0 view .LVU152
 513 0046 236B     		ldr	r3, [r4, #48]
2328:rtos/uC-FS/Source/fs_vol.c ****              break;
 514              		.loc 1 2328 30 view .LVU153
 515 0048 5B6A     		ldr	r3, [r3, #36]
 516              	.LVL38:
ARM GAS  /tmp/ccvXhXom.s 			page 69


2329:rtos/uC-FS/Source/fs_vol.c **** 
 517              		.loc 1 2329 14 is_stmt 1 view .LVU154
2327:rtos/uC-FS/Source/fs_vol.c ****              partition_size  = p_vol->DevPtr->Size;
 518              		.loc 1 2327 30 is_stmt 0 view .LVU155
 519 004a 0022     		movs	r2, #0
 520              	.LVL39:
 521              	.L39:
2354:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionSize  = partition_size;
 522              		.loc 1 2354 5 is_stmt 1 view .LVU156
2354:rtos/uC-FS/Source/fs_vol.c ****     p_vol->PartitionSize  = partition_size;
 523              		.loc 1 2354 27 is_stmt 0 view .LVU157
 524 004c 2262     		str	r2, [r4, #32]
2355:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefreshCnt     = p_vol->DevPtr->RefreshCnt;
 525              		.loc 1 2355 5 is_stmt 1 view .LVU158
2355:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefreshCnt     = p_vol->DevPtr->RefreshCnt;
 526              		.loc 1 2355 27 is_stmt 0 view .LVU159
 527 004e 6362     		str	r3, [r4, #36]
2356:rtos/uC-FS/Source/fs_vol.c **** 
 528              		.loc 1 2356 5 is_stmt 1 view .LVU160
2356:rtos/uC-FS/Source/fs_vol.c **** 
 529              		.loc 1 2356 34 is_stmt 0 view .LVU161
 530 0050 236B     		ldr	r3, [r4, #48]
 531              	.LVL40:
2356:rtos/uC-FS/Source/fs_vol.c **** 
 532              		.loc 1 2356 42 view .LVU162
 533 0052 DB68     		ldr	r3, [r3, #12]
2356:rtos/uC-FS/Source/fs_vol.c **** 
 534              		.loc 1 2356 27 view .LVU163
 535 0054 A360     		str	r3, [r4, #8]
2361:rtos/uC-FS/Source/fs_vol.c ****     switch (*p_err) {
 536              		.loc 1 2361 5 is_stmt 1 view .LVU164
 537 0056 2946     		mov	r1, r5
 538 0058 2046     		mov	r0, r4
 539 005a FFF7FEFF 		bl	FSSys_VolOpen
 540              	.LVL41:
2362:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:                                       /* If vol opened ...               
 541              		.loc 1 2362 5 view .LVU165
2362:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:                                       /* If vol opened ...               
 542              		.loc 1 2362 13 is_stmt 0 view .LVU166
 543 005e 2B88     		ldrh	r3, [r5]
2362:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:                                       /* If vol opened ...               
 544              		.loc 1 2362 5 view .LVU167
 545 0060 40F2EF32 		movw	r2, #1007
 546 0064 9342     		cmp	r3, r2
 547 0066 23D0     		beq	.L43
 548 0068 40F27F52 		movw	r2, #1407
 549 006c 9342     		cmp	r3, r2
 550 006e 1FD0     		beq	.L43
 551 0070 BBB1     		cbz	r3, .L50
2380:rtos/uC-FS/Source/fs_vol.c ****              return;
 552              		.loc 1 2380 14 is_stmt 1 view .LVU168
2380:rtos/uC-FS/Source/fs_vol.c ****              return;
 553              		.loc 1 2380 27 is_stmt 0 view .LVU169
 554 0072 0323     		movs	r3, #3
 555 0074 2380     		strh	r3, [r4]	@ movhi
2381:rtos/uC-FS/Source/fs_vol.c ****     }
 556              		.loc 1 2381 14 is_stmt 1 view .LVU170
ARM GAS  /tmp/ccvXhXom.s 			page 70


 557 0076 19E0     		b	.L32
 558              	.L37:
2333:rtos/uC-FS/Source/fs_vol.c ****              partition_size  = p_vol->DevPtr->Size;
 559              		.loc 1 2333 14 view .LVU171
 560              	.LVL42:
2334:rtos/uC-FS/Source/fs_vol.c ****              break;
 561              		.loc 1 2334 14 view .LVU172
2334:rtos/uC-FS/Source/fs_vol.c ****              break;
 562              		.loc 1 2334 37 is_stmt 0 view .LVU173
 563 0078 236B     		ldr	r3, [r4, #48]
2334:rtos/uC-FS/Source/fs_vol.c ****              break;
 564              		.loc 1 2334 30 view .LVU174
 565 007a 5B6A     		ldr	r3, [r3, #36]
 566              	.LVL43:
2335:rtos/uC-FS/Source/fs_vol.c **** 
 567              		.loc 1 2335 14 is_stmt 1 view .LVU175
2333:rtos/uC-FS/Source/fs_vol.c ****              partition_size  = p_vol->DevPtr->Size;
 568              		.loc 1 2333 30 is_stmt 0 view .LVU176
 569 007c 0022     		movs	r2, #0
2335:rtos/uC-FS/Source/fs_vol.c **** 
 570              		.loc 1 2335 14 view .LVU177
 571 007e E5E7     		b	.L39
 572              	.LVL44:
 573              	.L38:
2338:rtos/uC-FS/Source/fs_vol.c ****                  partition_start = 0u;
 574              		.loc 1 2338 14 is_stmt 1 view .LVU178
2338:rtos/uC-FS/Source/fs_vol.c ****                  partition_start = 0u;
 575              		.loc 1 2338 23 is_stmt 0 view .LVU179
 576 0080 A38B     		ldrh	r3, [r4, #28]
2338:rtos/uC-FS/Source/fs_vol.c ****                  partition_start = 0u;
 577              		.loc 1 2338 17 view .LVU180
 578 0082 1BB9     		cbnz	r3, .L41
2339:rtos/uC-FS/Source/fs_vol.c ****                  partition_size  = p_vol->DevPtr->Size;
 579              		.loc 1 2339 18 is_stmt 1 view .LVU181
 580              	.LVL45:
2340:rtos/uC-FS/Source/fs_vol.c ****                  break;
 581              		.loc 1 2340 18 view .LVU182
2340:rtos/uC-FS/Source/fs_vol.c ****                  break;
 582              		.loc 1 2340 41 is_stmt 0 view .LVU183
 583 0084 236B     		ldr	r3, [r4, #48]
2340:rtos/uC-FS/Source/fs_vol.c ****                  break;
 584              		.loc 1 2340 34 view .LVU184
 585 0086 5B6A     		ldr	r3, [r3, #36]
 586              	.LVL46:
2341:rtos/uC-FS/Source/fs_vol.c ****              } else {                                           /* If no partition ...             
 587              		.loc 1 2341 18 is_stmt 1 view .LVU185
2339:rtos/uC-FS/Source/fs_vol.c ****                  partition_size  = p_vol->DevPtr->Size;
 588              		.loc 1 2339 34 is_stmt 0 view .LVU186
 589 0088 0022     		movs	r2, #0
2341:rtos/uC-FS/Source/fs_vol.c ****              } else {                                           /* If no partition ...             
 590              		.loc 1 2341 18 view .LVU187
 591 008a DFE7     		b	.L39
 592              	.LVL47:
 593              	.L41:
2343:rtos/uC-FS/Source/fs_vol.c ****                 *p_err = FS_ERR_PARTITION_NOT_FOUND;
 594              		.loc 1 2343 18 is_stmt 1 view .LVU188
2343:rtos/uC-FS/Source/fs_vol.c ****                 *p_err = FS_ERR_PARTITION_NOT_FOUND;
ARM GAS  /tmp/ccvXhXom.s 			page 71


 595              		.loc 1 2343 31 is_stmt 0 view .LVU189
 596 008c 0423     		movs	r3, #4
 597 008e 2380     		strh	r3, [r4]	@ movhi
2344:rtos/uC-FS/Source/fs_vol.c ****                  return;
 598              		.loc 1 2344 17 is_stmt 1 view .LVU190
2344:rtos/uC-FS/Source/fs_vol.c ****                  return;
 599              		.loc 1 2344 24 is_stmt 0 view .LVU191
 600 0090 40F2EF33 		movw	r3, #1007
 601 0094 2B80     		strh	r3, [r5]	@ movhi
2345:rtos/uC-FS/Source/fs_vol.c ****              }
 602              		.loc 1 2345 18 is_stmt 1 view .LVU192
 603 0096 09E0     		b	.L32
 604              	.L34:
2350:rtos/uC-FS/Source/fs_vol.c ****              return;
 605              		.loc 1 2350 14 view .LVU193
2350:rtos/uC-FS/Source/fs_vol.c ****              return;
 606              		.loc 1 2350 27 is_stmt 0 view .LVU194
 607 0098 0323     		movs	r3, #3
 608 009a 2380     		strh	r3, [r4]	@ movhi
2351:rtos/uC-FS/Source/fs_vol.c ****     }
 609              		.loc 1 2351 14 is_stmt 1 view .LVU195
 610 009c 06E0     		b	.L32
 611              	.LVL48:
 612              	.L47:
2319:rtos/uC-FS/Source/fs_vol.c ****                  partition_size  = p_vol->DevPtr->Size;
 613              		.loc 1 2319 34 is_stmt 0 view .LVU196
 614 009e 0022     		movs	r2, #0
 615              	.LVL49:
2319:rtos/uC-FS/Source/fs_vol.c ****                  partition_size  = p_vol->DevPtr->Size;
 616              		.loc 1 2319 34 view .LVU197
 617 00a0 D4E7     		b	.L39
 618              	.LVL50:
 619              	.L50:
2364:rtos/uC-FS/Source/fs_vol.c ****              p_vol->SecSize = p_vol->DevPtr->SecSize;
 620              		.loc 1 2364 14 is_stmt 1 view .LVU198
2364:rtos/uC-FS/Source/fs_vol.c ****              p_vol->SecSize = p_vol->DevPtr->SecSize;
 621              		.loc 1 2364 29 is_stmt 0 view .LVU199
 622 00a2 0523     		movs	r3, #5
 623 00a4 2380     		strh	r3, [r4]	@ movhi
2365:rtos/uC-FS/Source/fs_vol.c ****              break;
 624              		.loc 1 2365 14 is_stmt 1 view .LVU200
2365:rtos/uC-FS/Source/fs_vol.c ****              break;
 625              		.loc 1 2365 36 is_stmt 0 view .LVU201
 626 00a6 236B     		ldr	r3, [r4, #48]
2365:rtos/uC-FS/Source/fs_vol.c ****              break;
 627              		.loc 1 2365 44 view .LVU202
 628 00a8 9B6A     		ldr	r3, [r3, #40]
2365:rtos/uC-FS/Source/fs_vol.c ****              break;
 629              		.loc 1 2365 29 view .LVU203
 630 00aa A362     		str	r3, [r4, #40]
2366:rtos/uC-FS/Source/fs_vol.c **** 
 631              		.loc 1 2366 14 is_stmt 1 view .LVU204
 632              	.L32:
2383:rtos/uC-FS/Source/fs_vol.c **** 
 633              		.loc 1 2383 1 is_stmt 0 view .LVU205
 634 00ac 05B0     		add	sp, sp, #20
 635              	.LCFI9:
ARM GAS  /tmp/ccvXhXom.s 			page 72


 636              		.cfi_remember_state
 637              		.cfi_def_cfa_offset 12
 638              		@ sp needed
 639 00ae 30BD     		pop	{r4, r5, pc}
 640              	.LVL51:
 641              	.L43:
 642              	.LCFI10:
 643              		.cfi_restore_state
2371:rtos/uC-FS/Source/fs_vol.c ****              p_vol->SecSize = p_vol->DevPtr->SecSize;
 644              		.loc 1 2371 14 is_stmt 1 view .LVU206
2371:rtos/uC-FS/Source/fs_vol.c ****              p_vol->SecSize = p_vol->DevPtr->SecSize;
 645              		.loc 1 2371 29 is_stmt 0 view .LVU207
 646 00b0 0423     		movs	r3, #4
 647 00b2 2380     		strh	r3, [r4]	@ movhi
2372:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_PARTITION_NOT_FOUND;
 648              		.loc 1 2372 14 is_stmt 1 view .LVU208
2372:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_PARTITION_NOT_FOUND;
 649              		.loc 1 2372 36 is_stmt 0 view .LVU209
 650 00b4 236B     		ldr	r3, [r4, #48]
2372:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_PARTITION_NOT_FOUND;
 651              		.loc 1 2372 44 view .LVU210
 652 00b6 9B6A     		ldr	r3, [r3, #40]
2372:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_PARTITION_NOT_FOUND;
 653              		.loc 1 2372 29 view .LVU211
 654 00b8 A362     		str	r3, [r4, #40]
2373:rtos/uC-FS/Source/fs_vol.c ****              break;
 655              		.loc 1 2373 13 is_stmt 1 view .LVU212
2373:rtos/uC-FS/Source/fs_vol.c ****              break;
 656              		.loc 1 2373 20 is_stmt 0 view .LVU213
 657 00ba 40F2EF33 		movw	r3, #1007
 658 00be 2B80     		strh	r3, [r5]	@ movhi
2374:rtos/uC-FS/Source/fs_vol.c **** 
 659              		.loc 1 2374 14 is_stmt 1 view .LVU214
 660 00c0 F4E7     		b	.L32
 661              		.cfi_endproc
 662              	.LFE23:
 664              		.section	.text.FSVol_ObjFree,"ax",%progbits
 665              		.align	1
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 669              		.fpu fpv4-sp-d16
 671              	FSVol_ObjFree:
 672              	.LVL52:
 673              	.LFB37:
3185:rtos/uC-FS/Source/fs_vol.c ****     LIB_ERR  pool_err;
 674              		.loc 1 3185 1 view -0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 8
 677              		@ frame_needed = 0, uses_anonymous_args = 0
3185:rtos/uC-FS/Source/fs_vol.c ****     LIB_ERR  pool_err;
 678              		.loc 1 3185 1 is_stmt 0 view .LVU216
 679 0000 10B5     		push	{r4, lr}
 680              	.LCFI11:
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 4, -8
 683              		.cfi_offset 14, -4
ARM GAS  /tmp/ccvXhXom.s 			page 73


 684 0002 82B0     		sub	sp, sp, #8
 685              	.LCFI12:
 686              		.cfi_def_cfa_offset 16
 687 0004 0446     		mov	r4, r0
3186:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY   vol_ix;
 688              		.loc 1 3186 5 is_stmt 1 view .LVU217
3187:rtos/uC-FS/Source/fs_vol.c **** 
 689              		.loc 1 3187 5 view .LVU218
3190:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
 690              		.loc 1 3190 5 view .LVU219
 691              	.LVL53:
3190:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
 692              		.loc 1 3190 17 is_stmt 0 view .LVU220
 693 0006 0023     		movs	r3, #0
 694              	.LVL54:
 695              	.L52:
3190:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
 696              		.loc 1 3190 23 is_stmt 1 discriminator 1 view .LVU221
3190:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
 697              		.loc 1 3190 30 is_stmt 0 discriminator 1 view .LVU222
 698 0008 0F4A     		ldr	r2, .L58
 699 000a 1288     		ldrh	r2, [r2]
3190:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
 700              		.loc 1 3190 5 discriminator 1 view .LVU223
 701 000c 9A42     		cmp	r2, r3
 702 000e 0CD9     		bls	.L54
3191:rtos/uC-FS/Source/fs_vol.c ****             FSVol_Tbl[vol_ix] = DEF_NULL;
 703              		.loc 1 3191 9 is_stmt 1 view .LVU224
3191:rtos/uC-FS/Source/fs_vol.c ****             FSVol_Tbl[vol_ix] = DEF_NULL;
 704              		.loc 1 3191 22 is_stmt 0 view .LVU225
 705 0010 0E4A     		ldr	r2, .L58+4
 706 0012 1268     		ldr	r2, [r2]
 707 0014 02EB8301 		add	r1, r2, r3, lsl #2
 708 0018 52F82320 		ldr	r2, [r2, r3, lsl #2]
3191:rtos/uC-FS/Source/fs_vol.c ****             FSVol_Tbl[vol_ix] = DEF_NULL;
 709              		.loc 1 3191 12 view .LVU226
 710 001c A242     		cmp	r2, r4
 711 001e 02D0     		beq	.L57
3190:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
 712              		.loc 1 3190 49 is_stmt 1 discriminator 2 view .LVU227
3190:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
 713              		.loc 1 3190 55 is_stmt 0 discriminator 2 view .LVU228
 714 0020 0133     		adds	r3, r3, #1
 715              	.LVL55:
3190:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
 716              		.loc 1 3190 55 discriminator 2 view .LVU229
 717 0022 9BB2     		uxth	r3, r3
 718              	.LVL56:
3190:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] == p_vol) {
 719              		.loc 1 3190 55 discriminator 2 view .LVU230
 720 0024 F0E7     		b	.L52
 721              	.L57:
3192:rtos/uC-FS/Source/fs_vol.c ****             break;
 722              		.loc 1 3192 13 is_stmt 1 view .LVU231
3192:rtos/uC-FS/Source/fs_vol.c ****             break;
 723              		.loc 1 3192 31 is_stmt 0 view .LVU232
 724 0026 0023     		movs	r3, #0
ARM GAS  /tmp/ccvXhXom.s 			page 74


 725              	.LVL57:
3192:rtos/uC-FS/Source/fs_vol.c ****             break;
 726              		.loc 1 3192 31 view .LVU233
 727 0028 0B60     		str	r3, [r1]
3193:rtos/uC-FS/Source/fs_vol.c ****         }
 728              		.loc 1 3193 13 is_stmt 1 view .LVU234
 729              	.L54:
3198:rtos/uC-FS/Source/fs_vol.c **** #endif
 730              		.loc 1 3198 5 view .LVU235
 731 002a 2046     		mov	r0, r4
 732              	.LVL58:
3198:rtos/uC-FS/Source/fs_vol.c **** #endif
 733              		.loc 1 3198 5 is_stmt 0 view .LVU236
 734 002c FFF7FEFF 		bl	FSVol_ObjClr
 735              	.LVL59:
3201:rtos/uC-FS/Source/fs_vol.c ****                     (void *) p_vol,
 736              		.loc 1 3201 5 is_stmt 1 view .LVU237
 737 0030 0DF10602 		add	r2, sp, #6
 738 0034 2146     		mov	r1, r4
 739 0036 0648     		ldr	r0, .L58+8
 740 0038 FFF7FEFF 		bl	Mem_PoolBlkFree
 741              	.LVL60:
3212:rtos/uC-FS/Source/fs_vol.c **** }
 742              		.loc 1 3212 5 view .LVU238
3212:rtos/uC-FS/Source/fs_vol.c **** }
 743              		.loc 1 3212 14 is_stmt 0 view .LVU239
 744 003c 054A     		ldr	r2, .L58+12
 745 003e 1388     		ldrh	r3, [r2]
 746 0040 013B     		subs	r3, r3, #1
 747 0042 1380     		strh	r3, [r2]	@ movhi
3213:rtos/uC-FS/Source/fs_vol.c **** 
 748              		.loc 1 3213 1 view .LVU240
 749 0044 02B0     		add	sp, sp, #8
 750              	.LCFI13:
 751              		.cfi_def_cfa_offset 8
 752              		@ sp needed
 753 0046 10BD     		pop	{r4, pc}
 754              	.LVL61:
 755              	.L59:
3213:rtos/uC-FS/Source/fs_vol.c **** 
 756              		.loc 1 3213 1 view .LVU241
 757              		.align	2
 758              	.L58:
 759 0048 00000000 		.word	.LANCHOR1
 760 004c 00000000 		.word	.LANCHOR0
 761 0050 00000000 		.word	.LANCHOR2
 762 0054 00000000 		.word	.LANCHOR3
 763              		.cfi_endproc
 764              	.LFE37:
 766              		.section	.text.FSVol_GetVolCnt,"ax",%progbits
 767              		.align	1
 768              		.global	FSVol_GetVolCnt
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	FSVol_GetVolCnt:
ARM GAS  /tmp/ccvXhXom.s 			page 75


 775              	.LFB10:
1575:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY  vol_cnt;
 776              		.loc 1 1575 1 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 8
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 10B5     		push	{r4, lr}
 781              	.LCFI14:
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 4, -8
 784              		.cfi_offset 14, -4
 785 0002 82B0     		sub	sp, sp, #8
 786              	.LCFI15:
 787              		.cfi_def_cfa_offset 16
1576:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR  err;
 788              		.loc 1 1576 5 view .LVU243
1577:rtos/uC-FS/Source/fs_vol.c **** 
 789              		.loc 1 1577 5 view .LVU244
1581:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 790              		.loc 1 1581 5 view .LVU245
 791 0004 0DF10600 		add	r0, sp, #6
 792 0008 FFF7FEFF 		bl	FS_OS_Lock
 793              	.LVL62:
1582:rtos/uC-FS/Source/fs_vol.c ****         return (0u);
 794              		.loc 1 1582 5 view .LVU246
1582:rtos/uC-FS/Source/fs_vol.c ****         return (0u);
 795              		.loc 1 1582 13 is_stmt 0 view .LVU247
 796 000c BDF80630 		ldrh	r3, [sp, #6]
1582:rtos/uC-FS/Source/fs_vol.c ****         return (0u);
 797              		.loc 1 1582 8 view .LVU248
 798 0010 1BB1     		cbz	r3, .L64
1583:rtos/uC-FS/Source/fs_vol.c ****     }
 799              		.loc 1 1583 16 view .LVU249
 800 0012 0024     		movs	r4, #0
 801              	.L61:
1597:rtos/uC-FS/Source/fs_vol.c **** 
 802              		.loc 1 1597 1 view .LVU250
 803 0014 2046     		mov	r0, r4
 804 0016 02B0     		add	sp, sp, #8
 805              	.LCFI16:
 806              		.cfi_remember_state
 807              		.cfi_def_cfa_offset 8
 808              		@ sp needed
 809 0018 10BD     		pop	{r4, pc}
 810              	.L64:
 811              	.LCFI17:
 812              		.cfi_restore_state
1589:rtos/uC-FS/Source/fs_vol.c **** 
 813              		.loc 1 1589 5 is_stmt 1 view .LVU251
1589:rtos/uC-FS/Source/fs_vol.c **** 
 814              		.loc 1 1589 13 is_stmt 0 view .LVU252
 815 001a 024B     		ldr	r3, .L65
 816 001c 1C88     		ldrh	r4, [r3]
 817              	.LVL63:
1594:rtos/uC-FS/Source/fs_vol.c **** 
 818              		.loc 1 1594 5 is_stmt 1 view .LVU253
 819 001e FFF7FEFF 		bl	FS_OS_Unlock
ARM GAS  /tmp/ccvXhXom.s 			page 76


 820              	.LVL64:
1596:rtos/uC-FS/Source/fs_vol.c **** }
 821              		.loc 1 1596 5 view .LVU254
1596:rtos/uC-FS/Source/fs_vol.c **** }
 822              		.loc 1 1596 12 is_stmt 0 view .LVU255
 823 0022 F7E7     		b	.L61
 824              	.L66:
 825              		.align	2
 826              	.L65:
 827 0024 00000000 		.word	.LANCHOR3
 828              		.cfi_endproc
 829              	.LFE10:
 831              		.section	.text.FSVol_GetVolCntMax,"ax",%progbits
 832              		.align	1
 833              		.global	FSVol_GetVolCntMax
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 837              		.fpu fpv4-sp-d16
 839              	FSVol_GetVolCntMax:
 840              	.LFB11:
1615:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY  vol_cnt_max;
 841              		.loc 1 1615 1 is_stmt 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
1616:rtos/uC-FS/Source/fs_vol.c **** 
 846              		.loc 1 1616 5 view .LVU257
1620:rtos/uC-FS/Source/fs_vol.c **** 
 847              		.loc 1 1620 5 view .LVU258
 848              	.LVL65:
1622:rtos/uC-FS/Source/fs_vol.c **** }
 849              		.loc 1 1622 5 view .LVU259
1623:rtos/uC-FS/Source/fs_vol.c **** 
 850              		.loc 1 1623 1 is_stmt 0 view .LVU260
 851 0000 014B     		ldr	r3, .L68
 852 0002 1888     		ldrh	r0, [r3]
 853 0004 7047     		bx	lr
 854              	.L69:
 855 0006 00BF     		.align	2
 856              	.L68:
 857 0008 00000000 		.word	.LANCHOR1
 858              		.cfi_endproc
 859              	.LFE11:
 861              		.section	.text.FSVol_GetVolName,"ax",%progbits
 862              		.align	1
 863              		.global	FSVol_GetVolName
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 867              		.fpu fpv4-sp-d16
 869              	FSVol_GetVolName:
 870              	.LVL66:
 871              	.LFB12:
1656:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_ix;
 872              		.loc 1 1656 1 is_stmt 1 view -0
ARM GAS  /tmp/ccvXhXom.s 			page 77


 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
1656:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_ix;
 876              		.loc 1 1656 1 is_stmt 0 view .LVU262
 877 0000 70B5     		push	{r4, r5, r6, lr}
 878              	.LCFI18:
 879              		.cfi_def_cfa_offset 16
 880              		.cfi_offset 4, -16
 881              		.cfi_offset 5, -12
 882              		.cfi_offset 6, -8
 883              		.cfi_offset 14, -4
 884 0002 0546     		mov	r5, r0
 885 0004 0E46     		mov	r6, r1
1657:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_cnt_cur;
 886              		.loc 1 1657 5 is_stmt 1 view .LVU263
1658:rtos/uC-FS/Source/fs_vol.c **** 
 887              		.loc 1 1658 5 view .LVU264
1662:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 888              		.loc 1 1662 5 view .LVU265
1662:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 889              		.loc 1 1662 8 is_stmt 0 view .LVU266
 890 0006 1446     		mov	r4, r2
 891 0008 52B1     		cbz	r2, .L80
 892              	.LVL67:
 893              	.L71:
1663:rtos/uC-FS/Source/fs_vol.c ****     }
 894              		.loc 1 1663 9 is_stmt 1 discriminator 1 view .LVU267
1665:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 895              		.loc 1 1665 5 discriminator 1 view .LVU268
1665:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 896              		.loc 1 1665 8 is_stmt 0 discriminator 1 view .LVU269
 897 000a 66B1     		cbz	r6, .L81
1671:rtos/uC-FS/Source/fs_vol.c ****     name_vol[0] = (CPU_CHAR)ASCII_CHAR_NULL;                    /* See Note #2.                    
 898              		.loc 1 1671 4 is_stmt 1 view .LVU270
1671:rtos/uC-FS/Source/fs_vol.c ****     name_vol[0] = (CPU_CHAR)ASCII_CHAR_NULL;                    /* See Note #2.                    
 899              		.loc 1 1671 17 is_stmt 0 view .LVU271
 900 000c 0023     		movs	r3, #0
 901 000e 2380     		strh	r3, [r4]	@ movhi
1672:rtos/uC-FS/Source/fs_vol.c **** 
 902              		.loc 1 1672 5 is_stmt 1 view .LVU272
1672:rtos/uC-FS/Source/fs_vol.c **** 
 903              		.loc 1 1672 17 is_stmt 0 view .LVU273
 904 0010 3370     		strb	r3, [r6]
1677:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 905              		.loc 1 1677 5 is_stmt 1 view .LVU274
 906 0012 2046     		mov	r0, r4
 907 0014 FFF7FEFF 		bl	FS_OS_Lock
 908              	.LVL68:
1678:rtos/uC-FS/Source/fs_vol.c ****         return;
 909              		.loc 1 1678 5 view .LVU275
1678:rtos/uC-FS/Source/fs_vol.c ****         return;
 910              		.loc 1 1678 9 is_stmt 0 view .LVU276
 911 0018 2388     		ldrh	r3, [r4]
1678:rtos/uC-FS/Source/fs_vol.c ****         return;
 912              		.loc 1 1678 8 view .LVU277
 913 001a 7BB9     		cbnz	r3, .L70
ARM GAS  /tmp/ccvXhXom.s 			page 78


1684:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
 914              		.loc 1 1684 17 view .LVU278
 915 001c 1A46     		mov	r2, r3
 916 001e 10E0     		b	.L74
 917              	.LVL69:
 918              	.L80:
1663:rtos/uC-FS/Source/fs_vol.c ****     }
 919              		.loc 1 1663 9 is_stmt 1 view .LVU279
1663:rtos/uC-FS/Source/fs_vol.c ****     }
 920              		.loc 1 1663 9 view .LVU280
 921 0020 FFF7FEFF 		bl	CPU_SW_Exception
 922              	.LVL70:
1663:rtos/uC-FS/Source/fs_vol.c ****     }
 923              		.loc 1 1663 9 is_stmt 0 view .LVU281
 924 0024 F1E7     		b	.L71
 925              	.L81:
1666:rtos/uC-FS/Source/fs_vol.c ****         return;
 926              		.loc 1 1666 8 is_stmt 1 view .LVU282
1666:rtos/uC-FS/Source/fs_vol.c ****         return;
 927              		.loc 1 1666 15 is_stmt 0 view .LVU283
 928 0026 40F28933 		movw	r3, #905
 929 002a 2380     		strh	r3, [r4]	@ movhi
1667:rtos/uC-FS/Source/fs_vol.c ****     }
 930              		.loc 1 1667 9 is_stmt 1 view .LVU284
 931 002c 06E0     		b	.L70
 932              	.LVL71:
 933              	.L82:
1688:rtos/uC-FS/Source/fs_vol.c ****                 break;
 934              		.loc 1 1688 17 view .LVU285
 935 002e 0A22     		movs	r2, #10
 936              	.LVL72:
1688:rtos/uC-FS/Source/fs_vol.c ****                 break;
 937              		.loc 1 1688 17 is_stmt 0 view .LVU286
 938 0030 1031     		adds	r1, r1, #16
 939 0032 3046     		mov	r0, r6
 940 0034 FFF7FEFF 		bl	Str_Copy_N
 941              	.LVL73:
1689:rtos/uC-FS/Source/fs_vol.c ****             } else {
 942              		.loc 1 1689 17 is_stmt 1 view .LVU287
 943              	.L77:
1698:rtos/uC-FS/Source/fs_vol.c **** }
 944              		.loc 1 1698 5 view .LVU288
 945 0038 FFF7FEFF 		bl	FS_OS_Unlock
 946              	.LVL74:
 947              	.L70:
1699:rtos/uC-FS/Source/fs_vol.c **** 
 948              		.loc 1 1699 1 is_stmt 0 view .LVU289
 949 003c 70BD     		pop	{r4, r5, r6, pc}
 950              	.LVL75:
 951              	.L75:
1685:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 952              		.loc 1 1685 49 is_stmt 1 discriminator 2 view .LVU290
1685:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 953              		.loc 1 1685 55 is_stmt 0 discriminator 2 view .LVU291
 954 003e 0133     		adds	r3, r3, #1
 955              	.LVL76:
1685:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
ARM GAS  /tmp/ccvXhXom.s 			page 79


 956              		.loc 1 1685 55 discriminator 2 view .LVU292
 957 0040 9BB2     		uxth	r3, r3
 958              	.LVL77:
 959              	.L74:
1685:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 960              		.loc 1 1685 23 is_stmt 1 discriminator 1 view .LVU293
1685:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 961              		.loc 1 1685 30 is_stmt 0 discriminator 1 view .LVU294
 962 0042 074C     		ldr	r4, .L83
 963 0044 2488     		ldrh	r4, [r4]
1685:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 964              		.loc 1 1685 5 discriminator 1 view .LVU295
 965 0046 9C42     		cmp	r4, r3
 966 0048 F6D9     		bls	.L77
1686:rtos/uC-FS/Source/fs_vol.c ****             if (vol_cnt_cur == vol_nbr) {
 967              		.loc 1 1686 9 is_stmt 1 view .LVU296
1686:rtos/uC-FS/Source/fs_vol.c ****             if (vol_cnt_cur == vol_nbr) {
 968              		.loc 1 1686 22 is_stmt 0 view .LVU297
 969 004a 0649     		ldr	r1, .L83+4
 970 004c 0968     		ldr	r1, [r1]
 971 004e 51F82310 		ldr	r1, [r1, r3, lsl #2]
1686:rtos/uC-FS/Source/fs_vol.c ****             if (vol_cnt_cur == vol_nbr) {
 972              		.loc 1 1686 12 view .LVU298
 973 0052 0029     		cmp	r1, #0
 974 0054 F3D0     		beq	.L75
1687:rtos/uC-FS/Source/fs_vol.c ****                 Str_Copy_N(name_vol, FSVol_Tbl[vol_ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
 975              		.loc 1 1687 13 is_stmt 1 view .LVU299
1687:rtos/uC-FS/Source/fs_vol.c ****                 Str_Copy_N(name_vol, FSVol_Tbl[vol_ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
 976              		.loc 1 1687 16 is_stmt 0 view .LVU300
 977 0056 AA42     		cmp	r2, r5
 978 0058 E9D0     		beq	.L82
1691:rtos/uC-FS/Source/fs_vol.c ****             }
 979              		.loc 1 1691 17 is_stmt 1 view .LVU301
1691:rtos/uC-FS/Source/fs_vol.c ****             }
 980              		.loc 1 1691 28 is_stmt 0 view .LVU302
 981 005a 0132     		adds	r2, r2, #1
 982              	.LVL78:
1691:rtos/uC-FS/Source/fs_vol.c ****             }
 983              		.loc 1 1691 28 view .LVU303
 984 005c 92B2     		uxth	r2, r2
 985              	.LVL79:
1691:rtos/uC-FS/Source/fs_vol.c ****             }
 986              		.loc 1 1691 28 view .LVU304
 987 005e EEE7     		b	.L75
 988              	.L84:
 989              		.align	2
 990              	.L83:
 991 0060 00000000 		.word	.LANCHOR1
 992 0064 00000000 		.word	.LANCHOR0
 993              		.cfi_endproc
 994              	.LFE12:
 996              		.section	.text.FSVol_GetDfltVolName,"ax",%progbits
 997              		.align	1
 998              		.global	FSVol_GetDfltVolName
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
ARM GAS  /tmp/ccvXhXom.s 			page 80


 1002              		.fpu fpv4-sp-d16
 1004              	FSVol_GetDfltVolName:
 1005              	.LVL80:
 1006              	.LFB13:
1729:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_ix;
 1007              		.loc 1 1729 1 is_stmt 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
1729:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_ix;
 1011              		.loc 1 1729 1 is_stmt 0 view .LVU306
 1012 0000 38B5     		push	{r3, r4, r5, lr}
 1013              	.LCFI19:
 1014              		.cfi_def_cfa_offset 16
 1015              		.cfi_offset 3, -16
 1016              		.cfi_offset 4, -12
 1017              		.cfi_offset 5, -8
 1018              		.cfi_offset 14, -4
 1019 0002 0446     		mov	r4, r0
1730:rtos/uC-FS/Source/fs_vol.c **** 
 1020              		.loc 1 1730 5 is_stmt 1 view .LVU307
1734:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 1021              		.loc 1 1734 5 view .LVU308
1734:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 1022              		.loc 1 1734 8 is_stmt 0 view .LVU309
 1023 0004 0D46     		mov	r5, r1
 1024 0006 A1B1     		cbz	r1, .L94
 1025              	.LVL81:
 1026              	.L86:
1735:rtos/uC-FS/Source/fs_vol.c ****     }
 1027              		.loc 1 1735 9 is_stmt 1 discriminator 1 view .LVU310
1737:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 1028              		.loc 1 1737 5 discriminator 1 view .LVU311
1737:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 1029              		.loc 1 1737 8 is_stmt 0 discriminator 1 view .LVU312
 1030 0008 B4B1     		cbz	r4, .L95
1743:rtos/uC-FS/Source/fs_vol.c ****     name_vol[0] = (CPU_CHAR)ASCII_CHAR_NULL;                    /* See Note #2.                    
 1031              		.loc 1 1743 4 is_stmt 1 view .LVU313
1743:rtos/uC-FS/Source/fs_vol.c ****     name_vol[0] = (CPU_CHAR)ASCII_CHAR_NULL;                    /* See Note #2.                    
 1032              		.loc 1 1743 17 is_stmt 0 view .LVU314
 1033 000a 0023     		movs	r3, #0
 1034 000c 2B80     		strh	r3, [r5]	@ movhi
1744:rtos/uC-FS/Source/fs_vol.c **** 
 1035              		.loc 1 1744 5 is_stmt 1 view .LVU315
1744:rtos/uC-FS/Source/fs_vol.c **** 
 1036              		.loc 1 1744 17 is_stmt 0 view .LVU316
 1037 000e 2370     		strb	r3, [r4]
1749:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 1038              		.loc 1 1749 5 is_stmt 1 view .LVU317
 1039 0010 2846     		mov	r0, r5
 1040 0012 FFF7FEFF 		bl	FS_OS_Lock
 1041              	.LVL82:
1750:rtos/uC-FS/Source/fs_vol.c ****         return;
 1042              		.loc 1 1750 5 view .LVU318
1750:rtos/uC-FS/Source/fs_vol.c ****         return;
 1043              		.loc 1 1750 9 is_stmt 0 view .LVU319
 1044 0016 2B88     		ldrh	r3, [r5]
ARM GAS  /tmp/ccvXhXom.s 			page 81


1750:rtos/uC-FS/Source/fs_vol.c ****         return;
 1045              		.loc 1 1750 8 view .LVU320
 1046 0018 CBB9     		cbnz	r3, .L85
 1047              	.L89:
 1048              	.LVL83:
1757:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1049              		.loc 1 1757 23 is_stmt 1 discriminator 1 view .LVU321
1757:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1050              		.loc 1 1757 30 is_stmt 0 discriminator 1 view .LVU322
 1051 001a 0D4A     		ldr	r2, .L97
 1052 001c 1288     		ldrh	r2, [r2]
1757:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1053              		.loc 1 1757 5 discriminator 1 view .LVU323
 1054 001e 9A42     		cmp	r2, r3
 1055 0020 13D9     		bls	.L91
1758:rtos/uC-FS/Source/fs_vol.c ****             Str_Copy_N(name_vol, FSVol_Tbl[vol_ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
 1056              		.loc 1 1758 9 is_stmt 1 view .LVU324
1758:rtos/uC-FS/Source/fs_vol.c ****             Str_Copy_N(name_vol, FSVol_Tbl[vol_ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
 1057              		.loc 1 1758 22 is_stmt 0 view .LVU325
 1058 0022 0C4A     		ldr	r2, .L97+4
 1059 0024 1268     		ldr	r2, [r2]
 1060 0026 52F82310 		ldr	r1, [r2, r3, lsl #2]
1758:rtos/uC-FS/Source/fs_vol.c ****             Str_Copy_N(name_vol, FSVol_Tbl[vol_ix]->Name, FS_CFG_MAX_VOL_NAME_LEN);
 1061              		.loc 1 1758 12 view .LVU326
 1062 002a 49B9     		cbnz	r1, .L96
1757:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1063              		.loc 1 1757 49 is_stmt 1 discriminator 2 view .LVU327
1757:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1064              		.loc 1 1757 55 is_stmt 0 discriminator 2 view .LVU328
 1065 002c 0133     		adds	r3, r3, #1
 1066              	.LVL84:
1757:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1067              		.loc 1 1757 55 discriminator 2 view .LVU329
 1068 002e 9BB2     		uxth	r3, r3
 1069              	.LVL85:
1757:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1070              		.loc 1 1757 55 discriminator 2 view .LVU330
 1071 0030 F3E7     		b	.L89
 1072              	.LVL86:
 1073              	.L94:
1735:rtos/uC-FS/Source/fs_vol.c ****     }
 1074              		.loc 1 1735 9 is_stmt 1 view .LVU331
1735:rtos/uC-FS/Source/fs_vol.c ****     }
 1075              		.loc 1 1735 9 view .LVU332
 1076 0032 FFF7FEFF 		bl	CPU_SW_Exception
 1077              	.LVL87:
1735:rtos/uC-FS/Source/fs_vol.c ****     }
 1078              		.loc 1 1735 9 is_stmt 0 view .LVU333
 1079 0036 E7E7     		b	.L86
 1080              	.L95:
1738:rtos/uC-FS/Source/fs_vol.c ****         return;
 1081              		.loc 1 1738 8 is_stmt 1 view .LVU334
1738:rtos/uC-FS/Source/fs_vol.c ****         return;
 1082              		.loc 1 1738 15 is_stmt 0 view .LVU335
 1083 0038 40F28933 		movw	r3, #905
 1084 003c 2B80     		strh	r3, [r5]	@ movhi
1739:rtos/uC-FS/Source/fs_vol.c ****     }
ARM GAS  /tmp/ccvXhXom.s 			page 82


 1085              		.loc 1 1739 9 is_stmt 1 view .LVU336
 1086 003e 06E0     		b	.L85
 1087              	.LVL88:
 1088              	.L96:
1759:rtos/uC-FS/Source/fs_vol.c ****             break;
 1089              		.loc 1 1759 13 view .LVU337
 1090 0040 0A22     		movs	r2, #10
 1091 0042 1031     		adds	r1, r1, #16
 1092 0044 2046     		mov	r0, r4
 1093 0046 FFF7FEFF 		bl	Str_Copy_N
 1094              	.LVL89:
1760:rtos/uC-FS/Source/fs_vol.c ****         }
 1095              		.loc 1 1760 13 view .LVU338
 1096              	.L91:
1767:rtos/uC-FS/Source/fs_vol.c **** }
 1097              		.loc 1 1767 5 view .LVU339
 1098 004a FFF7FEFF 		bl	FS_OS_Unlock
 1099              	.LVL90:
 1100              	.L85:
1768:rtos/uC-FS/Source/fs_vol.c **** 
 1101              		.loc 1 1768 1 is_stmt 0 view .LVU340
 1102 004e 38BD     		pop	{r3, r4, r5, pc}
 1103              	.LVL91:
 1104              	.L98:
1768:rtos/uC-FS/Source/fs_vol.c **** 
 1105              		.loc 1 1768 1 view .LVU341
 1106              		.align	2
 1107              	.L97:
 1108 0050 00000000 		.word	.LANCHOR1
 1109 0054 00000000 		.word	.LANCHOR0
 1110              		.cfi_endproc
 1111              	.LFE13:
 1113              		.section	.text.FSVol_IsDflt,"ax",%progbits
 1114              		.align	1
 1115              		.global	FSVol_IsDflt
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1119              		.fpu fpv4-sp-d16
 1121              	FSVol_IsDflt:
 1122              	.LVL92:
 1123              	.LFB14:
1799:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL      *p_vol;
 1124              		.loc 1 1799 1 is_stmt 1 view -0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
1799:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL      *p_vol;
 1128              		.loc 1 1799 1 is_stmt 0 view .LVU343
 1129 0000 38B5     		push	{r3, r4, r5, lr}
 1130              	.LCFI20:
 1131              		.cfi_def_cfa_offset 16
 1132              		.cfi_offset 3, -16
 1133              		.cfi_offset 4, -12
 1134              		.cfi_offset 5, -8
 1135              		.cfi_offset 14, -4
 1136 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccvXhXom.s 			page 83


1800:rtos/uC-FS/Source/fs_vol.c ****     CPU_INT16S   cmp;
 1137              		.loc 1 1800 5 is_stmt 1 view .LVU344
1801:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN  dflt;
 1138              		.loc 1 1801 5 view .LVU345
1802:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY       vol_ix;
 1139              		.loc 1 1802 5 view .LVU346
1803:rtos/uC-FS/Source/fs_vol.c **** 
 1140              		.loc 1 1803 5 view .LVU347
1807:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(DEF_NO);
 1141              		.loc 1 1807 5 view .LVU348
1807:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(DEF_NO);
 1142              		.loc 1 1807 8 is_stmt 0 view .LVU349
 1143 0004 0D46     		mov	r5, r1
 1144 0006 99B1     		cbz	r1, .L111
 1145              	.LVL93:
 1146              	.L100:
1808:rtos/uC-FS/Source/fs_vol.c ****     }
 1147              		.loc 1 1808 9 is_stmt 1 discriminator 1 view .LVU350
1810:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 1148              		.loc 1 1810 5 discriminator 1 view .LVU351
1810:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 1149              		.loc 1 1810 8 is_stmt 0 discriminator 1 view .LVU352
 1150 0008 ACB1     		cbz	r4, .L112
1817:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ ACQUIRE FS LO
 1151              		.loc 1 1817 4 is_stmt 1 view .LVU353
1817:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ ACQUIRE FS LO
 1152              		.loc 1 1817 11 is_stmt 0 view .LVU354
 1153 000a 0023     		movs	r3, #0
 1154 000c 2B80     		strh	r3, [r5]	@ movhi
1819:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 1155              		.loc 1 1819 5 is_stmt 1 view .LVU355
 1156 000e 2846     		mov	r0, r5
 1157 0010 FFF7FEFF 		bl	FS_OS_Lock
 1158              	.LVL94:
1820:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1159              		.loc 1 1820 5 view .LVU356
1820:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1160              		.loc 1 1820 9 is_stmt 0 view .LVU357
 1161 0014 2B88     		ldrh	r3, [r5]
1820:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1162              		.loc 1 1820 8 view .LVU358
 1163 0016 1BBB     		cbnz	r3, .L113
 1164              	.L103:
 1165              	.LVL95:
1827:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1166              		.loc 1 1827 23 is_stmt 1 discriminator 1 view .LVU359
1827:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1167              		.loc 1 1827 30 is_stmt 0 discriminator 1 view .LVU360
 1168 0018 124A     		ldr	r2, .L115
 1169 001a 1288     		ldrh	r2, [r2]
1827:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1170              		.loc 1 1827 5 discriminator 1 view .LVU361
 1171 001c 9A42     		cmp	r2, r3
 1172 001e 0ED9     		bls	.L114
1828:rtos/uC-FS/Source/fs_vol.c ****             p_vol = FSVol_Tbl[vol_ix];
 1173              		.loc 1 1828 9 is_stmt 1 view .LVU362
1828:rtos/uC-FS/Source/fs_vol.c ****             p_vol = FSVol_Tbl[vol_ix];
ARM GAS  /tmp/ccvXhXom.s 			page 84


 1174              		.loc 1 1828 22 is_stmt 0 view .LVU363
 1175 0020 114A     		ldr	r2, .L115+4
 1176 0022 1268     		ldr	r2, [r2]
 1177 0024 52F82310 		ldr	r1, [r2, r3, lsl #2]
1828:rtos/uC-FS/Source/fs_vol.c ****             p_vol = FSVol_Tbl[vol_ix];
 1178              		.loc 1 1828 12 view .LVU364
 1179 0028 51B9     		cbnz	r1, .L104
1827:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1180              		.loc 1 1827 49 is_stmt 1 discriminator 2 view .LVU365
1827:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1181              		.loc 1 1827 55 is_stmt 0 discriminator 2 view .LVU366
 1182 002a 0133     		adds	r3, r3, #1
 1183              	.LVL96:
1827:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1184              		.loc 1 1827 55 discriminator 2 view .LVU367
 1185 002c 9BB2     		uxth	r3, r3
 1186              	.LVL97:
1827:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1187              		.loc 1 1827 55 discriminator 2 view .LVU368
 1188 002e F3E7     		b	.L103
 1189              	.LVL98:
 1190              	.L111:
1808:rtos/uC-FS/Source/fs_vol.c ****     }
 1191              		.loc 1 1808 9 is_stmt 1 view .LVU369
1808:rtos/uC-FS/Source/fs_vol.c ****     }
 1192              		.loc 1 1808 9 view .LVU370
 1193 0030 FFF7FEFF 		bl	CPU_SW_Exception
 1194              	.LVL99:
1808:rtos/uC-FS/Source/fs_vol.c ****     }
 1195              		.loc 1 1808 9 is_stmt 0 view .LVU371
 1196 0034 E8E7     		b	.L100
 1197              	.L112:
1811:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1198              		.loc 1 1811 8 is_stmt 1 view .LVU372
1811:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1199              		.loc 1 1811 15 is_stmt 0 view .LVU373
 1200 0036 40F28933 		movw	r3, #905
 1201 003a 2B80     		strh	r3, [r5]	@ movhi
1812:rtos/uC-FS/Source/fs_vol.c ****     }
 1202              		.loc 1 1812 9 is_stmt 1 view .LVU374
1812:rtos/uC-FS/Source/fs_vol.c ****     }
 1203              		.loc 1 1812 16 is_stmt 0 view .LVU375
 1204 003c 0CE0     		b	.L102
 1205              	.LVL100:
 1206              	.L114:
1826:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
 1207              		.loc 1 1826 11 view .LVU376
 1208 003e 0021     		movs	r1, #0
 1209              	.L104:
 1210              	.LVL101:
1834:rtos/uC-FS/Source/fs_vol.c ****         cmp  = Str_Cmp_N(name_vol, p_vol->Name, FS_CFG_MAX_VOL_NAME_LEN);
 1211              		.loc 1 1834 5 is_stmt 1 view .LVU377
1834:rtos/uC-FS/Source/fs_vol.c ****         cmp  = Str_Cmp_N(name_vol, p_vol->Name, FS_CFG_MAX_VOL_NAME_LEN);
 1212              		.loc 1 1834 8 is_stmt 0 view .LVU378
 1213 0040 39B1     		cbz	r1, .L108
1835:rtos/uC-FS/Source/fs_vol.c ****         dflt = (cmp == 0) ? DEF_YES : DEF_NO;
 1214              		.loc 1 1835 9 is_stmt 1 view .LVU379
ARM GAS  /tmp/ccvXhXom.s 			page 85


1835:rtos/uC-FS/Source/fs_vol.c ****         dflt = (cmp == 0) ? DEF_YES : DEF_NO;
 1215              		.loc 1 1835 16 is_stmt 0 view .LVU380
 1216 0042 0A22     		movs	r2, #10
 1217 0044 1031     		adds	r1, r1, #16
 1218              	.LVL102:
1835:rtos/uC-FS/Source/fs_vol.c ****         dflt = (cmp == 0) ? DEF_YES : DEF_NO;
 1219              		.loc 1 1835 16 view .LVU381
 1220 0046 2046     		mov	r0, r4
 1221 0048 FFF7FEFF 		bl	Str_Cmp_N
 1222              	.LVL103:
1836:rtos/uC-FS/Source/fs_vol.c ****     } else {
 1223              		.loc 1 1836 9 is_stmt 1 view .LVU382
1836:rtos/uC-FS/Source/fs_vol.c ****     } else {
 1224              		.loc 1 1836 14 is_stmt 0 view .LVU383
 1225 004c 30B9     		cbnz	r0, .L109
 1226 004e 0124     		movs	r4, #1
 1227              	.LVL104:
1836:rtos/uC-FS/Source/fs_vol.c ****     } else {
 1228              		.loc 1 1836 14 view .LVU384
 1229 0050 00E0     		b	.L106
 1230              	.LVL105:
 1231              	.L108:
1838:rtos/uC-FS/Source/fs_vol.c ****     }
 1232              		.loc 1 1838 14 view .LVU385
 1233 0052 0024     		movs	r4, #0
 1234              	.LVL106:
 1235              	.L106:
1843:rtos/uC-FS/Source/fs_vol.c **** 
 1236              		.loc 1 1843 5 is_stmt 1 view .LVU386
 1237 0054 FFF7FEFF 		bl	FS_OS_Unlock
 1238              	.LVL107:
1845:rtos/uC-FS/Source/fs_vol.c **** }
 1239              		.loc 1 1845 5 view .LVU387
 1240              	.L102:
1846:rtos/uC-FS/Source/fs_vol.c **** 
 1241              		.loc 1 1846 1 is_stmt 0 view .LVU388
 1242 0058 2046     		mov	r0, r4
 1243 005a 38BD     		pop	{r3, r4, r5, pc}
 1244              	.LVL108:
 1245              	.L109:
1836:rtos/uC-FS/Source/fs_vol.c ****     } else {
 1246              		.loc 1 1836 14 view .LVU389
 1247 005c 0024     		movs	r4, #0
 1248              	.LVL109:
1836:rtos/uC-FS/Source/fs_vol.c ****     } else {
 1249              		.loc 1 1836 14 view .LVU390
 1250 005e F9E7     		b	.L106
 1251              	.LVL110:
 1252              	.L113:
1821:rtos/uC-FS/Source/fs_vol.c ****     }
 1253              		.loc 1 1821 16 view .LVU391
 1254 0060 0024     		movs	r4, #0
 1255              	.LVL111:
1821:rtos/uC-FS/Source/fs_vol.c ****     }
 1256              		.loc 1 1821 16 view .LVU392
 1257 0062 F9E7     		b	.L102
 1258              	.L116:
ARM GAS  /tmp/ccvXhXom.s 			page 86


 1259              		.align	2
 1260              	.L115:
 1261 0064 00000000 		.word	.LANCHOR1
 1262 0068 00000000 		.word	.LANCHOR0
 1263              		.cfi_endproc
 1264              	.LFE14:
 1266              		.section	.text.FSVol_ModuleInit,"ax",%progbits
 1267              		.align	1
 1268              		.global	FSVol_ModuleInit
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1272              		.fpu fpv4-sp-d16
 1274              	FSVol_ModuleInit:
 1275              	.LVL112:
 1276              	.LFB15:
1879:rtos/uC-FS/Source/fs_vol.c ****     CPU_SIZE_T  octets_reqd;
 1277              		.loc 1 1879 1 is_stmt 1 view -0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 8
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
1879:rtos/uC-FS/Source/fs_vol.c ****     CPU_SIZE_T  octets_reqd;
 1281              		.loc 1 1879 1 is_stmt 0 view .LVU394
 1282 0000 70B5     		push	{r4, r5, r6, lr}
 1283              	.LCFI21:
 1284              		.cfi_def_cfa_offset 16
 1285              		.cfi_offset 4, -16
 1286              		.cfi_offset 5, -12
 1287              		.cfi_offset 6, -8
 1288              		.cfi_offset 14, -4
 1289 0002 86B0     		sub	sp, sp, #24
 1290              	.LCFI22:
 1291              		.cfi_def_cfa_offset 40
 1292 0004 0446     		mov	r4, r0
 1293 0006 0D46     		mov	r5, r1
1880:rtos/uC-FS/Source/fs_vol.c ****     LIB_ERR     pool_err;
 1294              		.loc 1 1880 5 is_stmt 1 view .LVU395
1881:rtos/uC-FS/Source/fs_vol.c **** 
 1295              		.loc 1 1881 5 view .LVU396
1891:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Cnt       = 0u;
 1296              		.loc 1 1891 5 view .LVU397
1891:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Cnt       = 0u;
 1297              		.loc 1 1891 21 is_stmt 0 view .LVU398
 1298 0008 0021     		movs	r1, #0
 1299              	.LVL113:
1891:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Cnt       = 0u;
 1300              		.loc 1 1891 21 view .LVU399
 1301 000a 1A4B     		ldr	r3, .L123
 1302 000c 1980     		strh	r1, [r3]	@ movhi
1892:rtos/uC-FS/Source/fs_vol.c **** 
 1303              		.loc 1 1892 5 is_stmt 1 view .LVU400
1892:rtos/uC-FS/Source/fs_vol.c **** 
 1304              		.loc 1 1892 21 is_stmt 0 view .LVU401
 1305 000e 1A4B     		ldr	r3, .L123+4
 1306 0010 1980     		strh	r1, [r3]	@ movhi
1896:rtos/uC-FS/Source/fs_vol.c ****                     DEF_NULL,
 1307              		.loc 1 1896 5 is_stmt 1 view .LVU402
ARM GAS  /tmp/ccvXhXom.s 			page 87


 1308 0012 0DF11203 		add	r3, sp, #18
 1309 0016 0393     		str	r3, [sp, #12]
 1310 0018 05AB     		add	r3, sp, #20
 1311 001a 0293     		str	r3, [sp, #8]
 1312 001c 0423     		movs	r3, #4
 1313 001e 0193     		str	r3, [sp, #4]
 1314 0020 3823     		movs	r3, #56
 1315 0022 0093     		str	r3, [sp]
 1316 0024 0346     		mov	r3, r0
 1317 0026 0A46     		mov	r2, r1
 1318 0028 1448     		ldr	r0, .L123+8
 1319              	.LVL114:
1896:rtos/uC-FS/Source/fs_vol.c ****                     DEF_NULL,
 1320              		.loc 1 1896 5 is_stmt 0 view .LVU403
 1321 002a FFF7FEFF 		bl	Mem_PoolCreate
 1322              	.LVL115:
1904:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1323              		.loc 1 1904 5 is_stmt 1 view .LVU404
1904:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1324              		.loc 1 1904 18 is_stmt 0 view .LVU405
 1325 002e BDF81220 		ldrh	r2, [sp, #18]
1904:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1326              		.loc 1 1904 8 view .LVU406
 1327 0032 42F21073 		movw	r3, #10000
 1328 0036 9A42     		cmp	r2, r3
 1329 0038 03D0     		beq	.L118
1905:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_INFO(("FSVol_ModuleInit(): Could not alloc mem for vols: %d octets required.\r\n",
 1330              		.loc 1 1905 8 is_stmt 1 view .LVU407
1905:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_INFO(("FSVol_ModuleInit(): Could not alloc mem for vols: %d octets required.\r\n",
 1331              		.loc 1 1905 16 is_stmt 0 view .LVU408
 1332 003a 1123     		movs	r3, #17
 1333 003c 2B80     		strh	r3, [r5]	@ movhi
1906:rtos/uC-FS/Source/fs_vol.c ****         return;
 1334              		.loc 1 1906 114 is_stmt 1 view .LVU409
1907:rtos/uC-FS/Source/fs_vol.c ****     }
 1335              		.loc 1 1907 9 view .LVU410
 1336              	.L117:
1923:rtos/uC-FS/Source/fs_vol.c **** 
 1337              		.loc 1 1923 1 is_stmt 0 view .LVU411
 1338 003e 06B0     		add	sp, sp, #24
 1339              	.LCFI23:
 1340              		.cfi_remember_state
 1341              		.cfi_def_cfa_offset 16
 1342              		@ sp needed
 1343 0040 70BD     		pop	{r4, r5, r6, pc}
 1344              	.LVL116:
 1345              	.L118:
 1346              	.LCFI24:
 1347              		.cfi_restore_state
1910:rtos/uC-FS/Source/fs_vol.c ****                                          sizeof(CPU_ALIGN),
 1348              		.loc 1 1910 5 is_stmt 1 view .LVU412
1910:rtos/uC-FS/Source/fs_vol.c ****                                          sizeof(CPU_ALIGN),
 1349              		.loc 1 1910 28 is_stmt 0 view .LVU413
 1350 0042 A600     		lsls	r6, r4, #2
 1351 0044 0DF11203 		add	r3, sp, #18
 1352 0048 05AA     		add	r2, sp, #20
 1353 004a 0421     		movs	r1, #4
ARM GAS  /tmp/ccvXhXom.s 			page 88


 1354 004c 3046     		mov	r0, r6
 1355 004e FFF7FEFF 		bl	Mem_HeapAlloc
 1356              	.LVL117:
1910:rtos/uC-FS/Source/fs_vol.c ****                                          sizeof(CPU_ALIGN),
 1357              		.loc 1 1910 15 view .LVU414
 1358 0052 0B4B     		ldr	r3, .L123+12
 1359 0054 1860     		str	r0, [r3]
1914:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1360              		.loc 1 1914 5 is_stmt 1 view .LVU415
1914:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1361              		.loc 1 1914 18 is_stmt 0 view .LVU416
 1362 0056 BDF81220 		ldrh	r2, [sp, #18]
1914:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1363              		.loc 1 1914 8 view .LVU417
 1364 005a 42F21073 		movw	r3, #10000
 1365 005e 9A42     		cmp	r2, r3
 1366 0060 02D0     		beq	.L120
1915:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_INFO(("FSVol_ModuleInit(): Could not alloc mem for vols: %d octets required.\r\n",
 1367              		.loc 1 1915 8 is_stmt 1 view .LVU418
1915:rtos/uC-FS/Source/fs_vol.c ****         FS_TRACE_INFO(("FSVol_ModuleInit(): Could not alloc mem for vols: %d octets required.\r\n",
 1368              		.loc 1 1915 16 is_stmt 0 view .LVU419
 1369 0062 1123     		movs	r3, #17
 1370 0064 2B80     		strh	r3, [r5]	@ movhi
1916:rtos/uC-FS/Source/fs_vol.c ****         return;
 1371              		.loc 1 1916 114 is_stmt 1 view .LVU420
1917:rtos/uC-FS/Source/fs_vol.c ****     }
 1372              		.loc 1 1917 9 view .LVU421
 1373 0066 EAE7     		b	.L117
 1374              	.L120:
1920:rtos/uC-FS/Source/fs_vol.c **** 
 1375              		.loc 1 1920 5 view .LVU422
 1376 0068 3146     		mov	r1, r6
 1377 006a FFF7FEFF 		bl	Mem_Clr
 1378              	.LVL118:
1922:rtos/uC-FS/Source/fs_vol.c **** }
 1379              		.loc 1 1922 5 view .LVU423
1922:rtos/uC-FS/Source/fs_vol.c **** }
 1380              		.loc 1 1922 21 is_stmt 0 view .LVU424
 1381 006e 014B     		ldr	r3, .L123
 1382 0070 1C80     		strh	r4, [r3]	@ movhi
 1383 0072 E4E7     		b	.L117
 1384              	.L124:
 1385              		.align	2
 1386              	.L123:
 1387 0074 00000000 		.word	.LANCHOR1
 1388 0078 00000000 		.word	.LANCHOR3
 1389 007c 00000000 		.word	.LANCHOR2
 1390 0080 00000000 		.word	.LANCHOR0
 1391              		.cfi_endproc
 1392              	.LFE15:
 1394              		.section	.text.FSVol_Acquire,"ax",%progbits
 1395              		.align	1
 1396              		.global	FSVol_Acquire
 1397              		.syntax unified
 1398              		.thumb
 1399              		.thumb_func
 1400              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccvXhXom.s 			page 89


 1402              	FSVol_Acquire:
 1403              	.LVL119:
 1404              	.LFB17:
2043:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 1405              		.loc 1 2043 1 is_stmt 1 view -0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
2043:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 1409              		.loc 1 2043 1 is_stmt 0 view .LVU426
 1410 0000 38B5     		push	{r3, r4, r5, lr}
 1411              	.LCFI25:
 1412              		.cfi_def_cfa_offset 16
 1413              		.cfi_offset 3, -16
 1414              		.cfi_offset 4, -12
 1415              		.cfi_offset 5, -8
 1416              		.cfi_offset 14, -4
 1417 0002 0546     		mov	r5, r0
 1418 0004 0C46     		mov	r4, r1
2044:rtos/uC-FS/Source/fs_vol.c **** 
 1419              		.loc 1 2044 5 is_stmt 1 view .LVU427
2048:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 1420              		.loc 1 2048 5 view .LVU428
 1421 0006 0846     		mov	r0, r1
 1422              	.LVL120:
2048:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 1423              		.loc 1 2048 5 is_stmt 0 view .LVU429
 1424 0008 FFF7FEFF 		bl	FS_OS_Lock
 1425              	.LVL121:
2049:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 1426              		.loc 1 2049 5 is_stmt 1 view .LVU430
2049:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 1427              		.loc 1 2049 9 is_stmt 0 view .LVU431
 1428 000c 2388     		ldrh	r3, [r4]
2049:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 1429              		.loc 1 2049 8 view .LVU432
 1430 000e 63B9     		cbnz	r3, .L130
2057:rtos/uC-FS/Source/fs_vol.c **** 
 1431              		.loc 1 2057 5 is_stmt 1 view .LVU433
2057:rtos/uC-FS/Source/fs_vol.c **** 
 1432              		.loc 1 2057 13 is_stmt 0 view .LVU434
 1433 0010 2146     		mov	r1, r4
 1434 0012 2846     		mov	r0, r5
 1435 0014 FFF7FEFF 		bl	FSVol_ObjFind
 1436              	.LVL122:
2059:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
 1437              		.loc 1 2059 5 is_stmt 1 view .LVU435
2059:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
 1438              		.loc 1 2059 8 is_stmt 0 view .LVU436
 1439 0018 0546     		mov	r5, r0
 1440              	.LVL123:
2059:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
 1441              		.loc 1 2059 8 view .LVU437
 1442 001a 58B1     		cbz	r0, .L131
2065:rtos/uC-FS/Source/fs_vol.c **** 
 1443              		.loc 1 2065 5 is_stmt 1 view .LVU438
2065:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 90


 1444              		.loc 1 2065 10 is_stmt 0 view .LVU439
 1445 001c 4368     		ldr	r3, [r0, #4]
2065:rtos/uC-FS/Source/fs_vol.c **** 
 1446              		.loc 1 2065 18 view .LVU440
 1447 001e 0133     		adds	r3, r3, #1
 1448 0020 4360     		str	r3, [r0, #4]
2070:rtos/uC-FS/Source/fs_vol.c **** 
 1449              		.loc 1 2070 5 is_stmt 1 view .LVU441
 1450 0022 FFF7FEFF 		bl	FS_OS_Unlock
 1451              	.LVL124:
2072:rtos/uC-FS/Source/fs_vol.c **** }
 1452              		.loc 1 2072 5 view .LVU442
 1453              	.L125:
2073:rtos/uC-FS/Source/fs_vol.c **** 
 1454              		.loc 1 2073 1 is_stmt 0 view .LVU443
 1455 0026 2846     		mov	r0, r5
 1456 0028 38BD     		pop	{r3, r4, r5, pc}
 1457              	.LVL125:
 1458              	.L130:
2050:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 1459              		.loc 1 2050 8 is_stmt 1 view .LVU444
2050:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 1460              		.loc 1 2050 15 is_stmt 0 view .LVU445
 1461 002a 40F2DD53 		movw	r3, #1501
 1462 002e 2380     		strh	r3, [r4]	@ movhi
2051:rtos/uC-FS/Source/fs_vol.c ****     }
 1463              		.loc 1 2051 9 is_stmt 1 view .LVU446
2051:rtos/uC-FS/Source/fs_vol.c ****     }
 1464              		.loc 1 2051 16 is_stmt 0 view .LVU447
 1465 0030 0025     		movs	r5, #0
 1466              	.LVL126:
2051:rtos/uC-FS/Source/fs_vol.c ****     }
 1467              		.loc 1 2051 16 view .LVU448
 1468 0032 F8E7     		b	.L125
 1469              	.LVL127:
 1470              	.L131:
2060:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NOT_MOUNTED;
 1471              		.loc 1 2060 9 is_stmt 1 view .LVU449
 1472 0034 FFF7FEFF 		bl	FS_OS_Unlock
 1473              	.LVL128:
2061:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 1474              		.loc 1 2061 8 view .LVU450
2061:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 1475              		.loc 1 2061 15 is_stmt 0 view .LVU451
 1476 0038 40F28653 		movw	r3, #1414
 1477 003c 2380     		strh	r3, [r4]	@ movhi
2062:rtos/uC-FS/Source/fs_vol.c ****     }
 1478              		.loc 1 2062 9 is_stmt 1 view .LVU452
2062:rtos/uC-FS/Source/fs_vol.c ****     }
 1479              		.loc 1 2062 16 is_stmt 0 view .LVU453
 1480 003e F2E7     		b	.L125
 1481              		.cfi_endproc
 1482              	.LFE17:
 1484              		.section	.text.FSVol_AcquireDflt,"ax",%progbits
 1485              		.align	1
 1486              		.global	FSVol_AcquireDflt
 1487              		.syntax unified
ARM GAS  /tmp/ccvXhXom.s 			page 91


 1488              		.thumb
 1489              		.thumb_func
 1490              		.fpu fpv4-sp-d16
 1492              	FSVol_AcquireDflt:
 1493              	.LFB18:
2092:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL   *p_vol;
 1494              		.loc 1 2092 1 is_stmt 1 view -0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 8
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 1498 0000 10B5     		push	{r4, lr}
 1499              	.LCFI26:
 1500              		.cfi_def_cfa_offset 8
 1501              		.cfi_offset 4, -8
 1502              		.cfi_offset 14, -4
 1503 0002 82B0     		sub	sp, sp, #8
 1504              	.LCFI27:
 1505              		.cfi_def_cfa_offset 16
2093:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR    err;
 1506              		.loc 1 2093 5 view .LVU455
2094:rtos/uC-FS/Source/fs_vol.c ****     FS_QTY    vol_ix;
 1507              		.loc 1 2094 5 view .LVU456
2095:rtos/uC-FS/Source/fs_vol.c **** 
 1508              		.loc 1 2095 5 view .LVU457
2099:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1509              		.loc 1 2099 5 view .LVU458
 1510 0004 0DF10600 		add	r0, sp, #6
 1511 0008 FFF7FEFF 		bl	FS_OS_Lock
 1512              	.LVL129:
2100:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 1513              		.loc 1 2100 5 view .LVU459
2100:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 1514              		.loc 1 2100 13 is_stmt 0 view .LVU460
 1515 000c BDF80630 		ldrh	r3, [sp, #6]
2100:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 1516              		.loc 1 2100 8 view .LVU461
 1517 0010 ABB9     		cbnz	r3, .L140
 1518              	.L134:
 1519              	.LVL130:
2109:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1520              		.loc 1 2109 23 is_stmt 1 discriminator 1 view .LVU462
2109:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1521              		.loc 1 2109 30 is_stmt 0 discriminator 1 view .LVU463
 1522 0012 0C4A     		ldr	r2, .L142
 1523 0014 1288     		ldrh	r2, [r2]
2109:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1524              		.loc 1 2109 5 discriminator 1 view .LVU464
 1525 0016 9A42     		cmp	r2, r3
 1526 0018 07D9     		bls	.L141
2110:rtos/uC-FS/Source/fs_vol.c ****             p_vol = FSVol_Tbl[vol_ix];
 1527              		.loc 1 2110 9 is_stmt 1 view .LVU465
2110:rtos/uC-FS/Source/fs_vol.c ****             p_vol = FSVol_Tbl[vol_ix];
 1528              		.loc 1 2110 22 is_stmt 0 view .LVU466
 1529 001a 0B4A     		ldr	r2, .L142+4
 1530 001c 1268     		ldr	r2, [r2]
 1531 001e 52F82340 		ldr	r4, [r2, r3, lsl #2]
2110:rtos/uC-FS/Source/fs_vol.c ****             p_vol = FSVol_Tbl[vol_ix];
ARM GAS  /tmp/ccvXhXom.s 			page 92


 1532              		.loc 1 2110 12 view .LVU467
 1533 0022 1CB9     		cbnz	r4, .L135
2109:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1534              		.loc 1 2109 49 is_stmt 1 discriminator 2 view .LVU468
2109:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1535              		.loc 1 2109 55 is_stmt 0 discriminator 2 view .LVU469
 1536 0024 0133     		adds	r3, r3, #1
 1537              	.LVL131:
2109:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1538              		.loc 1 2109 55 discriminator 2 view .LVU470
 1539 0026 9BB2     		uxth	r3, r3
 1540              	.LVL132:
2109:rtos/uC-FS/Source/fs_vol.c ****         if (FSVol_Tbl[vol_ix] != DEF_NULL) {
 1541              		.loc 1 2109 55 discriminator 2 view .LVU471
 1542 0028 F3E7     		b	.L134
 1543              	.L141:
2108:rtos/uC-FS/Source/fs_vol.c ****     for (vol_ix = 0u; vol_ix < FSVol_VolCntMax; vol_ix++) {
 1544              		.loc 1 2108 11 view .LVU472
 1545 002a 0024     		movs	r4, #0
 1546              	.L135:
 1547              	.LVL133:
2116:rtos/uC-FS/Source/fs_vol.c ****        p_vol->RefCnt++;
 1548              		.loc 1 2116 5 is_stmt 1 view .LVU473
2116:rtos/uC-FS/Source/fs_vol.c ****        p_vol->RefCnt++;
 1549              		.loc 1 2116 8 is_stmt 0 view .LVU474
 1550 002c 14B1     		cbz	r4, .L137
2117:rtos/uC-FS/Source/fs_vol.c ****     }
 1551              		.loc 1 2117 8 is_stmt 1 view .LVU475
2117:rtos/uC-FS/Source/fs_vol.c ****     }
 1552              		.loc 1 2117 13 is_stmt 0 view .LVU476
 1553 002e 6368     		ldr	r3, [r4, #4]
 1554              	.LVL134:
2117:rtos/uC-FS/Source/fs_vol.c ****     }
 1555              		.loc 1 2117 21 view .LVU477
 1556 0030 0133     		adds	r3, r3, #1
 1557 0032 6360     		str	r3, [r4, #4]
 1558              	.L137:
2122:rtos/uC-FS/Source/fs_vol.c **** 
 1559              		.loc 1 2122 5 is_stmt 1 view .LVU478
 1560 0034 FFF7FEFF 		bl	FS_OS_Unlock
 1561              	.LVL135:
2124:rtos/uC-FS/Source/fs_vol.c **** }
 1562              		.loc 1 2124 5 view .LVU479
 1563              	.L132:
2125:rtos/uC-FS/Source/fs_vol.c **** 
 1564              		.loc 1 2125 1 is_stmt 0 view .LVU480
 1565 0038 2046     		mov	r0, r4
 1566 003a 02B0     		add	sp, sp, #8
 1567              	.LCFI28:
 1568              		.cfi_remember_state
 1569              		.cfi_def_cfa_offset 8
 1570              		@ sp needed
 1571 003c 10BD     		pop	{r4, pc}
 1572              	.L140:
 1573              	.LCFI29:
 1574              		.cfi_restore_state
2101:rtos/uC-FS/Source/fs_vol.c ****     }
ARM GAS  /tmp/ccvXhXom.s 			page 93


 1575              		.loc 1 2101 16 view .LVU481
 1576 003e 0024     		movs	r4, #0
 1577 0040 FAE7     		b	.L132
 1578              	.L143:
 1579 0042 00BF     		.align	2
 1580              	.L142:
 1581 0044 00000000 		.word	.LANCHOR1
 1582 0048 00000000 		.word	.LANCHOR0
 1583              		.cfi_endproc
 1584              	.LFE18:
 1586              		.section	.text.FSVol_Release,"ax",%progbits
 1587              		.align	1
 1588              		.global	FSVol_Release
 1589              		.syntax unified
 1590              		.thumb
 1591              		.thumb_func
 1592              		.fpu fpv4-sp-d16
 1594              	FSVol_Release:
 1595              	.LVL136:
 1596              	.LFB20:
2166:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR   err;
 1597              		.loc 1 2166 1 is_stmt 1 view -0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 8
 1600              		@ frame_needed = 0, uses_anonymous_args = 0
2166:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR   err;
 1601              		.loc 1 2166 1 is_stmt 0 view .LVU483
 1602 0000 70B5     		push	{r4, r5, r6, lr}
 1603              	.LCFI30:
 1604              		.cfi_def_cfa_offset 16
 1605              		.cfi_offset 4, -16
 1606              		.cfi_offset 5, -12
 1607              		.cfi_offset 6, -8
 1608              		.cfi_offset 14, -4
 1609 0002 82B0     		sub	sp, sp, #8
 1610              	.LCFI31:
 1611              		.cfi_def_cfa_offset 24
 1612 0004 0446     		mov	r4, r0
2167:rtos/uC-FS/Source/fs_vol.c ****     FS_CTR   ref_cnt;
 1613              		.loc 1 2167 5 is_stmt 1 view .LVU484
2168:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV  *p_dev;
 1614              		.loc 1 2168 5 view .LVU485
2169:rtos/uC-FS/Source/fs_vol.c **** 
 1615              		.loc 1 2169 5 view .LVU486
2173:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1616              		.loc 1 2173 5 view .LVU487
 1617 0006 0DF10600 		add	r0, sp, #6
 1618              	.LVL137:
2173:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1619              		.loc 1 2173 5 is_stmt 0 view .LVU488
 1620 000a FFF7FEFF 		bl	FS_OS_Lock
 1621              	.LVL138:
2174:rtos/uC-FS/Source/fs_vol.c ****         return;
 1622              		.loc 1 2174 5 is_stmt 1 view .LVU489
2174:rtos/uC-FS/Source/fs_vol.c ****         return;
 1623              		.loc 1 2174 13 is_stmt 0 view .LVU490
 1624 000e BDF80630 		ldrh	r3, [sp, #6]
ARM GAS  /tmp/ccvXhXom.s 			page 94


2174:rtos/uC-FS/Source/fs_vol.c ****         return;
 1625              		.loc 1 2174 8 view .LVU491
 1626 0012 4BB9     		cbnz	r3, .L144
2181:rtos/uC-FS/Source/fs_vol.c ****     if (ref_cnt == 1u) {
 1627              		.loc 1 2181 5 is_stmt 1 view .LVU492
2181:rtos/uC-FS/Source/fs_vol.c ****     if (ref_cnt == 1u) {
 1628              		.loc 1 2181 13 is_stmt 0 view .LVU493
 1629 0014 6568     		ldr	r5, [r4, #4]
 1630              	.LVL139:
2182:rtos/uC-FS/Source/fs_vol.c ****         p_dev = p_vol->DevPtr;
 1631              		.loc 1 2182 5 is_stmt 1 view .LVU494
2182:rtos/uC-FS/Source/fs_vol.c ****         p_dev = p_vol->DevPtr;
 1632              		.loc 1 2182 8 is_stmt 0 view .LVU495
 1633 0016 012D     		cmp	r5, #1
 1634 0018 08D0     		beq	.L151
2185:rtos/uC-FS/Source/fs_vol.c ****         p_vol->RefCnt = ref_cnt - 1u;
 1635              		.loc 1 2185 12 is_stmt 1 view .LVU496
2185:rtos/uC-FS/Source/fs_vol.c ****         p_vol->RefCnt = ref_cnt - 1u;
 1636              		.loc 1 2185 15 is_stmt 0 view .LVU497
 1637 001a 0DB1     		cbz	r5, .L148
2186:rtos/uC-FS/Source/fs_vol.c ****     } else {
 1638              		.loc 1 2186 9 is_stmt 1 view .LVU498
2186:rtos/uC-FS/Source/fs_vol.c ****     } else {
 1639              		.loc 1 2186 33 is_stmt 0 view .LVU499
 1640 001c 6B1E     		subs	r3, r5, #1
2186:rtos/uC-FS/Source/fs_vol.c ****     } else {
 1641              		.loc 1 2186 23 view .LVU500
 1642 001e 6360     		str	r3, [r4, #4]
 1643              	.L148:
 1644              	.LVL140:
2188:rtos/uC-FS/Source/fs_vol.c ****     }
 1645              		.loc 1 2188 74 is_stmt 1 view .LVU501
2191:rtos/uC-FS/Source/fs_vol.c **** 
 1646              		.loc 1 2191 5 view .LVU502
 1647 0020 FFF7FEFF 		bl	FS_OS_Unlock
 1648              	.LVL141:
2196:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);                                   /* Release dev (see Note #1).      
 1649              		.loc 1 2196 5 view .LVU503
2196:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);                                   /* Release dev (see Note #1).      
 1650              		.loc 1 2196 8 is_stmt 0 view .LVU504
 1651 0024 012D     		cmp	r5, #1
 1652 0026 06D0     		beq	.L152
 1653              	.LVL142:
 1654              	.L144:
2199:rtos/uC-FS/Source/fs_vol.c **** 
 1655              		.loc 1 2199 1 view .LVU505
 1656 0028 02B0     		add	sp, sp, #8
 1657              	.LCFI32:
 1658              		.cfi_remember_state
 1659              		.cfi_def_cfa_offset 16
 1660              		@ sp needed
 1661 002a 70BD     		pop	{r4, r5, r6, pc}
 1662              	.LVL143:
 1663              	.L151:
 1664              	.LCFI33:
 1665              		.cfi_restore_state
2183:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ObjFree(p_vol);
ARM GAS  /tmp/ccvXhXom.s 			page 95


 1666              		.loc 1 2183 9 is_stmt 1 view .LVU506
2183:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ObjFree(p_vol);
 1667              		.loc 1 2183 15 is_stmt 0 view .LVU507
 1668 002c 266B     		ldr	r6, [r4, #48]
 1669              	.LVL144:
2184:rtos/uC-FS/Source/fs_vol.c ****     } else if (ref_cnt > 0u) {
 1670              		.loc 1 2184 9 is_stmt 1 view .LVU508
 1671 002e 2046     		mov	r0, r4
 1672 0030 FFF7FEFF 		bl	FSVol_ObjFree
 1673              	.LVL145:
 1674 0034 F4E7     		b	.L148
 1675              	.L152:
2197:rtos/uC-FS/Source/fs_vol.c ****     }
 1676              		.loc 1 2197 9 view .LVU509
 1677 0036 3046     		mov	r0, r6
 1678 0038 FFF7FEFF 		bl	FSDev_Release
 1679              	.LVL146:
 1680 003c F4E7     		b	.L144
 1681              		.cfi_endproc
 1682              	.LFE20:
 1684              		.section	.text.FSVol_Lock,"ax",%progbits
 1685              		.align	1
 1686              		.global	FSVol_Lock
 1687              		.syntax unified
 1688              		.thumb
 1689              		.thumb_func
 1690              		.fpu fpv4-sp-d16
 1692              	FSVol_Lock:
 1693              	.LVL147:
 1694              	.LFB21:
2219:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR  err;
 1695              		.loc 1 2219 1 view -0
 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 8
 1698              		@ frame_needed = 0, uses_anonymous_args = 0
2219:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR  err;
 1699              		.loc 1 2219 1 is_stmt 0 view .LVU511
 1700 0000 10B5     		push	{r4, lr}
 1701              	.LCFI34:
 1702              		.cfi_def_cfa_offset 8
 1703              		.cfi_offset 4, -8
 1704              		.cfi_offset 14, -4
 1705 0002 82B0     		sub	sp, sp, #8
 1706              	.LCFI35:
 1707              		.cfi_def_cfa_offset 16
 1708 0004 0446     		mov	r4, r0
2220:rtos/uC-FS/Source/fs_vol.c **** 
 1709              		.loc 1 2220 5 is_stmt 1 view .LVU512
2223:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1710              		.loc 1 2223 5 view .LVU513
2223:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1711              		.loc 1 2223 30 is_stmt 0 view .LVU514
 1712 0006 036B     		ldr	r3, [r0, #48]
2223:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1713              		.loc 1 2223 5 view .LVU515
 1714 0008 0DF10602 		add	r2, sp, #6
 1715 000c 0021     		movs	r1, #0
ARM GAS  /tmp/ccvXhXom.s 			page 96


 1716 000e 1868     		ldr	r0, [r3]
 1717              	.LVL148:
2223:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1718              		.loc 1 2223 5 view .LVU516
 1719 0010 FFF7FEFF 		bl	FS_OS_DevAccessLock
 1720              	.LVL149:
2224:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1721              		.loc 1 2224 5 is_stmt 1 view .LVU517
2224:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1722              		.loc 1 2224 13 is_stmt 0 view .LVU518
 1723 0014 BDF80630 		ldrh	r3, [sp, #6]
2224:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1724              		.loc 1 2224 8 view .LVU519
 1725 0018 13B1     		cbz	r3, .L158
2225:rtos/uC-FS/Source/fs_vol.c ****     }
 1726              		.loc 1 2225 16 view .LVU520
 1727 001a 0020     		movs	r0, #0
 1728              	.L154:
2236:rtos/uC-FS/Source/fs_vol.c **** 
 1729              		.loc 1 2236 1 view .LVU521
 1730 001c 02B0     		add	sp, sp, #8
 1731              	.LCFI36:
 1732              		.cfi_remember_state
 1733              		.cfi_def_cfa_offset 8
 1734              		@ sp needed
 1735 001e 10BD     		pop	{r4, pc}
 1736              	.LVL150:
 1737              	.L158:
 1738              	.LCFI37:
 1739              		.cfi_restore_state
2229:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1740              		.loc 1 2229 5 is_stmt 1 view .LVU522
2229:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1741              		.loc 1 2229 24 is_stmt 0 view .LVU523
 1742 0020 236B     		ldr	r3, [r4, #48]
2229:rtos/uC-FS/Source/fs_vol.c ****     if (err != FS_ERR_NONE) {
 1743              		.loc 1 2229 5 view .LVU524
 1744 0022 0DF10601 		add	r1, sp, #6
 1745 0026 1868     		ldr	r0, [r3]
 1746 0028 FFF7FEFF 		bl	FS_OS_DevLock
 1747              	.LVL151:
2230:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_DevAccessUnlock(p_vol->DevPtr->ID);
 1748              		.loc 1 2230 5 is_stmt 1 view .LVU525
2230:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_DevAccessUnlock(p_vol->DevPtr->ID);
 1749              		.loc 1 2230 13 is_stmt 0 view .LVU526
 1750 002c BDF80630 		ldrh	r3, [sp, #6]
2230:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_DevAccessUnlock(p_vol->DevPtr->ID);
 1751              		.loc 1 2230 8 view .LVU527
 1752 0030 0BB9     		cbnz	r3, .L159
2235:rtos/uC-FS/Source/fs_vol.c **** }
 1753              		.loc 1 2235 12 view .LVU528
 1754 0032 0120     		movs	r0, #1
 1755 0034 F2E7     		b	.L154
 1756              	.L159:
2231:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1757              		.loc 1 2231 9 is_stmt 1 view .LVU529
2231:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
ARM GAS  /tmp/ccvXhXom.s 			page 97


 1758              		.loc 1 2231 36 is_stmt 0 view .LVU530
 1759 0036 236B     		ldr	r3, [r4, #48]
2231:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 1760              		.loc 1 2231 9 view .LVU531
 1761 0038 1868     		ldr	r0, [r3]
 1762 003a FFF7FEFF 		bl	FS_OS_DevAccessUnlock
 1763              	.LVL152:
2232:rtos/uC-FS/Source/fs_vol.c ****     }
 1764              		.loc 1 2232 9 is_stmt 1 view .LVU532
2232:rtos/uC-FS/Source/fs_vol.c ****     }
 1765              		.loc 1 2232 16 is_stmt 0 view .LVU533
 1766 003e 0020     		movs	r0, #0
 1767 0040 ECE7     		b	.L154
 1768              		.cfi_endproc
 1769              	.LFE21:
 1771              		.section	.text.FSVol_Unlock,"ax",%progbits
 1772              		.align	1
 1773              		.global	FSVol_Unlock
 1774              		.syntax unified
 1775              		.thumb
 1776              		.thumb_func
 1777              		.fpu fpv4-sp-d16
 1779              	FSVol_Unlock:
 1780              	.LVL153:
 1781              	.LFB22:
2255:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE DEV LO
 1782              		.loc 1 2255 1 is_stmt 1 view -0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
2255:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ----------------- RELEASE DEV LO
 1786              		.loc 1 2255 1 is_stmt 0 view .LVU535
 1787 0000 10B5     		push	{r4, lr}
 1788              	.LCFI38:
 1789              		.cfi_def_cfa_offset 8
 1790              		.cfi_offset 4, -8
 1791              		.cfi_offset 14, -4
 1792 0002 0446     		mov	r4, r0
2257:rtos/uC-FS/Source/fs_vol.c **** 
 1793              		.loc 1 2257 5 is_stmt 1 view .LVU536
2257:rtos/uC-FS/Source/fs_vol.c **** 
 1794              		.loc 1 2257 26 is_stmt 0 view .LVU537
 1795 0004 036B     		ldr	r3, [r0, #48]
2257:rtos/uC-FS/Source/fs_vol.c **** 
 1796              		.loc 1 2257 5 view .LVU538
 1797 0006 1868     		ldr	r0, [r3]
 1798              	.LVL154:
2257:rtos/uC-FS/Source/fs_vol.c **** 
 1799              		.loc 1 2257 5 view .LVU539
 1800 0008 FFF7FEFF 		bl	FS_OS_DevUnlock
 1801              	.LVL155:
2260:rtos/uC-FS/Source/fs_vol.c **** }
 1802              		.loc 1 2260 5 is_stmt 1 view .LVU540
2260:rtos/uC-FS/Source/fs_vol.c **** }
 1803              		.loc 1 2260 32 is_stmt 0 view .LVU541
 1804 000c 236B     		ldr	r3, [r4, #48]
2260:rtos/uC-FS/Source/fs_vol.c **** }
ARM GAS  /tmp/ccvXhXom.s 			page 98


 1805              		.loc 1 2260 5 view .LVU542
 1806 000e 1868     		ldr	r0, [r3]
 1807 0010 FFF7FEFF 		bl	FS_OS_DevAccessUnlock
 1808              	.LVL156:
2261:rtos/uC-FS/Source/fs_vol.c **** 
 1809              		.loc 1 2261 1 view .LVU543
 1810 0014 10BD     		pop	{r4, pc}
2261:rtos/uC-FS/Source/fs_vol.c **** 
 1811              		.loc 1 2261 1 view .LVU544
 1812              		.cfi_endproc
 1813              	.LFE22:
 1815              		.section	.text.FSVol_Open,"ax",%progbits
 1816              		.align	1
 1817              		.global	FSVol_Open
 1818              		.syntax unified
 1819              		.thumb
 1820              		.thumb_func
 1821              		.fpu fpv4-sp-d16
 1823              	FSVol_Open:
 1824              	.LVL157:
 1825              	.LFB5:
 963:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV       *p_dev;
 1826              		.loc 1 963 1 is_stmt 1 view -0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 16
 1829              		@ frame_needed = 0, uses_anonymous_args = 0
 963:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV       *p_dev;
 1830              		.loc 1 963 1 is_stmt 0 view .LVU546
 1831 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1832              	.LCFI39:
 1833              		.cfi_def_cfa_offset 24
 1834              		.cfi_offset 4, -24
 1835              		.cfi_offset 5, -20
 1836              		.cfi_offset 6, -16
 1837              		.cfi_offset 7, -12
 1838              		.cfi_offset 8, -8
 1839              		.cfi_offset 14, -4
 1840 0004 84B0     		sub	sp, sp, #16
 1841              	.LCFI40:
 1842              		.cfi_def_cfa_offset 40
 1843 0006 0446     		mov	r4, r0
 1844 0008 0D46     		mov	r5, r1
 1845 000a 9046     		mov	r8, r2
 964:rtos/uC-FS/Source/fs_vol.c ****     CPU_CHAR     *name_file;
 1846              		.loc 1 964 5 is_stmt 1 view .LVU547
 965:rtos/uC-FS/Source/fs_vol.c ****     CPU_CHAR      name_vol_copy[FS_CFG_MAX_VOL_NAME_LEN + 1u];
 1847              		.loc 1 965 5 view .LVU548
 966:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
 1848              		.loc 1 966 5 view .LVU549
 967:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN   lock_success;
 1849              		.loc 1 967 5 view .LVU550
 968:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR        err;
 1850              		.loc 1 968 5 view .LVU551
 969:rtos/uC-FS/Source/fs_vol.c **** 
 1851              		.loc 1 969 5 view .LVU552
 973:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 1852              		.loc 1 973 5 view .LVU553
ARM GAS  /tmp/ccvXhXom.s 			page 99


 973:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 1853              		.loc 1 973 8 is_stmt 0 view .LVU554
 1854 000c 1F46     		mov	r7, r3
 1855 000e 93B1     		cbz	r3, .L189
 1856              	.LVL158:
 1857              	.L163:
 974:rtos/uC-FS/Source/fs_vol.c ****     }
 1858              		.loc 1 974 9 is_stmt 1 discriminator 1 view .LVU555
 976:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 1859              		.loc 1 976 5 discriminator 1 view .LVU556
 976:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 1860              		.loc 1 976 8 is_stmt 0 discriminator 1 view .LVU557
 1861 0010 A4B1     		cbz	r4, .L190
 980:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 1862              		.loc 1 980 5 is_stmt 1 view .LVU558
 980:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 1863              		.loc 1 980 8 is_stmt 0 view .LVU559
 1864 0012 BDB1     		cbz	r5, .L191
 988:rtos/uC-FS/Source/fs_vol.c ****                              name_vol_copy,
 1865              		.loc 1 988 5 is_stmt 1 view .LVU560
 988:rtos/uC-FS/Source/fs_vol.c ****                              name_vol_copy,
 1866              		.loc 1 988 17 is_stmt 0 view .LVU561
 1867 0014 3A46     		mov	r2, r7
 1868 0016 01A9     		add	r1, sp, #4
 1869 0018 2046     		mov	r0, r4
 1870 001a FFF7FEFF 		bl	FS_PathParse
 1871              	.LVL159:
 992:rtos/uC-FS/Source/fs_vol.c ****         return;
 1872              		.loc 1 992 5 is_stmt 1 view .LVU562
 992:rtos/uC-FS/Source/fs_vol.c ****         return;
 1873              		.loc 1 992 9 is_stmt 0 view .LVU563
 1874 001e 3B88     		ldrh	r3, [r7]
 992:rtos/uC-FS/Source/fs_vol.c ****         return;
 1875              		.loc 1 992 8 view .LVU564
 1876 0020 9BB9     		cbnz	r3, .L162
 996:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_VOL_INVALID_NAME;
 1877              		.loc 1 996 5 is_stmt 1 view .LVU565
 996:rtos/uC-FS/Source/fs_vol.c ****        *p_err  = FS_ERR_VOL_INVALID_NAME;
 1878              		.loc 1 996 8 is_stmt 0 view .LVU566
 1879 0022 A8B1     		cbz	r0, .L192
1001:rtos/uC-FS/Source/fs_vol.c ****         *p_err = FS_ERR_VOL_INVALID_NAME;
 1880              		.loc 1 1001 5 is_stmt 1 view .LVU567
1001:rtos/uC-FS/Source/fs_vol.c ****         *p_err = FS_ERR_VOL_INVALID_NAME;
 1881              		.loc 1 1001 9 is_stmt 0 view .LVU568
 1882 0024 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1001:rtos/uC-FS/Source/fs_vol.c ****         *p_err = FS_ERR_VOL_INVALID_NAME;
 1883              		.loc 1 1001 8 view .LVU569
 1884 0026 BBB9     		cbnz	r3, .L193
1006:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_NAME;
 1885              		.loc 1 1006 5 is_stmt 1 view .LVU570
1006:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_NAME;
 1886              		.loc 1 1006 22 is_stmt 0 view .LVU571
 1887 0028 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1006:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_NAME;
 1888              		.loc 1 1006 8 view .LVU572
 1889 002c C3B9     		cbnz	r3, .L169
1007:rtos/uC-FS/Source/fs_vol.c ****         return;
ARM GAS  /tmp/ccvXhXom.s 			page 100


 1890              		.loc 1 1007 8 is_stmt 1 view .LVU573
1007:rtos/uC-FS/Source/fs_vol.c ****         return;
 1891              		.loc 1 1007 15 is_stmt 0 view .LVU574
 1892 002e 4FF4AF63 		mov	r3, #1400
 1893 0032 3B80     		strh	r3, [r7]	@ movhi
1008:rtos/uC-FS/Source/fs_vol.c ****     }
 1894              		.loc 1 1008 9 is_stmt 1 view .LVU575
 1895 0034 09E0     		b	.L162
 1896              	.LVL160:
 1897              	.L189:
 974:rtos/uC-FS/Source/fs_vol.c ****     }
 1898              		.loc 1 974 9 view .LVU576
 974:rtos/uC-FS/Source/fs_vol.c ****     }
 1899              		.loc 1 974 9 view .LVU577
 1900 0036 FFF7FEFF 		bl	CPU_SW_Exception
 1901              	.LVL161:
 974:rtos/uC-FS/Source/fs_vol.c ****     }
 1902              		.loc 1 974 9 is_stmt 0 view .LVU578
 1903 003a E9E7     		b	.L163
 1904              	.L190:
 977:rtos/uC-FS/Source/fs_vol.c ****         return;
 1905              		.loc 1 977 8 is_stmt 1 view .LVU579
 977:rtos/uC-FS/Source/fs_vol.c ****         return;
 1906              		.loc 1 977 15 is_stmt 0 view .LVU580
 1907 003c 40F28933 		movw	r3, #905
 1908 0040 3B80     		strh	r3, [r7]	@ movhi
 978:rtos/uC-FS/Source/fs_vol.c ****     }
 1909              		.loc 1 978 9 is_stmt 1 view .LVU581
 1910 0042 02E0     		b	.L162
 1911              	.L191:
 981:rtos/uC-FS/Source/fs_vol.c ****         return;
 1912              		.loc 1 981 8 view .LVU582
 981:rtos/uC-FS/Source/fs_vol.c ****         return;
 1913              		.loc 1 981 15 is_stmt 0 view .LVU583
 1914 0044 40F28933 		movw	r3, #905
 1915 0048 3B80     		strh	r3, [r7]	@ movhi
 982:rtos/uC-FS/Source/fs_vol.c ****     }
 1916              		.loc 1 982 9 is_stmt 1 view .LVU584
 1917              	.LVL162:
 1918              	.L162:
1150:rtos/uC-FS/Source/fs_vol.c **** 
 1919              		.loc 1 1150 1 is_stmt 0 view .LVU585
 1920 004a 04B0     		add	sp, sp, #16
 1921              	.LCFI41:
 1922              		.cfi_remember_state
 1923              		.cfi_def_cfa_offset 24
 1924              		@ sp needed
 1925 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1926              	.LVL163:
 1927              	.L192:
 1928              	.LCFI42:
 1929              		.cfi_restore_state
 997:rtos/uC-FS/Source/fs_vol.c ****         return;
 1930              		.loc 1 997 8 is_stmt 1 view .LVU586
 997:rtos/uC-FS/Source/fs_vol.c ****         return;
 1931              		.loc 1 997 16 is_stmt 0 view .LVU587
 1932 0050 4FF4AF63 		mov	r3, #1400
ARM GAS  /tmp/ccvXhXom.s 			page 101


 1933 0054 3B80     		strh	r3, [r7]	@ movhi
 998:rtos/uC-FS/Source/fs_vol.c ****     }
 1934              		.loc 1 998 9 is_stmt 1 view .LVU588
 1935 0056 F8E7     		b	.L162
 1936              	.L193:
1002:rtos/uC-FS/Source/fs_vol.c ****          return;
 1937              		.loc 1 1002 9 view .LVU589
1002:rtos/uC-FS/Source/fs_vol.c ****          return;
 1938              		.loc 1 1002 16 is_stmt 0 view .LVU590
 1939 0058 4FF4AF63 		mov	r3, #1400
 1940 005c 3B80     		strh	r3, [r7]	@ movhi
1003:rtos/uC-FS/Source/fs_vol.c ****     }
 1941              		.loc 1 1003 10 is_stmt 1 view .LVU591
 1942 005e F4E7     		b	.L162
 1943              	.L169:
1014:rtos/uC-FS/Source/fs_vol.c ****     if (p_dev == (FS_DEV *)0) {
 1944              		.loc 1 1014 5 view .LVU592
1014:rtos/uC-FS/Source/fs_vol.c ****     if (p_dev == (FS_DEV *)0) {
 1945              		.loc 1 1014 13 is_stmt 0 view .LVU593
 1946 0060 2846     		mov	r0, r5
 1947              	.LVL164:
1014:rtos/uC-FS/Source/fs_vol.c ****     if (p_dev == (FS_DEV *)0) {
 1948              		.loc 1 1014 13 view .LVU594
 1949 0062 FFF7FEFF 		bl	FSDev_Acquire
 1950              	.LVL165:
1015:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_NOT_OPEN;
 1951              		.loc 1 1015 5 is_stmt 1 view .LVU595
1015:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_NOT_OPEN;
 1952              		.loc 1 1015 8 is_stmt 0 view .LVU596
 1953 0066 0446     		mov	r4, r0
 1954              	.LVL166:
1015:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_NOT_OPEN;
 1955              		.loc 1 1015 8 view .LVU597
 1956 0068 98B1     		cbz	r0, .L194
1023:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 1957              		.loc 1 1023 5 is_stmt 1 view .LVU598
 1958 006a 3846     		mov	r0, r7
 1959              	.LVL167:
1023:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 1960              		.loc 1 1023 5 is_stmt 0 view .LVU599
 1961 006c FFF7FEFF 		bl	FS_OS_Lock
 1962              	.LVL168:
1024:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
 1963              		.loc 1 1024 5 is_stmt 1 view .LVU600
1024:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
 1964              		.loc 1 1024 9 is_stmt 0 view .LVU601
 1965 0070 3B88     		ldrh	r3, [r7]
1024:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
 1966              		.loc 1 1024 8 view .LVU602
 1967 0072 93B9     		cbnz	r3, .L195
1029:rtos/uC-FS/Source/fs_vol.c ****                              p_dev,
 1968              		.loc 1 1029 5 is_stmt 1 view .LVU603
1029:rtos/uC-FS/Source/fs_vol.c ****                              p_dev,
 1969              		.loc 1 1029 13 is_stmt 0 view .LVU604
 1970 0074 4246     		mov	r2, r8
 1971 0076 2146     		mov	r1, r4
 1972 0078 01A8     		add	r0, sp, #4
ARM GAS  /tmp/ccvXhXom.s 			page 102


 1973 007a FFF7FEFF 		bl	FSVol_ObjFindEx
 1974              	.LVL169:
1032:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
 1975              		.loc 1 1032 5 is_stmt 1 view .LVU605
1032:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
 1976              		.loc 1 1032 8 is_stmt 0 view .LVU606
 1977 007e 80B1     		cbz	r0, .L172
1033:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
 1978              		.loc 1 1033 9 is_stmt 1 view .LVU607
 1979 0080 FFF7FEFF 		bl	FS_OS_Unlock
 1980              	.LVL170:
1034:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_ALREADY_OPEN;
 1981              		.loc 1 1034 9 view .LVU608
 1982 0084 2046     		mov	r0, r4
 1983 0086 FFF7FEFF 		bl	FSDev_Release
 1984              	.LVL171:
1035:rtos/uC-FS/Source/fs_vol.c ****         return;
 1985              		.loc 1 1035 8 view .LVU609
1035:rtos/uC-FS/Source/fs_vol.c ****         return;
 1986              		.loc 1 1035 15 is_stmt 0 view .LVU610
 1987 008a 40F28753 		movw	r3, #1415
 1988 008e 3B80     		strh	r3, [r7]	@ movhi
1036:rtos/uC-FS/Source/fs_vol.c ****     }
 1989              		.loc 1 1036 9 is_stmt 1 view .LVU611
 1990 0090 DBE7     		b	.L162
 1991              	.LVL172:
 1992              	.L194:
1016:rtos/uC-FS/Source/fs_vol.c ****         return;
 1993              		.loc 1 1016 8 view .LVU612
1016:rtos/uC-FS/Source/fs_vol.c ****         return;
 1994              		.loc 1 1016 15 is_stmt 0 view .LVU613
 1995 0092 40F24513 		movw	r3, #325
 1996 0096 3B80     		strh	r3, [r7]	@ movhi
1017:rtos/uC-FS/Source/fs_vol.c ****     }
 1997              		.loc 1 1017 9 is_stmt 1 view .LVU614
 1998 0098 D7E7     		b	.L162
 1999              	.LVL173:
 2000              	.L195:
1025:rtos/uC-FS/Source/fs_vol.c ****         return;
 2001              		.loc 1 1025 9 view .LVU615
 2002 009a 2046     		mov	r0, r4
 2003 009c FFF7FEFF 		bl	FSDev_Release
 2004              	.LVL174:
1026:rtos/uC-FS/Source/fs_vol.c ****     }
 2005              		.loc 1 1026 9 view .LVU616
 2006 00a0 D3E7     		b	.L162
 2007              	.LVL175:
 2008              	.L172:
1039:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 2009              		.loc 1 1039 5 view .LVU617
1039:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 2010              		.loc 1 1039 13 is_stmt 0 view .LVU618
 2011 00a2 FFF7FEFF 		bl	FSVol_ObjGet
 2012              	.LVL176:
1040:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
 2013              		.loc 1 1040 5 is_stmt 1 view .LVU619
1040:rtos/uC-FS/Source/fs_vol.c ****         FS_OS_Unlock();
ARM GAS  /tmp/ccvXhXom.s 			page 103


 2014              		.loc 1 1040 8 is_stmt 0 view .LVU620
 2015 00a6 0646     		mov	r6, r0
 2016 00a8 88B3     		cbz	r0, .L196
1047:rtos/uC-FS/Source/fs_vol.c ****     p_vol->State        = FS_VOL_STATE_OPENING;
 2017              		.loc 1 1047 5 is_stmt 1 view .LVU621
1047:rtos/uC-FS/Source/fs_vol.c ****     p_vol->State        = FS_VOL_STATE_OPENING;
 2018              		.loc 1 1047 25 is_stmt 0 view .LVU622
 2019 00aa A0F81C80 		strh	r8, [r0, #28]	@ movhi
1048:rtos/uC-FS/Source/fs_vol.c ****     p_vol->AccessMode   = FS_VOL_ACCESS_MODE_RDWR;              /* See Note #4.                    
 2020              		.loc 1 1048 5 is_stmt 1 view .LVU623
1048:rtos/uC-FS/Source/fs_vol.c ****     p_vol->AccessMode   = FS_VOL_ACCESS_MODE_RDWR;              /* See Note #4.                    
 2021              		.loc 1 1048 25 is_stmt 0 view .LVU624
 2022 00ae 0223     		movs	r3, #2
 2023 00b0 0380     		strh	r3, [r0]	@ movhi
1049:rtos/uC-FS/Source/fs_vol.c ****     p_vol->DevPtr       = p_dev;
 2024              		.loc 1 1049 5 is_stmt 1 view .LVU625
1049:rtos/uC-FS/Source/fs_vol.c ****     p_vol->DevPtr       = p_dev;
 2025              		.loc 1 1049 25 is_stmt 0 view .LVU626
 2026 00b2 0323     		movs	r3, #3
 2027 00b4 C360     		str	r3, [r0, #12]
1050:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefCnt       = 1u;
 2028              		.loc 1 1050 5 is_stmt 1 view .LVU627
1050:rtos/uC-FS/Source/fs_vol.c ****     p_vol->RefCnt       = 1u;
 2029              		.loc 1 1050 25 is_stmt 0 view .LVU628
 2030 00b6 0463     		str	r4, [r0, #48]
1051:rtos/uC-FS/Source/fs_vol.c ****     Str_Copy_N(p_vol->Name, name_vol_copy, FS_CFG_MAX_VOL_NAME_LEN);
 2031              		.loc 1 1051 5 is_stmt 1 view .LVU629
1051:rtos/uC-FS/Source/fs_vol.c ****     Str_Copy_N(p_vol->Name, name_vol_copy, FS_CFG_MAX_VOL_NAME_LEN);
 2032              		.loc 1 1051 25 is_stmt 0 view .LVU630
 2033 00b8 0123     		movs	r3, #1
 2034 00ba 4360     		str	r3, [r0, #4]
1052:rtos/uC-FS/Source/fs_vol.c **** 
 2035              		.loc 1 1052 5 is_stmt 1 view .LVU631
 2036 00bc 0A22     		movs	r2, #10
 2037 00be 01A9     		add	r1, sp, #4
 2038 00c0 1030     		adds	r0, r0, #16
 2039              	.LVL177:
1052:rtos/uC-FS/Source/fs_vol.c **** 
 2040              		.loc 1 1052 5 is_stmt 0 view .LVU632
 2041 00c2 FFF7FEFF 		bl	Str_Copy_N
 2042              	.LVL178:
1054:rtos/uC-FS/Source/fs_vol.c **** 
 2043              		.loc 1 1054 5 is_stmt 1 view .LVU633
 2044 00c6 FFF7FEFF 		bl	FS_OS_Unlock
 2045              	.LVL179:
1059:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 2046              		.loc 1 1059 5 view .LVU634
 2047 00ca 3A46     		mov	r2, r7
 2048 00cc 0021     		movs	r1, #0
 2049 00ce 2846     		mov	r0, r5
 2050 00d0 FFF7FEFF 		bl	FSDev_AccessLock
 2051              	.LVL180:
1060:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 2052              		.loc 1 1060 5 view .LVU635
1060:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 2053              		.loc 1 1060 9 is_stmt 0 view .LVU636
 2054 00d4 3B88     		ldrh	r3, [r7]
ARM GAS  /tmp/ccvXhXom.s 			page 104


1060:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 2055              		.loc 1 1060 8 view .LVU637
 2056 00d6 1BBB     		cbnz	r3, .L197
1066:rtos/uC-FS/Source/fs_vol.c ****     if (lock_success != DEF_YES) {
 2057              		.loc 1 1066 5 is_stmt 1 view .LVU638
1066:rtos/uC-FS/Source/fs_vol.c ****     if (lock_success != DEF_YES) {
 2058              		.loc 1 1066 20 is_stmt 0 view .LVU639
 2059 00d8 2046     		mov	r0, r4
 2060 00da FFF7FEFF 		bl	FSDev_Lock
 2061              	.LVL181:
1067:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 2062              		.loc 1 1067 5 is_stmt 1 view .LVU640
1067:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 2063              		.loc 1 1067 8 is_stmt 0 view .LVU641
 2064 00de 0128     		cmp	r0, #1
 2065 00e0 25D1     		bne	.L198
1075:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_OPEN:                                 /* Dev is not present or not low fm
 2066              		.loc 1 1075 5 is_stmt 1 view .LVU642
1075:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_OPEN:                                 /* Dev is not present or not low fm
 2067              		.loc 1 1075 18 is_stmt 0 view .LVU643
 2068 00e2 A388     		ldrh	r3, [r4, #4]
1075:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_OPEN:                                 /* Dev is not present or not low fm
 2069              		.loc 1 1075 5 view .LVU644
 2070 00e4 042B     		cmp	r3, #4
 2071 00e6 2ED8     		bhi	.L176
 2072 00e8 032B     		cmp	r3, #3
 2073 00ea 44D2     		bcs	.L199
 2074              	.L178:
1095:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_DEV_NOT_OPEN;
 2075              		.loc 1 1095 14 is_stmt 1 view .LVU645
1095:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_DEV_NOT_OPEN;
 2076              		.loc 1 1095 27 is_stmt 0 view .LVU646
 2077 00ec 0123     		movs	r3, #1
 2078 00ee 3380     		strh	r3, [r6]	@ movhi
1096:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Unlock(p_dev);
 2079              		.loc 1 1096 13 is_stmt 1 view .LVU647
1096:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Unlock(p_dev);
 2080              		.loc 1 1096 20 is_stmt 0 view .LVU648
 2081 00f0 40F24513 		movw	r3, #325
 2082 00f4 3B80     		strh	r3, [r7]	@ movhi
1097:rtos/uC-FS/Source/fs_vol.c ****              FSDev_AccessUnlock(name_dev, &err);
 2083              		.loc 1 1097 14 is_stmt 1 view .LVU649
 2084 00f6 2046     		mov	r0, r4
 2085              	.LVL182:
1097:rtos/uC-FS/Source/fs_vol.c ****              FSDev_AccessUnlock(name_dev, &err);
 2086              		.loc 1 1097 14 is_stmt 0 view .LVU650
 2087 00f8 FFF7FEFF 		bl	FSDev_Unlock
 2088              	.LVL183:
1098:rtos/uC-FS/Source/fs_vol.c ****              (void)err;                                        /* Err ignored (Already in err state
 2089              		.loc 1 1098 14 is_stmt 1 view .LVU651
 2090 00fc 0DF10201 		add	r1, sp, #2
 2091 0100 2846     		mov	r0, r5
 2092 0102 FFF7FEFF 		bl	FSDev_AccessUnlock
 2093              	.LVL184:
1099:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Release(p_dev);
 2094              		.loc 1 1099 14 view .LVU652
1100:rtos/uC-FS/Source/fs_vol.c ****              return;
ARM GAS  /tmp/ccvXhXom.s 			page 105


 2095              		.loc 1 1100 14 view .LVU653
 2096 0106 2046     		mov	r0, r4
 2097 0108 FFF7FEFF 		bl	FSDev_Release
 2098              	.LVL185:
1101:rtos/uC-FS/Source/fs_vol.c **** 
 2099              		.loc 1 1101 14 view .LVU654
 2100 010c 9DE7     		b	.L162
 2101              	.LVL186:
 2102              	.L196:
1041:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
 2103              		.loc 1 1041 9 view .LVU655
 2104 010e FFF7FEFF 		bl	FS_OS_Unlock
 2105              	.LVL187:
1042:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NONE_AVAIL;
 2106              		.loc 1 1042 9 view .LVU656
 2107 0112 2046     		mov	r0, r4
 2108 0114 FFF7FEFF 		bl	FSDev_Release
 2109              	.LVL188:
1043:rtos/uC-FS/Source/fs_vol.c ****         return;
 2110              		.loc 1 1043 8 view .LVU657
1043:rtos/uC-FS/Source/fs_vol.c ****         return;
 2111              		.loc 1 1043 15 is_stmt 0 view .LVU658
 2112 0118 40F28253 		movw	r3, #1410
 2113 011c 3B80     		strh	r3, [r7]	@ movhi
1044:rtos/uC-FS/Source/fs_vol.c ****     }
 2114              		.loc 1 1044 9 is_stmt 1 view .LVU659
 2115 011e 94E7     		b	.L162
 2116              	.L197:
1061:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
 2117              		.loc 1 1061 8 view .LVU660
1061:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
 2118              		.loc 1 1061 15 is_stmt 0 view .LVU661
 2119 0120 40F2DD53 		movw	r3, #1501
 2120 0124 3B80     		strh	r3, [r7]	@ movhi
1062:rtos/uC-FS/Source/fs_vol.c ****         return;
 2121              		.loc 1 1062 9 is_stmt 1 view .LVU662
 2122 0126 2046     		mov	r0, r4
 2123 0128 FFF7FEFF 		bl	FSDev_Release
 2124              	.LVL189:
1063:rtos/uC-FS/Source/fs_vol.c ****     }
 2125              		.loc 1 1063 9 view .LVU663
 2126 012c 8DE7     		b	.L162
 2127              	.LVL190:
 2128              	.L198:
1068:rtos/uC-FS/Source/fs_vol.c ****         FSDev_AccessUnlock(name_dev, &err);
 2129              		.loc 1 1068 8 view .LVU664
1068:rtos/uC-FS/Source/fs_vol.c ****         FSDev_AccessUnlock(name_dev, &err);
 2130              		.loc 1 1068 15 is_stmt 0 view .LVU665
 2131 012e 40F2DD53 		movw	r3, #1501
 2132 0132 3B80     		strh	r3, [r7]	@ movhi
1069:rtos/uC-FS/Source/fs_vol.c ****         (void)err;                                             /* Err ignored (Already in err state
 2133              		.loc 1 1069 9 is_stmt 1 view .LVU666
 2134 0134 0DF10201 		add	r1, sp, #2
 2135 0138 2846     		mov	r0, r5
 2136              	.LVL191:
1069:rtos/uC-FS/Source/fs_vol.c ****         (void)err;                                             /* Err ignored (Already in err state
 2137              		.loc 1 1069 9 is_stmt 0 view .LVU667
ARM GAS  /tmp/ccvXhXom.s 			page 106


 2138 013a FFF7FEFF 		bl	FSDev_AccessUnlock
 2139              	.LVL192:
1070:rtos/uC-FS/Source/fs_vol.c ****         FSDev_Release(p_dev);
 2140              		.loc 1 1070 9 is_stmt 1 view .LVU668
1071:rtos/uC-FS/Source/fs_vol.c ****         return;
 2141              		.loc 1 1071 9 view .LVU669
 2142 013e 2046     		mov	r0, r4
 2143 0140 FFF7FEFF 		bl	FSDev_Release
 2144              	.LVL193:
1072:rtos/uC-FS/Source/fs_vol.c ****     }
 2145              		.loc 1 1072 9 view .LVU670
 2146 0144 81E7     		b	.L162
 2147              	.LVL194:
 2148              	.L176:
1075:rtos/uC-FS/Source/fs_vol.c ****         case FS_DEV_STATE_OPEN:                                 /* Dev is not present or not low fm
 2149              		.loc 1 1075 5 is_stmt 0 view .LVU671
 2150 0146 052B     		cmp	r3, #5
 2151 0148 D0D1     		bne	.L178
1088:rtos/uC-FS/Source/fs_vol.c **** 
 2152              		.loc 1 1088 14 is_stmt 1 view .LVU672
1108:rtos/uC-FS/Source/fs_vol.c **** 
 2153              		.loc 1 1108 5 view .LVU673
 2154 014a 3946     		mov	r1, r7
 2155 014c 3046     		mov	r0, r6
 2156              	.LVL195:
1108:rtos/uC-FS/Source/fs_vol.c **** 
 2157              		.loc 1 1108 5 is_stmt 0 view .LVU674
 2158 014e FFF7FEFF 		bl	FSVol_OpenLocked
 2159              	.LVL196:
1110:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:                                       /* Vol is mounted.                 
 2160              		.loc 1 1110 5 is_stmt 1 view .LVU675
1110:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:                                       /* Vol is mounted.                 
 2161              		.loc 1 1110 13 is_stmt 0 view .LVU676
 2162 0152 3B88     		ldrh	r3, [r7]
1110:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:                                       /* Vol is mounted.                 
 2163              		.loc 1 1110 5 view .LVU677
 2164 0154 B3F5A47F 		cmp	r3, #328
 2165 0158 2CD2     		bcs	.L180
 2166 015a B3F5967F 		cmp	r3, #300
 2167 015e 1CD2     		bcs	.L181
 2168 0160 7BBB     		cbnz	r3, .L183
1112:rtos/uC-FS/Source/fs_vol.c ****              break;
 2169              		.loc 1 1112 14 is_stmt 1 view .LVU678
1112:rtos/uC-FS/Source/fs_vol.c ****              break;
 2170              		.loc 1 1112 27 is_stmt 0 view .LVU679
 2171 0162 0523     		movs	r3, #5
 2172 0164 3380     		strh	r3, [r6]	@ movhi
1113:rtos/uC-FS/Source/fs_vol.c **** 
 2173              		.loc 1 1113 14 is_stmt 1 view .LVU680
 2174              	.L186:
1139:rtos/uC-FS/Source/fs_vol.c **** 
 2175              		.loc 1 1139 5 view .LVU681
 2176 0166 3146     		mov	r1, r6
 2177 0168 2046     		mov	r0, r4
 2178 016a FFF7FEFF 		bl	FSDev_VolAdd
 2179              	.LVL197:
1149:rtos/uC-FS/Source/fs_vol.c **** }
ARM GAS  /tmp/ccvXhXom.s 			page 107


 2180              		.loc 1 1149 5 view .LVU682
 2181 016e 3046     		mov	r0, r6
 2182 0170 FFF7FEFF 		bl	FSVol_Unlock
 2183              	.LVL198:
 2184 0174 69E7     		b	.L162
 2185              	.LVL199:
 2186              	.L199:
1078:rtos/uC-FS/Source/fs_vol.c ****              FSDev_VolAdd(p_dev, p_vol);                        /* ... but still add vol to dev's l
 2187              		.loc 1 1078 14 view .LVU683
1078:rtos/uC-FS/Source/fs_vol.c ****              FSDev_VolAdd(p_dev, p_vol);                        /* ... but still add vol to dev's l
 2188              		.loc 1 1078 27 is_stmt 0 view .LVU684
 2189 0176 0323     		movs	r3, #3
 2190 0178 3380     		strh	r3, [r6]	@ movhi
1079:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_DEV_NOT_PRESENT;
 2191              		.loc 1 1079 14 is_stmt 1 view .LVU685
 2192 017a 3146     		mov	r1, r6
 2193 017c 2046     		mov	r0, r4
 2194              	.LVL200:
1079:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_DEV_NOT_PRESENT;
 2195              		.loc 1 1079 14 is_stmt 0 view .LVU686
 2196 017e FFF7FEFF 		bl	FSDev_VolAdd
 2197              	.LVL201:
1080:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Unlock(p_dev);
 2198              		.loc 1 1080 13 is_stmt 1 view .LVU687
1080:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Unlock(p_dev);
 2199              		.loc 1 1080 20 is_stmt 0 view .LVU688
 2200 0182 4FF4A373 		mov	r3, #326
 2201 0186 3B80     		strh	r3, [r7]	@ movhi
1081:rtos/uC-FS/Source/fs_vol.c ****              FSDev_AccessUnlock(name_dev, &err);
 2202              		.loc 1 1081 14 is_stmt 1 view .LVU689
 2203 0188 2046     		mov	r0, r4
 2204 018a FFF7FEFF 		bl	FSDev_Unlock
 2205              	.LVL202:
1082:rtos/uC-FS/Source/fs_vol.c ****              (void)err;                                        /* Err ignored (Already in err state
 2206              		.loc 1 1082 14 view .LVU690
 2207 018e 0DF10201 		add	r1, sp, #2
 2208 0192 2846     		mov	r0, r5
 2209 0194 FFF7FEFF 		bl	FSDev_AccessUnlock
 2210              	.LVL203:
1083:rtos/uC-FS/Source/fs_vol.c ****              return;
 2211              		.loc 1 1083 14 view .LVU691
1084:rtos/uC-FS/Source/fs_vol.c **** 
 2212              		.loc 1 1084 14 view .LVU692
 2213 0198 57E7     		b	.L162
 2214              	.L181:
1084:rtos/uC-FS/Source/fs_vol.c **** 
 2215              		.loc 1 1084 14 is_stmt 0 view .LVU693
 2216 019a A3F59673 		sub	r3, r3, #300
 2217 019e 9BB2     		uxth	r3, r3
 2218 01a0 0122     		movs	r2, #1
 2219 01a2 02FA03F3 		lsl	r3, r2, r3
 2220 01a6 02F14862 		add	r2, r2, #209715200
 2221 01aa 1342     		tst	r3, r2
 2222 01ac 09D0     		beq	.L183
1125:rtos/uC-FS/Source/fs_vol.c ****              break;
 2223              		.loc 1 1125 14 is_stmt 1 view .LVU694
1125:rtos/uC-FS/Source/fs_vol.c ****              break;
ARM GAS  /tmp/ccvXhXom.s 			page 108


 2224              		.loc 1 1125 27 is_stmt 0 view .LVU695
 2225 01ae 0323     		movs	r3, #3
 2226 01b0 3380     		strh	r3, [r6]	@ movhi
1126:rtos/uC-FS/Source/fs_vol.c **** 
 2227              		.loc 1 1126 14 is_stmt 1 view .LVU696
 2228 01b2 D8E7     		b	.L186
 2229              	.L180:
1110:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:                                       /* Vol is mounted.                 
 2230              		.loc 1 1110 5 is_stmt 0 view .LVU697
 2231 01b4 40F2EF32 		movw	r2, #1007
 2232 01b8 9342     		cmp	r3, r2
 2233 01ba 02D1     		bne	.L183
1117:rtos/uC-FS/Source/fs_vol.c ****              break;
 2234              		.loc 1 1117 14 is_stmt 1 view .LVU698
1117:rtos/uC-FS/Source/fs_vol.c ****              break;
 2235              		.loc 1 1117 27 is_stmt 0 view .LVU699
 2236 01bc 0423     		movs	r3, #4
 2237 01be 3380     		strh	r3, [r6]	@ movhi
1118:rtos/uC-FS/Source/fs_vol.c **** 
 2238              		.loc 1 1118 14 is_stmt 1 view .LVU700
 2239 01c0 D1E7     		b	.L186
 2240              	.L183:
1131:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Unlock(p_dev);
 2241              		.loc 1 1131 14 view .LVU701
1131:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Unlock(p_dev);
 2242              		.loc 1 1131 27 is_stmt 0 view .LVU702
 2243 01c2 0123     		movs	r3, #1
 2244 01c4 3380     		strh	r3, [r6]	@ movhi
1132:rtos/uC-FS/Source/fs_vol.c ****              FSDev_AccessUnlock(name_dev, &err);
 2245              		.loc 1 1132 14 is_stmt 1 view .LVU703
 2246 01c6 2046     		mov	r0, r4
 2247 01c8 FFF7FEFF 		bl	FSDev_Unlock
 2248              	.LVL204:
1133:rtos/uC-FS/Source/fs_vol.c ****              (void)err;                                        /* Err ignored (Already in err state
 2249              		.loc 1 1133 14 view .LVU704
 2250 01cc 0DF10201 		add	r1, sp, #2
 2251 01d0 2846     		mov	r0, r5
 2252 01d2 FFF7FEFF 		bl	FSDev_AccessUnlock
 2253              	.LVL205:
1134:rtos/uC-FS/Source/fs_vol.c ****              FSDev_Release(p_dev);
 2254              		.loc 1 1134 14 view .LVU705
1135:rtos/uC-FS/Source/fs_vol.c ****              return;
 2255              		.loc 1 1135 14 view .LVU706
 2256 01d6 2046     		mov	r0, r4
 2257 01d8 FFF7FEFF 		bl	FSDev_Release
 2258              	.LVL206:
1136:rtos/uC-FS/Source/fs_vol.c ****     }
 2259              		.loc 1 1136 14 view .LVU707
 2260 01dc 35E7     		b	.L162
 2261              		.cfi_endproc
 2262              	.LFE5:
 2264              		.section	.text.FSVol_ReleaseUnlock,"ax",%progbits
 2265              		.align	1
 2266              		.global	FSVol_ReleaseUnlock
 2267              		.syntax unified
 2268              		.thumb
 2269              		.thumb_func
ARM GAS  /tmp/ccvXhXom.s 			page 109


 2270              		.fpu fpv4-sp-d16
 2272              	FSVol_ReleaseUnlock:
 2273              	.LVL207:
 2274              	.LFB19:
2144:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Unlock(p_vol);
 2275              		.loc 1 2144 1 view -0
 2276              		.cfi_startproc
 2277              		@ args = 0, pretend = 0, frame = 0
 2278              		@ frame_needed = 0, uses_anonymous_args = 0
2144:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Unlock(p_vol);
 2279              		.loc 1 2144 1 is_stmt 0 view .LVU709
 2280 0000 10B5     		push	{r4, lr}
 2281              	.LCFI43:
 2282              		.cfi_def_cfa_offset 8
 2283              		.cfi_offset 4, -8
 2284              		.cfi_offset 14, -4
 2285 0002 0446     		mov	r4, r0
2145:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Release(p_vol);
 2286              		.loc 1 2145 5 is_stmt 1 view .LVU710
 2287 0004 FFF7FEFF 		bl	FSVol_Unlock
 2288              	.LVL208:
2146:rtos/uC-FS/Source/fs_vol.c **** }
 2289              		.loc 1 2146 5 view .LVU711
 2290 0008 2046     		mov	r0, r4
 2291 000a FFF7FEFF 		bl	FSVol_Release
 2292              	.LVL209:
2147:rtos/uC-FS/Source/fs_vol.c **** 
 2293              		.loc 1 2147 1 is_stmt 0 view .LVU712
 2294 000e 10BD     		pop	{r4, pc}
2147:rtos/uC-FS/Source/fs_vol.c **** 
 2295              		.loc 1 2147 1 view .LVU713
 2296              		.cfi_endproc
 2297              	.LFE19:
 2299              		.section	.text.FSVol_RdLocked,"ax",%progbits
 2300              		.align	1
 2301              		.global	FSVol_RdLocked
 2302              		.syntax unified
 2303              		.thumb
 2304              		.thumb_func
 2305              		.fpu fpv4-sp-d16
 2307              	FSVol_RdLocked:
 2308              	.LVL210:
 2309              	.LFB24:
2425:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV      *p_dev;
 2310              		.loc 1 2425 1 is_stmt 1 view -0
 2311              		.cfi_startproc
 2312              		@ args = 4, pretend = 0, frame = 0
 2313              		@ frame_needed = 0, uses_anonymous_args = 0
2425:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV      *p_dev;
 2314              		.loc 1 2425 1 is_stmt 0 view .LVU715
 2315 0000 70B5     		push	{r4, r5, r6, lr}
 2316              	.LCFI44:
 2317              		.cfi_def_cfa_offset 16
 2318              		.cfi_offset 4, -16
 2319              		.cfi_offset 5, -12
 2320              		.cfi_offset 6, -8
 2321              		.cfi_offset 14, -4
ARM GAS  /tmp/ccvXhXom.s 			page 110


 2322 0002 82B0     		sub	sp, sp, #8
 2323              	.LCFI45:
 2324              		.cfi_def_cfa_offset 24
 2325 0004 0446     		mov	r4, r0
2426:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
 2326              		.loc 1 2426 5 is_stmt 1 view .LVU716
2428:rtos/uC-FS/Source/fs_vol.c **** #endif
 2327              		.loc 1 2428 5 view .LVU717
2433:rtos/uC-FS/Source/fs_vol.c **** 
 2328              		.loc 1 2433 5 view .LVU718
2433:rtos/uC-FS/Source/fs_vol.c **** 
 2329              		.loc 1 2433 11 is_stmt 0 view .LVU719
 2330 0006 006B     		ldr	r0, [r0, #48]
 2331              	.LVL211:
2436:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
 2332              		.loc 1 2436 5 is_stmt 1 view .LVU720
2436:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
 2333              		.loc 1 2436 11 is_stmt 0 view .LVU721
 2334 0008 656A     		ldr	r5, [r4, #36]
 2335              	.LVL212:
2437:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 2336              		.loc 1 2437 5 is_stmt 1 view .LVU722
2437:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 2337              		.loc 1 2437 15 is_stmt 0 view .LVU723
 2338 000a D618     		adds	r6, r2, r3
2437:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 2339              		.loc 1 2437 8 view .LVU724
 2340 000c AE42     		cmp	r6, r5
 2341 000e 05D9     		bls	.L203
2438:rtos/uC-FS/Source/fs_vol.c ****         return;
 2342              		.loc 1 2438 8 is_stmt 1 view .LVU725
2438:rtos/uC-FS/Source/fs_vol.c ****         return;
 2343              		.loc 1 2438 15 is_stmt 0 view .LVU726
 2344 0010 40F27E53 		movw	r3, #1406
 2345              	.LVL213:
2438:rtos/uC-FS/Source/fs_vol.c ****         return;
 2346              		.loc 1 2438 15 view .LVU727
 2347 0014 069A     		ldr	r2, [sp, #24]
 2348              	.LVL214:
2438:rtos/uC-FS/Source/fs_vol.c ****         return;
 2349              		.loc 1 2438 15 view .LVU728
 2350 0016 1380     		strh	r3, [r2]	@ movhi
2439:rtos/uC-FS/Source/fs_vol.c ****     }
 2351              		.loc 1 2439 9 is_stmt 1 view .LVU729
 2352              	.LVL215:
 2353              	.L202:
2457:rtos/uC-FS/Source/fs_vol.c **** 
 2354              		.loc 1 2457 1 is_stmt 0 view .LVU730
 2355 0018 02B0     		add	sp, sp, #8
 2356              	.LCFI46:
 2357              		.cfi_remember_state
 2358              		.cfi_def_cfa_offset 16
 2359              		@ sp needed
 2360 001a 70BD     		pop	{r4, r5, r6, pc}
 2361              	.LVL216:
 2362              	.L203:
 2363              	.LCFI47:
ARM GAS  /tmp/ccvXhXom.s 			page 111


 2364              		.cfi_restore_state
2443:rtos/uC-FS/Source/fs_vol.c **** 
 2365              		.loc 1 2443 5 is_stmt 1 view .LVU731
2443:rtos/uC-FS/Source/fs_vol.c **** 
 2366              		.loc 1 2443 19 is_stmt 0 view .LVU732
 2367 001c 246A     		ldr	r4, [r4, #32]
 2368              	.LVL217:
2447:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
 2369              		.loc 1 2447 5 is_stmt 1 view .LVU733
 2370 001e 069D     		ldr	r5, [sp, #24]
 2371              	.LVL218:
2447:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
 2372              		.loc 1 2447 5 is_stmt 0 view .LVU734
 2373 0020 0095     		str	r5, [sp]
 2374              	.LVL219:
2447:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
 2375              		.loc 1 2447 5 view .LVU735
 2376 0022 2244     		add	r2, r2, r4
 2377              	.LVL220:
2447:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
 2378              		.loc 1 2447 5 view .LVU736
 2379 0024 FFF7FEFF 		bl	FSDev_RdLocked
 2380              	.LVL221:
2456:rtos/uC-FS/Source/fs_vol.c **** }
 2381              		.loc 1 2456 54 is_stmt 1 view .LVU737
 2382 0028 F6E7     		b	.L202
 2383              		.cfi_endproc
 2384              	.LFE24:
 2386              		.section	.text.FSVol_RdLockedEx,"ax",%progbits
 2387              		.align	1
 2388              		.global	FSVol_RdLockedEx
 2389              		.syntax unified
 2390              		.thumb
 2391              		.thumb_func
 2392              		.fpu fpv4-sp-d16
 2394              	FSVol_RdLockedEx:
 2395              	.LVL222:
 2396              	.LFB25:
2501:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
 2397              		.loc 1 2501 1 view -0
 2398              		.cfi_startproc
 2399              		@ args = 8, pretend = 0, frame = 0
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
2501:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
 2401              		.loc 1 2501 1 is_stmt 0 view .LVU739
 2402 0000 70B5     		push	{r4, r5, r6, lr}
 2403              	.LCFI48:
 2404              		.cfi_def_cfa_offset 16
 2405              		.cfi_offset 4, -16
 2406              		.cfi_offset 5, -12
 2407              		.cfi_offset 6, -8
 2408              		.cfi_offset 14, -4
 2409 0002 82B0     		sub	sp, sp, #8
 2410              	.LCFI49:
 2411              		.cfi_def_cfa_offset 24
2503:rtos/uC-FS/Source/fs_vol.c **** #endif
 2412              		.loc 1 2503 5 is_stmt 1 view .LVU740
ARM GAS  /tmp/ccvXhXom.s 			page 112


2507:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ VALIDATE ARGS
 2413              		.loc 1 2507 5 view .LVU741
2510:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
 2414              		.loc 1 2510 5 view .LVU742
2510:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
 2415              		.loc 1 2510 10 is_stmt 0 view .LVU743
 2416 0004 446A     		ldr	r4, [r0, #36]
 2417              	.LVL223:
2511:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 2418              		.loc 1 2511 5 is_stmt 1 view .LVU744
2511:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 2419              		.loc 1 2511 15 is_stmt 0 view .LVU745
 2420 0006 D518     		adds	r5, r2, r3
2511:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 2421              		.loc 1 2511 8 view .LVU746
 2422 0008 A542     		cmp	r5, r4
 2423 000a 0AD8     		bhi	.L211
2518:rtos/uC-FS/Source/fs_vol.c ****     	*p_err = FS_ERR_DEV_CHNGD;                              /* cannot continue, return with error.
 2424              		.loc 1 2518 5 is_stmt 1 view .LVU747
2518:rtos/uC-FS/Source/fs_vol.c ****     	*p_err = FS_ERR_DEV_CHNGD;                              /* cannot continue, return with error.
 2425              		.loc 1 2518 14 is_stmt 0 view .LVU748
 2426 000c 8668     		ldr	r6, [r0, #8]
2518:rtos/uC-FS/Source/fs_vol.c ****     	*p_err = FS_ERR_DEV_CHNGD;                              /* cannot continue, return with error.
 2427              		.loc 1 2518 35 view .LVU749
 2428 000e 046B     		ldr	r4, [r0, #48]
 2429              	.LVL224:
2518:rtos/uC-FS/Source/fs_vol.c ****     	*p_err = FS_ERR_DEV_CHNGD;                              /* cannot continue, return with error.
 2430              		.loc 1 2518 43 view .LVU750
 2431 0010 E568     		ldr	r5, [r4, #12]
2518:rtos/uC-FS/Source/fs_vol.c ****     	*p_err = FS_ERR_DEV_CHNGD;                              /* cannot continue, return with error.
 2432              		.loc 1 2518 8 view .LVU751
 2433 0012 AE42     		cmp	r6, r5
 2434 0014 0AD0     		beq	.L209
2519:rtos/uC-FS/Source/fs_vol.c ****     	 return;
 2435              		.loc 1 2519 6 is_stmt 1 view .LVU752
2519:rtos/uC-FS/Source/fs_vol.c ****     	 return;
 2436              		.loc 1 2519 13 is_stmt 0 view .LVU753
 2437 0016 4FF49773 		mov	r3, #302
 2438              	.LVL225:
2519:rtos/uC-FS/Source/fs_vol.c ****     	 return;
 2439              		.loc 1 2519 13 view .LVU754
 2440 001a 079A     		ldr	r2, [sp, #28]
 2441              	.LVL226:
2519:rtos/uC-FS/Source/fs_vol.c ****     	 return;
 2442              		.loc 1 2519 13 view .LVU755
 2443 001c 1380     		strh	r3, [r2]	@ movhi
 2444              	.LVL227:
2520:rtos/uC-FS/Source/fs_vol.c ****     }
 2445              		.loc 1 2520 7 is_stmt 1 view .LVU756
 2446              	.L206:
2551:rtos/uC-FS/Source/fs_vol.c **** 
 2447              		.loc 1 2551 1 is_stmt 0 view .LVU757
 2448 001e 02B0     		add	sp, sp, #8
 2449              	.LCFI50:
 2450              		.cfi_remember_state
 2451              		.cfi_def_cfa_offset 16
 2452              		@ sp needed
ARM GAS  /tmp/ccvXhXom.s 			page 113


 2453 0020 70BD     		pop	{r4, r5, r6, pc}
 2454              	.LVL228:
 2455              	.L211:
 2456              	.LCFI51:
 2457              		.cfi_restore_state
2512:rtos/uC-FS/Source/fs_vol.c ****         return;
 2458              		.loc 1 2512 8 is_stmt 1 view .LVU758
2512:rtos/uC-FS/Source/fs_vol.c ****         return;
 2459              		.loc 1 2512 15 is_stmt 0 view .LVU759
 2460 0022 40F27E53 		movw	r3, #1406
 2461              	.LVL229:
2512:rtos/uC-FS/Source/fs_vol.c ****         return;
 2462              		.loc 1 2512 15 view .LVU760
 2463 0026 079A     		ldr	r2, [sp, #28]
 2464              	.LVL230:
2512:rtos/uC-FS/Source/fs_vol.c ****         return;
 2465              		.loc 1 2512 15 view .LVU761
 2466 0028 1380     		strh	r3, [r2]	@ movhi
2513:rtos/uC-FS/Source/fs_vol.c ****     }
 2467              		.loc 1 2513 9 is_stmt 1 view .LVU762
 2468 002a F8E7     		b	.L206
 2469              	.LVL231:
 2470              	.L209:
2540:rtos/uC-FS/Source/fs_vol.c ****     FSDev_RdLocked(p_vol->DevPtr,
 2471              		.loc 1 2540 5 view .LVU763
2540:rtos/uC-FS/Source/fs_vol.c ****     FSDev_RdLocked(p_vol->DevPtr,
 2472              		.loc 1 2540 19 is_stmt 0 view .LVU764
 2473 002c 006A     		ldr	r0, [r0, #32]
 2474              	.LVL232:
2541:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
 2475              		.loc 1 2541 5 is_stmt 1 view .LVU765
 2476 002e 079D     		ldr	r5, [sp, #28]
 2477 0030 0095     		str	r5, [sp]
 2478              	.LVL233:
2541:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
 2479              		.loc 1 2541 5 is_stmt 0 view .LVU766
 2480 0032 0244     		add	r2, r2, r0
 2481              	.LVL234:
2541:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
 2482              		.loc 1 2541 5 view .LVU767
 2483 0034 2046     		mov	r0, r4
 2484 0036 FFF7FEFF 		bl	FSDev_RdLocked
 2485              	.LVL235:
2550:rtos/uC-FS/Source/fs_vol.c **** }
 2486              		.loc 1 2550 54 is_stmt 1 view .LVU768
 2487 003a F0E7     		b	.L206
 2488              		.cfi_endproc
 2489              	.LFE25:
 2491              		.section	.text.FSVol_RefreshLocked,"ax",%progbits
 2492              		.align	1
 2493              		.global	FSVol_RefreshLocked
 2494              		.syntax unified
 2495              		.thumb
 2496              		.thumb_func
 2497              		.fpu fpv4-sp-d16
 2499              	FSVol_RefreshLocked:
 2500              	.LVL236:
ARM GAS  /tmp/ccvXhXom.s 			page 114


 2501              	.LFB26:
2587:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN  chngd;
 2502              		.loc 1 2587 1 view -0
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 0
 2505              		@ frame_needed = 0, uses_anonymous_args = 0
2587:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN  chngd;
 2506              		.loc 1 2587 1 is_stmt 0 view .LVU770
 2507 0000 70B5     		push	{r4, r5, r6, lr}
 2508              	.LCFI52:
 2509              		.cfi_def_cfa_offset 16
 2510              		.cfi_offset 4, -16
 2511              		.cfi_offset 5, -12
 2512              		.cfi_offset 6, -8
 2513              		.cfi_offset 14, -4
 2514 0002 0E46     		mov	r6, r1
2588:rtos/uC-FS/Source/fs_vol.c **** 
 2515              		.loc 1 2588 5 is_stmt 1 view .LVU771
2591:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2516              		.loc 1 2591 5 view .LVU772
2591:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2517              		.loc 1 2591 18 is_stmt 0 view .LVU773
 2518 0004 0388     		ldrh	r3, [r0]
2591:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2519              		.loc 1 2591 5 view .LVU774
 2520 0006 DA1E     		subs	r2, r3, #3
 2521 0008 022A     		cmp	r2, #2
 2522 000a 05D9     		bls	.L213
2603:rtos/uC-FS/Source/fs_vol.c ****              return (DEF_NO);                                   /*                 ... vol not chng
 2523              		.loc 1 2603 13 is_stmt 1 view .LVU775
2603:rtos/uC-FS/Source/fs_vol.c ****              return (DEF_NO);                                   /*                 ... vol not chng
 2524              		.loc 1 2603 20 is_stmt 0 view .LVU776
 2525 000c 40F28553 		movw	r3, #1413
 2526 0010 0B80     		strh	r3, [r1]	@ movhi
2604:rtos/uC-FS/Source/fs_vol.c ****     }
 2527              		.loc 1 2604 14 is_stmt 1 view .LVU777
2604:rtos/uC-FS/Source/fs_vol.c ****     }
 2528              		.loc 1 2604 21 is_stmt 0 view .LVU778
 2529 0012 0025     		movs	r5, #0
 2530              	.LVL237:
 2531              	.L214:
2653:rtos/uC-FS/Source/fs_vol.c **** 
 2532              		.loc 1 2653 1 view .LVU779
 2533 0014 2846     		mov	r0, r5
 2534 0016 70BD     		pop	{r4, r5, r6, pc}
 2535              	.LVL238:
 2536              	.L213:
2653:rtos/uC-FS/Source/fs_vol.c **** 
 2537              		.loc 1 2653 1 view .LVU780
 2538 0018 0446     		mov	r4, r0
2595:rtos/uC-FS/Source/fs_vol.c **** 
 2539              		.loc 1 2595 14 is_stmt 1 view .LVU781
2608:rtos/uC-FS/Source/fs_vol.c **** 
 2540              		.loc 1 2608 5 view .LVU782
 2541              	.LVL239:
2610:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->RefreshCnt == p_vol->DevPtr->RefreshCnt) {
 2542              		.loc 1 2610 5 view .LVU783
ARM GAS  /tmp/ccvXhXom.s 			page 115


2610:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->RefreshCnt == p_vol->DevPtr->RefreshCnt) {
 2543              		.loc 1 2610 8 is_stmt 0 view .LVU784
 2544 001a 052B     		cmp	r3, #5
 2545 001c 10D0     		beq	.L223
2608:rtos/uC-FS/Source/fs_vol.c **** 
 2546              		.loc 1 2608 11 view .LVU785
 2547 001e 0025     		movs	r5, #0
 2548              	.LVL240:
 2549              	.L215:
2630:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_PRESENT)) {
 2550              		.loc 1 2630 5 is_stmt 1 view .LVU786
2630:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_PRESENT)) {
 2551              		.loc 1 2630 15 is_stmt 0 view .LVU787
 2552 0020 2388     		ldrh	r3, [r4]
2630:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_PRESENT)) {
 2553              		.loc 1 2630 45 view .LVU788
 2554 0022 033B     		subs	r3, r3, #3
 2555 0024 9BB2     		uxth	r3, r3
2630:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_PRESENT)) {
 2556              		.loc 1 2630 8 view .LVU789
 2557 0026 012B     		cmp	r3, #1
 2558 0028 F4D8     		bhi	.L214
2632:rtos/uC-FS/Source/fs_vol.c ****            (void)FSDev_RefreshLocked(p_vol->DevPtr, p_err);     /*                ... refresh dev .
 2559              		.loc 1 2632 9 is_stmt 1 view .LVU790
2632:rtos/uC-FS/Source/fs_vol.c ****            (void)FSDev_RefreshLocked(p_vol->DevPtr, p_err);     /*                ... refresh dev .
 2560              		.loc 1 2632 18 is_stmt 0 view .LVU791
 2561 002a 206B     		ldr	r0, [r4, #48]
2632:rtos/uC-FS/Source/fs_vol.c ****            (void)FSDev_RefreshLocked(p_vol->DevPtr, p_err);     /*                ... refresh dev .
 2562              		.loc 1 2632 26 view .LVU792
 2563 002c 8388     		ldrh	r3, [r0, #4]
2632:rtos/uC-FS/Source/fs_vol.c ****            (void)FSDev_RefreshLocked(p_vol->DevPtr, p_err);     /*                ... refresh dev .
 2564              		.loc 1 2632 12 view .LVU793
 2565 002e 052B     		cmp	r3, #5
 2566 0030 1ED1     		bne	.L224
 2567              	.L218:
2640:rtos/uC-FS/Source/fs_vol.c ****         	*p_err = FS_ERR_DEV_CHNGD;
 2568              		.loc 1 2640 9 is_stmt 1 view .LVU794
2640:rtos/uC-FS/Source/fs_vol.c ****         	*p_err = FS_ERR_DEV_CHNGD;
 2569              		.loc 1 2640 18 is_stmt 0 view .LVU795
 2570 0032 6368     		ldr	r3, [r4, #4]
2640:rtos/uC-FS/Source/fs_vol.c ****         	*p_err = FS_ERR_DEV_CHNGD;
 2571              		.loc 1 2640 12 view .LVU796
 2572 0034 022B     		cmp	r3, #2
 2573 0036 22D9     		bls	.L219
2641:rtos/uC-FS/Source/fs_vol.c ****         	return (chngd);
 2574              		.loc 1 2641 10 is_stmt 1 view .LVU797
2641:rtos/uC-FS/Source/fs_vol.c ****         	return (chngd);
 2575              		.loc 1 2641 17 is_stmt 0 view .LVU798
 2576 0038 4FF49773 		mov	r3, #302
 2577 003c 3380     		strh	r3, [r6]	@ movhi
2642:rtos/uC-FS/Source/fs_vol.c ****         }
 2578              		.loc 1 2642 10 is_stmt 1 view .LVU799
2642:rtos/uC-FS/Source/fs_vol.c ****         }
 2579              		.loc 1 2642 17 is_stmt 0 view .LVU800
 2580 003e E9E7     		b	.L214
 2581              	.LVL241:
 2582              	.L223:
ARM GAS  /tmp/ccvXhXom.s 			page 116


2611:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_NONE;
 2583              		.loc 1 2611 9 is_stmt 1 view .LVU801
2611:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_NONE;
 2584              		.loc 1 2611 18 is_stmt 0 view .LVU802
 2585 0040 8268     		ldr	r2, [r0, #8]
2611:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_NONE;
 2586              		.loc 1 2611 39 view .LVU803
 2587 0042 036B     		ldr	r3, [r0, #48]
2611:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_NONE;
 2588              		.loc 1 2611 47 view .LVU804
 2589 0044 DB68     		ldr	r3, [r3, #12]
2611:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_NONE;
 2590              		.loc 1 2611 12 view .LVU805
 2591 0046 9A42     		cmp	r2, r3
 2592 0048 09D0     		beq	.L225
2616:rtos/uC-FS/Source/fs_vol.c ****         	if (p_vol->RefCnt > 2u) {                           /*      ... check if files are open on
 2593              		.loc 1 2616 9 is_stmt 1 view .LVU806
2617:rtos/uC-FS/Source/fs_vol.c ****         		p_vol->State = FS_VOL_STATE_OPEN;               /*      ... if yes, cannot close...      
 2594              		.loc 1 2617 10 view .LVU807
2617:rtos/uC-FS/Source/fs_vol.c ****         		p_vol->State = FS_VOL_STATE_OPEN;               /*      ... if yes, cannot close...      
 2595              		.loc 1 2617 19 is_stmt 0 view .LVU808
 2596 004a 4368     		ldr	r3, [r0, #4]
2617:rtos/uC-FS/Source/fs_vol.c ****         		p_vol->State = FS_VOL_STATE_OPEN;               /*      ... if yes, cannot close...      
 2597              		.loc 1 2617 13 view .LVU809
 2598 004c 022B     		cmp	r3, #2
 2599 004e 09D9     		bls	.L217
2618:rtos/uC-FS/Source/fs_vol.c ****         	   *p_err = FS_ERR_DEV_CHNGD;
 2600              		.loc 1 2618 11 is_stmt 1 view .LVU810
2618:rtos/uC-FS/Source/fs_vol.c ****         	   *p_err = FS_ERR_DEV_CHNGD;
 2601              		.loc 1 2618 24 is_stmt 0 view .LVU811
 2602 0050 0323     		movs	r3, #3
 2603 0052 0380     		strh	r3, [r0]	@ movhi
2619:rtos/uC-FS/Source/fs_vol.c ****         		chngd  = DEF_YES;
 2604              		.loc 1 2619 13 is_stmt 1 view .LVU812
2619:rtos/uC-FS/Source/fs_vol.c ****         		chngd  = DEF_YES;
 2605              		.loc 1 2619 20 is_stmt 0 view .LVU813
 2606 0054 4FF49773 		mov	r3, #302
 2607 0058 0B80     		strh	r3, [r1]	@ movhi
2620:rtos/uC-FS/Source/fs_vol.c ****         		return (chngd);
 2608              		.loc 1 2620 11 is_stmt 1 view .LVU814
 2609              	.LVL242:
2621:rtos/uC-FS/Source/fs_vol.c ****         	} else {
 2610              		.loc 1 2621 11 view .LVU815
2621:rtos/uC-FS/Source/fs_vol.c ****         	} else {
 2611              		.loc 1 2621 18 is_stmt 0 view .LVU816
 2612 005a 0125     		movs	r5, #1
 2613 005c DAE7     		b	.L214
 2614              	.LVL243:
 2615              	.L225:
2612:rtos/uC-FS/Source/fs_vol.c ****             return (DEF_NO);
 2616              		.loc 1 2612 12 is_stmt 1 view .LVU817
2612:rtos/uC-FS/Source/fs_vol.c ****             return (DEF_NO);
 2617              		.loc 1 2612 19 is_stmt 0 view .LVU818
 2618 005e 0025     		movs	r5, #0
 2619 0060 0D80     		strh	r5, [r1]	@ movhi
2613:rtos/uC-FS/Source/fs_vol.c ****         }
 2620              		.loc 1 2613 13 is_stmt 1 view .LVU819
ARM GAS  /tmp/ccvXhXom.s 			page 117


2613:rtos/uC-FS/Source/fs_vol.c ****         }
 2621              		.loc 1 2613 20 is_stmt 0 view .LVU820
 2622 0062 D7E7     		b	.L214
 2623              	.L217:
2623:rtos/uC-FS/Source/fs_vol.c ****                 p_vol->State = FS_VOL_STATE_OPEN;
 2624              		.loc 1 2623 11 is_stmt 1 view .LVU821
 2625 0064 FFF7FEFF 		bl	FSSys_VolClose
 2626              	.LVL244:
2624:rtos/uC-FS/Source/fs_vol.c ****                 chngd        = DEF_YES;
 2627              		.loc 1 2624 17 view .LVU822
2624:rtos/uC-FS/Source/fs_vol.c ****                 chngd        = DEF_YES;
 2628              		.loc 1 2624 30 is_stmt 0 view .LVU823
 2629 0068 0323     		movs	r3, #3
 2630 006a 2380     		strh	r3, [r4]	@ movhi
2625:rtos/uC-FS/Source/fs_vol.c ****         	}
 2631              		.loc 1 2625 17 is_stmt 1 view .LVU824
 2632              	.LVL245:
2625:rtos/uC-FS/Source/fs_vol.c ****         	}
 2633              		.loc 1 2625 30 is_stmt 0 view .LVU825
 2634 006c 0125     		movs	r5, #1
 2635 006e D7E7     		b	.L215
 2636              	.LVL246:
 2637              	.L224:
2633:rtos/uC-FS/Source/fs_vol.c **** 
 2638              		.loc 1 2633 12 is_stmt 1 view .LVU826
2633:rtos/uC-FS/Source/fs_vol.c **** 
 2639              		.loc 1 2633 18 is_stmt 0 view .LVU827
 2640 0070 3146     		mov	r1, r6
 2641 0072 FFF7FEFF 		bl	FSDev_RefreshLocked
 2642              	.LVL247:
2635:rtos/uC-FS/Source/fs_vol.c ****                 return (chngd);
 2643              		.loc 1 2635 13 is_stmt 1 view .LVU828
2635:rtos/uC-FS/Source/fs_vol.c ****                 return (chngd);
 2644              		.loc 1 2635 17 is_stmt 0 view .LVU829
 2645 0076 3388     		ldrh	r3, [r6]
2635:rtos/uC-FS/Source/fs_vol.c ****                 return (chngd);
 2646              		.loc 1 2635 16 view .LVU830
 2647 0078 002B     		cmp	r3, #0
 2648 007a DAD0     		beq	.L218
 2649 007c CAE7     		b	.L214
 2650              	.L219:
2645:rtos/uC-FS/Source/fs_vol.c **** 
 2651              		.loc 1 2645 9 is_stmt 1 view .LVU831
 2652 007e 3146     		mov	r1, r6
 2653 0080 2046     		mov	r0, r4
 2654 0082 FFF7FEFF 		bl	FSVol_OpenLocked
 2655              	.LVL248:
2647:rtos/uC-FS/Source/fs_vol.c ****             chngd = DEF_YES;
 2656              		.loc 1 2647 9 view .LVU832
2647:rtos/uC-FS/Source/fs_vol.c ****             chngd = DEF_YES;
 2657              		.loc 1 2647 13 is_stmt 0 view .LVU833
 2658 0086 3388     		ldrh	r3, [r6]
2647:rtos/uC-FS/Source/fs_vol.c ****             chngd = DEF_YES;
 2659              		.loc 1 2647 12 view .LVU834
 2660 0088 002B     		cmp	r3, #0
 2661 008a C3D1     		bne	.L214
2648:rtos/uC-FS/Source/fs_vol.c ****         }
ARM GAS  /tmp/ccvXhXom.s 			page 118


 2662              		.loc 1 2648 19 view .LVU835
 2663 008c 0125     		movs	r5, #1
 2664              	.LVL249:
2648:rtos/uC-FS/Source/fs_vol.c ****         }
 2665              		.loc 1 2648 19 view .LVU836
 2666 008e C1E7     		b	.L214
 2667              		.cfi_endproc
 2668              	.LFE26:
 2670              		.section	.text.FSVol_Refresh,"ax",%progbits
 2671              		.align	1
 2672              		.global	FSVol_Refresh
 2673              		.syntax unified
 2674              		.thumb
 2675              		.thumb_func
 2676              		.fpu fpv4-sp-d16
 2678              	FSVol_Refresh:
 2679              	.LVL250:
 2680              	.LFB8:
1391:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
 2681              		.loc 1 1391 1 is_stmt 1 view -0
 2682              		.cfi_startproc
 2683              		@ args = 0, pretend = 0, frame = 0
 2684              		@ frame_needed = 0, uses_anonymous_args = 0
1391:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
 2685              		.loc 1 1391 1 is_stmt 0 view .LVU838
 2686 0000 70B5     		push	{r4, r5, r6, lr}
 2687              	.LCFI53:
 2688              		.cfi_def_cfa_offset 16
 2689              		.cfi_offset 4, -16
 2690              		.cfi_offset 5, -12
 2691              		.cfi_offset 6, -8
 2692              		.cfi_offset 14, -4
 2693 0002 0446     		mov	r4, r0
1392:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN   chngd;
 2694              		.loc 1 1392 5 is_stmt 1 view .LVU839
1393:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN   vol_lock_ok;
 2695              		.loc 1 1393 5 view .LVU840
1394:rtos/uC-FS/Source/fs_vol.c **** 
 2696              		.loc 1 1394 5 view .LVU841
1398:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(DEF_NO);
 2697              		.loc 1 1398 5 view .LVU842
1398:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(DEF_NO);
 2698              		.loc 1 1398 8 is_stmt 0 view .LVU843
 2699 0004 0D46     		mov	r5, r1
 2700 0006 B1B1     		cbz	r1, .L235
 2701              	.LVL251:
 2702              	.L227:
1399:rtos/uC-FS/Source/fs_vol.c ****     }
 2703              		.loc 1 1399 9 is_stmt 1 discriminator 1 view .LVU844
1401:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 2704              		.loc 1 1401 5 discriminator 1 view .LVU845
1401:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 2705              		.loc 1 1401 8 is_stmt 0 discriminator 1 view .LVU846
 2706 0008 C4B1     		cbz	r4, .L236
1410:rtos/uC-FS/Source/fs_vol.c **** 
 2707              		.loc 1 1410 5 is_stmt 1 view .LVU847
1410:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 119


 2708              		.loc 1 1410 13 is_stmt 0 view .LVU848
 2709 000a 2946     		mov	r1, r5
 2710 000c 2046     		mov	r0, r4
 2711 000e FFF7FEFF 		bl	FSVol_Acquire
 2712              	.LVL252:
1412:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NOT_OPEN;
 2713              		.loc 1 1412 5 is_stmt 1 view .LVU849
1412:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NOT_OPEN;
 2714              		.loc 1 1412 8 is_stmt 0 view .LVU850
 2715 0012 0646     		mov	r6, r0
 2716 0014 B8B1     		cbz	r0, .L237
1417:rtos/uC-FS/Source/fs_vol.c ****     if (vol_lock_ok == DEF_NO) {
 2717              		.loc 1 1417 5 is_stmt 1 view .LVU851
1417:rtos/uC-FS/Source/fs_vol.c ****     if (vol_lock_ok == DEF_NO) {
 2718              		.loc 1 1417 19 is_stmt 0 view .LVU852
 2719 0016 FFF7FEFF 		bl	FSVol_Lock
 2720              	.LVL253:
1418:rtos/uC-FS/Source/fs_vol.c ****         FSVol_Release(p_vol);
 2721              		.loc 1 1418 5 is_stmt 1 view .LVU853
1418:rtos/uC-FS/Source/fs_vol.c ****         FSVol_Release(p_vol);
 2722              		.loc 1 1418 8 is_stmt 0 view .LVU854
 2723 001a 0446     		mov	r4, r0
 2724              	.LVL254:
1418:rtos/uC-FS/Source/fs_vol.c ****         FSVol_Release(p_vol);
 2725              		.loc 1 1418 8 view .LVU855
 2726 001c C0B1     		cbz	r0, .L238
1426:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2727              		.loc 1 1426 5 is_stmt 1 view .LVU856
1426:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2728              		.loc 1 1426 18 is_stmt 0 view .LVU857
 2729 001e 3388     		ldrh	r3, [r6]
1426:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2730              		.loc 1 1426 5 view .LVU858
 2731 0020 033B     		subs	r3, r3, #3
 2732 0022 022B     		cmp	r3, #2
 2733 0024 1BD9     		bls	.L232
1437:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_VOL_NOT_OPEN;
 2734              		.loc 1 1437 14 is_stmt 1 view .LVU859
 2735 0026 3046     		mov	r0, r6
 2736              	.LVL255:
1437:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_VOL_NOT_OPEN;
 2737              		.loc 1 1437 14 is_stmt 0 view .LVU860
 2738 0028 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 2739              	.LVL256:
1438:rtos/uC-FS/Source/fs_vol.c ****              return (DEF_NO);
 2740              		.loc 1 1438 13 is_stmt 1 view .LVU861
1438:rtos/uC-FS/Source/fs_vol.c ****              return (DEF_NO);
 2741              		.loc 1 1438 20 is_stmt 0 view .LVU862
 2742 002c 40F28553 		movw	r3, #1413
 2743 0030 2B80     		strh	r3, [r5]	@ movhi
1439:rtos/uC-FS/Source/fs_vol.c ****     }
 2744              		.loc 1 1439 14 is_stmt 1 view .LVU863
1439:rtos/uC-FS/Source/fs_vol.c ****     }
 2745              		.loc 1 1439 21 is_stmt 0 view .LVU864
 2746 0032 0024     		movs	r4, #0
 2747 0034 05E0     		b	.L229
 2748              	.LVL257:
ARM GAS  /tmp/ccvXhXom.s 			page 120


 2749              	.L235:
1399:rtos/uC-FS/Source/fs_vol.c ****     }
 2750              		.loc 1 1399 9 is_stmt 1 view .LVU865
1399:rtos/uC-FS/Source/fs_vol.c ****     }
 2751              		.loc 1 1399 9 view .LVU866
 2752 0036 FFF7FEFF 		bl	CPU_SW_Exception
 2753              	.LVL258:
1399:rtos/uC-FS/Source/fs_vol.c ****     }
 2754              		.loc 1 1399 9 is_stmt 0 view .LVU867
 2755 003a E5E7     		b	.L227
 2756              	.L236:
1402:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 2757              		.loc 1 1402 8 is_stmt 1 view .LVU868
1402:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 2758              		.loc 1 1402 15 is_stmt 0 view .LVU869
 2759 003c 40F28933 		movw	r3, #905
 2760 0040 2B80     		strh	r3, [r5]	@ movhi
1403:rtos/uC-FS/Source/fs_vol.c ****     }
 2761              		.loc 1 1403 9 is_stmt 1 view .LVU870
 2762              	.LVL259:
 2763              	.L229:
1459:rtos/uC-FS/Source/fs_vol.c **** 
 2764              		.loc 1 1459 1 is_stmt 0 view .LVU871
 2765 0042 2046     		mov	r0, r4
 2766 0044 70BD     		pop	{r4, r5, r6, pc}
 2767              	.LVL260:
 2768              	.L237:
1413:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 2769              		.loc 1 1413 8 is_stmt 1 view .LVU872
1413:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 2770              		.loc 1 1413 15 is_stmt 0 view .LVU873
 2771 0046 40F28553 		movw	r3, #1413
 2772 004a 2B80     		strh	r3, [r5]	@ movhi
1414:rtos/uC-FS/Source/fs_vol.c ****     }
 2773              		.loc 1 1414 9 is_stmt 1 view .LVU874
1414:rtos/uC-FS/Source/fs_vol.c ****     }
 2774              		.loc 1 1414 16 is_stmt 0 view .LVU875
 2775 004c 0024     		movs	r4, #0
 2776              	.LVL261:
1414:rtos/uC-FS/Source/fs_vol.c ****     }
 2777              		.loc 1 1414 16 view .LVU876
 2778 004e F8E7     		b	.L229
 2779              	.LVL262:
 2780              	.L238:
1419:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 2781              		.loc 1 1419 9 is_stmt 1 view .LVU877
 2782 0050 3046     		mov	r0, r6
 2783              	.LVL263:
1419:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 2784              		.loc 1 1419 9 is_stmt 0 view .LVU878
 2785 0052 FFF7FEFF 		bl	FSVol_Release
 2786              	.LVL264:
1420:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 2787              		.loc 1 1420 8 is_stmt 1 view .LVU879
1420:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 2788              		.loc 1 1420 15 is_stmt 0 view .LVU880
 2789 0056 40F2DD53 		movw	r3, #1501
ARM GAS  /tmp/ccvXhXom.s 			page 121


 2790 005a 2B80     		strh	r3, [r5]	@ movhi
1421:rtos/uC-FS/Source/fs_vol.c ****     }
 2791              		.loc 1 1421 9 is_stmt 1 view .LVU881
1421:rtos/uC-FS/Source/fs_vol.c ****     }
 2792              		.loc 1 1421 16 is_stmt 0 view .LVU882
 2793 005c F1E7     		b	.L229
 2794              	.LVL265:
 2795              	.L232:
1430:rtos/uC-FS/Source/fs_vol.c **** 
 2796              		.loc 1 1430 14 is_stmt 1 view .LVU883
1445:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 2797              		.loc 1 1445 4 view .LVU884
1445:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 2798              		.loc 1 1445 10 is_stmt 0 view .LVU885
 2799 005e 2946     		mov	r1, r5
 2800 0060 306B     		ldr	r0, [r6, #48]
 2801              	.LVL266:
1445:rtos/uC-FS/Source/fs_vol.c ****     if (*p_err != FS_ERR_NONE) {
 2802              		.loc 1 1445 10 view .LVU886
 2803 0062 FFF7FEFF 		bl	FSDev_RefreshLocked
 2804              	.LVL267:
1446:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 2805              		.loc 1 1446 5 is_stmt 1 view .LVU887
1446:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 2806              		.loc 1 1446 9 is_stmt 0 view .LVU888
 2807 0066 2B88     		ldrh	r3, [r5]
1446:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 2808              		.loc 1 1446 8 view .LVU889
 2809 0068 43B9     		cbnz	r3, .L239
1451:rtos/uC-FS/Source/fs_vol.c **** 
 2810              		.loc 1 1451 5 is_stmt 1 view .LVU890
1451:rtos/uC-FS/Source/fs_vol.c **** 
 2811              		.loc 1 1451 13 is_stmt 0 view .LVU891
 2812 006a 2946     		mov	r1, r5
 2813 006c 3046     		mov	r0, r6
 2814 006e FFF7FEFF 		bl	FSVol_RefreshLocked
 2815              	.LVL268:
 2816 0072 0446     		mov	r4, r0
 2817              	.LVL269:
1456:rtos/uC-FS/Source/fs_vol.c **** 
 2818              		.loc 1 1456 5 is_stmt 1 view .LVU892
 2819 0074 3046     		mov	r0, r6
 2820 0076 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 2821              	.LVL270:
1458:rtos/uC-FS/Source/fs_vol.c **** }
 2822              		.loc 1 1458 5 view .LVU893
1458:rtos/uC-FS/Source/fs_vol.c **** }
 2823              		.loc 1 1458 12 is_stmt 0 view .LVU894
 2824 007a E2E7     		b	.L229
 2825              	.LVL271:
 2826              	.L239:
1447:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 2827              		.loc 1 1447 9 is_stmt 1 view .LVU895
 2828 007c 3046     		mov	r0, r6
 2829 007e FFF7FEFF 		bl	FSVol_ReleaseUnlock
 2830              	.LVL272:
1448:rtos/uC-FS/Source/fs_vol.c ****     }
ARM GAS  /tmp/ccvXhXom.s 			page 122


 2831              		.loc 1 1448 9 view .LVU896
1448:rtos/uC-FS/Source/fs_vol.c ****     }
 2832              		.loc 1 1448 16 is_stmt 0 view .LVU897
 2833 0082 0024     		movs	r4, #0
 2834 0084 DDE7     		b	.L229
 2835              		.cfi_endproc
 2836              	.LFE8:
 2838              		.section	.text.FSVol_AcquireLockChk,"ax",%progbits
 2839              		.align	1
 2840              		.global	FSVol_AcquireLockChk
 2841              		.syntax unified
 2842              		.thumb
 2843              		.thumb_func
 2844              		.fpu fpv4-sp-d16
 2846              	FSVol_AcquireLockChk:
 2847              	.LVL273:
 2848              	.LFB16:
1957:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL      *p_vol;
 2849              		.loc 1 1957 1 is_stmt 1 view -0
 2850              		.cfi_startproc
 2851              		@ args = 0, pretend = 0, frame = 0
 2852              		@ frame_needed = 0, uses_anonymous_args = 0
1957:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL      *p_vol;
 2853              		.loc 1 1957 1 is_stmt 0 view .LVU899
 2854 0000 70B5     		push	{r4, r5, r6, lr}
 2855              	.LCFI54:
 2856              		.cfi_def_cfa_offset 16
 2857              		.cfi_offset 4, -16
 2858              		.cfi_offset 5, -12
 2859              		.cfi_offset 6, -8
 2860              		.cfi_offset 14, -4
 2861 0002 0446     		mov	r4, r0
 2862 0004 0D46     		mov	r5, r1
1958:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN  vol_lock_ok;
 2863              		.loc 1 1958 5 is_stmt 1 view .LVU900
1959:rtos/uC-FS/Source/fs_vol.c **** 
 2864              		.loc 1 1959 5 view .LVU901
1963:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION((FS_VOL *)0);
 2865              		.loc 1 1963 5 view .LVU902
1963:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION((FS_VOL *)0);
 2866              		.loc 1 1963 8 is_stmt 0 view .LVU903
 2867 0006 1646     		mov	r6, r2
 2868 0008 A2B1     		cbz	r2, .L251
 2869              	.LVL274:
 2870              	.L241:
1964:rtos/uC-FS/Source/fs_vol.c ****     }
 2871              		.loc 1 1964 9 is_stmt 1 discriminator 1 view .LVU904
1966:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 2872              		.loc 1 1966 5 discriminator 1 view .LVU905
1966:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 2873              		.loc 1 1966 8 is_stmt 0 discriminator 1 view .LVU906
 2874 000a B4B1     		cbz	r4, .L252
1973:rtos/uC-FS/Source/fs_vol.c **** 
 2875              		.loc 1 1973 5 is_stmt 1 view .LVU907
1973:rtos/uC-FS/Source/fs_vol.c **** 
 2876              		.loc 1 1973 13 is_stmt 0 view .LVU908
 2877 000c 3146     		mov	r1, r6
ARM GAS  /tmp/ccvXhXom.s 			page 123


 2878 000e 2046     		mov	r0, r4
 2879 0010 FFF7FEFF 		bl	FSVol_Acquire
 2880              	.LVL275:
1975:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NOT_OPEN;
 2881              		.loc 1 1975 5 is_stmt 1 view .LVU909
1975:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NOT_OPEN;
 2882              		.loc 1 1975 8 is_stmt 0 view .LVU910
 2883 0014 0446     		mov	r4, r0
 2884              	.LVL276:
1975:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_NOT_OPEN;
 2885              		.loc 1 1975 8 view .LVU911
 2886 0016 A0B1     		cbz	r0, .L253
1980:rtos/uC-FS/Source/fs_vol.c ****     if (vol_lock_ok == DEF_NO) {
 2887              		.loc 1 1980 5 is_stmt 1 view .LVU912
1980:rtos/uC-FS/Source/fs_vol.c ****     if (vol_lock_ok == DEF_NO) {
 2888              		.loc 1 1980 19 is_stmt 0 view .LVU913
 2889 0018 FFF7FEFF 		bl	FSVol_Lock
 2890              	.LVL277:
1981:rtos/uC-FS/Source/fs_vol.c ****         FSVol_Release(p_vol);
 2891              		.loc 1 1981 5 is_stmt 1 view .LVU914
1981:rtos/uC-FS/Source/fs_vol.c ****         FSVol_Release(p_vol);
 2892              		.loc 1 1981 8 is_stmt 0 view .LVU915
 2893 001c A8B1     		cbz	r0, .L254
1988:rtos/uC-FS/Source/fs_vol.c **** 
 2894              		.loc 1 1988 5 is_stmt 1 view .LVU916
1988:rtos/uC-FS/Source/fs_vol.c **** 
 2895              		.loc 1 1988 11 is_stmt 0 view .LVU917
 2896 001e 3146     		mov	r1, r6
 2897 0020 2046     		mov	r0, r4
 2898              	.LVL278:
1988:rtos/uC-FS/Source/fs_vol.c **** 
 2899              		.loc 1 1988 11 view .LVU918
 2900 0022 FFF7FEFF 		bl	FSVol_RefreshLocked
 2901              	.LVL279:
1990:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2902              		.loc 1 1990 5 is_stmt 1 view .LVU919
1990:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2903              		.loc 1 1990 18 is_stmt 0 view .LVU920
 2904 0026 2388     		ldrh	r3, [r4]
1990:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2905              		.loc 1 1990 5 view .LVU921
 2906 0028 042B     		cmp	r3, #4
 2907 002a 16D9     		bls	.L255
 2908 002c 052B     		cmp	r3, #5
 2909 002e 16D1     		bne	.L248
 2910              	.LVL280:
 2911              	.L240:
2017:rtos/uC-FS/Source/fs_vol.c **** 
 2912              		.loc 1 2017 1 view .LVU922
 2913 0030 2046     		mov	r0, r4
 2914 0032 70BD     		pop	{r4, r5, r6, pc}
 2915              	.LVL281:
 2916              	.L251:
1964:rtos/uC-FS/Source/fs_vol.c ****     }
 2917              		.loc 1 1964 9 is_stmt 1 view .LVU923
1964:rtos/uC-FS/Source/fs_vol.c ****     }
 2918              		.loc 1 1964 9 view .LVU924
ARM GAS  /tmp/ccvXhXom.s 			page 124


 2919 0034 FFF7FEFF 		bl	CPU_SW_Exception
 2920              	.LVL282:
1964:rtos/uC-FS/Source/fs_vol.c ****     }
 2921              		.loc 1 1964 9 is_stmt 0 view .LVU925
 2922 0038 E7E7     		b	.L241
 2923              	.L252:
1967:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 2924              		.loc 1 1967 8 is_stmt 1 view .LVU926
1967:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 2925              		.loc 1 1967 15 is_stmt 0 view .LVU927
 2926 003a 40F28933 		movw	r3, #905
 2927 003e 3380     		strh	r3, [r6]	@ movhi
1968:rtos/uC-FS/Source/fs_vol.c ****     }
 2928              		.loc 1 1968 9 is_stmt 1 view .LVU928
1968:rtos/uC-FS/Source/fs_vol.c ****     }
 2929              		.loc 1 1968 16 is_stmt 0 view .LVU929
 2930 0040 F6E7     		b	.L240
 2931              	.LVL283:
 2932              	.L253:
1976:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 2933              		.loc 1 1976 8 is_stmt 1 view .LVU930
1976:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 2934              		.loc 1 1976 15 is_stmt 0 view .LVU931
 2935 0042 40F28553 		movw	r3, #1413
 2936 0046 3380     		strh	r3, [r6]	@ movhi
1977:rtos/uC-FS/Source/fs_vol.c ****     }
 2937              		.loc 1 1977 9 is_stmt 1 view .LVU932
1977:rtos/uC-FS/Source/fs_vol.c ****     }
 2938              		.loc 1 1977 16 is_stmt 0 view .LVU933
 2939 0048 F2E7     		b	.L240
 2940              	.LVL284:
 2941              	.L254:
1982:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 2942              		.loc 1 1982 9 is_stmt 1 view .LVU934
 2943 004a 2046     		mov	r0, r4
 2944              	.LVL285:
1982:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_OS_LOCK;
 2945              		.loc 1 1982 9 is_stmt 0 view .LVU935
 2946 004c FFF7FEFF 		bl	FSVol_Release
 2947              	.LVL286:
1983:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 2948              		.loc 1 1983 8 is_stmt 1 view .LVU936
1983:rtos/uC-FS/Source/fs_vol.c ****         return ((FS_VOL *)0);
 2949              		.loc 1 1983 15 is_stmt 0 view .LVU937
 2950 0050 40F2DD53 		movw	r3, #1501
 2951 0054 3380     		strh	r3, [r6]	@ movhi
1984:rtos/uC-FS/Source/fs_vol.c ****     }
 2952              		.loc 1 1984 9 is_stmt 1 view .LVU938
1984:rtos/uC-FS/Source/fs_vol.c ****     }
 2953              		.loc 1 1984 16 is_stmt 0 view .LVU939
 2954 0056 0024     		movs	r4, #0
 2955              	.LVL287:
1984:rtos/uC-FS/Source/fs_vol.c ****     }
 2956              		.loc 1 1984 16 view .LVU940
 2957 0058 EAE7     		b	.L240
 2958              	.LVL288:
 2959              	.L255:
ARM GAS  /tmp/ccvXhXom.s 			page 125


1990:rtos/uC-FS/Source/fs_vol.c ****         case FS_VOL_STATE_OPEN:
 2960              		.loc 1 1990 5 view .LVU941
 2961 005a 032B     		cmp	r3, #3
 2962 005c 04D2     		bcs	.L256
 2963              	.L248:
2009:rtos/uC-FS/Source/fs_vol.c ****              return ((FS_VOL *)0);
 2964              		.loc 1 2009 14 is_stmt 1 view .LVU942
 2965 005e 2046     		mov	r0, r4
 2966 0060 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 2967              	.LVL289:
2010:rtos/uC-FS/Source/fs_vol.c ****     }
 2968              		.loc 1 2010 14 view .LVU943
2010:rtos/uC-FS/Source/fs_vol.c ****     }
 2969              		.loc 1 2010 21 is_stmt 0 view .LVU944
 2970 0064 0024     		movs	r4, #0
 2971              	.LVL290:
2010:rtos/uC-FS/Source/fs_vol.c ****     }
 2972              		.loc 1 2010 21 view .LVU945
 2973 0066 E3E7     		b	.L240
 2974              	.LVL291:
 2975              	.L256:
1993:rtos/uC-FS/Source/fs_vol.c ****                  FSVol_ReleaseUnlock(p_vol);
 2976              		.loc 1 1993 14 is_stmt 1 view .LVU946
1993:rtos/uC-FS/Source/fs_vol.c ****                  FSVol_ReleaseUnlock(p_vol);
 2977              		.loc 1 1993 17 is_stmt 0 view .LVU947
 2978 0068 012D     		cmp	r5, #1
 2979 006a 02D0     		beq	.L257
1997:rtos/uC-FS/Source/fs_vol.c ****              break;
 2980              		.loc 1 1997 13 is_stmt 1 view .LVU948
1997:rtos/uC-FS/Source/fs_vol.c ****              break;
 2981              		.loc 1 1997 20 is_stmt 0 view .LVU949
 2982 006c 0023     		movs	r3, #0
 2983 006e 3380     		strh	r3, [r6]	@ movhi
1998:rtos/uC-FS/Source/fs_vol.c **** 
 2984              		.loc 1 1998 14 is_stmt 1 view .LVU950
 2985 0070 DEE7     		b	.L240
 2986              	.L257:
1994:rtos/uC-FS/Source/fs_vol.c ****                  return ((FS_VOL *)0);
 2987              		.loc 1 1994 18 view .LVU951
 2988 0072 2046     		mov	r0, r4
 2989 0074 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 2990              	.LVL292:
1995:rtos/uC-FS/Source/fs_vol.c ****              }
 2991              		.loc 1 1995 18 view .LVU952
1995:rtos/uC-FS/Source/fs_vol.c ****              }
 2992              		.loc 1 1995 25 is_stmt 0 view .LVU953
 2993 0078 0024     		movs	r4, #0
 2994              	.LVL293:
1995:rtos/uC-FS/Source/fs_vol.c ****              }
 2995              		.loc 1 1995 25 view .LVU954
 2996 007a D9E7     		b	.L240
 2997              		.cfi_endproc
 2998              	.LFE16:
 3000              		.section	.text.FSVol_Close,"ax",%progbits
 3001              		.align	1
 3002              		.global	FSVol_Close
 3003              		.syntax unified
ARM GAS  /tmp/ccvXhXom.s 			page 126


 3004              		.thumb
 3005              		.thumb_func
 3006              		.fpu fpv4-sp-d16
 3008              	FSVol_Close:
 3009              	.LVL294:
 3010              	.LFB0:
 407:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 3011              		.loc 1 407 1 is_stmt 1 view -0
 3012              		.cfi_startproc
 3013              		@ args = 0, pretend = 0, frame = 0
 3014              		@ frame_needed = 0, uses_anonymous_args = 0
 407:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 3015              		.loc 1 407 1 is_stmt 0 view .LVU956
 3016 0000 38B5     		push	{r3, r4, r5, lr}
 3017              	.LCFI55:
 3018              		.cfi_def_cfa_offset 16
 3019              		.cfi_offset 3, -16
 3020              		.cfi_offset 4, -12
 3021              		.cfi_offset 5, -8
 3022              		.cfi_offset 14, -4
 3023 0002 0446     		mov	r4, r0
 408:rtos/uC-FS/Source/fs_vol.c **** 
 3024              		.loc 1 408 5 is_stmt 1 view .LVU957
 412:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3025              		.loc 1 412 5 view .LVU958
 412:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3026              		.loc 1 412 8 is_stmt 0 view .LVU959
 3027 0004 0D46     		mov	r5, r1
 3028 0006 E1B1     		cbz	r1, .L268
 3029              	.LVL295:
 3030              	.L259:
 413:rtos/uC-FS/Source/fs_vol.c ****     }
 3031              		.loc 1 413 9 is_stmt 1 discriminator 1 view .LVU960
 415:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 3032              		.loc 1 415 5 discriminator 1 view .LVU961
 415:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 3033              		.loc 1 415 8 is_stmt 0 discriminator 1 view .LVU962
 3034 0008 F4B1     		cbz	r4, .L269
 423:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 3035              		.loc 1 423 5 is_stmt 1 view .LVU963
 423:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 3036              		.loc 1 423 13 is_stmt 0 view .LVU964
 3037 000a 2A46     		mov	r2, r5
 3038 000c 0021     		movs	r1, #0
 3039 000e 2046     		mov	r0, r4
 3040 0010 FFF7FEFF 		bl	FSVol_AcquireLockChk
 3041              	.LVL296:
 424:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == DEF_NULL) {
 3042              		.loc 1 424 5 is_stmt 1 view .LVU965
 425:rtos/uC-FS/Source/fs_vol.c ****         return;
 3043              		.loc 1 425 5 view .LVU966
 425:rtos/uC-FS/Source/fs_vol.c ****         return;
 3044              		.loc 1 425 8 is_stmt 0 view .LVU967
 3045 0014 0446     		mov	r4, r0
 3046              	.LVL297:
 425:rtos/uC-FS/Source/fs_vol.c ****         return;
 3047              		.loc 1 425 8 view .LVU968
ARM GAS  /tmp/ccvXhXom.s 			page 127


 3048 0016 98B1     		cbz	r0, .L258
 430:rtos/uC-FS/Source/fs_vol.c **** 
 3049              		.loc 1 430 5 is_stmt 1 view .LVU969
 430:rtos/uC-FS/Source/fs_vol.c **** 
 3050              		.loc 1 430 14 is_stmt 0 view .LVU970
 3051 0018 4368     		ldr	r3, [r0, #4]
 430:rtos/uC-FS/Source/fs_vol.c **** 
 3052              		.loc 1 430 8 view .LVU971
 3053 001a 022B     		cmp	r3, #2
 3054 001c 18D8     		bhi	.L270
 451:rtos/uC-FS/Source/fs_vol.c ****         FSSys_VolClose(p_vol);                                  /* Close vol.                      
 3055              		.loc 1 451 5 is_stmt 1 view .LVU972
 451:rtos/uC-FS/Source/fs_vol.c ****         FSSys_VolClose(p_vol);                                  /* Close vol.                      
 3056              		.loc 1 451 14 is_stmt 0 view .LVU973
 3057 001e 0388     		ldrh	r3, [r0]
 451:rtos/uC-FS/Source/fs_vol.c ****         FSSys_VolClose(p_vol);                                  /* Close vol.                      
 3058              		.loc 1 451 8 view .LVU974
 3059 0020 052B     		cmp	r3, #5
 3060 0022 27D0     		beq	.L271
 3061              	.LVL298:
 3062              	.L266:
 455:rtos/uC-FS/Source/fs_vol.c ****     p_vol->State = FS_VOL_STATE_CLOSING;
 3063              		.loc 1 455 5 is_stmt 1 view .LVU975
 3064 0024 2146     		mov	r1, r4
 3065 0026 206B     		ldr	r0, [r4, #48]
 3066 0028 FFF7FEFF 		bl	FSDev_VolRemove
 3067              	.LVL299:
 456:rtos/uC-FS/Source/fs_vol.c **** 
 3068              		.loc 1 456 5 view .LVU976
 456:rtos/uC-FS/Source/fs_vol.c **** 
 3069              		.loc 1 456 18 is_stmt 0 view .LVU977
 3070 002c 0123     		movs	r3, #1
 3071 002e 2380     		strh	r3, [r4]	@ movhi
 459:rtos/uC-FS/Source/fs_vol.c ****     FSVol_Release(p_vol);                                       /* Release vol ref init.           
 3072              		.loc 1 459 5 is_stmt 1 view .LVU978
 3073 0030 2046     		mov	r0, r4
 3074 0032 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3075              	.LVL300:
 460:rtos/uC-FS/Source/fs_vol.c **** 
 3076              		.loc 1 460 5 view .LVU979
 3077 0036 2046     		mov	r0, r4
 3078 0038 FFF7FEFF 		bl	FSVol_Release
 3079              	.LVL301:
 462:rtos/uC-FS/Source/fs_vol.c **** 
 3080              		.loc 1 462 4 view .LVU980
 462:rtos/uC-FS/Source/fs_vol.c **** 
 3081              		.loc 1 462 11 is_stmt 0 view .LVU981
 3082 003c 0023     		movs	r3, #0
 3083 003e 2B80     		strh	r3, [r5]	@ movhi
 3084              	.LVL302:
 3085              	.L258:
 471:rtos/uC-FS/Source/fs_vol.c **** 
 3086              		.loc 1 471 1 view .LVU982
 3087 0040 38BD     		pop	{r3, r4, r5, pc}
 3088              	.LVL303:
 3089              	.L268:
 413:rtos/uC-FS/Source/fs_vol.c ****     }
ARM GAS  /tmp/ccvXhXom.s 			page 128


 3090              		.loc 1 413 9 is_stmt 1 view .LVU983
 413:rtos/uC-FS/Source/fs_vol.c ****     }
 3091              		.loc 1 413 9 view .LVU984
 3092 0042 FFF7FEFF 		bl	CPU_SW_Exception
 3093              	.LVL304:
 413:rtos/uC-FS/Source/fs_vol.c ****     }
 3094              		.loc 1 413 9 is_stmt 0 view .LVU985
 3095 0046 DFE7     		b	.L259
 3096              	.L269:
 416:rtos/uC-FS/Source/fs_vol.c ****         return;
 3097              		.loc 1 416 8 is_stmt 1 view .LVU986
 416:rtos/uC-FS/Source/fs_vol.c ****         return;
 3098              		.loc 1 416 15 is_stmt 0 view .LVU987
 3099 0048 40F28933 		movw	r3, #905
 3100 004c 2B80     		strh	r3, [r5]	@ movhi
 417:rtos/uC-FS/Source/fs_vol.c ****     }
 3101              		.loc 1 417 9 is_stmt 1 view .LVU988
 3102 004e F7E7     		b	.L258
 3103              	.LVL305:
 3104              	.L270:
 432:rtos/uC-FS/Source/fs_vol.c **** 
 3105              		.loc 1 432 9 view .LVU989
 3106 0050 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3107              	.LVL306:
 435:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_FILES_OPEN;
 3108              		.loc 1 435 9 view .LVU990
 435:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_FILES_OPEN;
 3109              		.loc 1 435 18 is_stmt 0 view .LVU991
 3110 0054 A38D     		ldrh	r3, [r4, #44]
 435:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_FILES_OPEN;
 3111              		.loc 1 435 12 view .LVU992
 3112 0056 1BB1     		cbz	r3, .L263
 436:rtos/uC-FS/Source/fs_vol.c ****         } else if (p_vol->DirCnt > 0) {
 3113              		.loc 1 436 12 is_stmt 1 view .LVU993
 436:rtos/uC-FS/Source/fs_vol.c ****         } else if (p_vol->DirCnt > 0) {
 3114              		.loc 1 436 19 is_stmt 0 view .LVU994
 3115 0058 4FF4B163 		mov	r3, #1416
 3116 005c 2B80     		strh	r3, [r5]	@ movhi
 3117 005e EFE7     		b	.L258
 3118              	.L263:
 437:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_DIRS_OPEN;
 3119              		.loc 1 437 16 is_stmt 1 view .LVU995
 437:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_DIRS_OPEN;
 3120              		.loc 1 437 25 is_stmt 0 view .LVU996
 3121 0060 E38D     		ldrh	r3, [r4, #46]
 437:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_DIRS_OPEN;
 3122              		.loc 1 437 19 view .LVU997
 3123 0062 1BB1     		cbz	r3, .L265
 438:rtos/uC-FS/Source/fs_vol.c ****         } else {
 3124              		.loc 1 438 12 is_stmt 1 view .LVU998
 438:rtos/uC-FS/Source/fs_vol.c ****         } else {
 3125              		.loc 1 438 19 is_stmt 0 view .LVU999
 3126 0064 40F28953 		movw	r3, #1417
 3127 0068 2B80     		strh	r3, [r5]	@ movhi
 3128 006a E9E7     		b	.L258
 3129              	.L265:
 441:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
ARM GAS  /tmp/ccvXhXom.s 			page 129


 3130              		.loc 1 441 12 is_stmt 1 view .LVU1000
 441:rtos/uC-FS/Source/fs_vol.c **** #ifdef FS_DIR_MODULE_PRESENT
 3131              		.loc 1 441 19 is_stmt 0 view .LVU1001
 3132 006c 4FF4B163 		mov	r3, #1416
 3133 0070 2B80     		strh	r3, [r5]	@ movhi
 447:rtos/uC-FS/Source/fs_vol.c ****     }
 3134              		.loc 1 447 9 is_stmt 1 view .LVU1002
 3135 0072 E5E7     		b	.L258
 3136              	.LVL307:
 3137              	.L271:
 452:rtos/uC-FS/Source/fs_vol.c ****     }
 3138              		.loc 1 452 9 view .LVU1003
 3139 0074 FFF7FEFF 		bl	FSSys_VolClose
 3140              	.LVL308:
 452:rtos/uC-FS/Source/fs_vol.c ****     }
 3141              		.loc 1 452 9 is_stmt 0 view .LVU1004
 3142 0078 D4E7     		b	.L266
 3143              		.cfi_endproc
 3144              	.LFE0:
 3146              		.section	.text.FSVol_Fmt,"ax",%progbits
 3147              		.align	1
 3148              		.global	FSVol_Fmt
 3149              		.syntax unified
 3150              		.thumb
 3151              		.thumb_func
 3152              		.fpu fpv4-sp-d16
 3154              	FSVol_Fmt:
 3155              	.LVL309:
 3156              	.LFB1:
 524:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 3157              		.loc 1 524 1 is_stmt 1 view -0
 3158              		.cfi_startproc
 3159              		@ args = 0, pretend = 0, frame = 0
 3160              		@ frame_needed = 0, uses_anonymous_args = 0
 524:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 3161              		.loc 1 524 1 is_stmt 0 view .LVU1006
 3162 0000 70B5     		push	{r4, r5, r6, lr}
 3163              	.LCFI56:
 3164              		.cfi_def_cfa_offset 16
 3165              		.cfi_offset 4, -16
 3166              		.cfi_offset 5, -12
 3167              		.cfi_offset 6, -8
 3168              		.cfi_offset 14, -4
 3169 0002 82B0     		sub	sp, sp, #8
 3170              	.LCFI57:
 3171              		.cfi_def_cfa_offset 24
 3172 0004 0446     		mov	r4, r0
 3173 0006 0D46     		mov	r5, r1
 525:rtos/uC-FS/Source/fs_vol.c **** 
 3174              		.loc 1 525 5 is_stmt 1 view .LVU1007
 529:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3175              		.loc 1 529 5 view .LVU1008
 529:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3176              		.loc 1 529 8 is_stmt 0 view .LVU1009
 3177 0008 1646     		mov	r6, r2
 3178 000a 5AB3     		cbz	r2, .L289
 3179              	.LVL310:
ARM GAS  /tmp/ccvXhXom.s 			page 130


 3180              	.L273:
 530:rtos/uC-FS/Source/fs_vol.c ****     }
 3181              		.loc 1 530 9 is_stmt 1 discriminator 1 view .LVU1010
 532:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 3182              		.loc 1 532 5 discriminator 1 view .LVU1011
 532:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 3183              		.loc 1 532 8 is_stmt 0 discriminator 1 view .LVU1012
 3184 000c 6CB3     		cbz	r4, .L290
 539:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 3185              		.loc 1 539 5 is_stmt 1 view .LVU1013
 539:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 3186              		.loc 1 539 13 is_stmt 0 view .LVU1014
 3187 000e 3246     		mov	r2, r6
 3188 0010 0021     		movs	r1, #0
 3189 0012 2046     		mov	r0, r4
 3190 0014 FFF7FEFF 		bl	FSVol_AcquireLockChk
 3191              	.LVL311:
 540:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 3192              		.loc 1 540 5 is_stmt 1 view .LVU1015
 541:rtos/uC-FS/Source/fs_vol.c ****         return;
 3193              		.loc 1 541 5 view .LVU1016
 541:rtos/uC-FS/Source/fs_vol.c ****         return;
 3194              		.loc 1 541 8 is_stmt 0 view .LVU1017
 3195 0018 0446     		mov	r4, r0
 3196              	.LVL312:
 541:rtos/uC-FS/Source/fs_vol.c ****         return;
 3197              		.loc 1 541 8 view .LVU1018
 3198 001a 48B3     		cbz	r0, .L272
 546:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 3199              		.loc 1 546 5 is_stmt 1 view .LVU1019
 546:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 3200              		.loc 1 546 9 is_stmt 0 view .LVU1020
 3201 001c C368     		ldr	r3, [r0, #12]
 546:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 3202              		.loc 1 546 8 view .LVU1021
 3203 001e 13F0020F 		tst	r3, #2
 3204 0022 27D0     		beq	.L291
 552:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 3205              		.loc 1 552 5 is_stmt 1 view .LVU1022
 552:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 3206              		.loc 1 552 14 is_stmt 0 view .LVU1023
 3207 0024 036B     		ldr	r3, [r0, #48]
 552:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 3208              		.loc 1 552 22 view .LVU1024
 3209 0026 9B88     		ldrh	r3, [r3, #4]
 552:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 3210              		.loc 1 552 8 view .LVU1025
 3211 0028 052B     		cmp	r3, #5
 3212 002a 29D1     		bne	.L292
 560:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->FileCnt != (FS_QTY)0) {                      /* See Notes #1.                   
 3213              		.loc 1 560 5 is_stmt 1 view .LVU1026
 560:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->FileCnt != (FS_QTY)0) {                      /* See Notes #1.                   
 3214              		.loc 1 560 14 is_stmt 0 view .LVU1027
 3215 002c 0388     		ldrh	r3, [r0]
 560:rtos/uC-FS/Source/fs_vol.c ****         if (p_vol->FileCnt != (FS_QTY)0) {                      /* See Notes #1.                   
 3216              		.loc 1 560 8 view .LVU1028
 3217 002e 052B     		cmp	r3, #5
ARM GAS  /tmp/ccvXhXom.s 			page 131


 3218 0030 2CD0     		beq	.L293
 3219              	.L278:
 584:rtos/uC-FS/Source/fs_vol.c ****         p_vol->State = FS_VOL_STATE_OPEN;
 3220              		.loc 1 584 5 is_stmt 1 view .LVU1029
 584:rtos/uC-FS/Source/fs_vol.c ****         p_vol->State = FS_VOL_STATE_OPEN;
 3221              		.loc 1 584 8 is_stmt 0 view .LVU1030
 3222 0032 052B     		cmp	r3, #5
 3223 0034 3BD0     		beq	.L294
 3224              	.LVL313:
 3225              	.L280:
 593:rtos/uC-FS/Source/fs_vol.c ****                  p_fs_cfg,
 3226              		.loc 1 593 5 is_stmt 1 view .LVU1031
 3227 0036 636A     		ldr	r3, [r4, #36]
 3228 0038 A26A     		ldr	r2, [r4, #40]
 3229 003a 0096     		str	r6, [sp]
 3230 003c 2946     		mov	r1, r5
 3231 003e 2046     		mov	r0, r4
 3232 0040 FFF7FEFF 		bl	FSSys_VolFmt
 3233              	.LVL314:
 601:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:
 3234              		.loc 1 601 5 view .LVU1032
 601:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:
 3235              		.loc 1 601 13 is_stmt 0 view .LVU1033
 3236 0044 3388     		ldrh	r3, [r6]
 601:rtos/uC-FS/Source/fs_vol.c ****         case FS_ERR_NONE:
 3237              		.loc 1 601 5 view .LVU1034
 3238 0046 40F24112 		movw	r2, #321
 3239 004a 9342     		cmp	r3, r2
 3240 004c 54D0     		beq	.L281
 3241 004e 40F27F52 		movw	r2, #1407
 3242 0052 9342     		cmp	r3, r2
 3243 0054 50D0     		beq	.L281
 3244 0056 83B3     		cbz	r3, .L295
 640:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_OPEN;
 3245              		.loc 1 640 14 is_stmt 1 view .LVU1035
 3246 0058 2046     		mov	r0, r4
 3247 005a FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3248              	.LVL315:
 641:rtos/uC-FS/Source/fs_vol.c ****              return;
 3249              		.loc 1 641 14 view .LVU1036
 641:rtos/uC-FS/Source/fs_vol.c ****              return;
 3250              		.loc 1 641 27 is_stmt 0 view .LVU1037
 3251 005e 0323     		movs	r3, #3
 3252 0060 2380     		strh	r3, [r4]	@ movhi
 642:rtos/uC-FS/Source/fs_vol.c ****     }
 3253              		.loc 1 642 14 is_stmt 1 view .LVU1038
 3254 0062 05E0     		b	.L272
 3255              	.LVL316:
 3256              	.L289:
 530:rtos/uC-FS/Source/fs_vol.c ****     }
 3257              		.loc 1 530 9 view .LVU1039
 530:rtos/uC-FS/Source/fs_vol.c ****     }
 3258              		.loc 1 530 9 view .LVU1040
 3259 0064 FFF7FEFF 		bl	CPU_SW_Exception
 3260              	.LVL317:
 530:rtos/uC-FS/Source/fs_vol.c ****     }
 3261              		.loc 1 530 9 is_stmt 0 view .LVU1041
ARM GAS  /tmp/ccvXhXom.s 			page 132


 3262 0068 D0E7     		b	.L273
 3263              	.L290:
 533:rtos/uC-FS/Source/fs_vol.c ****         return;
 3264              		.loc 1 533 8 is_stmt 1 view .LVU1042
 533:rtos/uC-FS/Source/fs_vol.c ****         return;
 3265              		.loc 1 533 15 is_stmt 0 view .LVU1043
 3266 006a 40F28933 		movw	r3, #905
 3267 006e 3380     		strh	r3, [r6]	@ movhi
 534:rtos/uC-FS/Source/fs_vol.c ****     }
 3268              		.loc 1 534 9 is_stmt 1 view .LVU1044
 3269              	.LVL318:
 3270              	.L272:
 649:rtos/uC-FS/Source/fs_vol.c **** #endif
 3271              		.loc 1 649 1 is_stmt 0 view .LVU1045
 3272 0070 02B0     		add	sp, sp, #8
 3273              	.LCFI58:
 3274              		.cfi_remember_state
 3275              		.cfi_def_cfa_offset 16
 3276              		@ sp needed
 3277 0072 70BD     		pop	{r4, r5, r6, pc}
 3278              	.LVL319:
 3279              	.L291:
 3280              	.LCFI59:
 3281              		.cfi_restore_state
 547:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
 3282              		.loc 1 547 9 is_stmt 1 view .LVU1046
 3283 0074 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3284              	.LVL320:
 548:rtos/uC-FS/Source/fs_vol.c ****         return;
 3285              		.loc 1 548 8 view .LVU1047
 548:rtos/uC-FS/Source/fs_vol.c ****         return;
 3286              		.loc 1 548 15 is_stmt 0 view .LVU1048
 3287 0078 40F27D53 		movw	r3, #1405
 3288 007c 3380     		strh	r3, [r6]	@ movhi
 549:rtos/uC-FS/Source/fs_vol.c ****     }
 3289              		.loc 1 549 9 is_stmt 1 view .LVU1049
 3290 007e F7E7     		b	.L272
 3291              	.LVL321:
 3292              	.L292:
 553:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV;
 3293              		.loc 1 553 9 view .LVU1050
 3294 0080 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3295              	.LVL322:
 554:rtos/uC-FS/Source/fs_vol.c ****         return;
 3296              		.loc 1 554 8 view .LVU1051
 554:rtos/uC-FS/Source/fs_vol.c ****         return;
 3297              		.loc 1 554 15 is_stmt 0 view .LVU1052
 3298 0084 4FF49673 		mov	r3, #300
 3299 0088 3380     		strh	r3, [r6]	@ movhi
 555:rtos/uC-FS/Source/fs_vol.c ****     }
 3300              		.loc 1 555 9 is_stmt 1 view .LVU1053
 3301 008a F1E7     		b	.L272
 3302              	.LVL323:
 3303              	.L293:
 561:rtos/uC-FS/Source/fs_vol.c ****             FSVol_ReleaseUnlock(p_vol);
 3304              		.loc 1 561 9 view .LVU1054
 561:rtos/uC-FS/Source/fs_vol.c ****             FSVol_ReleaseUnlock(p_vol);
ARM GAS  /tmp/ccvXhXom.s 			page 133


 3305              		.loc 1 561 18 is_stmt 0 view .LVU1055
 3306 008c 828D     		ldrh	r2, [r0, #44]
 561:rtos/uC-FS/Source/fs_vol.c ****             FSVol_ReleaseUnlock(p_vol);
 3307              		.loc 1 561 12 view .LVU1056
 3308 008e 42B9     		cbnz	r2, .L296
 567:rtos/uC-FS/Source/fs_vol.c ****             FSVol_ReleaseUnlock(p_vol);
 3309              		.loc 1 567 9 is_stmt 1 view .LVU1057
 567:rtos/uC-FS/Source/fs_vol.c ****             FSVol_ReleaseUnlock(p_vol);
 3310              		.loc 1 567 18 is_stmt 0 view .LVU1058
 3311 0090 C28D     		ldrh	r2, [r0, #46]
 567:rtos/uC-FS/Source/fs_vol.c ****             FSVol_ReleaseUnlock(p_vol);
 3312              		.loc 1 567 12 view .LVU1059
 3313 0092 002A     		cmp	r2, #0
 3314 0094 CDD0     		beq	.L278
 568:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_DIRS_OPEN;
 3315              		.loc 1 568 13 is_stmt 1 view .LVU1060
 3316 0096 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3317              	.LVL324:
 569:rtos/uC-FS/Source/fs_vol.c ****             return;
 3318              		.loc 1 569 12 view .LVU1061
 569:rtos/uC-FS/Source/fs_vol.c ****             return;
 3319              		.loc 1 569 19 is_stmt 0 view .LVU1062
 3320 009a 40F28953 		movw	r3, #1417
 3321 009e 3380     		strh	r3, [r6]	@ movhi
 570:rtos/uC-FS/Source/fs_vol.c ****         }
 3322              		.loc 1 570 13 is_stmt 1 view .LVU1063
 3323 00a0 E6E7     		b	.L272
 3324              	.LVL325:
 3325              	.L296:
 562:rtos/uC-FS/Source/fs_vol.c ****            *p_err = FS_ERR_VOL_FILES_OPEN;
 3326              		.loc 1 562 13 view .LVU1064
 3327 00a2 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3328              	.LVL326:
 563:rtos/uC-FS/Source/fs_vol.c ****             return;
 3329              		.loc 1 563 12 view .LVU1065
 563:rtos/uC-FS/Source/fs_vol.c ****             return;
 3330              		.loc 1 563 19 is_stmt 0 view .LVU1066
 3331 00a6 4FF4B163 		mov	r3, #1416
 3332 00aa 3380     		strh	r3, [r6]	@ movhi
 564:rtos/uC-FS/Source/fs_vol.c ****         }
 3333              		.loc 1 564 13 is_stmt 1 view .LVU1067
 3334 00ac E0E7     		b	.L272
 3335              	.LVL327:
 3336              	.L294:
 585:rtos/uC-FS/Source/fs_vol.c **** 
 3337              		.loc 1 585 9 view .LVU1068
 585:rtos/uC-FS/Source/fs_vol.c **** 
 3338              		.loc 1 585 22 is_stmt 0 view .LVU1069
 3339 00ae 0323     		movs	r3, #3
 3340 00b0 2380     		strh	r3, [r4]	@ movhi
 587:rtos/uC-FS/Source/fs_vol.c ****     }
 3341              		.loc 1 587 9 is_stmt 1 view .LVU1070
 3342 00b2 2046     		mov	r0, r4
 3343              	.LVL328:
 587:rtos/uC-FS/Source/fs_vol.c ****     }
 3344              		.loc 1 587 9 is_stmt 0 view .LVU1071
 3345 00b4 FFF7FEFF 		bl	FSSys_VolClose
ARM GAS  /tmp/ccvXhXom.s 			page 134


 3346              	.LVL329:
 3347 00b8 BDE7     		b	.L280
 3348              	.L295:
 603:rtos/uC-FS/Source/fs_vol.c ****              switch (*p_err) {
 3349              		.loc 1 603 14 is_stmt 1 view .LVU1072
 3350 00ba 3146     		mov	r1, r6
 3351 00bc 2046     		mov	r0, r4
 3352 00be FFF7FEFF 		bl	FSSys_VolOpen
 3353              	.LVL330:
 604:rtos/uC-FS/Source/fs_vol.c ****                  case FS_ERR_NONE:
 3354              		.loc 1 604 14 view .LVU1073
 604:rtos/uC-FS/Source/fs_vol.c ****                  case FS_ERR_NONE:
 3355              		.loc 1 604 22 is_stmt 0 view .LVU1074
 3356 00c2 3388     		ldrh	r3, [r6]
 3357 00c4 4BB1     		cbz	r3, .L283
 3358 00c6 40F27F52 		movw	r2, #1407
 3359 00ca 9342     		cmp	r3, r2
 3360 00cc 0ED0     		beq	.L284
 619:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->State = FS_VOL_STATE_OPEN;
 3361              		.loc 1 619 23 is_stmt 1 view .LVU1075
 3362 00ce 2046     		mov	r0, r4
 3363 00d0 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3364              	.LVL331:
 620:rtos/uC-FS/Source/fs_vol.c ****                       return;
 3365              		.loc 1 620 23 view .LVU1076
 620:rtos/uC-FS/Source/fs_vol.c ****                       return;
 3366              		.loc 1 620 36 is_stmt 0 view .LVU1077
 3367 00d4 0323     		movs	r3, #3
 3368 00d6 2380     		strh	r3, [r4]	@ movhi
 621:rtos/uC-FS/Source/fs_vol.c ****              }
 3369              		.loc 1 621 23 is_stmt 1 view .LVU1078
 3370 00d8 CAE7     		b	.L272
 3371              	.L283:
 606:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->RefreshCnt = p_vol->DevPtr->RefreshCnt;
 3372              		.loc 1 606 23 view .LVU1079
 606:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->RefreshCnt = p_vol->DevPtr->RefreshCnt;
 3373              		.loc 1 606 41 is_stmt 0 view .LVU1080
 3374 00da 0523     		movs	r3, #5
 3375 00dc 2380     		strh	r3, [r4]	@ movhi
 607:rtos/uC-FS/Source/fs_vol.c ****                       break;
 3376              		.loc 1 607 23 is_stmt 1 view .LVU1081
 607:rtos/uC-FS/Source/fs_vol.c ****                       break;
 3377              		.loc 1 607 48 is_stmt 0 view .LVU1082
 3378 00de 236B     		ldr	r3, [r4, #48]
 607:rtos/uC-FS/Source/fs_vol.c ****                       break;
 3379              		.loc 1 607 56 view .LVU1083
 3380 00e0 DB68     		ldr	r3, [r3, #12]
 607:rtos/uC-FS/Source/fs_vol.c ****                       break;
 3381              		.loc 1 607 41 view .LVU1084
 3382 00e2 A360     		str	r3, [r4, #8]
 608:rtos/uC-FS/Source/fs_vol.c **** 
 3383              		.loc 1 608 23 is_stmt 1 view .LVU1085
 3384              	.L286:
 623:rtos/uC-FS/Source/fs_vol.c **** 
 3385              		.loc 1 623 14 view .LVU1086
 648:rtos/uC-FS/Source/fs_vol.c **** }
 3386              		.loc 1 648 5 view .LVU1087
ARM GAS  /tmp/ccvXhXom.s 			page 135


 3387 00e4 2046     		mov	r0, r4
 3388 00e6 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3389              	.LVL332:
 3390 00ea C1E7     		b	.L272
 3391              	.L284:
 612:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->State = FS_VOL_STATE_PRESENT;
 3392              		.loc 1 612 22 view .LVU1088
 612:rtos/uC-FS/Source/fs_vol.c ****                       p_vol->State = FS_VOL_STATE_PRESENT;
 3393              		.loc 1 612 29 is_stmt 0 view .LVU1089
 3394 00ec 40F2EF33 		movw	r3, #1007
 3395 00f0 3380     		strh	r3, [r6]	@ movhi
 613:rtos/uC-FS/Source/fs_vol.c ****                       break;
 3396              		.loc 1 613 23 is_stmt 1 view .LVU1090
 613:rtos/uC-FS/Source/fs_vol.c ****                       break;
 3397              		.loc 1 613 36 is_stmt 0 view .LVU1091
 3398 00f2 0423     		movs	r3, #4
 3399 00f4 2380     		strh	r3, [r4]	@ movhi
 614:rtos/uC-FS/Source/fs_vol.c **** 
 3400              		.loc 1 614 23 is_stmt 1 view .LVU1092
 3401 00f6 F5E7     		b	.L286
 3402              	.L281:
 628:rtos/uC-FS/Source/fs_vol.c ****             *p_err = FS_ERR_PARTITION_NOT_FOUND;
 3403              		.loc 1 628 14 view .LVU1093
 3404 00f8 2046     		mov	r0, r4
 3405 00fa FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3406              	.LVL333:
 629:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_PRESENT;
 3407              		.loc 1 629 13 view .LVU1094
 629:rtos/uC-FS/Source/fs_vol.c ****              p_vol->State = FS_VOL_STATE_PRESENT;
 3408              		.loc 1 629 20 is_stmt 0 view .LVU1095
 3409 00fe 40F2EF33 		movw	r3, #1007
 3410 0102 3380     		strh	r3, [r6]	@ movhi
 630:rtos/uC-FS/Source/fs_vol.c ****              return;
 3411              		.loc 1 630 14 is_stmt 1 view .LVU1096
 630:rtos/uC-FS/Source/fs_vol.c ****              return;
 3412              		.loc 1 630 27 is_stmt 0 view .LVU1097
 3413 0104 0423     		movs	r3, #4
 3414 0106 2380     		strh	r3, [r4]	@ movhi
 631:rtos/uC-FS/Source/fs_vol.c **** 
 3415              		.loc 1 631 14 is_stmt 1 view .LVU1098
 3416 0108 B2E7     		b	.L272
 3417              		.cfi_endproc
 3418              	.LFE1:
 3420              		.section	.text.FSVol_IsMounted,"ax",%progbits
 3421              		.align	1
 3422              		.global	FSVol_IsMounted
 3423              		.syntax unified
 3424              		.thumb
 3425              		.thumb_func
 3426              		.fpu fpv4-sp-d16
 3428              	FSVol_IsMounted:
 3429              	.LVL334:
 3430              	.LFB2:
 669:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 3431              		.loc 1 669 1 view -0
 3432              		.cfi_startproc
 3433              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccvXhXom.s 			page 136


 3434              		@ frame_needed = 0, uses_anonymous_args = 0
 670:rtos/uC-FS/Source/fs_vol.c ****     FS_ERR   err;
 3435              		.loc 1 670 5 view .LVU1100
 671:rtos/uC-FS/Source/fs_vol.c **** 
 3436              		.loc 1 671 5 view .LVU1101
 675:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 3437              		.loc 1 675 5 view .LVU1102
 675:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 3438              		.loc 1 675 8 is_stmt 0 view .LVU1103
 3439 0000 68B1     		cbz	r0, .L299
 669:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 3440              		.loc 1 669 1 view .LVU1104
 3441 0002 00B5     		push	{lr}
 3442              	.LCFI60:
 3443              		.cfi_def_cfa_offset 4
 3444              		.cfi_offset 14, -4
 3445 0004 83B0     		sub	sp, sp, #12
 3446              	.LCFI61:
 3447              		.cfi_def_cfa_offset 16
 683:rtos/uC-FS/Source/fs_vol.c ****     (void)err;                                                 /* Err ignored. Ret val chk'd instea
 3448              		.loc 1 683 5 is_stmt 1 view .LVU1105
 683:rtos/uC-FS/Source/fs_vol.c ****     (void)err;                                                 /* Err ignored. Ret val chk'd instea
 3449              		.loc 1 683 13 is_stmt 0 view .LVU1106
 3450 0006 0DF10602 		add	r2, sp, #6
 3451 000a 0121     		movs	r1, #1
 3452 000c FFF7FEFF 		bl	FSVol_AcquireLockChk
 3453              	.LVL335:
 684:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 3454              		.loc 1 684 5 is_stmt 1 view .LVU1107
 685:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 3455              		.loc 1 685 5 view .LVU1108
 685:rtos/uC-FS/Source/fs_vol.c ****         return (DEF_NO);
 3456              		.loc 1 685 8 is_stmt 0 view .LVU1109
 3457 0010 38B1     		cbz	r0, .L300
 692:rtos/uC-FS/Source/fs_vol.c **** 
 3458              		.loc 1 692 5 is_stmt 1 view .LVU1110
 3459 0012 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3460              	.LVL336:
 694:rtos/uC-FS/Source/fs_vol.c **** }
 3461              		.loc 1 694 5 view .LVU1111
 694:rtos/uC-FS/Source/fs_vol.c **** }
 3462              		.loc 1 694 12 is_stmt 0 view .LVU1112
 3463 0016 0120     		movs	r0, #1
 3464              	.L298:
 695:rtos/uC-FS/Source/fs_vol.c **** 
 3465              		.loc 1 695 1 view .LVU1113
 3466 0018 03B0     		add	sp, sp, #12
 3467              	.LCFI62:
 3468              		.cfi_def_cfa_offset 4
 3469              		@ sp needed
 3470 001a 5DF804FB 		ldr	pc, [sp], #4
 3471              	.LVL337:
 3472              	.L299:
 3473              	.LCFI63:
 3474              		.cfi_def_cfa_offset 0
 3475              		.cfi_restore 14
 676:rtos/uC-FS/Source/fs_vol.c ****     }
ARM GAS  /tmp/ccvXhXom.s 			page 137


 3476              		.loc 1 676 16 view .LVU1114
 3477 001e 0020     		movs	r0, #0
 3478              	.LVL338:
 695:rtos/uC-FS/Source/fs_vol.c **** 
 3479              		.loc 1 695 1 view .LVU1115
 3480 0020 7047     		bx	lr
 3481              	.LVL339:
 3482              	.L300:
 3483              	.LCFI64:
 3484              		.cfi_def_cfa_offset 16
 3485              		.cfi_offset 14, -4
 686:rtos/uC-FS/Source/fs_vol.c ****     }
 3486              		.loc 1 686 16 view .LVU1116
 3487 0022 0020     		movs	r0, #0
 3488              	.LVL340:
 686:rtos/uC-FS/Source/fs_vol.c ****     }
 3489              		.loc 1 686 16 view .LVU1117
 3490 0024 F8E7     		b	.L298
 3491              		.cfi_endproc
 3492              	.LFE2:
 3494              		.section	.text.FSVol_LabelGet,"ax",%progbits
 3495              		.align	1
 3496              		.global	FSVol_LabelGet
 3497              		.syntax unified
 3498              		.thumb
 3499              		.thumb_func
 3500              		.fpu fpv4-sp-d16
 3502              	FSVol_LabelGet:
 3503              	.LVL341:
 3504              	.LFB3:
 736:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
 3505              		.loc 1 736 1 is_stmt 1 view -0
 3506              		.cfi_startproc
 3507              		@ args = 0, pretend = 0, frame = 0
 3508              		@ frame_needed = 0, uses_anonymous_args = 0
 736:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
 3509              		.loc 1 736 1 is_stmt 0 view .LVU1119
 3510 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3511              	.LCFI65:
 3512              		.cfi_def_cfa_offset 24
 3513              		.cfi_offset 3, -24
 3514              		.cfi_offset 4, -20
 3515              		.cfi_offset 5, -16
 3516              		.cfi_offset 6, -12
 3517              		.cfi_offset 7, -8
 3518              		.cfi_offset 14, -4
 3519 0002 0646     		mov	r6, r0
 3520 0004 0D46     		mov	r5, r1
 3521 0006 1446     		mov	r4, r2
 737:rtos/uC-FS/Source/fs_vol.c ****     CPU_BOOLEAN   empty;
 3522              		.loc 1 737 5 is_stmt 1 view .LVU1120
 738:rtos/uC-FS/Source/fs_vol.c ****     CPU_SIZE_T    pos;
 3523              		.loc 1 738 5 view .LVU1121
 739:rtos/uC-FS/Source/fs_vol.c **** 
 3524              		.loc 1 739 5 view .LVU1122
 743:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3525              		.loc 1 743 5 view .LVU1123
ARM GAS  /tmp/ccvXhXom.s 			page 138


 743:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3526              		.loc 1 743 8 is_stmt 0 view .LVU1124
 3527 0008 1F46     		mov	r7, r3
 3528 000a 33B1     		cbz	r3, .L318
 3529              	.LVL342:
 3530              	.L306:
 744:rtos/uC-FS/Source/fs_vol.c ****     }
 3531              		.loc 1 744 9 is_stmt 1 discriminator 1 view .LVU1125
 746:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 3532              		.loc 1 746 5 discriminator 1 view .LVU1126
 746:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 3533              		.loc 1 746 8 is_stmt 0 discriminator 1 view .LVU1127
 3534 000c 46B1     		cbz	r6, .L319
 750:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 3535              		.loc 1 750 5 is_stmt 1 view .LVU1128
 750:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 3536              		.loc 1 750 8 is_stmt 0 view .LVU1129
 3537 000e 5DB1     		cbz	r5, .L320
 754:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_INVALID_SIZE;
 3538              		.loc 1 754 5 is_stmt 1 view .LVU1130
 754:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_INVALID_SIZE;
 3539              		.loc 1 754 8 is_stmt 0 view .LVU1131
 3540 0010 6CB9     		cbnz	r4, .L310
 755:rtos/uC-FS/Source/fs_vol.c ****         return;
 3541              		.loc 1 755 8 is_stmt 1 view .LVU1132
 755:rtos/uC-FS/Source/fs_vol.c ****         return;
 3542              		.loc 1 755 15 is_stmt 0 view .LVU1133
 3543 0012 40F24113 		movw	r3, #321
 3544 0016 3B80     		strh	r3, [r7]	@ movhi
 756:rtos/uC-FS/Source/fs_vol.c ****     }
 3545              		.loc 1 756 9 is_stmt 1 view .LVU1134
 3546              	.LVL343:
 3547              	.L305:
 794:rtos/uC-FS/Source/fs_vol.c **** 
 3548              		.loc 1 794 1 is_stmt 0 view .LVU1135
 3549 0018 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3550              	.LVL344:
 3551              	.L318:
 744:rtos/uC-FS/Source/fs_vol.c ****     }
 3552              		.loc 1 744 9 is_stmt 1 view .LVU1136
 744:rtos/uC-FS/Source/fs_vol.c ****     }
 3553              		.loc 1 744 9 view .LVU1137
 3554 001a FFF7FEFF 		bl	CPU_SW_Exception
 3555              	.LVL345:
 744:rtos/uC-FS/Source/fs_vol.c ****     }
 3556              		.loc 1 744 9 is_stmt 0 view .LVU1138
 3557 001e F5E7     		b	.L306
 3558              	.L319:
 747:rtos/uC-FS/Source/fs_vol.c ****         return;
 3559              		.loc 1 747 8 is_stmt 1 view .LVU1139
 747:rtos/uC-FS/Source/fs_vol.c ****         return;
 3560              		.loc 1 747 15 is_stmt 0 view .LVU1140
 3561 0020 40F28933 		movw	r3, #905
 3562 0024 3B80     		strh	r3, [r7]	@ movhi
 748:rtos/uC-FS/Source/fs_vol.c ****     }
 3563              		.loc 1 748 9 is_stmt 1 view .LVU1141
 3564 0026 F7E7     		b	.L305
ARM GAS  /tmp/ccvXhXom.s 			page 139


 3565              	.L320:
 751:rtos/uC-FS/Source/fs_vol.c ****         return;
 3566              		.loc 1 751 8 view .LVU1142
 751:rtos/uC-FS/Source/fs_vol.c ****         return;
 3567              		.loc 1 751 15 is_stmt 0 view .LVU1143
 3568 0028 1323     		movs	r3, #19
 3569 002a 3B80     		strh	r3, [r7]	@ movhi
 752:rtos/uC-FS/Source/fs_vol.c ****     }
 3570              		.loc 1 752 9 is_stmt 1 view .LVU1144
 3571 002c F4E7     		b	.L305
 3572              	.L310:
 763:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 3573              		.loc 1 763 5 view .LVU1145
 763:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 3574              		.loc 1 763 13 is_stmt 0 view .LVU1146
 3575 002e 3A46     		mov	r2, r7
 3576 0030 0121     		movs	r1, #1
 3577 0032 3046     		mov	r0, r6
 3578 0034 FFF7FEFF 		bl	FSVol_AcquireLockChk
 3579              	.LVL346:
 764:rtos/uC-FS/Source/fs_vol.c ****         return;
 3580              		.loc 1 764 5 is_stmt 1 view .LVU1147
 764:rtos/uC-FS/Source/fs_vol.c ****         return;
 3581              		.loc 1 764 8 is_stmt 0 view .LVU1148
 3582 0038 0646     		mov	r6, r0
 3583              	.LVL347:
 764:rtos/uC-FS/Source/fs_vol.c ****         return;
 3584              		.loc 1 764 8 view .LVU1149
 3585 003a 0028     		cmp	r0, #0
 3586 003c ECD0     		beq	.L305
 769:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- GET VOL LABE
 3587              		.loc 1 769 5 is_stmt 1 view .LVU1150
 769:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------- GET VOL LABE
 3588              		.loc 1 769 14 is_stmt 0 view .LVU1151
 3589 003e 0023     		movs	r3, #0
 3590 0040 2B70     		strb	r3, [r5]
 771:rtos/uC-FS/Source/fs_vol.c ****                       label,
 3591              		.loc 1 771 5 is_stmt 1 view .LVU1152
 3592 0042 3B46     		mov	r3, r7
 3593 0044 2246     		mov	r2, r4
 3594 0046 2946     		mov	r1, r5
 3595 0048 FFF7FEFF 		bl	FSSys_VolLabelGet
 3596              	.LVL348:
 777:rtos/uC-FS/Source/fs_vol.c ****     empty = DEF_YES;
 3597              		.loc 1 777 5 view .LVU1153
 777:rtos/uC-FS/Source/fs_vol.c ****     empty = DEF_YES;
 3598              		.loc 1 777 35 is_stmt 0 view .LVU1154
 3599 004c 0C2C     		cmp	r4, #12
 3600 004e 0AD8     		bhi	.L315
 777:rtos/uC-FS/Source/fs_vol.c ****     empty = DEF_YES;
 3601              		.loc 1 777 35 discriminator 1 view .LVU1155
 3602 0050 013C     		subs	r4, r4, #1
 3603              	.LVL349:
 3604              	.L312:
 779:rtos/uC-FS/Source/fs_vol.c ****         pos--;
 3605              		.loc 1 779 10 is_stmt 1 view .LVU1156
 3606 0052 54B1     		cbz	r4, .L321
ARM GAS  /tmp/ccvXhXom.s 			page 140


 780:rtos/uC-FS/Source/fs_vol.c ****         if(label[pos] != (CPU_CHAR)ASCII_CHAR_SPACE) {
 3607              		.loc 1 780 9 view .LVU1157
 780:rtos/uC-FS/Source/fs_vol.c ****         if(label[pos] != (CPU_CHAR)ASCII_CHAR_SPACE) {
 3608              		.loc 1 780 12 is_stmt 0 view .LVU1158
 3609 0054 621E     		subs	r2, r4, #1
 3610              	.LVL350:
 781:rtos/uC-FS/Source/fs_vol.c ****             label[pos + 1u] = (CPU_CHAR)ASCII_CHAR_NULL;
 3611              		.loc 1 781 9 is_stmt 1 view .LVU1159
 781:rtos/uC-FS/Source/fs_vol.c ****             label[pos + 1u] = (CPU_CHAR)ASCII_CHAR_NULL;
 3612              		.loc 1 781 17 is_stmt 0 view .LVU1160
 3613 0056 A95C     		ldrb	r1, [r5, r2]	@ zero_extendqisi2
 781:rtos/uC-FS/Source/fs_vol.c ****             label[pos + 1u] = (CPU_CHAR)ASCII_CHAR_NULL;
 3614              		.loc 1 781 11 view .LVU1161
 3615 0058 2029     		cmp	r1, #32
 3616 005a 01D1     		bne	.L322
 780:rtos/uC-FS/Source/fs_vol.c ****         if(label[pos] != (CPU_CHAR)ASCII_CHAR_SPACE) {
 3617              		.loc 1 780 12 view .LVU1162
 3618 005c 1446     		mov	r4, r2
 3619 005e F8E7     		b	.L312
 3620              	.L322:
 782:rtos/uC-FS/Source/fs_vol.c ****             empty = DEF_NO;
 3621              		.loc 1 782 13 is_stmt 1 view .LVU1163
 782:rtos/uC-FS/Source/fs_vol.c ****             empty = DEF_NO;
 3622              		.loc 1 782 29 is_stmt 0 view .LVU1164
 3623 0060 0022     		movs	r2, #0
 3624              	.LVL351:
 782:rtos/uC-FS/Source/fs_vol.c ****             empty = DEF_NO;
 3625              		.loc 1 782 29 view .LVU1165
 3626 0062 2A55     		strb	r2, [r5, r4]
 783:rtos/uC-FS/Source/fs_vol.c ****             break;
 3627              		.loc 1 783 13 is_stmt 1 view .LVU1166
 3628              	.LVL352:
 784:rtos/uC-FS/Source/fs_vol.c ****         }
 3629              		.loc 1 784 13 view .LVU1167
 788:rtos/uC-FS/Source/fs_vol.c ****         label[0] = (CPU_CHAR)ASCII_CHAR_NULL;
 3630              		.loc 1 788 5 view .LVU1168
 3631 0064 03E0     		b	.L313
 3632              	.LVL353:
 3633              	.L315:
 777:rtos/uC-FS/Source/fs_vol.c ****     empty = DEF_YES;
 3634              		.loc 1 777 35 is_stmt 0 view .LVU1169
 3635 0066 0B24     		movs	r4, #11
 3636              	.LVL354:
 777:rtos/uC-FS/Source/fs_vol.c ****     empty = DEF_YES;
 3637              		.loc 1 777 35 view .LVU1170
 3638 0068 F3E7     		b	.L312
 3639              	.LVL355:
 3640              	.L321:
 788:rtos/uC-FS/Source/fs_vol.c ****         label[0] = (CPU_CHAR)ASCII_CHAR_NULL;
 3641              		.loc 1 788 5 is_stmt 1 view .LVU1171
 789:rtos/uC-FS/Source/fs_vol.c ****     }
 3642              		.loc 1 789 9 view .LVU1172
 789:rtos/uC-FS/Source/fs_vol.c ****     }
 3643              		.loc 1 789 18 is_stmt 0 view .LVU1173
 3644 006a 0023     		movs	r3, #0
 3645 006c 2B70     		strb	r3, [r5]
 3646              	.LVL356:
ARM GAS  /tmp/ccvXhXom.s 			page 141


 3647              	.L313:
 793:rtos/uC-FS/Source/fs_vol.c **** }
 3648              		.loc 1 793 5 is_stmt 1 view .LVU1174
 3649 006e 3046     		mov	r0, r6
 3650 0070 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3651              	.LVL357:
 3652 0074 D0E7     		b	.L305
 3653              		.cfi_endproc
 3654              	.LFE3:
 3656              		.section	.text.FSVol_LabelSet,"ax",%progbits
 3657              		.align	1
 3658              		.global	FSVol_LabelSet
 3659              		.syntax unified
 3660              		.thumb
 3661              		.thumb_func
 3662              		.fpu fpv4-sp-d16
 3664              	FSVol_LabelSet:
 3665              	.LVL358:
 3666              	.LFB4:
 834:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 3667              		.loc 1 834 1 view -0
 3668              		.cfi_startproc
 3669              		@ args = 0, pretend = 0, frame = 0
 3670              		@ frame_needed = 0, uses_anonymous_args = 0
 834:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 3671              		.loc 1 834 1 is_stmt 0 view .LVU1176
 3672 0000 70B5     		push	{r4, r5, r6, lr}
 3673              	.LCFI66:
 3674              		.cfi_def_cfa_offset 16
 3675              		.cfi_offset 4, -16
 3676              		.cfi_offset 5, -12
 3677              		.cfi_offset 6, -8
 3678              		.cfi_offset 14, -4
 3679 0002 0446     		mov	r4, r0
 3680 0004 0D46     		mov	r5, r1
 835:rtos/uC-FS/Source/fs_vol.c **** 
 3681              		.loc 1 835 5 is_stmt 1 view .LVU1177
 839:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3682              		.loc 1 839 5 view .LVU1178
 839:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3683              		.loc 1 839 8 is_stmt 0 view .LVU1179
 3684 0006 1646     		mov	r6, r2
 3685 0008 82B1     		cbz	r2, .L329
 3686              	.LVL359:
 3687              	.L324:
 840:rtos/uC-FS/Source/fs_vol.c ****     }
 3688              		.loc 1 840 9 is_stmt 1 discriminator 1 view .LVU1180
 842:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 3689              		.loc 1 842 5 discriminator 1 view .LVU1181
 842:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 3690              		.loc 1 842 8 is_stmt 0 discriminator 1 view .LVU1182
 3691 000a 94B1     		cbz	r4, .L330
 846:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 3692              		.loc 1 846 5 is_stmt 1 view .LVU1183
 846:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 3693              		.loc 1 846 8 is_stmt 0 view .LVU1184
 3694 000c ADB1     		cbz	r5, .L331
ARM GAS  /tmp/ccvXhXom.s 			page 142


 855:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 3695              		.loc 1 855 5 is_stmt 1 view .LVU1185
 855:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 3696              		.loc 1 855 13 is_stmt 0 view .LVU1186
 3697 000e 3246     		mov	r2, r6
 3698 0010 0121     		movs	r1, #1
 3699 0012 2046     		mov	r0, r4
 3700 0014 FFF7FEFF 		bl	FSVol_AcquireLockChk
 3701              	.LVL360:
 856:rtos/uC-FS/Source/fs_vol.c ****         return;
 3702              		.loc 1 856 5 is_stmt 1 view .LVU1187
 856:rtos/uC-FS/Source/fs_vol.c ****         return;
 3703              		.loc 1 856 8 is_stmt 0 view .LVU1188
 3704 0018 0446     		mov	r4, r0
 3705              	.LVL361:
 856:rtos/uC-FS/Source/fs_vol.c ****         return;
 3706              		.loc 1 856 8 view .LVU1189
 3707 001a 30B1     		cbz	r0, .L323
 863:rtos/uC-FS/Source/fs_vol.c ****                       label,
 3708              		.loc 1 863 5 is_stmt 1 view .LVU1190
 3709 001c 3246     		mov	r2, r6
 3710 001e 2946     		mov	r1, r5
 3711 0020 FFF7FEFF 		bl	FSSys_VolLabelSet
 3712              	.LVL362:
 870:rtos/uC-FS/Source/fs_vol.c **** }
 3713              		.loc 1 870 5 view .LVU1191
 3714 0024 2046     		mov	r0, r4
 3715 0026 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3716              	.LVL363:
 3717              	.L323:
 871:rtos/uC-FS/Source/fs_vol.c **** #endif
 3718              		.loc 1 871 1 is_stmt 0 view .LVU1192
 3719 002a 70BD     		pop	{r4, r5, r6, pc}
 3720              	.LVL364:
 3721              	.L329:
 840:rtos/uC-FS/Source/fs_vol.c ****     }
 3722              		.loc 1 840 9 is_stmt 1 view .LVU1193
 840:rtos/uC-FS/Source/fs_vol.c ****     }
 3723              		.loc 1 840 9 view .LVU1194
 3724 002c FFF7FEFF 		bl	CPU_SW_Exception
 3725              	.LVL365:
 840:rtos/uC-FS/Source/fs_vol.c ****     }
 3726              		.loc 1 840 9 is_stmt 0 view .LVU1195
 3727 0030 EBE7     		b	.L324
 3728              	.L330:
 843:rtos/uC-FS/Source/fs_vol.c ****         return;
 3729              		.loc 1 843 8 is_stmt 1 view .LVU1196
 843:rtos/uC-FS/Source/fs_vol.c ****         return;
 3730              		.loc 1 843 15 is_stmt 0 view .LVU1197
 3731 0032 40F28933 		movw	r3, #905
 3732 0036 3380     		strh	r3, [r6]	@ movhi
 844:rtos/uC-FS/Source/fs_vol.c ****     }
 3733              		.loc 1 844 9 is_stmt 1 view .LVU1198
 3734 0038 F7E7     		b	.L323
 3735              	.L331:
 847:rtos/uC-FS/Source/fs_vol.c ****         return;
 3736              		.loc 1 847 8 view .LVU1199
ARM GAS  /tmp/ccvXhXom.s 			page 143


 847:rtos/uC-FS/Source/fs_vol.c ****         return;
 3737              		.loc 1 847 15 is_stmt 0 view .LVU1200
 3738 003a 1323     		movs	r3, #19
 3739 003c 3380     		strh	r3, [r6]	@ movhi
 848:rtos/uC-FS/Source/fs_vol.c ****     }
 3740              		.loc 1 848 9 is_stmt 1 view .LVU1201
 3741 003e F4E7     		b	.L323
 3742              		.cfi_endproc
 3743              	.LFE4:
 3745              		.section	.text.FSVol_Query,"ax",%progbits
 3746              		.align	1
 3747              		.global	FSVol_Query
 3748              		.syntax unified
 3749              		.thumb
 3750              		.thumb_func
 3751              		.fpu fpv4-sp-d16
 3753              	FSVol_Query:
 3754              	.LVL366:
 3755              	.LFB6:
1181:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV_INFO   dev_info;
 3756              		.loc 1 1181 1 view -0
 3757              		.cfi_startproc
 3758              		@ args = 0, pretend = 0, frame = 32
 3759              		@ frame_needed = 0, uses_anonymous_args = 0
1181:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV_INFO   dev_info;
 3760              		.loc 1 1181 1 is_stmt 0 view .LVU1203
 3761 0000 70B5     		push	{r4, r5, r6, lr}
 3762              	.LCFI67:
 3763              		.cfi_def_cfa_offset 16
 3764              		.cfi_offset 4, -16
 3765              		.cfi_offset 5, -12
 3766              		.cfi_offset 6, -8
 3767              		.cfi_offset 14, -4
 3768 0002 88B0     		sub	sp, sp, #32
 3769              	.LCFI68:
 3770              		.cfi_def_cfa_offset 48
 3771 0004 0546     		mov	r5, r0
 3772 0006 0C46     		mov	r4, r1
1182:rtos/uC-FS/Source/fs_vol.c ****     FS_SYS_INFO   sys_info;
 3773              		.loc 1 1182 5 is_stmt 1 view .LVU1204
1183:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV       *p_dev;
 3774              		.loc 1 1183 5 view .LVU1205
1184:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL       *p_vol;
 3775              		.loc 1 1184 5 view .LVU1206
1185:rtos/uC-FS/Source/fs_vol.c **** 
 3776              		.loc 1 1185 5 view .LVU1207
1189:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3777              		.loc 1 1189 5 view .LVU1208
1189:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 3778              		.loc 1 1189 8 is_stmt 0 view .LVU1209
 3779 0008 1646     		mov	r6, r2
 3780 000a 22B3     		cbz	r2, .L344
 3781              	.LVL367:
 3782              	.L333:
1190:rtos/uC-FS/Source/fs_vol.c ****     }
 3783              		.loc 1 1190 9 is_stmt 1 discriminator 1 view .LVU1210
1192:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
ARM GAS  /tmp/ccvXhXom.s 			page 144


 3784              		.loc 1 1192 5 discriminator 1 view .LVU1211
1192:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 3785              		.loc 1 1192 8 is_stmt 0 discriminator 1 view .LVU1212
 3786 000c 35B3     		cbz	r5, .L345
1196:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 3787              		.loc 1 1196 5 is_stmt 1 view .LVU1213
1196:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 3788              		.loc 1 1196 8 is_stmt 0 view .LVU1214
 3789 000e 4CB3     		cbz	r4, .L346
1205:rtos/uC-FS/Source/fs_vol.c ****     p_info->DevState      = FS_DEV_STATE_CLOSED;
 3790              		.loc 1 1205 5 is_stmt 1 view .LVU1215
1205:rtos/uC-FS/Source/fs_vol.c ****     p_info->DevState      = FS_DEV_STATE_CLOSED;
 3791              		.loc 1 1205 27 is_stmt 0 view .LVU1216
 3792 0010 0021     		movs	r1, #0
 3793 0012 2180     		strh	r1, [r4]	@ movhi
1206:rtos/uC-FS/Source/fs_vol.c ****     p_info->DevSize       = 0u;
 3794              		.loc 1 1206 5 is_stmt 1 view .LVU1217
1206:rtos/uC-FS/Source/fs_vol.c ****     p_info->DevSize       = 0u;
 3795              		.loc 1 1206 27 is_stmt 0 view .LVU1218
 3796 0014 6180     		strh	r1, [r4, #2]	@ movhi
1207:rtos/uC-FS/Source/fs_vol.c ****     p_info->DevSecSize    = 0u;
 3797              		.loc 1 1207 5 is_stmt 1 view .LVU1219
1207:rtos/uC-FS/Source/fs_vol.c ****     p_info->DevSecSize    = 0u;
 3798              		.loc 1 1207 27 is_stmt 0 view .LVU1220
 3799 0016 6160     		str	r1, [r4, #4]
1208:rtos/uC-FS/Source/fs_vol.c ****     p_info->PartitionSize = 0u;
 3800              		.loc 1 1208 5 is_stmt 1 view .LVU1221
1208:rtos/uC-FS/Source/fs_vol.c ****     p_info->PartitionSize = 0u;
 3801              		.loc 1 1208 27 is_stmt 0 view .LVU1222
 3802 0018 A160     		str	r1, [r4, #8]
1209:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolBadSecCnt  = 0u;
 3803              		.loc 1 1209 5 is_stmt 1 view .LVU1223
1209:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolBadSecCnt  = 0u;
 3804              		.loc 1 1209 27 is_stmt 0 view .LVU1224
 3805 001a E160     		str	r1, [r4, #12]
1210:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolUsedSecCnt = 0u;
 3806              		.loc 1 1210 5 is_stmt 1 view .LVU1225
1210:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolUsedSecCnt = 0u;
 3807              		.loc 1 1210 27 is_stmt 0 view .LVU1226
 3808 001c 2161     		str	r1, [r4, #16]
1211:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolFreeSecCnt = 0u;
 3809              		.loc 1 1211 5 is_stmt 1 view .LVU1227
1211:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolFreeSecCnt = 0u;
 3810              		.loc 1 1211 27 is_stmt 0 view .LVU1228
 3811 001e A161     		str	r1, [r4, #24]
1212:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolTotSecCnt  = 0u;
 3812              		.loc 1 1212 5 is_stmt 1 view .LVU1229
1212:rtos/uC-FS/Source/fs_vol.c ****     p_info->VolTotSecCnt  = 0u;
 3813              		.loc 1 1212 27 is_stmt 0 view .LVU1230
 3814 0020 6161     		str	r1, [r4, #20]
1213:rtos/uC-FS/Source/fs_vol.c **** 
 3815              		.loc 1 1213 5 is_stmt 1 view .LVU1231
1213:rtos/uC-FS/Source/fs_vol.c **** 
 3816              		.loc 1 1213 27 is_stmt 0 view .LVU1232
 3817 0022 E161     		str	r1, [r4, #28]
1218:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 3818              		.loc 1 1218 5 is_stmt 1 view .LVU1233
ARM GAS  /tmp/ccvXhXom.s 			page 145


1218:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 3819              		.loc 1 1218 13 is_stmt 0 view .LVU1234
 3820 0024 3246     		mov	r2, r6
 3821 0026 2846     		mov	r0, r5
 3822 0028 FFF7FEFF 		bl	FSVol_AcquireLockChk
 3823              	.LVL368:
1219:rtos/uC-FS/Source/fs_vol.c ****         return;
 3824              		.loc 1 1219 5 is_stmt 1 view .LVU1235
1219:rtos/uC-FS/Source/fs_vol.c ****         return;
 3825              		.loc 1 1219 8 is_stmt 0 view .LVU1236
 3826 002c 0546     		mov	r5, r0
 3827              	.LVL369:
1219:rtos/uC-FS/Source/fs_vol.c ****         return;
 3828              		.loc 1 1219 8 view .LVU1237
 3829 002e 80B1     		cbz	r0, .L332
1226:rtos/uC-FS/Source/fs_vol.c ****     if ((p_vol->State == FS_VOL_STATE_PRESENT) ||
 3830              		.loc 1 1226 5 is_stmt 1 view .LVU1238
1226:rtos/uC-FS/Source/fs_vol.c ****     if ((p_vol->State == FS_VOL_STATE_PRESENT) ||
 3831              		.loc 1 1226 11 is_stmt 0 view .LVU1239
 3832 0030 006B     		ldr	r0, [r0, #48]
 3833              	.LVL370:
1227:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_MOUNTED)) {
 3834              		.loc 1 1227 5 is_stmt 1 view .LVU1240
1227:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_MOUNTED)) {
 3835              		.loc 1 1227 15 is_stmt 0 view .LVU1241
 3836 0032 2B88     		ldrh	r3, [r5]
1227:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_MOUNTED)) {
 3837              		.loc 1 1227 48 view .LVU1242
 3838 0034 043B     		subs	r3, r3, #4
 3839 0036 9BB2     		uxth	r3, r3
1227:rtos/uC-FS/Source/fs_vol.c ****         (p_vol->State == FS_VOL_STATE_MOUNTED)) {
 3840              		.loc 1 1227 8 view .LVU1243
 3841 0038 012B     		cmp	r3, #1
 3842 003a 16D9     		bls	.L347
1243:rtos/uC-FS/Source/fs_vol.c ****     }
 3843              		.loc 1 1243 9 is_stmt 1 view .LVU1244
1243:rtos/uC-FS/Source/fs_vol.c ****     }
 3844              		.loc 1 1243 35 is_stmt 0 view .LVU1245
 3845 003c 8388     		ldrh	r3, [r0, #4]
1243:rtos/uC-FS/Source/fs_vol.c ****     }
 3846              		.loc 1 1243 28 view .LVU1246
 3847 003e 6380     		strh	r3, [r4, #2]	@ movhi
 3848              	.LVL371:
 3849              	.L339:
1249:rtos/uC-FS/Source/fs_vol.c ****         p_info->State = FS_VOL_STATE_MOUNTED;
 3850              		.loc 1 1249 5 is_stmt 1 view .LVU1247
1249:rtos/uC-FS/Source/fs_vol.c ****         p_info->State = FS_VOL_STATE_MOUNTED;
 3851              		.loc 1 1249 14 is_stmt 0 view .LVU1248
 3852 0040 2B88     		ldrh	r3, [r5]
1249:rtos/uC-FS/Source/fs_vol.c ****         p_info->State = FS_VOL_STATE_MOUNTED;
 3853              		.loc 1 1249 8 view .LVU1249
 3854 0042 052B     		cmp	r3, #5
 3855 0044 26D0     		beq	.L348
1263:rtos/uC-FS/Source/fs_vol.c ****         p_info->PartitionSize = p_vol->PartitionSize;
 3856              		.loc 1 1263 9 is_stmt 1 view .LVU1250
1263:rtos/uC-FS/Source/fs_vol.c ****         p_info->PartitionSize = p_vol->PartitionSize;
 3857              		.loc 1 1263 31 is_stmt 0 view .LVU1251
ARM GAS  /tmp/ccvXhXom.s 			page 146


 3858 0046 2380     		strh	r3, [r4]	@ movhi
1264:rtos/uC-FS/Source/fs_vol.c ****     }
 3859              		.loc 1 1264 9 is_stmt 1 view .LVU1252
1264:rtos/uC-FS/Source/fs_vol.c ****     }
 3860              		.loc 1 1264 38 is_stmt 0 view .LVU1253
 3861 0048 6B6A     		ldr	r3, [r5, #36]
1264:rtos/uC-FS/Source/fs_vol.c ****     }
 3862              		.loc 1 1264 31 view .LVU1254
 3863 004a E360     		str	r3, [r4, #12]
 3864              	.L341:
1270:rtos/uC-FS/Source/fs_vol.c **** }
 3865              		.loc 1 1270 5 is_stmt 1 discriminator 1 view .LVU1255
 3866 004c 2846     		mov	r0, r5
 3867 004e FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3868              	.LVL372:
 3869              	.L332:
1271:rtos/uC-FS/Source/fs_vol.c **** 
 3870              		.loc 1 1271 1 is_stmt 0 view .LVU1256
 3871 0052 08B0     		add	sp, sp, #32
 3872              	.LCFI69:
 3873              		.cfi_remember_state
 3874              		.cfi_def_cfa_offset 16
 3875              		@ sp needed
 3876 0054 70BD     		pop	{r4, r5, r6, pc}
 3877              	.LVL373:
 3878              	.L344:
 3879              	.LCFI70:
 3880              		.cfi_restore_state
1190:rtos/uC-FS/Source/fs_vol.c ****     }
 3881              		.loc 1 1190 9 is_stmt 1 view .LVU1257
1190:rtos/uC-FS/Source/fs_vol.c ****     }
 3882              		.loc 1 1190 9 view .LVU1258
 3883 0056 FFF7FEFF 		bl	CPU_SW_Exception
 3884              	.LVL374:
1190:rtos/uC-FS/Source/fs_vol.c ****     }
 3885              		.loc 1 1190 9 is_stmt 0 view .LVU1259
 3886 005a D7E7     		b	.L333
 3887              	.L345:
1193:rtos/uC-FS/Source/fs_vol.c ****         return;
 3888              		.loc 1 1193 8 is_stmt 1 view .LVU1260
1193:rtos/uC-FS/Source/fs_vol.c ****         return;
 3889              		.loc 1 1193 15 is_stmt 0 view .LVU1261
 3890 005c 40F28933 		movw	r3, #905
 3891 0060 3380     		strh	r3, [r6]	@ movhi
1194:rtos/uC-FS/Source/fs_vol.c ****     }
 3892              		.loc 1 1194 9 is_stmt 1 view .LVU1262
 3893 0062 F6E7     		b	.L332
 3894              	.L346:
1197:rtos/uC-FS/Source/fs_vol.c ****         return;
 3895              		.loc 1 1197 8 view .LVU1263
1197:rtos/uC-FS/Source/fs_vol.c ****         return;
 3896              		.loc 1 1197 15 is_stmt 0 view .LVU1264
 3897 0064 1323     		movs	r3, #19
 3898 0066 3380     		strh	r3, [r6]	@ movhi
1198:rtos/uC-FS/Source/fs_vol.c ****     }
 3899              		.loc 1 1198 9 is_stmt 1 view .LVU1265
 3900 0068 F3E7     		b	.L332
ARM GAS  /tmp/ccvXhXom.s 			page 147


 3901              	.LVL375:
 3902              	.L347:
1229:rtos/uC-FS/Source/fs_vol.c ****                           &dev_info,
 3903              		.loc 1 1229 9 view .LVU1266
 3904 006a 3246     		mov	r2, r6
 3905 006c 04A9     		add	r1, sp, #16
 3906 006e FFF7FEFF 		bl	FSDev_QueryLocked
 3907              	.LVL376:
1232:rtos/uC-FS/Source/fs_vol.c ****             *p_err  = FS_ERR_DEV;
 3908              		.loc 1 1232 9 view .LVU1267
1232:rtos/uC-FS/Source/fs_vol.c ****             *p_err  = FS_ERR_DEV;
 3909              		.loc 1 1232 13 is_stmt 0 view .LVU1268
 3910 0072 3388     		ldrh	r3, [r6]
1232:rtos/uC-FS/Source/fs_vol.c ****             *p_err  = FS_ERR_DEV;
 3911              		.loc 1 1232 12 view .LVU1269
 3912 0074 3BB9     		cbnz	r3, .L349
1238:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevSize    = dev_info.Size;
 3913              		.loc 1 1238 9 is_stmt 1 view .LVU1270
1238:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevSize    = dev_info.Size;
 3914              		.loc 1 1238 38 is_stmt 0 view .LVU1271
 3915 0076 BDF81030 		ldrh	r3, [sp, #16]
1238:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevSize    = dev_info.Size;
 3916              		.loc 1 1238 28 view .LVU1272
 3917 007a 6380     		strh	r3, [r4, #2]	@ movhi
1239:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevSecSize = dev_info.SecSize;
 3918              		.loc 1 1239 9 is_stmt 1 view .LVU1273
1239:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevSecSize = dev_info.SecSize;
 3919              		.loc 1 1239 38 is_stmt 0 view .LVU1274
 3920 007c 059B     		ldr	r3, [sp, #20]
1239:rtos/uC-FS/Source/fs_vol.c ****         p_info->DevSecSize = dev_info.SecSize;
 3921              		.loc 1 1239 28 view .LVU1275
 3922 007e 6360     		str	r3, [r4, #4]
1240:rtos/uC-FS/Source/fs_vol.c **** 
 3923              		.loc 1 1240 9 is_stmt 1 view .LVU1276
1240:rtos/uC-FS/Source/fs_vol.c **** 
 3924              		.loc 1 1240 38 is_stmt 0 view .LVU1277
 3925 0080 069B     		ldr	r3, [sp, #24]
1240:rtos/uC-FS/Source/fs_vol.c **** 
 3926              		.loc 1 1240 28 view .LVU1278
 3927 0082 A360     		str	r3, [r4, #8]
 3928 0084 DCE7     		b	.L339
 3929              	.L349:
1233:rtos/uC-FS/Source/fs_vol.c ****              FSVol_ReleaseUnlock(p_vol);
 3930              		.loc 1 1233 13 is_stmt 1 view .LVU1279
1233:rtos/uC-FS/Source/fs_vol.c ****              FSVol_ReleaseUnlock(p_vol);
 3931              		.loc 1 1233 21 is_stmt 0 view .LVU1280
 3932 0086 4FF49673 		mov	r3, #300
 3933 008a 3380     		strh	r3, [r6]	@ movhi
1234:rtos/uC-FS/Source/fs_vol.c ****              return;
 3934              		.loc 1 1234 14 is_stmt 1 view .LVU1281
 3935 008c 2846     		mov	r0, r5
 3936 008e FFF7FEFF 		bl	FSVol_ReleaseUnlock
 3937              	.LVL377:
1235:rtos/uC-FS/Source/fs_vol.c ****         }
 3938              		.loc 1 1235 14 view .LVU1282
 3939 0092 DEE7     		b	.L332
 3940              	.L348:
ARM GAS  /tmp/ccvXhXom.s 			page 148


1250:rtos/uC-FS/Source/fs_vol.c ****         FSSys_VolQuery( p_vol,
 3941              		.loc 1 1250 9 view .LVU1283
1250:rtos/uC-FS/Source/fs_vol.c ****         FSSys_VolQuery( p_vol,
 3942              		.loc 1 1250 23 is_stmt 0 view .LVU1284
 3943 0094 2380     		strh	r3, [r4]	@ movhi
1251:rtos/uC-FS/Source/fs_vol.c ****                        &sys_info,
 3944              		.loc 1 1251 9 is_stmt 1 view .LVU1285
 3945 0096 3246     		mov	r2, r6
 3946 0098 6946     		mov	r1, sp
 3947 009a 2846     		mov	r0, r5
 3948 009c FFF7FEFF 		bl	FSSys_VolQuery
 3949              	.LVL378:
1254:rtos/uC-FS/Source/fs_vol.c ****             p_info->PartitionSize = p_vol->PartitionSize;
 3950              		.loc 1 1254 9 view .LVU1286
1254:rtos/uC-FS/Source/fs_vol.c ****             p_info->PartitionSize = p_vol->PartitionSize;
 3951              		.loc 1 1254 13 is_stmt 0 view .LVU1287
 3952 00a0 3388     		ldrh	r3, [r6]
1254:rtos/uC-FS/Source/fs_vol.c ****             p_info->PartitionSize = p_vol->PartitionSize;
 3953              		.loc 1 1254 12 view .LVU1288
 3954 00a2 002B     		cmp	r3, #0
 3955 00a4 D2D1     		bne	.L341
1255:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolBadSecCnt  = sys_info.BadSecCnt;
 3956              		.loc 1 1255 13 is_stmt 1 view .LVU1289
1255:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolBadSecCnt  = sys_info.BadSecCnt;
 3957              		.loc 1 1255 42 is_stmt 0 view .LVU1290
 3958 00a6 6B6A     		ldr	r3, [r5, #36]
1255:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolBadSecCnt  = sys_info.BadSecCnt;
 3959              		.loc 1 1255 35 view .LVU1291
 3960 00a8 E360     		str	r3, [r4, #12]
1256:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolFreeSecCnt = sys_info.FreeSecCnt;
 3961              		.loc 1 1256 13 is_stmt 1 view .LVU1292
1256:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolFreeSecCnt = sys_info.FreeSecCnt;
 3962              		.loc 1 1256 45 is_stmt 0 view .LVU1293
 3963 00aa 009B     		ldr	r3, [sp]
1256:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolFreeSecCnt = sys_info.FreeSecCnt;
 3964              		.loc 1 1256 35 view .LVU1294
 3965 00ac 2361     		str	r3, [r4, #16]
1257:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolUsedSecCnt = sys_info.UsedSecCnt;
 3966              		.loc 1 1257 13 is_stmt 1 view .LVU1295
1257:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolUsedSecCnt = sys_info.UsedSecCnt;
 3967              		.loc 1 1257 45 is_stmt 0 view .LVU1296
 3968 00ae 019B     		ldr	r3, [sp, #4]
1257:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolUsedSecCnt = sys_info.UsedSecCnt;
 3969              		.loc 1 1257 35 view .LVU1297
 3970 00b0 6361     		str	r3, [r4, #20]
1258:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolTotSecCnt  = sys_info.TotSecCnt;
 3971              		.loc 1 1258 13 is_stmt 1 view .LVU1298
1258:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolTotSecCnt  = sys_info.TotSecCnt;
 3972              		.loc 1 1258 45 is_stmt 0 view .LVU1299
 3973 00b2 029B     		ldr	r3, [sp, #8]
1258:rtos/uC-FS/Source/fs_vol.c ****             p_info->VolTotSecCnt  = sys_info.TotSecCnt;
 3974              		.loc 1 1258 35 view .LVU1300
 3975 00b4 A361     		str	r3, [r4, #24]
1259:rtos/uC-FS/Source/fs_vol.c ****         }
 3976              		.loc 1 1259 13 is_stmt 1 view .LVU1301
1259:rtos/uC-FS/Source/fs_vol.c ****         }
 3977              		.loc 1 1259 45 is_stmt 0 view .LVU1302
ARM GAS  /tmp/ccvXhXom.s 			page 149


 3978 00b6 039B     		ldr	r3, [sp, #12]
1259:rtos/uC-FS/Source/fs_vol.c ****         }
 3979              		.loc 1 1259 35 view .LVU1303
 3980 00b8 E361     		str	r3, [r4, #28]
 3981 00ba C7E7     		b	.L341
 3982              		.cfi_endproc
 3983              	.LFE6:
 3985              		.section	.text.FSVol_Rd,"ax",%progbits
 3986              		.align	1
 3987              		.global	FSVol_Rd
 3988              		.syntax unified
 3989              		.thumb
 3990              		.thumb_func
 3991              		.fpu fpv4-sp-d16
 3993              	FSVol_Rd:
 3994              	.LVL379:
 3995              	.LFB7:
1311:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 3996              		.loc 1 1311 1 is_stmt 1 view -0
 3997              		.cfi_startproc
 3998              		@ args = 4, pretend = 0, frame = 0
 3999              		@ frame_needed = 0, uses_anonymous_args = 0
1311:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 4000              		.loc 1 1311 1 is_stmt 0 view .LVU1305
 4001 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4002              	.LCFI71:
 4003              		.cfi_def_cfa_offset 24
 4004              		.cfi_offset 4, -24
 4005              		.cfi_offset 5, -20
 4006              		.cfi_offset 6, -16
 4007              		.cfi_offset 7, -12
 4008              		.cfi_offset 8, -8
 4009              		.cfi_offset 14, -4
 4010 0004 82B0     		sub	sp, sp, #8
 4011              	.LCFI72:
 4012              		.cfi_def_cfa_offset 32
 4013 0006 0446     		mov	r4, r0
 4014 0008 0D46     		mov	r5, r1
 4015 000a 9046     		mov	r8, r2
 4016 000c 1F46     		mov	r7, r3
 4017 000e 089E     		ldr	r6, [sp, #32]
1312:rtos/uC-FS/Source/fs_vol.c **** 
 4018              		.loc 1 1312 5 is_stmt 1 view .LVU1306
1316:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 4019              		.loc 1 1316 5 view .LVU1307
1316:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 4020              		.loc 1 1316 8 is_stmt 0 view .LVU1308
 4021 0010 A6B1     		cbz	r6, .L356
 4022              	.LVL380:
 4023              	.L351:
1317:rtos/uC-FS/Source/fs_vol.c ****     }
 4024              		.loc 1 1317 9 is_stmt 1 discriminator 1 view .LVU1309
1319:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 4025              		.loc 1 1319 5 discriminator 1 view .LVU1310
1319:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 4026              		.loc 1 1319 8 is_stmt 0 discriminator 1 view .LVU1311
 4027 0012 B4B1     		cbz	r4, .L357
ARM GAS  /tmp/ccvXhXom.s 			page 150


1323:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 4028              		.loc 1 1323 5 is_stmt 1 view .LVU1312
1323:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 4029              		.loc 1 1323 8 is_stmt 0 view .LVU1313
 4030 0014 CDB1     		cbz	r5, .L358
1332:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 4031              		.loc 1 1332 5 is_stmt 1 view .LVU1314
1332:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 4032              		.loc 1 1332 13 is_stmt 0 view .LVU1315
 4033 0016 3246     		mov	r2, r6
 4034 0018 0121     		movs	r1, #1
 4035 001a 2046     		mov	r0, r4
 4036 001c FFF7FEFF 		bl	FSVol_AcquireLockChk
 4037              	.LVL381:
1333:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 4038              		.loc 1 1333 5 is_stmt 1 view .LVU1316
1334:rtos/uC-FS/Source/fs_vol.c ****         return;
 4039              		.loc 1 1334 5 view .LVU1317
1334:rtos/uC-FS/Source/fs_vol.c ****         return;
 4040              		.loc 1 1334 8 is_stmt 0 view .LVU1318
 4041 0020 0446     		mov	r4, r0
 4042              	.LVL382:
1334:rtos/uC-FS/Source/fs_vol.c ****         return;
 4043              		.loc 1 1334 8 view .LVU1319
 4044 0022 40B1     		cbz	r0, .L350
1341:rtos/uC-FS/Source/fs_vol.c ****                    p_dest,
 4045              		.loc 1 1341 5 is_stmt 1 view .LVU1320
 4046 0024 0096     		str	r6, [sp]
 4047 0026 3B46     		mov	r3, r7
 4048 0028 4246     		mov	r2, r8
 4049 002a 2946     		mov	r1, r5
 4050 002c FFF7FEFF 		bl	FSVol_RdLocked
 4051              	.LVL383:
1350:rtos/uC-FS/Source/fs_vol.c **** }
 4052              		.loc 1 1350 5 view .LVU1321
 4053 0030 2046     		mov	r0, r4
 4054 0032 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 4055              	.LVL384:
 4056              	.L350:
1351:rtos/uC-FS/Source/fs_vol.c **** 
 4057              		.loc 1 1351 1 is_stmt 0 view .LVU1322
 4058 0036 02B0     		add	sp, sp, #8
 4059              	.LCFI73:
 4060              		.cfi_remember_state
 4061              		.cfi_def_cfa_offset 24
 4062              		@ sp needed
 4063 0038 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4064              	.LVL385:
 4065              	.L356:
 4066              	.LCFI74:
 4067              		.cfi_restore_state
1317:rtos/uC-FS/Source/fs_vol.c ****     }
 4068              		.loc 1 1317 9 is_stmt 1 view .LVU1323
1317:rtos/uC-FS/Source/fs_vol.c ****     }
 4069              		.loc 1 1317 9 view .LVU1324
 4070 003c FFF7FEFF 		bl	CPU_SW_Exception
 4071              	.LVL386:
ARM GAS  /tmp/ccvXhXom.s 			page 151


1317:rtos/uC-FS/Source/fs_vol.c ****     }
 4072              		.loc 1 1317 9 is_stmt 0 view .LVU1325
 4073 0040 E7E7     		b	.L351
 4074              	.L357:
1320:rtos/uC-FS/Source/fs_vol.c ****         return;
 4075              		.loc 1 1320 8 is_stmt 1 view .LVU1326
1320:rtos/uC-FS/Source/fs_vol.c ****         return;
 4076              		.loc 1 1320 15 is_stmt 0 view .LVU1327
 4077 0042 40F28933 		movw	r3, #905
 4078 0046 3380     		strh	r3, [r6]	@ movhi
1321:rtos/uC-FS/Source/fs_vol.c ****     }
 4079              		.loc 1 1321 9 is_stmt 1 view .LVU1328
 4080 0048 F5E7     		b	.L350
 4081              	.L358:
1324:rtos/uC-FS/Source/fs_vol.c ****         return;
 4082              		.loc 1 1324 8 view .LVU1329
1324:rtos/uC-FS/Source/fs_vol.c ****         return;
 4083              		.loc 1 1324 15 is_stmt 0 view .LVU1330
 4084 004a 1323     		movs	r3, #19
 4085 004c 3380     		strh	r3, [r6]	@ movhi
1325:rtos/uC-FS/Source/fs_vol.c ****     }
 4086              		.loc 1 1325 9 is_stmt 1 view .LVU1331
 4087 004e F2E7     		b	.L350
 4088              		.cfi_endproc
 4089              	.LFE7:
 4091              		.section	.text.FSVol_ReleaseLocked,"ax",%progbits
 4092              		.align	1
 4093              		.global	FSVol_ReleaseLocked
 4094              		.syntax unified
 4095              		.thumb
 4096              		.thumb_func
 4097              		.fpu fpv4-sp-d16
 4099              	FSVol_ReleaseLocked:
 4100              	.LVL387:
 4101              	.LFB27:
2692:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_QTY  size;
 4102              		.loc 1 2692 1 view -0
 4103              		.cfi_startproc
 4104              		@ args = 0, pretend = 0, frame = 0
 4105              		@ frame_needed = 0, uses_anonymous_args = 0
2692:rtos/uC-FS/Source/fs_vol.c ****     FS_SEC_QTY  size;
 4106              		.loc 1 2692 1 is_stmt 0 view .LVU1333
 4107 0000 38B5     		push	{r3, r4, r5, lr}
 4108              	.LCFI75:
 4109              		.cfi_def_cfa_offset 16
 4110              		.cfi_offset 3, -16
 4111              		.cfi_offset 4, -12
 4112              		.cfi_offset 5, -8
 4113              		.cfi_offset 14, -4
2693:rtos/uC-FS/Source/fs_vol.c **** 
 4114              		.loc 1 2693 5 is_stmt 1 view .LVU1334
2697:rtos/uC-FS/Source/fs_vol.c ****     if (start > size) {                                         /* Validate start.                 
 4115              		.loc 1 2697 5 view .LVU1335
2697:rtos/uC-FS/Source/fs_vol.c ****     if (start > size) {                                         /* Validate start.                 
 4116              		.loc 1 2697 10 is_stmt 0 view .LVU1336
 4117 0002 446A     		ldr	r4, [r0, #36]
 4118              	.LVL388:
ARM GAS  /tmp/ccvXhXom.s 			page 152


2698:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4119              		.loc 1 2698 5 is_stmt 1 view .LVU1337
2698:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4120              		.loc 1 2698 8 is_stmt 0 view .LVU1338
 4121 0004 8C42     		cmp	r4, r1
 4122 0006 07D3     		bcc	.L364
2702:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4123              		.loc 1 2702 5 is_stmt 1 view .LVU1339
2702:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4124              		.loc 1 2702 15 is_stmt 0 view .LVU1340
 4125 0008 8D18     		adds	r5, r1, r2
2702:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4126              		.loc 1 2702 21 view .LVU1341
 4127 000a 013D     		subs	r5, r5, #1
2702:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4128              		.loc 1 2702 8 view .LVU1342
 4129 000c A542     		cmp	r5, r4
 4130 000e 07D9     		bls	.L362
2703:rtos/uC-FS/Source/fs_vol.c ****         return;
 4131              		.loc 1 2703 8 is_stmt 1 view .LVU1343
2703:rtos/uC-FS/Source/fs_vol.c ****         return;
 4132              		.loc 1 2703 15 is_stmt 0 view .LVU1344
 4133 0010 40F27E52 		movw	r2, #1406
 4134              	.LVL389:
2703:rtos/uC-FS/Source/fs_vol.c ****         return;
 4135              		.loc 1 2703 15 view .LVU1345
 4136 0014 1A80     		strh	r2, [r3]	@ movhi
2704:rtos/uC-FS/Source/fs_vol.c ****     }
 4137              		.loc 1 2704 9 is_stmt 1 view .LVU1346
 4138 0016 02E0     		b	.L359
 4139              	.LVL390:
 4140              	.L364:
2699:rtos/uC-FS/Source/fs_vol.c ****         return;
 4141              		.loc 1 2699 8 view .LVU1347
2699:rtos/uC-FS/Source/fs_vol.c ****         return;
 4142              		.loc 1 2699 15 is_stmt 0 view .LVU1348
 4143 0018 40F27E52 		movw	r2, #1406
 4144              	.LVL391:
2699:rtos/uC-FS/Source/fs_vol.c ****         return;
 4145              		.loc 1 2699 15 view .LVU1349
 4146 001c 1A80     		strh	r2, [r3]	@ movhi
2700:rtos/uC-FS/Source/fs_vol.c ****     }
 4147              		.loc 1 2700 9 is_stmt 1 view .LVU1350
 4148              	.LVL392:
 4149              	.L359:
2726:rtos/uC-FS/Source/fs_vol.c **** #endif
 4150              		.loc 1 2726 1 is_stmt 0 view .LVU1351
 4151 001e 38BD     		pop	{r3, r4, r5, pc}
 4152              	.LVL393:
 4153              	.L362:
2721:rtos/uC-FS/Source/fs_vol.c ****     FSDev_ReleaseLocked(p_vol->DevPtr,
 4154              		.loc 1 2721 5 is_stmt 1 view .LVU1352
2721:rtos/uC-FS/Source/fs_vol.c ****     FSDev_ReleaseLocked(p_vol->DevPtr,
 4155              		.loc 1 2721 19 is_stmt 0 view .LVU1353
 4156 0020 046A     		ldr	r4, [r0, #32]
 4157              	.LVL394:
2722:rtos/uC-FS/Source/fs_vol.c ****                         start,
ARM GAS  /tmp/ccvXhXom.s 			page 153


 4158              		.loc 1 2722 5 is_stmt 1 view .LVU1354
 4159 0022 2144     		add	r1, r1, r4
 4160              	.LVL395:
2722:rtos/uC-FS/Source/fs_vol.c ****                         start,
 4161              		.loc 1 2722 5 is_stmt 0 view .LVU1355
 4162 0024 006B     		ldr	r0, [r0, #48]
 4163              	.LVL396:
2722:rtos/uC-FS/Source/fs_vol.c ****                         start,
 4164              		.loc 1 2722 5 view .LVU1356
 4165 0026 FFF7FEFF 		bl	FSDev_ReleaseLocked
 4166              	.LVL397:
2722:rtos/uC-FS/Source/fs_vol.c ****                         start,
 4167              		.loc 1 2722 5 view .LVU1357
 4168 002a F8E7     		b	.L359
 4169              		.cfi_endproc
 4170              	.LFE27:
 4172              		.section	.text.FSVol_WrLocked,"ax",%progbits
 4173              		.align	1
 4174              		.global	FSVol_WrLocked
 4175              		.syntax unified
 4176              		.thumb
 4177              		.thumb_func
 4178              		.fpu fpv4-sp-d16
 4180              	FSVol_WrLocked:
 4181              	.LVL398:
 4182              	.LFB28:
2770:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV      *p_dev;
 4183              		.loc 1 2770 1 is_stmt 1 view -0
 4184              		.cfi_startproc
 4185              		@ args = 4, pretend = 0, frame = 0
 4186              		@ frame_needed = 0, uses_anonymous_args = 0
2770:rtos/uC-FS/Source/fs_vol.c ****     FS_DEV      *p_dev;
 4187              		.loc 1 2770 1 is_stmt 0 view .LVU1359
 4188 0000 70B5     		push	{r4, r5, r6, lr}
 4189              	.LCFI76:
 4190              		.cfi_def_cfa_offset 16
 4191              		.cfi_offset 4, -16
 4192              		.cfi_offset 5, -12
 4193              		.cfi_offset 6, -8
 4194              		.cfi_offset 14, -4
 4195 0002 82B0     		sub	sp, sp, #8
 4196              	.LCFI77:
 4197              		.cfi_def_cfa_offset 24
 4198 0004 0446     		mov	r4, r0
2771:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
 4199              		.loc 1 2771 5 is_stmt 1 view .LVU1360
2773:rtos/uC-FS/Source/fs_vol.c **** #endif
 4200              		.loc 1 2773 5 view .LVU1361
2778:rtos/uC-FS/Source/fs_vol.c **** 
 4201              		.loc 1 2778 5 view .LVU1362
2778:rtos/uC-FS/Source/fs_vol.c **** 
 4202              		.loc 1 2778 11 is_stmt 0 view .LVU1363
 4203 0006 006B     		ldr	r0, [r0, #48]
 4204              	.LVL399:
2781:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
 4205              		.loc 1 2781 5 is_stmt 1 view .LVU1364
2781:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
ARM GAS  /tmp/ccvXhXom.s 			page 154


 4206              		.loc 1 2781 11 is_stmt 0 view .LVU1365
 4207 0008 656A     		ldr	r5, [r4, #36]
 4208              	.LVL400:
2782:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4209              		.loc 1 2782 5 is_stmt 1 view .LVU1366
2782:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4210              		.loc 1 2782 15 is_stmt 0 view .LVU1367
 4211 000a D618     		adds	r6, r2, r3
2782:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4212              		.loc 1 2782 8 view .LVU1368
 4213 000c AE42     		cmp	r6, r5
 4214 000e 05D9     		bls	.L366
2783:rtos/uC-FS/Source/fs_vol.c ****         return;
 4215              		.loc 1 2783 8 is_stmt 1 view .LVU1369
2783:rtos/uC-FS/Source/fs_vol.c ****         return;
 4216              		.loc 1 2783 15 is_stmt 0 view .LVU1370
 4217 0010 40F27E53 		movw	r3, #1406
 4218              	.LVL401:
2783:rtos/uC-FS/Source/fs_vol.c ****         return;
 4219              		.loc 1 2783 15 view .LVU1371
 4220 0014 069A     		ldr	r2, [sp, #24]
 4221              	.LVL402:
2783:rtos/uC-FS/Source/fs_vol.c ****         return;
 4222              		.loc 1 2783 15 view .LVU1372
 4223 0016 1380     		strh	r3, [r2]	@ movhi
2784:rtos/uC-FS/Source/fs_vol.c ****     }
 4224              		.loc 1 2784 9 is_stmt 1 view .LVU1373
 4225              	.LVL403:
 4226              	.L365:
2803:rtos/uC-FS/Source/fs_vol.c **** #endif
 4227              		.loc 1 2803 1 is_stmt 0 view .LVU1374
 4228 0018 02B0     		add	sp, sp, #8
 4229              	.LCFI78:
 4230              		.cfi_remember_state
 4231              		.cfi_def_cfa_offset 16
 4232              		@ sp needed
 4233 001a 70BD     		pop	{r4, r5, r6, pc}
 4234              	.LVL404:
 4235              	.L366:
 4236              	.LCFI79:
 4237              		.cfi_restore_state
2788:rtos/uC-FS/Source/fs_vol.c **** 
 4238              		.loc 1 2788 5 is_stmt 1 view .LVU1375
2788:rtos/uC-FS/Source/fs_vol.c **** 
 4239              		.loc 1 2788 19 is_stmt 0 view .LVU1376
 4240 001c 246A     		ldr	r4, [r4, #32]
 4241              	.LVL405:
2793:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
 4242              		.loc 1 2793 5 is_stmt 1 view .LVU1377
 4243 001e 069D     		ldr	r5, [sp, #24]
 4244              	.LVL406:
2793:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
 4245              		.loc 1 2793 5 is_stmt 0 view .LVU1378
 4246 0020 0095     		str	r5, [sp]
 4247              	.LVL407:
2793:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
 4248              		.loc 1 2793 5 view .LVU1379
ARM GAS  /tmp/ccvXhXom.s 			page 155


 4249 0022 2244     		add	r2, r2, r4
 4250              	.LVL408:
2793:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
 4251              		.loc 1 2793 5 view .LVU1380
 4252 0024 FFF7FEFF 		bl	FSDev_WrLocked
 4253              	.LVL409:
2802:rtos/uC-FS/Source/fs_vol.c **** }
 4254              		.loc 1 2802 54 is_stmt 1 view .LVU1381
 4255 0028 F6E7     		b	.L365
 4256              		.cfi_endproc
 4257              	.LFE28:
 4259              		.section	.text.FSVol_Wr,"ax",%progbits
 4260              		.align	1
 4261              		.global	FSVol_Wr
 4262              		.syntax unified
 4263              		.thumb
 4264              		.thumb_func
 4265              		.fpu fpv4-sp-d16
 4267              	FSVol_Wr:
 4268              	.LVL410:
 4269              	.LFB9:
1501:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 4270              		.loc 1 1501 1 view -0
 4271              		.cfi_startproc
 4272              		@ args = 4, pretend = 0, frame = 0
 4273              		@ frame_needed = 0, uses_anonymous_args = 0
1501:rtos/uC-FS/Source/fs_vol.c ****     FS_VOL  *p_vol;
 4274              		.loc 1 1501 1 is_stmt 0 view .LVU1383
 4275 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4276              	.LCFI80:
 4277              		.cfi_def_cfa_offset 24
 4278              		.cfi_offset 4, -24
 4279              		.cfi_offset 5, -20
 4280              		.cfi_offset 6, -16
 4281              		.cfi_offset 7, -12
 4282              		.cfi_offset 8, -8
 4283              		.cfi_offset 14, -4
 4284 0004 82B0     		sub	sp, sp, #8
 4285              	.LCFI81:
 4286              		.cfi_def_cfa_offset 32
 4287 0006 0446     		mov	r4, r0
 4288 0008 0D46     		mov	r5, r1
 4289 000a 9046     		mov	r8, r2
 4290 000c 1F46     		mov	r7, r3
 4291 000e 089E     		ldr	r6, [sp, #32]
1502:rtos/uC-FS/Source/fs_vol.c **** 
 4292              		.loc 1 1502 5 is_stmt 1 view .LVU1384
1506:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 4293              		.loc 1 1506 5 view .LVU1385
1506:rtos/uC-FS/Source/fs_vol.c ****         CPU_SW_EXCEPTION(;);
 4294              		.loc 1 1506 8 is_stmt 0 view .LVU1386
 4295 0010 C6B1     		cbz	r6, .L376
 4296              	.LVL411:
 4297              	.L370:
1507:rtos/uC-FS/Source/fs_vol.c ****     }
 4298              		.loc 1 1507 9 is_stmt 1 discriminator 1 view .LVU1387
1509:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
ARM GAS  /tmp/ccvXhXom.s 			page 156


 4299              		.loc 1 1509 5 discriminator 1 view .LVU1388
1509:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NAME_NULL;
 4300              		.loc 1 1509 8 is_stmt 0 discriminator 1 view .LVU1389
 4301 0012 D4B1     		cbz	r4, .L377
1513:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 4302              		.loc 1 1513 5 is_stmt 1 view .LVU1390
1513:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_NULL_PTR;
 4303              		.loc 1 1513 8 is_stmt 0 view .LVU1391
 4304 0014 EDB1     		cbz	r5, .L378
1522:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 4305              		.loc 1 1522 5 is_stmt 1 view .LVU1392
1522:rtos/uC-FS/Source/fs_vol.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 4306              		.loc 1 1522 13 is_stmt 0 view .LVU1393
 4307 0016 3246     		mov	r2, r6
 4308 0018 0121     		movs	r1, #1
 4309 001a 2046     		mov	r0, r4
 4310 001c FFF7FEFF 		bl	FSVol_AcquireLockChk
 4311              	.LVL412:
1523:rtos/uC-FS/Source/fs_vol.c ****     if (p_vol == (FS_VOL *)0) {
 4312              		.loc 1 1523 5 is_stmt 1 view .LVU1394
1524:rtos/uC-FS/Source/fs_vol.c ****         return;
 4313              		.loc 1 1524 5 view .LVU1395
1524:rtos/uC-FS/Source/fs_vol.c ****         return;
 4314              		.loc 1 1524 8 is_stmt 0 view .LVU1396
 4315 0020 0446     		mov	r4, r0
 4316              	.LVL413:
1524:rtos/uC-FS/Source/fs_vol.c ****         return;
 4317              		.loc 1 1524 8 view .LVU1397
 4318 0022 60B1     		cbz	r0, .L369
1529:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 4319              		.loc 1 1529 5 is_stmt 1 view .LVU1398
1529:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 4320              		.loc 1 1529 9 is_stmt 0 view .LVU1399
 4321 0024 C368     		ldr	r3, [r0, #12]
1529:rtos/uC-FS/Source/fs_vol.c ****         FSVol_ReleaseUnlock(p_vol);
 4322              		.loc 1 1529 8 view .LVU1400
 4323 0026 13F0020F 		tst	r3, #2
 4324 002a 15D0     		beq	.L379
1538:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
 4325              		.loc 1 1538 5 is_stmt 1 view .LVU1401
 4326 002c 0096     		str	r6, [sp]
 4327 002e 3B46     		mov	r3, r7
 4328 0030 4246     		mov	r2, r8
 4329 0032 2946     		mov	r1, r5
 4330 0034 FFF7FEFF 		bl	FSVol_WrLocked
 4331              	.LVL414:
1547:rtos/uC-FS/Source/fs_vol.c **** }
 4332              		.loc 1 1547 5 view .LVU1402
 4333 0038 2046     		mov	r0, r4
 4334 003a FFF7FEFF 		bl	FSVol_ReleaseUnlock
 4335              	.LVL415:
 4336              	.L369:
1548:rtos/uC-FS/Source/fs_vol.c **** #endif
 4337              		.loc 1 1548 1 is_stmt 0 view .LVU1403
 4338 003e 02B0     		add	sp, sp, #8
 4339              	.LCFI82:
 4340              		.cfi_remember_state
ARM GAS  /tmp/ccvXhXom.s 			page 157


 4341              		.cfi_def_cfa_offset 24
 4342              		@ sp needed
 4343 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4344              	.LVL416:
 4345              	.L376:
 4346              	.LCFI83:
 4347              		.cfi_restore_state
1507:rtos/uC-FS/Source/fs_vol.c ****     }
 4348              		.loc 1 1507 9 is_stmt 1 view .LVU1404
1507:rtos/uC-FS/Source/fs_vol.c ****     }
 4349              		.loc 1 1507 9 view .LVU1405
 4350 0044 FFF7FEFF 		bl	CPU_SW_Exception
 4351              	.LVL417:
1507:rtos/uC-FS/Source/fs_vol.c ****     }
 4352              		.loc 1 1507 9 is_stmt 0 view .LVU1406
 4353 0048 E3E7     		b	.L370
 4354              	.L377:
1510:rtos/uC-FS/Source/fs_vol.c ****         return;
 4355              		.loc 1 1510 8 is_stmt 1 view .LVU1407
1510:rtos/uC-FS/Source/fs_vol.c ****         return;
 4356              		.loc 1 1510 15 is_stmt 0 view .LVU1408
 4357 004a 40F28933 		movw	r3, #905
 4358 004e 3380     		strh	r3, [r6]	@ movhi
1511:rtos/uC-FS/Source/fs_vol.c ****     }
 4359              		.loc 1 1511 9 is_stmt 1 view .LVU1409
 4360 0050 F5E7     		b	.L369
 4361              	.L378:
1514:rtos/uC-FS/Source/fs_vol.c ****         return;
 4362              		.loc 1 1514 8 view .LVU1410
1514:rtos/uC-FS/Source/fs_vol.c ****         return;
 4363              		.loc 1 1514 15 is_stmt 0 view .LVU1411
 4364 0052 1323     		movs	r3, #19
 4365 0054 3380     		strh	r3, [r6]	@ movhi
1515:rtos/uC-FS/Source/fs_vol.c ****     }
 4366              		.loc 1 1515 9 is_stmt 1 view .LVU1412
 4367 0056 F2E7     		b	.L369
 4368              	.LVL418:
 4369              	.L379:
1530:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
 4370              		.loc 1 1530 9 view .LVU1413
 4371 0058 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 4372              	.LVL419:
1531:rtos/uC-FS/Source/fs_vol.c ****         return;
 4373              		.loc 1 1531 8 view .LVU1414
1531:rtos/uC-FS/Source/fs_vol.c ****         return;
 4374              		.loc 1 1531 15 is_stmt 0 view .LVU1415
 4375 005c 40F27D53 		movw	r3, #1405
 4376 0060 3380     		strh	r3, [r6]	@ movhi
1532:rtos/uC-FS/Source/fs_vol.c ****     }
 4377              		.loc 1 1532 9 is_stmt 1 view .LVU1416
 4378 0062 ECE7     		b	.L369
 4379              		.cfi_endproc
 4380              	.LFE9:
 4382              		.section	.text.FSVol_WrLockedEx,"ax",%progbits
 4383              		.align	1
 4384              		.global	FSVol_WrLockedEx
 4385              		.syntax unified
ARM GAS  /tmp/ccvXhXom.s 			page 158


 4386              		.thumb
 4387              		.thumb_func
 4388              		.fpu fpv4-sp-d16
 4390              	FSVol_WrLockedEx:
 4391              	.LVL420:
 4392              	.LFB29:
2848:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
 4393              		.loc 1 2848 1 view -0
 4394              		.cfi_startproc
 4395              		@ args = 8, pretend = 0, frame = 0
 4396              		@ frame_needed = 0, uses_anonymous_args = 0
2848:rtos/uC-FS/Source/fs_vol.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
 4397              		.loc 1 2848 1 is_stmt 0 view .LVU1418
 4398 0000 70B5     		push	{r4, r5, r6, lr}
 4399              	.LCFI84:
 4400              		.cfi_def_cfa_offset 16
 4401              		.cfi_offset 4, -16
 4402              		.cfi_offset 5, -12
 4403              		.cfi_offset 6, -8
 4404              		.cfi_offset 14, -4
 4405 0002 82B0     		sub	sp, sp, #8
 4406              	.LCFI85:
 4407              		.cfi_def_cfa_offset 24
2850:rtos/uC-FS/Source/fs_vol.c **** #endif
 4408              		.loc 1 2850 5 is_stmt 1 view .LVU1419
2854:rtos/uC-FS/Source/fs_vol.c ****                                                                 /* ------------------ VALIDATE ARGS
 4409              		.loc 1 2854 5 view .LVU1420
2857:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
 4410              		.loc 1 2857 5 view .LVU1421
2857:rtos/uC-FS/Source/fs_vol.c ****     if (start + cnt > size) {                                   /* Validate start & cnt.           
 4411              		.loc 1 2857 10 is_stmt 0 view .LVU1422
 4412 0004 446A     		ldr	r4, [r0, #36]
 4413              	.LVL421:
2858:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4414              		.loc 1 2858 5 is_stmt 1 view .LVU1423
2858:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4415              		.loc 1 2858 15 is_stmt 0 view .LVU1424
 4416 0006 D518     		adds	r5, r2, r3
2858:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 4417              		.loc 1 2858 8 view .LVU1425
 4418 0008 A542     		cmp	r5, r4
 4419 000a 0AD8     		bhi	.L385
2865:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_CHNGD;                               /* cannot continue, return with err
 4420              		.loc 1 2865 5 is_stmt 1 view .LVU1426
2865:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_CHNGD;                               /* cannot continue, return with err
 4421              		.loc 1 2865 14 is_stmt 0 view .LVU1427
 4422 000c 8668     		ldr	r6, [r0, #8]
2865:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_CHNGD;                               /* cannot continue, return with err
 4423              		.loc 1 2865 35 view .LVU1428
 4424 000e 046B     		ldr	r4, [r0, #48]
 4425              	.LVL422:
2865:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_CHNGD;                               /* cannot continue, return with err
 4426              		.loc 1 2865 43 view .LVU1429
 4427 0010 E568     		ldr	r5, [r4, #12]
2865:rtos/uC-FS/Source/fs_vol.c ****        *p_err = FS_ERR_DEV_CHNGD;                               /* cannot continue, return with err
 4428              		.loc 1 2865 8 view .LVU1430
 4429 0012 AE42     		cmp	r6, r5
ARM GAS  /tmp/ccvXhXom.s 			page 159


 4430 0014 0AD0     		beq	.L383
2866:rtos/uC-FS/Source/fs_vol.c ****         return;
 4431              		.loc 1 2866 8 is_stmt 1 view .LVU1431
2866:rtos/uC-FS/Source/fs_vol.c ****         return;
 4432              		.loc 1 2866 15 is_stmt 0 view .LVU1432
 4433 0016 4FF49773 		mov	r3, #302
 4434              	.LVL423:
2866:rtos/uC-FS/Source/fs_vol.c ****         return;
 4435              		.loc 1 2866 15 view .LVU1433
 4436 001a 079A     		ldr	r2, [sp, #28]
 4437              	.LVL424:
2866:rtos/uC-FS/Source/fs_vol.c ****         return;
 4438              		.loc 1 2866 15 view .LVU1434
 4439 001c 1380     		strh	r3, [r2]	@ movhi
 4440              	.LVL425:
2867:rtos/uC-FS/Source/fs_vol.c ****     }
 4441              		.loc 1 2867 9 is_stmt 1 view .LVU1435
 4442              	.L380:
2898:rtos/uC-FS/Source/fs_vol.c **** #endif
 4443              		.loc 1 2898 1 is_stmt 0 view .LVU1436
 4444 001e 02B0     		add	sp, sp, #8
 4445              	.LCFI86:
 4446              		.cfi_remember_state
 4447              		.cfi_def_cfa_offset 16
 4448              		@ sp needed
 4449 0020 70BD     		pop	{r4, r5, r6, pc}
 4450              	.LVL426:
 4451              	.L385:
 4452              	.LCFI87:
 4453              		.cfi_restore_state
2859:rtos/uC-FS/Source/fs_vol.c ****         return;
 4454              		.loc 1 2859 8 is_stmt 1 view .LVU1437
2859:rtos/uC-FS/Source/fs_vol.c ****         return;
 4455              		.loc 1 2859 15 is_stmt 0 view .LVU1438
 4456 0022 40F27E53 		movw	r3, #1406
 4457              	.LVL427:
2859:rtos/uC-FS/Source/fs_vol.c ****         return;
 4458              		.loc 1 2859 15 view .LVU1439
 4459 0026 079A     		ldr	r2, [sp, #28]
 4460              	.LVL428:
2859:rtos/uC-FS/Source/fs_vol.c ****         return;
 4461              		.loc 1 2859 15 view .LVU1440
 4462 0028 1380     		strh	r3, [r2]	@ movhi
2860:rtos/uC-FS/Source/fs_vol.c ****     }
 4463              		.loc 1 2860 9 is_stmt 1 view .LVU1441
 4464 002a F8E7     		b	.L380
 4465              	.LVL429:
 4466              	.L383:
2887:rtos/uC-FS/Source/fs_vol.c ****     FSDev_WrLocked(p_vol->DevPtr,
 4467              		.loc 1 2887 5 view .LVU1442
2887:rtos/uC-FS/Source/fs_vol.c ****     FSDev_WrLocked(p_vol->DevPtr,
 4468              		.loc 1 2887 19 is_stmt 0 view .LVU1443
 4469 002c 006A     		ldr	r0, [r0, #32]
 4470              	.LVL430:
2888:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
 4471              		.loc 1 2888 5 is_stmt 1 view .LVU1444
 4472 002e 079D     		ldr	r5, [sp, #28]
ARM GAS  /tmp/ccvXhXom.s 			page 160


 4473 0030 0095     		str	r5, [sp]
 4474              	.LVL431:
2888:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
 4475              		.loc 1 2888 5 is_stmt 0 view .LVU1445
 4476 0032 0244     		add	r2, r2, r0
 4477              	.LVL432:
2888:rtos/uC-FS/Source/fs_vol.c ****                    p_src,
 4478              		.loc 1 2888 5 view .LVU1446
 4479 0034 2046     		mov	r0, r4
 4480 0036 FFF7FEFF 		bl	FSDev_WrLocked
 4481              	.LVL433:
2897:rtos/uC-FS/Source/fs_vol.c **** }
 4482              		.loc 1 2897 54 is_stmt 1 view .LVU1447
 4483 003a F0E7     		b	.L380
 4484              		.cfi_endproc
 4485              	.LFE29:
 4487              		.section	.text.FSVol_DirAdd,"ax",%progbits
 4488              		.align	1
 4489              		.global	FSVol_DirAdd
 4490              		.syntax unified
 4491              		.thumb
 4492              		.thumb_func
 4493              		.fpu fpv4-sp-d16
 4495              	FSVol_DirAdd:
 4496              	.LVL434:
 4497              	.LFB30:
2923:rtos/uC-FS/Source/fs_vol.c ****    (void)p_dir;                                                 /*lint --e{550} Suppress "Symbol no
 4498              		.loc 1 2923 1 view -0
 4499              		.cfi_startproc
 4500              		@ args = 0, pretend = 0, frame = 0
 4501              		@ frame_needed = 0, uses_anonymous_args = 0
 4502              		@ link register save eliminated.
2924:rtos/uC-FS/Source/fs_vol.c **** 
 4503              		.loc 1 2924 4 view .LVU1449
2926:rtos/uC-FS/Source/fs_vol.c **** }
 4504              		.loc 1 2926 5 view .LVU1450
2926:rtos/uC-FS/Source/fs_vol.c **** }
 4505              		.loc 1 2926 10 is_stmt 0 view .LVU1451
 4506 0000 C38D     		ldrh	r3, [r0, #46]
2926:rtos/uC-FS/Source/fs_vol.c **** }
 4507              		.loc 1 2926 18 view .LVU1452
 4508 0002 0133     		adds	r3, r3, #1
 4509 0004 C385     		strh	r3, [r0, #46]	@ movhi
2927:rtos/uC-FS/Source/fs_vol.c **** #endif
 4510              		.loc 1 2927 1 view .LVU1453
 4511 0006 7047     		bx	lr
 4512              		.cfi_endproc
 4513              	.LFE30:
 4515              		.section	.text.FSVol_DirRemove,"ax",%progbits
 4516              		.align	1
 4517              		.global	FSVol_DirRemove
 4518              		.syntax unified
 4519              		.thumb
 4520              		.thumb_func
 4521              		.fpu fpv4-sp-d16
 4523              	FSVol_DirRemove:
 4524              	.LVL435:
ARM GAS  /tmp/ccvXhXom.s 			page 161


 4525              	.LFB31:
2952:rtos/uC-FS/Source/fs_vol.c ****    (void)p_dir;                                                 /*lint --e{550} Suppress "Symbol no
 4526              		.loc 1 2952 1 is_stmt 1 view -0
 4527              		.cfi_startproc
 4528              		@ args = 0, pretend = 0, frame = 0
 4529              		@ frame_needed = 0, uses_anonymous_args = 0
 4530              		@ link register save eliminated.
2953:rtos/uC-FS/Source/fs_vol.c **** 
 4531              		.loc 1 2953 4 view .LVU1455
2955:rtos/uC-FS/Source/fs_vol.c ****         p_vol->DirCnt--;
 4532              		.loc 1 2955 5 view .LVU1456
2955:rtos/uC-FS/Source/fs_vol.c ****         p_vol->DirCnt--;
 4533              		.loc 1 2955 14 is_stmt 0 view .LVU1457
 4534 0000 C38D     		ldrh	r3, [r0, #46]
2955:rtos/uC-FS/Source/fs_vol.c ****         p_vol->DirCnt--;
 4535              		.loc 1 2955 8 view .LVU1458
 4536 0002 0BB1     		cbz	r3, .L387
2956:rtos/uC-FS/Source/fs_vol.c ****     }
 4537              		.loc 1 2956 9 is_stmt 1 view .LVU1459
2956:rtos/uC-FS/Source/fs_vol.c ****     }
 4538              		.loc 1 2956 22 is_stmt 0 view .LVU1460
 4539 0004 013B     		subs	r3, r3, #1
 4540 0006 C385     		strh	r3, [r0, #46]	@ movhi
 4541              	.L387:
2958:rtos/uC-FS/Source/fs_vol.c **** #endif
 4542              		.loc 1 2958 1 view .LVU1461
 4543 0008 7047     		bx	lr
 4544              		.cfi_endproc
 4545              	.LFE31:
 4547              		.section	.text.FSVol_FileAdd,"ax",%progbits
 4548              		.align	1
 4549              		.global	FSVol_FileAdd
 4550              		.syntax unified
 4551              		.thumb
 4552              		.thumb_func
 4553              		.fpu fpv4-sp-d16
 4555              	FSVol_FileAdd:
 4556              	.LVL436:
 4557              	.LFB32:
2982:rtos/uC-FS/Source/fs_vol.c ****    (void)p_file;                                                /*lint --e{550} Suppress "Symbol no
 4558              		.loc 1 2982 1 is_stmt 1 view -0
 4559              		.cfi_startproc
 4560              		@ args = 0, pretend = 0, frame = 0
 4561              		@ frame_needed = 0, uses_anonymous_args = 0
 4562              		@ link register save eliminated.
2983:rtos/uC-FS/Source/fs_vol.c **** 
 4563              		.loc 1 2983 4 view .LVU1463
2985:rtos/uC-FS/Source/fs_vol.c **** }
 4564              		.loc 1 2985 5 view .LVU1464
2985:rtos/uC-FS/Source/fs_vol.c **** }
 4565              		.loc 1 2985 10 is_stmt 0 view .LVU1465
 4566 0000 838D     		ldrh	r3, [r0, #44]
2985:rtos/uC-FS/Source/fs_vol.c **** }
 4567              		.loc 1 2985 19 view .LVU1466
 4568 0002 0133     		adds	r3, r3, #1
 4569 0004 8385     		strh	r3, [r0, #44]	@ movhi
2986:rtos/uC-FS/Source/fs_vol.c **** 
ARM GAS  /tmp/ccvXhXom.s 			page 162


 4570              		.loc 1 2986 1 view .LVU1467
 4571 0006 7047     		bx	lr
 4572              		.cfi_endproc
 4573              	.LFE32:
 4575              		.section	.text.FSVol_FileRemove,"ax",%progbits
 4576              		.align	1
 4577              		.global	FSVol_FileRemove
 4578              		.syntax unified
 4579              		.thumb
 4580              		.thumb_func
 4581              		.fpu fpv4-sp-d16
 4583              	FSVol_FileRemove:
 4584              	.LVL437:
 4585              	.LFB33:
3009:rtos/uC-FS/Source/fs_vol.c ****    (void)p_file;                                                /*lint --e{550} Suppress "Symbol no
 4586              		.loc 1 3009 1 is_stmt 1 view -0
 4587              		.cfi_startproc
 4588              		@ args = 0, pretend = 0, frame = 0
 4589              		@ frame_needed = 0, uses_anonymous_args = 0
 4590              		@ link register save eliminated.
3010:rtos/uC-FS/Source/fs_vol.c **** 
 4591              		.loc 1 3010 4 view .LVU1469
3012:rtos/uC-FS/Source/fs_vol.c ****         p_vol->FileCnt--;
 4592              		.loc 1 3012 5 view .LVU1470
3012:rtos/uC-FS/Source/fs_vol.c ****         p_vol->FileCnt--;
 4593              		.loc 1 3012 14 is_stmt 0 view .LVU1471
 4594 0000 838D     		ldrh	r3, [r0, #44]
3012:rtos/uC-FS/Source/fs_vol.c ****         p_vol->FileCnt--;
 4595              		.loc 1 3012 8 view .LVU1472
 4596 0002 0BB1     		cbz	r3, .L390
3013:rtos/uC-FS/Source/fs_vol.c ****     }
 4597              		.loc 1 3013 9 is_stmt 1 view .LVU1473
3013:rtos/uC-FS/Source/fs_vol.c ****     }
 4598              		.loc 1 3013 23 is_stmt 0 view .LVU1474
 4599 0004 013B     		subs	r3, r3, #1
 4600 0006 8385     		strh	r3, [r0, #44]	@ movhi
 4601              	.L390:
3015:rtos/uC-FS/Source/fs_vol.c **** 
 4602              		.loc 1 3015 1 view .LVU1475
 4603 0008 7047     		bx	lr
 4604              		.cfi_endproc
 4605              	.LFE33:
 4607              		.section	.bss.FSVol_Cnt,"aw",%nobits
 4608              		.align	1
 4609              		.set	.LANCHOR3,. + 0
 4612              	FSVol_Cnt:
 4613 0000 0000     		.space	2
 4614              		.section	.bss.FSVol_Pool,"aw",%nobits
 4615              		.align	2
 4616              		.set	.LANCHOR2,. + 0
 4619              	FSVol_Pool:
 4620 0000 00000000 		.space	24
 4620      00000000 
 4620      00000000 
 4620      00000000 
 4620      00000000 
 4621              		.section	.bss.FSVol_Tbl,"aw",%nobits
ARM GAS  /tmp/ccvXhXom.s 			page 163


 4622              		.align	2
 4623              		.set	.LANCHOR0,. + 0
 4626              	FSVol_Tbl:
 4627 0000 00000000 		.space	4
 4628              		.section	.bss.FSVol_VolCntMax,"aw",%nobits
 4629              		.align	1
 4630              		.set	.LANCHOR1,. + 0
 4633              	FSVol_VolCntMax:
 4634 0000 0000     		.space	2
 4635              		.text
 4636              	.Letext0:
 4637              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 4638              		.file 3 "rtos/uC-LIB/lib_def.h"
 4639              		.file 4 "rtos/uC-LIB/lib_mem.h"
 4640              		.file 5 "rtos/uC-FS/Source/fs_type.h"
 4641              		.file 6 "rtos/uC-FS/Source/fs_dev.h"
 4642              		.file 7 "rtos/uC-FS/Source/fs_dir.h"
 4643              		.file 8 "rtos/uC-FS/Source/fs_file.h"
 4644              		.file 9 "rtos/uC-FS/Source/fs_partition.h"
 4645              		.file 10 "rtos/uC-FS/Source/fs_sys.h"
 4646              		.file 11 "rtos/uC-FS/Source/fs_vol.h"
 4647              		.file 12 "rtos/uC-FS/Source/fs_err.h"
 4648              		.file 13 "rtos/uC-FS/Source/fs_ctr.h"
 4649              		.file 14 "rtos/uC-LIB/lib_str.h"
 4650              		.file 15 "rtos/uC-CPU/cpu_core.h"
 4651              		.file 16 "rtos/uC-FS/Source/fs.h"
ARM GAS  /tmp/ccvXhXom.s 			page 164


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fs_vol.c
     /tmp/ccvXhXom.s:18     .text.FSVol_ObjFindEx:0000000000000000 $t
     /tmp/ccvXhXom.s:25     .text.FSVol_ObjFindEx:0000000000000000 FSVol_ObjFindEx
     /tmp/ccvXhXom.s:135    .text.FSVol_ObjFindEx:0000000000000060 $d
     /tmp/ccvXhXom.s:141    .text.FSVol_ObjFind:0000000000000000 $t
     /tmp/ccvXhXom.s:147    .text.FSVol_ObjFind:0000000000000000 FSVol_ObjFind
     /tmp/ccvXhXom.s:234    .text.FSVol_ObjFind:000000000000003c $d
     /tmp/ccvXhXom.s:240    .text.FSVol_ObjClr:0000000000000000 $t
     /tmp/ccvXhXom.s:246    .text.FSVol_ObjClr:0000000000000000 FSVol_ObjClr
     /tmp/ccvXhXom.s:314    .text.FSVol_ObjGet:0000000000000000 $t
     /tmp/ccvXhXom.s:320    .text.FSVol_ObjGet:0000000000000000 FSVol_ObjGet
     /tmp/ccvXhXom.s:419    .text.FSVol_ObjGet:0000000000000050 $d
     /tmp/ccvXhXom.s:427    .text.FSVol_OpenLocked:0000000000000000 $t
     /tmp/ccvXhXom.s:433    .text.FSVol_OpenLocked:0000000000000000 FSVol_OpenLocked
     /tmp/ccvXhXom.s:479    .text.FSVol_OpenLocked:000000000000002e $d
     /tmp/ccvXhXom.s:487    .text.FSVol_OpenLocked:0000000000000036 $t
     /tmp/ccvXhXom.s:665    .text.FSVol_ObjFree:0000000000000000 $t
     /tmp/ccvXhXom.s:671    .text.FSVol_ObjFree:0000000000000000 FSVol_ObjFree
     /tmp/ccvXhXom.s:759    .text.FSVol_ObjFree:0000000000000048 $d
     /tmp/ccvXhXom.s:767    .text.FSVol_GetVolCnt:0000000000000000 $t
     /tmp/ccvXhXom.s:774    .text.FSVol_GetVolCnt:0000000000000000 FSVol_GetVolCnt
     /tmp/ccvXhXom.s:827    .text.FSVol_GetVolCnt:0000000000000024 $d
     /tmp/ccvXhXom.s:832    .text.FSVol_GetVolCntMax:0000000000000000 $t
     /tmp/ccvXhXom.s:839    .text.FSVol_GetVolCntMax:0000000000000000 FSVol_GetVolCntMax
     /tmp/ccvXhXom.s:857    .text.FSVol_GetVolCntMax:0000000000000008 $d
     /tmp/ccvXhXom.s:862    .text.FSVol_GetVolName:0000000000000000 $t
     /tmp/ccvXhXom.s:869    .text.FSVol_GetVolName:0000000000000000 FSVol_GetVolName
     /tmp/ccvXhXom.s:991    .text.FSVol_GetVolName:0000000000000060 $d
     /tmp/ccvXhXom.s:997    .text.FSVol_GetDfltVolName:0000000000000000 $t
     /tmp/ccvXhXom.s:1004   .text.FSVol_GetDfltVolName:0000000000000000 FSVol_GetDfltVolName
     /tmp/ccvXhXom.s:1108   .text.FSVol_GetDfltVolName:0000000000000050 $d
     /tmp/ccvXhXom.s:1114   .text.FSVol_IsDflt:0000000000000000 $t
     /tmp/ccvXhXom.s:1121   .text.FSVol_IsDflt:0000000000000000 FSVol_IsDflt
     /tmp/ccvXhXom.s:1261   .text.FSVol_IsDflt:0000000000000064 $d
     /tmp/ccvXhXom.s:1267   .text.FSVol_ModuleInit:0000000000000000 $t
     /tmp/ccvXhXom.s:1274   .text.FSVol_ModuleInit:0000000000000000 FSVol_ModuleInit
     /tmp/ccvXhXom.s:1387   .text.FSVol_ModuleInit:0000000000000074 $d
     /tmp/ccvXhXom.s:1395   .text.FSVol_Acquire:0000000000000000 $t
     /tmp/ccvXhXom.s:1402   .text.FSVol_Acquire:0000000000000000 FSVol_Acquire
     /tmp/ccvXhXom.s:1485   .text.FSVol_AcquireDflt:0000000000000000 $t
     /tmp/ccvXhXom.s:1492   .text.FSVol_AcquireDflt:0000000000000000 FSVol_AcquireDflt
     /tmp/ccvXhXom.s:1581   .text.FSVol_AcquireDflt:0000000000000044 $d
     /tmp/ccvXhXom.s:1587   .text.FSVol_Release:0000000000000000 $t
     /tmp/ccvXhXom.s:1594   .text.FSVol_Release:0000000000000000 FSVol_Release
     /tmp/ccvXhXom.s:1685   .text.FSVol_Lock:0000000000000000 $t
     /tmp/ccvXhXom.s:1692   .text.FSVol_Lock:0000000000000000 FSVol_Lock
     /tmp/ccvXhXom.s:1772   .text.FSVol_Unlock:0000000000000000 $t
     /tmp/ccvXhXom.s:1779   .text.FSVol_Unlock:0000000000000000 FSVol_Unlock
     /tmp/ccvXhXom.s:1816   .text.FSVol_Open:0000000000000000 $t
     /tmp/ccvXhXom.s:1823   .text.FSVol_Open:0000000000000000 FSVol_Open
     /tmp/ccvXhXom.s:2265   .text.FSVol_ReleaseUnlock:0000000000000000 $t
     /tmp/ccvXhXom.s:2272   .text.FSVol_ReleaseUnlock:0000000000000000 FSVol_ReleaseUnlock
     /tmp/ccvXhXom.s:2300   .text.FSVol_RdLocked:0000000000000000 $t
     /tmp/ccvXhXom.s:2307   .text.FSVol_RdLocked:0000000000000000 FSVol_RdLocked
     /tmp/ccvXhXom.s:2387   .text.FSVol_RdLockedEx:0000000000000000 $t
     /tmp/ccvXhXom.s:2394   .text.FSVol_RdLockedEx:0000000000000000 FSVol_RdLockedEx
ARM GAS  /tmp/ccvXhXom.s 			page 165


     /tmp/ccvXhXom.s:2492   .text.FSVol_RefreshLocked:0000000000000000 $t
     /tmp/ccvXhXom.s:2499   .text.FSVol_RefreshLocked:0000000000000000 FSVol_RefreshLocked
     /tmp/ccvXhXom.s:2671   .text.FSVol_Refresh:0000000000000000 $t
     /tmp/ccvXhXom.s:2678   .text.FSVol_Refresh:0000000000000000 FSVol_Refresh
     /tmp/ccvXhXom.s:2839   .text.FSVol_AcquireLockChk:0000000000000000 $t
     /tmp/ccvXhXom.s:2846   .text.FSVol_AcquireLockChk:0000000000000000 FSVol_AcquireLockChk
     /tmp/ccvXhXom.s:3001   .text.FSVol_Close:0000000000000000 $t
     /tmp/ccvXhXom.s:3008   .text.FSVol_Close:0000000000000000 FSVol_Close
     /tmp/ccvXhXom.s:3147   .text.FSVol_Fmt:0000000000000000 $t
     /tmp/ccvXhXom.s:3154   .text.FSVol_Fmt:0000000000000000 FSVol_Fmt
     /tmp/ccvXhXom.s:3421   .text.FSVol_IsMounted:0000000000000000 $t
     /tmp/ccvXhXom.s:3428   .text.FSVol_IsMounted:0000000000000000 FSVol_IsMounted
     /tmp/ccvXhXom.s:3495   .text.FSVol_LabelGet:0000000000000000 $t
     /tmp/ccvXhXom.s:3502   .text.FSVol_LabelGet:0000000000000000 FSVol_LabelGet
     /tmp/ccvXhXom.s:3657   .text.FSVol_LabelSet:0000000000000000 $t
     /tmp/ccvXhXom.s:3664   .text.FSVol_LabelSet:0000000000000000 FSVol_LabelSet
     /tmp/ccvXhXom.s:3746   .text.FSVol_Query:0000000000000000 $t
     /tmp/ccvXhXom.s:3753   .text.FSVol_Query:0000000000000000 FSVol_Query
     /tmp/ccvXhXom.s:3986   .text.FSVol_Rd:0000000000000000 $t
     /tmp/ccvXhXom.s:3993   .text.FSVol_Rd:0000000000000000 FSVol_Rd
     /tmp/ccvXhXom.s:4092   .text.FSVol_ReleaseLocked:0000000000000000 $t
     /tmp/ccvXhXom.s:4099   .text.FSVol_ReleaseLocked:0000000000000000 FSVol_ReleaseLocked
     /tmp/ccvXhXom.s:4173   .text.FSVol_WrLocked:0000000000000000 $t
     /tmp/ccvXhXom.s:4180   .text.FSVol_WrLocked:0000000000000000 FSVol_WrLocked
     /tmp/ccvXhXom.s:4260   .text.FSVol_Wr:0000000000000000 $t
     /tmp/ccvXhXom.s:4267   .text.FSVol_Wr:0000000000000000 FSVol_Wr
     /tmp/ccvXhXom.s:4383   .text.FSVol_WrLockedEx:0000000000000000 $t
     /tmp/ccvXhXom.s:4390   .text.FSVol_WrLockedEx:0000000000000000 FSVol_WrLockedEx
     /tmp/ccvXhXom.s:4488   .text.FSVol_DirAdd:0000000000000000 $t
     /tmp/ccvXhXom.s:4495   .text.FSVol_DirAdd:0000000000000000 FSVol_DirAdd
     /tmp/ccvXhXom.s:4516   .text.FSVol_DirRemove:0000000000000000 $t
     /tmp/ccvXhXom.s:4523   .text.FSVol_DirRemove:0000000000000000 FSVol_DirRemove
     /tmp/ccvXhXom.s:4548   .text.FSVol_FileAdd:0000000000000000 $t
     /tmp/ccvXhXom.s:4555   .text.FSVol_FileAdd:0000000000000000 FSVol_FileAdd
     /tmp/ccvXhXom.s:4576   .text.FSVol_FileRemove:0000000000000000 $t
     /tmp/ccvXhXom.s:4583   .text.FSVol_FileRemove:0000000000000000 FSVol_FileRemove
     /tmp/ccvXhXom.s:4608   .bss.FSVol_Cnt:0000000000000000 $d
     /tmp/ccvXhXom.s:4612   .bss.FSVol_Cnt:0000000000000000 FSVol_Cnt
     /tmp/ccvXhXom.s:4615   .bss.FSVol_Pool:0000000000000000 $d
     /tmp/ccvXhXom.s:4619   .bss.FSVol_Pool:0000000000000000 FSVol_Pool
     /tmp/ccvXhXom.s:4622   .bss.FSVol_Tbl:0000000000000000 $d
     /tmp/ccvXhXom.s:4626   .bss.FSVol_Tbl:0000000000000000 FSVol_Tbl
     /tmp/ccvXhXom.s:4629   .bss.FSVol_VolCntMax:0000000000000000 $d
     /tmp/ccvXhXom.s:4633   .bss.FSVol_VolCntMax:0000000000000000 FSVol_VolCntMax
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_mem.h.121.89b942a057fb20091baad8bf6b28b1e6
                           .group:0000000000000000 wm4.fs.h.42.4f6311a594ee5619f1ee7a9392eb7faa
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.fs_def.h.42.653ad677c23ef93c522ec84af681385d
                           .group:0000000000000000 wm4.fs_cfg.h.116.da4f8e9d0b9040a97ef3bf26c61e90fd
ARM GAS  /tmp/ccvXhXom.s 			page 166


                           .group:0000000000000000 wm4.clk.h.99.39403db6a27321e53b261bbe20b56e1d
                           .group:0000000000000000 wm4.lib_str.h.60.d6fb3a1336db17c586ed26be94929677
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366
                           .group:0000000000000000 wm4.fs_cfg_fs.h.176.c85074fbe881bfa594608376a65f4dc2
                           .group:0000000000000000 wm4.fs_type.h.42.3e681b291920189044ba1da24ae0f22a
                           .group:0000000000000000 wm4.fs_err.h.42.d52bfed31dff3d1419c5cf09952dee67
                           .group:0000000000000000 wm4.fs.h.97.1d629f0ba32b5622ab4e01a254bd98e8
                           .group:0000000000000000 wm4.fs_dev.h.42.457d0b7de373584765db5fbe40e7c30d
                           .group:0000000000000000 wm4.fs_ctr.h.42.9d1398cac157503ac8af114819f7782b
                           .group:0000000000000000 wm4.fs_dev.h.84.0b8682dc82cfd464ab0da30a876c8006
                           .group:0000000000000000 wm4.fs_partition.h.42.447c7a9331f94d1981b8bbd16ad10c84
                           .group:0000000000000000 wm4.fs_entry.h.42.9d70c930b2952a9ef63a0a4e9d586c20
                           .group:0000000000000000 wm4.fs_dir.h.83.d0300b5b24eed020443871730cac76e3
                           .group:0000000000000000 wm4.fs_file.h.42.74c26597bc17b842069a1de9e164f613
                           .group:0000000000000000 wm4.fs_vol.h.42.7220e3c27e9d2fa6ece5193c56609d47

UNDEFINED SYMBOLS
Str_Cmp_N
Mem_Set
Mem_PoolBlkGet
FSPartition_FindSimple
FSSys_VolOpen
Mem_PoolBlkFree
FS_OS_Lock
FS_OS_Unlock
CPU_SW_Exception
Str_Copy_N
Mem_PoolCreate
Mem_HeapAlloc
Mem_Clr
FSDev_Release
FS_OS_DevAccessLock
FS_OS_DevLock
FS_OS_DevAccessUnlock
FS_OS_DevUnlock
FS_PathParse
FSDev_Acquire
FSDev_AccessLock
FSDev_Lock
FSDev_Unlock
FSDev_AccessUnlock
FSDev_VolAdd
FSDev_RdLocked
FSSys_VolClose
FSDev_RefreshLocked
FSDev_VolRemove
FSSys_VolFmt
FSSys_VolLabelGet
FSSys_VolLabelSet
FSDev_QueryLocked
FSSys_VolQuery
FSDev_ReleaseLocked
FSDev_WrLocked

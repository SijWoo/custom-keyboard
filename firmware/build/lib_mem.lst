ARM GAS  /tmp/cc3qzkyx.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lib_mem.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mem_SegCreateCritical,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mem_SegCreateCritical:
  26              	.LVL0:
  27              	.LFB24:
  28              		.file 1 "rtos/uC-LIB/lib_mem.c"
   1:rtos/uC-LIB/lib_mem.c **** /*
   2:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
   3:rtos/uC-LIB/lib_mem.c **** *                                               uC/LIB
   4:rtos/uC-LIB/lib_mem.c **** *                                       Custom Library Modules
   5:rtos/uC-LIB/lib_mem.c **** *
   6:rtos/uC-LIB/lib_mem.c **** *                         (c) Copyright 2004-2019; Silicon Laboratories Inc.,
   7:rtos/uC-LIB/lib_mem.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-LIB/lib_mem.c **** *
   9:rtos/uC-LIB/lib_mem.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-LIB/lib_mem.c **** *
  11:rtos/uC-LIB/lib_mem.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-LIB/lib_mem.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-LIB/lib_mem.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-LIB/lib_mem.c **** *                  license, you may not use this software.
  15:rtos/uC-LIB/lib_mem.c **** *
  16:rtos/uC-LIB/lib_mem.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-LIB/lib_mem.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-LIB/lib_mem.c **** *
  19:rtos/uC-LIB/lib_mem.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-LIB/lib_mem.c **** *
  21:rtos/uC-LIB/lib_mem.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  23:rtos/uC-LIB/lib_mem.c **** */
  24:rtos/uC-LIB/lib_mem.c **** 
  25:rtos/uC-LIB/lib_mem.c **** /*
  26:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  27:rtos/uC-LIB/lib_mem.c **** *
  28:rtos/uC-LIB/lib_mem.c **** *                                     STANDARD MEMORY OPERATIONS
  29:rtos/uC-LIB/lib_mem.c **** *
  30:rtos/uC-LIB/lib_mem.c **** * Filename : lib_mem.c
ARM GAS  /tmp/cc3qzkyx.s 			page 2


  31:rtos/uC-LIB/lib_mem.c **** * Version  : V1.38.04
  32:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  33:rtos/uC-LIB/lib_mem.c **** * Note(s)  : (1) NO compiler-supplied standard library functions are used in library or product sof
  34:rtos/uC-LIB/lib_mem.c **** *
  35:rtos/uC-LIB/lib_mem.c **** *                (a) ALL standard library functions are implemented in the custom library modules :
  36:rtos/uC-LIB/lib_mem.c **** *
  37:rtos/uC-LIB/lib_mem.c **** *                    (1) \<Custom Library Directory>\lib_*.*
  38:rtos/uC-LIB/lib_mem.c **** *
  39:rtos/uC-LIB/lib_mem.c **** *                    (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  40:rtos/uC-LIB/lib_mem.c **** *
  41:rtos/uC-LIB/lib_mem.c **** *                          where
  42:rtos/uC-LIB/lib_mem.c **** *                                  <Custom Library Directory>      directory path for custom librar
  43:rtos/uC-LIB/lib_mem.c **** *                                  <cpu>                           directory name for specific proc
  44:rtos/uC-LIB/lib_mem.c **** *                                  <compiler>                      directory name for specific comp
  45:rtos/uC-LIB/lib_mem.c **** *
  46:rtos/uC-LIB/lib_mem.c **** *                (b) Product-specific library functions are implemented in individual products.
  47:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  48:rtos/uC-LIB/lib_mem.c **** */
  49:rtos/uC-LIB/lib_mem.c **** 
  50:rtos/uC-LIB/lib_mem.c **** /*
  51:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  52:rtos/uC-LIB/lib_mem.c **** *                                            INCLUDE FILES
  53:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  54:rtos/uC-LIB/lib_mem.c **** */
  55:rtos/uC-LIB/lib_mem.c **** 
  56:rtos/uC-LIB/lib_mem.c **** #define    MICRIUM_SOURCE
  57:rtos/uC-LIB/lib_mem.c **** #define    LIB_MEM_MODULE
  58:rtos/uC-LIB/lib_mem.c **** #include  "lib_mem.h"
  59:rtos/uC-LIB/lib_mem.c **** #include  "lib_math.h"
  60:rtos/uC-LIB/lib_mem.c **** #include  "lib_str.h"
  61:rtos/uC-LIB/lib_mem.c **** 
  62:rtos/uC-LIB/lib_mem.c **** 
  63:rtos/uC-LIB/lib_mem.c **** /*
  64:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  65:rtos/uC-LIB/lib_mem.c **** *                                            LOCAL DEFINES
  66:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  67:rtos/uC-LIB/lib_mem.c **** */
  68:rtos/uC-LIB/lib_mem.c **** 
  69:rtos/uC-LIB/lib_mem.c **** 
  70:rtos/uC-LIB/lib_mem.c **** /*
  71:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  72:rtos/uC-LIB/lib_mem.c **** *                                           LOCAL CONSTANTS
  73:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  74:rtos/uC-LIB/lib_mem.c **** */
  75:rtos/uC-LIB/lib_mem.c **** 
  76:rtos/uC-LIB/lib_mem.c **** 
  77:rtos/uC-LIB/lib_mem.c **** /*
  78:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  79:rtos/uC-LIB/lib_mem.c **** *                                          LOCAL DATA TYPES
  80:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  81:rtos/uC-LIB/lib_mem.c **** */
  82:rtos/uC-LIB/lib_mem.c **** 
  83:rtos/uC-LIB/lib_mem.c **** 
  84:rtos/uC-LIB/lib_mem.c **** /*
  85:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  86:rtos/uC-LIB/lib_mem.c **** *                                            LOCAL TABLES
  87:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
ARM GAS  /tmp/cc3qzkyx.s 			page 3


  88:rtos/uC-LIB/lib_mem.c **** */
  89:rtos/uC-LIB/lib_mem.c **** 
  90:rtos/uC-LIB/lib_mem.c **** 
  91:rtos/uC-LIB/lib_mem.c **** /*
  92:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  93:rtos/uC-LIB/lib_mem.c **** *                                       LOCAL GLOBAL VARIABLES
  94:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
  95:rtos/uC-LIB/lib_mem.c **** */
  96:rtos/uC-LIB/lib_mem.c **** 
  97:rtos/uC-LIB/lib_mem.c **** 
  98:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
  99:rtos/uC-LIB/lib_mem.c **** #ifndef  LIB_MEM_CFG_HEAP_BASE_ADDR
 100:rtos/uC-LIB/lib_mem.c **** CPU_INT08U   Mem_Heap[LIB_MEM_CFG_HEAP_SIZE];                   /* Mem heap.                       
 101:rtos/uC-LIB/lib_mem.c **** #endif
 102:rtos/uC-LIB/lib_mem.c **** 
 103:rtos/uC-LIB/lib_mem.c **** MEM_SEG      Mem_SegHeap;                                       /* Heap mem seg.                   
 104:rtos/uC-LIB/lib_mem.c **** #endif
 105:rtos/uC-LIB/lib_mem.c **** 
 106:rtos/uC-LIB/lib_mem.c **** MEM_SEG     *Mem_SegHeadPtr;                                    /* Ptr to head of seg list.        
 107:rtos/uC-LIB/lib_mem.c **** 
 108:rtos/uC-LIB/lib_mem.c **** 
 109:rtos/uC-LIB/lib_mem.c **** /*
 110:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 111:rtos/uC-LIB/lib_mem.c **** *                                      LOCAL FUNCTION PROTOTYPES
 112:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 113:rtos/uC-LIB/lib_mem.c **** */
 114:rtos/uC-LIB/lib_mem.c **** 
 115:rtos/uC-LIB/lib_mem.c **** static  void          Mem_SegCreateCritical    (const  CPU_CHAR      *p_name,
 116:rtos/uC-LIB/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 117:rtos/uC-LIB/lib_mem.c ****                                                        CPU_ADDR       seg_base_addr,
 118:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 119:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     size);
 120:rtos/uC-LIB/lib_mem.c **** 
 121:rtos/uC-LIB/lib_mem.c **** #if  (LIB_MEM_CFG_HEAP_SIZE > 0u)
 122:rtos/uC-LIB/lib_mem.c **** static  MEM_SEG      *Mem_SegOverlapChkCritical(       CPU_ADDR       seg_base_addr,
 123:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     size,
 124:rtos/uC-LIB/lib_mem.c ****                                                        LIB_ERR       *p_err);
 125:rtos/uC-LIB/lib_mem.c **** #endif
 126:rtos/uC-LIB/lib_mem.c **** 
 127:rtos/uC-LIB/lib_mem.c **** static  void         *Mem_SegAllocInternal     (const  CPU_CHAR      *p_name,
 128:rtos/uC-LIB/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 129:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     size,
 130:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     align,
 131:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 132:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T    *p_bytes_reqd,
 133:rtos/uC-LIB/lib_mem.c ****                                                        LIB_ERR       *p_err);
 134:rtos/uC-LIB/lib_mem.c **** 
 135:rtos/uC-LIB/lib_mem.c **** static  void         *Mem_SegAllocExtCritical  (       MEM_SEG       *p_seg,
 136:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     size,
 137:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     align,
 138:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 139:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T    *p_bytes_reqd,
 140:rtos/uC-LIB/lib_mem.c ****                                                        LIB_ERR       *p_err);
 141:rtos/uC-LIB/lib_mem.c **** 
 142:rtos/uC-LIB/lib_mem.c **** static  void          Mem_DynPoolCreateInternal(const  CPU_CHAR      *p_name,
 143:rtos/uC-LIB/lib_mem.c ****                                                        MEM_DYN_POOL  *p_pool,
 144:rtos/uC-LIB/lib_mem.c ****                                                        MEM_SEG       *p_seg,
ARM GAS  /tmp/cc3qzkyx.s 			page 4


 145:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     blk_size,
 146:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     blk_align,
 147:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     blk_padding_align,
 148:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     blk_qty_init,
 149:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     blk_qty_max,
 150:rtos/uC-LIB/lib_mem.c ****                                                        LIB_ERR       *p_err);
 151:rtos/uC-LIB/lib_mem.c **** 
 152:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
 153:rtos/uC-LIB/lib_mem.c **** static  void          Mem_SegAllocTrackCritical(const  CPU_CHAR      *p_name,
 154:rtos/uC-LIB/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 155:rtos/uC-LIB/lib_mem.c ****                                                        CPU_SIZE_T     size,
 156:rtos/uC-LIB/lib_mem.c ****                                                        LIB_ERR       *p_err);
 157:rtos/uC-LIB/lib_mem.c **** #endif
 158:rtos/uC-LIB/lib_mem.c **** 
 159:rtos/uC-LIB/lib_mem.c **** #if ((LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED) && \
 160:rtos/uC-LIB/lib_mem.c ****      (LIB_MEM_CFG_HEAP_SIZE      >  0u))
 161:rtos/uC-LIB/lib_mem.c **** static  CPU_BOOLEAN   Mem_PoolBlkIsValidAddr   (       MEM_POOL      *p_pool,
 162:rtos/uC-LIB/lib_mem.c ****                                                        void          *p_mem);
 163:rtos/uC-LIB/lib_mem.c **** #endif
 164:rtos/uC-LIB/lib_mem.c **** 
 165:rtos/uC-LIB/lib_mem.c **** 
 166:rtos/uC-LIB/lib_mem.c **** /*
 167:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 168:rtos/uC-LIB/lib_mem.c **** *                                     LOCAL CONFIGURATION ERRORS
 169:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 170:rtos/uC-LIB/lib_mem.c **** */
 171:rtos/uC-LIB/lib_mem.c **** 
 172:rtos/uC-LIB/lib_mem.c **** /*
 173:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 174:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 175:rtos/uC-LIB/lib_mem.c **** *                                            GLOBAL FUNCTIONS
 176:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 177:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 178:rtos/uC-LIB/lib_mem.c **** */
 179:rtos/uC-LIB/lib_mem.c **** 
 180:rtos/uC-LIB/lib_mem.c **** /*
 181:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 182:rtos/uC-LIB/lib_mem.c **** *                                             Mem_Init()
 183:rtos/uC-LIB/lib_mem.c **** *
 184:rtos/uC-LIB/lib_mem.c **** * Description : (1) Initializes Memory Management Module :
 185:rtos/uC-LIB/lib_mem.c **** *
 186:rtos/uC-LIB/lib_mem.c **** *                   (a) Initialize heap memory pool
 187:rtos/uC-LIB/lib_mem.c **** *                   (b) Initialize      memory pool table
 188:rtos/uC-LIB/lib_mem.c **** *
 189:rtos/uC-LIB/lib_mem.c **** *
 190:rtos/uC-LIB/lib_mem.c **** * Argument(s) : none.
 191:rtos/uC-LIB/lib_mem.c **** *
 192:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
 193:rtos/uC-LIB/lib_mem.c **** *
 194:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 195:rtos/uC-LIB/lib_mem.c **** *
 196:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (2) Mem_Init() MUST be called ... :
 197:rtos/uC-LIB/lib_mem.c **** *
 198:rtos/uC-LIB/lib_mem.c **** *                   (a) ONLY ONCE from a product's application; ...
 199:rtos/uC-LIB/lib_mem.c **** *                   (b) BEFORE product's application calls any memory library module function(s)
 200:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 201:rtos/uC-LIB/lib_mem.c **** */
ARM GAS  /tmp/cc3qzkyx.s 			page 5


 202:rtos/uC-LIB/lib_mem.c **** 
 203:rtos/uC-LIB/lib_mem.c **** void  Mem_Init (void)
 204:rtos/uC-LIB/lib_mem.c **** {
 205:rtos/uC-LIB/lib_mem.c **** 
 206:rtos/uC-LIB/lib_mem.c ****                                                                 /* ------------------ INIT SEG LIST
 207:rtos/uC-LIB/lib_mem.c ****     Mem_SegHeadPtr = DEF_NULL;
 208:rtos/uC-LIB/lib_mem.c **** 
 209:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 210:rtos/uC-LIB/lib_mem.c ****     {
 211:rtos/uC-LIB/lib_mem.c ****         LIB_ERR   err;
 212:rtos/uC-LIB/lib_mem.c ****         CPU_ADDR  heap_base_addr;
 213:rtos/uC-LIB/lib_mem.c **** 
 214:rtos/uC-LIB/lib_mem.c **** 
 215:rtos/uC-LIB/lib_mem.c ****                                                                 /* ------------------ INIT HEAP SEG
 216:rtos/uC-LIB/lib_mem.c **** #ifdef  LIB_MEM_CFG_HEAP_BASE_ADDR
 217:rtos/uC-LIB/lib_mem.c ****         heap_base_addr = LIB_MEM_CFG_HEAP_BASE_ADDR;
 218:rtos/uC-LIB/lib_mem.c **** #else
 219:rtos/uC-LIB/lib_mem.c ****         heap_base_addr = (CPU_ADDR)&Mem_Heap[0u];
 220:rtos/uC-LIB/lib_mem.c **** #endif
 221:rtos/uC-LIB/lib_mem.c **** 
 222:rtos/uC-LIB/lib_mem.c ****         Mem_SegCreate("Heap",
 223:rtos/uC-LIB/lib_mem.c ****                       &Mem_SegHeap,                             /* Create heap seg.                
 224:rtos/uC-LIB/lib_mem.c ****                        heap_base_addr,
 225:rtos/uC-LIB/lib_mem.c ****                        LIB_MEM_CFG_HEAP_SIZE,
 226:rtos/uC-LIB/lib_mem.c ****                        LIB_MEM_PADDING_ALIGN_NONE,
 227:rtos/uC-LIB/lib_mem.c ****                       &err);
 228:rtos/uC-LIB/lib_mem.c ****         if (err != LIB_MEM_ERR_NONE) {
 229:rtos/uC-LIB/lib_mem.c ****             CPU_SW_EXCEPTION(;);
 230:rtos/uC-LIB/lib_mem.c ****         }
 231:rtos/uC-LIB/lib_mem.c ****     }
 232:rtos/uC-LIB/lib_mem.c **** #endif
 233:rtos/uC-LIB/lib_mem.c **** }
 234:rtos/uC-LIB/lib_mem.c **** 
 235:rtos/uC-LIB/lib_mem.c **** 
 236:rtos/uC-LIB/lib_mem.c **** /*
 237:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 238:rtos/uC-LIB/lib_mem.c **** *                                              Mem_Clr()
 239:rtos/uC-LIB/lib_mem.c **** *
 240:rtos/uC-LIB/lib_mem.c **** * Description : Clears data buffer (see Note #2).
 241:rtos/uC-LIB/lib_mem.c **** *
 242:rtos/uC-LIB/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to clear.
 243:rtos/uC-LIB/lib_mem.c **** *
 244:rtos/uC-LIB/lib_mem.c **** *               size        Number of data buffer octets to clear (see Note #1).
 245:rtos/uC-LIB/lib_mem.c **** *
 246:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
 247:rtos/uC-LIB/lib_mem.c **** *
 248:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 249:rtos/uC-LIB/lib_mem.c **** *
 250:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) Null clears allowed (i.e. zero-length clears).
 251:rtos/uC-LIB/lib_mem.c **** *
 252:rtos/uC-LIB/lib_mem.c **** *                   See also 'Mem_Set()  Note #1'.
 253:rtos/uC-LIB/lib_mem.c **** *
 254:rtos/uC-LIB/lib_mem.c **** *               (2) Clear data by setting each data octet to 0.
 255:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 256:rtos/uC-LIB/lib_mem.c **** */
 257:rtos/uC-LIB/lib_mem.c **** 
 258:rtos/uC-LIB/lib_mem.c **** void  Mem_Clr (void        *pmem,
ARM GAS  /tmp/cc3qzkyx.s 			page 6


 259:rtos/uC-LIB/lib_mem.c ****                CPU_SIZE_T   size)
 260:rtos/uC-LIB/lib_mem.c **** {
 261:rtos/uC-LIB/lib_mem.c ****     Mem_Set(pmem,
 262:rtos/uC-LIB/lib_mem.c ****             0u,                                                 /* See Note #2.                    
 263:rtos/uC-LIB/lib_mem.c ****             size);
 264:rtos/uC-LIB/lib_mem.c **** }
 265:rtos/uC-LIB/lib_mem.c **** 
 266:rtos/uC-LIB/lib_mem.c **** 
 267:rtos/uC-LIB/lib_mem.c **** /*
 268:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 269:rtos/uC-LIB/lib_mem.c **** *                                              Mem_Set()
 270:rtos/uC-LIB/lib_mem.c **** *
 271:rtos/uC-LIB/lib_mem.c **** * Description : Fills data buffer with specified data octet.
 272:rtos/uC-LIB/lib_mem.c **** *
 273:rtos/uC-LIB/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to fill with specified data octet.
 274:rtos/uC-LIB/lib_mem.c **** *
 275:rtos/uC-LIB/lib_mem.c **** *               data_val    Data fill octet value.
 276:rtos/uC-LIB/lib_mem.c **** *
 277:rtos/uC-LIB/lib_mem.c **** *               size        Number of data buffer octets to fill (see Note #1).
 278:rtos/uC-LIB/lib_mem.c **** *
 279:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
 280:rtos/uC-LIB/lib_mem.c **** *
 281:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 282:rtos/uC-LIB/lib_mem.c **** *
 283:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) Null sets allowed (i.e. zero-length sets).
 284:rtos/uC-LIB/lib_mem.c **** *
 285:rtos/uC-LIB/lib_mem.c **** *               (2) For best CPU performance, optimized to fill data buffer using 'CPU_ALIGN'-sized
 286:rtos/uC-LIB/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 287:rtos/uC-LIB/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 288:rtos/uC-LIB/lib_mem.c **** *                   addresses.
 289:rtos/uC-LIB/lib_mem.c **** *
 290:rtos/uC-LIB/lib_mem.c **** *               (3) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 291:rtos/uC-LIB/lib_mem.c **** *                   address boundary.
 292:rtos/uC-LIB/lib_mem.c **** *
 293:rtos/uC-LIB/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 294:rtos/uC-LIB/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 295:rtos/uC-LIB/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 296:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 297:rtos/uC-LIB/lib_mem.c **** */
 298:rtos/uC-LIB/lib_mem.c **** 
 299:rtos/uC-LIB/lib_mem.c **** void  Mem_Set (void        *pmem,
 300:rtos/uC-LIB/lib_mem.c ****                CPU_INT08U   data_val,
 301:rtos/uC-LIB/lib_mem.c ****                CPU_SIZE_T   size)
 302:rtos/uC-LIB/lib_mem.c **** {
 303:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T   size_rem;
 304:rtos/uC-LIB/lib_mem.c ****     CPU_ALIGN    data_align;
 305:rtos/uC-LIB/lib_mem.c ****     CPU_ALIGN   *pmem_align;
 306:rtos/uC-LIB/lib_mem.c ****     CPU_INT08U  *pmem_08;
 307:rtos/uC-LIB/lib_mem.c ****     CPU_DATA     mem_align_mod;
 308:rtos/uC-LIB/lib_mem.c ****     CPU_DATA     i;
 309:rtos/uC-LIB/lib_mem.c **** 
 310:rtos/uC-LIB/lib_mem.c **** 
 311:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 312:rtos/uC-LIB/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 313:rtos/uC-LIB/lib_mem.c ****         return;
 314:rtos/uC-LIB/lib_mem.c ****     }
 315:rtos/uC-LIB/lib_mem.c ****     if (pmem == (void *)0) {
ARM GAS  /tmp/cc3qzkyx.s 			page 7


 316:rtos/uC-LIB/lib_mem.c ****         return;
 317:rtos/uC-LIB/lib_mem.c ****     }
 318:rtos/uC-LIB/lib_mem.c **** #endif
 319:rtos/uC-LIB/lib_mem.c **** 
 320:rtos/uC-LIB/lib_mem.c **** 
 321:rtos/uC-LIB/lib_mem.c ****     data_align = 0u;
 322:rtos/uC-LIB/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 323:rtos/uC-LIB/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 324:rtos/uC-LIB/lib_mem.c ****         data_align  |= (CPU_ALIGN)data_val;
 325:rtos/uC-LIB/lib_mem.c ****     }
 326:rtos/uC-LIB/lib_mem.c **** 
 327:rtos/uC-LIB/lib_mem.c ****     size_rem      =  size;
 328:rtos/uC-LIB/lib_mem.c ****     mem_align_mod = (CPU_INT08U)((CPU_ADDR)pmem % sizeof(CPU_ALIGN));   /* See Note #3.            
 329:rtos/uC-LIB/lib_mem.c **** 
 330:rtos/uC-LIB/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem;
 331:rtos/uC-LIB/lib_mem.c ****     if (mem_align_mod != 0u) {                                  /* If leading octets avail,        
 332:rtos/uC-LIB/lib_mem.c ****         i = mem_align_mod;
 333:rtos/uC-LIB/lib_mem.c ****         while ((size_rem > 0) &&                                /* ... start mem buf fill with lead
 334:rtos/uC-LIB/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 335:rtos/uC-LIB/lib_mem.c ****            *pmem_08++ = data_val;
 336:rtos/uC-LIB/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 337:rtos/uC-LIB/lib_mem.c ****             i++;
 338:rtos/uC-LIB/lib_mem.c ****         }
 339:rtos/uC-LIB/lib_mem.c ****     }
 340:rtos/uC-LIB/lib_mem.c **** 
 341:rtos/uC-LIB/lib_mem.c ****     pmem_align = (CPU_ALIGN *)pmem_08;                          /* See Note #2.                    
 342:rtos/uC-LIB/lib_mem.c ****     while (size_rem >= sizeof(CPU_ALIGN)) {                     /* While mem buf aligned on CPU_ALI
 343:rtos/uC-LIB/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 344:rtos/uC-LIB/lib_mem.c ****         size_rem    -= sizeof(CPU_ALIGN);
 345:rtos/uC-LIB/lib_mem.c ****     }
 346:rtos/uC-LIB/lib_mem.c **** 
 347:rtos/uC-LIB/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem_align;
 348:rtos/uC-LIB/lib_mem.c ****     while (size_rem > 0) {                                      /* Finish mem buf fill with trailin
 349:rtos/uC-LIB/lib_mem.c ****        *pmem_08++   = data_val;
 350:rtos/uC-LIB/lib_mem.c ****         size_rem   -= sizeof(CPU_INT08U);
 351:rtos/uC-LIB/lib_mem.c ****     }
 352:rtos/uC-LIB/lib_mem.c **** }
 353:rtos/uC-LIB/lib_mem.c **** 
 354:rtos/uC-LIB/lib_mem.c **** 
 355:rtos/uC-LIB/lib_mem.c **** /*
 356:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 357:rtos/uC-LIB/lib_mem.c **** *                                             Mem_Copy()
 358:rtos/uC-LIB/lib_mem.c **** *
 359:rtos/uC-LIB/lib_mem.c **** * Description : Copies data octets from one memory buffer to another memory buffer.
 360:rtos/uC-LIB/lib_mem.c **** *
 361:rtos/uC-LIB/lib_mem.c **** * Argument(s) : pdest       Pointer to destination memory buffer.
 362:rtos/uC-LIB/lib_mem.c **** *
 363:rtos/uC-LIB/lib_mem.c **** *               psrc        Pointer to source      memory buffer.
 364:rtos/uC-LIB/lib_mem.c **** *
 365:rtos/uC-LIB/lib_mem.c **** *               size        Number of octets to copy (see Note #1).
 366:rtos/uC-LIB/lib_mem.c **** *
 367:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
 368:rtos/uC-LIB/lib_mem.c **** *
 369:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 370:rtos/uC-LIB/lib_mem.c **** *
 371:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) Null copies allowed (i.e. zero-length copies).
 372:rtos/uC-LIB/lib_mem.c **** *
ARM GAS  /tmp/cc3qzkyx.s 			page 8


 373:rtos/uC-LIB/lib_mem.c **** *               (2) Memory buffers NOT checked for overlapping.
 374:rtos/uC-LIB/lib_mem.c **** *
 375:rtos/uC-LIB/lib_mem.c **** *                   (a) IEEE Std 1003.1, 2004 Edition, Section 'memcpy() : DESCRIPTION' states that
 376:rtos/uC-LIB/lib_mem.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 377:rtos/uC-LIB/lib_mem.c **** *
 378:rtos/uC-LIB/lib_mem.c **** *                   (b) However, data octets from a source memory buffer at a higher address value 
 379:rtos/uC-LIB/lib_mem.c **** *                       successfully copy to a destination memory buffer at a lower  address value 
 380:rtos/uC-LIB/lib_mem.c **** *                       if any octets of the memory buffers overlap as long as no individual, atomi
 381:rtos/uC-LIB/lib_mem.c **** *                       word copy overlaps.
 382:rtos/uC-LIB/lib_mem.c **** *
 383:rtos/uC-LIB/lib_mem.c **** *                       Since Mem_Copy() performs the data octet copy via 'CPU_ALIGN'-sized words &
 384:rtos/uC-LIB/lib_mem.c **** *                       octets; & since 'CPU_ALIGN'-sized words MUST be accessed on word-aligned ad
 385:rtos/uC-LIB/lib_mem.c **** *                       (see Note #3b), neither 'CPU_ALIGN'-sized words nor octets at unique addres
 386:rtos/uC-LIB/lib_mem.c **** *                       ever overlap.
 387:rtos/uC-LIB/lib_mem.c **** *
 388:rtos/uC-LIB/lib_mem.c **** *                       Therefore, Mem_Copy() SHOULD be able to successfully copy overlapping memor
 389:rtos/uC-LIB/lib_mem.c **** *                       buffers as long as the source memory buffer is at a higher address value th
 390:rtos/uC-LIB/lib_mem.c **** *                       destination memory buffer.
 391:rtos/uC-LIB/lib_mem.c **** *
 392:rtos/uC-LIB/lib_mem.c **** *               (3) For best CPU performance, optimized to copy data buffer using 'CPU_ALIGN'-sized
 393:rtos/uC-LIB/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 394:rtos/uC-LIB/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 395:rtos/uC-LIB/lib_mem.c **** *                   addresses.
 396:rtos/uC-LIB/lib_mem.c **** *
 397:rtos/uC-LIB/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 398:rtos/uC-LIB/lib_mem.c **** *                   address boundary.
 399:rtos/uC-LIB/lib_mem.c **** *
 400:rtos/uC-LIB/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 401:rtos/uC-LIB/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 402:rtos/uC-LIB/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 403:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 404:rtos/uC-LIB/lib_mem.c **** */
 405:rtos/uC-LIB/lib_mem.c **** 
 406:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_OPTIMIZE_ASM_EN != DEF_ENABLED)
 407:rtos/uC-LIB/lib_mem.c **** void  Mem_Copy (       void        *pdest,
 408:rtos/uC-LIB/lib_mem.c ****                 const  void        *psrc,
 409:rtos/uC-LIB/lib_mem.c ****                        CPU_SIZE_T   size)
 410:rtos/uC-LIB/lib_mem.c **** {
 411:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 412:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 413:rtos/uC-LIB/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 414:rtos/uC-LIB/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 415:rtos/uC-LIB/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 416:rtos/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 417:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      i;
 418:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 419:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 420:rtos/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 421:rtos/uC-LIB/lib_mem.c **** 
 422:rtos/uC-LIB/lib_mem.c **** 
 423:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 424:rtos/uC-LIB/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 425:rtos/uC-LIB/lib_mem.c ****         return;
 426:rtos/uC-LIB/lib_mem.c ****     }
 427:rtos/uC-LIB/lib_mem.c ****     if (pdest == (void *)0) {
 428:rtos/uC-LIB/lib_mem.c ****         return;
 429:rtos/uC-LIB/lib_mem.c ****     }
ARM GAS  /tmp/cc3qzkyx.s 			page 9


 430:rtos/uC-LIB/lib_mem.c ****     if (psrc  == (void *)0) {
 431:rtos/uC-LIB/lib_mem.c ****         return;
 432:rtos/uC-LIB/lib_mem.c ****     }
 433:rtos/uC-LIB/lib_mem.c **** #endif
 434:rtos/uC-LIB/lib_mem.c **** 
 435:rtos/uC-LIB/lib_mem.c **** 
 436:rtos/uC-LIB/lib_mem.c ****     size_rem           =  size;
 437:rtos/uC-LIB/lib_mem.c **** 
 438:rtos/uC-LIB/lib_mem.c ****     pmem_08_dest       = (      CPU_INT08U *)pdest;
 439:rtos/uC-LIB/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc;
 440:rtos/uC-LIB/lib_mem.c **** 
 441:rtos/uC-LIB/lib_mem.c ****     mem_gap_octets     = (CPU_SIZE_T)(pmem_08_src - pmem_08_dest);
 442:rtos/uC-LIB/lib_mem.c **** 
 443:rtos/uC-LIB/lib_mem.c **** 
 444:rtos/uC-LIB/lib_mem.c ****     if (mem_gap_octets >= sizeof(CPU_ALIGN)) {                  /* Avoid bufs overlap.             
 445:rtos/uC-LIB/lib_mem.c ****                                                                 /* See Note #4.                    
 446:rtos/uC-LIB/lib_mem.c ****         mem_align_mod_dest = (CPU_INT08U)((CPU_ADDR)pmem_08_dest % sizeof(CPU_ALIGN));
 447:rtos/uC-LIB/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 448:rtos/uC-LIB/lib_mem.c **** 
 449:rtos/uC-LIB/lib_mem.c ****         mem_aligned        = (mem_align_mod_dest == mem_align_mod_src) ? DEF_YES : DEF_NO;
 450:rtos/uC-LIB/lib_mem.c **** 
 451:rtos/uC-LIB/lib_mem.c ****         if (mem_aligned == DEF_YES) {                           /* If mem bufs' alignment offset eq
 452:rtos/uC-LIB/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 453:rtos/uC-LIB/lib_mem.c ****             if (mem_align_mod_dest != 0u) {                     /* If leading octets avail,        
 454:rtos/uC-LIB/lib_mem.c ****                 i = mem_align_mod_dest;
 455:rtos/uC-LIB/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 456:rtos/uC-LIB/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 457:rtos/uC-LIB/lib_mem.c ****                    *pmem_08_dest++ = *pmem_08_src++;
 458:rtos/uC-LIB/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 459:rtos/uC-LIB/lib_mem.c ****                     i++;
 460:rtos/uC-LIB/lib_mem.c ****                 }
 461:rtos/uC-LIB/lib_mem.c ****             }
 462:rtos/uC-LIB/lib_mem.c **** 
 463:rtos/uC-LIB/lib_mem.c ****             pmem_align_dest = (      CPU_ALIGN *)pmem_08_dest;  /* See Note #3.                    
 464:rtos/uC-LIB/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)pmem_08_src;
 465:rtos/uC-LIB/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 466:rtos/uC-LIB/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 467:rtos/uC-LIB/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 468:rtos/uC-LIB/lib_mem.c ****             }
 469:rtos/uC-LIB/lib_mem.c **** 
 470:rtos/uC-LIB/lib_mem.c ****             pmem_08_dest = (      CPU_INT08U *)pmem_align_dest;
 471:rtos/uC-LIB/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src;
 472:rtos/uC-LIB/lib_mem.c ****         }
 473:rtos/uC-LIB/lib_mem.c ****     }
 474:rtos/uC-LIB/lib_mem.c **** 
 475:rtos/uC-LIB/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 476:rtos/uC-LIB/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 477:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 478:rtos/uC-LIB/lib_mem.c ****     }
 479:rtos/uC-LIB/lib_mem.c **** }
 480:rtos/uC-LIB/lib_mem.c **** #endif
 481:rtos/uC-LIB/lib_mem.c **** 
 482:rtos/uC-LIB/lib_mem.c **** 
 483:rtos/uC-LIB/lib_mem.c **** /*
 484:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 485:rtos/uC-LIB/lib_mem.c **** *                                             Mem_Move()
 486:rtos/uC-LIB/lib_mem.c **** *
ARM GAS  /tmp/cc3qzkyx.s 			page 10


 487:rtos/uC-LIB/lib_mem.c **** * Description : Moves data octets from one memory buffer to another memory buffer, or within the sa
 488:rtos/uC-LIB/lib_mem.c **** *               memory buffer. Overlapping is correctly handled for all move operations.
 489:rtos/uC-LIB/lib_mem.c **** *
 490:rtos/uC-LIB/lib_mem.c **** * Argument(s) : pdest       Pointer to destination memory buffer.
 491:rtos/uC-LIB/lib_mem.c **** *
 492:rtos/uC-LIB/lib_mem.c **** *               psrc        Pointer to source      memory buffer.
 493:rtos/uC-LIB/lib_mem.c **** *
 494:rtos/uC-LIB/lib_mem.c **** *               size        Number of octets to move (see Note #1).
 495:rtos/uC-LIB/lib_mem.c **** *
 496:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
 497:rtos/uC-LIB/lib_mem.c **** *
 498:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 499:rtos/uC-LIB/lib_mem.c **** *
 500:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) Null move operations allowed (i.e. zero-length).
 501:rtos/uC-LIB/lib_mem.c **** *
 502:rtos/uC-LIB/lib_mem.c **** *               (2) Memory buffers checked for overlapping.
 503:rtos/uC-LIB/lib_mem.c **** *
 504:rtos/uC-LIB/lib_mem.c **** *               (3) For best CPU performance, optimized to copy data buffer using 'CPU_ALIGN'-sized
 505:rtos/uC-LIB/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 506:rtos/uC-LIB/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 507:rtos/uC-LIB/lib_mem.c **** *                   addresses.
 508:rtos/uC-LIB/lib_mem.c **** *
 509:rtos/uC-LIB/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 510:rtos/uC-LIB/lib_mem.c **** *                   address boundary.
 511:rtos/uC-LIB/lib_mem.c **** *
 512:rtos/uC-LIB/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 513:rtos/uC-LIB/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 514:rtos/uC-LIB/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 515:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 516:rtos/uC-LIB/lib_mem.c **** */
 517:rtos/uC-LIB/lib_mem.c **** 
 518:rtos/uC-LIB/lib_mem.c **** void  Mem_Move (       void        *pdest,
 519:rtos/uC-LIB/lib_mem.c ****                 const  void        *psrc,
 520:rtos/uC-LIB/lib_mem.c ****                        CPU_SIZE_T   size)
 521:rtos/uC-LIB/lib_mem.c **** {
 522:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 523:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 524:rtos/uC-LIB/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 525:rtos/uC-LIB/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 526:rtos/uC-LIB/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 527:rtos/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 528:rtos/uC-LIB/lib_mem.c ****            CPU_INT08S    i;
 529:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 530:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 531:rtos/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 532:rtos/uC-LIB/lib_mem.c **** 
 533:rtos/uC-LIB/lib_mem.c **** 
 534:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 535:rtos/uC-LIB/lib_mem.c ****     if (size < 1) {
 536:rtos/uC-LIB/lib_mem.c ****         return;
 537:rtos/uC-LIB/lib_mem.c ****     }
 538:rtos/uC-LIB/lib_mem.c ****     if (pdest == (void *)0) {
 539:rtos/uC-LIB/lib_mem.c ****         return;
 540:rtos/uC-LIB/lib_mem.c ****     }
 541:rtos/uC-LIB/lib_mem.c ****     if (psrc  == (void *)0) {
 542:rtos/uC-LIB/lib_mem.c ****         return;
 543:rtos/uC-LIB/lib_mem.c ****     }
ARM GAS  /tmp/cc3qzkyx.s 			page 11


 544:rtos/uC-LIB/lib_mem.c **** #endif
 545:rtos/uC-LIB/lib_mem.c **** 
 546:rtos/uC-LIB/lib_mem.c ****     pmem_08_src  = (const CPU_INT08U *)psrc;
 547:rtos/uC-LIB/lib_mem.c ****     pmem_08_dest = (      CPU_INT08U *)pdest;
 548:rtos/uC-LIB/lib_mem.c ****     if (pmem_08_src > pmem_08_dest) {
 549:rtos/uC-LIB/lib_mem.c ****         Mem_Copy(pdest, psrc, size);
 550:rtos/uC-LIB/lib_mem.c ****         return;
 551:rtos/uC-LIB/lib_mem.c ****     }
 552:rtos/uC-LIB/lib_mem.c **** 
 553:rtos/uC-LIB/lib_mem.c ****     size_rem           =  size;
 554:rtos/uC-LIB/lib_mem.c **** 
 555:rtos/uC-LIB/lib_mem.c ****     pmem_08_dest       = (      CPU_INT08U *)pdest + size - 1;
 556:rtos/uC-LIB/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc  + size - 1;
 557:rtos/uC-LIB/lib_mem.c **** 
 558:rtos/uC-LIB/lib_mem.c ****     mem_gap_octets     = (CPU_SIZE_T)(pmem_08_dest - pmem_08_src);
 559:rtos/uC-LIB/lib_mem.c **** 
 560:rtos/uC-LIB/lib_mem.c **** 
 561:rtos/uC-LIB/lib_mem.c ****     if (mem_gap_octets >= sizeof(CPU_ALIGN)) {                  /* Avoid bufs overlap.             
 562:rtos/uC-LIB/lib_mem.c **** 
 563:rtos/uC-LIB/lib_mem.c ****                                                                 /* See Note #4.                    
 564:rtos/uC-LIB/lib_mem.c ****         mem_align_mod_dest = (CPU_INT08U)((CPU_ADDR)pmem_08_dest % sizeof(CPU_ALIGN));
 565:rtos/uC-LIB/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 566:rtos/uC-LIB/lib_mem.c **** 
 567:rtos/uC-LIB/lib_mem.c ****         mem_aligned        = (mem_align_mod_dest == mem_align_mod_src) ? DEF_YES : DEF_NO;
 568:rtos/uC-LIB/lib_mem.c **** 
 569:rtos/uC-LIB/lib_mem.c ****         if (mem_aligned == DEF_YES) {                           /* If mem bufs' alignment offset eq
 570:rtos/uC-LIB/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 571:rtos/uC-LIB/lib_mem.c ****             if (mem_align_mod_dest != (sizeof(CPU_ALIGN) - 1)) {/* If leading octets avail,        
 572:rtos/uC-LIB/lib_mem.c ****                 i = (CPU_INT08S)mem_align_mod_dest;
 573:rtos/uC-LIB/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 574:rtos/uC-LIB/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 575:rtos/uC-LIB/lib_mem.c ****                    *pmem_08_dest-- = *pmem_08_src--;
 576:rtos/uC-LIB/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 577:rtos/uC-LIB/lib_mem.c ****                     i--;
 578:rtos/uC-LIB/lib_mem.c ****                 }
 579:rtos/uC-LIB/lib_mem.c ****             }
 580:rtos/uC-LIB/lib_mem.c **** 
 581:rtos/uC-LIB/lib_mem.c ****                                                                 /* See Note #3.                    
 582:rtos/uC-LIB/lib_mem.c ****             pmem_align_dest = (      CPU_ALIGN *)(((CPU_INT08U *)pmem_08_dest - sizeof(CPU_ALIGN)) 
 583:rtos/uC-LIB/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)(((CPU_INT08U *)pmem_08_src  - sizeof(CPU_ALIGN)) 
 584:rtos/uC-LIB/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 585:rtos/uC-LIB/lib_mem.c ****                *pmem_align_dest-- = *pmem_align_src--;          /* ... copy psrc to pdest with CPU_
 586:rtos/uC-LIB/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 587:rtos/uC-LIB/lib_mem.c ****             }
 588:rtos/uC-LIB/lib_mem.c **** 
 589:rtos/uC-LIB/lib_mem.c ****             pmem_08_dest = (      CPU_INT08U *)pmem_align_dest + sizeof(CPU_ALIGN) - 1;
 590:rtos/uC-LIB/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src  + sizeof(CPU_ALIGN) - 1;
 591:rtos/uC-LIB/lib_mem.c **** 
 592:rtos/uC-LIB/lib_mem.c ****         }
 593:rtos/uC-LIB/lib_mem.c ****     }
 594:rtos/uC-LIB/lib_mem.c **** 
 595:rtos/uC-LIB/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 596:rtos/uC-LIB/lib_mem.c ****        *pmem_08_dest-- = *pmem_08_src--;                        /* ... copy psrc to pdest by octets
 597:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 598:rtos/uC-LIB/lib_mem.c ****     }
 599:rtos/uC-LIB/lib_mem.c **** }
 600:rtos/uC-LIB/lib_mem.c **** 
ARM GAS  /tmp/cc3qzkyx.s 			page 12


 601:rtos/uC-LIB/lib_mem.c **** 
 602:rtos/uC-LIB/lib_mem.c **** /*
 603:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 604:rtos/uC-LIB/lib_mem.c **** *                                              Mem_Cmp()
 605:rtos/uC-LIB/lib_mem.c **** *
 606:rtos/uC-LIB/lib_mem.c **** * Description : Verifies that ALL data octets in two memory buffers are identical in sequence.
 607:rtos/uC-LIB/lib_mem.c **** *
 608:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p1_mem      Pointer to first  memory buffer.
 609:rtos/uC-LIB/lib_mem.c **** *
 610:rtos/uC-LIB/lib_mem.c **** *               p2_mem      Pointer to second memory buffer.
 611:rtos/uC-LIB/lib_mem.c **** *
 612:rtos/uC-LIB/lib_mem.c **** *               size        Number of data buffer octets to compare (see Note #1).
 613:rtos/uC-LIB/lib_mem.c **** *
 614:rtos/uC-LIB/lib_mem.c **** * Return(s)   : DEF_YES, if 'size' number of data octets are identical in both memory buffers.
 615:rtos/uC-LIB/lib_mem.c **** *
 616:rtos/uC-LIB/lib_mem.c **** *               DEF_NO,  otherwise.
 617:rtos/uC-LIB/lib_mem.c **** *
 618:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 619:rtos/uC-LIB/lib_mem.c **** *
 620:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) Null compares allowed (i.e. zero-length compares); 'DEF_YES' returned to indica
 621:rtos/uC-LIB/lib_mem.c **** *                   identical null compare.
 622:rtos/uC-LIB/lib_mem.c **** *
 623:rtos/uC-LIB/lib_mem.c **** *               (2) Many memory buffer comparisons vary ONLY in the least significant octets -- e.g
 624:rtos/uC-LIB/lib_mem.c **** *                   network address buffers.  Consequently, memory buffer comparison is more effici
 625:rtos/uC-LIB/lib_mem.c **** *                   if the comparison starts from the end of the memory buffers which will abort so
 626:rtos/uC-LIB/lib_mem.c **** *                   on dissimilar memory buffers that vary only in the least significant octets.
 627:rtos/uC-LIB/lib_mem.c **** *
 628:rtos/uC-LIB/lib_mem.c **** *               (3) For best CPU performance, optimized to compare data buffers using 'CPU_ALIGN'-s
 629:rtos/uC-LIB/lib_mem.c **** *                   data words. Since many word-aligned processors REQUIRE that multi-octet words b
 630:rtos/uC-LIB/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 631:rtos/uC-LIB/lib_mem.c **** *                   addresses.
 632:rtos/uC-LIB/lib_mem.c **** *
 633:rtos/uC-LIB/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 634:rtos/uC-LIB/lib_mem.c **** *                   address boundary.
 635:rtos/uC-LIB/lib_mem.c **** *
 636:rtos/uC-LIB/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 637:rtos/uC-LIB/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 638:rtos/uC-LIB/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 639:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 640:rtos/uC-LIB/lib_mem.c **** */
 641:rtos/uC-LIB/lib_mem.c **** 
 642:rtos/uC-LIB/lib_mem.c **** CPU_BOOLEAN  Mem_Cmp (const  void        *p1_mem,
 643:rtos/uC-LIB/lib_mem.c ****                       const  void        *p2_mem,
 644:rtos/uC-LIB/lib_mem.c ****                              CPU_SIZE_T   size)
 645:rtos/uC-LIB/lib_mem.c **** {
 646:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 647:rtos/uC-LIB/lib_mem.c ****            CPU_ALIGN    *p1_mem_align;
 648:rtos/uC-LIB/lib_mem.c ****            CPU_ALIGN    *p2_mem_align;
 649:rtos/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *p1_mem_08;
 650:rtos/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *p2_mem_08;
 651:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      i;
 652:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_1;
 653:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_2;
 654:rtos/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 655:rtos/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_cmp;
 656:rtos/uC-LIB/lib_mem.c **** 
 657:rtos/uC-LIB/lib_mem.c **** 
ARM GAS  /tmp/cc3qzkyx.s 			page 13


 658:rtos/uC-LIB/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 659:rtos/uC-LIB/lib_mem.c ****         return (DEF_YES);
 660:rtos/uC-LIB/lib_mem.c ****     }
 661:rtos/uC-LIB/lib_mem.c ****     if (p1_mem == (void *)0) {
 662:rtos/uC-LIB/lib_mem.c ****         return (DEF_NO);
 663:rtos/uC-LIB/lib_mem.c ****     }
 664:rtos/uC-LIB/lib_mem.c ****     if (p2_mem == (void *)0) {
 665:rtos/uC-LIB/lib_mem.c ****         return (DEF_NO);
 666:rtos/uC-LIB/lib_mem.c ****     }
 667:rtos/uC-LIB/lib_mem.c **** 
 668:rtos/uC-LIB/lib_mem.c **** 
 669:rtos/uC-LIB/lib_mem.c ****     mem_cmp         =  DEF_YES;                                 /* Assume mem bufs are identical un
 670:rtos/uC-LIB/lib_mem.c ****     size_rem        =  size;
 671:rtos/uC-LIB/lib_mem.c ****                                                                 /* Start @ end of mem bufs (see Not
 672:rtos/uC-LIB/lib_mem.c ****     p1_mem_08       = (const CPU_INT08U *)p1_mem + size;
 673:rtos/uC-LIB/lib_mem.c ****     p2_mem_08       = (const CPU_INT08U *)p2_mem + size;
 674:rtos/uC-LIB/lib_mem.c ****                                                                 /* See Note #4.                    
 675:rtos/uC-LIB/lib_mem.c ****     mem_align_mod_1 = (CPU_INT08U)((CPU_ADDR)p1_mem_08 % sizeof(CPU_ALIGN));
 676:rtos/uC-LIB/lib_mem.c ****     mem_align_mod_2 = (CPU_INT08U)((CPU_ADDR)p2_mem_08 % sizeof(CPU_ALIGN));
 677:rtos/uC-LIB/lib_mem.c **** 
 678:rtos/uC-LIB/lib_mem.c ****     mem_aligned     = (mem_align_mod_1 == mem_align_mod_2) ? DEF_YES : DEF_NO;
 679:rtos/uC-LIB/lib_mem.c **** 
 680:rtos/uC-LIB/lib_mem.c ****     if (mem_aligned == DEF_YES) {                               /* If mem bufs' alignment offset eq
 681:rtos/uC-LIB/lib_mem.c ****                                                                 /* ... optimize cmp for mem buf ali
 682:rtos/uC-LIB/lib_mem.c ****         if (mem_align_mod_1 != 0u) {                            /* If trailing octets avail,       
 683:rtos/uC-LIB/lib_mem.c ****             i = mem_align_mod_1;
 684:rtos/uC-LIB/lib_mem.c ****             while ((mem_cmp == DEF_YES) &&                      /* ... cmp mem bufs while identical
 685:rtos/uC-LIB/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 686:rtos/uC-LIB/lib_mem.c ****                    (i        > 0)) {                            /* ... until next CPU_ALIGN word bo
 687:rtos/uC-LIB/lib_mem.c ****                 p1_mem_08--;
 688:rtos/uC-LIB/lib_mem.c ****                 p2_mem_08--;
 689:rtos/uC-LIB/lib_mem.c ****                 if (*p1_mem_08 != *p2_mem_08) {                 /* If ANY data octet(s) NOT identic
 690:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 691:rtos/uC-LIB/lib_mem.c ****                 }
 692:rtos/uC-LIB/lib_mem.c ****                 size_rem -= sizeof(CPU_INT08U);
 693:rtos/uC-LIB/lib_mem.c ****                 i--;
 694:rtos/uC-LIB/lib_mem.c ****             }
 695:rtos/uC-LIB/lib_mem.c ****         }
 696:rtos/uC-LIB/lib_mem.c **** 
 697:rtos/uC-LIB/lib_mem.c ****         if (mem_cmp == DEF_YES) {                               /* If cmp still identical, cmp alig
 698:rtos/uC-LIB/lib_mem.c ****             p1_mem_align = (CPU_ALIGN *)p1_mem_08;              /* See Note #3.                    
 699:rtos/uC-LIB/lib_mem.c ****             p2_mem_align = (CPU_ALIGN *)p2_mem_08;
 700:rtos/uC-LIB/lib_mem.c **** 
 701:rtos/uC-LIB/lib_mem.c ****             while ((mem_cmp  == DEF_YES) &&                     /* Cmp mem bufs while identical & .
 702:rtos/uC-LIB/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 703:rtos/uC-LIB/lib_mem.c ****                 p1_mem_align--;
 704:rtos/uC-LIB/lib_mem.c ****                 p2_mem_align--;
 705:rtos/uC-LIB/lib_mem.c ****                 if (*p1_mem_align != *p2_mem_align) {           /* If ANY data octet(s) NOT identic
 706:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 707:rtos/uC-LIB/lib_mem.c ****                 }
 708:rtos/uC-LIB/lib_mem.c ****                 size_rem -= sizeof(CPU_ALIGN);
 709:rtos/uC-LIB/lib_mem.c ****             }
 710:rtos/uC-LIB/lib_mem.c **** 
 711:rtos/uC-LIB/lib_mem.c ****             p1_mem_08 = (CPU_INT08U *)p1_mem_align;
 712:rtos/uC-LIB/lib_mem.c ****             p2_mem_08 = (CPU_INT08U *)p2_mem_align;
 713:rtos/uC-LIB/lib_mem.c ****         }
 714:rtos/uC-LIB/lib_mem.c ****     }
ARM GAS  /tmp/cc3qzkyx.s 			page 14


 715:rtos/uC-LIB/lib_mem.c **** 
 716:rtos/uC-LIB/lib_mem.c ****     while ((mem_cmp == DEF_YES) &&                              /* Cmp mem bufs while identical ...
 717:rtos/uC-LIB/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 718:rtos/uC-LIB/lib_mem.c ****         p1_mem_08--;
 719:rtos/uC-LIB/lib_mem.c ****         p2_mem_08--;
 720:rtos/uC-LIB/lib_mem.c ****         if (*p1_mem_08 != *p2_mem_08) {                         /* If ANY data octet(s) NOT identic
 721:rtos/uC-LIB/lib_mem.c ****              mem_cmp = DEF_NO;
 722:rtos/uC-LIB/lib_mem.c ****         }
 723:rtos/uC-LIB/lib_mem.c ****         size_rem -= sizeof(CPU_INT08U);
 724:rtos/uC-LIB/lib_mem.c ****     }
 725:rtos/uC-LIB/lib_mem.c **** 
 726:rtos/uC-LIB/lib_mem.c ****     return (mem_cmp);
 727:rtos/uC-LIB/lib_mem.c **** }
 728:rtos/uC-LIB/lib_mem.c **** 
 729:rtos/uC-LIB/lib_mem.c **** 
 730:rtos/uC-LIB/lib_mem.c **** /*
 731:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 732:rtos/uC-LIB/lib_mem.c **** *                                           Mem_HeapAlloc()
 733:rtos/uC-LIB/lib_mem.c **** *
 734:rtos/uC-LIB/lib_mem.c **** * Description : Allocates a memory block from the heap memory segment.
 735:rtos/uC-LIB/lib_mem.c **** *
 736:rtos/uC-LIB/lib_mem.c **** * Argument(s) : size            Size      of memory block to allocate (in bytes).
 737:rtos/uC-LIB/lib_mem.c **** *
 738:rtos/uC-LIB/lib_mem.c **** *               align           Alignment of memory block to specific word boundary (in bytes).
 739:rtos/uC-LIB/lib_mem.c **** *
 740:rtos/uC-LIB/lib_mem.c **** *               p_bytes_reqd    Optional pointer to a variable to ... :
 741:rtos/uC-LIB/lib_mem.c **** *
 742:rtos/uC-LIB/lib_mem.c **** *                                   (a) Return the number of bytes required to successfully
 743:rtos/uC-LIB/lib_mem.c **** *                                           allocate the memory block, if any error(s);
 744:rtos/uC-LIB/lib_mem.c **** *                                   (b) Return 0, otherwise.
 745:rtos/uC-LIB/lib_mem.c **** *
 746:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 747:rtos/uC-LIB/lib_mem.c **** *
 748:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
 749:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_HEAP_EMPTY          No more memory available on hea
 750:rtos/uC-LIB/lib_mem.c **** *
 751:rtos/uC-LIB/lib_mem.c **** *                                   ---------------------RETURNED BY Mem_SegAllocInternal()--------
 752:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
 753:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
 754:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
 755:rtos/uC-LIB/lib_mem.c **** *
 756:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
 757:rtos/uC-LIB/lib_mem.c **** *
 758:rtos/uC-LIB/lib_mem.c **** *               Pointer to NULL,         otherwise.
 759:rtos/uC-LIB/lib_mem.c **** *
 760:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 761:rtos/uC-LIB/lib_mem.c **** *
 762:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) Pointers to variables that return values MUST be initialized PRIOR to all other
 763:rtos/uC-LIB/lib_mem.c **** *                   validation or function handling in case of any error(s).
 764:rtos/uC-LIB/lib_mem.c **** *
 765:rtos/uC-LIB/lib_mem.c **** *               (2) This function is DEPRECATED and will be removed in a future version of this pro
 766:rtos/uC-LIB/lib_mem.c **** *                   Mem_SegAlloc(), Mem_SegAllocExt() or Mem_SegAllocHW() should be used instead.
 767:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 768:rtos/uC-LIB/lib_mem.c **** */
 769:rtos/uC-LIB/lib_mem.c **** 
 770:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 771:rtos/uC-LIB/lib_mem.c **** void  *Mem_HeapAlloc (CPU_SIZE_T   size,
ARM GAS  /tmp/cc3qzkyx.s 			page 15


 772:rtos/uC-LIB/lib_mem.c ****                       CPU_SIZE_T   align,
 773:rtos/uC-LIB/lib_mem.c ****                       CPU_SIZE_T  *p_bytes_reqd,
 774:rtos/uC-LIB/lib_mem.c ****                       LIB_ERR     *p_err)
 775:rtos/uC-LIB/lib_mem.c **** {
 776:rtos/uC-LIB/lib_mem.c ****     void  *p_mem;
 777:rtos/uC-LIB/lib_mem.c **** 
 778:rtos/uC-LIB/lib_mem.c **** 
 779:rtos/uC-LIB/lib_mem.c ****     p_mem = Mem_SegAllocInternal(DEF_NULL,
 780:rtos/uC-LIB/lib_mem.c ****                                 &Mem_SegHeap,
 781:rtos/uC-LIB/lib_mem.c ****                                  size,
 782:rtos/uC-LIB/lib_mem.c ****                                  align,
 783:rtos/uC-LIB/lib_mem.c ****                                  LIB_MEM_CFG_HEAP_PADDING_ALIGN,
 784:rtos/uC-LIB/lib_mem.c ****                                  p_bytes_reqd,
 785:rtos/uC-LIB/lib_mem.c ****                                  p_err);
 786:rtos/uC-LIB/lib_mem.c ****     if (*p_err == LIB_MEM_ERR_SEG_OVF) {
 787:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_HEAP_OVF;
 788:rtos/uC-LIB/lib_mem.c ****     }
 789:rtos/uC-LIB/lib_mem.c **** 
 790:rtos/uC-LIB/lib_mem.c ****     return (p_mem);
 791:rtos/uC-LIB/lib_mem.c **** }
 792:rtos/uC-LIB/lib_mem.c **** #endif
 793:rtos/uC-LIB/lib_mem.c **** 
 794:rtos/uC-LIB/lib_mem.c **** 
 795:rtos/uC-LIB/lib_mem.c **** /*
 796:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 797:rtos/uC-LIB/lib_mem.c **** *                                        Mem_HeapGetSizeRem()
 798:rtos/uC-LIB/lib_mem.c **** *
 799:rtos/uC-LIB/lib_mem.c **** * Description : Gets remaining heap memory size available to allocate.
 800:rtos/uC-LIB/lib_mem.c **** *
 801:rtos/uC-LIB/lib_mem.c **** * Argument(s) : align       Desired word boundary alignment (in bytes) to return remaining memory s
 802:rtos/uC-LIB/lib_mem.c **** *
 803:rtos/uC-LIB/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 804:rtos/uC-LIB/lib_mem.c **** *
 805:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
 806:rtos/uC-LIB/lib_mem.c **** *
 807:rtos/uC-LIB/lib_mem.c **** *                               --------------------RETURNED BY Mem_SegRemSizeGet()----------------
 808:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
 809:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
 810:rtos/uC-LIB/lib_mem.c **** *
 811:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Remaining heap memory size (in bytes), if NO error(s).
 812:rtos/uC-LIB/lib_mem.c **** *
 813:rtos/uC-LIB/lib_mem.c **** *               0,                                     otherwise.
 814:rtos/uC-LIB/lib_mem.c **** *
 815:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 816:rtos/uC-LIB/lib_mem.c **** *
 817:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
 818:rtos/uC-LIB/lib_mem.c **** *                   Mem_SegRemSizeGet() should be used instead.
 819:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 820:rtos/uC-LIB/lib_mem.c **** */
 821:rtos/uC-LIB/lib_mem.c **** 
 822:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 823:rtos/uC-LIB/lib_mem.c **** CPU_SIZE_T  Mem_HeapGetSizeRem (CPU_SIZE_T   align,
 824:rtos/uC-LIB/lib_mem.c ****                                 LIB_ERR     *p_err)
 825:rtos/uC-LIB/lib_mem.c **** {
 826:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  rem_size;
 827:rtos/uC-LIB/lib_mem.c **** 
 828:rtos/uC-LIB/lib_mem.c **** 
ARM GAS  /tmp/cc3qzkyx.s 			page 16


 829:rtos/uC-LIB/lib_mem.c ****     rem_size = Mem_SegRemSizeGet(&Mem_SegHeap,
 830:rtos/uC-LIB/lib_mem.c ****                                   align,
 831:rtos/uC-LIB/lib_mem.c ****                                   DEF_NULL,
 832:rtos/uC-LIB/lib_mem.c ****                                   p_err);
 833:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 834:rtos/uC-LIB/lib_mem.c ****         return (0u);
 835:rtos/uC-LIB/lib_mem.c ****     }
 836:rtos/uC-LIB/lib_mem.c **** 
 837:rtos/uC-LIB/lib_mem.c ****     return (rem_size);
 838:rtos/uC-LIB/lib_mem.c **** }
 839:rtos/uC-LIB/lib_mem.c **** #endif
 840:rtos/uC-LIB/lib_mem.c **** 
 841:rtos/uC-LIB/lib_mem.c **** 
 842:rtos/uC-LIB/lib_mem.c **** /*
 843:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 844:rtos/uC-LIB/lib_mem.c **** *                                            Mem_SegCreate()
 845:rtos/uC-LIB/lib_mem.c **** *
 846:rtos/uC-LIB/lib_mem.c **** * Description : Creates a new memory segment to be used for runtime memory allocation.
 847:rtos/uC-LIB/lib_mem.c **** *
 848:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name          Pointer to segment name.
 849:rtos/uC-LIB/lib_mem.c **** *
 850:rtos/uC-LIB/lib_mem.c **** *               p_seg           Pointer to segment data. Must be allocated by caller.
 851:rtos/uC-LIB/lib_mem.c **** *
 852:rtos/uC-LIB/lib_mem.c **** *               seg_base_addr   Address of segment's first byte.
 853:rtos/uC-LIB/lib_mem.c **** *
 854:rtos/uC-LIB/lib_mem.c **** *               size            Total size of segment, in bytes.
 855:rtos/uC-LIB/lib_mem.c **** *
 856:rtos/uC-LIB/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
 857:rtos/uC-LIB/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
 858:rtos/uC-LIB/lib_mem.c **** *                               means no padding.
 859:rtos/uC-LIB/lib_mem.c **** *
 860:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 861:rtos/uC-LIB/lib_mem.c **** *
 862:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                    Operation was successful.
 863:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_SIZE        Invalid segment size specif
 864:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid padding alignment.
 865:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Error or segment data point
 866:rtos/uC-LIB/lib_mem.c **** *
 867:rtos/uC-LIB/lib_mem.c **** *                                   -------------------RETURNED BY Mem_SegOverlapChkCritical()-----
 868:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another ex
 869:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
 870:rtos/uC-LIB/lib_mem.c **** *
 871:rtos/uC-LIB/lib_mem.c **** * Return(s)   : None.
 872:rtos/uC-LIB/lib_mem.c **** *
 873:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 874:rtos/uC-LIB/lib_mem.c **** *
 875:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) New segments are checked for overlap with existing segments. A critical section
 876:rtos/uC-LIB/lib_mem.c **** *                   to be maintained during the whole list search and add procedure to prevent a re
 877:rtos/uC-LIB/lib_mem.c **** *                   call from creating another segment overlapping with the one being added.
 878:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 879:rtos/uC-LIB/lib_mem.c **** */
 880:rtos/uC-LIB/lib_mem.c **** 
 881:rtos/uC-LIB/lib_mem.c **** void  Mem_SegCreate (const  CPU_CHAR    *p_name,
 882:rtos/uC-LIB/lib_mem.c ****                             MEM_SEG     *p_seg,
 883:rtos/uC-LIB/lib_mem.c ****                             CPU_ADDR     seg_base_addr,
 884:rtos/uC-LIB/lib_mem.c ****                             CPU_SIZE_T   size,
 885:rtos/uC-LIB/lib_mem.c ****                             CPU_SIZE_T   padding_align,
ARM GAS  /tmp/cc3qzkyx.s 			page 17


 886:rtos/uC-LIB/lib_mem.c ****                             LIB_ERR     *p_err)
 887:rtos/uC-LIB/lib_mem.c **** {
 888:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 889:rtos/uC-LIB/lib_mem.c **** 
 890:rtos/uC-LIB/lib_mem.c **** 
 891:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 892:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
 893:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 894:rtos/uC-LIB/lib_mem.c ****     }
 895:rtos/uC-LIB/lib_mem.c **** 
 896:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Chk for null seg ptr.           
 897:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
 898:rtos/uC-LIB/lib_mem.c ****         return;
 899:rtos/uC-LIB/lib_mem.c ****     }
 900:rtos/uC-LIB/lib_mem.c **** 
 901:rtos/uC-LIB/lib_mem.c ****     if (size < 1u) {                                            /* Chk for invalid sized seg.      
 902:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
 903:rtos/uC-LIB/lib_mem.c ****         return;
 904:rtos/uC-LIB/lib_mem.c ****     }
 905:rtos/uC-LIB/lib_mem.c ****                                                                 /* Chk for addr space ovf.         
 906:rtos/uC-LIB/lib_mem.c ****     if (seg_base_addr + (size - 1u) < seg_base_addr) {
 907:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
 908:rtos/uC-LIB/lib_mem.c ****         return;
 909:rtos/uC-LIB/lib_mem.c ****     }
 910:rtos/uC-LIB/lib_mem.c **** 
 911:rtos/uC-LIB/lib_mem.c ****     if ((padding_align               != LIB_MEM_PADDING_ALIGN_NONE) &&
 912:rtos/uC-LIB/lib_mem.c ****         (MATH_IS_PWR2(padding_align) != DEF_YES)) {
 913:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
 914:rtos/uC-LIB/lib_mem.c ****         return;
 915:rtos/uC-LIB/lib_mem.c ****     }
 916:rtos/uC-LIB/lib_mem.c **** #endif
 917:rtos/uC-LIB/lib_mem.c **** 
 918:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
 919:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 920:rtos/uC-LIB/lib_mem.c ****     (void)Mem_SegOverlapChkCritical(seg_base_addr,              /* Chk for overlap.                
 921:rtos/uC-LIB/lib_mem.c ****                                     size,
 922:rtos/uC-LIB/lib_mem.c ****                                     p_err);
 923:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 924:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 925:rtos/uC-LIB/lib_mem.c ****         return;
 926:rtos/uC-LIB/lib_mem.c ****     }
 927:rtos/uC-LIB/lib_mem.c **** #endif
 928:rtos/uC-LIB/lib_mem.c **** 
 929:rtos/uC-LIB/lib_mem.c ****     Mem_SegCreateCritical(p_name,                               /* Create seg.                     
 930:rtos/uC-LIB/lib_mem.c ****                           p_seg,
 931:rtos/uC-LIB/lib_mem.c ****                           seg_base_addr,
 932:rtos/uC-LIB/lib_mem.c ****                           padding_align,
 933:rtos/uC-LIB/lib_mem.c ****                           size);
 934:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 935:rtos/uC-LIB/lib_mem.c **** 
 936:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 937:rtos/uC-LIB/lib_mem.c **** }
 938:rtos/uC-LIB/lib_mem.c **** 
 939:rtos/uC-LIB/lib_mem.c **** 
 940:rtos/uC-LIB/lib_mem.c **** /*
 941:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 942:rtos/uC-LIB/lib_mem.c **** *                                            Mem_SegClr()
ARM GAS  /tmp/cc3qzkyx.s 			page 18


 943:rtos/uC-LIB/lib_mem.c **** *
 944:rtos/uC-LIB/lib_mem.c **** * Description : Clears a memory segment.
 945:rtos/uC-LIB/lib_mem.c **** *
 946:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_seg           Pointer to segment data. Must be allocated by caller.
 947:rtos/uC-LIB/lib_mem.c **** *
 948:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 949:rtos/uC-LIB/lib_mem.c **** *
 950:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
 951:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
 952:rtos/uC-LIB/lib_mem.c **** *
 953:rtos/uC-LIB/lib_mem.c **** * Return(s)   : None.
 954:rtos/uC-LIB/lib_mem.c **** *
 955:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 956:rtos/uC-LIB/lib_mem.c **** *
 957:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) This function must be used with extreme caution. It must only be called on memo
 958:rtos/uC-LIB/lib_mem.c **** *                   segments that are no longer used.
 959:rtos/uC-LIB/lib_mem.c **** *
 960:rtos/uC-LIB/lib_mem.c **** *               (2) This function is disabled when debug mode is enabled to avoid heap memory leaks
 961:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 962:rtos/uC-LIB/lib_mem.c **** */
 963:rtos/uC-LIB/lib_mem.c **** 
 964:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_DISABLED)
 965:rtos/uC-LIB/lib_mem.c **** void  Mem_SegClr (MEM_SEG  *p_seg,
 966:rtos/uC-LIB/lib_mem.c ****                   LIB_ERR  *p_err)
 967:rtos/uC-LIB/lib_mem.c **** {
 968:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 969:rtos/uC-LIB/lib_mem.c **** 
 970:rtos/uC-LIB/lib_mem.c **** 
 971:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 972:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
 973:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 974:rtos/uC-LIB/lib_mem.c ****     }
 975:rtos/uC-LIB/lib_mem.c **** 
 976:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Chk for null seg ptr.           
 977:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
 978:rtos/uC-LIB/lib_mem.c ****         return;
 979:rtos/uC-LIB/lib_mem.c ****     }
 980:rtos/uC-LIB/lib_mem.c **** #endif
 981:rtos/uC-LIB/lib_mem.c **** 
 982:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
 983:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 984:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 985:rtos/uC-LIB/lib_mem.c **** 
 986:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 987:rtos/uC-LIB/lib_mem.c **** }
 988:rtos/uC-LIB/lib_mem.c **** #endif
 989:rtos/uC-LIB/lib_mem.c **** 
 990:rtos/uC-LIB/lib_mem.c **** 
 991:rtos/uC-LIB/lib_mem.c **** /*
 992:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
 993:rtos/uC-LIB/lib_mem.c **** *                                         Mem_SegRemSizeGet()
 994:rtos/uC-LIB/lib_mem.c **** *
 995:rtos/uC-LIB/lib_mem.c **** * Description : Gets free space of memory segment.
 996:rtos/uC-LIB/lib_mem.c **** *
 997:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_seg       Pointer to segment data.
 998:rtos/uC-LIB/lib_mem.c **** *
 999:rtos/uC-LIB/lib_mem.c **** *               align       Alignment in bytes to assume for calculation of free space.
ARM GAS  /tmp/cc3qzkyx.s 			page 19


1000:rtos/uC-LIB/lib_mem.c **** *
1001:rtos/uC-LIB/lib_mem.c **** *               p_seg_info  Pointer to structure that will receive further segment info data (used 
1002:rtos/uC-LIB/lib_mem.c **** *                           total size, base address and next allocation address).
1003:rtos/uC-LIB/lib_mem.c **** *
1004:rtos/uC-LIB/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1005:rtos/uC-LIB/lib_mem.c **** *
1006:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1007:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
1008:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
1009:rtos/uC-LIB/lib_mem.c **** *
1010:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Memory segment remaining size in bytes,     if successful.
1011:rtos/uC-LIB/lib_mem.c **** *               0,                                          otherwise or if memory segment empty.
1012:rtos/uC-LIB/lib_mem.c **** *
1013:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application,
1014:rtos/uC-LIB/lib_mem.c **** *               Mem_HeapGetSizeRem(),
1015:rtos/uC-LIB/lib_mem.c **** *               Mem_OutputUsage().
1016:rtos/uC-LIB/lib_mem.c **** *
1017:rtos/uC-LIB/lib_mem.c **** * Note(s)     : None.
1018:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1019:rtos/uC-LIB/lib_mem.c **** */
1020:rtos/uC-LIB/lib_mem.c **** 
1021:rtos/uC-LIB/lib_mem.c **** CPU_SIZE_T  Mem_SegRemSizeGet (MEM_SEG       *p_seg,
1022:rtos/uC-LIB/lib_mem.c ****                                CPU_SIZE_T     align,
1023:rtos/uC-LIB/lib_mem.c ****                                MEM_SEG_INFO  *p_seg_info,
1024:rtos/uC-LIB/lib_mem.c ****                                LIB_ERR       *p_err)
1025:rtos/uC-LIB/lib_mem.c **** {
1026:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  rem_size;
1027:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  total_size;
1028:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  used_size;
1029:rtos/uC-LIB/lib_mem.c ****     CPU_ADDR    next_addr_align;
1030:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
1031:rtos/uC-LIB/lib_mem.c **** 
1032:rtos/uC-LIB/lib_mem.c **** 
1033:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1034:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
1035:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(0);
1036:rtos/uC-LIB/lib_mem.c ****     }
1037:rtos/uC-LIB/lib_mem.c **** 
1038:rtos/uC-LIB/lib_mem.c ****     if (MATH_IS_PWR2(align) != DEF_YES) {                       /* Chk for invalid align val.      
1039:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
1040:rtos/uC-LIB/lib_mem.c ****         return (0u);
1041:rtos/uC-LIB/lib_mem.c ****     }
1042:rtos/uC-LIB/lib_mem.c **** #endif
1043:rtos/uC-LIB/lib_mem.c **** 
1044:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Dflt to heap in case p_seg is nu
1045:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1046:rtos/uC-LIB/lib_mem.c ****         p_seg = &Mem_SegHeap;
1047:rtos/uC-LIB/lib_mem.c **** #else
1048:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1049:rtos/uC-LIB/lib_mem.c ****         return (0u);
1050:rtos/uC-LIB/lib_mem.c **** #endif
1051:rtos/uC-LIB/lib_mem.c ****     }
1052:rtos/uC-LIB/lib_mem.c **** 
1053:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();                                       /* Calc seg stats.                 
1054:rtos/uC-LIB/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
1055:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
1056:rtos/uC-LIB/lib_mem.c **** 
ARM GAS  /tmp/cc3qzkyx.s 			page 20


1057:rtos/uC-LIB/lib_mem.c ****     total_size = (p_seg->AddrEnd  - p_seg->AddrBase) + 1u;
1058:rtos/uC-LIB/lib_mem.c ****     used_size  =  p_seg->AddrNext - p_seg->AddrBase;
1059:rtos/uC-LIB/lib_mem.c **** 
1060:rtos/uC-LIB/lib_mem.c ****     if (next_addr_align > p_seg->AddrEnd){
1061:rtos/uC-LIB/lib_mem.c ****         next_addr_align = 0u;
1062:rtos/uC-LIB/lib_mem.c ****         rem_size        = 0u;
1063:rtos/uC-LIB/lib_mem.c ****     } else {
1064:rtos/uC-LIB/lib_mem.c ****         rem_size        = total_size - (next_addr_align - p_seg->AddrBase);
1065:rtos/uC-LIB/lib_mem.c ****     }
1066:rtos/uC-LIB/lib_mem.c **** 
1067:rtos/uC-LIB/lib_mem.c ****     if (p_seg_info != DEF_NULL) {
1068:rtos/uC-LIB/lib_mem.c ****         p_seg_info->TotalSize     = total_size;
1069:rtos/uC-LIB/lib_mem.c ****         p_seg_info->UsedSize      = used_size;
1070:rtos/uC-LIB/lib_mem.c ****         p_seg_info->AddrBase      = p_seg->AddrBase;
1071:rtos/uC-LIB/lib_mem.c ****         p_seg_info->AddrNextAlloc = next_addr_align;
1072:rtos/uC-LIB/lib_mem.c ****     }
1073:rtos/uC-LIB/lib_mem.c **** 
1074:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
1075:rtos/uC-LIB/lib_mem.c **** 
1076:rtos/uC-LIB/lib_mem.c ****     return (rem_size);
1077:rtos/uC-LIB/lib_mem.c **** }
1078:rtos/uC-LIB/lib_mem.c **** 
1079:rtos/uC-LIB/lib_mem.c **** 
1080:rtos/uC-LIB/lib_mem.c **** /*
1081:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1082:rtos/uC-LIB/lib_mem.c **** *                                            Mem_SegAlloc()
1083:rtos/uC-LIB/lib_mem.c **** *
1084:rtos/uC-LIB/lib_mem.c **** * Description : Allocates memory from specified segment. Returned memory block will be aligned on a
1085:rtos/uC-LIB/lib_mem.c **** *               word boundary.
1086:rtos/uC-LIB/lib_mem.c **** *
1087:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name  Pointer to allocated object name. Used for allocations tracking. May be DEF
1088:rtos/uC-LIB/lib_mem.c **** *
1089:rtos/uC-LIB/lib_mem.c **** *               p_seg   Pointer to segment from which to allocate memory. Will be allocated from
1090:rtos/uC-LIB/lib_mem.c **** *                       general-purpose heap if null.
1091:rtos/uC-LIB/lib_mem.c **** *
1092:rtos/uC-LIB/lib_mem.c **** *               size    Size of memory block to allocate, in bytes.
1093:rtos/uC-LIB/lib_mem.c **** *
1094:rtos/uC-LIB/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1095:rtos/uC-LIB/lib_mem.c **** *
1096:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1097:rtos/uC-LIB/lib_mem.c **** *
1098:rtos/uC-LIB/lib_mem.c **** *                           ------------------RETURNED BY Mem_SegAllocInternal()-------------------
1099:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment requeste
1100:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size specified.
1101:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Error or segment data pointer NULL.
1102:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF             Allocation would overflow memory segmen
1103:rtos/uC-LIB/lib_mem.c **** *
1104:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1105:rtos/uC-LIB/lib_mem.c **** *
1106:rtos/uC-LIB/lib_mem.c **** *               DEF_NULL, otherwise.
1107:rtos/uC-LIB/lib_mem.c **** *
1108:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1109:rtos/uC-LIB/lib_mem.c **** *
1110:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) The memory block returned  by this function will be aligned on a word boundary.
1111:rtos/uC-LIB/lib_mem.c **** *                   order to specify a specific alignment value, use either Mem_SegAllocExt() or
1112:rtos/uC-LIB/lib_mem.c **** *                   Mem_SegAllocHW().
1113:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
ARM GAS  /tmp/cc3qzkyx.s 			page 21


1114:rtos/uC-LIB/lib_mem.c **** */
1115:rtos/uC-LIB/lib_mem.c **** 
1116:rtos/uC-LIB/lib_mem.c **** void  *Mem_SegAlloc (const  CPU_CHAR    *p_name,
1117:rtos/uC-LIB/lib_mem.c ****                             MEM_SEG     *p_seg,
1118:rtos/uC-LIB/lib_mem.c ****                             CPU_SIZE_T   size,
1119:rtos/uC-LIB/lib_mem.c ****                             LIB_ERR     *p_err)
1120:rtos/uC-LIB/lib_mem.c **** {
1121:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
1122:rtos/uC-LIB/lib_mem.c **** 
1123:rtos/uC-LIB/lib_mem.c **** 
1124:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1125:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1126:rtos/uC-LIB/lib_mem.c ****         p_seg = &Mem_SegHeap;
1127:rtos/uC-LIB/lib_mem.c **** #else
1128:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1129:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
1130:rtos/uC-LIB/lib_mem.c **** #endif
1131:rtos/uC-LIB/lib_mem.c ****     }
1132:rtos/uC-LIB/lib_mem.c **** 
1133:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
1134:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
1135:rtos/uC-LIB/lib_mem.c ****                                  size,
1136:rtos/uC-LIB/lib_mem.c ****                                  sizeof(CPU_ALIGN),
1137:rtos/uC-LIB/lib_mem.c ****                                  LIB_MEM_PADDING_ALIGN_NONE,
1138:rtos/uC-LIB/lib_mem.c ****                                  DEF_NULL,
1139:rtos/uC-LIB/lib_mem.c ****                                  p_err);
1140:rtos/uC-LIB/lib_mem.c **** 
1141:rtos/uC-LIB/lib_mem.c ****     return (p_blk);
1142:rtos/uC-LIB/lib_mem.c **** }
1143:rtos/uC-LIB/lib_mem.c **** 
1144:rtos/uC-LIB/lib_mem.c **** 
1145:rtos/uC-LIB/lib_mem.c **** /*
1146:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1147:rtos/uC-LIB/lib_mem.c **** *                                           Mem_SegAllocExt()
1148:rtos/uC-LIB/lib_mem.c **** *
1149:rtos/uC-LIB/lib_mem.c **** * Description : Allocates memory from specified memory segment.
1150:rtos/uC-LIB/lib_mem.c **** *
1151:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name          Pointer to allocated object name. Used for allocations tracking. Ma
1152:rtos/uC-LIB/lib_mem.c **** *
1153:rtos/uC-LIB/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1154:rtos/uC-LIB/lib_mem.c **** *                               general-purpose heap if null.
1155:rtos/uC-LIB/lib_mem.c **** *
1156:rtos/uC-LIB/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
1157:rtos/uC-LIB/lib_mem.c **** *
1158:rtos/uC-LIB/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
1159:rtos/uC-LIB/lib_mem.c **** *
1160:rtos/uC-LIB/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
1161:rtos/uC-LIB/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
1162:rtos/uC-LIB/lib_mem.c **** *
1163:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1164:rtos/uC-LIB/lib_mem.c **** *
1165:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1166:rtos/uC-LIB/lib_mem.c **** *
1167:rtos/uC-LIB/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1168:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1169:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1170:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
ARM GAS  /tmp/cc3qzkyx.s 			page 22


1171:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1172:rtos/uC-LIB/lib_mem.c **** *
1173:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1174:rtos/uC-LIB/lib_mem.c **** *
1175:rtos/uC-LIB/lib_mem.c **** *               DEF_NULL, otherwise.
1176:rtos/uC-LIB/lib_mem.c **** *
1177:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1178:rtos/uC-LIB/lib_mem.c **** *
1179:rtos/uC-LIB/lib_mem.c **** * Note(s)     : none.
1180:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1181:rtos/uC-LIB/lib_mem.c **** */
1182:rtos/uC-LIB/lib_mem.c **** 
1183:rtos/uC-LIB/lib_mem.c **** void  *Mem_SegAllocExt (const  CPU_CHAR    *p_name,
1184:rtos/uC-LIB/lib_mem.c ****                                MEM_SEG     *p_seg,
1185:rtos/uC-LIB/lib_mem.c ****                                CPU_SIZE_T   size,
1186:rtos/uC-LIB/lib_mem.c ****                                CPU_SIZE_T   align,
1187:rtos/uC-LIB/lib_mem.c ****                                CPU_SIZE_T  *p_bytes_reqd,
1188:rtos/uC-LIB/lib_mem.c ****                                LIB_ERR     *p_err)
1189:rtos/uC-LIB/lib_mem.c **** {
1190:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
1191:rtos/uC-LIB/lib_mem.c **** 
1192:rtos/uC-LIB/lib_mem.c **** 
1193:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1194:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1195:rtos/uC-LIB/lib_mem.c ****         p_seg = &Mem_SegHeap;
1196:rtos/uC-LIB/lib_mem.c **** #else
1197:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1198:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
1199:rtos/uC-LIB/lib_mem.c **** #endif
1200:rtos/uC-LIB/lib_mem.c ****     }
1201:rtos/uC-LIB/lib_mem.c **** 
1202:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
1203:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
1204:rtos/uC-LIB/lib_mem.c ****                                  size,
1205:rtos/uC-LIB/lib_mem.c ****                                  align,
1206:rtos/uC-LIB/lib_mem.c ****                                  LIB_MEM_PADDING_ALIGN_NONE,
1207:rtos/uC-LIB/lib_mem.c ****                                  p_bytes_reqd,
1208:rtos/uC-LIB/lib_mem.c ****                                  p_err);
1209:rtos/uC-LIB/lib_mem.c **** 
1210:rtos/uC-LIB/lib_mem.c ****     return (p_blk);
1211:rtos/uC-LIB/lib_mem.c **** }
1212:rtos/uC-LIB/lib_mem.c **** 
1213:rtos/uC-LIB/lib_mem.c **** 
1214:rtos/uC-LIB/lib_mem.c **** /*
1215:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1216:rtos/uC-LIB/lib_mem.c **** *                                          Mem_SegAllocHW()
1217:rtos/uC-LIB/lib_mem.c **** *
1218:rtos/uC-LIB/lib_mem.c **** * Description : Allocates memory from specified segment. The returned buffer will be padded in func
1219:rtos/uC-LIB/lib_mem.c **** *               of memory segment's properties.
1220:rtos/uC-LIB/lib_mem.c **** *
1221:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name          Pointer to allocated object name. Used for allocations tracking. Ma
1222:rtos/uC-LIB/lib_mem.c **** *
1223:rtos/uC-LIB/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1224:rtos/uC-LIB/lib_mem.c **** *                               general-purpose heap if null.
1225:rtos/uC-LIB/lib_mem.c **** *
1226:rtos/uC-LIB/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
1227:rtos/uC-LIB/lib_mem.c **** *
ARM GAS  /tmp/cc3qzkyx.s 			page 23


1228:rtos/uC-LIB/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
1229:rtos/uC-LIB/lib_mem.c **** *
1230:rtos/uC-LIB/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
1231:rtos/uC-LIB/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
1232:rtos/uC-LIB/lib_mem.c **** *
1233:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1234:rtos/uC-LIB/lib_mem.c **** *
1235:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1236:rtos/uC-LIB/lib_mem.c **** *
1237:rtos/uC-LIB/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1238:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1239:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1240:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1241:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1242:rtos/uC-LIB/lib_mem.c **** *
1243:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1244:rtos/uC-LIB/lib_mem.c **** *
1245:rtos/uC-LIB/lib_mem.c **** *               DEF_NULL, otherwise.
1246:rtos/uC-LIB/lib_mem.c **** *
1247:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1248:rtos/uC-LIB/lib_mem.c **** *
1249:rtos/uC-LIB/lib_mem.c **** * Note(s)     : none.
1250:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1251:rtos/uC-LIB/lib_mem.c **** */
1252:rtos/uC-LIB/lib_mem.c **** 
1253:rtos/uC-LIB/lib_mem.c **** void  *Mem_SegAllocHW (const  CPU_CHAR    *p_name,
1254:rtos/uC-LIB/lib_mem.c ****                               MEM_SEG     *p_seg,
1255:rtos/uC-LIB/lib_mem.c ****                               CPU_SIZE_T   size,
1256:rtos/uC-LIB/lib_mem.c ****                               CPU_SIZE_T   align,
1257:rtos/uC-LIB/lib_mem.c ****                               CPU_SIZE_T  *p_bytes_reqd,
1258:rtos/uC-LIB/lib_mem.c ****                               LIB_ERR     *p_err)
1259:rtos/uC-LIB/lib_mem.c **** {
1260:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
1261:rtos/uC-LIB/lib_mem.c **** 
1262:rtos/uC-LIB/lib_mem.c **** 
1263:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1264:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1265:rtos/uC-LIB/lib_mem.c ****         p_seg = &Mem_SegHeap;
1266:rtos/uC-LIB/lib_mem.c **** #else
1267:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1268:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
1269:rtos/uC-LIB/lib_mem.c **** #endif
1270:rtos/uC-LIB/lib_mem.c ****     }
1271:rtos/uC-LIB/lib_mem.c **** 
1272:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
1273:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
1274:rtos/uC-LIB/lib_mem.c ****                                  size,
1275:rtos/uC-LIB/lib_mem.c ****                                  align,
1276:rtos/uC-LIB/lib_mem.c ****                                  p_seg->PaddingAlign,
1277:rtos/uC-LIB/lib_mem.c ****                                  p_bytes_reqd,
1278:rtos/uC-LIB/lib_mem.c ****                                  p_err);
1279:rtos/uC-LIB/lib_mem.c **** 
1280:rtos/uC-LIB/lib_mem.c ****     return (p_blk);
1281:rtos/uC-LIB/lib_mem.c **** }
1282:rtos/uC-LIB/lib_mem.c **** 
1283:rtos/uC-LIB/lib_mem.c **** 
1284:rtos/uC-LIB/lib_mem.c **** /*
ARM GAS  /tmp/cc3qzkyx.s 			page 24


1285:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1286:rtos/uC-LIB/lib_mem.c **** *                                          Mem_PoolCreate()
1287:rtos/uC-LIB/lib_mem.c **** *
1288:rtos/uC-LIB/lib_mem.c **** * Description : (1) Creates a memory pool :
1289:rtos/uC-LIB/lib_mem.c **** *
1290:rtos/uC-LIB/lib_mem.c **** *                   (a) Create    memory pool from heap or dedicated memory
1291:rtos/uC-LIB/lib_mem.c **** *                   (b) Allocate  memory pool memory blocks
1292:rtos/uC-LIB/lib_mem.c **** *                   (c) Configure memory pool
1293:rtos/uC-LIB/lib_mem.c **** *
1294:rtos/uC-LIB/lib_mem.c **** *
1295:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_pool          Pointer to a memory pool structure to create (see Note #1).
1296:rtos/uC-LIB/lib_mem.c **** *
1297:rtos/uC-LIB/lib_mem.c **** *               p_mem_base      Memory pool segment base address :
1298:rtos/uC-LIB/lib_mem.c **** *
1299:rtos/uC-LIB/lib_mem.c **** *                                       (a)     Null address    Memory pool allocated from general-
1300:rtos/uC-LIB/lib_mem.c **** *                                       (b) Non-null address    Memory pool allocated from dedicate
1301:rtos/uC-LIB/lib_mem.c **** *                                                                   specified by its base address.
1302:rtos/uC-LIB/lib_mem.c **** *
1303:rtos/uC-LIB/lib_mem.c **** *               mem_size        Size      of memory pool segment          (in bytes).
1304:rtos/uC-LIB/lib_mem.c **** *
1305:rtos/uC-LIB/lib_mem.c **** *               blk_nbr         Number    of memory pool blocks to create.
1306:rtos/uC-LIB/lib_mem.c **** *
1307:rtos/uC-LIB/lib_mem.c **** *               blk_size        Size      of memory pool blocks to create (in bytes).
1308:rtos/uC-LIB/lib_mem.c **** *
1309:rtos/uC-LIB/lib_mem.c **** *               blk_align       Alignment of memory pool blocks to specific word boundary (in bytes
1310:rtos/uC-LIB/lib_mem.c **** *
1311:rtos/uC-LIB/lib_mem.c **** *               p_bytes_reqd    Optional pointer to a variable to ... :
1312:rtos/uC-LIB/lib_mem.c **** *
1313:rtos/uC-LIB/lib_mem.c **** *                                   (a) Return the number of bytes required to successfully
1314:rtos/uC-LIB/lib_mem.c **** *                                               allocate the memory pool, if any error(s);
1315:rtos/uC-LIB/lib_mem.c **** *                                   (b) Return 0, otherwise.
1316:rtos/uC-LIB/lib_mem.c **** *
1317:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1318:rtos/uC-LIB/lib_mem.c **** *
1319:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                    Operation was successful.
1320:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Pointer to memory pool is n
1321:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN       Invalid block alignment req
1322:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR         Invalid number of blocks sp
1323:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE        Invalid block size specifie
1324:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_SIZE        Invalid segment size.
1325:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_HEAP_EMPTY              No more memory available on
1326:rtos/uC-LIB/lib_mem.c **** *
1327:rtos/uC-LIB/lib_mem.c **** *                                   ---------------RETURNED BY Mem_SegOverlapChkCritical()---------
1328:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
1329:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another ex
1330:rtos/uC-LIB/lib_mem.c **** *
1331:rtos/uC-LIB/lib_mem.c **** *                                   -----------------RETURNED BY Mem_SegAllocExtCritical()---------
1332:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF                 Allocation would overflow m
1333:rtos/uC-LIB/lib_mem.c **** *
1334:rtos/uC-LIB/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1335:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid memory block alignm
1336:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE        Invalid memory block size s
1337:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Error or segment data point
1338:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF                 Allocation would overflow m
1339:rtos/uC-LIB/lib_mem.c **** *
1340:rtos/uC-LIB/lib_mem.c **** *                                   -----------------------RETURNED BY Mem_PoolClr()---------------
1341:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Argument 'p_pool' passed a 
ARM GAS  /tmp/cc3qzkyx.s 			page 25


1342:rtos/uC-LIB/lib_mem.c **** *
1343:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
1344:rtos/uC-LIB/lib_mem.c **** *
1345:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1346:rtos/uC-LIB/lib_mem.c **** *
1347:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1348:rtos/uC-LIB/lib_mem.c **** *                   Mem_DynPoolCreate() or Mem_DynPoolCreateHW() should be used instead.
1349:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1350:rtos/uC-LIB/lib_mem.c **** */
1351:rtos/uC-LIB/lib_mem.c **** 
1352:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1353:rtos/uC-LIB/lib_mem.c **** void  Mem_PoolCreate (MEM_POOL          *p_pool,
1354:rtos/uC-LIB/lib_mem.c ****                       void              *p_mem_base,
1355:rtos/uC-LIB/lib_mem.c ****                       CPU_SIZE_T         mem_size,
1356:rtos/uC-LIB/lib_mem.c ****                       MEM_POOL_BLK_QTY   blk_nbr,
1357:rtos/uC-LIB/lib_mem.c ****                       CPU_SIZE_T         blk_size,
1358:rtos/uC-LIB/lib_mem.c ****                       CPU_SIZE_T         blk_align,
1359:rtos/uC-LIB/lib_mem.c ****                       CPU_SIZE_T        *p_bytes_reqd,
1360:rtos/uC-LIB/lib_mem.c ****                       LIB_ERR           *p_err)
1361:rtos/uC-LIB/lib_mem.c **** {
1362:rtos/uC-LIB/lib_mem.c ****     MEM_SEG           *p_seg;
1363:rtos/uC-LIB/lib_mem.c ****     void              *p_pool_mem;
1364:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T         pool_size;
1365:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T         blk_size_align;
1366:rtos/uC-LIB/lib_mem.c ****     CPU_ADDR           pool_addr_end;
1367:rtos/uC-LIB/lib_mem.c ****     MEM_POOL_BLK_QTY   blk_ix;
1368:rtos/uC-LIB/lib_mem.c ****     CPU_INT08U        *p_blk;
1369:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
1370:rtos/uC-LIB/lib_mem.c **** 
1371:rtos/uC-LIB/lib_mem.c **** 
1372:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* --------------- VALIDATE RTN ERR
1373:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {
1374:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1375:rtos/uC-LIB/lib_mem.c ****     }
1376:rtos/uC-LIB/lib_mem.c **** 
1377:rtos/uC-LIB/lib_mem.c ****                                                                 /* ------------- VALIDATE MEM POOL 
1378:rtos/uC-LIB/lib_mem.c ****     if (p_pool == DEF_NULL) {
1379:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1380:rtos/uC-LIB/lib_mem.c ****         return;
1381:rtos/uC-LIB/lib_mem.c ****     }
1382:rtos/uC-LIB/lib_mem.c **** 
1383:rtos/uC-LIB/lib_mem.c ****     if (p_mem_base != DEF_NULL) {
1384:rtos/uC-LIB/lib_mem.c ****         if (mem_size < 1u) {
1385:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
1386:rtos/uC-LIB/lib_mem.c ****             return;
1387:rtos/uC-LIB/lib_mem.c ****         }
1388:rtos/uC-LIB/lib_mem.c ****     }
1389:rtos/uC-LIB/lib_mem.c **** 
1390:rtos/uC-LIB/lib_mem.c ****     if (blk_nbr < 1u) {
1391:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_NBR;
1392:rtos/uC-LIB/lib_mem.c ****         return;
1393:rtos/uC-LIB/lib_mem.c ****     }
1394:rtos/uC-LIB/lib_mem.c **** 
1395:rtos/uC-LIB/lib_mem.c ****     if (blk_size < 1u) {
1396:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1397:rtos/uC-LIB/lib_mem.c ****         return;
1398:rtos/uC-LIB/lib_mem.c ****     }
ARM GAS  /tmp/cc3qzkyx.s 			page 26


1399:rtos/uC-LIB/lib_mem.c **** 
1400:rtos/uC-LIB/lib_mem.c ****     if (MATH_IS_PWR2(blk_align) != DEF_YES) {                   /* Chk that req alignment is a pwr 
1401:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ALIGN;
1402:rtos/uC-LIB/lib_mem.c ****         return;
1403:rtos/uC-LIB/lib_mem.c ****     }
1404:rtos/uC-LIB/lib_mem.c **** #endif
1405:rtos/uC-LIB/lib_mem.c **** 
1406:rtos/uC-LIB/lib_mem.c ****     Mem_PoolClr(p_pool, p_err);                                 /* Init mem pool.                  
1407:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
1408:rtos/uC-LIB/lib_mem.c ****          return;
1409:rtos/uC-LIB/lib_mem.c ****     }
1410:rtos/uC-LIB/lib_mem.c **** 
1411:rtos/uC-LIB/lib_mem.c ****                                                                 /* -------- DETERMINE AND/OR ALLOC 
1412:rtos/uC-LIB/lib_mem.c ****     if (p_mem_base == DEF_NULL) {                               /* Use heap seg.                   
1413:rtos/uC-LIB/lib_mem.c ****         p_seg = &Mem_SegHeap;
1414:rtos/uC-LIB/lib_mem.c ****     } else {                                                    /* Use other seg.                  
1415:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
1416:rtos/uC-LIB/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
1417:rtos/uC-LIB/lib_mem.c ****                                                     mem_size,
1418:rtos/uC-LIB/lib_mem.c ****                                                     p_err);
1419:rtos/uC-LIB/lib_mem.c ****         switch (*p_err) {
1420:rtos/uC-LIB/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_EXISTS:                /* Seg already exists.             
1421:rtos/uC-LIB/lib_mem.c ****                  break;
1422:rtos/uC-LIB/lib_mem.c **** 
1423:rtos/uC-LIB/lib_mem.c ****             case LIB_MEM_ERR_NONE:                              /* Seg must be created.            
1424:rtos/uC-LIB/lib_mem.c ****                  p_seg = (MEM_SEG *)Mem_SegAllocExtCritical(&Mem_SegHeap,
1425:rtos/uC-LIB/lib_mem.c ****                                                              sizeof(MEM_SEG),
1426:rtos/uC-LIB/lib_mem.c ****                                                              sizeof(CPU_ALIGN),
1427:rtos/uC-LIB/lib_mem.c ****                                                              LIB_MEM_PADDING_ALIGN_NONE,
1428:rtos/uC-LIB/lib_mem.c ****                                                              p_bytes_reqd,
1429:rtos/uC-LIB/lib_mem.c ****                                                              p_err);
1430:rtos/uC-LIB/lib_mem.c ****                  if (*p_err != LIB_MEM_ERR_NONE) {
1431:rtos/uC-LIB/lib_mem.c ****                      CPU_CRITICAL_EXIT();
1432:rtos/uC-LIB/lib_mem.c ****                      return;
1433:rtos/uC-LIB/lib_mem.c ****                  }
1434:rtos/uC-LIB/lib_mem.c **** 
1435:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)                    /* Track alloc if req'd.           
1436:rtos/uC-LIB/lib_mem.c ****                  Mem_SegAllocTrackCritical("Unknown segment data",
1437:rtos/uC-LIB/lib_mem.c ****                                            &Mem_SegHeap,
1438:rtos/uC-LIB/lib_mem.c ****                                             sizeof(MEM_SEG),
1439:rtos/uC-LIB/lib_mem.c ****                                             p_err);
1440:rtos/uC-LIB/lib_mem.c ****                  if (*p_err != LIB_MEM_ERR_NONE) {
1441:rtos/uC-LIB/lib_mem.c ****                      CPU_CRITICAL_EXIT();
1442:rtos/uC-LIB/lib_mem.c ****                      return;
1443:rtos/uC-LIB/lib_mem.c ****                  }
1444:rtos/uC-LIB/lib_mem.c **** #endif
1445:rtos/uC-LIB/lib_mem.c **** 
1446:rtos/uC-LIB/lib_mem.c ****                  Mem_SegCreateCritical(          DEF_NULL,
1447:rtos/uC-LIB/lib_mem.c ****                                                  p_seg,
1448:rtos/uC-LIB/lib_mem.c ****                                        (CPU_ADDR)p_mem_base,
1449:rtos/uC-LIB/lib_mem.c ****                                                  LIB_MEM_PADDING_ALIGN_NONE,
1450:rtos/uC-LIB/lib_mem.c ****                                                  mem_size);
1451:rtos/uC-LIB/lib_mem.c ****                  break;
1452:rtos/uC-LIB/lib_mem.c **** 
1453:rtos/uC-LIB/lib_mem.c **** 
1454:rtos/uC-LIB/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_OVERLAP:
1455:rtos/uC-LIB/lib_mem.c ****             default:
ARM GAS  /tmp/cc3qzkyx.s 			page 27


1456:rtos/uC-LIB/lib_mem.c ****                  CPU_CRITICAL_EXIT();
1457:rtos/uC-LIB/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
1458:rtos/uC-LIB/lib_mem.c ****         }
1459:rtos/uC-LIB/lib_mem.c **** 
1460:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
1461:rtos/uC-LIB/lib_mem.c ****     }
1462:rtos/uC-LIB/lib_mem.c **** 
1463:rtos/uC-LIB/lib_mem.c **** 
1464:rtos/uC-LIB/lib_mem.c ****                                                                 /* ---------------- ALLOC MEM FOR P
1465:rtos/uC-LIB/lib_mem.c ****                                                                 /* Calc blk size with align.       
1466:rtos/uC-LIB/lib_mem.c ****     blk_size_align =  MATH_ROUND_INC_UP_PWR2(blk_size, blk_align);
1467:rtos/uC-LIB/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
1468:rtos/uC-LIB/lib_mem.c **** 
1469:rtos/uC-LIB/lib_mem.c ****                                                                 /* Alloc mem for pool.             
1470:rtos/uC-LIB/lib_mem.c ****     p_pool_mem = (void *)Mem_SegAllocInternal("Unnamed static pool",
1471:rtos/uC-LIB/lib_mem.c ****                                                p_seg,
1472:rtos/uC-LIB/lib_mem.c ****                                                pool_size,
1473:rtos/uC-LIB/lib_mem.c ****                                                blk_align,
1474:rtos/uC-LIB/lib_mem.c ****                                                LIB_MEM_PADDING_ALIGN_NONE,
1475:rtos/uC-LIB/lib_mem.c ****                                                p_bytes_reqd,
1476:rtos/uC-LIB/lib_mem.c ****                                                p_err);
1477:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
1478:rtos/uC-LIB/lib_mem.c ****         return;
1479:rtos/uC-LIB/lib_mem.c ****     }
1480:rtos/uC-LIB/lib_mem.c **** 
1481:rtos/uC-LIB/lib_mem.c ****                                                                 /* ------------ ALLOC MEM FOR FREE 
1482:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTbl = (void **)Mem_SegAllocInternal("Unnamed static pool free blk tbl",
1483:rtos/uC-LIB/lib_mem.c ****                                                        &Mem_SegHeap,
1484:rtos/uC-LIB/lib_mem.c ****                                                         blk_nbr * sizeof(void *),
1485:rtos/uC-LIB/lib_mem.c ****                                                         sizeof(CPU_ALIGN),
1486:rtos/uC-LIB/lib_mem.c ****                                                         LIB_MEM_PADDING_ALIGN_NONE,
1487:rtos/uC-LIB/lib_mem.c ****                                                         p_bytes_reqd,
1488:rtos/uC-LIB/lib_mem.c ****                                                         p_err);
1489:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
1490:rtos/uC-LIB/lib_mem.c ****         return;
1491:rtos/uC-LIB/lib_mem.c ****     }
1492:rtos/uC-LIB/lib_mem.c **** 
1493:rtos/uC-LIB/lib_mem.c ****                                                                 /* ------------------ INIT BLK LIST
1494:rtos/uC-LIB/lib_mem.c ****     p_blk = (CPU_INT08U *)p_pool_mem;
1495:rtos/uC-LIB/lib_mem.c ****     for (blk_ix = 0; blk_ix < blk_nbr; blk_ix++) {
1496:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
1497:rtos/uC-LIB/lib_mem.c ****         p_blk                      += blk_size_align;
1498:rtos/uC-LIB/lib_mem.c ****     }
1499:rtos/uC-LIB/lib_mem.c **** 
1500:rtos/uC-LIB/lib_mem.c **** 
1501:rtos/uC-LIB/lib_mem.c ****                                                                 /* ------------------ INIT POOL DAT
1502:rtos/uC-LIB/lib_mem.c ****     pool_addr_end         = (CPU_ADDR)p_pool_mem + (pool_size - 1u);
1503:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrStart =  p_pool_mem;
1504:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrEnd   = (void *)pool_addr_end;
1505:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkNbr        =  blk_nbr;
1506:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkSize       =  blk_size_align;
1507:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx  =  blk_nbr;
1508:rtos/uC-LIB/lib_mem.c **** }
1509:rtos/uC-LIB/lib_mem.c **** #endif
1510:rtos/uC-LIB/lib_mem.c **** 
1511:rtos/uC-LIB/lib_mem.c **** 
1512:rtos/uC-LIB/lib_mem.c **** /*
ARM GAS  /tmp/cc3qzkyx.s 			page 28


1513:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1514:rtos/uC-LIB/lib_mem.c **** *                                            Mem_PoolClr()
1515:rtos/uC-LIB/lib_mem.c **** *
1516:rtos/uC-LIB/lib_mem.c **** * Description : Clears a memory pool (see Note #1).
1517:rtos/uC-LIB/lib_mem.c **** *
1518:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_pool   Pointer to a memory pool structure to clear (see Note #2).
1519:rtos/uC-LIB/lib_mem.c **** *
1520:rtos/uC-LIB/lib_mem.c **** *               p_err    Pointer to variable that will receive the return error code from this func
1521:rtos/uC-LIB/lib_mem.c **** *
1522:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
1523:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL poi
1524:rtos/uC-LIB/lib_mem.c **** *
1525:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
1526:rtos/uC-LIB/lib_mem.c **** *
1527:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application,
1528:rtos/uC-LIB/lib_mem.c **** *               Mem_PoolCreate().
1529:rtos/uC-LIB/lib_mem.c **** *
1530:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) (a) Mem_PoolClr() ONLY clears a memory pool structure's variables & should ONLY
1531:rtos/uC-LIB/lib_mem.c **** *                       called to initialize a memory pool structure prior to calling Mem_PoolCreat
1532:rtos/uC-LIB/lib_mem.c **** *
1533:rtos/uC-LIB/lib_mem.c **** *                   (b) Mem_PoolClr() does NOT deallocate memory from the memory pool or deallocate
1534:rtos/uC-LIB/lib_mem.c **** *                       memory pool itself & MUST NOT be called after calling Mem_PoolCreate() sinc
1535:rtos/uC-LIB/lib_mem.c **** *                       this will likely corrupt the memory pool management.
1536:rtos/uC-LIB/lib_mem.c **** *
1537:rtos/uC-LIB/lib_mem.c **** *               (2) Assumes 'p_pool' points to a valid memory pool (if non-NULL).
1538:rtos/uC-LIB/lib_mem.c **** *
1539:rtos/uC-LIB/lib_mem.c **** *               (3) This function is DEPRECATED and will be removed in a future version of this pro
1540:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1541:rtos/uC-LIB/lib_mem.c **** */
1542:rtos/uC-LIB/lib_mem.c **** 
1543:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1544:rtos/uC-LIB/lib_mem.c **** void  Mem_PoolClr (MEM_POOL  *p_pool,
1545:rtos/uC-LIB/lib_mem.c ****                    LIB_ERR   *p_err)
1546:rtos/uC-LIB/lib_mem.c **** {
1547:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE RTN ERR 
1548:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {
1549:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1550:rtos/uC-LIB/lib_mem.c ****     }
1551:rtos/uC-LIB/lib_mem.c **** 
1552:rtos/uC-LIB/lib_mem.c ****                                                                 /* -------------- VALIDATE MEM POOL
1553:rtos/uC-LIB/lib_mem.c ****     if (p_pool == DEF_NULL) {
1554:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1555:rtos/uC-LIB/lib_mem.c ****         return;
1556:rtos/uC-LIB/lib_mem.c ****     }
1557:rtos/uC-LIB/lib_mem.c **** #endif
1558:rtos/uC-LIB/lib_mem.c **** 
1559:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrStart = DEF_NULL;
1560:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrEnd   = DEF_NULL;
1561:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkSize       = 0u;
1562:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkNbr        = 0u;
1563:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTbl    = DEF_NULL;
1564:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx  = 0u;
1565:rtos/uC-LIB/lib_mem.c **** 
1566:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
1567:rtos/uC-LIB/lib_mem.c **** }
1568:rtos/uC-LIB/lib_mem.c **** #endif
1569:rtos/uC-LIB/lib_mem.c **** 
ARM GAS  /tmp/cc3qzkyx.s 			page 29


1570:rtos/uC-LIB/lib_mem.c **** 
1571:rtos/uC-LIB/lib_mem.c **** /*
1572:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1573:rtos/uC-LIB/lib_mem.c **** *                                          Mem_PoolBlkGet()
1574:rtos/uC-LIB/lib_mem.c **** *
1575:rtos/uC-LIB/lib_mem.c **** * Description : Gets a memory block from memory pool.
1576:rtos/uC-LIB/lib_mem.c **** *
1577:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_pool  Pointer to  memory pool to get memory block from.
1578:rtos/uC-LIB/lib_mem.c **** *
1579:rtos/uC-LIB/lib_mem.c **** *               size    Size of requested memory (in bytes).
1580:rtos/uC-LIB/lib_mem.c **** *
1581:rtos/uC-LIB/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1582:rtos/uC-LIB/lib_mem.c **** *
1583:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1584:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid memory pool block size requeste
1585:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL pointer
1586:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_POOL_EMPTY          NO memory blocks available in memory po
1587:rtos/uC-LIB/lib_mem.c **** *
1588:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
1589:rtos/uC-LIB/lib_mem.c **** *
1590:rtos/uC-LIB/lib_mem.c **** *               Pointer to NULL,         otherwise.
1591:rtos/uC-LIB/lib_mem.c **** *
1592:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1593:rtos/uC-LIB/lib_mem.c **** *
1594:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1595:rtos/uC-LIB/lib_mem.c **** *                   Mem_DynPoolBlkGet() should be used instead.
1596:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1597:rtos/uC-LIB/lib_mem.c **** */
1598:rtos/uC-LIB/lib_mem.c **** 
1599:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1600:rtos/uC-LIB/lib_mem.c **** void  *Mem_PoolBlkGet (MEM_POOL    *p_pool,
1601:rtos/uC-LIB/lib_mem.c ****                        CPU_SIZE_T   size,
1602:rtos/uC-LIB/lib_mem.c ****                        LIB_ERR     *p_err)
1603:rtos/uC-LIB/lib_mem.c **** {
1604:rtos/uC-LIB/lib_mem.c ****     CPU_INT08U  *p_blk;
1605:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
1606:rtos/uC-LIB/lib_mem.c **** 
1607:rtos/uC-LIB/lib_mem.c **** 
1608:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE MEM POOL
1609:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Validate err ptr.               
1610:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
1611:rtos/uC-LIB/lib_mem.c ****     }
1612:rtos/uC-LIB/lib_mem.c **** 
1613:rtos/uC-LIB/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate pool ptr.              
1614:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1615:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
1616:rtos/uC-LIB/lib_mem.c ****     }
1617:rtos/uC-LIB/lib_mem.c **** 
1618:rtos/uC-LIB/lib_mem.c ****     if (size < 1u) {                                            /* Validate req'd size as non-NULL.
1619:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1620:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
1621:rtos/uC-LIB/lib_mem.c ****     }
1622:rtos/uC-LIB/lib_mem.c **** 
1623:rtos/uC-LIB/lib_mem.c ****     if (size > p_pool->BlkSize) {                               /* Validate req'd size <= mem pool 
1624:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1625:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
1626:rtos/uC-LIB/lib_mem.c ****     }
ARM GAS  /tmp/cc3qzkyx.s 			page 30


1627:rtos/uC-LIB/lib_mem.c **** #else
1628:rtos/uC-LIB/lib_mem.c ****     (void)size;                                                 /* Prevent possible 'variable unuse
1629:rtos/uC-LIB/lib_mem.c **** #endif
1630:rtos/uC-LIB/lib_mem.c **** 
1631:rtos/uC-LIB/lib_mem.c **** 
1632:rtos/uC-LIB/lib_mem.c ****                                                                 /* -------------- GET MEM BLK FROM 
1633:rtos/uC-LIB/lib_mem.c ****     p_blk = DEF_NULL;
1634:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
1635:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
1636:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTblIx                     -=  1u;
1637:rtos/uC-LIB/lib_mem.c ****         p_blk                                     = (CPU_INT08U *)p_pool->BlkFreeTbl[p_pool->BlkFre
1638:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  =  DEF_NULL;
1639:rtos/uC-LIB/lib_mem.c ****     }
1640:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
1641:rtos/uC-LIB/lib_mem.c **** 
1642:rtos/uC-LIB/lib_mem.c ****     if (p_blk == DEF_NULL) {
1643:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_EMPTY;
1644:rtos/uC-LIB/lib_mem.c ****     } else {
1645:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
1646:rtos/uC-LIB/lib_mem.c ****     }
1647:rtos/uC-LIB/lib_mem.c **** 
1648:rtos/uC-LIB/lib_mem.c ****     return (p_blk);
1649:rtos/uC-LIB/lib_mem.c **** }
1650:rtos/uC-LIB/lib_mem.c **** #endif
1651:rtos/uC-LIB/lib_mem.c **** 
1652:rtos/uC-LIB/lib_mem.c **** 
1653:rtos/uC-LIB/lib_mem.c **** /*
1654:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1655:rtos/uC-LIB/lib_mem.c **** *                                          Mem_PoolBlkFree()
1656:rtos/uC-LIB/lib_mem.c **** *
1657:rtos/uC-LIB/lib_mem.c **** * Description : Free a memory block to memory pool.
1658:rtos/uC-LIB/lib_mem.c **** *
1659:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_pool  Pointer to memory pool to free memory block.
1660:rtos/uC-LIB/lib_mem.c **** *
1661:rtos/uC-LIB/lib_mem.c **** *               p_blk   Pointer to memory block address to free.
1662:rtos/uC-LIB/lib_mem.c **** *
1663:rtos/uC-LIB/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1664:rtos/uC-LIB/lib_mem.c **** *
1665:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NONE                        Operation was successful.
1666:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                    Argument 'p_pool'/'p_blk' passe
1667:rtos/uC-LIB/lib_mem.c **** *                                                                       a NULL pointer.
1668:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_ADDR            Invalid memory block address.
1669:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL            Memory block address al
1670:rtos/uC-LIB/lib_mem.c **** *                                                                        in memory pool.
1671:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_POOL_FULL                   Pool is full.
1672:rtos/uC-LIB/lib_mem.c **** *
1673:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
1674:rtos/uC-LIB/lib_mem.c **** *
1675:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1676:rtos/uC-LIB/lib_mem.c **** *
1677:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1678:rtos/uC-LIB/lib_mem.c **** *                   Mem_DynPoolBlkFree() should be used instead.
1679:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1680:rtos/uC-LIB/lib_mem.c **** */
1681:rtos/uC-LIB/lib_mem.c **** 
1682:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1683:rtos/uC-LIB/lib_mem.c **** void  Mem_PoolBlkFree (MEM_POOL  *p_pool,
ARM GAS  /tmp/cc3qzkyx.s 			page 31


1684:rtos/uC-LIB/lib_mem.c ****                        void      *p_blk,
1685:rtos/uC-LIB/lib_mem.c ****                        LIB_ERR   *p_err)
1686:rtos/uC-LIB/lib_mem.c **** {
1687:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1688:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T   tbl_ix;
1689:rtos/uC-LIB/lib_mem.c ****     CPU_BOOLEAN  addr_valid;
1690:rtos/uC-LIB/lib_mem.c **** #endif
1691:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
1692:rtos/uC-LIB/lib_mem.c **** 
1693:rtos/uC-LIB/lib_mem.c **** 
1694:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE MEM POOL
1695:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {
1696:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1697:rtos/uC-LIB/lib_mem.c ****     }
1698:rtos/uC-LIB/lib_mem.c **** 
1699:rtos/uC-LIB/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate mem ptrs.              
1700:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1701:rtos/uC-LIB/lib_mem.c ****         return;
1702:rtos/uC-LIB/lib_mem.c ****     }
1703:rtos/uC-LIB/lib_mem.c **** 
1704:rtos/uC-LIB/lib_mem.c ****     if (p_blk == DEF_NULL) {
1705:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1706:rtos/uC-LIB/lib_mem.c ****         return;
1707:rtos/uC-LIB/lib_mem.c ****     }
1708:rtos/uC-LIB/lib_mem.c **** 
1709:rtos/uC-LIB/lib_mem.c ****     addr_valid = Mem_PoolBlkIsValidAddr(p_pool, p_blk);         /* Validate mem blk as valid pool b
1710:rtos/uC-LIB/lib_mem.c ****     if (addr_valid != DEF_OK) {
1711:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ADDR;
1712:rtos/uC-LIB/lib_mem.c ****         return;
1713:rtos/uC-LIB/lib_mem.c ****     }
1714:rtos/uC-LIB/lib_mem.c **** 
1715:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();                                       /* Make sure blk isn't already in f
1716:rtos/uC-LIB/lib_mem.c ****     for (tbl_ix = 0u; tbl_ix < p_pool->BlkNbr; tbl_ix++) {
1717:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkFreeTbl[tbl_ix] == p_blk) {
1718:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
1719:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL;
1720:rtos/uC-LIB/lib_mem.c ****             return;
1721:rtos/uC-LIB/lib_mem.c ****         }
1722:rtos/uC-LIB/lib_mem.c ****     }
1723:rtos/uC-LIB/lib_mem.c **** #else                                                           /* Double-free possibility if not i
1724:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
1725:rtos/uC-LIB/lib_mem.c **** #endif
1726:rtos/uC-LIB/lib_mem.c ****                                                                 /* --------------- FREE MEM BLK TO 
1727:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreeTblIx >= p_pool->BlkNbr) {
1728:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
1729:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
1730:rtos/uC-LIB/lib_mem.c ****         return;
1731:rtos/uC-LIB/lib_mem.c ****     }
1732:rtos/uC-LIB/lib_mem.c **** 
1733:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = p_blk;
1734:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx                     += 1u;
1735:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
1736:rtos/uC-LIB/lib_mem.c **** 
1737:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
1738:rtos/uC-LIB/lib_mem.c **** }
1739:rtos/uC-LIB/lib_mem.c **** #endif
1740:rtos/uC-LIB/lib_mem.c **** 
ARM GAS  /tmp/cc3qzkyx.s 			page 32


1741:rtos/uC-LIB/lib_mem.c **** 
1742:rtos/uC-LIB/lib_mem.c **** /*
1743:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1744:rtos/uC-LIB/lib_mem.c **** *                                      Mem_PoolBlkGetNbrAvail()
1745:rtos/uC-LIB/lib_mem.c **** *
1746:rtos/uC-LIB/lib_mem.c **** * Description : Get memory pool's remaining number of blocks available to allocate.
1747:rtos/uC-LIB/lib_mem.c **** *
1748:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_pool   Pointer to a memory pool structure.
1749:rtos/uC-LIB/lib_mem.c **** *
1750:rtos/uC-LIB/lib_mem.c **** *               p_err    Pointer to variable that will receive the return error code from this func
1751:rtos/uC-LIB/lib_mem.c **** *
1752:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
1753:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL poi
1754:rtos/uC-LIB/lib_mem.c **** *
1755:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Remaining memory pool blocks,   if NO error(s).
1756:rtos/uC-LIB/lib_mem.c **** *
1757:rtos/uC-LIB/lib_mem.c **** *               0,                              otherwise.
1758:rtos/uC-LIB/lib_mem.c **** *
1759:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1760:rtos/uC-LIB/lib_mem.c **** *
1761:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1762:rtos/uC-LIB/lib_mem.c **** *                   Mem_DynPoolBlkNbrAvailGet() should be used instead.
1763:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1764:rtos/uC-LIB/lib_mem.c **** */
1765:rtos/uC-LIB/lib_mem.c **** 
1766:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1767:rtos/uC-LIB/lib_mem.c **** MEM_POOL_BLK_QTY  Mem_PoolBlkGetNbrAvail (MEM_POOL  *p_pool,
1768:rtos/uC-LIB/lib_mem.c ****                                           LIB_ERR   *p_err)
1769:rtos/uC-LIB/lib_mem.c **** {
1770:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  nbr_avail;
1771:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
1772:rtos/uC-LIB/lib_mem.c **** 
1773:rtos/uC-LIB/lib_mem.c **** 
1774:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1775:rtos/uC-LIB/lib_mem.c ****                                                                 /* --------------- VALIDATE RTN ERR
1776:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {
1777:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(0u);
1778:rtos/uC-LIB/lib_mem.c ****     }
1779:rtos/uC-LIB/lib_mem.c ****                                                                 /* ---------------- VALIDATE MEM PO
1780:rtos/uC-LIB/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate mem ptr.               
1781:rtos/uC-LIB/lib_mem.c ****        *p_err =  LIB_MEM_ERR_NULL_PTR;
1782:rtos/uC-LIB/lib_mem.c ****         return (0u);
1783:rtos/uC-LIB/lib_mem.c ****     }
1784:rtos/uC-LIB/lib_mem.c **** #endif
1785:rtos/uC-LIB/lib_mem.c **** 
1786:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
1787:rtos/uC-LIB/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
1788:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
1789:rtos/uC-LIB/lib_mem.c **** 
1790:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
1791:rtos/uC-LIB/lib_mem.c **** 
1792:rtos/uC-LIB/lib_mem.c ****     return (nbr_avail);
1793:rtos/uC-LIB/lib_mem.c **** }
1794:rtos/uC-LIB/lib_mem.c **** #endif
1795:rtos/uC-LIB/lib_mem.c **** 
1796:rtos/uC-LIB/lib_mem.c **** 
1797:rtos/uC-LIB/lib_mem.c **** /*
ARM GAS  /tmp/cc3qzkyx.s 			page 33


1798:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1799:rtos/uC-LIB/lib_mem.c **** *                                          Mem_DynPoolCreate()
1800:rtos/uC-LIB/lib_mem.c **** *
1801:rtos/uC-LIB/lib_mem.c **** * Description : Creates a dynamic memory pool.
1802:rtos/uC-LIB/lib_mem.c **** *
1803:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name          Pointer to pool name.
1804:rtos/uC-LIB/lib_mem.c **** *
1805:rtos/uC-LIB/lib_mem.c **** *               p_pool          Pointer to pool data.
1806:rtos/uC-LIB/lib_mem.c **** *
1807:rtos/uC-LIB/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1808:rtos/uC-LIB/lib_mem.c **** *                               general-purpose heap if null.
1809:rtos/uC-LIB/lib_mem.c **** *
1810:rtos/uC-LIB/lib_mem.c **** *               blk_size        Size of memory block to allocate from pool, in bytes. See Note #1.
1811:rtos/uC-LIB/lib_mem.c **** *
1812:rtos/uC-LIB/lib_mem.c **** *               blk_align       Required alignment of memory block, in bytes. MUST be a power of 2.
1813:rtos/uC-LIB/lib_mem.c **** *
1814:rtos/uC-LIB/lib_mem.c **** *               blk_qty_init    Initial number of elements to be allocated in pool.
1815:rtos/uC-LIB/lib_mem.c **** *
1816:rtos/uC-LIB/lib_mem.c **** *               blk_qty_max     Maximum number of elements that can be allocated from this pool. Se
1817:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_BLK_QTY_UNLIMITED if no limit.
1818:rtos/uC-LIB/lib_mem.c **** *
1819:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1820:rtos/uC-LIB/lib_mem.c **** *
1821:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1822:rtos/uC-LIB/lib_mem.c **** *
1823:rtos/uC-LIB/lib_mem.c **** *                                   --------------------RETURNED BY Mem_DynPoolCreateInternal()----
1824:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN   Invalid requested block alignme
1825:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid requested block size.
1826:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR     Invalid requested block quantit
1827:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Pool data pointer NULL.
1828:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1829:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1830:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1831:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1832:rtos/uC-LIB/lib_mem.c **** *
1833:rtos/uC-LIB/lib_mem.c **** * Return(s)   : None.
1834:rtos/uC-LIB/lib_mem.c **** *
1835:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1836:rtos/uC-LIB/lib_mem.c **** *
1837:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
1838:rtos/uC-LIB/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
1839:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1840:rtos/uC-LIB/lib_mem.c **** */
1841:rtos/uC-LIB/lib_mem.c **** 
1842:rtos/uC-LIB/lib_mem.c **** void  Mem_DynPoolCreate (const  CPU_CHAR      *p_name,
1843:rtos/uC-LIB/lib_mem.c ****                                 MEM_DYN_POOL  *p_pool,
1844:rtos/uC-LIB/lib_mem.c ****                                 MEM_SEG       *p_seg,
1845:rtos/uC-LIB/lib_mem.c ****                                 CPU_SIZE_T     blk_size,
1846:rtos/uC-LIB/lib_mem.c ****                                 CPU_SIZE_T     blk_align,
1847:rtos/uC-LIB/lib_mem.c ****                                 CPU_SIZE_T     blk_qty_init,
1848:rtos/uC-LIB/lib_mem.c ****                                 CPU_SIZE_T     blk_qty_max,
1849:rtos/uC-LIB/lib_mem.c ****                                 LIB_ERR       *p_err)
1850:rtos/uC-LIB/lib_mem.c **** {
1851:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1852:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1853:rtos/uC-LIB/lib_mem.c ****         p_seg = &Mem_SegHeap;
1854:rtos/uC-LIB/lib_mem.c **** #else
ARM GAS  /tmp/cc3qzkyx.s 			page 34


1855:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1856:rtos/uC-LIB/lib_mem.c ****         return;
1857:rtos/uC-LIB/lib_mem.c **** #endif
1858:rtos/uC-LIB/lib_mem.c ****     }
1859:rtos/uC-LIB/lib_mem.c **** 
1860:rtos/uC-LIB/lib_mem.c ****     Mem_DynPoolCreateInternal(p_name,
1861:rtos/uC-LIB/lib_mem.c ****                               p_pool,
1862:rtos/uC-LIB/lib_mem.c ****                               p_seg,
1863:rtos/uC-LIB/lib_mem.c ****                               blk_size,
1864:rtos/uC-LIB/lib_mem.c ****                               blk_align,
1865:rtos/uC-LIB/lib_mem.c ****                               LIB_MEM_PADDING_ALIGN_NONE,
1866:rtos/uC-LIB/lib_mem.c ****                               blk_qty_init,
1867:rtos/uC-LIB/lib_mem.c ****                               blk_qty_max,
1868:rtos/uC-LIB/lib_mem.c ****                               p_err);
1869:rtos/uC-LIB/lib_mem.c **** }
1870:rtos/uC-LIB/lib_mem.c **** 
1871:rtos/uC-LIB/lib_mem.c **** 
1872:rtos/uC-LIB/lib_mem.c **** /*
1873:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1874:rtos/uC-LIB/lib_mem.c **** *                                        Mem_DynPoolCreateHW()
1875:rtos/uC-LIB/lib_mem.c **** *
1876:rtos/uC-LIB/lib_mem.c **** * Description : Creates a dynamic memory pool. Memory blocks will be padded according to memory seg
1877:rtos/uC-LIB/lib_mem.c **** *               properties.
1878:rtos/uC-LIB/lib_mem.c **** *
1879:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name          Pointer to pool name.
1880:rtos/uC-LIB/lib_mem.c **** *
1881:rtos/uC-LIB/lib_mem.c **** *               p_pool          Pointer to pool data.
1882:rtos/uC-LIB/lib_mem.c **** *
1883:rtos/uC-LIB/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will allocate fro
1884:rtos/uC-LIB/lib_mem.c **** *                               general-purpose heap if null.
1885:rtos/uC-LIB/lib_mem.c **** *
1886:rtos/uC-LIB/lib_mem.c **** *               blk_size        Size of memory block to allocate from pool, in bytes. See Note #1.
1887:rtos/uC-LIB/lib_mem.c **** *
1888:rtos/uC-LIB/lib_mem.c **** *               blk_align       Required alignment of memory block, in bytes. MUST be a power of 2.
1889:rtos/uC-LIB/lib_mem.c **** *
1890:rtos/uC-LIB/lib_mem.c **** *               blk_qty_init    Initial number of elements to be allocated in pool.
1891:rtos/uC-LIB/lib_mem.c **** *
1892:rtos/uC-LIB/lib_mem.c **** *               blk_qty_max     Maximum number of elements that can be allocated from this pool. Se
1893:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_BLK_QTY_UNLIMITED if no limit.
1894:rtos/uC-LIB/lib_mem.c **** *
1895:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1896:rtos/uC-LIB/lib_mem.c **** *
1897:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1898:rtos/uC-LIB/lib_mem.c **** *
1899:rtos/uC-LIB/lib_mem.c **** *                                   -------------------RETURNED BY Mem_DynPoolCreateInternal()-----
1900:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1901:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1902:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1903:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1904:rtos/uC-LIB/lib_mem.c **** *
1905:rtos/uC-LIB/lib_mem.c **** * Return(s)   : None.
1906:rtos/uC-LIB/lib_mem.c **** *
1907:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1908:rtos/uC-LIB/lib_mem.c **** *
1909:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
1910:rtos/uC-LIB/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
1911:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
ARM GAS  /tmp/cc3qzkyx.s 			page 35


1912:rtos/uC-LIB/lib_mem.c **** */
1913:rtos/uC-LIB/lib_mem.c **** 
1914:rtos/uC-LIB/lib_mem.c **** void  Mem_DynPoolCreateHW (const  CPU_CHAR      *p_name,
1915:rtos/uC-LIB/lib_mem.c ****                                   MEM_DYN_POOL  *p_pool,
1916:rtos/uC-LIB/lib_mem.c ****                                   MEM_SEG       *p_seg,
1917:rtos/uC-LIB/lib_mem.c ****                                   CPU_SIZE_T     blk_size,
1918:rtos/uC-LIB/lib_mem.c ****                                   CPU_SIZE_T     blk_align,
1919:rtos/uC-LIB/lib_mem.c ****                                   CPU_SIZE_T     blk_qty_init,
1920:rtos/uC-LIB/lib_mem.c ****                                   CPU_SIZE_T     blk_qty_max,
1921:rtos/uC-LIB/lib_mem.c ****                                   LIB_ERR       *p_err)
1922:rtos/uC-LIB/lib_mem.c **** {
1923:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
1924:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1925:rtos/uC-LIB/lib_mem.c ****         p_seg = &Mem_SegHeap;
1926:rtos/uC-LIB/lib_mem.c **** #else
1927:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1928:rtos/uC-LIB/lib_mem.c ****         return;
1929:rtos/uC-LIB/lib_mem.c **** #endif
1930:rtos/uC-LIB/lib_mem.c ****     }
1931:rtos/uC-LIB/lib_mem.c **** 
1932:rtos/uC-LIB/lib_mem.c ****     Mem_DynPoolCreateInternal(p_name,
1933:rtos/uC-LIB/lib_mem.c ****                               p_pool,
1934:rtos/uC-LIB/lib_mem.c ****                               p_seg,
1935:rtos/uC-LIB/lib_mem.c ****                               blk_size,
1936:rtos/uC-LIB/lib_mem.c ****                               blk_align,
1937:rtos/uC-LIB/lib_mem.c ****                               p_seg->PaddingAlign,
1938:rtos/uC-LIB/lib_mem.c ****                               blk_qty_init,
1939:rtos/uC-LIB/lib_mem.c ****                               blk_qty_max,
1940:rtos/uC-LIB/lib_mem.c ****                               p_err);
1941:rtos/uC-LIB/lib_mem.c **** }
1942:rtos/uC-LIB/lib_mem.c **** 
1943:rtos/uC-LIB/lib_mem.c **** 
1944:rtos/uC-LIB/lib_mem.c **** /*
1945:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1946:rtos/uC-LIB/lib_mem.c **** *                                          Mem_DynPoolBlkGet()
1947:rtos/uC-LIB/lib_mem.c **** *
1948:rtos/uC-LIB/lib_mem.c **** * Description : Gets a memory block from specified pool, growing it if needed.
1949:rtos/uC-LIB/lib_mem.c **** *
1950:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
1951:rtos/uC-LIB/lib_mem.c **** *
1952:rtos/uC-LIB/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1953:rtos/uC-LIB/lib_mem.c **** *
1954:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NONE                    Operation was successful.
1955:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                Pool data pointer NULL.
1956:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_POOL_EMPTY              Pools is empty.
1957:rtos/uC-LIB/lib_mem.c **** *
1958:rtos/uC-LIB/lib_mem.c **** *                           ----------------------RETURNED BY Mem_SegAllocInternal()---------------
1959:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid memory block alignment requ
1960:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_SIZE        Invalid memory block size specified
1961:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                Error or segment data pointer NULL.
1962:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF                 Allocation would overflow memory se
1963:rtos/uC-LIB/lib_mem.c **** *
1964:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to memory block, if successful.
1965:rtos/uC-LIB/lib_mem.c **** *
1966:rtos/uC-LIB/lib_mem.c **** *               DEF_NULL, otherwise.
1967:rtos/uC-LIB/lib_mem.c **** *
1968:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
ARM GAS  /tmp/cc3qzkyx.s 			page 36


1969:rtos/uC-LIB/lib_mem.c **** *
1970:rtos/uC-LIB/lib_mem.c **** * Note(s)     : none.
1971:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
1972:rtos/uC-LIB/lib_mem.c **** */
1973:rtos/uC-LIB/lib_mem.c **** 
1974:rtos/uC-LIB/lib_mem.c **** void  *Mem_DynPoolBlkGet (MEM_DYN_POOL  *p_pool,
1975:rtos/uC-LIB/lib_mem.c ****                           LIB_ERR       *p_err)
1976:rtos/uC-LIB/lib_mem.c **** {
1977:rtos/uC-LIB/lib_mem.c ****            void      *p_blk;
1978:rtos/uC-LIB/lib_mem.c ****     const  CPU_CHAR  *p_pool_name;
1979:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
1980:rtos/uC-LIB/lib_mem.c **** 
1981:rtos/uC-LIB/lib_mem.c **** 
1982:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1983:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
1984:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
1985:rtos/uC-LIB/lib_mem.c ****     }
1986:rtos/uC-LIB/lib_mem.c **** 
1987:rtos/uC-LIB/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
1988:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1989:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
1990:rtos/uC-LIB/lib_mem.c ****     }
1991:rtos/uC-LIB/lib_mem.c **** #endif
1992:rtos/uC-LIB/lib_mem.c **** 
1993:rtos/uC-LIB/lib_mem.c ****                                                                 /* Ensure pool is not empty if qty 
1994:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
1995:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
1996:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
1997:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
1998:rtos/uC-LIB/lib_mem.c **** 
1999:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_POOL_EMPTY;
2000:rtos/uC-LIB/lib_mem.c ****             return (DEF_NULL);
2001:rtos/uC-LIB/lib_mem.c ****         }
2002:rtos/uC-LIB/lib_mem.c **** 
2003:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkAllocCnt++;
2004:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
2005:rtos/uC-LIB/lib_mem.c ****     }
2006:rtos/uC-LIB/lib_mem.c **** 
2007:rtos/uC-LIB/lib_mem.c ****                                                                 /* --------------- ALLOC FROM FREE 
2008:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
2009:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
2010:rtos/uC-LIB/lib_mem.c ****         p_blk              = p_pool->BlkFreePtr;
2011:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreePtr = *((void **)p_blk);
2012:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
2013:rtos/uC-LIB/lib_mem.c **** 
2014:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
2015:rtos/uC-LIB/lib_mem.c **** 
2016:rtos/uC-LIB/lib_mem.c ****         return (p_blk);
2017:rtos/uC-LIB/lib_mem.c ****     }
2018:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
2019:rtos/uC-LIB/lib_mem.c **** 
2020:rtos/uC-LIB/lib_mem.c ****                                                                 /* ------------------ ALLOC NEW BLK
2021:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2022:rtos/uC-LIB/lib_mem.c ****     p_pool_name = p_pool->NamePtr;
2023:rtos/uC-LIB/lib_mem.c **** #else
2024:rtos/uC-LIB/lib_mem.c ****     p_pool_name = DEF_NULL;
2025:rtos/uC-LIB/lib_mem.c **** #endif
ARM GAS  /tmp/cc3qzkyx.s 			page 37


2026:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_pool_name,
2027:rtos/uC-LIB/lib_mem.c ****                                  p_pool->PoolSegPtr,
2028:rtos/uC-LIB/lib_mem.c ****                                  p_pool->BlkSize,
2029:rtos/uC-LIB/lib_mem.c ****                                  p_pool->BlkAlign,
2030:rtos/uC-LIB/lib_mem.c ****                                  p_pool->BlkPaddingAlign,
2031:rtos/uC-LIB/lib_mem.c ****                                  DEF_NULL,
2032:rtos/uC-LIB/lib_mem.c ****                                  p_err);
2033:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2034:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
2035:rtos/uC-LIB/lib_mem.c ****             p_pool->BlkAllocCnt--;
2036:rtos/uC-LIB/lib_mem.c ****         }
2037:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
2038:rtos/uC-LIB/lib_mem.c ****     }
2039:rtos/uC-LIB/lib_mem.c **** 
2040:rtos/uC-LIB/lib_mem.c ****     return (p_blk);
2041:rtos/uC-LIB/lib_mem.c **** }
2042:rtos/uC-LIB/lib_mem.c **** 
2043:rtos/uC-LIB/lib_mem.c **** 
2044:rtos/uC-LIB/lib_mem.c **** /*
2045:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2046:rtos/uC-LIB/lib_mem.c **** *                                         Mem_DynPoolBlkFree()
2047:rtos/uC-LIB/lib_mem.c **** *
2048:rtos/uC-LIB/lib_mem.c **** * Description : Frees memory block, making it available for future use.
2049:rtos/uC-LIB/lib_mem.c **** *
2050:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
2051:rtos/uC-LIB/lib_mem.c **** *
2052:rtos/uC-LIB/lib_mem.c **** *               p_blk   Pointer to first byte of memory block.
2053:rtos/uC-LIB/lib_mem.c **** *
2054:rtos/uC-LIB/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2055:rtos/uC-LIB/lib_mem.c **** *
2056:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NONE        Operation was successful.
2057:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR    'p_pool' or 'p_blk' pointer passed is NULL.
2058:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_POOL_FULL   Pool is full.
2059:rtos/uC-LIB/lib_mem.c **** *
2060:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
2061:rtos/uC-LIB/lib_mem.c **** *
2062:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
2063:rtos/uC-LIB/lib_mem.c **** *
2064:rtos/uC-LIB/lib_mem.c **** * Note(s)     : none.
2065:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2066:rtos/uC-LIB/lib_mem.c **** */
2067:rtos/uC-LIB/lib_mem.c **** 
2068:rtos/uC-LIB/lib_mem.c **** void  Mem_DynPoolBlkFree (MEM_DYN_POOL  *p_pool,
2069:rtos/uC-LIB/lib_mem.c ****                           void          *p_blk,
2070:rtos/uC-LIB/lib_mem.c ****                           LIB_ERR       *p_err)
2071:rtos/uC-LIB/lib_mem.c **** {
2072:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
2073:rtos/uC-LIB/lib_mem.c **** 
2074:rtos/uC-LIB/lib_mem.c **** 
2075:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2076:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2077:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2078:rtos/uC-LIB/lib_mem.c ****     }
2079:rtos/uC-LIB/lib_mem.c **** 
2080:rtos/uC-LIB/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2081:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2082:rtos/uC-LIB/lib_mem.c ****         return;
ARM GAS  /tmp/cc3qzkyx.s 			page 38


2083:rtos/uC-LIB/lib_mem.c ****     }
2084:rtos/uC-LIB/lib_mem.c **** 
2085:rtos/uC-LIB/lib_mem.c ****     if (p_blk == DEF_NULL) {
2086:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2087:rtos/uC-LIB/lib_mem.c ****         return;
2088:rtos/uC-LIB/lib_mem.c ****     }
2089:rtos/uC-LIB/lib_mem.c **** #endif
2090:rtos/uC-LIB/lib_mem.c **** 
2091:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {       /* Ensure pool is not full.        
2092:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
2093:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
2094:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
2095:rtos/uC-LIB/lib_mem.c **** 
2096:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_POOL_FULL;
2097:rtos/uC-LIB/lib_mem.c ****             return;
2098:rtos/uC-LIB/lib_mem.c ****         }
2099:rtos/uC-LIB/lib_mem.c **** 
2100:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkAllocCnt--;
2101:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
2102:rtos/uC-LIB/lib_mem.c ****     }
2103:rtos/uC-LIB/lib_mem.c **** 
2104:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
2105:rtos/uC-LIB/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
2106:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreePtr = p_blk;
2107:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
2108:rtos/uC-LIB/lib_mem.c **** 
2109:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
2110:rtos/uC-LIB/lib_mem.c **** }
2111:rtos/uC-LIB/lib_mem.c **** 
2112:rtos/uC-LIB/lib_mem.c **** 
2113:rtos/uC-LIB/lib_mem.c **** /*
2114:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2115:rtos/uC-LIB/lib_mem.c **** *                                     Mem_DynPoolBlkNbrAvailGet()
2116:rtos/uC-LIB/lib_mem.c **** *
2117:rtos/uC-LIB/lib_mem.c **** * Description : Gets number of available blocks in dynamic memory pool. This call will fail with a
2118:rtos/uC-LIB/lib_mem.c **** *               dynamic memory pool for which no limit was set at creation.
2119:rtos/uC-LIB/lib_mem.c **** *
2120:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
2121:rtos/uC-LIB/lib_mem.c **** *
2122:rtos/uC-LIB/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2123:rtos/uC-LIB/lib_mem.c **** *
2124:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
2125:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            'p_pool' pointer passed is NULL.
2126:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_POOL_UNLIMITED      Pool has no specified limit.
2127:rtos/uC-LIB/lib_mem.c **** *
2128:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Number of blocks available in dynamic memory pool, if successful.
2129:rtos/uC-LIB/lib_mem.c **** *
2130:rtos/uC-LIB/lib_mem.c **** *               0, if pool is empty or if an error occurred.
2131:rtos/uC-LIB/lib_mem.c **** *
2132:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
2133:rtos/uC-LIB/lib_mem.c **** *
2134:rtos/uC-LIB/lib_mem.c **** * Note(s)     : None.
2135:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2136:rtos/uC-LIB/lib_mem.c **** */
2137:rtos/uC-LIB/lib_mem.c **** 
2138:rtos/uC-LIB/lib_mem.c **** CPU_SIZE_T  Mem_DynPoolBlkNbrAvailGet (MEM_DYN_POOL  *p_pool,
2139:rtos/uC-LIB/lib_mem.c ****                                        LIB_ERR       *p_err)
ARM GAS  /tmp/cc3qzkyx.s 			page 39


2140:rtos/uC-LIB/lib_mem.c **** {
2141:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  blk_nbr_avail;
2142:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
2143:rtos/uC-LIB/lib_mem.c **** 
2144:rtos/uC-LIB/lib_mem.c **** 
2145:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2146:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2147:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(0);
2148:rtos/uC-LIB/lib_mem.c ****     }
2149:rtos/uC-LIB/lib_mem.c **** 
2150:rtos/uC-LIB/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2151:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2152:rtos/uC-LIB/lib_mem.c ****         return (0u);
2153:rtos/uC-LIB/lib_mem.c ****     }
2154:rtos/uC-LIB/lib_mem.c **** #endif
2155:rtos/uC-LIB/lib_mem.c **** 
2156:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
2157:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
2158:rtos/uC-LIB/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
2159:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
2160:rtos/uC-LIB/lib_mem.c **** 
2161:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
2162:rtos/uC-LIB/lib_mem.c ****     } else {
2163:rtos/uC-LIB/lib_mem.c ****         blk_nbr_avail = 0u;
2164:rtos/uC-LIB/lib_mem.c ****        *p_err         = LIB_MEM_ERR_POOL_UNLIMITED;
2165:rtos/uC-LIB/lib_mem.c ****     }
2166:rtos/uC-LIB/lib_mem.c **** 
2167:rtos/uC-LIB/lib_mem.c ****     return (blk_nbr_avail);
2168:rtos/uC-LIB/lib_mem.c **** }
2169:rtos/uC-LIB/lib_mem.c **** 
2170:rtos/uC-LIB/lib_mem.c **** 
2171:rtos/uC-LIB/lib_mem.c **** /*
2172:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2173:rtos/uC-LIB/lib_mem.c **** *                                           Mem_OutputUsage()
2174:rtos/uC-LIB/lib_mem.c **** *
2175:rtos/uC-LIB/lib_mem.c **** * Description : Outputs memory usage report through 'out_fnct'.
2176:rtos/uC-LIB/lib_mem.c **** *
2177:rtos/uC-LIB/lib_mem.c **** * Argument(s) : out_fnct        Pointer to output function.
2178:rtos/uC-LIB/lib_mem.c **** *
2179:rtos/uC-LIB/lib_mem.c **** *               print_details   DEF_YES, if the size of each allocation should be printed.
2180:rtos/uC-LIB/lib_mem.c **** *                               DEF_NO,  otherwise.
2181:rtos/uC-LIB/lib_mem.c **** *
2182:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2183:rtos/uC-LIB/lib_mem.c **** *
2184:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
2185:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            'out_fnct' pointer passed is NU
2186:rtos/uC-LIB/lib_mem.c **** *
2187:rtos/uC-LIB/lib_mem.c **** *                                   ---------------------RETURNED BY Mem_SegRemSizeGet()-----------
2188:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
2189:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
2190:rtos/uC-LIB/lib_mem.c **** *
2191:rtos/uC-LIB/lib_mem.c **** * Return(s)   : None.
2192:rtos/uC-LIB/lib_mem.c **** *
2193:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
2194:rtos/uC-LIB/lib_mem.c **** *
2195:rtos/uC-LIB/lib_mem.c **** * Note(s)     : none.
2196:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
ARM GAS  /tmp/cc3qzkyx.s 			page 40


2197:rtos/uC-LIB/lib_mem.c **** */
2198:rtos/uC-LIB/lib_mem.c **** 
2199:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2200:rtos/uC-LIB/lib_mem.c **** void  Mem_OutputUsage(void     (*out_fnct) (CPU_CHAR *),
2201:rtos/uC-LIB/lib_mem.c ****                       LIB_ERR   *p_err)
2202:rtos/uC-LIB/lib_mem.c **** {
2203:rtos/uC-LIB/lib_mem.c ****     CPU_CHAR   str[DEF_INT_32U_NBR_DIG_MAX];
2204:rtos/uC-LIB/lib_mem.c ****     MEM_SEG   *p_seg;
2205:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
2206:rtos/uC-LIB/lib_mem.c **** 
2207:rtos/uC-LIB/lib_mem.c **** 
2208:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2209:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2210:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2211:rtos/uC-LIB/lib_mem.c ****     }
2212:rtos/uC-LIB/lib_mem.c **** 
2213:rtos/uC-LIB/lib_mem.c ****     if (out_fnct == DEF_NULL) {                                 /* Chk for NULL out fnct ptr.      
2214:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2215:rtos/uC-LIB/lib_mem.c ****         return;
2216:rtos/uC-LIB/lib_mem.c ****     }
2217:rtos/uC-LIB/lib_mem.c **** #endif
2218:rtos/uC-LIB/lib_mem.c **** 
2219:rtos/uC-LIB/lib_mem.c ****     out_fnct((CPU_CHAR *)"---------------- Memory allocation info ----------------\r\n");
2220:rtos/uC-LIB/lib_mem.c ****     out_fnct((CPU_CHAR *)"| Type    | Size       | Free size  | Name\r\n");
2221:rtos/uC-LIB/lib_mem.c ****     out_fnct((CPU_CHAR *)"|---------|------------|------------|-------------------\r\n");
2222:rtos/uC-LIB/lib_mem.c **** 
2223:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
2224:rtos/uC-LIB/lib_mem.c ****     p_seg = Mem_SegHeadPtr;
2225:rtos/uC-LIB/lib_mem.c ****     while (p_seg != DEF_NULL) {
2226:rtos/uC-LIB/lib_mem.c ****         CPU_SIZE_T       rem_size;
2227:rtos/uC-LIB/lib_mem.c ****         MEM_SEG_INFO     seg_info;
2228:rtos/uC-LIB/lib_mem.c ****         MEM_ALLOC_INFO  *p_alloc;
2229:rtos/uC-LIB/lib_mem.c **** 
2230:rtos/uC-LIB/lib_mem.c **** 
2231:rtos/uC-LIB/lib_mem.c ****         rem_size = Mem_SegRemSizeGet(p_seg, 1u, &seg_info, p_err);
2232:rtos/uC-LIB/lib_mem.c ****         if (*p_err != LIB_MEM_ERR_NONE) {
2233:rtos/uC-LIB/lib_mem.c ****             return;
2234:rtos/uC-LIB/lib_mem.c ****         }
2235:rtos/uC-LIB/lib_mem.c **** 
2236:rtos/uC-LIB/lib_mem.c ****         out_fnct((CPU_CHAR *)"| Section | ");
2237:rtos/uC-LIB/lib_mem.c **** 
2238:rtos/uC-LIB/lib_mem.c ****         (void)Str_FmtNbr_Int32U(seg_info.TotalSize,
2239:rtos/uC-LIB/lib_mem.c ****                                 10u,
2240:rtos/uC-LIB/lib_mem.c ****                                 DEF_NBR_BASE_DEC,
2241:rtos/uC-LIB/lib_mem.c ****                                 ' ',
2242:rtos/uC-LIB/lib_mem.c ****                                 DEF_NO,
2243:rtos/uC-LIB/lib_mem.c ****                                 DEF_YES,
2244:rtos/uC-LIB/lib_mem.c ****                                &str[0u]);
2245:rtos/uC-LIB/lib_mem.c **** 
2246:rtos/uC-LIB/lib_mem.c ****         out_fnct(str);
2247:rtos/uC-LIB/lib_mem.c ****         out_fnct((CPU_CHAR *)" | ");
2248:rtos/uC-LIB/lib_mem.c **** 
2249:rtos/uC-LIB/lib_mem.c ****         (void)Str_FmtNbr_Int32U(rem_size,
2250:rtos/uC-LIB/lib_mem.c ****                                 10u,
2251:rtos/uC-LIB/lib_mem.c ****                                 DEF_NBR_BASE_DEC,
2252:rtos/uC-LIB/lib_mem.c ****                                 ' ',
2253:rtos/uC-LIB/lib_mem.c ****                                 DEF_NO,
ARM GAS  /tmp/cc3qzkyx.s 			page 41


2254:rtos/uC-LIB/lib_mem.c ****                                 DEF_YES,
2255:rtos/uC-LIB/lib_mem.c ****                                &str[0u]);
2256:rtos/uC-LIB/lib_mem.c **** 
2257:rtos/uC-LIB/lib_mem.c ****         out_fnct(str);
2258:rtos/uC-LIB/lib_mem.c ****         out_fnct((CPU_CHAR *)" | ");
2259:rtos/uC-LIB/lib_mem.c ****         out_fnct((p_seg->NamePtr != DEF_NULL) ? (CPU_CHAR *)p_seg->NamePtr : (CPU_CHAR *)"Unknown")
2260:rtos/uC-LIB/lib_mem.c ****         out_fnct((CPU_CHAR *)"\r\n");
2261:rtos/uC-LIB/lib_mem.c **** 
2262:rtos/uC-LIB/lib_mem.c ****         p_alloc = p_seg->AllocInfoHeadPtr;
2263:rtos/uC-LIB/lib_mem.c ****         while (p_alloc != DEF_NULL) {
2264:rtos/uC-LIB/lib_mem.c ****             out_fnct((CPU_CHAR *)"| -> Obj  | ");
2265:rtos/uC-LIB/lib_mem.c **** 
2266:rtos/uC-LIB/lib_mem.c ****             (void)Str_FmtNbr_Int32U(p_alloc->Size,
2267:rtos/uC-LIB/lib_mem.c ****                                     10u,
2268:rtos/uC-LIB/lib_mem.c ****                                     DEF_NBR_BASE_DEC,
2269:rtos/uC-LIB/lib_mem.c ****                                     ' ',
2270:rtos/uC-LIB/lib_mem.c ****                                     DEF_NO,
2271:rtos/uC-LIB/lib_mem.c ****                                     DEF_YES,
2272:rtos/uC-LIB/lib_mem.c ****                                    &str[0u]);
2273:rtos/uC-LIB/lib_mem.c **** 
2274:rtos/uC-LIB/lib_mem.c ****             out_fnct(str);
2275:rtos/uC-LIB/lib_mem.c ****             out_fnct((CPU_CHAR *)" |            | ");
2276:rtos/uC-LIB/lib_mem.c **** 
2277:rtos/uC-LIB/lib_mem.c ****             out_fnct((p_alloc->NamePtr != DEF_NULL) ? (CPU_CHAR *)p_alloc->NamePtr : (CPU_CHAR *)"U
2278:rtos/uC-LIB/lib_mem.c ****             out_fnct((CPU_CHAR *)"\r\n");
2279:rtos/uC-LIB/lib_mem.c **** 
2280:rtos/uC-LIB/lib_mem.c ****             p_alloc = p_alloc->NextPtr;
2281:rtos/uC-LIB/lib_mem.c ****         }
2282:rtos/uC-LIB/lib_mem.c **** 
2283:rtos/uC-LIB/lib_mem.c ****         p_seg = p_seg->NextPtr;
2284:rtos/uC-LIB/lib_mem.c ****     }
2285:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
2286:rtos/uC-LIB/lib_mem.c **** 
2287:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
2288:rtos/uC-LIB/lib_mem.c **** }
2289:rtos/uC-LIB/lib_mem.c **** #endif
2290:rtos/uC-LIB/lib_mem.c **** 
2291:rtos/uC-LIB/lib_mem.c **** 
2292:rtos/uC-LIB/lib_mem.c **** /*
2293:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2294:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2295:rtos/uC-LIB/lib_mem.c **** *                                           LOCAL FUNCTIONS
2296:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2297:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2298:rtos/uC-LIB/lib_mem.c **** */
2299:rtos/uC-LIB/lib_mem.c **** 
2300:rtos/uC-LIB/lib_mem.c **** /*
2301:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2302:rtos/uC-LIB/lib_mem.c **** *                                       Mem_SegCreateCritical()
2303:rtos/uC-LIB/lib_mem.c **** *
2304:rtos/uC-LIB/lib_mem.c **** * Description : Creates a new memory segment to be used for runtime memory allocation or dynamic po
2305:rtos/uC-LIB/lib_mem.c **** *
2306:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name          Pointer to segment name.
2307:rtos/uC-LIB/lib_mem.c **** *
2308:rtos/uC-LIB/lib_mem.c **** *               p_seg           Pointer to segment data. Must be allocated by caller.
2309:rtos/uC-LIB/lib_mem.c **** *               -----           Argument validated by caller.
2310:rtos/uC-LIB/lib_mem.c **** *
ARM GAS  /tmp/cc3qzkyx.s 			page 42


2311:rtos/uC-LIB/lib_mem.c **** *               seg_base_addr   Segment's first byte address.
2312:rtos/uC-LIB/lib_mem.c **** *
2313:rtos/uC-LIB/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2314:rtos/uC-LIB/lib_mem.c **** *                               from this memory segment. MUST be a power of 2.
2315:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_PADDING_ALIGN_NONE means no padding.
2316:rtos/uC-LIB/lib_mem.c **** *               -------------   Argument validated by caller.
2317:rtos/uC-LIB/lib_mem.c **** *
2318:rtos/uC-LIB/lib_mem.c **** *               size            Total size of segment, in bytes.
2319:rtos/uC-LIB/lib_mem.c **** *               ----            Argument validated by caller.
2320:rtos/uC-LIB/lib_mem.c **** *
2321:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to segment data, if successful.
2322:rtos/uC-LIB/lib_mem.c **** *
2323:rtos/uC-LIB/lib_mem.c **** *               DEF_NULL, otherwise.
2324:rtos/uC-LIB/lib_mem.c **** *
2325:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2326:rtos/uC-LIB/lib_mem.c **** *               Mem_SegCreate().
2327:rtos/uC-LIB/lib_mem.c **** *
2328:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2329:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2330:rtos/uC-LIB/lib_mem.c **** */
2331:rtos/uC-LIB/lib_mem.c **** 
2332:rtos/uC-LIB/lib_mem.c **** static  void  Mem_SegCreateCritical(const  CPU_CHAR    *p_name,
2333:rtos/uC-LIB/lib_mem.c ****                                            MEM_SEG     *p_seg,
2334:rtos/uC-LIB/lib_mem.c ****                                            CPU_ADDR     seg_base_addr,
2335:rtos/uC-LIB/lib_mem.c ****                                            CPU_SIZE_T   padding_align,
2336:rtos/uC-LIB/lib_mem.c ****                                            CPU_SIZE_T   size)
2337:rtos/uC-LIB/lib_mem.c **** {
  29              		.loc 1 2337 1 view -0
  30              		.cfi_startproc
  31              		@ args = 4, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
2338:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrBase         =  seg_base_addr;
  34              		.loc 1 2338 5 view .LVU1
  35              		.loc 1 2338 29 is_stmt 0 view .LVU2
  36 0000 0A60     		str	r2, [r1]
2339:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrEnd          = (seg_base_addr + (size - 1u));
  37              		.loc 1 2339 5 is_stmt 1 view .LVU3
  38              		.loc 1 2339 46 is_stmt 0 view .LVU4
  39 0002 0098     		ldr	r0, [sp]
  40              	.LVL1:
  41              		.loc 1 2339 46 view .LVU5
  42 0004 1044     		add	r0, r0, r2
  43 0006 0138     		subs	r0, r0, #1
  44              		.loc 1 2339 29 view .LVU6
  45 0008 4860     		str	r0, [r1, #4]
2340:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrNext         =  seg_base_addr;
  46              		.loc 1 2340 5 is_stmt 1 view .LVU7
  47              		.loc 1 2340 29 is_stmt 0 view .LVU8
  48 000a 8A60     		str	r2, [r1, #8]
2341:rtos/uC-LIB/lib_mem.c ****     p_seg->NextPtr          =  Mem_SegHeadPtr;
  49              		.loc 1 2341 5 is_stmt 1 view .LVU9
  50              		.loc 1 2341 29 is_stmt 0 view .LVU10
  51 000c 024A     		ldr	r2, .L2
  52              	.LVL2:
  53              		.loc 1 2341 29 view .LVU11
  54 000e 1068     		ldr	r0, [r2]
ARM GAS  /tmp/cc3qzkyx.s 			page 43


  55 0010 C860     		str	r0, [r1, #12]
2342:rtos/uC-LIB/lib_mem.c ****     p_seg->PaddingAlign     =  padding_align;
  56              		.loc 1 2342 5 is_stmt 1 view .LVU12
  57              		.loc 1 2342 29 is_stmt 0 view .LVU13
  58 0012 0B61     		str	r3, [r1, #16]
2343:rtos/uC-LIB/lib_mem.c **** 
2344:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2345:rtos/uC-LIB/lib_mem.c ****     p_seg->NamePtr          = p_name;
2346:rtos/uC-LIB/lib_mem.c ****     p_seg->AllocInfoHeadPtr = DEF_NULL;
2347:rtos/uC-LIB/lib_mem.c **** #else
2348:rtos/uC-LIB/lib_mem.c ****     (void)p_name;
  59              		.loc 1 2348 5 is_stmt 1 view .LVU14
2349:rtos/uC-LIB/lib_mem.c **** #endif
2350:rtos/uC-LIB/lib_mem.c **** 
2351:rtos/uC-LIB/lib_mem.c ****     Mem_SegHeadPtr = p_seg;
  60              		.loc 1 2351 5 view .LVU15
  61              		.loc 1 2351 20 is_stmt 0 view .LVU16
  62 0014 1160     		str	r1, [r2]
  63              	.LVL3:
2352:rtos/uC-LIB/lib_mem.c **** }
  64              		.loc 1 2352 1 view .LVU17
  65 0016 7047     		bx	lr
  66              	.L3:
  67              		.align	2
  68              	.L2:
  69 0018 00000000 		.word	Mem_SegHeadPtr
  70              		.cfi_endproc
  71              	.LFE24:
  73              		.section	.text.Mem_SegOverlapChkCritical,"ax",%progbits
  74              		.align	1
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	Mem_SegOverlapChkCritical:
  81              	.LVL4:
  82              	.LFB25:
2353:rtos/uC-LIB/lib_mem.c **** 
2354:rtos/uC-LIB/lib_mem.c **** 
2355:rtos/uC-LIB/lib_mem.c **** /*
2356:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2357:rtos/uC-LIB/lib_mem.c **** *                                      Mem_SegOverlapChkCritical()
2358:rtos/uC-LIB/lib_mem.c **** *
2359:rtos/uC-LIB/lib_mem.c **** * Description : Checks if existing memory segment exists or overlaps with specified memory area.
2360:rtos/uC-LIB/lib_mem.c **** *
2361:rtos/uC-LIB/lib_mem.c **** * Argument(s) : seg_base_addr   Address of first byte of memory area.
2362:rtos/uC-LIB/lib_mem.c **** *
2363:rtos/uC-LIB/lib_mem.c **** *               size            Size of memory area, in bytes.
2364:rtos/uC-LIB/lib_mem.c **** *
2365:rtos/uC-LIB/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2366:rtos/uC-LIB/lib_mem.c **** *
2367:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another existi
2368:rtos/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
2369:rtos/uC-LIB/lib_mem.c **** *
2370:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to memory segment that overlaps.
2371:rtos/uC-LIB/lib_mem.c **** *
2372:rtos/uC-LIB/lib_mem.c **** *               DEF_NULL, otherwise.
ARM GAS  /tmp/cc3qzkyx.s 			page 44


2373:rtos/uC-LIB/lib_mem.c **** *
2374:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2375:rtos/uC-LIB/lib_mem.c **** *               Mem_SegCreate().
2376:rtos/uC-LIB/lib_mem.c **** *
2377:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2378:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2379:rtos/uC-LIB/lib_mem.c **** */
2380:rtos/uC-LIB/lib_mem.c **** 
2381:rtos/uC-LIB/lib_mem.c **** #if  (LIB_MEM_CFG_HEAP_SIZE      >  0u)
2382:rtos/uC-LIB/lib_mem.c **** static  MEM_SEG  *Mem_SegOverlapChkCritical (CPU_ADDR     seg_base_addr,
2383:rtos/uC-LIB/lib_mem.c ****                                              CPU_SIZE_T   size,
2384:rtos/uC-LIB/lib_mem.c ****                                              LIB_ERR     *p_err)
2385:rtos/uC-LIB/lib_mem.c **** {
  83              		.loc 1 2385 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              		.loc 1 2385 1 is_stmt 0 view .LVU19
  89 0000 30B4     		push	{r4, r5}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 5, -4
  94 0002 0446     		mov	r4, r0
2386:rtos/uC-LIB/lib_mem.c ****     MEM_SEG   *p_seg_chk;
  95              		.loc 1 2386 5 is_stmt 1 view .LVU20
2387:rtos/uC-LIB/lib_mem.c ****     CPU_ADDR   seg_new_end;
  96              		.loc 1 2387 5 view .LVU21
2388:rtos/uC-LIB/lib_mem.c ****     CPU_ADDR   seg_chk_start;
  97              		.loc 1 2388 5 view .LVU22
2389:rtos/uC-LIB/lib_mem.c ****     CPU_ADDR   seg_chk_end;
  98              		.loc 1 2389 5 view .LVU23
2390:rtos/uC-LIB/lib_mem.c **** 
2391:rtos/uC-LIB/lib_mem.c **** 
2392:rtos/uC-LIB/lib_mem.c ****     seg_new_end = seg_base_addr + (size - 1u);
  99              		.loc 1 2392 5 view .LVU24
 100              		.loc 1 2392 33 is_stmt 0 view .LVU25
 101 0004 0144     		add	r1, r1, r0
 102              	.LVL5:
 103              		.loc 1 2392 17 view .LVU26
 104 0006 4D1E     		subs	r5, r1, #1
 105              	.LVL6:
2393:rtos/uC-LIB/lib_mem.c ****     p_seg_chk   = Mem_SegHeadPtr;
 106              		.loc 1 2393 5 is_stmt 1 view .LVU27
 107              		.loc 1 2393 17 is_stmt 0 view .LVU28
 108 0008 0F4B     		ldr	r3, .L15
 109 000a 1868     		ldr	r0, [r3]
 110              	.LVL7:
2394:rtos/uC-LIB/lib_mem.c **** 
2395:rtos/uC-LIB/lib_mem.c ****     while (p_seg_chk != DEF_NULL) {
 111              		.loc 1 2395 5 is_stmt 1 view .LVU29
 112              		.loc 1 2395 11 is_stmt 0 view .LVU30
 113 000c 06E0     		b	.L5
 114              	.LVL8:
 115              	.L14:
2396:rtos/uC-LIB/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
ARM GAS  /tmp/cc3qzkyx.s 			page 45


2397:rtos/uC-LIB/lib_mem.c ****         seg_chk_end   = (CPU_ADDR)p_seg_chk->AddrEnd;
2398:rtos/uC-LIB/lib_mem.c **** 
2399:rtos/uC-LIB/lib_mem.c ****         if ((seg_base_addr == seg_chk_start) && (seg_new_end == seg_chk_end)) {
 116              		.loc 1 2399 46 discriminator 1 view .LVU31
 117 000e 8D42     		cmp	r5, r1
 118 0010 09D1     		bne	.L6
2400:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_EXISTS;
 119              		.loc 1 2400 12 is_stmt 1 view .LVU32
 120              		.loc 1 2400 19 is_stmt 0 view .LVU33
 121 0012 4FF41E53 		mov	r3, #10112
 122              	.LVL9:
 123              		.loc 1 2400 19 view .LVU34
 124 0016 1380     		strh	r3, [r2]	@ movhi
 125              	.LVL10:
2401:rtos/uC-LIB/lib_mem.c ****             return (p_seg_chk);
 126              		.loc 1 2401 13 is_stmt 1 view .LVU35
 127              		.loc 1 2401 20 is_stmt 0 view .LVU36
 128 0018 14E0     		b	.L4
 129              	.LVL11:
 130              	.L10:
2402:rtos/uC-LIB/lib_mem.c ****         } else if (((seg_base_addr >= seg_chk_start) && (seg_base_addr <= seg_chk_end)) ||
2403:rtos/uC-LIB/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
2404:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_OVERLAP;
2405:rtos/uC-LIB/lib_mem.c ****             return (p_seg_chk);
2406:rtos/uC-LIB/lib_mem.c ****         } else {
2407:rtos/uC-LIB/lib_mem.c ****                                                                 /* Empty Else Statement            
2408:rtos/uC-LIB/lib_mem.c ****         }
2409:rtos/uC-LIB/lib_mem.c **** 
2410:rtos/uC-LIB/lib_mem.c ****         p_seg_chk = p_seg_chk->NextPtr;
 131              		.loc 1 2410 9 is_stmt 1 view .LVU37
 132              		.loc 1 2410 19 is_stmt 0 view .LVU38
 133 001a C068     		ldr	r0, [r0, #12]
 134              	.LVL12:
 135              	.L5:
2395:rtos/uC-LIB/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
 136              		.loc 1 2395 11 is_stmt 1 view .LVU39
 137 001c 78B1     		cbz	r0, .L13
2396:rtos/uC-LIB/lib_mem.c ****         seg_chk_end   = (CPU_ADDR)p_seg_chk->AddrEnd;
 138              		.loc 1 2396 9 view .LVU40
2396:rtos/uC-LIB/lib_mem.c ****         seg_chk_end   = (CPU_ADDR)p_seg_chk->AddrEnd;
 139              		.loc 1 2396 23 is_stmt 0 view .LVU41
 140 001e 0368     		ldr	r3, [r0]
 141              	.LVL13:
2397:rtos/uC-LIB/lib_mem.c **** 
 142              		.loc 1 2397 9 is_stmt 1 view .LVU42
2397:rtos/uC-LIB/lib_mem.c **** 
 143              		.loc 1 2397 23 is_stmt 0 view .LVU43
 144 0020 4168     		ldr	r1, [r0, #4]
 145              	.LVL14:
2399:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_EXISTS;
 146              		.loc 1 2399 9 is_stmt 1 view .LVU44
2399:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_EXISTS;
 147              		.loc 1 2399 12 is_stmt 0 view .LVU45
 148 0022 9C42     		cmp	r4, r3
 149 0024 F3D0     		beq	.L14
 150              	.L6:
2402:rtos/uC-LIB/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
ARM GAS  /tmp/cc3qzkyx.s 			page 46


 151              		.loc 1 2402 16 is_stmt 1 view .LVU46
2402:rtos/uC-LIB/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
 152              		.loc 1 2402 19 is_stmt 0 view .LVU47
 153 0026 9C42     		cmp	r4, r3
 154 0028 01D3     		bcc	.L8
2402:rtos/uC-LIB/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
 155              		.loc 1 2402 54 discriminator 1 view .LVU48
 156 002a 8C42     		cmp	r4, r1
 157 002c 03D9     		bls	.L9
 158              	.L8:
2402:rtos/uC-LIB/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
 159              		.loc 1 2402 89 discriminator 3 view .LVU49
 160 002e 9C42     		cmp	r4, r3
 161 0030 F3D8     		bhi	.L10
2403:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_OVERLAP;
 162              		.loc 1 2403 54 view .LVU50
 163 0032 9D42     		cmp	r5, r3
 164 0034 F1D3     		bcc	.L10
 165              	.L9:
2404:rtos/uC-LIB/lib_mem.c ****             return (p_seg_chk);
 166              		.loc 1 2404 12 is_stmt 1 view .LVU51
2404:rtos/uC-LIB/lib_mem.c ****             return (p_seg_chk);
 167              		.loc 1 2404 19 is_stmt 0 view .LVU52
 168 0036 42F27F73 		movw	r3, #10111
 169              	.LVL15:
2404:rtos/uC-LIB/lib_mem.c ****             return (p_seg_chk);
 170              		.loc 1 2404 19 view .LVU53
 171 003a 1380     		strh	r3, [r2]	@ movhi
 172              	.LVL16:
2405:rtos/uC-LIB/lib_mem.c ****         } else {
 173              		.loc 1 2405 13 is_stmt 1 view .LVU54
2405:rtos/uC-LIB/lib_mem.c ****         } else {
 174              		.loc 1 2405 20 is_stmt 0 view .LVU55
 175 003c 02E0     		b	.L4
 176              	.LVL17:
 177              	.L13:
2411:rtos/uC-LIB/lib_mem.c ****     }
2412:rtos/uC-LIB/lib_mem.c **** 
2413:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 178              		.loc 1 2413 4 is_stmt 1 view .LVU56
 179              		.loc 1 2413 11 is_stmt 0 view .LVU57
 180 003e 42F21073 		movw	r3, #10000
 181 0042 1380     		strh	r3, [r2]	@ movhi
2414:rtos/uC-LIB/lib_mem.c **** 
2415:rtos/uC-LIB/lib_mem.c ****     return (DEF_NULL);
 182              		.loc 1 2415 5 is_stmt 1 view .LVU58
 183              	.L4:
2416:rtos/uC-LIB/lib_mem.c **** }
 184              		.loc 1 2416 1 is_stmt 0 view .LVU59
 185 0044 30BC     		pop	{r4, r5}
 186              	.LCFI1:
 187              		.cfi_restore 5
 188              		.cfi_restore 4
 189              		.cfi_def_cfa_offset 0
 190              	.LVL18:
 191              		.loc 1 2416 1 view .LVU60
 192 0046 7047     		bx	lr
ARM GAS  /tmp/cc3qzkyx.s 			page 47


 193              	.L16:
 194              		.align	2
 195              	.L15:
 196 0048 00000000 		.word	Mem_SegHeadPtr
 197              		.cfi_endproc
 198              	.LFE25:
 200              		.section	.text.Mem_SegAllocExtCritical,"ax",%progbits
 201              		.align	1
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	Mem_SegAllocExtCritical:
 208              	.LVL19:
 209              	.LFB27:
2417:rtos/uC-LIB/lib_mem.c **** #endif
2418:rtos/uC-LIB/lib_mem.c **** 
2419:rtos/uC-LIB/lib_mem.c **** 
2420:rtos/uC-LIB/lib_mem.c **** /*
2421:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2422:rtos/uC-LIB/lib_mem.c **** *                                       Mem_SegAllocInternal()
2423:rtos/uC-LIB/lib_mem.c **** *
2424:rtos/uC-LIB/lib_mem.c **** * Description : Allocates memory from specified segment.
2425:rtos/uC-LIB/lib_mem.c **** *
2426:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name  Pointer to allocated object name. Used for allocations tracking. May be DEF
2427:rtos/uC-LIB/lib_mem.c **** *
2428:rtos/uC-LIB/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory.
2429:rtos/uC-LIB/lib_mem.c **** *               -----           Argument validated by caller.
2430:rtos/uC-LIB/lib_mem.c **** *
2431:rtos/uC-LIB/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
2432:rtos/uC-LIB/lib_mem.c **** *
2433:rtos/uC-LIB/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
2434:rtos/uC-LIB/lib_mem.c **** *
2435:rtos/uC-LIB/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2436:rtos/uC-LIB/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
2437:rtos/uC-LIB/lib_mem.c **** *                               means no padding.
2438:rtos/uC-LIB/lib_mem.c **** *
2439:rtos/uC-LIB/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
2440:rtos/uC-LIB/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
2441:rtos/uC-LIB/lib_mem.c **** *
2442:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2443:rtos/uC-LIB/lib_mem.c **** *
2444:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
2445:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
2446:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
2447:rtos/uC-LIB/lib_mem.c **** *
2448:rtos/uC-LIB/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocExtCritical()--------
2449:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
2450:rtos/uC-LIB/lib_mem.c **** *
2451:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
2452:rtos/uC-LIB/lib_mem.c **** *
2453:rtos/uC-LIB/lib_mem.c **** *               DEF_NULL, otherwise.
2454:rtos/uC-LIB/lib_mem.c **** *
2455:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Mem_DynPoolBlkGet(),
2456:rtos/uC-LIB/lib_mem.c **** *               Mem_DynPoolCreateInternal(),
2457:rtos/uC-LIB/lib_mem.c **** *               Mem_HeapAlloc(),
2458:rtos/uC-LIB/lib_mem.c **** *               Mem_PoolCreate(),
ARM GAS  /tmp/cc3qzkyx.s 			page 48


2459:rtos/uC-LIB/lib_mem.c **** *               Mem_SegAlloc(),
2460:rtos/uC-LIB/lib_mem.c **** *               Mem_SegAllocExt(),
2461:rtos/uC-LIB/lib_mem.c **** *               Mem_SegAllocHW().
2462:rtos/uC-LIB/lib_mem.c **** *
2463:rtos/uC-LIB/lib_mem.c **** * Note(s)     : none.
2464:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2465:rtos/uC-LIB/lib_mem.c **** */
2466:rtos/uC-LIB/lib_mem.c **** 
2467:rtos/uC-LIB/lib_mem.c **** static  void  *Mem_SegAllocInternal (const  CPU_CHAR    *p_name,
2468:rtos/uC-LIB/lib_mem.c ****                                             MEM_SEG     *p_seg,
2469:rtos/uC-LIB/lib_mem.c ****                                             CPU_SIZE_T   size,
2470:rtos/uC-LIB/lib_mem.c ****                                             CPU_SIZE_T   align,
2471:rtos/uC-LIB/lib_mem.c ****                                             CPU_SIZE_T   padding_align,
2472:rtos/uC-LIB/lib_mem.c ****                                             CPU_SIZE_T  *p_bytes_reqd,
2473:rtos/uC-LIB/lib_mem.c ****                                             LIB_ERR     *p_err)
2474:rtos/uC-LIB/lib_mem.c **** {
2475:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
2476:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
2477:rtos/uC-LIB/lib_mem.c **** 
2478:rtos/uC-LIB/lib_mem.c **** 
2479:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2480:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
2481:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
2482:rtos/uC-LIB/lib_mem.c ****     }
2483:rtos/uC-LIB/lib_mem.c **** 
2484:rtos/uC-LIB/lib_mem.c ****     if (size < 1u) {                                            /* Chk for invalid sized mem req.  
2485:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_SIZE;
2486:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
2487:rtos/uC-LIB/lib_mem.c ****     }
2488:rtos/uC-LIB/lib_mem.c **** 
2489:rtos/uC-LIB/lib_mem.c ****     if (MATH_IS_PWR2(align) != DEF_YES) {                       /* Chk that align is a pwr of 2.   
2490:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
2491:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
2492:rtos/uC-LIB/lib_mem.c ****     }
2493:rtos/uC-LIB/lib_mem.c **** #endif
2494:rtos/uC-LIB/lib_mem.c **** 
2495:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
2496:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
2497:rtos/uC-LIB/lib_mem.c ****                                     size,
2498:rtos/uC-LIB/lib_mem.c ****                                     align,
2499:rtos/uC-LIB/lib_mem.c ****                                     padding_align,
2500:rtos/uC-LIB/lib_mem.c ****                                     p_bytes_reqd,
2501:rtos/uC-LIB/lib_mem.c ****                                     p_err);
2502:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2503:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
2504:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
2505:rtos/uC-LIB/lib_mem.c ****     }
2506:rtos/uC-LIB/lib_mem.c **** 
2507:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)                    /* Track alloc if req'd.           
2508:rtos/uC-LIB/lib_mem.c ****     Mem_SegAllocTrackCritical(p_name,
2509:rtos/uC-LIB/lib_mem.c ****                               p_seg,
2510:rtos/uC-LIB/lib_mem.c ****                               size,
2511:rtos/uC-LIB/lib_mem.c ****                               p_err);
2512:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2513:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
2514:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
2515:rtos/uC-LIB/lib_mem.c ****     }
ARM GAS  /tmp/cc3qzkyx.s 			page 49


2516:rtos/uC-LIB/lib_mem.c **** #else
2517:rtos/uC-LIB/lib_mem.c ****     (void)p_name;
2518:rtos/uC-LIB/lib_mem.c **** #endif
2519:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
2520:rtos/uC-LIB/lib_mem.c **** 
2521:rtos/uC-LIB/lib_mem.c ****     return (p_blk);
2522:rtos/uC-LIB/lib_mem.c **** }
2523:rtos/uC-LIB/lib_mem.c **** 
2524:rtos/uC-LIB/lib_mem.c **** 
2525:rtos/uC-LIB/lib_mem.c **** /*
2526:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2527:rtos/uC-LIB/lib_mem.c **** *                                      Mem_SegAllocExtCritical()
2528:rtos/uC-LIB/lib_mem.c **** *
2529:rtos/uC-LIB/lib_mem.c **** * Description : Allocates memory from specified segment.
2530:rtos/uC-LIB/lib_mem.c **** *
2531:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_seg           Pointer to segment from which to allocate memory.
2532:rtos/uC-LIB/lib_mem.c **** *
2533:rtos/uC-LIB/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
2534:rtos/uC-LIB/lib_mem.c **** *
2535:rtos/uC-LIB/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
2536:rtos/uC-LIB/lib_mem.c **** *
2537:rtos/uC-LIB/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2538:rtos/uC-LIB/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
2539:rtos/uC-LIB/lib_mem.c **** *                               means no padding.
2540:rtos/uC-LIB/lib_mem.c **** *
2541:rtos/uC-LIB/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
2542:rtos/uC-LIB/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
2543:rtos/uC-LIB/lib_mem.c **** *
2544:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2545:rtos/uC-LIB/lib_mem.c **** *
2546:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF     Allocation would overflow memory segmen
2547:rtos/uC-LIB/lib_mem.c **** *
2548:rtos/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
2549:rtos/uC-LIB/lib_mem.c **** *
2550:rtos/uC-LIB/lib_mem.c **** *               DEF_NULL, otherwise.
2551:rtos/uC-LIB/lib_mem.c **** *
2552:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2553:rtos/uC-LIB/lib_mem.c **** *               Mem_SegAllocInternal(),
2554:rtos/uC-LIB/lib_mem.c **** *               Mem_SegAllocTrackCritical().
2555:rtos/uC-LIB/lib_mem.c **** *
2556:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2557:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2558:rtos/uC-LIB/lib_mem.c **** */
2559:rtos/uC-LIB/lib_mem.c **** 
2560:rtos/uC-LIB/lib_mem.c **** static  void  *Mem_SegAllocExtCritical (MEM_SEG     *p_seg,
2561:rtos/uC-LIB/lib_mem.c ****                                         CPU_SIZE_T   size,
2562:rtos/uC-LIB/lib_mem.c ****                                         CPU_SIZE_T   align,
2563:rtos/uC-LIB/lib_mem.c ****                                         CPU_SIZE_T   padding_align,
2564:rtos/uC-LIB/lib_mem.c ****                                         CPU_SIZE_T  *p_bytes_reqd,
2565:rtos/uC-LIB/lib_mem.c ****                                         LIB_ERR     *p_err)
2566:rtos/uC-LIB/lib_mem.c **** {
 210              		.loc 1 2566 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 8, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215              		.loc 1 2566 1 is_stmt 0 view .LVU62
ARM GAS  /tmp/cc3qzkyx.s 			page 50


 216 0000 70B4     		push	{r4, r5, r6}
 217              	.LCFI2:
 218              		.cfi_def_cfa_offset 12
 219              		.cfi_offset 4, -12
 220              		.cfi_offset 5, -8
 221              		.cfi_offset 6, -4
 222 0002 0546     		mov	r5, r0
2567:rtos/uC-LIB/lib_mem.c ****     CPU_ADDR    blk_addr;
 223              		.loc 1 2567 5 is_stmt 1 view .LVU63
2568:rtos/uC-LIB/lib_mem.c ****     CPU_ADDR    addr_next;
 224              		.loc 1 2568 5 view .LVU64
2569:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  size_rem_seg;
 225              		.loc 1 2569 5 view .LVU65
2570:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  size_tot_blk;
 226              		.loc 1 2570 5 view .LVU66
2571:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  blk_align = DEF_MAX(align, padding_align);
 227              		.loc 1 2571 5 view .LVU67
 228              		.loc 1 2571 17 is_stmt 0 view .LVU68
 229 0004 9A42     		cmp	r2, r3
 230 0006 38BF     		it	cc
 231 0008 1A46     		movcc	r2, r3
 232              	.LVL20:
2572:rtos/uC-LIB/lib_mem.c **** 
2573:rtos/uC-LIB/lib_mem.c **** 
2574:rtos/uC-LIB/lib_mem.c ****     blk_addr     = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext,      /* Compute align'ed blk addr.      
 233              		.loc 1 2574 5 is_stmt 1 view .LVU69
 234              		.loc 1 2574 20 is_stmt 0 view .LVU70
 235 000a 8468     		ldr	r4, [r0, #8]
 236 000c 5042     		rsbs	r0, r2, #0
 237              	.LVL21:
 238              		.loc 1 2574 20 view .LVU71
 239 000e 2040     		ands	r0, r0, r4
 240 0010 561E     		subs	r6, r2, #1
 241 0012 2640     		ands	r6, r4, r6
 242 0014 00D0     		beq	.L18
 243 0016 1646     		mov	r6, r2
 244              	.L18:
 245              		.loc 1 2574 18 discriminator 4 view .LVU72
 246 0018 3044     		add	r0, r0, r6
 247              	.LVL22:
2575:rtos/uC-LIB/lib_mem.c ****                                           blk_align);
2576:rtos/uC-LIB/lib_mem.c ****     addr_next    = MATH_ROUND_INC_UP_PWR2(blk_addr + size,      /* Compute addr of next alloc.     
 248              		.loc 1 2576 5 is_stmt 1 discriminator 4 view .LVU73
 249              		.loc 1 2576 20 is_stmt 0 discriminator 4 view .LVU74
 250 001a 0144     		add	r1, r1, r0
 251              	.LVL23:
 252              		.loc 1 2576 20 discriminator 4 view .LVU75
 253 001c 5A42     		rsbs	r2, r3, #0
 254              	.LVL24:
 255              		.loc 1 2576 20 discriminator 4 view .LVU76
 256 001e 0A40     		ands	r2, r2, r1
 257 0020 5E1E     		subs	r6, r3, #1
 258 0022 3140     		ands	r1, r1, r6
 259 0024 00D0     		beq	.L19
 260              		.loc 1 2576 20 view .LVU77
 261 0026 1946     		mov	r1, r3
 262              	.L19:
ARM GAS  /tmp/cc3qzkyx.s 			page 51


 263              		.loc 1 2576 18 discriminator 4 view .LVU78
 264 0028 1144     		add	r1, r1, r2
 265              	.LVL25:
2577:rtos/uC-LIB/lib_mem.c ****                                           padding_align);
2578:rtos/uC-LIB/lib_mem.c ****     size_rem_seg = (p_seg->AddrEnd - p_seg->AddrNext) + 1u;
 266              		.loc 1 2578 5 is_stmt 1 discriminator 4 view .LVU79
 267              		.loc 1 2578 26 is_stmt 0 discriminator 4 view .LVU80
 268 002a 6B68     		ldr	r3, [r5, #4]
 269              	.LVL26:
 270              		.loc 1 2578 36 discriminator 4 view .LVU81
 271 002c 1B1B     		subs	r3, r3, r4
 272              		.loc 1 2578 18 discriminator 4 view .LVU82
 273 002e 0133     		adds	r3, r3, #1
 274              	.LVL27:
2579:rtos/uC-LIB/lib_mem.c ****     size_tot_blk =  addr_next      - p_seg->AddrNext;           /* Compute tot blk size including a
 275              		.loc 1 2579 5 is_stmt 1 discriminator 4 view .LVU83
 276              		.loc 1 2579 18 is_stmt 0 discriminator 4 view .LVU84
 277 0030 0C1B     		subs	r4, r1, r4
 278              	.LVL28:
2580:rtos/uC-LIB/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 279              		.loc 1 2580 5 is_stmt 1 discriminator 4 view .LVU85
 280              		.loc 1 2580 8 is_stmt 0 discriminator 4 view .LVU86
 281 0032 A342     		cmp	r3, r4
 282 0034 06D3     		bcc	.L24
2581:rtos/uC-LIB/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
2582:rtos/uC-LIB/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
2583:rtos/uC-LIB/lib_mem.c ****         }
2584:rtos/uC-LIB/lib_mem.c **** 
2585:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_SEG_OVF;
2586:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
2587:rtos/uC-LIB/lib_mem.c ****     }
2588:rtos/uC-LIB/lib_mem.c **** 
2589:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrNext = addr_next;
 283              		.loc 1 2589 5 is_stmt 1 view .LVU87
 284              		.loc 1 2589 21 is_stmt 0 view .LVU88
 285 0036 A960     		str	r1, [r5, #8]
2590:rtos/uC-LIB/lib_mem.c **** 
2591:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 286              		.loc 1 2591 4 is_stmt 1 view .LVU89
 287              		.loc 1 2591 11 is_stmt 0 view .LVU90
 288 0038 42F21073 		movw	r3, #10000
 289              	.LVL29:
 290              		.loc 1 2591 11 view .LVU91
 291 003c 049A     		ldr	r2, [sp, #16]
 292 003e 1380     		strh	r3, [r2]	@ movhi
2592:rtos/uC-LIB/lib_mem.c **** 
2593:rtos/uC-LIB/lib_mem.c ****     return ((void *)blk_addr);
 293              		.loc 1 2593 5 is_stmt 1 view .LVU92
 294              	.LVL30:
 295              	.L17:
2594:rtos/uC-LIB/lib_mem.c **** }
 296              		.loc 1 2594 1 is_stmt 0 view .LVU93
 297 0040 70BC     		pop	{r4, r5, r6}
 298              	.LCFI3:
 299              		.cfi_remember_state
 300              		.cfi_restore 6
 301              		.cfi_restore 5
ARM GAS  /tmp/cc3qzkyx.s 			page 52


 302              		.cfi_restore 4
 303              		.cfi_def_cfa_offset 0
 304              	.LVL31:
 305              		.loc 1 2594 1 view .LVU94
 306 0042 7047     		bx	lr
 307              	.LVL32:
 308              	.L24:
 309              	.LCFI4:
 310              		.cfi_restore_state
2581:rtos/uC-LIB/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 311              		.loc 1 2581 9 is_stmt 1 view .LVU95
2581:rtos/uC-LIB/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 312              		.loc 1 2581 12 is_stmt 0 view .LVU96
 313 0044 039A     		ldr	r2, [sp, #12]
 314 0046 0AB1     		cbz	r2, .L21
2582:rtos/uC-LIB/lib_mem.c ****         }
 315              		.loc 1 2582 12 is_stmt 1 view .LVU97
2582:rtos/uC-LIB/lib_mem.c ****         }
 316              		.loc 1 2582 41 is_stmt 0 view .LVU98
 317 0048 E41A     		subs	r4, r4, r3
 318              	.LVL33:
2582:rtos/uC-LIB/lib_mem.c ****         }
 319              		.loc 1 2582 26 view .LVU99
 320 004a 1460     		str	r4, [r2]
 321              	.LVL34:
 322              	.L21:
2585:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
 323              		.loc 1 2585 8 is_stmt 1 view .LVU100
2585:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
 324              		.loc 1 2585 15 is_stmt 0 view .LVU101
 325 004c 42F2D973 		movw	r3, #10201
 326              	.LVL35:
2585:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
 327              		.loc 1 2585 15 view .LVU102
 328 0050 049A     		ldr	r2, [sp, #16]
 329 0052 1380     		strh	r3, [r2]	@ movhi
2586:rtos/uC-LIB/lib_mem.c ****     }
 330              		.loc 1 2586 9 is_stmt 1 view .LVU103
2586:rtos/uC-LIB/lib_mem.c ****     }
 331              		.loc 1 2586 16 is_stmt 0 view .LVU104
 332 0054 0020     		movs	r0, #0
 333              	.LVL36:
2586:rtos/uC-LIB/lib_mem.c ****     }
 334              		.loc 1 2586 16 view .LVU105
 335 0056 F3E7     		b	.L17
 336              		.cfi_endproc
 337              	.LFE27:
 339              		.section	.text.Mem_SegAllocInternal,"ax",%progbits
 340              		.align	1
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	Mem_SegAllocInternal:
 347              	.LVL37:
 348              	.LFB26:
2474:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
ARM GAS  /tmp/cc3qzkyx.s 			page 53


 349              		.loc 1 2474 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 12, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
2474:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
 353              		.loc 1 2474 1 is_stmt 0 view .LVU107
 354 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 355              	.LCFI5:
 356              		.cfi_def_cfa_offset 24
 357              		.cfi_offset 4, -24
 358              		.cfi_offset 5, -20
 359              		.cfi_offset 6, -16
 360              		.cfi_offset 7, -12
 361              		.cfi_offset 8, -8
 362              		.cfi_offset 14, -4
 363 0004 82B0     		sub	sp, sp, #8
 364              	.LCFI6:
 365              		.cfi_def_cfa_offset 32
 366 0006 0C46     		mov	r4, r1
 367 0008 1646     		mov	r6, r2
 368 000a 1F46     		mov	r7, r3
 369 000c DDF82880 		ldr	r8, [sp, #40]
2475:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 370              		.loc 1 2475 5 is_stmt 1 view .LVU108
2476:rtos/uC-LIB/lib_mem.c **** 
 371              		.loc 1 2476 5 view .LVU109
 372              	.LVL38:
2495:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 373              		.loc 1 2495 5 view .LVU110
2495:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 374              		.loc 1 2495 5 view .LVU111
2495:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 375              		.loc 1 2495 5 view .LVU112
 376 0010 4020     		movs	r0, #64
 377              	.LVL39:
2495:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 378              		.loc 1 2495 5 is_stmt 0 view .LVU113
 379 0012 FFF7FEFF 		bl	CPU_SR_Save
 380              	.LVL40:
2495:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 381              		.loc 1 2495 5 view .LVU114
 382 0016 0546     		mov	r5, r0
 383              	.LVL41:
2495:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 384              		.loc 1 2495 5 is_stmt 1 view .LVU115
2495:rtos/uC-LIB/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 385              		.loc 1 2495 5 view .LVU116
2496:rtos/uC-LIB/lib_mem.c ****                                     size,
 386              		.loc 1 2496 5 view .LVU117
2496:rtos/uC-LIB/lib_mem.c ****                                     size,
 387              		.loc 1 2496 13 is_stmt 0 view .LVU118
 388 0018 CDF80480 		str	r8, [sp, #4]
 389 001c 099B     		ldr	r3, [sp, #36]
 390 001e 0093     		str	r3, [sp]
 391 0020 089B     		ldr	r3, [sp, #32]
 392 0022 3A46     		mov	r2, r7
 393 0024 3146     		mov	r1, r6
ARM GAS  /tmp/cc3qzkyx.s 			page 54


 394 0026 2046     		mov	r0, r4
 395              	.LVL42:
2496:rtos/uC-LIB/lib_mem.c ****                                     size,
 396              		.loc 1 2496 13 view .LVU119
 397 0028 FFF7FEFF 		bl	Mem_SegAllocExtCritical
 398              	.LVL43:
2502:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 399              		.loc 1 2502 5 is_stmt 1 view .LVU120
2502:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 400              		.loc 1 2502 9 is_stmt 0 view .LVU121
 401 002c B8F80020 		ldrh	r2, [r8]
2502:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 402              		.loc 1 2502 8 view .LVU122
 403 0030 42F21073 		movw	r3, #10000
 404 0034 9A42     		cmp	r2, r3
 405 0036 07D1     		bne	.L29
 406 0038 0446     		mov	r4, r0
 407              	.LVL44:
2517:rtos/uC-LIB/lib_mem.c **** #endif
 408              		.loc 1 2517 5 is_stmt 1 view .LVU123
2519:rtos/uC-LIB/lib_mem.c **** 
 409              		.loc 1 2519 5 view .LVU124
2519:rtos/uC-LIB/lib_mem.c **** 
 410              		.loc 1 2519 5 view .LVU125
2519:rtos/uC-LIB/lib_mem.c **** 
 411              		.loc 1 2519 5 view .LVU126
 412 003a 2846     		mov	r0, r5
 413              	.LVL45:
2519:rtos/uC-LIB/lib_mem.c **** 
 414              		.loc 1 2519 5 is_stmt 0 view .LVU127
 415 003c FFF7FEFF 		bl	CPU_SR_Restore
 416              	.LVL46:
2519:rtos/uC-LIB/lib_mem.c **** 
 417              		.loc 1 2519 5 is_stmt 1 view .LVU128
2519:rtos/uC-LIB/lib_mem.c **** 
 418              		.loc 1 2519 5 view .LVU129
2521:rtos/uC-LIB/lib_mem.c **** }
 419              		.loc 1 2521 5 view .LVU130
 420              	.L25:
2522:rtos/uC-LIB/lib_mem.c **** 
 421              		.loc 1 2522 1 is_stmt 0 view .LVU131
 422 0040 2046     		mov	r0, r4
 423 0042 02B0     		add	sp, sp, #8
 424              	.LCFI7:
 425              		.cfi_remember_state
 426              		.cfi_def_cfa_offset 24
 427              		@ sp needed
 428 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 429              	.LVL47:
 430              	.L29:
 431              	.LCFI8:
 432              		.cfi_restore_state
2503:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
 433              		.loc 1 2503 9 is_stmt 1 view .LVU132
2503:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
 434              		.loc 1 2503 9 view .LVU133
2503:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
ARM GAS  /tmp/cc3qzkyx.s 			page 55


 435              		.loc 1 2503 9 view .LVU134
 436 0048 2846     		mov	r0, r5
 437              	.LVL48:
2503:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
 438              		.loc 1 2503 9 is_stmt 0 view .LVU135
 439 004a FFF7FEFF 		bl	CPU_SR_Restore
 440              	.LVL49:
2503:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
 441              		.loc 1 2503 9 is_stmt 1 view .LVU136
2503:rtos/uC-LIB/lib_mem.c ****         return (DEF_NULL);
 442              		.loc 1 2503 9 view .LVU137
2504:rtos/uC-LIB/lib_mem.c ****     }
 443              		.loc 1 2504 9 view .LVU138
2504:rtos/uC-LIB/lib_mem.c ****     }
 444              		.loc 1 2504 16 is_stmt 0 view .LVU139
 445 004e 0024     		movs	r4, #0
 446              	.LVL50:
2504:rtos/uC-LIB/lib_mem.c ****     }
 447              		.loc 1 2504 16 view .LVU140
 448 0050 F6E7     		b	.L25
 449              		.cfi_endproc
 450              	.LFE26:
 452              		.section	.text.Mem_DynPoolCreateInternal,"ax",%progbits
 453              		.align	1
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu fpv4-sp-d16
 459              	Mem_DynPoolCreateInternal:
 460              	.LVL51:
 461              	.LFB28:
2595:rtos/uC-LIB/lib_mem.c **** 
2596:rtos/uC-LIB/lib_mem.c **** 
2597:rtos/uC-LIB/lib_mem.c **** /*
2598:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2599:rtos/uC-LIB/lib_mem.c **** *                                     Mem_SegAllocTrackCritical()
2600:rtos/uC-LIB/lib_mem.c **** *
2601:rtos/uC-LIB/lib_mem.c **** * Description : Tracks segment allocation, adding the 'size' of the allocation under the 'p_name' e
2602:rtos/uC-LIB/lib_mem.c **** *
2603:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name  Pointer to the name of the object. This string is not copied and its memory
2604:rtos/uC-LIB/lib_mem.c **** *                       remain accessible at all times.
2605:rtos/uC-LIB/lib_mem.c **** *
2606:rtos/uC-LIB/lib_mem.c **** *               p_seg   Pointer to segment data.
2607:rtos/uC-LIB/lib_mem.c **** *
2608:rtos/uC-LIB/lib_mem.c **** *               size    Allocation size, in bytes.
2609:rtos/uC-LIB/lib_mem.c **** *
2610:rtos/uC-LIB/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2611:rtos/uC-LIB/lib_mem.c **** *
2612:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_HEAP_EMPTY      No more memory available on heap
2613:rtos/uC-LIB/lib_mem.c **** *
2614:rtos/uC-LIB/lib_mem.c **** *                           --------------RETURNED BY Mem_SegAllocExtCritical()---------------
2615:rtos/uC-LIB/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF         Allocation would overflow memory segment.
2616:rtos/uC-LIB/lib_mem.c **** *
2617:rtos/uC-LIB/lib_mem.c **** * Return(s)   : none.
2618:rtos/uC-LIB/lib_mem.c **** *
2619:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2620:rtos/uC-LIB/lib_mem.c **** *               Mem_SegAllocInternal().
ARM GAS  /tmp/cc3qzkyx.s 			page 56


2621:rtos/uC-LIB/lib_mem.c **** *
2622:rtos/uC-LIB/lib_mem.c **** * Note(s)     : none.
2623:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2624:rtos/uC-LIB/lib_mem.c **** */
2625:rtos/uC-LIB/lib_mem.c **** 
2626:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2627:rtos/uC-LIB/lib_mem.c **** static  void  Mem_SegAllocTrackCritical (const  CPU_CHAR    *p_name,
2628:rtos/uC-LIB/lib_mem.c ****                                                 MEM_SEG     *p_seg,
2629:rtos/uC-LIB/lib_mem.c ****                                                 CPU_SIZE_T   size,
2630:rtos/uC-LIB/lib_mem.c ****                                                 LIB_ERR     *p_err)
2631:rtos/uC-LIB/lib_mem.c **** {
2632:rtos/uC-LIB/lib_mem.c ****     MEM_ALLOC_INFO  *p_alloc;
2633:rtos/uC-LIB/lib_mem.c **** 
2634:rtos/uC-LIB/lib_mem.c **** 
2635:rtos/uC-LIB/lib_mem.c ****                                                                 /* ------- UPDATE ALLOC INFO LIST, 
2636:rtos/uC-LIB/lib_mem.c ****     p_alloc = p_seg->AllocInfoHeadPtr;
2637:rtos/uC-LIB/lib_mem.c ****     while (p_alloc != DEF_NULL) {
2638:rtos/uC-LIB/lib_mem.c ****         if (p_alloc->NamePtr == p_name) {
2639:rtos/uC-LIB/lib_mem.c ****             p_alloc->Size += size;
2640:rtos/uC-LIB/lib_mem.c ****            *p_err = LIB_MEM_ERR_NONE;
2641:rtos/uC-LIB/lib_mem.c ****             return;
2642:rtos/uC-LIB/lib_mem.c ****         }
2643:rtos/uC-LIB/lib_mem.c **** 
2644:rtos/uC-LIB/lib_mem.c ****         p_alloc = p_alloc->NextPtr;
2645:rtos/uC-LIB/lib_mem.c ****     }
2646:rtos/uC-LIB/lib_mem.c **** 
2647:rtos/uC-LIB/lib_mem.c ****                                                                 /* --------- ADD NEW ALLOC INFO ENT
2648:rtos/uC-LIB/lib_mem.c ****     p_alloc = (MEM_ALLOC_INFO *)Mem_SegAllocExtCritical(&Mem_SegHeap,             /* Alloc new allo
2649:rtos/uC-LIB/lib_mem.c ****                                                          sizeof(MEM_ALLOC_INFO),
2650:rtos/uC-LIB/lib_mem.c ****                                                          sizeof(CPU_ALIGN),
2651:rtos/uC-LIB/lib_mem.c ****                                                          LIB_MEM_PADDING_ALIGN_NONE,
2652:rtos/uC-LIB/lib_mem.c ****                                                          DEF_NULL,
2653:rtos/uC-LIB/lib_mem.c ****                                                          p_err);
2654:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2655:rtos/uC-LIB/lib_mem.c ****         return;
2656:rtos/uC-LIB/lib_mem.c ****     }
2657:rtos/uC-LIB/lib_mem.c **** 
2658:rtos/uC-LIB/lib_mem.c ****     p_alloc->NamePtr = p_name;                                  /* Populate alloc info.            
2659:rtos/uC-LIB/lib_mem.c ****     p_alloc->Size    = size;
2660:rtos/uC-LIB/lib_mem.c **** 
2661:rtos/uC-LIB/lib_mem.c ****     p_alloc->NextPtr        = p_seg->AllocInfoHeadPtr;          /* Prepend new item in list.       
2662:rtos/uC-LIB/lib_mem.c ****     p_seg->AllocInfoHeadPtr = p_alloc;
2663:rtos/uC-LIB/lib_mem.c **** }
2664:rtos/uC-LIB/lib_mem.c **** #endif
2665:rtos/uC-LIB/lib_mem.c **** 
2666:rtos/uC-LIB/lib_mem.c **** 
2667:rtos/uC-LIB/lib_mem.c **** /*
2668:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2669:rtos/uC-LIB/lib_mem.c **** *                                     Mem_DynPoolCreateInternal()
2670:rtos/uC-LIB/lib_mem.c **** *
2671:rtos/uC-LIB/lib_mem.c **** * Description : Creates a dynamic memory pool.
2672:rtos/uC-LIB/lib_mem.c **** *
2673:rtos/uC-LIB/lib_mem.c **** * Argument(s) : p_name              Pointer to pool name.
2674:rtos/uC-LIB/lib_mem.c **** *
2675:rtos/uC-LIB/lib_mem.c **** *               p_pool              Pointer to pool data.
2676:rtos/uC-LIB/lib_mem.c **** *
2677:rtos/uC-LIB/lib_mem.c **** *               p_seg               Pointer to segment from which to allocate memory.
ARM GAS  /tmp/cc3qzkyx.s 			page 57


2678:rtos/uC-LIB/lib_mem.c **** *
2679:rtos/uC-LIB/lib_mem.c **** *               blk_size            Size of memory block to allocate from pool, in bytes. See Note 
2680:rtos/uC-LIB/lib_mem.c **** *
2681:rtos/uC-LIB/lib_mem.c **** *               blk_align           Required alignment of memory block, in bytes. MUST be a power o
2682:rtos/uC-LIB/lib_mem.c **** *
2683:rtos/uC-LIB/lib_mem.c **** *               blk_padding_align   Block's padding alignment, in bytes, that will be added at the 
2684:rtos/uC-LIB/lib_mem.c **** *                                   of block's buffer. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_
2685:rtos/uC-LIB/lib_mem.c **** *                                   means no padding.
2686:rtos/uC-LIB/lib_mem.c **** *
2687:rtos/uC-LIB/lib_mem.c **** *               blk_qty_init        Initial number of elements to be allocated in pool.
2688:rtos/uC-LIB/lib_mem.c **** *
2689:rtos/uC-LIB/lib_mem.c **** *               blk_qty_max         Maximum number of elements that can be allocated from this pool
2690:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_BLK_QTY_UNLIMITED if no limit.
2691:rtos/uC-LIB/lib_mem.c **** *
2692:rtos/uC-LIB/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2693:rtos/uC-LIB/lib_mem.c **** *
2694:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN   Invalid requested block alignme
2695:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid requested block size.
2696:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR     Invalid requested block quantit
2697:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Pool data pointer NULL.
2698:rtos/uC-LIB/lib_mem.c **** *
2699:rtos/uC-LIB/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
2700:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
2701:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
2702:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
2703:rtos/uC-LIB/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
2704:rtos/uC-LIB/lib_mem.c **** *
2705:rtos/uC-LIB/lib_mem.c **** * Return(s)   : None.
2706:rtos/uC-LIB/lib_mem.c **** *
2707:rtos/uC-LIB/lib_mem.c **** * Caller(s)   : Mem_DynPoolCreate(),
2708:rtos/uC-LIB/lib_mem.c **** *               Mem_DynPoolCreateHW().
2709:rtos/uC-LIB/lib_mem.c **** *
2710:rtos/uC-LIB/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
2711:rtos/uC-LIB/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
2712:rtos/uC-LIB/lib_mem.c **** ***************************************************************************************************
2713:rtos/uC-LIB/lib_mem.c **** */
2714:rtos/uC-LIB/lib_mem.c **** 
2715:rtos/uC-LIB/lib_mem.c **** static  void  Mem_DynPoolCreateInternal (const  CPU_CHAR      *p_name,
2716:rtos/uC-LIB/lib_mem.c ****                                                 MEM_DYN_POOL  *p_pool,
2717:rtos/uC-LIB/lib_mem.c ****                                                 MEM_SEG       *p_seg,
2718:rtos/uC-LIB/lib_mem.c ****                                                 CPU_SIZE_T     blk_size,
2719:rtos/uC-LIB/lib_mem.c ****                                                 CPU_SIZE_T     blk_align,
2720:rtos/uC-LIB/lib_mem.c ****                                                 CPU_SIZE_T     blk_padding_align,
2721:rtos/uC-LIB/lib_mem.c ****                                                 CPU_SIZE_T     blk_qty_init,
2722:rtos/uC-LIB/lib_mem.c ****                                                 CPU_SIZE_T     blk_qty_max,
2723:rtos/uC-LIB/lib_mem.c ****                                                 LIB_ERR       *p_err)
2724:rtos/uC-LIB/lib_mem.c **** {
 462              		.loc 1 2724 1 is_stmt 1 view -0
 463              		.cfi_startproc
 464              		@ args = 20, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		.loc 1 2724 1 is_stmt 0 view .LVU142
 467 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 468              	.LCFI9:
 469              		.cfi_def_cfa_offset 36
 470              		.cfi_offset 4, -36
 471              		.cfi_offset 5, -32
ARM GAS  /tmp/cc3qzkyx.s 			page 58


 472              		.cfi_offset 6, -28
 473              		.cfi_offset 7, -24
 474              		.cfi_offset 8, -20
 475              		.cfi_offset 9, -16
 476              		.cfi_offset 10, -12
 477              		.cfi_offset 11, -8
 478              		.cfi_offset 14, -4
 479 0004 85B0     		sub	sp, sp, #20
 480              	.LCFI10:
 481              		.cfi_def_cfa_offset 56
 482 0006 0C46     		mov	r4, r1
 483 0008 1746     		mov	r7, r2
 484 000a 1E46     		mov	r6, r3
 485 000c 0E9B     		ldr	r3, [sp, #56]
 486              	.LVL52:
 487              		.loc 1 2724 1 view .LVU143
 488 000e DDF83CA0 		ldr	r10, [sp, #60]
 489 0012 DDF84090 		ldr	r9, [sp, #64]
 490 0016 DDF848B0 		ldr	fp, [sp, #72]
2725:rtos/uC-LIB/lib_mem.c ****     CPU_INT08U  *p_blks          = DEF_NULL;
 491              		.loc 1 2725 5 is_stmt 1 view .LVU144
 492              	.LVL53:
2726:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T   blk_size_align;
 493              		.loc 1 2726 5 view .LVU145
2727:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T   blk_align_worst = DEF_MAX(blk_align, blk_padding_align);
 494              		.loc 1 2727 5 view .LVU146
 495              		.loc 1 2727 18 is_stmt 0 view .LVU147
 496 001a D046     		mov	r8, r10
 497 001c 9A45     		cmp	r10, r3
 498 001e 38BF     		it	cc
 499 0020 9846     		movcc	r8, r3
 500              	.LVL54:
2728:rtos/uC-LIB/lib_mem.c **** 
2729:rtos/uC-LIB/lib_mem.c **** 
2730:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2731:rtos/uC-LIB/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2732:rtos/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2733:rtos/uC-LIB/lib_mem.c ****     }
2734:rtos/uC-LIB/lib_mem.c **** 
2735:rtos/uC-LIB/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2736:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2737:rtos/uC-LIB/lib_mem.c ****         return;
2738:rtos/uC-LIB/lib_mem.c ****     }
2739:rtos/uC-LIB/lib_mem.c **** 
2740:rtos/uC-LIB/lib_mem.c ****     if (blk_size < 1u) {                                        /* Chk for inv blk size.           
2741:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
2742:rtos/uC-LIB/lib_mem.c ****         return;
2743:rtos/uC-LIB/lib_mem.c ****     }
2744:rtos/uC-LIB/lib_mem.c **** 
2745:rtos/uC-LIB/lib_mem.c ****     if ((blk_qty_max  != LIB_MEM_BLK_QTY_UNLIMITED) &&          /* Chk for invalid blk qty.        
2746:rtos/uC-LIB/lib_mem.c ****         (blk_qty_init >  blk_qty_max)) {
2747:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_NBR;
2748:rtos/uC-LIB/lib_mem.c ****         return;
2749:rtos/uC-LIB/lib_mem.c ****     }
2750:rtos/uC-LIB/lib_mem.c **** 
2751:rtos/uC-LIB/lib_mem.c ****     if (MATH_IS_PWR2(blk_align) != DEF_YES) {                   /* Chk for illegal align spec.     
2752:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ALIGN;
ARM GAS  /tmp/cc3qzkyx.s 			page 59


2753:rtos/uC-LIB/lib_mem.c ****         return;
2754:rtos/uC-LIB/lib_mem.c ****     }
2755:rtos/uC-LIB/lib_mem.c **** #endif
2756:rtos/uC-LIB/lib_mem.c **** 
2757:rtos/uC-LIB/lib_mem.c ****                                                                 /* Calc blk size with align.       
2758:rtos/uC-LIB/lib_mem.c ****     if (blk_size < sizeof(void *)) {                            /* If size if smaller than ptr ... 
 501              		.loc 1 2758 5 is_stmt 1 view .LVU148
 502              		.loc 1 2758 8 is_stmt 0 view .LVU149
 503 0022 032E     		cmp	r6, #3
 504 0024 22D8     		bhi	.L31
2759:rtos/uC-LIB/lib_mem.c ****                                                                 /* ... inc size to ptr size.       
2760:rtos/uC-LIB/lib_mem.c ****         blk_size_align = MATH_ROUND_INC_UP_PWR2(sizeof(void *), blk_align_worst);
 505              		.loc 1 2760 9 is_stmt 1 view .LVU150
 506              		.loc 1 2760 26 is_stmt 0 view .LVU151
 507 0026 C8F10005 		rsb	r5, r8, #0
 508 002a 05F00405 		and	r5, r5, #4
 509 002e 08F1FF32 		add	r2, r8, #-1
 510              	.LVL55:
 511              		.loc 1 2760 26 view .LVU152
 512 0032 12F00402 		ands	r2, r2, #4
 513 0036 00D0     		beq	.L32
 514 0038 4246     		mov	r2, r8
 515              	.L32:
 516              		.loc 1 2760 24 discriminator 4 view .LVU153
 517 003a 1544     		add	r5, r5, r2
 518              	.LVL56:
 519              	.L33:
2761:rtos/uC-LIB/lib_mem.c ****     } else {
2762:rtos/uC-LIB/lib_mem.c ****         blk_size_align = MATH_ROUND_INC_UP_PWR2(blk_size, blk_align_worst);
2763:rtos/uC-LIB/lib_mem.c ****     }
2764:rtos/uC-LIB/lib_mem.c **** 
2765:rtos/uC-LIB/lib_mem.c ****     if (blk_qty_init != 0u) {                                   /* Alloc init blks.                
 520              		.loc 1 2765 5 is_stmt 1 view .LVU154
 521              		.loc 1 2765 8 is_stmt 0 view .LVU155
 522 003c B9F1000F 		cmp	r9, #0
 523 0040 1ED1     		bne	.L43
2766:rtos/uC-LIB/lib_mem.c ****         CPU_SIZE_T  i;
2767:rtos/uC-LIB/lib_mem.c ****         p_blks = (CPU_INT08U *)Mem_SegAllocInternal(p_name,
2768:rtos/uC-LIB/lib_mem.c ****                                                     p_seg,
2769:rtos/uC-LIB/lib_mem.c ****                                                     blk_size_align * blk_qty_init,
2770:rtos/uC-LIB/lib_mem.c ****                                                     DEF_MAX(blk_align, sizeof(void *)),
2771:rtos/uC-LIB/lib_mem.c ****                                                     LIB_MEM_PADDING_ALIGN_NONE,
2772:rtos/uC-LIB/lib_mem.c ****                                                     DEF_NULL,
2773:rtos/uC-LIB/lib_mem.c ****                                                     p_err);
2774:rtos/uC-LIB/lib_mem.c ****         if (*p_err != LIB_MEM_ERR_NONE) {
2775:rtos/uC-LIB/lib_mem.c ****             return;
2776:rtos/uC-LIB/lib_mem.c ****         }
2777:rtos/uC-LIB/lib_mem.c **** 
2778:rtos/uC-LIB/lib_mem.c ****                                                                 /* ----------------- CREATE POOL DA
2779:rtos/uC-LIB/lib_mem.c ****                                                                 /* Init free list.                 
2780:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreePtr = (void *)p_blks;
2781:rtos/uC-LIB/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
2782:rtos/uC-LIB/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
2783:rtos/uC-LIB/lib_mem.c ****             p_blks            += blk_size_align;
2784:rtos/uC-LIB/lib_mem.c ****         }
2785:rtos/uC-LIB/lib_mem.c ****        *((void **)p_blks) = DEF_NULL;
2786:rtos/uC-LIB/lib_mem.c ****     } else {
ARM GAS  /tmp/cc3qzkyx.s 			page 60


2787:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreePtr = DEF_NULL;
 524              		.loc 1 2787 9 is_stmt 1 view .LVU156
 525              		.loc 1 2787 28 is_stmt 0 view .LVU157
 526 0042 0023     		movs	r3, #0
 527 0044 2361     		str	r3, [r4, #16]
 528              	.LVL57:
 529              	.L39:
2788:rtos/uC-LIB/lib_mem.c ****     }
2789:rtos/uC-LIB/lib_mem.c **** 
2790:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
2791:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolSegPtr      = ((p_seg != DEF_NULL) ? p_seg : &Mem_SegHeap);
 530              		.loc 1 2791 5 is_stmt 1 view .LVU158
 531              		.loc 1 2791 60 is_stmt 0 view .LVU159
 532 0046 002F     		cmp	r7, #0
 533 0048 3CD0     		beq	.L44
 534              	.LVL58:
 535              	.L40:
 536              		.loc 1 2791 29 discriminator 4 view .LVU160
 537 004a 2760     		str	r7, [r4]
2792:rtos/uC-LIB/lib_mem.c **** #else
2793:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolSegPtr      =   p_seg;
2794:rtos/uC-LIB/lib_mem.c **** #endif
2795:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkSize         =   blk_size;
 538              		.loc 1 2795 5 is_stmt 1 discriminator 4 view .LVU161
 539              		.loc 1 2795 29 is_stmt 0 discriminator 4 view .LVU162
 540 004c 6660     		str	r6, [r4, #4]
2796:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkAlign        =   blk_align_worst;
 541              		.loc 1 2796 5 is_stmt 1 discriminator 4 view .LVU163
 542              		.loc 1 2796 29 is_stmt 0 discriminator 4 view .LVU164
 543 004e C4F80880 		str	r8, [r4, #8]
2797:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkPaddingAlign =   blk_padding_align;
 544              		.loc 1 2797 5 is_stmt 1 discriminator 4 view .LVU165
 545              		.loc 1 2797 29 is_stmt 0 discriminator 4 view .LVU166
 546 0052 C4F80CA0 		str	r10, [r4, #12]
2798:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkQtyMax       =   blk_qty_max;
 547              		.loc 1 2798 5 is_stmt 1 discriminator 4 view .LVU167
 548              		.loc 1 2798 29 is_stmt 0 discriminator 4 view .LVU168
 549 0056 119B     		ldr	r3, [sp, #68]
 550 0058 6361     		str	r3, [r4, #20]
2799:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkAllocCnt     =   0u;
 551              		.loc 1 2799 5 is_stmt 1 discriminator 4 view .LVU169
 552              		.loc 1 2799 29 is_stmt 0 discriminator 4 view .LVU170
 553 005a 0023     		movs	r3, #0
 554 005c A361     		str	r3, [r4, #24]
2800:rtos/uC-LIB/lib_mem.c **** 
2801:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2802:rtos/uC-LIB/lib_mem.c ****     p_pool->NamePtr = p_name;
2803:rtos/uC-LIB/lib_mem.c **** #endif
2804:rtos/uC-LIB/lib_mem.c **** 
2805:rtos/uC-LIB/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 555              		.loc 1 2805 4 is_stmt 1 discriminator 4 view .LVU171
 556              		.loc 1 2805 11 is_stmt 0 discriminator 4 view .LVU172
 557 005e 42F21073 		movw	r3, #10000
 558 0062 ABF80030 		strh	r3, [fp]	@ movhi
 559              	.L30:
2806:rtos/uC-LIB/lib_mem.c **** }
 560              		.loc 1 2806 1 view .LVU173
ARM GAS  /tmp/cc3qzkyx.s 			page 61


 561 0066 05B0     		add	sp, sp, #20
 562              	.LCFI11:
 563              		.cfi_remember_state
 564              		.cfi_def_cfa_offset 36
 565              		@ sp needed
 566 0068 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 567              	.LVL59:
 568              	.L31:
 569              	.LCFI12:
 570              		.cfi_restore_state
2762:rtos/uC-LIB/lib_mem.c ****     }
 571              		.loc 1 2762 9 is_stmt 1 view .LVU174
2762:rtos/uC-LIB/lib_mem.c ****     }
 572              		.loc 1 2762 26 is_stmt 0 view .LVU175
 573 006c C8F10005 		rsb	r5, r8, #0
 574 0070 3540     		ands	r5, r5, r6
 575 0072 08F1FF32 		add	r2, r8, #-1
 576              	.LVL60:
2762:rtos/uC-LIB/lib_mem.c ****     }
 577              		.loc 1 2762 26 view .LVU176
 578 0076 3240     		ands	r2, r2, r6
 579 0078 00D0     		beq	.L34
 580 007a 4246     		mov	r2, r8
 581              	.L34:
2762:rtos/uC-LIB/lib_mem.c ****     }
 582              		.loc 1 2762 24 discriminator 4 view .LVU177
 583 007c 1544     		add	r5, r5, r2
 584              	.LVL61:
2762:rtos/uC-LIB/lib_mem.c ****     }
 585              		.loc 1 2762 24 discriminator 4 view .LVU178
 586 007e DDE7     		b	.L33
 587              	.L43:
 588              	.LBB2:
2766:rtos/uC-LIB/lib_mem.c ****         p_blks = (CPU_INT08U *)Mem_SegAllocInternal(p_name,
 589              		.loc 1 2766 9 is_stmt 1 view .LVU179
2767:rtos/uC-LIB/lib_mem.c ****                                                     p_seg,
 590              		.loc 1 2767 9 view .LVU180
2767:rtos/uC-LIB/lib_mem.c ****                                                     p_seg,
 591              		.loc 1 2767 32 is_stmt 0 view .LVU181
 592 0080 CDF808B0 		str	fp, [sp, #8]
 593 0084 0022     		movs	r2, #0
 594 0086 0192     		str	r2, [sp, #4]
 595 0088 0122     		movs	r2, #1
 596 008a 0092     		str	r2, [sp]
 597 008c 042B     		cmp	r3, #4
 598 008e 38BF     		it	cc
 599 0090 0423     		movcc	r3, #4
 600 0092 09FB05F2 		mul	r2, r9, r5
 601 0096 3946     		mov	r1, r7
 602              	.LVL62:
2767:rtos/uC-LIB/lib_mem.c ****                                                     p_seg,
 603              		.loc 1 2767 32 view .LVU182
 604 0098 FFF7FEFF 		bl	Mem_SegAllocInternal
 605              	.LVL63:
2774:rtos/uC-LIB/lib_mem.c ****             return;
 606              		.loc 1 2774 9 is_stmt 1 view .LVU183
2774:rtos/uC-LIB/lib_mem.c ****             return;
ARM GAS  /tmp/cc3qzkyx.s 			page 62


 607              		.loc 1 2774 13 is_stmt 0 view .LVU184
 608 009c BBF80020 		ldrh	r2, [fp]
2774:rtos/uC-LIB/lib_mem.c ****             return;
 609              		.loc 1 2774 12 view .LVU185
 610 00a0 42F21073 		movw	r3, #10000
 611 00a4 9A42     		cmp	r2, r3
 612 00a6 DED1     		bne	.L30
2780:rtos/uC-LIB/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 613              		.loc 1 2780 9 is_stmt 1 view .LVU186
2780:rtos/uC-LIB/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 614              		.loc 1 2780 28 is_stmt 0 view .LVU187
 615 00a8 2061     		str	r0, [r4, #16]
2781:rtos/uC-LIB/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 616              		.loc 1 2781 9 is_stmt 1 view .LVU188
 617              	.LVL64:
2781:rtos/uC-LIB/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 618              		.loc 1 2781 16 is_stmt 0 view .LVU189
 619 00aa 0023     		movs	r3, #0
 620              	.LVL65:
 621              	.L37:
2781:rtos/uC-LIB/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 622              		.loc 1 2781 22 is_stmt 1 discriminator 1 view .LVU190
2781:rtos/uC-LIB/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 623              		.loc 1 2781 39 is_stmt 0 discriminator 1 view .LVU191
 624 00ac 09F1FF32 		add	r2, r9, #-1
2781:rtos/uC-LIB/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 625              		.loc 1 2781 9 discriminator 1 view .LVU192
 626 00b0 9A42     		cmp	r2, r3
 627 00b2 04D9     		bls	.L45
2782:rtos/uC-LIB/lib_mem.c ****             p_blks            += blk_size_align;
 628              		.loc 1 2782 12 is_stmt 1 discriminator 3 view .LVU193
2782:rtos/uC-LIB/lib_mem.c ****             p_blks            += blk_size_align;
 629              		.loc 1 2782 41 is_stmt 0 discriminator 3 view .LVU194
 630 00b4 4219     		adds	r2, r0, r5
2782:rtos/uC-LIB/lib_mem.c ****             p_blks            += blk_size_align;
 631              		.loc 1 2782 32 discriminator 3 view .LVU195
 632 00b6 0260     		str	r2, [r0]
2783:rtos/uC-LIB/lib_mem.c ****         }
 633              		.loc 1 2783 13 is_stmt 1 discriminator 3 view .LVU196
 634              	.LVL66:
2781:rtos/uC-LIB/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 635              		.loc 1 2781 45 discriminator 3 view .LVU197
2781:rtos/uC-LIB/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 636              		.loc 1 2781 46 is_stmt 0 discriminator 3 view .LVU198
 637 00b8 0133     		adds	r3, r3, #1
 638              	.LVL67:
2783:rtos/uC-LIB/lib_mem.c ****         }
 639              		.loc 1 2783 31 discriminator 3 view .LVU199
 640 00ba 1046     		mov	r0, r2
 641 00bc F6E7     		b	.L37
 642              	.LVL68:
 643              	.L45:
2785:rtos/uC-LIB/lib_mem.c ****     } else {
 644              		.loc 1 2785 8 is_stmt 1 view .LVU200
2785:rtos/uC-LIB/lib_mem.c ****     } else {
 645              		.loc 1 2785 27 is_stmt 0 view .LVU201
 646 00be 0023     		movs	r3, #0
ARM GAS  /tmp/cc3qzkyx.s 			page 63


 647              	.LVL69:
2785:rtos/uC-LIB/lib_mem.c ****     } else {
 648              		.loc 1 2785 27 view .LVU202
 649 00c0 0360     		str	r3, [r0]
 650              	.LBE2:
 651 00c2 C0E7     		b	.L39
 652              	.LVL70:
 653              	.L44:
2791:rtos/uC-LIB/lib_mem.c **** #else
 654              		.loc 1 2791 60 view .LVU203
 655 00c4 004F     		ldr	r7, .L46
 656              	.LVL71:
2791:rtos/uC-LIB/lib_mem.c **** #else
 657              		.loc 1 2791 60 view .LVU204
 658 00c6 C0E7     		b	.L40
 659              	.L47:
 660              		.align	2
 661              	.L46:
 662 00c8 00000000 		.word	Mem_SegHeap
 663              		.cfi_endproc
 664              	.LFE28:
 666              		.section	.text.Mem_Set,"ax",%progbits
 667              		.align	1
 668              		.global	Mem_Set
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 672              		.fpu fpv4-sp-d16
 674              	Mem_Set:
 675              	.LVL72:
 676              	.LFB2:
 302:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T   size_rem;
 677              		.loc 1 302 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 302:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T   size_rem;
 682              		.loc 1 302 1 is_stmt 0 view .LVU206
 683 0000 10B4     		push	{r4}
 684              	.LCFI13:
 685              		.cfi_def_cfa_offset 4
 686              		.cfi_offset 4, -4
 303:rtos/uC-LIB/lib_mem.c ****     CPU_ALIGN    data_align;
 687              		.loc 1 303 5 is_stmt 1 view .LVU207
 304:rtos/uC-LIB/lib_mem.c ****     CPU_ALIGN   *pmem_align;
 688              		.loc 1 304 5 view .LVU208
 305:rtos/uC-LIB/lib_mem.c ****     CPU_INT08U  *pmem_08;
 689              		.loc 1 305 5 view .LVU209
 306:rtos/uC-LIB/lib_mem.c ****     CPU_DATA     mem_align_mod;
 690              		.loc 1 306 5 view .LVU210
 307:rtos/uC-LIB/lib_mem.c ****     CPU_DATA     i;
 691              		.loc 1 307 5 view .LVU211
 308:rtos/uC-LIB/lib_mem.c **** 
 692              		.loc 1 308 5 view .LVU212
 321:rtos/uC-LIB/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 693              		.loc 1 321 5 view .LVU213
ARM GAS  /tmp/cc3qzkyx.s 			page 64


 694              	.LVL73:
 322:rtos/uC-LIB/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 695              		.loc 1 322 5 view .LVU214
 322:rtos/uC-LIB/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 696              		.loc 1 322 12 is_stmt 0 view .LVU215
 697 0002 0024     		movs	r4, #0
 321:rtos/uC-LIB/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 698              		.loc 1 321 16 view .LVU216
 699 0004 2346     		mov	r3, r4
 322:rtos/uC-LIB/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 700              		.loc 1 322 5 view .LVU217
 701 0006 02E0     		b	.L49
 702              	.LVL74:
 703              	.L50:
 323:rtos/uC-LIB/lib_mem.c ****         data_align  |= (CPU_ALIGN)data_val;
 704              		.loc 1 323 9 is_stmt 1 discriminator 3 view .LVU218
 324:rtos/uC-LIB/lib_mem.c ****     }
 705              		.loc 1 324 9 discriminator 3 view .LVU219
 324:rtos/uC-LIB/lib_mem.c ****     }
 706              		.loc 1 324 21 is_stmt 0 discriminator 3 view .LVU220
 707 0008 41EA0323 		orr	r3, r1, r3, lsl #8
 708              	.LVL75:
 322:rtos/uC-LIB/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 709              		.loc 1 322 41 is_stmt 1 discriminator 3 view .LVU221
 322:rtos/uC-LIB/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 710              		.loc 1 322 42 is_stmt 0 discriminator 3 view .LVU222
 711 000c 0134     		adds	r4, r4, #1
 712              	.LVL76:
 713              	.L49:
 322:rtos/uC-LIB/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 714              		.loc 1 322 18 is_stmt 1 discriminator 1 view .LVU223
 322:rtos/uC-LIB/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 715              		.loc 1 322 5 is_stmt 0 discriminator 1 view .LVU224
 716 000e 032C     		cmp	r4, #3
 717 0010 FAD9     		bls	.L50
 327:rtos/uC-LIB/lib_mem.c ****     mem_align_mod = (CPU_INT08U)((CPU_ADDR)pmem % sizeof(CPU_ALIGN));   /* See Note #3.            
 718              		.loc 1 327 5 is_stmt 1 view .LVU225
 719              	.LVL77:
 328:rtos/uC-LIB/lib_mem.c **** 
 720              		.loc 1 328 5 view .LVU226
 330:rtos/uC-LIB/lib_mem.c ****     if (mem_align_mod != 0u) {                                  /* If leading octets avail,        
 721              		.loc 1 330 5 view .LVU227
 331:rtos/uC-LIB/lib_mem.c ****         i = mem_align_mod;
 722              		.loc 1 331 5 view .LVU228
 331:rtos/uC-LIB/lib_mem.c ****         i = mem_align_mod;
 723              		.loc 1 331 8 is_stmt 0 view .LVU229
 724 0012 10F00304 		ands	r4, r0, #3
 725              	.LVL78:
 331:rtos/uC-LIB/lib_mem.c ****         i = mem_align_mod;
 726              		.loc 1 331 8 view .LVU230
 727 0016 04D1     		bne	.L51
 728 0018 0AE0     		b	.L54
 729              	.LVL79:
 730              	.L53:
 335:rtos/uC-LIB/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 731              		.loc 1 335 12 is_stmt 1 view .LVU231
 335:rtos/uC-LIB/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
ARM GAS  /tmp/cc3qzkyx.s 			page 65


 732              		.loc 1 335 23 is_stmt 0 view .LVU232
 733 001a 00F8011B 		strb	r1, [r0], #1
 734              	.LVL80:
 336:rtos/uC-LIB/lib_mem.c ****             i++;
 735              		.loc 1 336 13 is_stmt 1 view .LVU233
 336:rtos/uC-LIB/lib_mem.c ****             i++;
 736              		.loc 1 336 22 is_stmt 0 view .LVU234
 737 001e 013A     		subs	r2, r2, #1
 738              	.LVL81:
 337:rtos/uC-LIB/lib_mem.c ****         }
 739              		.loc 1 337 13 is_stmt 1 view .LVU235
 337:rtos/uC-LIB/lib_mem.c ****         }
 740              		.loc 1 337 14 is_stmt 0 view .LVU236
 741 0020 0134     		adds	r4, r4, #1
 742              	.LVL82:
 743              	.L51:
 333:rtos/uC-LIB/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 744              		.loc 1 333 15 is_stmt 1 view .LVU237
 745 0022 2AB1     		cbz	r2, .L54
 333:rtos/uC-LIB/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 746              		.loc 1 333 31 is_stmt 0 discriminator 1 view .LVU238
 747 0024 032C     		cmp	r4, #3
 748 0026 F8D9     		bls	.L53
 749 0028 02E0     		b	.L54
 750              	.LVL83:
 751              	.L55:
 343:rtos/uC-LIB/lib_mem.c ****         size_rem    -= sizeof(CPU_ALIGN);
 752              		.loc 1 343 8 is_stmt 1 view .LVU239
 343:rtos/uC-LIB/lib_mem.c ****         size_rem    -= sizeof(CPU_ALIGN);
 753              		.loc 1 343 22 is_stmt 0 view .LVU240
 754 002a 40F8043B 		str	r3, [r0], #4
 755              	.LVL84:
 344:rtos/uC-LIB/lib_mem.c ****     }
 756              		.loc 1 344 9 is_stmt 1 view .LVU241
 344:rtos/uC-LIB/lib_mem.c ****     }
 757              		.loc 1 344 21 is_stmt 0 view .LVU242
 758 002e 043A     		subs	r2, r2, #4
 759              	.LVL85:
 760              	.L54:
 342:rtos/uC-LIB/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 761              		.loc 1 342 11 is_stmt 1 view .LVU243
 762 0030 032A     		cmp	r2, #3
 763 0032 FAD8     		bhi	.L55
 342:rtos/uC-LIB/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 764              		.loc 1 342 11 is_stmt 0 view .LVU244
 765 0034 02E0     		b	.L56
 766              	.LVL86:
 767              	.L57:
 349:rtos/uC-LIB/lib_mem.c ****         size_rem   -= sizeof(CPU_INT08U);
 768              		.loc 1 349 8 is_stmt 1 view .LVU245
 349:rtos/uC-LIB/lib_mem.c ****         size_rem   -= sizeof(CPU_INT08U);
 769              		.loc 1 349 21 is_stmt 0 view .LVU246
 770 0036 00F8011B 		strb	r1, [r0], #1
 771              	.LVL87:
 350:rtos/uC-LIB/lib_mem.c ****     }
 772              		.loc 1 350 9 is_stmt 1 view .LVU247
 350:rtos/uC-LIB/lib_mem.c ****     }
ARM GAS  /tmp/cc3qzkyx.s 			page 66


 773              		.loc 1 350 20 is_stmt 0 view .LVU248
 774 003a 013A     		subs	r2, r2, #1
 775              	.LVL88:
 776              	.L56:
 348:rtos/uC-LIB/lib_mem.c ****        *pmem_08++   = data_val;
 777              		.loc 1 348 11 is_stmt 1 view .LVU249
 778 003c 002A     		cmp	r2, #0
 779 003e FAD1     		bne	.L57
 352:rtos/uC-LIB/lib_mem.c **** 
 780              		.loc 1 352 1 is_stmt 0 view .LVU250
 781 0040 5DF8044B 		ldr	r4, [sp], #4
 782              	.LCFI14:
 783              		.cfi_restore 4
 784              		.cfi_def_cfa_offset 0
 785 0044 7047     		bx	lr
 786              		.cfi_endproc
 787              	.LFE2:
 789              		.section	.text.Mem_Clr,"ax",%progbits
 790              		.align	1
 791              		.global	Mem_Clr
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv4-sp-d16
 797              	Mem_Clr:
 798              	.LVL89:
 799              	.LFB1:
 260:rtos/uC-LIB/lib_mem.c ****     Mem_Set(pmem,
 800              		.loc 1 260 1 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 260:rtos/uC-LIB/lib_mem.c ****     Mem_Set(pmem,
 804              		.loc 1 260 1 is_stmt 0 view .LVU252
 805 0000 08B5     		push	{r3, lr}
 806              	.LCFI15:
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 3, -8
 809              		.cfi_offset 14, -4
 810 0002 0A46     		mov	r2, r1
 261:rtos/uC-LIB/lib_mem.c ****             0u,                                                 /* See Note #2.                    
 811              		.loc 1 261 5 is_stmt 1 view .LVU253
 812 0004 0021     		movs	r1, #0
 813              	.LVL90:
 261:rtos/uC-LIB/lib_mem.c ****             0u,                                                 /* See Note #2.                    
 814              		.loc 1 261 5 is_stmt 0 view .LVU254
 815 0006 FFF7FEFF 		bl	Mem_Set
 816              	.LVL91:
 264:rtos/uC-LIB/lib_mem.c **** 
 817              		.loc 1 264 1 view .LVU255
 818 000a 08BD     		pop	{r3, pc}
 819              		.cfi_endproc
 820              	.LFE1:
 822              		.section	.text.Mem_Copy,"ax",%progbits
 823              		.align	1
 824              		.global	Mem_Copy
 825              		.syntax unified
ARM GAS  /tmp/cc3qzkyx.s 			page 67


 826              		.thumb
 827              		.thumb_func
 828              		.fpu fpv4-sp-d16
 830              	Mem_Copy:
 831              	.LVL92:
 832              	.LFB3:
 410:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 833              		.loc 1 410 1 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 411:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 838              		.loc 1 411 12 view .LVU257
 412:rtos/uC-LIB/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 839              		.loc 1 412 12 view .LVU258
 413:rtos/uC-LIB/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 840              		.loc 1 413 12 view .LVU259
 414:rtos/uC-LIB/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 841              		.loc 1 414 5 view .LVU260
 415:rtos/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 842              		.loc 1 415 12 view .LVU261
 416:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      i;
 843              		.loc 1 416 5 view .LVU262
 417:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 844              		.loc 1 417 12 view .LVU263
 418:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 845              		.loc 1 418 12 view .LVU264
 419:rtos/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 846              		.loc 1 419 12 view .LVU265
 420:rtos/uC-LIB/lib_mem.c **** 
 847              		.loc 1 420 12 view .LVU266
 436:rtos/uC-LIB/lib_mem.c **** 
 848              		.loc 1 436 5 view .LVU267
 438:rtos/uC-LIB/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc;
 849              		.loc 1 438 5 view .LVU268
 439:rtos/uC-LIB/lib_mem.c **** 
 850              		.loc 1 439 5 view .LVU269
 441:rtos/uC-LIB/lib_mem.c **** 
 851              		.loc 1 441 5 view .LVU270
 441:rtos/uC-LIB/lib_mem.c **** 
 852              		.loc 1 441 51 is_stmt 0 view .LVU271
 853 0000 0B1A     		subs	r3, r1, r0
 854              	.LVL93:
 444:rtos/uC-LIB/lib_mem.c ****                                                                 /* See Note #4.                    
 855              		.loc 1 444 5 is_stmt 1 view .LVU272
 444:rtos/uC-LIB/lib_mem.c ****                                                                 /* See Note #4.                    
 856              		.loc 1 444 8 is_stmt 0 view .LVU273
 857 0002 032B     		cmp	r3, #3
 858 0004 29D9     		bls	.L71
 410:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 859              		.loc 1 410 1 view .LVU274
 860 0006 10B4     		push	{r4}
 861              	.LCFI16:
 862              		.cfi_def_cfa_offset 4
 863              		.cfi_offset 4, -4
 446:rtos/uC-LIB/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
ARM GAS  /tmp/cc3qzkyx.s 			page 68


 864              		.loc 1 446 9 is_stmt 1 view .LVU275
 446:rtos/uC-LIB/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 865              		.loc 1 446 28 is_stmt 0 view .LVU276
 866 0008 00F00303 		and	r3, r0, #3
 867              	.LVL94:
 447:rtos/uC-LIB/lib_mem.c **** 
 868              		.loc 1 447 9 is_stmt 1 view .LVU277
 447:rtos/uC-LIB/lib_mem.c **** 
 869              		.loc 1 447 28 is_stmt 0 view .LVU278
 870 000c 01F00304 		and	r4, r1, #3
 871              	.LVL95:
 449:rtos/uC-LIB/lib_mem.c **** 
 872              		.loc 1 449 9 is_stmt 1 view .LVU279
 449:rtos/uC-LIB/lib_mem.c **** 
 873              		.loc 1 449 28 is_stmt 0 view .LVU280
 874 0010 A342     		cmp	r3, r4
 875 0012 18D1     		bne	.L68
 876              	.LVL96:
 451:rtos/uC-LIB/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 877              		.loc 1 451 9 is_stmt 1 view .LVU281
 453:rtos/uC-LIB/lib_mem.c ****                 i = mem_align_mod_dest;
 878              		.loc 1 453 13 view .LVU282
 453:rtos/uC-LIB/lib_mem.c ****                 i = mem_align_mod_dest;
 879              		.loc 1 453 16 is_stmt 0 view .LVU283
 880 0014 33B9     		cbnz	r3, .L63
 881 0016 0EE0     		b	.L66
 882              	.LVL97:
 883              	.L65:
 457:rtos/uC-LIB/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 884              		.loc 1 457 20 is_stmt 1 view .LVU284
 457:rtos/uC-LIB/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 885              		.loc 1 457 38 is_stmt 0 view .LVU285
 886 0018 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 887              	.LVL98:
 457:rtos/uC-LIB/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 888              		.loc 1 457 36 view .LVU286
 889 001c 00F8014B 		strb	r4, [r0], #1
 890              	.LVL99:
 458:rtos/uC-LIB/lib_mem.c ****                     i++;
 891              		.loc 1 458 21 is_stmt 1 view .LVU287
 458:rtos/uC-LIB/lib_mem.c ****                     i++;
 892              		.loc 1 458 35 is_stmt 0 view .LVU288
 893 0020 013A     		subs	r2, r2, #1
 894              	.LVL100:
 459:rtos/uC-LIB/lib_mem.c ****                 }
 895              		.loc 1 459 21 is_stmt 1 view .LVU289
 459:rtos/uC-LIB/lib_mem.c ****                 }
 896              		.loc 1 459 22 is_stmt 0 view .LVU290
 897 0022 0133     		adds	r3, r3, #1
 898              	.LVL101:
 899              	.L63:
 455:rtos/uC-LIB/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 900              		.loc 1 455 23 is_stmt 1 view .LVU291
 901 0024 3AB1     		cbz	r2, .L66
 455:rtos/uC-LIB/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 902              		.loc 1 455 42 is_stmt 0 discriminator 1 view .LVU292
 903 0026 032B     		cmp	r3, #3
ARM GAS  /tmp/cc3qzkyx.s 			page 69


 904 0028 F6D9     		bls	.L65
 905 002a 04E0     		b	.L66
 906              	.LVL102:
 907              	.L67:
 466:rtos/uC-LIB/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 908              		.loc 1 466 16 is_stmt 1 view .LVU293
 466:rtos/uC-LIB/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 909              		.loc 1 466 37 is_stmt 0 view .LVU294
 910 002c 51F8043B 		ldr	r3, [r1], #4
 911              	.LVL103:
 466:rtos/uC-LIB/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 912              		.loc 1 466 35 view .LVU295
 913 0030 40F8043B 		str	r3, [r0], #4
 914              	.LVL104:
 467:rtos/uC-LIB/lib_mem.c ****             }
 915              		.loc 1 467 17 is_stmt 1 view .LVU296
 467:rtos/uC-LIB/lib_mem.c ****             }
 916              		.loc 1 467 34 is_stmt 0 view .LVU297
 917 0034 043A     		subs	r2, r2, #4
 918              	.LVL105:
 919              	.L66:
 465:rtos/uC-LIB/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 920              		.loc 1 465 19 is_stmt 1 view .LVU298
 921 0036 032A     		cmp	r2, #3
 922 0038 F8D8     		bhi	.L67
 465:rtos/uC-LIB/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 923              		.loc 1 465 19 is_stmt 0 view .LVU299
 924 003a 04E0     		b	.L68
 925              	.LVL106:
 926              	.L69:
 476:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 927              		.loc 1 476 8 is_stmt 1 view .LVU300
 476:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 928              		.loc 1 476 26 is_stmt 0 view .LVU301
 929 003c 11F8013B 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 930              	.LVL107:
 476:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 931              		.loc 1 476 24 view .LVU302
 932 0040 00F8013B 		strb	r3, [r0], #1
 933              	.LVL108:
 477:rtos/uC-LIB/lib_mem.c ****     }
 934              		.loc 1 477 9 is_stmt 1 view .LVU303
 477:rtos/uC-LIB/lib_mem.c ****     }
 935              		.loc 1 477 23 is_stmt 0 view .LVU304
 936 0044 013A     		subs	r2, r2, #1
 937              	.LVL109:
 938              	.L68:
 475:rtos/uC-LIB/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 939              		.loc 1 475 11 is_stmt 1 view .LVU305
 940 0046 002A     		cmp	r2, #0
 941 0048 F8D1     		bne	.L69
 479:rtos/uC-LIB/lib_mem.c **** #endif
 942              		.loc 1 479 1 is_stmt 0 view .LVU306
 943 004a 5DF8044B 		ldr	r4, [sp], #4
 944              	.LCFI17:
 945              		.cfi_restore 4
 946              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc3qzkyx.s 			page 70


 947 004e 7047     		bx	lr
 948              	.LVL110:
 949              	.L72:
 476:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 950              		.loc 1 476 8 is_stmt 1 view .LVU307
 476:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 951              		.loc 1 476 26 is_stmt 0 view .LVU308
 952 0050 11F8013B 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 953              	.LVL111:
 476:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 954              		.loc 1 476 24 view .LVU309
 955 0054 00F8013B 		strb	r3, [r0], #1
 956              	.LVL112:
 477:rtos/uC-LIB/lib_mem.c ****     }
 957              		.loc 1 477 9 is_stmt 1 view .LVU310
 477:rtos/uC-LIB/lib_mem.c ****     }
 958              		.loc 1 477 23 is_stmt 0 view .LVU311
 959 0058 013A     		subs	r2, r2, #1
 960              	.LVL113:
 961              	.L71:
 475:rtos/uC-LIB/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 962              		.loc 1 475 11 is_stmt 1 view .LVU312
 963 005a 002A     		cmp	r2, #0
 964 005c F8D1     		bne	.L72
 475:rtos/uC-LIB/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 965              		.loc 1 475 11 is_stmt 0 view .LVU313
 966 005e 7047     		bx	lr
 967              		.cfi_endproc
 968              	.LFE3:
 970              		.section	.text.Mem_Move,"ax",%progbits
 971              		.align	1
 972              		.global	Mem_Move
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu fpv4-sp-d16
 978              	Mem_Move:
 979              	.LVL114:
 980              	.LFB4:
 521:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 981              		.loc 1 521 1 is_stmt 1 view -0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 521:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 985              		.loc 1 521 1 is_stmt 0 view .LVU315
 986 0000 10B5     		push	{r4, lr}
 987              	.LCFI18:
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 4, -8
 990              		.cfi_offset 14, -4
 522:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 991              		.loc 1 522 12 is_stmt 1 view .LVU316
 523:rtos/uC-LIB/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 992              		.loc 1 523 12 view .LVU317
 524:rtos/uC-LIB/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 993              		.loc 1 524 12 view .LVU318
ARM GAS  /tmp/cc3qzkyx.s 			page 71


 525:rtos/uC-LIB/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 994              		.loc 1 525 5 view .LVU319
 526:rtos/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 995              		.loc 1 526 12 view .LVU320
 527:rtos/uC-LIB/lib_mem.c ****            CPU_INT08S    i;
 996              		.loc 1 527 5 view .LVU321
 528:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 997              		.loc 1 528 12 view .LVU322
 529:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 998              		.loc 1 529 12 view .LVU323
 530:rtos/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 999              		.loc 1 530 12 view .LVU324
 531:rtos/uC-LIB/lib_mem.c **** 
 1000              		.loc 1 531 12 view .LVU325
 546:rtos/uC-LIB/lib_mem.c ****     pmem_08_dest = (      CPU_INT08U *)pdest;
 1001              		.loc 1 546 5 view .LVU326
 1002              	.LVL115:
 547:rtos/uC-LIB/lib_mem.c ****     if (pmem_08_src > pmem_08_dest) {
 1003              		.loc 1 547 5 view .LVU327
 548:rtos/uC-LIB/lib_mem.c ****         Mem_Copy(pdest, psrc, size);
 1004              		.loc 1 548 5 view .LVU328
 548:rtos/uC-LIB/lib_mem.c ****         Mem_Copy(pdest, psrc, size);
 1005              		.loc 1 548 8 is_stmt 0 view .LVU329
 1006 0002 8142     		cmp	r1, r0
 1007 0004 0FD8     		bhi	.L87
 553:rtos/uC-LIB/lib_mem.c **** 
 1008              		.loc 1 553 5 is_stmt 1 view .LVU330
 1009              	.LVL116:
 555:rtos/uC-LIB/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc  + size - 1;
 1010              		.loc 1 555 5 view .LVU331
 555:rtos/uC-LIB/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc  + size - 1;
 1011              		.loc 1 555 59 is_stmt 0 view .LVU332
 1012 0006 531E     		subs	r3, r2, #1
 555:rtos/uC-LIB/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc  + size - 1;
 1013              		.loc 1 555 24 view .LVU333
 1014 0008 1844     		add	r0, r0, r3
 1015              	.LVL117:
 556:rtos/uC-LIB/lib_mem.c **** 
 1016              		.loc 1 556 5 is_stmt 1 view .LVU334
 556:rtos/uC-LIB/lib_mem.c **** 
 1017              		.loc 1 556 24 is_stmt 0 view .LVU335
 1018 000a 1944     		add	r1, r1, r3
 1019              	.LVL118:
 558:rtos/uC-LIB/lib_mem.c **** 
 1020              		.loc 1 558 5 is_stmt 1 view .LVU336
 558:rtos/uC-LIB/lib_mem.c **** 
 1021              		.loc 1 558 52 is_stmt 0 view .LVU337
 1022 000c 431A     		subs	r3, r0, r1
 1023              	.LVL119:
 561:rtos/uC-LIB/lib_mem.c **** 
 1024              		.loc 1 561 5 is_stmt 1 view .LVU338
 561:rtos/uC-LIB/lib_mem.c **** 
 1025              		.loc 1 561 8 is_stmt 0 view .LVU339
 1026 000e 032B     		cmp	r3, #3
 1027 0010 28D9     		bls	.L84
 564:rtos/uC-LIB/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 1028              		.loc 1 564 9 is_stmt 1 view .LVU340
ARM GAS  /tmp/cc3qzkyx.s 			page 72


 564:rtos/uC-LIB/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 1029              		.loc 1 564 28 is_stmt 0 view .LVU341
 1030 0012 00F00303 		and	r3, r0, #3
 1031              	.LVL120:
 565:rtos/uC-LIB/lib_mem.c **** 
 1032              		.loc 1 565 9 is_stmt 1 view .LVU342
 565:rtos/uC-LIB/lib_mem.c **** 
 1033              		.loc 1 565 28 is_stmt 0 view .LVU343
 1034 0016 01F00304 		and	r4, r1, #3
 1035              	.LVL121:
 567:rtos/uC-LIB/lib_mem.c **** 
 1036              		.loc 1 567 9 is_stmt 1 view .LVU344
 567:rtos/uC-LIB/lib_mem.c **** 
 1037              		.loc 1 567 28 is_stmt 0 view .LVU345
 1038 001a A342     		cmp	r3, r4
 1039 001c 22D1     		bne	.L84
 1040              	.LVL122:
 569:rtos/uC-LIB/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 1041              		.loc 1 569 9 is_stmt 1 view .LVU346
 571:rtos/uC-LIB/lib_mem.c ****                 i = (CPU_INT08S)mem_align_mod_dest;
 1042              		.loc 1 571 13 view .LVU347
 571:rtos/uC-LIB/lib_mem.c ****                 i = (CPU_INT08S)mem_align_mod_dest;
 1043              		.loc 1 571 16 is_stmt 0 view .LVU348
 1044 001e 032B     		cmp	r3, #3
 1045 0020 0ED0     		beq	.L79
 572:rtos/uC-LIB/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 1046              		.loc 1 572 17 is_stmt 1 view .LVU349
 572:rtos/uC-LIB/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 1047              		.loc 1 572 19 is_stmt 0 view .LVU350
 1048 0022 5BB2     		sxtb	r3, r3
 1049              	.LVL123:
 573:rtos/uC-LIB/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 1050              		.loc 1 573 17 is_stmt 1 view .LVU351
 573:rtos/uC-LIB/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 1051              		.loc 1 573 23 is_stmt 0 view .LVU352
 1052 0024 09E0     		b	.L80
 1053              	.LVL124:
 1054              	.L87:
 549:rtos/uC-LIB/lib_mem.c ****         return;
 1055              		.loc 1 549 9 is_stmt 1 view .LVU353
 1056 0026 FFF7FEFF 		bl	Mem_Copy
 1057              	.LVL125:
 550:rtos/uC-LIB/lib_mem.c ****     }
 1058              		.loc 1 550 9 view .LVU354
 1059 002a 1DE0     		b	.L75
 1060              	.LVL126:
 1061              	.L81:
 575:rtos/uC-LIB/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 1062              		.loc 1 575 20 view .LVU355
 575:rtos/uC-LIB/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 1063              		.loc 1 575 38 is_stmt 0 view .LVU356
 1064 002c 11F80149 		ldrb	r4, [r1], #-1	@ zero_extendqisi2
 1065              	.LVL127:
 575:rtos/uC-LIB/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 1066              		.loc 1 575 36 view .LVU357
 1067 0030 00F80149 		strb	r4, [r0], #-1
 1068              	.LVL128:
ARM GAS  /tmp/cc3qzkyx.s 			page 73


 576:rtos/uC-LIB/lib_mem.c ****                     i--;
 1069              		.loc 1 576 21 is_stmt 1 view .LVU358
 576:rtos/uC-LIB/lib_mem.c ****                     i--;
 1070              		.loc 1 576 35 is_stmt 0 view .LVU359
 1071 0034 013A     		subs	r2, r2, #1
 1072              	.LVL129:
 577:rtos/uC-LIB/lib_mem.c ****                 }
 1073              		.loc 1 577 21 is_stmt 1 view .LVU360
 577:rtos/uC-LIB/lib_mem.c ****                 }
 1074              		.loc 1 577 22 is_stmt 0 view .LVU361
 1075 0036 013B     		subs	r3, r3, #1
 1076              	.LVL130:
 577:rtos/uC-LIB/lib_mem.c ****                 }
 1077              		.loc 1 577 22 view .LVU362
 1078 0038 5BB2     		sxtb	r3, r3
 1079              	.LVL131:
 1080              	.L80:
 573:rtos/uC-LIB/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 1081              		.loc 1 573 23 is_stmt 1 view .LVU363
 1082 003a 0AB1     		cbz	r2, .L79
 573:rtos/uC-LIB/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 1083              		.loc 1 573 42 is_stmt 0 discriminator 1 view .LVU364
 1084 003c 002B     		cmp	r3, #0
 1085 003e F5DA     		bge	.L81
 1086              	.LVL132:
 1087              	.L79:
 582:rtos/uC-LIB/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)(((CPU_INT08U *)pmem_08_src  - sizeof(CPU_ALIGN)) 
 1088              		.loc 1 582 13 is_stmt 1 view .LVU365
 582:rtos/uC-LIB/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)(((CPU_INT08U *)pmem_08_src  - sizeof(CPU_ALIGN)) 
 1089              		.loc 1 582 29 is_stmt 0 view .LVU366
 1090 0040 0338     		subs	r0, r0, #3
 1091              	.LVL133:
 583:rtos/uC-LIB/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 1092              		.loc 1 583 13 is_stmt 1 view .LVU367
 583:rtos/uC-LIB/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 1093              		.loc 1 583 29 is_stmt 0 view .LVU368
 1094 0042 0339     		subs	r1, r1, #3
 1095              	.LVL134:
 584:rtos/uC-LIB/lib_mem.c ****                *pmem_align_dest-- = *pmem_align_src--;          /* ... copy psrc to pdest with CPU_
 1096              		.loc 1 584 13 is_stmt 1 view .LVU369
 584:rtos/uC-LIB/lib_mem.c ****                *pmem_align_dest-- = *pmem_align_src--;          /* ... copy psrc to pdest with CPU_
 1097              		.loc 1 584 19 is_stmt 0 view .LVU370
 1098 0044 04E0     		b	.L82
 1099              	.LVL135:
 1100              	.L83:
 585:rtos/uC-LIB/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 1101              		.loc 1 585 16 is_stmt 1 view .LVU371
 585:rtos/uC-LIB/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 1102              		.loc 1 585 37 is_stmt 0 view .LVU372
 1103 0046 51F80439 		ldr	r3, [r1], #-4
 1104              	.LVL136:
 585:rtos/uC-LIB/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 1105              		.loc 1 585 35 view .LVU373
 1106 004a 40F80439 		str	r3, [r0], #-4
 1107              	.LVL137:
 586:rtos/uC-LIB/lib_mem.c ****             }
 1108              		.loc 1 586 17 is_stmt 1 view .LVU374
ARM GAS  /tmp/cc3qzkyx.s 			page 74


 586:rtos/uC-LIB/lib_mem.c ****             }
 1109              		.loc 1 586 34 is_stmt 0 view .LVU375
 1110 004e 043A     		subs	r2, r2, #4
 1111              	.LVL138:
 1112              	.L82:
 584:rtos/uC-LIB/lib_mem.c ****                *pmem_align_dest-- = *pmem_align_src--;          /* ... copy psrc to pdest with CPU_
 1113              		.loc 1 584 19 is_stmt 1 view .LVU376
 1114 0050 032A     		cmp	r2, #3
 1115 0052 F8D8     		bhi	.L83
 589:rtos/uC-LIB/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src  + sizeof(CPU_ALIGN) - 1;
 1116              		.loc 1 589 13 view .LVU377
 589:rtos/uC-LIB/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src  + sizeof(CPU_ALIGN) - 1;
 1117              		.loc 1 589 26 is_stmt 0 view .LVU378
 1118 0054 0330     		adds	r0, r0, #3
 1119              	.LVL139:
 590:rtos/uC-LIB/lib_mem.c **** 
 1120              		.loc 1 590 13 is_stmt 1 view .LVU379
 590:rtos/uC-LIB/lib_mem.c **** 
 1121              		.loc 1 590 26 is_stmt 0 view .LVU380
 1122 0056 0331     		adds	r1, r1, #3
 1123              	.LVL140:
 590:rtos/uC-LIB/lib_mem.c **** 
 1124              		.loc 1 590 26 view .LVU381
 1125 0058 04E0     		b	.L84
 1126              	.LVL141:
 1127              	.L85:
 596:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 1128              		.loc 1 596 8 is_stmt 1 view .LVU382
 596:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 1129              		.loc 1 596 26 is_stmt 0 view .LVU383
 1130 005a 11F80139 		ldrb	r3, [r1], #-1	@ zero_extendqisi2
 1131              	.LVL142:
 596:rtos/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 1132              		.loc 1 596 24 view .LVU384
 1133 005e 00F80139 		strb	r3, [r0], #-1
 1134              	.LVL143:
 597:rtos/uC-LIB/lib_mem.c ****     }
 1135              		.loc 1 597 9 is_stmt 1 view .LVU385
 597:rtos/uC-LIB/lib_mem.c ****     }
 1136              		.loc 1 597 23 is_stmt 0 view .LVU386
 1137 0062 013A     		subs	r2, r2, #1
 1138              	.LVL144:
 1139              	.L84:
 595:rtos/uC-LIB/lib_mem.c ****        *pmem_08_dest-- = *pmem_08_src--;                        /* ... copy psrc to pdest by octets
 1140              		.loc 1 595 11 is_stmt 1 view .LVU387
 1141 0064 002A     		cmp	r2, #0
 1142 0066 F8D1     		bne	.L85
 1143              	.LVL145:
 1144              	.L75:
 599:rtos/uC-LIB/lib_mem.c **** 
 1145              		.loc 1 599 1 is_stmt 0 view .LVU388
 1146 0068 10BD     		pop	{r4, pc}
 1147              		.cfi_endproc
 1148              	.LFE4:
 1150              		.section	.text.Mem_Cmp,"ax",%progbits
 1151              		.align	1
 1152              		.global	Mem_Cmp
ARM GAS  /tmp/cc3qzkyx.s 			page 75


 1153              		.syntax unified
 1154              		.thumb
 1155              		.thumb_func
 1156              		.fpu fpv4-sp-d16
 1158              	Mem_Cmp:
 1159              	.LVL146:
 1160              	.LFB5:
 645:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 1161              		.loc 1 645 1 is_stmt 1 view -0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 646:rtos/uC-LIB/lib_mem.c ****            CPU_ALIGN    *p1_mem_align;
 1166              		.loc 1 646 12 view .LVU390
 647:rtos/uC-LIB/lib_mem.c ****            CPU_ALIGN    *p2_mem_align;
 1167              		.loc 1 647 12 view .LVU391
 648:rtos/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *p1_mem_08;
 1168              		.loc 1 648 12 view .LVU392
 649:rtos/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *p2_mem_08;
 1169              		.loc 1 649 5 view .LVU393
 650:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      i;
 1170              		.loc 1 650 5 view .LVU394
 651:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_1;
 1171              		.loc 1 651 12 view .LVU395
 652:rtos/uC-LIB/lib_mem.c ****            CPU_DATA      mem_align_mod_2;
 1172              		.loc 1 652 12 view .LVU396
 653:rtos/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 1173              		.loc 1 653 12 view .LVU397
 654:rtos/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_cmp;
 1174              		.loc 1 654 12 view .LVU398
 655:rtos/uC-LIB/lib_mem.c **** 
 1175              		.loc 1 655 12 view .LVU399
 658:rtos/uC-LIB/lib_mem.c ****         return (DEF_YES);
 1176              		.loc 1 658 5 view .LVU400
 658:rtos/uC-LIB/lib_mem.c ****         return (DEF_YES);
 1177              		.loc 1 658 8 is_stmt 0 view .LVU401
 1178 0000 002A     		cmp	r2, #0
 1179 0002 3CD0     		beq	.L101
 1180 0004 1346     		mov	r3, r2
 661:rtos/uC-LIB/lib_mem.c ****         return (DEF_NO);
 1181              		.loc 1 661 5 is_stmt 1 view .LVU402
 661:rtos/uC-LIB/lib_mem.c ****         return (DEF_NO);
 1182              		.loc 1 661 8 is_stmt 0 view .LVU403
 1183 0006 0028     		cmp	r0, #0
 1184 0008 3BD0     		beq	.L102
 664:rtos/uC-LIB/lib_mem.c ****         return (DEF_NO);
 1185              		.loc 1 664 5 is_stmt 1 view .LVU404
 664:rtos/uC-LIB/lib_mem.c ****         return (DEF_NO);
 1186              		.loc 1 664 8 is_stmt 0 view .LVU405
 1187 000a 0029     		cmp	r1, #0
 1188 000c 3BD0     		beq	.L103
 645:rtos/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 1189              		.loc 1 645 1 view .LVU406
 1190 000e 70B4     		push	{r4, r5, r6}
 1191              	.LCFI19:
 1192              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc3qzkyx.s 			page 76


 1193              		.cfi_offset 4, -12
 1194              		.cfi_offset 5, -8
 1195              		.cfi_offset 6, -4
 669:rtos/uC-LIB/lib_mem.c ****     size_rem        =  size;
 1196              		.loc 1 669 5 is_stmt 1 view .LVU407
 1197              	.LVL147:
 670:rtos/uC-LIB/lib_mem.c ****                                                                 /* Start @ end of mem bufs (see Not
 1198              		.loc 1 670 5 view .LVU408
 672:rtos/uC-LIB/lib_mem.c ****     p2_mem_08       = (const CPU_INT08U *)p2_mem + size;
 1199              		.loc 1 672 5 view .LVU409
 672:rtos/uC-LIB/lib_mem.c ****     p2_mem_08       = (const CPU_INT08U *)p2_mem + size;
 1200              		.loc 1 672 21 is_stmt 0 view .LVU410
 1201 0010 8218     		adds	r2, r0, r2
 1202              	.LVL148:
 673:rtos/uC-LIB/lib_mem.c ****                                                                 /* See Note #4.                    
 1203              		.loc 1 673 5 is_stmt 1 view .LVU411
 673:rtos/uC-LIB/lib_mem.c ****                                                                 /* See Note #4.                    
 1204              		.loc 1 673 21 is_stmt 0 view .LVU412
 1205 0012 1944     		add	r1, r1, r3
 1206              	.LVL149:
 675:rtos/uC-LIB/lib_mem.c ****     mem_align_mod_2 = (CPU_INT08U)((CPU_ADDR)p2_mem_08 % sizeof(CPU_ALIGN));
 1207              		.loc 1 675 5 is_stmt 1 view .LVU413
 675:rtos/uC-LIB/lib_mem.c ****     mem_align_mod_2 = (CPU_INT08U)((CPU_ADDR)p2_mem_08 % sizeof(CPU_ALIGN));
 1208              		.loc 1 675 21 is_stmt 0 view .LVU414
 1209 0014 02F00304 		and	r4, r2, #3
 1210              	.LVL150:
 676:rtos/uC-LIB/lib_mem.c **** 
 1211              		.loc 1 676 5 is_stmt 1 view .LVU415
 676:rtos/uC-LIB/lib_mem.c **** 
 1212              		.loc 1 676 21 is_stmt 0 view .LVU416
 1213 0018 01F00300 		and	r0, r1, #3
 1214              	.LVL151:
 678:rtos/uC-LIB/lib_mem.c **** 
 1215              		.loc 1 678 5 is_stmt 1 view .LVU417
 678:rtos/uC-LIB/lib_mem.c **** 
 1216              		.loc 1 678 21 is_stmt 0 view .LVU418
 1217 001c 8442     		cmp	r4, r0
 1218 001e 01D0     		beq	.L113
 669:rtos/uC-LIB/lib_mem.c ****     size_rem        =  size;
 1219              		.loc 1 669 21 view .LVU419
 1220 0020 0120     		movs	r0, #1
 1221              	.LVL152:
 669:rtos/uC-LIB/lib_mem.c ****     size_rem        =  size;
 1222              		.loc 1 669 21 view .LVU420
 1223 0022 22E0     		b	.L99
 1224              	.LVL153:
 1225              	.L113:
 680:rtos/uC-LIB/lib_mem.c ****                                                                 /* ... optimize cmp for mem buf ali
 1226              		.loc 1 680 5 is_stmt 1 view .LVU421
 682:rtos/uC-LIB/lib_mem.c ****             i = mem_align_mod_1;
 1227              		.loc 1 682 9 view .LVU422
 682:rtos/uC-LIB/lib_mem.c ****             i = mem_align_mod_1;
 1228              		.loc 1 682 12 is_stmt 0 view .LVU423
 1229 0024 94B9     		cbnz	r4, .L105
 669:rtos/uC-LIB/lib_mem.c ****     size_rem        =  size;
 1230              		.loc 1 669 21 view .LVU424
 1231 0026 0120     		movs	r0, #1
ARM GAS  /tmp/cc3qzkyx.s 			page 77


 1232              	.LVL154:
 1233              	.L92:
 697:rtos/uC-LIB/lib_mem.c ****             p1_mem_align = (CPU_ALIGN *)p1_mem_08;              /* See Note #3.                    
 1234              		.loc 1 697 9 is_stmt 1 view .LVU425
 697:rtos/uC-LIB/lib_mem.c ****             p1_mem_align = (CPU_ALIGN *)p1_mem_08;              /* See Note #3.                    
 1235              		.loc 1 697 12 is_stmt 0 view .LVU426
 1236 0028 F8B1     		cbz	r0, .L99
 697:rtos/uC-LIB/lib_mem.c ****             p1_mem_align = (CPU_ALIGN *)p1_mem_08;              /* See Note #3.                    
 1237              		.loc 1 697 12 view .LVU427
 1238 002a 12E0     		b	.L95
 1239              	.LVL155:
 1240              	.L93:
 692:rtos/uC-LIB/lib_mem.c ****                 i--;
 1241              		.loc 1 692 17 is_stmt 1 view .LVU428
 692:rtos/uC-LIB/lib_mem.c ****                 i--;
 1242              		.loc 1 692 26 is_stmt 0 view .LVU429
 1243 002c 013B     		subs	r3, r3, #1
 1244              	.LVL156:
 693:rtos/uC-LIB/lib_mem.c ****             }
 1245              		.loc 1 693 17 is_stmt 1 view .LVU430
 693:rtos/uC-LIB/lib_mem.c ****             }
 1246              		.loc 1 693 18 is_stmt 0 view .LVU431
 1247 002e 013C     		subs	r4, r4, #1
 1248              	.LVL157:
 1249              	.L91:
 684:rtos/uC-LIB/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 1250              		.loc 1 684 19 is_stmt 1 view .LVU432
 1251 0030 0028     		cmp	r0, #0
 1252 0032 F9D0     		beq	.L92
 684:rtos/uC-LIB/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 1253              		.loc 1 684 41 is_stmt 0 discriminator 1 view .LVU433
 1254 0034 002B     		cmp	r3, #0
 1255 0036 F7D0     		beq	.L92
 685:rtos/uC-LIB/lib_mem.c ****                    (i        > 0)) {                            /* ... until next CPU_ALIGN word bo
 1256              		.loc 1 685 41 view .LVU434
 1257 0038 002C     		cmp	r4, #0
 1258 003a F5D0     		beq	.L92
 687:rtos/uC-LIB/lib_mem.c ****                 p2_mem_08--;
 1259              		.loc 1 687 17 is_stmt 1 view .LVU435
 1260              	.LVL158:
 688:rtos/uC-LIB/lib_mem.c ****                 if (*p1_mem_08 != *p2_mem_08) {                 /* If ANY data octet(s) NOT identic
 1261              		.loc 1 688 17 view .LVU436
 689:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 1262              		.loc 1 689 17 view .LVU437
 689:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 1263              		.loc 1 689 21 is_stmt 0 view .LVU438
 1264 003c 12F8016D 		ldrb	r6, [r2, #-1]!	@ zero_extendqisi2
 1265              	.LVL159:
 689:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 1266              		.loc 1 689 35 view .LVU439
 1267 0040 11F8015D 		ldrb	r5, [r1, #-1]!	@ zero_extendqisi2
 1268              	.LVL160:
 689:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 1269              		.loc 1 689 20 view .LVU440
 1270 0044 AE42     		cmp	r6, r5
 1271 0046 F1D0     		beq	.L93
 690:rtos/uC-LIB/lib_mem.c ****                 }
ARM GAS  /tmp/cc3qzkyx.s 			page 78


 1272              		.loc 1 690 30 view .LVU441
 1273 0048 0020     		movs	r0, #0
 1274              	.LVL161:
 690:rtos/uC-LIB/lib_mem.c ****                 }
 1275              		.loc 1 690 30 view .LVU442
 1276 004a EFE7     		b	.L93
 1277              	.LVL162:
 1278              	.L105:
 669:rtos/uC-LIB/lib_mem.c ****     size_rem        =  size;
 1279              		.loc 1 669 21 view .LVU443
 1280 004c 0120     		movs	r0, #1
 1281              	.LVL163:
 669:rtos/uC-LIB/lib_mem.c ****     size_rem        =  size;
 1282              		.loc 1 669 21 view .LVU444
 1283 004e EFE7     		b	.L91
 1284              	.LVL164:
 1285              	.L96:
 708:rtos/uC-LIB/lib_mem.c ****             }
 1286              		.loc 1 708 17 is_stmt 1 view .LVU445
 708:rtos/uC-LIB/lib_mem.c ****             }
 1287              		.loc 1 708 26 is_stmt 0 view .LVU446
 1288 0050 043B     		subs	r3, r3, #4
 1289              	.LVL165:
 1290              	.L95:
 701:rtos/uC-LIB/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 1291              		.loc 1 701 19 is_stmt 1 view .LVU447
 1292 0052 50B1     		cbz	r0, .L99
 701:rtos/uC-LIB/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 1293              		.loc 1 701 42 is_stmt 0 discriminator 1 view .LVU448
 1294 0054 032B     		cmp	r3, #3
 1295 0056 08D9     		bls	.L99
 703:rtos/uC-LIB/lib_mem.c ****                 p2_mem_align--;
 1296              		.loc 1 703 17 is_stmt 1 view .LVU449
 1297              	.LVL166:
 704:rtos/uC-LIB/lib_mem.c ****                 if (*p1_mem_align != *p2_mem_align) {           /* If ANY data octet(s) NOT identic
 1298              		.loc 1 704 17 view .LVU450
 705:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 1299              		.loc 1 705 17 view .LVU451
 705:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 1300              		.loc 1 705 21 is_stmt 0 view .LVU452
 1301 0058 52F8045D 		ldr	r5, [r2, #-4]!
 1302              	.LVL167:
 705:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 1303              		.loc 1 705 38 view .LVU453
 1304 005c 51F8044D 		ldr	r4, [r1, #-4]!
 1305              	.LVL168:
 705:rtos/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 1306              		.loc 1 705 20 view .LVU454
 1307 0060 A542     		cmp	r5, r4
 1308 0062 F5D0     		beq	.L96
 706:rtos/uC-LIB/lib_mem.c ****                 }
 1309              		.loc 1 706 30 view .LVU455
 1310 0064 0020     		movs	r0, #0
 1311              	.LVL169:
 706:rtos/uC-LIB/lib_mem.c ****                 }
 1312              		.loc 1 706 30 view .LVU456
 1313 0066 F3E7     		b	.L96
ARM GAS  /tmp/cc3qzkyx.s 			page 79


 1314              	.LVL170:
 1315              	.L98:
 723:rtos/uC-LIB/lib_mem.c ****     }
 1316              		.loc 1 723 9 is_stmt 1 view .LVU457
 723:rtos/uC-LIB/lib_mem.c ****     }
 1317              		.loc 1 723 18 is_stmt 0 view .LVU458
 1318 0068 013B     		subs	r3, r3, #1
 1319              	.LVL171:
 1320              	.L99:
 716:rtos/uC-LIB/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 1321              		.loc 1 716 11 is_stmt 1 view .LVU459
 1322 006a 70B1     		cbz	r0, .L89
 716:rtos/uC-LIB/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 1323              		.loc 1 716 33 is_stmt 0 discriminator 1 view .LVU460
 1324 006c 6BB1     		cbz	r3, .L89
 718:rtos/uC-LIB/lib_mem.c ****         p2_mem_08--;
 1325              		.loc 1 718 9 is_stmt 1 view .LVU461
 1326              	.LVL172:
 719:rtos/uC-LIB/lib_mem.c ****         if (*p1_mem_08 != *p2_mem_08) {                         /* If ANY data octet(s) NOT identic
 1327              		.loc 1 719 9 view .LVU462
 720:rtos/uC-LIB/lib_mem.c ****              mem_cmp = DEF_NO;
 1328              		.loc 1 720 9 view .LVU463
 720:rtos/uC-LIB/lib_mem.c ****              mem_cmp = DEF_NO;
 1329              		.loc 1 720 13 is_stmt 0 view .LVU464
 1330 006e 12F8015D 		ldrb	r5, [r2, #-1]!	@ zero_extendqisi2
 1331              	.LVL173:
 720:rtos/uC-LIB/lib_mem.c ****              mem_cmp = DEF_NO;
 1332              		.loc 1 720 27 view .LVU465
 1333 0072 11F8014D 		ldrb	r4, [r1, #-1]!	@ zero_extendqisi2
 1334              	.LVL174:
 720:rtos/uC-LIB/lib_mem.c ****              mem_cmp = DEF_NO;
 1335              		.loc 1 720 12 view .LVU466
 1336 0076 A542     		cmp	r5, r4
 1337 0078 F6D0     		beq	.L98
 721:rtos/uC-LIB/lib_mem.c ****         }
 1338              		.loc 1 721 22 view .LVU467
 1339 007a 0020     		movs	r0, #0
 1340              	.LVL175:
 721:rtos/uC-LIB/lib_mem.c ****         }
 1341              		.loc 1 721 22 view .LVU468
 1342 007c F4E7     		b	.L98
 1343              	.LVL176:
 1344              	.L101:
 1345              	.LCFI20:
 1346              		.cfi_def_cfa_offset 0
 1347              		.cfi_restore 4
 1348              		.cfi_restore 5
 1349              		.cfi_restore 6
 659:rtos/uC-LIB/lib_mem.c ****     }
 1350              		.loc 1 659 16 view .LVU469
 1351 007e 0120     		movs	r0, #1
 1352              	.LVL177:
 659:rtos/uC-LIB/lib_mem.c ****     }
 1353              		.loc 1 659 16 view .LVU470
 1354 0080 7047     		bx	lr
 1355              	.LVL178:
 1356              	.L102:
ARM GAS  /tmp/cc3qzkyx.s 			page 80


 662:rtos/uC-LIB/lib_mem.c ****     }
 1357              		.loc 1 662 16 view .LVU471
 1358 0082 0020     		movs	r0, #0
 1359              	.LVL179:
 662:rtos/uC-LIB/lib_mem.c ****     }
 1360              		.loc 1 662 16 view .LVU472
 1361 0084 7047     		bx	lr
 1362              	.LVL180:
 1363              	.L103:
 665:rtos/uC-LIB/lib_mem.c ****     }
 1364              		.loc 1 665 16 view .LVU473
 1365 0086 0020     		movs	r0, #0
 1366              	.LVL181:
 727:rtos/uC-LIB/lib_mem.c **** 
 1367              		.loc 1 727 1 view .LVU474
 1368 0088 7047     		bx	lr
 1369              	.LVL182:
 1370              	.L89:
 1371              	.LCFI21:
 1372              		.cfi_def_cfa_offset 12
 1373              		.cfi_offset 4, -12
 1374              		.cfi_offset 5, -8
 1375              		.cfi_offset 6, -4
 727:rtos/uC-LIB/lib_mem.c **** 
 1376              		.loc 1 727 1 view .LVU475
 1377 008a 70BC     		pop	{r4, r5, r6}
 1378              	.LCFI22:
 1379              		.cfi_restore 6
 1380              		.cfi_restore 5
 1381              		.cfi_restore 4
 1382              		.cfi_def_cfa_offset 0
 1383 008c 7047     		bx	lr
 1384              		.cfi_endproc
 1385              	.LFE5:
 1387              		.section	.text.Mem_HeapAlloc,"ax",%progbits
 1388              		.align	1
 1389              		.global	Mem_HeapAlloc
 1390              		.syntax unified
 1391              		.thumb
 1392              		.thumb_func
 1393              		.fpu fpv4-sp-d16
 1395              	Mem_HeapAlloc:
 1396              	.LVL183:
 1397              	.LFB6:
 775:rtos/uC-LIB/lib_mem.c ****     void  *p_mem;
 1398              		.loc 1 775 1 is_stmt 1 view -0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 775:rtos/uC-LIB/lib_mem.c ****     void  *p_mem;
 1402              		.loc 1 775 1 is_stmt 0 view .LVU477
 1403 0000 10B5     		push	{r4, lr}
 1404              	.LCFI23:
 1405              		.cfi_def_cfa_offset 8
 1406              		.cfi_offset 4, -8
 1407              		.cfi_offset 14, -4
 1408 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/cc3qzkyx.s 			page 81


 1409              	.LCFI24:
 1410              		.cfi_def_cfa_offset 24
 1411 0004 1C46     		mov	r4, r3
 776:rtos/uC-LIB/lib_mem.c **** 
 1412              		.loc 1 776 5 is_stmt 1 view .LVU478
 779:rtos/uC-LIB/lib_mem.c ****                                 &Mem_SegHeap,
 1413              		.loc 1 779 5 view .LVU479
 779:rtos/uC-LIB/lib_mem.c ****                                 &Mem_SegHeap,
 1414              		.loc 1 779 13 is_stmt 0 view .LVU480
 1415 0006 0293     		str	r3, [sp, #8]
 1416 0008 0192     		str	r2, [sp, #4]
 1417 000a 0123     		movs	r3, #1
 1418              	.LVL184:
 779:rtos/uC-LIB/lib_mem.c ****                                 &Mem_SegHeap,
 1419              		.loc 1 779 13 view .LVU481
 1420 000c 0093     		str	r3, [sp]
 1421 000e 0B46     		mov	r3, r1
 1422 0010 0246     		mov	r2, r0
 1423              	.LVL185:
 779:rtos/uC-LIB/lib_mem.c ****                                 &Mem_SegHeap,
 1424              		.loc 1 779 13 view .LVU482
 1425 0012 0749     		ldr	r1, .L118
 1426              	.LVL186:
 779:rtos/uC-LIB/lib_mem.c ****                                 &Mem_SegHeap,
 1427              		.loc 1 779 13 view .LVU483
 1428 0014 0020     		movs	r0, #0
 1429              	.LVL187:
 779:rtos/uC-LIB/lib_mem.c ****                                 &Mem_SegHeap,
 1430              		.loc 1 779 13 view .LVU484
 1431 0016 FFF7FEFF 		bl	Mem_SegAllocInternal
 1432              	.LVL188:
 786:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_HEAP_OVF;
 1433              		.loc 1 786 5 is_stmt 1 view .LVU485
 786:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_HEAP_OVF;
 1434              		.loc 1 786 9 is_stmt 0 view .LVU486
 1435 001a 2288     		ldrh	r2, [r4]
 786:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_HEAP_OVF;
 1436              		.loc 1 786 8 view .LVU487
 1437 001c 42F2D973 		movw	r3, #10201
 1438 0020 9A42     		cmp	r2, r3
 1439 0022 01D0     		beq	.L117
 1440              	.L114:
 791:rtos/uC-LIB/lib_mem.c **** #endif
 1441              		.loc 1 791 1 view .LVU488
 1442 0024 04B0     		add	sp, sp, #16
 1443              	.LCFI25:
 1444              		.cfi_remember_state
 1445              		.cfi_def_cfa_offset 8
 1446              		@ sp needed
 1447 0026 10BD     		pop	{r4, pc}
 1448              	.LVL189:
 1449              	.L117:
 1450              	.LCFI26:
 1451              		.cfi_restore_state
 787:rtos/uC-LIB/lib_mem.c ****     }
 1452              		.loc 1 787 8 is_stmt 1 view .LVU489
 787:rtos/uC-LIB/lib_mem.c ****     }
ARM GAS  /tmp/cc3qzkyx.s 			page 82


 1453              		.loc 1 787 15 is_stmt 0 view .LVU490
 1454 0028 42F2E373 		movw	r3, #10211
 1455 002c 2380     		strh	r3, [r4]	@ movhi
 790:rtos/uC-LIB/lib_mem.c **** }
 1456              		.loc 1 790 5 is_stmt 1 view .LVU491
 790:rtos/uC-LIB/lib_mem.c **** }
 1457              		.loc 1 790 12 is_stmt 0 view .LVU492
 1458 002e F9E7     		b	.L114
 1459              	.L119:
 1460              		.align	2
 1461              	.L118:
 1462 0030 00000000 		.word	Mem_SegHeap
 1463              		.cfi_endproc
 1464              	.LFE6:
 1466              		.section	.text.Mem_SegCreate,"ax",%progbits
 1467              		.align	1
 1468              		.global	Mem_SegCreate
 1469              		.syntax unified
 1470              		.thumb
 1471              		.thumb_func
 1472              		.fpu fpv4-sp-d16
 1474              	Mem_SegCreate:
 1475              	.LVL190:
 1476              	.LFB8:
 887:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 1477              		.loc 1 887 1 is_stmt 1 view -0
 1478              		.cfi_startproc
 1479              		@ args = 8, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 887:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 1481              		.loc 1 887 1 is_stmt 0 view .LVU494
 1482 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1483              	.LCFI27:
 1484              		.cfi_def_cfa_offset 24
 1485              		.cfi_offset 4, -24
 1486              		.cfi_offset 5, -20
 1487              		.cfi_offset 6, -16
 1488              		.cfi_offset 7, -12
 1489              		.cfi_offset 8, -8
 1490              		.cfi_offset 14, -4
 1491 0004 82B0     		sub	sp, sp, #8
 1492              	.LCFI28:
 1493              		.cfi_def_cfa_offset 32
 1494 0006 0546     		mov	r5, r0
 1495 0008 0E46     		mov	r6, r1
 1496 000a 1746     		mov	r7, r2
 1497 000c 9846     		mov	r8, r3
 888:rtos/uC-LIB/lib_mem.c **** 
 1498              		.loc 1 888 5 is_stmt 1 view .LVU495
 1499              	.LVL191:
 918:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 1500              		.loc 1 918 5 view .LVU496
 918:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 1501              		.loc 1 918 5 view .LVU497
 918:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 1502              		.loc 1 918 5 view .LVU498
 1503 000e 4020     		movs	r0, #64
ARM GAS  /tmp/cc3qzkyx.s 			page 83


 1504              	.LVL192:
 918:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 1505              		.loc 1 918 5 is_stmt 0 view .LVU499
 1506 0010 FFF7FEFF 		bl	CPU_SR_Save
 1507              	.LVL193:
 918:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 1508              		.loc 1 918 5 view .LVU500
 1509 0014 0446     		mov	r4, r0
 1510              	.LVL194:
 918:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 1511              		.loc 1 918 5 is_stmt 1 view .LVU501
 918:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 1512              		.loc 1 918 5 view .LVU502
 929:rtos/uC-LIB/lib_mem.c ****                           p_seg,
 1513              		.loc 1 929 5 view .LVU503
 1514 0016 CDF80080 		str	r8, [sp]
 1515 001a 089B     		ldr	r3, [sp, #32]
 1516 001c 3A46     		mov	r2, r7
 1517 001e 3146     		mov	r1, r6
 1518 0020 2846     		mov	r0, r5
 1519              	.LVL195:
 929:rtos/uC-LIB/lib_mem.c ****                           p_seg,
 1520              		.loc 1 929 5 is_stmt 0 view .LVU504
 1521 0022 FFF7FEFF 		bl	Mem_SegCreateCritical
 1522              	.LVL196:
 934:rtos/uC-LIB/lib_mem.c **** 
 1523              		.loc 1 934 5 is_stmt 1 view .LVU505
 934:rtos/uC-LIB/lib_mem.c **** 
 1524              		.loc 1 934 5 view .LVU506
 934:rtos/uC-LIB/lib_mem.c **** 
 1525              		.loc 1 934 5 view .LVU507
 1526 0026 2046     		mov	r0, r4
 1527 0028 FFF7FEFF 		bl	CPU_SR_Restore
 1528              	.LVL197:
 934:rtos/uC-LIB/lib_mem.c **** 
 1529              		.loc 1 934 5 view .LVU508
 934:rtos/uC-LIB/lib_mem.c **** 
 1530              		.loc 1 934 5 view .LVU509
 936:rtos/uC-LIB/lib_mem.c **** }
 1531              		.loc 1 936 4 view .LVU510
 936:rtos/uC-LIB/lib_mem.c **** }
 1532              		.loc 1 936 11 is_stmt 0 view .LVU511
 1533 002c 099B     		ldr	r3, [sp, #36]
 1534 002e 42F21072 		movw	r2, #10000
 1535 0032 1A80     		strh	r2, [r3]	@ movhi
 937:rtos/uC-LIB/lib_mem.c **** 
 1536              		.loc 1 937 1 view .LVU512
 1537 0034 02B0     		add	sp, sp, #8
 1538              	.LCFI29:
 1539              		.cfi_def_cfa_offset 24
 1540              		@ sp needed
 1541 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 937:rtos/uC-LIB/lib_mem.c **** 
 1542              		.loc 1 937 1 view .LVU513
 1543              		.cfi_endproc
 1544              	.LFE8:
 1546              		.section	.rodata.Mem_Init.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/cc3qzkyx.s 			page 84


 1547              		.align	2
 1548              	.LC0:
 1549 0000 48656170 		.ascii	"Heap\000"
 1549      00
 1550              		.section	.text.Mem_Init,"ax",%progbits
 1551              		.align	1
 1552              		.global	Mem_Init
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1556              		.fpu fpv4-sp-d16
 1558              	Mem_Init:
 1559              	.LFB0:
 204:rtos/uC-LIB/lib_mem.c **** 
 1560              		.loc 1 204 1 is_stmt 1 view -0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 8
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 1564 0000 00B5     		push	{lr}
 1565              	.LCFI30:
 1566              		.cfi_def_cfa_offset 4
 1567              		.cfi_offset 14, -4
 1568 0002 85B0     		sub	sp, sp, #20
 1569              	.LCFI31:
 1570              		.cfi_def_cfa_offset 24
 207:rtos/uC-LIB/lib_mem.c **** 
 1571              		.loc 1 207 5 view .LVU515
 207:rtos/uC-LIB/lib_mem.c **** 
 1572              		.loc 1 207 20 is_stmt 0 view .LVU516
 1573 0004 0D4B     		ldr	r3, .L126
 1574 0006 0022     		movs	r2, #0
 1575 0008 1A60     		str	r2, [r3]
 1576              	.LBB3:
 211:rtos/uC-LIB/lib_mem.c ****         CPU_ADDR  heap_base_addr;
 1577              		.loc 1 211 9 is_stmt 1 view .LVU517
 212:rtos/uC-LIB/lib_mem.c **** 
 1578              		.loc 1 212 9 view .LVU518
 219:rtos/uC-LIB/lib_mem.c **** #endif
 1579              		.loc 1 219 9 view .LVU519
 1580              	.LVL198:
 222:rtos/uC-LIB/lib_mem.c ****                       &Mem_SegHeap,                             /* Create heap seg.                
 1581              		.loc 1 222 9 view .LVU520
 1582 000a 0DF10E03 		add	r3, sp, #14
 1583 000e 0193     		str	r3, [sp, #4]
 1584 0010 0123     		movs	r3, #1
 1585 0012 0093     		str	r3, [sp]
 1586 0014 4FF48063 		mov	r3, #1024
 1587 0018 094A     		ldr	r2, .L126+4
 1588 001a 0A49     		ldr	r1, .L126+8
 1589 001c 0A48     		ldr	r0, .L126+12
 1590 001e FFF7FEFF 		bl	Mem_SegCreate
 1591              	.LVL199:
 228:rtos/uC-LIB/lib_mem.c ****             CPU_SW_EXCEPTION(;);
 1592              		.loc 1 228 9 view .LVU521
 228:rtos/uC-LIB/lib_mem.c ****             CPU_SW_EXCEPTION(;);
 1593              		.loc 1 228 17 is_stmt 0 view .LVU522
 1594 0022 BDF80E20 		ldrh	r2, [sp, #14]
ARM GAS  /tmp/cc3qzkyx.s 			page 85


 228:rtos/uC-LIB/lib_mem.c ****             CPU_SW_EXCEPTION(;);
 1595              		.loc 1 228 12 view .LVU523
 1596 0026 42F21073 		movw	r3, #10000
 1597 002a 9A42     		cmp	r2, r3
 1598 002c 02D1     		bne	.L125
 1599              	.L122:
 1600              	.LBE3:
 233:rtos/uC-LIB/lib_mem.c **** 
 1601              		.loc 1 233 1 view .LVU524
 1602 002e 05B0     		add	sp, sp, #20
 1603              	.LCFI32:
 1604              		.cfi_remember_state
 1605              		.cfi_def_cfa_offset 4
 1606              		@ sp needed
 1607 0030 5DF804FB 		ldr	pc, [sp], #4
 1608              	.L125:
 1609              	.LCFI33:
 1610              		.cfi_restore_state
 1611              	.LBB4:
 229:rtos/uC-LIB/lib_mem.c ****         }
 1612              		.loc 1 229 13 is_stmt 1 view .LVU525
 229:rtos/uC-LIB/lib_mem.c ****         }
 1613              		.loc 1 229 13 view .LVU526
 1614 0034 FFF7FEFF 		bl	CPU_SW_Exception
 1615              	.LVL200:
 229:rtos/uC-LIB/lib_mem.c ****         }
 1616              		.loc 1 229 13 view .LVU527
 1617              	.LBE4:
 233:rtos/uC-LIB/lib_mem.c **** 
 1618              		.loc 1 233 1 is_stmt 0 view .LVU528
 1619 0038 F9E7     		b	.L122
 1620              	.L127:
 1621 003a 00BF     		.align	2
 1622              	.L126:
 1623 003c 00000000 		.word	Mem_SegHeadPtr
 1624 0040 00000000 		.word	Mem_Heap
 1625 0044 00000000 		.word	Mem_SegHeap
 1626 0048 00000000 		.word	.LC0
 1627              		.cfi_endproc
 1628              	.LFE0:
 1630              		.section	.text.Mem_SegClr,"ax",%progbits
 1631              		.align	1
 1632              		.global	Mem_SegClr
 1633              		.syntax unified
 1634              		.thumb
 1635              		.thumb_func
 1636              		.fpu fpv4-sp-d16
 1638              	Mem_SegClr:
 1639              	.LVL201:
 1640              	.LFB9:
 967:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 1641              		.loc 1 967 1 is_stmt 1 view -0
 1642              		.cfi_startproc
 1643              		@ args = 0, pretend = 0, frame = 0
 1644              		@ frame_needed = 0, uses_anonymous_args = 0
 967:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 1645              		.loc 1 967 1 is_stmt 0 view .LVU530
ARM GAS  /tmp/cc3qzkyx.s 			page 86


 1646 0000 38B5     		push	{r3, r4, r5, lr}
 1647              	.LCFI34:
 1648              		.cfi_def_cfa_offset 16
 1649              		.cfi_offset 3, -16
 1650              		.cfi_offset 4, -12
 1651              		.cfi_offset 5, -8
 1652              		.cfi_offset 14, -4
 1653 0002 0446     		mov	r4, r0
 1654 0004 0D46     		mov	r5, r1
 968:rtos/uC-LIB/lib_mem.c **** 
 1655              		.loc 1 968 5 is_stmt 1 view .LVU531
 1656              	.LVL202:
 982:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 1657              		.loc 1 982 5 view .LVU532
 982:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 1658              		.loc 1 982 5 view .LVU533
 982:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 1659              		.loc 1 982 5 view .LVU534
 1660 0006 4020     		movs	r0, #64
 1661              	.LVL203:
 982:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 1662              		.loc 1 982 5 is_stmt 0 view .LVU535
 1663 0008 FFF7FEFF 		bl	CPU_SR_Save
 1664              	.LVL204:
 982:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 1665              		.loc 1 982 5 is_stmt 1 view .LVU536
 982:rtos/uC-LIB/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 1666              		.loc 1 982 5 view .LVU537
 983:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1667              		.loc 1 983 5 view .LVU538
 983:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1668              		.loc 1 983 28 is_stmt 0 view .LVU539
 1669 000c 2368     		ldr	r3, [r4]
 983:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1670              		.loc 1 983 21 view .LVU540
 1671 000e A360     		str	r3, [r4, #8]
 984:rtos/uC-LIB/lib_mem.c **** 
 1672              		.loc 1 984 5 is_stmt 1 view .LVU541
 984:rtos/uC-LIB/lib_mem.c **** 
 1673              		.loc 1 984 5 view .LVU542
 984:rtos/uC-LIB/lib_mem.c **** 
 1674              		.loc 1 984 5 view .LVU543
 1675 0010 FFF7FEFF 		bl	CPU_SR_Restore
 1676              	.LVL205:
 984:rtos/uC-LIB/lib_mem.c **** 
 1677              		.loc 1 984 5 view .LVU544
 984:rtos/uC-LIB/lib_mem.c **** 
 1678              		.loc 1 984 5 view .LVU545
 986:rtos/uC-LIB/lib_mem.c **** }
 1679              		.loc 1 986 4 view .LVU546
 986:rtos/uC-LIB/lib_mem.c **** }
 1680              		.loc 1 986 11 is_stmt 0 view .LVU547
 1681 0014 42F21073 		movw	r3, #10000
 1682 0018 2B80     		strh	r3, [r5]	@ movhi
 987:rtos/uC-LIB/lib_mem.c **** #endif
 1683              		.loc 1 987 1 view .LVU548
 1684 001a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc3qzkyx.s 			page 87


 987:rtos/uC-LIB/lib_mem.c **** #endif
 1685              		.loc 1 987 1 view .LVU549
 1686              		.cfi_endproc
 1687              	.LFE9:
 1689              		.section	.text.Mem_SegRemSizeGet,"ax",%progbits
 1690              		.align	1
 1691              		.global	Mem_SegRemSizeGet
 1692              		.syntax unified
 1693              		.thumb
 1694              		.thumb_func
 1695              		.fpu fpv4-sp-d16
 1697              	Mem_SegRemSizeGet:
 1698              	.LVL206:
 1699              	.LFB10:
1025:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  rem_size;
 1700              		.loc 1 1025 1 is_stmt 1 view -0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
1025:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  rem_size;
 1704              		.loc 1 1025 1 is_stmt 0 view .LVU551
 1705 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1706              	.LCFI35:
 1707              		.cfi_def_cfa_offset 24
 1708              		.cfi_offset 4, -24
 1709              		.cfi_offset 5, -20
 1710              		.cfi_offset 6, -16
 1711              		.cfi_offset 7, -12
 1712              		.cfi_offset 8, -8
 1713              		.cfi_offset 14, -4
 1714 0004 8846     		mov	r8, r1
 1715 0006 1546     		mov	r5, r2
 1716 0008 1F46     		mov	r7, r3
1026:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  total_size;
 1717              		.loc 1 1026 5 is_stmt 1 view .LVU552
1027:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  used_size;
 1718              		.loc 1 1027 5 view .LVU553
1028:rtos/uC-LIB/lib_mem.c ****     CPU_ADDR    next_addr_align;
 1719              		.loc 1 1028 5 view .LVU554
1029:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 1720              		.loc 1 1029 5 view .LVU555
1030:rtos/uC-LIB/lib_mem.c **** 
 1721              		.loc 1 1030 5 view .LVU556
 1722              	.LVL207:
1044:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1723              		.loc 1 1044 5 view .LVU557
1044:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1724              		.loc 1 1044 8 is_stmt 0 view .LVU558
 1725 000a 0646     		mov	r6, r0
 1726 000c 18B3     		cbz	r0, .L138
 1727              	.L131:
 1728              	.LVL208:
1053:rtos/uC-LIB/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
 1729              		.loc 1 1053 5 is_stmt 1 view .LVU559
1053:rtos/uC-LIB/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
 1730              		.loc 1 1053 5 view .LVU560
1053:rtos/uC-LIB/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
ARM GAS  /tmp/cc3qzkyx.s 			page 88


 1731              		.loc 1 1053 5 view .LVU561
 1732 000e 4020     		movs	r0, #64
 1733 0010 FFF7FEFF 		bl	CPU_SR_Save
 1734              	.LVL209:
1053:rtos/uC-LIB/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
 1735              		.loc 1 1053 5 view .LVU562
1053:rtos/uC-LIB/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
 1736              		.loc 1 1053 5 view .LVU563
1054:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1737              		.loc 1 1054 5 view .LVU564
1054:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1738              		.loc 1 1054 23 is_stmt 0 view .LVU565
 1739 0014 B268     		ldr	r2, [r6, #8]
 1740 0016 C8F10004 		rsb	r4, r8, #0
 1741 001a 1440     		ands	r4, r4, r2
 1742 001c 08F1FF33 		add	r3, r8, #-1
 1743 0020 1A40     		ands	r2, r2, r3
 1744 0022 00D0     		beq	.L132
 1745 0024 4246     		mov	r2, r8
 1746              	.L132:
1054:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1747              		.loc 1 1054 21 discriminator 4 view .LVU566
 1748 0026 1444     		add	r4, r4, r2
 1749              	.LVL210:
1055:rtos/uC-LIB/lib_mem.c **** 
 1750              		.loc 1 1055 5 is_stmt 1 discriminator 4 view .LVU567
1055:rtos/uC-LIB/lib_mem.c **** 
 1751              		.loc 1 1055 5 discriminator 4 view .LVU568
1055:rtos/uC-LIB/lib_mem.c **** 
 1752              		.loc 1 1055 5 discriminator 4 view .LVU569
 1753 0028 FFF7FEFF 		bl	CPU_SR_Restore
 1754              	.LVL211:
1055:rtos/uC-LIB/lib_mem.c **** 
 1755              		.loc 1 1055 5 discriminator 4 view .LVU570
1055:rtos/uC-LIB/lib_mem.c **** 
 1756              		.loc 1 1055 5 discriminator 4 view .LVU571
1057:rtos/uC-LIB/lib_mem.c ****     used_size  =  p_seg->AddrNext - p_seg->AddrBase;
 1757              		.loc 1 1057 5 discriminator 4 view .LVU572
1057:rtos/uC-LIB/lib_mem.c ****     used_size  =  p_seg->AddrNext - p_seg->AddrBase;
 1758              		.loc 1 1057 24 is_stmt 0 discriminator 4 view .LVU573
 1759 002c 7168     		ldr	r1, [r6, #4]
1057:rtos/uC-LIB/lib_mem.c ****     used_size  =  p_seg->AddrNext - p_seg->AddrBase;
 1760              		.loc 1 1057 42 discriminator 4 view .LVU574
 1761 002e 3068     		ldr	r0, [r6]
1057:rtos/uC-LIB/lib_mem.c ****     used_size  =  p_seg->AddrNext - p_seg->AddrBase;
 1762              		.loc 1 1057 35 discriminator 4 view .LVU575
 1763 0030 0B1A     		subs	r3, r1, r0
1057:rtos/uC-LIB/lib_mem.c ****     used_size  =  p_seg->AddrNext - p_seg->AddrBase;
 1764              		.loc 1 1057 16 discriminator 4 view .LVU576
 1765 0032 0133     		adds	r3, r3, #1
 1766              	.LVL212:
1058:rtos/uC-LIB/lib_mem.c **** 
 1767              		.loc 1 1058 5 is_stmt 1 discriminator 4 view .LVU577
1058:rtos/uC-LIB/lib_mem.c **** 
 1768              		.loc 1 1058 24 is_stmt 0 discriminator 4 view .LVU578
 1769 0034 B268     		ldr	r2, [r6, #8]
1058:rtos/uC-LIB/lib_mem.c **** 
ARM GAS  /tmp/cc3qzkyx.s 			page 89


 1770              		.loc 1 1058 16 discriminator 4 view .LVU579
 1771 0036 121A     		subs	r2, r2, r0
 1772              	.LVL213:
1060:rtos/uC-LIB/lib_mem.c ****         next_addr_align = 0u;
 1773              		.loc 1 1060 5 is_stmt 1 discriminator 4 view .LVU580
1060:rtos/uC-LIB/lib_mem.c ****         next_addr_align = 0u;
 1774              		.loc 1 1060 8 is_stmt 0 discriminator 4 view .LVU581
 1775 0038 A142     		cmp	r1, r4
 1776 003a 0ED3     		bcc	.L136
1064:rtos/uC-LIB/lib_mem.c ****     }
 1777              		.loc 1 1064 9 is_stmt 1 view .LVU582
1064:rtos/uC-LIB/lib_mem.c ****     }
 1778              		.loc 1 1064 57 is_stmt 0 view .LVU583
 1779 003c 001B     		subs	r0, r0, r4
1064:rtos/uC-LIB/lib_mem.c ****     }
 1780              		.loc 1 1064 25 view .LVU584
 1781 003e 1844     		add	r0, r0, r3
 1782              	.LVL214:
 1783              	.L133:
1067:rtos/uC-LIB/lib_mem.c ****         p_seg_info->TotalSize     = total_size;
 1784              		.loc 1 1067 5 is_stmt 1 view .LVU585
1067:rtos/uC-LIB/lib_mem.c ****         p_seg_info->TotalSize     = total_size;
 1785              		.loc 1 1067 8 is_stmt 0 view .LVU586
 1786 0040 25B1     		cbz	r5, .L134
1068:rtos/uC-LIB/lib_mem.c ****         p_seg_info->UsedSize      = used_size;
 1787              		.loc 1 1068 9 is_stmt 1 view .LVU587
1068:rtos/uC-LIB/lib_mem.c ****         p_seg_info->UsedSize      = used_size;
 1788              		.loc 1 1068 35 is_stmt 0 view .LVU588
 1789 0042 6B60     		str	r3, [r5, #4]
1069:rtos/uC-LIB/lib_mem.c ****         p_seg_info->AddrBase      = p_seg->AddrBase;
 1790              		.loc 1 1069 9 is_stmt 1 view .LVU589
1069:rtos/uC-LIB/lib_mem.c ****         p_seg_info->AddrBase      = p_seg->AddrBase;
 1791              		.loc 1 1069 35 is_stmt 0 view .LVU590
 1792 0044 2A60     		str	r2, [r5]
1070:rtos/uC-LIB/lib_mem.c ****         p_seg_info->AddrNextAlloc = next_addr_align;
 1793              		.loc 1 1070 9 is_stmt 1 view .LVU591
1070:rtos/uC-LIB/lib_mem.c ****         p_seg_info->AddrNextAlloc = next_addr_align;
 1794              		.loc 1 1070 42 is_stmt 0 view .LVU592
 1795 0046 3368     		ldr	r3, [r6]
 1796              	.LVL215:
1070:rtos/uC-LIB/lib_mem.c ****         p_seg_info->AddrNextAlloc = next_addr_align;
 1797              		.loc 1 1070 35 view .LVU593
 1798 0048 AB60     		str	r3, [r5, #8]
1071:rtos/uC-LIB/lib_mem.c ****     }
 1799              		.loc 1 1071 9 is_stmt 1 view .LVU594
1071:rtos/uC-LIB/lib_mem.c ****     }
 1800              		.loc 1 1071 35 is_stmt 0 view .LVU595
 1801 004a EC60     		str	r4, [r5, #12]
 1802              	.LVL216:
 1803              	.L134:
1074:rtos/uC-LIB/lib_mem.c **** 
 1804              		.loc 1 1074 4 is_stmt 1 view .LVU596
1074:rtos/uC-LIB/lib_mem.c **** 
 1805              		.loc 1 1074 11 is_stmt 0 view .LVU597
 1806 004c 42F21073 		movw	r3, #10000
 1807 0050 3B80     		strh	r3, [r7]	@ movhi
1076:rtos/uC-LIB/lib_mem.c **** }
ARM GAS  /tmp/cc3qzkyx.s 			page 90


 1808              		.loc 1 1076 5 is_stmt 1 view .LVU598
1077:rtos/uC-LIB/lib_mem.c **** 
 1809              		.loc 1 1077 1 is_stmt 0 view .LVU599
 1810 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1811              	.LVL217:
 1812              	.L138:
1046:rtos/uC-LIB/lib_mem.c **** #else
 1813              		.loc 1 1046 15 view .LVU600
 1814 0056 024E     		ldr	r6, .L139
 1815 0058 D9E7     		b	.L131
 1816              	.LVL218:
 1817              	.L136:
1061:rtos/uC-LIB/lib_mem.c ****         rem_size        = 0u;
 1818              		.loc 1 1061 25 view .LVU601
 1819 005a 0024     		movs	r4, #0
 1820              	.LVL219:
1062:rtos/uC-LIB/lib_mem.c ****     } else {
 1821              		.loc 1 1062 25 view .LVU602
 1822 005c 2046     		mov	r0, r4
 1823 005e EFE7     		b	.L133
 1824              	.L140:
 1825              		.align	2
 1826              	.L139:
 1827 0060 00000000 		.word	Mem_SegHeap
 1828              		.cfi_endproc
 1829              	.LFE10:
 1831              		.section	.text.Mem_HeapGetSizeRem,"ax",%progbits
 1832              		.align	1
 1833              		.global	Mem_HeapGetSizeRem
 1834              		.syntax unified
 1835              		.thumb
 1836              		.thumb_func
 1837              		.fpu fpv4-sp-d16
 1839              	Mem_HeapGetSizeRem:
 1840              	.LVL220:
 1841              	.LFB7:
 825:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  rem_size;
 1842              		.loc 1 825 1 is_stmt 1 view -0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 0
 1845              		@ frame_needed = 0, uses_anonymous_args = 0
 825:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  rem_size;
 1846              		.loc 1 825 1 is_stmt 0 view .LVU604
 1847 0000 10B5     		push	{r4, lr}
 1848              	.LCFI36:
 1849              		.cfi_def_cfa_offset 8
 1850              		.cfi_offset 4, -8
 1851              		.cfi_offset 14, -4
 1852 0002 0C46     		mov	r4, r1
 826:rtos/uC-LIB/lib_mem.c **** 
 1853              		.loc 1 826 5 is_stmt 1 view .LVU605
 829:rtos/uC-LIB/lib_mem.c ****                                   align,
 1854              		.loc 1 829 5 view .LVU606
 829:rtos/uC-LIB/lib_mem.c ****                                   align,
 1855              		.loc 1 829 16 is_stmt 0 view .LVU607
 1856 0004 0B46     		mov	r3, r1
 1857 0006 0022     		movs	r2, #0
ARM GAS  /tmp/cc3qzkyx.s 			page 91


 1858 0008 0146     		mov	r1, r0
 1859              	.LVL221:
 829:rtos/uC-LIB/lib_mem.c ****                                   align,
 1860              		.loc 1 829 16 view .LVU608
 1861 000a 0548     		ldr	r0, .L145
 1862              	.LVL222:
 829:rtos/uC-LIB/lib_mem.c ****                                   align,
 1863              		.loc 1 829 16 view .LVU609
 1864 000c FFF7FEFF 		bl	Mem_SegRemSizeGet
 1865              	.LVL223:
 833:rtos/uC-LIB/lib_mem.c ****         return (0u);
 1866              		.loc 1 833 5 is_stmt 1 view .LVU610
 833:rtos/uC-LIB/lib_mem.c ****         return (0u);
 1867              		.loc 1 833 9 is_stmt 0 view .LVU611
 1868 0010 2288     		ldrh	r2, [r4]
 833:rtos/uC-LIB/lib_mem.c ****         return (0u);
 1869              		.loc 1 833 8 view .LVU612
 1870 0012 42F21073 		movw	r3, #10000
 1871 0016 9A42     		cmp	r2, r3
 1872 0018 00D0     		beq	.L141
 834:rtos/uC-LIB/lib_mem.c ****     }
 1873              		.loc 1 834 16 view .LVU613
 1874 001a 0020     		movs	r0, #0
 1875              	.LVL224:
 1876              	.L141:
 838:rtos/uC-LIB/lib_mem.c **** #endif
 1877              		.loc 1 838 1 view .LVU614
 1878 001c 10BD     		pop	{r4, pc}
 1879              	.LVL225:
 1880              	.L146:
 838:rtos/uC-LIB/lib_mem.c **** #endif
 1881              		.loc 1 838 1 view .LVU615
 1882 001e 00BF     		.align	2
 1883              	.L145:
 1884 0020 00000000 		.word	Mem_SegHeap
 1885              		.cfi_endproc
 1886              	.LFE7:
 1888              		.section	.text.Mem_SegAlloc,"ax",%progbits
 1889              		.align	1
 1890              		.global	Mem_SegAlloc
 1891              		.syntax unified
 1892              		.thumb
 1893              		.thumb_func
 1894              		.fpu fpv4-sp-d16
 1896              	Mem_SegAlloc:
 1897              	.LVL226:
 1898              	.LFB11:
1120:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
 1899              		.loc 1 1120 1 is_stmt 1 view -0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 0
 1902              		@ frame_needed = 0, uses_anonymous_args = 0
1120:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
 1903              		.loc 1 1120 1 is_stmt 0 view .LVU617
 1904 0000 10B5     		push	{r4, lr}
 1905              	.LCFI37:
 1906              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc3qzkyx.s 			page 92


 1907              		.cfi_offset 4, -8
 1908              		.cfi_offset 14, -4
 1909 0002 84B0     		sub	sp, sp, #16
 1910              	.LCFI38:
 1911              		.cfi_def_cfa_offset 24
1121:rtos/uC-LIB/lib_mem.c **** 
 1912              		.loc 1 1121 5 is_stmt 1 view .LVU618
1124:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1913              		.loc 1 1124 5 view .LVU619
1124:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1914              		.loc 1 1124 8 is_stmt 0 view .LVU620
 1915 0004 0C46     		mov	r4, r1
 1916 0006 51B1     		cbz	r1, .L151
 1917              	.L148:
 1918              	.LVL227:
1133:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
 1919              		.loc 1 1133 5 is_stmt 1 view .LVU621
1133:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
 1920              		.loc 1 1133 13 is_stmt 0 view .LVU622
 1921 0008 0293     		str	r3, [sp, #8]
 1922 000a 0023     		movs	r3, #0
 1923              	.LVL228:
1133:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
 1924              		.loc 1 1133 13 view .LVU623
 1925 000c 0193     		str	r3, [sp, #4]
 1926 000e 0123     		movs	r3, #1
 1927 0010 0093     		str	r3, [sp]
 1928 0012 0423     		movs	r3, #4
 1929 0014 2146     		mov	r1, r4
 1930 0016 FFF7FEFF 		bl	Mem_SegAllocInternal
 1931              	.LVL229:
1141:rtos/uC-LIB/lib_mem.c **** }
 1932              		.loc 1 1141 5 is_stmt 1 view .LVU624
1142:rtos/uC-LIB/lib_mem.c **** 
 1933              		.loc 1 1142 1 is_stmt 0 view .LVU625
 1934 001a 04B0     		add	sp, sp, #16
 1935              	.LCFI39:
 1936              		.cfi_remember_state
 1937              		.cfi_def_cfa_offset 8
 1938              		@ sp needed
 1939 001c 10BD     		pop	{r4, pc}
 1940              	.LVL230:
 1941              	.L151:
 1942              	.LCFI40:
 1943              		.cfi_restore_state
1126:rtos/uC-LIB/lib_mem.c **** #else
 1944              		.loc 1 1126 15 view .LVU626
 1945 001e 014C     		ldr	r4, .L152
 1946 0020 F2E7     		b	.L148
 1947              	.L153:
 1948 0022 00BF     		.align	2
 1949              	.L152:
 1950 0024 00000000 		.word	Mem_SegHeap
 1951              		.cfi_endproc
 1952              	.LFE11:
 1954              		.section	.text.Mem_SegAllocExt,"ax",%progbits
 1955              		.align	1
ARM GAS  /tmp/cc3qzkyx.s 			page 93


 1956              		.global	Mem_SegAllocExt
 1957              		.syntax unified
 1958              		.thumb
 1959              		.thumb_func
 1960              		.fpu fpv4-sp-d16
 1962              	Mem_SegAllocExt:
 1963              	.LVL231:
 1964              	.LFB12:
1189:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
 1965              		.loc 1 1189 1 is_stmt 1 view -0
 1966              		.cfi_startproc
 1967              		@ args = 8, pretend = 0, frame = 0
 1968              		@ frame_needed = 0, uses_anonymous_args = 0
1189:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
 1969              		.loc 1 1189 1 is_stmt 0 view .LVU628
 1970 0000 10B5     		push	{r4, lr}
 1971              	.LCFI41:
 1972              		.cfi_def_cfa_offset 8
 1973              		.cfi_offset 4, -8
 1974              		.cfi_offset 14, -4
 1975 0002 84B0     		sub	sp, sp, #16
 1976              	.LCFI42:
 1977              		.cfi_def_cfa_offset 24
1190:rtos/uC-LIB/lib_mem.c **** 
 1978              		.loc 1 1190 5 is_stmt 1 view .LVU629
1193:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1979              		.loc 1 1193 5 view .LVU630
1193:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 1980              		.loc 1 1193 8 is_stmt 0 view .LVU631
 1981 0004 0C46     		mov	r4, r1
 1982 0006 51B1     		cbz	r1, .L158
 1983              	.L155:
 1984              	.LVL232:
1202:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
 1985              		.loc 1 1202 5 is_stmt 1 view .LVU632
1202:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
 1986              		.loc 1 1202 13 is_stmt 0 view .LVU633
 1987 0008 0799     		ldr	r1, [sp, #28]
 1988 000a 0291     		str	r1, [sp, #8]
 1989 000c 0699     		ldr	r1, [sp, #24]
 1990 000e 0191     		str	r1, [sp, #4]
 1991 0010 0121     		movs	r1, #1
 1992 0012 0091     		str	r1, [sp]
 1993 0014 2146     		mov	r1, r4
 1994 0016 FFF7FEFF 		bl	Mem_SegAllocInternal
 1995              	.LVL233:
1210:rtos/uC-LIB/lib_mem.c **** }
 1996              		.loc 1 1210 5 is_stmt 1 view .LVU634
1211:rtos/uC-LIB/lib_mem.c **** 
 1997              		.loc 1 1211 1 is_stmt 0 view .LVU635
 1998 001a 04B0     		add	sp, sp, #16
 1999              	.LCFI43:
 2000              		.cfi_remember_state
 2001              		.cfi_def_cfa_offset 8
 2002              		@ sp needed
 2003 001c 10BD     		pop	{r4, pc}
 2004              	.LVL234:
ARM GAS  /tmp/cc3qzkyx.s 			page 94


 2005              	.L158:
 2006              	.LCFI44:
 2007              		.cfi_restore_state
1195:rtos/uC-LIB/lib_mem.c **** #else
 2008              		.loc 1 1195 15 view .LVU636
 2009 001e 014C     		ldr	r4, .L159
 2010 0020 F2E7     		b	.L155
 2011              	.L160:
 2012 0022 00BF     		.align	2
 2013              	.L159:
 2014 0024 00000000 		.word	Mem_SegHeap
 2015              		.cfi_endproc
 2016              	.LFE12:
 2018              		.section	.text.Mem_SegAllocHW,"ax",%progbits
 2019              		.align	1
 2020              		.global	Mem_SegAllocHW
 2021              		.syntax unified
 2022              		.thumb
 2023              		.thumb_func
 2024              		.fpu fpv4-sp-d16
 2026              	Mem_SegAllocHW:
 2027              	.LVL235:
 2028              	.LFB13:
1259:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
 2029              		.loc 1 1259 1 is_stmt 1 view -0
 2030              		.cfi_startproc
 2031              		@ args = 8, pretend = 0, frame = 0
 2032              		@ frame_needed = 0, uses_anonymous_args = 0
1259:rtos/uC-LIB/lib_mem.c ****     void  *p_blk;
 2033              		.loc 1 1259 1 is_stmt 0 view .LVU638
 2034 0000 10B5     		push	{r4, lr}
 2035              	.LCFI45:
 2036              		.cfi_def_cfa_offset 8
 2037              		.cfi_offset 4, -8
 2038              		.cfi_offset 14, -4
 2039 0002 84B0     		sub	sp, sp, #16
 2040              	.LCFI46:
 2041              		.cfi_def_cfa_offset 24
1260:rtos/uC-LIB/lib_mem.c **** 
 2042              		.loc 1 1260 5 is_stmt 1 view .LVU639
1263:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 2043              		.loc 1 1263 5 view .LVU640
1263:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 2044              		.loc 1 1263 8 is_stmt 0 view .LVU641
 2045 0004 49B1     		cbz	r1, .L165
 2046              	.LVL236:
 2047              	.L162:
1272:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
 2048              		.loc 1 1272 5 is_stmt 1 view .LVU642
1272:rtos/uC-LIB/lib_mem.c ****                                  p_seg,
 2049              		.loc 1 1272 13 is_stmt 0 view .LVU643
 2050 0006 079C     		ldr	r4, [sp, #28]
 2051 0008 0294     		str	r4, [sp, #8]
 2052 000a 069C     		ldr	r4, [sp, #24]
 2053 000c 0194     		str	r4, [sp, #4]
 2054 000e 0C69     		ldr	r4, [r1, #16]
 2055 0010 0094     		str	r4, [sp]
ARM GAS  /tmp/cc3qzkyx.s 			page 95


 2056 0012 FFF7FEFF 		bl	Mem_SegAllocInternal
 2057              	.LVL237:
1280:rtos/uC-LIB/lib_mem.c **** }
 2058              		.loc 1 1280 5 is_stmt 1 view .LVU644
1281:rtos/uC-LIB/lib_mem.c **** 
 2059              		.loc 1 1281 1 is_stmt 0 view .LVU645
 2060 0016 04B0     		add	sp, sp, #16
 2061              	.LCFI47:
 2062              		.cfi_remember_state
 2063              		.cfi_def_cfa_offset 8
 2064              		@ sp needed
 2065 0018 10BD     		pop	{r4, pc}
 2066              	.LVL238:
 2067              	.L165:
 2068              	.LCFI48:
 2069              		.cfi_restore_state
1265:rtos/uC-LIB/lib_mem.c **** #else
 2070              		.loc 1 1265 15 view .LVU646
 2071 001a 0149     		ldr	r1, .L166
 2072              	.LVL239:
1265:rtos/uC-LIB/lib_mem.c **** #else
 2073              		.loc 1 1265 15 view .LVU647
 2074 001c F3E7     		b	.L162
 2075              	.L167:
 2076 001e 00BF     		.align	2
 2077              	.L166:
 2078 0020 00000000 		.word	Mem_SegHeap
 2079              		.cfi_endproc
 2080              	.LFE13:
 2082              		.section	.text.Mem_PoolClr,"ax",%progbits
 2083              		.align	1
 2084              		.global	Mem_PoolClr
 2085              		.syntax unified
 2086              		.thumb
 2087              		.thumb_func
 2088              		.fpu fpv4-sp-d16
 2090              	Mem_PoolClr:
 2091              	.LVL240:
 2092              	.LFB15:
1546:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE RTN ERR 
 2093              		.loc 1 1546 1 is_stmt 1 view -0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 0
 2096              		@ frame_needed = 0, uses_anonymous_args = 0
 2097              		@ link register save eliminated.
1559:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrEnd   = DEF_NULL;
 2098              		.loc 1 1559 5 view .LVU649
1559:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrEnd   = DEF_NULL;
 2099              		.loc 1 1559 27 is_stmt 0 view .LVU650
 2100 0000 0023     		movs	r3, #0
 2101 0002 0360     		str	r3, [r0]
1560:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkSize       = 0u;
 2102              		.loc 1 1560 5 is_stmt 1 view .LVU651
1560:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkSize       = 0u;
 2103              		.loc 1 1560 27 is_stmt 0 view .LVU652
 2104 0004 4360     		str	r3, [r0, #4]
1561:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkNbr        = 0u;
ARM GAS  /tmp/cc3qzkyx.s 			page 96


 2105              		.loc 1 1561 5 is_stmt 1 view .LVU653
1561:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkNbr        = 0u;
 2106              		.loc 1 1561 27 is_stmt 0 view .LVU654
 2107 0006 C360     		str	r3, [r0, #12]
1562:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTbl    = DEF_NULL;
 2108              		.loc 1 1562 5 is_stmt 1 view .LVU655
1562:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTbl    = DEF_NULL;
 2109              		.loc 1 1562 27 is_stmt 0 view .LVU656
 2110 0008 8360     		str	r3, [r0, #8]
1563:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx  = 0u;
 2111              		.loc 1 1563 5 is_stmt 1 view .LVU657
1563:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx  = 0u;
 2112              		.loc 1 1563 27 is_stmt 0 view .LVU658
 2113 000a 0361     		str	r3, [r0, #16]
1564:rtos/uC-LIB/lib_mem.c **** 
 2114              		.loc 1 1564 5 is_stmt 1 view .LVU659
1564:rtos/uC-LIB/lib_mem.c **** 
 2115              		.loc 1 1564 27 is_stmt 0 view .LVU660
 2116 000c 4361     		str	r3, [r0, #20]
1566:rtos/uC-LIB/lib_mem.c **** }
 2117              		.loc 1 1566 4 is_stmt 1 view .LVU661
1566:rtos/uC-LIB/lib_mem.c **** }
 2118              		.loc 1 1566 11 is_stmt 0 view .LVU662
 2119 000e 42F21073 		movw	r3, #10000
 2120 0012 0B80     		strh	r3, [r1]	@ movhi
1567:rtos/uC-LIB/lib_mem.c **** #endif
 2121              		.loc 1 1567 1 view .LVU663
 2122 0014 7047     		bx	lr
 2123              		.cfi_endproc
 2124              	.LFE15:
 2126              		.section	.rodata.Mem_PoolCreate.str1.4,"aMS",%progbits,1
 2127              		.align	2
 2128              	.LC1:
 2129 0000 556E6E61 		.ascii	"Unnamed static pool\000"
 2129      6D656420 
 2129      73746174 
 2129      69632070 
 2129      6F6F6C00 
 2130              		.align	2
 2131              	.LC2:
 2132 0014 556E6E61 		.ascii	"Unnamed static pool free blk tbl\000"
 2132      6D656420 
 2132      73746174 
 2132      69632070 
 2132      6F6F6C20 
 2133              		.section	.text.Mem_PoolCreate,"ax",%progbits
 2134              		.align	1
 2135              		.global	Mem_PoolCreate
 2136              		.syntax unified
 2137              		.thumb
 2138              		.thumb_func
 2139              		.fpu fpv4-sp-d16
 2141              	Mem_PoolCreate:
 2142              	.LVL241:
 2143              	.LFB14:
1361:rtos/uC-LIB/lib_mem.c ****     MEM_SEG           *p_seg;
 2144              		.loc 1 1361 1 is_stmt 1 view -0
ARM GAS  /tmp/cc3qzkyx.s 			page 97


 2145              		.cfi_startproc
 2146              		@ args = 16, pretend = 0, frame = 0
 2147              		@ frame_needed = 0, uses_anonymous_args = 0
1361:rtos/uC-LIB/lib_mem.c ****     MEM_SEG           *p_seg;
 2148              		.loc 1 1361 1 is_stmt 0 view .LVU665
 2149 0000 2DE9F04B 		push	{r4, r5, r6, r7, r8, r9, fp, lr}
 2150              	.LCFI49:
 2151              		.cfi_def_cfa_offset 32
 2152              		.cfi_offset 4, -32
 2153              		.cfi_offset 5, -28
 2154              		.cfi_offset 6, -24
 2155              		.cfi_offset 7, -20
 2156              		.cfi_offset 8, -16
 2157              		.cfi_offset 9, -12
 2158              		.cfi_offset 11, -8
 2159              		.cfi_offset 14, -4
 2160 0004 84B0     		sub	sp, sp, #16
 2161              	.LCFI50:
 2162              		.cfi_def_cfa_offset 48
 2163 0006 0646     		mov	r6, r0
 2164 0008 8846     		mov	r8, r1
 2165 000a 9146     		mov	r9, r2
 2166 000c 1D46     		mov	r5, r3
 2167 000e 0F9C     		ldr	r4, [sp, #60]
1362:rtos/uC-LIB/lib_mem.c ****     void              *p_pool_mem;
 2168              		.loc 1 1362 5 is_stmt 1 view .LVU666
1363:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T         pool_size;
 2169              		.loc 1 1363 5 view .LVU667
1364:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T         blk_size_align;
 2170              		.loc 1 1364 5 view .LVU668
1365:rtos/uC-LIB/lib_mem.c ****     CPU_ADDR           pool_addr_end;
 2171              		.loc 1 1365 5 view .LVU669
1366:rtos/uC-LIB/lib_mem.c ****     MEM_POOL_BLK_QTY   blk_ix;
 2172              		.loc 1 1366 5 view .LVU670
1367:rtos/uC-LIB/lib_mem.c ****     CPU_INT08U        *p_blk;
 2173              		.loc 1 1367 5 view .LVU671
1368:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 2174              		.loc 1 1368 5 view .LVU672
1369:rtos/uC-LIB/lib_mem.c **** 
 2175              		.loc 1 1369 5 view .LVU673
 2176              	.LVL242:
1406:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 2177              		.loc 1 1406 5 view .LVU674
 2178 0010 2146     		mov	r1, r4
 2179              	.LVL243:
1406:rtos/uC-LIB/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 2180              		.loc 1 1406 5 is_stmt 0 view .LVU675
 2181 0012 FFF7FEFF 		bl	Mem_PoolClr
 2182              	.LVL244:
1407:rtos/uC-LIB/lib_mem.c ****          return;
 2183              		.loc 1 1407 5 is_stmt 1 view .LVU676
1407:rtos/uC-LIB/lib_mem.c ****          return;
 2184              		.loc 1 1407 9 is_stmt 0 view .LVU677
 2185 0016 2288     		ldrh	r2, [r4]
1407:rtos/uC-LIB/lib_mem.c ****          return;
 2186              		.loc 1 1407 8 view .LVU678
 2187 0018 42F21073 		movw	r3, #10000
ARM GAS  /tmp/cc3qzkyx.s 			page 98


 2188 001c 9A42     		cmp	r2, r3
 2189 001e 58D1     		bne	.L169
1412:rtos/uC-LIB/lib_mem.c ****         p_seg = &Mem_SegHeap;
 2190              		.loc 1 1412 5 is_stmt 1 view .LVU679
1412:rtos/uC-LIB/lib_mem.c ****         p_seg = &Mem_SegHeap;
 2191              		.loc 1 1412 8 is_stmt 0 view .LVU680
 2192 0020 B8F1000F 		cmp	r8, #0
 2193 0024 34D0     		beq	.L179
1415:rtos/uC-LIB/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
 2194              		.loc 1 1415 9 is_stmt 1 view .LVU681
1415:rtos/uC-LIB/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
 2195              		.loc 1 1415 9 view .LVU682
1415:rtos/uC-LIB/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
 2196              		.loc 1 1415 9 view .LVU683
 2197 0026 4020     		movs	r0, #64
 2198 0028 FFF7FEFF 		bl	CPU_SR_Save
 2199              	.LVL245:
 2200 002c 8346     		mov	fp, r0
 2201              	.LVL246:
1415:rtos/uC-LIB/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
 2202              		.loc 1 1415 9 view .LVU684
1415:rtos/uC-LIB/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
 2203              		.loc 1 1415 9 view .LVU685
1416:rtos/uC-LIB/lib_mem.c ****                                                     mem_size,
 2204              		.loc 1 1416 9 view .LVU686
1416:rtos/uC-LIB/lib_mem.c ****                                                     mem_size,
 2205              		.loc 1 1416 17 is_stmt 0 view .LVU687
 2206 002e 2246     		mov	r2, r4
 2207 0030 4946     		mov	r1, r9
 2208 0032 4046     		mov	r0, r8
 2209              	.LVL247:
1416:rtos/uC-LIB/lib_mem.c ****                                                     mem_size,
 2210              		.loc 1 1416 17 view .LVU688
 2211 0034 FFF7FEFF 		bl	Mem_SegOverlapChkCritical
 2212              	.LVL248:
 2213 0038 0746     		mov	r7, r0
 2214              	.LVL249:
1419:rtos/uC-LIB/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_EXISTS:                /* Seg already exists.             
 2215              		.loc 1 1419 9 is_stmt 1 view .LVU689
1419:rtos/uC-LIB/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_EXISTS:                /* Seg already exists.             
 2216              		.loc 1 1419 17 is_stmt 0 view .LVU690
 2217 003a 2388     		ldrh	r3, [r4]
1419:rtos/uC-LIB/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_EXISTS:                /* Seg already exists.             
 2218              		.loc 1 1419 9 view .LVU691
 2219 003c 42F21072 		movw	r2, #10000
 2220 0040 9342     		cmp	r3, r2
 2221 0042 06D0     		beq	.L172
 2222 0044 B3F51E5F 		cmp	r3, #10112
 2223 0048 1ED0     		beq	.L173
1456:rtos/uC-LIB/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
 2224              		.loc 1 1456 18 is_stmt 1 view .LVU692
1456:rtos/uC-LIB/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
 2225              		.loc 1 1456 18 view .LVU693
1456:rtos/uC-LIB/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
 2226              		.loc 1 1456 18 view .LVU694
 2227 004a 5846     		mov	r0, fp
 2228              	.LVL250:
ARM GAS  /tmp/cc3qzkyx.s 			page 99


1456:rtos/uC-LIB/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
 2229              		.loc 1 1456 18 is_stmt 0 view .LVU695
 2230 004c FFF7FEFF 		bl	CPU_SR_Restore
 2231              	.LVL251:
1456:rtos/uC-LIB/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
 2232              		.loc 1 1456 18 is_stmt 1 view .LVU696
1456:rtos/uC-LIB/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
 2233              		.loc 1 1456 18 view .LVU697
1457:rtos/uC-LIB/lib_mem.c ****         }
 2234              		.loc 1 1457 18 view .LVU698
 2235 0050 3FE0     		b	.L169
 2236              	.LVL252:
 2237              	.L172:
1424:rtos/uC-LIB/lib_mem.c ****                                                              sizeof(MEM_SEG),
 2238              		.loc 1 1424 18 view .LVU699
1424:rtos/uC-LIB/lib_mem.c ****                                                              sizeof(MEM_SEG),
 2239              		.loc 1 1424 37 is_stmt 0 view .LVU700
 2240 0052 0194     		str	r4, [sp, #4]
 2241 0054 0E9B     		ldr	r3, [sp, #56]
 2242 0056 0093     		str	r3, [sp]
 2243 0058 0123     		movs	r3, #1
 2244 005a 0422     		movs	r2, #4
 2245 005c 1421     		movs	r1, #20
 2246 005e 3148     		ldr	r0, .L184
 2247              	.LVL253:
1424:rtos/uC-LIB/lib_mem.c ****                                                              sizeof(MEM_SEG),
 2248              		.loc 1 1424 37 view .LVU701
 2249 0060 FFF7FEFF 		bl	Mem_SegAllocExtCritical
 2250              	.LVL254:
 2251 0064 0746     		mov	r7, r0
 2252              	.LVL255:
1430:rtos/uC-LIB/lib_mem.c ****                      CPU_CRITICAL_EXIT();
 2253              		.loc 1 1430 18 is_stmt 1 view .LVU702
1430:rtos/uC-LIB/lib_mem.c ****                      CPU_CRITICAL_EXIT();
 2254              		.loc 1 1430 22 is_stmt 0 view .LVU703
 2255 0066 2288     		ldrh	r2, [r4]
1430:rtos/uC-LIB/lib_mem.c ****                      CPU_CRITICAL_EXIT();
 2256              		.loc 1 1430 21 view .LVU704
 2257 0068 42F21073 		movw	r3, #10000
 2258 006c 9A42     		cmp	r2, r3
 2259 006e 03D0     		beq	.L175
1431:rtos/uC-LIB/lib_mem.c ****                      return;
 2260              		.loc 1 1431 22 is_stmt 1 view .LVU705
1431:rtos/uC-LIB/lib_mem.c ****                      return;
 2261              		.loc 1 1431 22 view .LVU706
1431:rtos/uC-LIB/lib_mem.c ****                      return;
 2262              		.loc 1 1431 22 view .LVU707
 2263 0070 5846     		mov	r0, fp
 2264              	.LVL256:
1431:rtos/uC-LIB/lib_mem.c ****                      return;
 2265              		.loc 1 1431 22 is_stmt 0 view .LVU708
 2266 0072 FFF7FEFF 		bl	CPU_SR_Restore
 2267              	.LVL257:
1431:rtos/uC-LIB/lib_mem.c ****                      return;
 2268              		.loc 1 1431 22 is_stmt 1 view .LVU709
1431:rtos/uC-LIB/lib_mem.c ****                      return;
 2269              		.loc 1 1431 22 view .LVU710
ARM GAS  /tmp/cc3qzkyx.s 			page 100


1432:rtos/uC-LIB/lib_mem.c ****                  }
 2270              		.loc 1 1432 22 view .LVU711
 2271 0076 2CE0     		b	.L169
 2272              	.LVL258:
 2273              	.L175:
1446:rtos/uC-LIB/lib_mem.c ****                                                  p_seg,
 2274              		.loc 1 1446 18 view .LVU712
 2275 0078 CDF80090 		str	r9, [sp]
 2276 007c 0123     		movs	r3, #1
 2277 007e 4246     		mov	r2, r8
 2278 0080 0146     		mov	r1, r0
 2279 0082 0020     		movs	r0, #0
 2280              	.LVL259:
1446:rtos/uC-LIB/lib_mem.c ****                                                  p_seg,
 2281              		.loc 1 1446 18 is_stmt 0 view .LVU713
 2282 0084 FFF7FEFF 		bl	Mem_SegCreateCritical
 2283              	.LVL260:
1451:rtos/uC-LIB/lib_mem.c **** 
 2284              		.loc 1 1451 18 is_stmt 1 view .LVU714
 2285              	.L173:
1460:rtos/uC-LIB/lib_mem.c ****     }
 2286              		.loc 1 1460 9 view .LVU715
1460:rtos/uC-LIB/lib_mem.c ****     }
 2287              		.loc 1 1460 9 view .LVU716
1460:rtos/uC-LIB/lib_mem.c ****     }
 2288              		.loc 1 1460 9 view .LVU717
 2289 0088 5846     		mov	r0, fp
 2290 008a FFF7FEFF 		bl	CPU_SR_Restore
 2291              	.LVL261:
 2292 008e 00E0     		b	.L171
 2293              	.LVL262:
 2294              	.L179:
1413:rtos/uC-LIB/lib_mem.c ****     } else {                                                    /* Use other seg.                  
 2295              		.loc 1 1413 15 is_stmt 0 view .LVU718
 2296 0090 244F     		ldr	r7, .L184
 2297              	.LVL263:
 2298              	.L171:
1460:rtos/uC-LIB/lib_mem.c ****     }
 2299              		.loc 1 1460 9 is_stmt 1 discriminator 1 view .LVU719
1460:rtos/uC-LIB/lib_mem.c ****     }
 2300              		.loc 1 1460 9 discriminator 1 view .LVU720
1466:rtos/uC-LIB/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
 2301              		.loc 1 1466 5 discriminator 1 view .LVU721
1466:rtos/uC-LIB/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
 2302              		.loc 1 1466 23 is_stmt 0 discriminator 1 view .LVU722
 2303 0092 0D9B     		ldr	r3, [sp, #52]
 2304 0094 C3F10008 		rsb	r8, r3, #0
 2305              	.LVL264:
1466:rtos/uC-LIB/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
 2306              		.loc 1 1466 23 discriminator 1 view .LVU723
 2307 0098 0C9B     		ldr	r3, [sp, #48]
 2308 009a 08EA0308 		and	r8, r8, r3
 2309 009e 0D9B     		ldr	r3, [sp, #52]
 2310 00a0 013B     		subs	r3, r3, #1
 2311 00a2 0C9A     		ldr	r2, [sp, #48]
 2312 00a4 1340     		ands	r3, r3, r2
 2313 00a6 00D0     		beq	.L176
ARM GAS  /tmp/cc3qzkyx.s 			page 101


1466:rtos/uC-LIB/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
 2314              		.loc 1 1466 23 view .LVU724
 2315 00a8 0D9B     		ldr	r3, [sp, #52]
 2316              	.L176:
1466:rtos/uC-LIB/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
 2317              		.loc 1 1466 20 discriminator 4 view .LVU725
 2318 00aa 9844     		add	r8, r8, r3
 2319              	.LVL265:
1467:rtos/uC-LIB/lib_mem.c **** 
 2320              		.loc 1 1467 5 is_stmt 1 discriminator 4 view .LVU726
1467:rtos/uC-LIB/lib_mem.c **** 
 2321              		.loc 1 1467 20 is_stmt 0 discriminator 4 view .LVU727
 2322 00ac 05FB08F9 		mul	r9, r5, r8
 2323              	.LVL266:
1470:rtos/uC-LIB/lib_mem.c ****                                                p_seg,
 2324              		.loc 1 1470 5 is_stmt 1 discriminator 4 view .LVU728
1470:rtos/uC-LIB/lib_mem.c ****                                                p_seg,
 2325              		.loc 1 1470 18 is_stmt 0 discriminator 4 view .LVU729
 2326 00b0 0294     		str	r4, [sp, #8]
 2327 00b2 0E9B     		ldr	r3, [sp, #56]
 2328 00b4 0193     		str	r3, [sp, #4]
 2329 00b6 0123     		movs	r3, #1
 2330 00b8 0093     		str	r3, [sp]
 2331 00ba 0D9B     		ldr	r3, [sp, #52]
 2332 00bc 4A46     		mov	r2, r9
 2333 00be 3946     		mov	r1, r7
 2334 00c0 1948     		ldr	r0, .L184+4
 2335 00c2 FFF7FEFF 		bl	Mem_SegAllocInternal
 2336              	.LVL267:
 2337 00c6 0746     		mov	r7, r0
 2338              	.LVL268:
1477:rtos/uC-LIB/lib_mem.c ****         return;
 2339              		.loc 1 1477 5 is_stmt 1 discriminator 4 view .LVU730
1477:rtos/uC-LIB/lib_mem.c ****         return;
 2340              		.loc 1 1477 9 is_stmt 0 discriminator 4 view .LVU731
 2341 00c8 2288     		ldrh	r2, [r4]
1477:rtos/uC-LIB/lib_mem.c ****         return;
 2342              		.loc 1 1477 8 discriminator 4 view .LVU732
 2343 00ca 42F21073 		movw	r3, #10000
 2344 00ce 9A42     		cmp	r2, r3
 2345 00d0 02D0     		beq	.L182
 2346              	.LVL269:
 2347              	.L169:
1508:rtos/uC-LIB/lib_mem.c **** #endif
 2348              		.loc 1 1508 1 view .LVU733
 2349 00d2 04B0     		add	sp, sp, #16
 2350              	.LCFI51:
 2351              		.cfi_remember_state
 2352              		.cfi_def_cfa_offset 32
 2353              		@ sp needed
 2354 00d4 BDE8F08B 		pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 2355              	.LVL270:
 2356              	.L182:
 2357              	.LCFI52:
 2358              		.cfi_restore_state
1482:rtos/uC-LIB/lib_mem.c ****                                                        &Mem_SegHeap,
 2359              		.loc 1 1482 5 is_stmt 1 view .LVU734
ARM GAS  /tmp/cc3qzkyx.s 			page 102


1482:rtos/uC-LIB/lib_mem.c ****                                                        &Mem_SegHeap,
 2360              		.loc 1 1482 35 is_stmt 0 view .LVU735
 2361 00d8 0294     		str	r4, [sp, #8]
 2362 00da 0E9B     		ldr	r3, [sp, #56]
 2363 00dc 0193     		str	r3, [sp, #4]
 2364 00de 0123     		movs	r3, #1
 2365 00e0 0093     		str	r3, [sp]
 2366 00e2 0423     		movs	r3, #4
 2367 00e4 AA00     		lsls	r2, r5, #2
 2368 00e6 0F49     		ldr	r1, .L184
 2369 00e8 1048     		ldr	r0, .L184+8
 2370              	.LVL271:
1482:rtos/uC-LIB/lib_mem.c ****                                                        &Mem_SegHeap,
 2371              		.loc 1 1482 35 view .LVU736
 2372 00ea FFF7FEFF 		bl	Mem_SegAllocInternal
 2373              	.LVL272:
1482:rtos/uC-LIB/lib_mem.c ****                                                        &Mem_SegHeap,
 2374              		.loc 1 1482 24 view .LVU737
 2375 00ee 3061     		str	r0, [r6, #16]
1489:rtos/uC-LIB/lib_mem.c ****         return;
 2376              		.loc 1 1489 5 is_stmt 1 view .LVU738
1489:rtos/uC-LIB/lib_mem.c ****         return;
 2377              		.loc 1 1489 9 is_stmt 0 view .LVU739
 2378 00f0 2288     		ldrh	r2, [r4]
1489:rtos/uC-LIB/lib_mem.c ****         return;
 2379              		.loc 1 1489 8 view .LVU740
 2380 00f2 42F21073 		movw	r3, #10000
 2381 00f6 9A42     		cmp	r2, r3
 2382 00f8 EBD1     		bne	.L169
1494:rtos/uC-LIB/lib_mem.c ****     for (blk_ix = 0; blk_ix < blk_nbr; blk_ix++) {
 2383              		.loc 1 1494 11 view .LVU741
 2384 00fa 3A46     		mov	r2, r7
1495:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2385              		.loc 1 1495 17 view .LVU742
 2386 00fc 0023     		movs	r3, #0
 2387              	.L177:
 2388              	.LVL273:
1495:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2389              		.loc 1 1495 22 is_stmt 1 discriminator 1 view .LVU743
1495:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2390              		.loc 1 1495 5 is_stmt 0 discriminator 1 view .LVU744
 2391 00fe AB42     		cmp	r3, r5
 2392 0100 05D2     		bcs	.L183
1496:rtos/uC-LIB/lib_mem.c ****         p_blk                      += blk_size_align;
 2393              		.loc 1 1496 9 is_stmt 1 discriminator 3 view .LVU745
1496:rtos/uC-LIB/lib_mem.c ****         p_blk                      += blk_size_align;
 2394              		.loc 1 1496 15 is_stmt 0 discriminator 3 view .LVU746
 2395 0102 3169     		ldr	r1, [r6, #16]
1496:rtos/uC-LIB/lib_mem.c ****         p_blk                      += blk_size_align;
 2396              		.loc 1 1496 37 discriminator 3 view .LVU747
 2397 0104 41F82320 		str	r2, [r1, r3, lsl #2]
1497:rtos/uC-LIB/lib_mem.c ****     }
 2398              		.loc 1 1497 9 is_stmt 1 discriminator 3 view .LVU748
1497:rtos/uC-LIB/lib_mem.c ****     }
 2399              		.loc 1 1497 36 is_stmt 0 discriminator 3 view .LVU749
 2400 0108 4244     		add	r2, r2, r8
 2401              	.LVL274:
ARM GAS  /tmp/cc3qzkyx.s 			page 103


1495:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2402              		.loc 1 1495 40 is_stmt 1 discriminator 3 view .LVU750
1495:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2403              		.loc 1 1495 46 is_stmt 0 discriminator 3 view .LVU751
 2404 010a 0133     		adds	r3, r3, #1
 2405              	.LVL275:
1495:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 2406              		.loc 1 1495 46 discriminator 3 view .LVU752
 2407 010c F7E7     		b	.L177
 2408              	.L183:
1502:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrStart =  p_pool_mem;
 2409              		.loc 1 1502 5 is_stmt 1 view .LVU753
1502:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrStart =  p_pool_mem;
 2410              		.loc 1 1502 50 is_stmt 0 view .LVU754
 2411 010e B944     		add	r9, r9, r7
 2412              	.LVL276:
1502:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrStart =  p_pool_mem;
 2413              		.loc 1 1502 27 view .LVU755
 2414 0110 09F1FF33 		add	r3, r9, #-1
 2415              	.LVL277:
1503:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrEnd   = (void *)pool_addr_end;
 2416              		.loc 1 1503 5 is_stmt 1 view .LVU756
1503:rtos/uC-LIB/lib_mem.c ****     p_pool->PoolAddrEnd   = (void *)pool_addr_end;
 2417              		.loc 1 1503 27 is_stmt 0 view .LVU757
 2418 0114 3760     		str	r7, [r6]
1504:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkNbr        =  blk_nbr;
 2419              		.loc 1 1504 5 is_stmt 1 view .LVU758
1504:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkNbr        =  blk_nbr;
 2420              		.loc 1 1504 27 is_stmt 0 view .LVU759
 2421 0116 7360     		str	r3, [r6, #4]
1505:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkSize       =  blk_size_align;
 2422              		.loc 1 1505 5 is_stmt 1 view .LVU760
1505:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkSize       =  blk_size_align;
 2423              		.loc 1 1505 27 is_stmt 0 view .LVU761
 2424 0118 B560     		str	r5, [r6, #8]
1506:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx  =  blk_nbr;
 2425              		.loc 1 1506 5 is_stmt 1 view .LVU762
1506:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx  =  blk_nbr;
 2426              		.loc 1 1506 27 is_stmt 0 view .LVU763
 2427 011a C6F80C80 		str	r8, [r6, #12]
1507:rtos/uC-LIB/lib_mem.c **** }
 2428              		.loc 1 1507 5 is_stmt 1 view .LVU764
1507:rtos/uC-LIB/lib_mem.c **** }
 2429              		.loc 1 1507 27 is_stmt 0 view .LVU765
 2430 011e 7561     		str	r5, [r6, #20]
 2431 0120 D7E7     		b	.L169
 2432              	.L185:
 2433 0122 00BF     		.align	2
 2434              	.L184:
 2435 0124 00000000 		.word	Mem_SegHeap
 2436 0128 00000000 		.word	.LC1
 2437 012c 14000000 		.word	.LC2
 2438              		.cfi_endproc
 2439              	.LFE14:
 2441              		.section	.text.Mem_PoolBlkGet,"ax",%progbits
 2442              		.align	1
 2443              		.global	Mem_PoolBlkGet
ARM GAS  /tmp/cc3qzkyx.s 			page 104


 2444              		.syntax unified
 2445              		.thumb
 2446              		.thumb_func
 2447              		.fpu fpv4-sp-d16
 2449              	Mem_PoolBlkGet:
 2450              	.LVL278:
 2451              	.LFB16:
1603:rtos/uC-LIB/lib_mem.c ****     CPU_INT08U  *p_blk;
 2452              		.loc 1 1603 1 is_stmt 1 view -0
 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 0
 2455              		@ frame_needed = 0, uses_anonymous_args = 0
1603:rtos/uC-LIB/lib_mem.c ****     CPU_INT08U  *p_blk;
 2456              		.loc 1 1603 1 is_stmt 0 view .LVU767
 2457 0000 38B5     		push	{r3, r4, r5, lr}
 2458              	.LCFI53:
 2459              		.cfi_def_cfa_offset 16
 2460              		.cfi_offset 3, -16
 2461              		.cfi_offset 4, -12
 2462              		.cfi_offset 5, -8
 2463              		.cfi_offset 14, -4
 2464 0002 0446     		mov	r4, r0
 2465 0004 1546     		mov	r5, r2
1604:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 2466              		.loc 1 1604 5 is_stmt 1 view .LVU768
1605:rtos/uC-LIB/lib_mem.c **** 
 2467              		.loc 1 1605 5 view .LVU769
 2468              	.LVL279:
1628:rtos/uC-LIB/lib_mem.c **** #endif
 2469              		.loc 1 1628 5 view .LVU770
1633:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2470              		.loc 1 1633 5 view .LVU771
1634:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
 2471              		.loc 1 1634 5 view .LVU772
1634:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
 2472              		.loc 1 1634 5 view .LVU773
1634:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
 2473              		.loc 1 1634 5 view .LVU774
 2474 0006 4020     		movs	r0, #64
 2475              	.LVL280:
1634:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
 2476              		.loc 1 1634 5 is_stmt 0 view .LVU775
 2477 0008 FFF7FEFF 		bl	CPU_SR_Save
 2478              	.LVL281:
1634:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
 2479              		.loc 1 1634 5 is_stmt 1 view .LVU776
1634:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
 2480              		.loc 1 1634 5 view .LVU777
1635:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTblIx                     -=  1u;
 2481              		.loc 1 1635 5 view .LVU778
1635:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTblIx                     -=  1u;
 2482              		.loc 1 1635 15 is_stmt 0 view .LVU779
 2483 000c 6369     		ldr	r3, [r4, #20]
1635:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTblIx                     -=  1u;
 2484              		.loc 1 1635 8 view .LVU780
 2485 000e 7BB1     		cbz	r3, .L190
1636:rtos/uC-LIB/lib_mem.c ****         p_blk                                     = (CPU_INT08U *)p_pool->BlkFreeTbl[p_pool->BlkFre
ARM GAS  /tmp/cc3qzkyx.s 			page 105


 2486              		.loc 1 1636 9 is_stmt 1 view .LVU781
1636:rtos/uC-LIB/lib_mem.c ****         p_blk                                     = (CPU_INT08U *)p_pool->BlkFreeTbl[p_pool->BlkFre
 2487              		.loc 1 1636 50 is_stmt 0 view .LVU782
 2488 0010 013B     		subs	r3, r3, #1
 2489 0012 6361     		str	r3, [r4, #20]
1637:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  =  DEF_NULL;
 2490              		.loc 1 1637 9 is_stmt 1 view .LVU783
1637:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  =  DEF_NULL;
 2491              		.loc 1 1637 73 is_stmt 0 view .LVU784
 2492 0014 2269     		ldr	r2, [r4, #16]
1637:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  =  DEF_NULL;
 2493              		.loc 1 1637 51 view .LVU785
 2494 0016 52F82340 		ldr	r4, [r2, r3, lsl #2]
 2495              	.LVL282:
1638:rtos/uC-LIB/lib_mem.c ****     }
 2496              		.loc 1 1638 9 is_stmt 1 view .LVU786
1638:rtos/uC-LIB/lib_mem.c ****     }
 2497              		.loc 1 1638 51 is_stmt 0 view .LVU787
 2498 001a 0021     		movs	r1, #0
 2499 001c 42F82310 		str	r1, [r2, r3, lsl #2]
 2500              	.LVL283:
 2501              	.L187:
1640:rtos/uC-LIB/lib_mem.c **** 
 2502              		.loc 1 1640 5 is_stmt 1 view .LVU788
1640:rtos/uC-LIB/lib_mem.c **** 
 2503              		.loc 1 1640 5 view .LVU789
1640:rtos/uC-LIB/lib_mem.c **** 
 2504              		.loc 1 1640 5 view .LVU790
 2505 0020 FFF7FEFF 		bl	CPU_SR_Restore
 2506              	.LVL284:
1640:rtos/uC-LIB/lib_mem.c **** 
 2507              		.loc 1 1640 5 view .LVU791
1640:rtos/uC-LIB/lib_mem.c **** 
 2508              		.loc 1 1640 5 view .LVU792
1642:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_EMPTY;
 2509              		.loc 1 1642 5 view .LVU793
1642:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_EMPTY;
 2510              		.loc 1 1642 8 is_stmt 0 view .LVU794
 2511 0024 34B1     		cbz	r4, .L192
1645:rtos/uC-LIB/lib_mem.c ****     }
 2512              		.loc 1 1645 8 is_stmt 1 view .LVU795
1645:rtos/uC-LIB/lib_mem.c ****     }
 2513              		.loc 1 1645 15 is_stmt 0 view .LVU796
 2514 0026 42F21073 		movw	r3, #10000
 2515 002a 2B80     		strh	r3, [r5]	@ movhi
1648:rtos/uC-LIB/lib_mem.c **** }
 2516              		.loc 1 1648 5 is_stmt 1 view .LVU797
 2517              	.L186:
1649:rtos/uC-LIB/lib_mem.c **** #endif
 2518              		.loc 1 1649 1 is_stmt 0 view .LVU798
 2519 002c 2046     		mov	r0, r4
 2520 002e 38BD     		pop	{r3, r4, r5, pc}
 2521              	.LVL285:
 2522              	.L190:
1633:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2523              		.loc 1 1633 11 view .LVU799
 2524 0030 0024     		movs	r4, #0
ARM GAS  /tmp/cc3qzkyx.s 			page 106


 2525              	.LVL286:
1633:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2526              		.loc 1 1633 11 view .LVU800
 2527 0032 F5E7     		b	.L187
 2528              	.LVL287:
 2529              	.L192:
1643:rtos/uC-LIB/lib_mem.c ****     } else {
 2530              		.loc 1 1643 8 is_stmt 1 view .LVU801
1643:rtos/uC-LIB/lib_mem.c ****     } else {
 2531              		.loc 1 1643 15 is_stmt 0 view .LVU802
 2532 0034 42F2DE73 		movw	r3, #10206
 2533 0038 2B80     		strh	r3, [r5]	@ movhi
 2534 003a F7E7     		b	.L186
 2535              		.cfi_endproc
 2536              	.LFE16:
 2538              		.section	.text.Mem_PoolBlkFree,"ax",%progbits
 2539              		.align	1
 2540              		.global	Mem_PoolBlkFree
 2541              		.syntax unified
 2542              		.thumb
 2543              		.thumb_func
 2544              		.fpu fpv4-sp-d16
 2546              	Mem_PoolBlkFree:
 2547              	.LVL288:
 2548              	.LFB17:
1686:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 2549              		.loc 1 1686 1 is_stmt 1 view -0
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 0
 2552              		@ frame_needed = 0, uses_anonymous_args = 0
1686:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 2553              		.loc 1 1686 1 is_stmt 0 view .LVU804
 2554 0000 70B5     		push	{r4, r5, r6, lr}
 2555              	.LCFI54:
 2556              		.cfi_def_cfa_offset 16
 2557              		.cfi_offset 4, -16
 2558              		.cfi_offset 5, -12
 2559              		.cfi_offset 6, -8
 2560              		.cfi_offset 14, -4
 2561 0002 0446     		mov	r4, r0
 2562 0004 0E46     		mov	r6, r1
 2563 0006 1546     		mov	r5, r2
1691:rtos/uC-LIB/lib_mem.c **** 
 2564              		.loc 1 1691 5 is_stmt 1 view .LVU805
 2565              	.LVL289:
1724:rtos/uC-LIB/lib_mem.c **** #endif
 2566              		.loc 1 1724 5 view .LVU806
1724:rtos/uC-LIB/lib_mem.c **** #endif
 2567              		.loc 1 1724 5 view .LVU807
1724:rtos/uC-LIB/lib_mem.c **** #endif
 2568              		.loc 1 1724 5 view .LVU808
 2569 0008 4020     		movs	r0, #64
 2570              	.LVL290:
1724:rtos/uC-LIB/lib_mem.c **** #endif
 2571              		.loc 1 1724 5 is_stmt 0 view .LVU809
 2572 000a FFF7FEFF 		bl	CPU_SR_Save
 2573              	.LVL291:
ARM GAS  /tmp/cc3qzkyx.s 			page 107


1724:rtos/uC-LIB/lib_mem.c **** #endif
 2574              		.loc 1 1724 5 is_stmt 1 view .LVU810
1724:rtos/uC-LIB/lib_mem.c **** #endif
 2575              		.loc 1 1724 5 view .LVU811
1727:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2576              		.loc 1 1727 5 view .LVU812
1727:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2577              		.loc 1 1727 15 is_stmt 0 view .LVU813
 2578 000e 6369     		ldr	r3, [r4, #20]
1727:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2579              		.loc 1 1727 39 view .LVU814
 2580 0010 A268     		ldr	r2, [r4, #8]
1727:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2581              		.loc 1 1727 8 view .LVU815
 2582 0012 9342     		cmp	r3, r2
 2583 0014 0BD2     		bcs	.L197
1733:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx                     += 1u;
 2584              		.loc 1 1733 5 is_stmt 1 view .LVU816
1733:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx                     += 1u;
 2585              		.loc 1 1733 11 is_stmt 0 view .LVU817
 2586 0016 2269     		ldr	r2, [r4, #16]
1733:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreeTblIx                     += 1u;
 2587              		.loc 1 1733 47 view .LVU818
 2588 0018 42F82360 		str	r6, [r2, r3, lsl #2]
1734:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2589              		.loc 1 1734 5 is_stmt 1 view .LVU819
1734:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2590              		.loc 1 1734 46 is_stmt 0 view .LVU820
 2591 001c 6369     		ldr	r3, [r4, #20]
 2592 001e 0133     		adds	r3, r3, #1
 2593 0020 6361     		str	r3, [r4, #20]
1735:rtos/uC-LIB/lib_mem.c **** 
 2594              		.loc 1 1735 5 is_stmt 1 view .LVU821
1735:rtos/uC-LIB/lib_mem.c **** 
 2595              		.loc 1 1735 5 view .LVU822
1735:rtos/uC-LIB/lib_mem.c **** 
 2596              		.loc 1 1735 5 view .LVU823
 2597 0022 FFF7FEFF 		bl	CPU_SR_Restore
 2598              	.LVL292:
1735:rtos/uC-LIB/lib_mem.c **** 
 2599              		.loc 1 1735 5 view .LVU824
1735:rtos/uC-LIB/lib_mem.c **** 
 2600              		.loc 1 1735 5 view .LVU825
1737:rtos/uC-LIB/lib_mem.c **** }
 2601              		.loc 1 1737 4 view .LVU826
1737:rtos/uC-LIB/lib_mem.c **** }
 2602              		.loc 1 1737 11 is_stmt 0 view .LVU827
 2603 0026 42F21073 		movw	r3, #10000
 2604 002a 2B80     		strh	r3, [r5]	@ movhi
 2605              	.L193:
1738:rtos/uC-LIB/lib_mem.c **** #endif
 2606              		.loc 1 1738 1 view .LVU828
 2607 002c 70BD     		pop	{r4, r5, r6, pc}
 2608              	.LVL293:
 2609              	.L197:
1728:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
 2610              		.loc 1 1728 9 is_stmt 1 view .LVU829
ARM GAS  /tmp/cc3qzkyx.s 			page 108


1728:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
 2611              		.loc 1 1728 9 view .LVU830
1728:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
 2612              		.loc 1 1728 9 view .LVU831
 2613 002e FFF7FEFF 		bl	CPU_SR_Restore
 2614              	.LVL294:
1728:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
 2615              		.loc 1 1728 9 view .LVU832
1728:rtos/uC-LIB/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
 2616              		.loc 1 1728 9 view .LVU833
1729:rtos/uC-LIB/lib_mem.c ****         return;
 2617              		.loc 1 1729 8 view .LVU834
1729:rtos/uC-LIB/lib_mem.c ****         return;
 2618              		.loc 1 1729 15 is_stmt 0 view .LVU835
 2619 0032 42F2DD73 		movw	r3, #10205
 2620 0036 2B80     		strh	r3, [r5]	@ movhi
1730:rtos/uC-LIB/lib_mem.c ****     }
 2621              		.loc 1 1730 9 is_stmt 1 view .LVU836
 2622 0038 F8E7     		b	.L193
 2623              		.cfi_endproc
 2624              	.LFE17:
 2626              		.section	.text.Mem_PoolBlkGetNbrAvail,"ax",%progbits
 2627              		.align	1
 2628              		.global	Mem_PoolBlkGetNbrAvail
 2629              		.syntax unified
 2630              		.thumb
 2631              		.thumb_func
 2632              		.fpu fpv4-sp-d16
 2634              	Mem_PoolBlkGetNbrAvail:
 2635              	.LVL295:
 2636              	.LFB18:
1769:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  nbr_avail;
 2637              		.loc 1 1769 1 view -0
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 0
 2640              		@ frame_needed = 0, uses_anonymous_args = 0
1769:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  nbr_avail;
 2641              		.loc 1 1769 1 is_stmt 0 view .LVU838
 2642 0000 38B5     		push	{r3, r4, r5, lr}
 2643              	.LCFI55:
 2644              		.cfi_def_cfa_offset 16
 2645              		.cfi_offset 3, -16
 2646              		.cfi_offset 4, -12
 2647              		.cfi_offset 5, -8
 2648              		.cfi_offset 14, -4
 2649 0002 0546     		mov	r5, r0
 2650 0004 0C46     		mov	r4, r1
1770:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 2651              		.loc 1 1770 5 is_stmt 1 view .LVU839
1771:rtos/uC-LIB/lib_mem.c **** 
 2652              		.loc 1 1771 5 view .LVU840
 2653              	.LVL296:
1786:rtos/uC-LIB/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
 2654              		.loc 1 1786 5 view .LVU841
1786:rtos/uC-LIB/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
 2655              		.loc 1 1786 5 view .LVU842
1786:rtos/uC-LIB/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
ARM GAS  /tmp/cc3qzkyx.s 			page 109


 2656              		.loc 1 1786 5 view .LVU843
 2657 0006 4020     		movs	r0, #64
 2658              	.LVL297:
1786:rtos/uC-LIB/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
 2659              		.loc 1 1786 5 is_stmt 0 view .LVU844
 2660 0008 FFF7FEFF 		bl	CPU_SR_Save
 2661              	.LVL298:
1786:rtos/uC-LIB/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
 2662              		.loc 1 1786 5 is_stmt 1 view .LVU845
1786:rtos/uC-LIB/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
 2663              		.loc 1 1786 5 view .LVU846
1787:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2664              		.loc 1 1787 5 view .LVU847
1787:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2665              		.loc 1 1787 15 is_stmt 0 view .LVU848
 2666 000c 6D69     		ldr	r5, [r5, #20]
 2667              	.LVL299:
1788:rtos/uC-LIB/lib_mem.c **** 
 2668              		.loc 1 1788 5 is_stmt 1 view .LVU849
1788:rtos/uC-LIB/lib_mem.c **** 
 2669              		.loc 1 1788 5 view .LVU850
1788:rtos/uC-LIB/lib_mem.c **** 
 2670              		.loc 1 1788 5 view .LVU851
 2671 000e FFF7FEFF 		bl	CPU_SR_Restore
 2672              	.LVL300:
1788:rtos/uC-LIB/lib_mem.c **** 
 2673              		.loc 1 1788 5 view .LVU852
1788:rtos/uC-LIB/lib_mem.c **** 
 2674              		.loc 1 1788 5 view .LVU853
1790:rtos/uC-LIB/lib_mem.c **** 
 2675              		.loc 1 1790 4 view .LVU854
1790:rtos/uC-LIB/lib_mem.c **** 
 2676              		.loc 1 1790 11 is_stmt 0 view .LVU855
 2677 0012 42F21073 		movw	r3, #10000
 2678 0016 2380     		strh	r3, [r4]	@ movhi
1792:rtos/uC-LIB/lib_mem.c **** }
 2679              		.loc 1 1792 5 is_stmt 1 view .LVU856
1793:rtos/uC-LIB/lib_mem.c **** #endif
 2680              		.loc 1 1793 1 is_stmt 0 view .LVU857
 2681 0018 2846     		mov	r0, r5
 2682 001a 38BD     		pop	{r3, r4, r5, pc}
1793:rtos/uC-LIB/lib_mem.c **** #endif
 2683              		.loc 1 1793 1 view .LVU858
 2684              		.cfi_endproc
 2685              	.LFE18:
 2687              		.section	.text.Mem_DynPoolCreate,"ax",%progbits
 2688              		.align	1
 2689              		.global	Mem_DynPoolCreate
 2690              		.syntax unified
 2691              		.thumb
 2692              		.thumb_func
 2693              		.fpu fpv4-sp-d16
 2695              	Mem_DynPoolCreate:
 2696              	.LVL301:
 2697              	.LFB19:
1850:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2698              		.loc 1 1850 1 is_stmt 1 view -0
ARM GAS  /tmp/cc3qzkyx.s 			page 110


 2699              		.cfi_startproc
 2700              		@ args = 16, pretend = 0, frame = 0
 2701              		@ frame_needed = 0, uses_anonymous_args = 0
1850:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2702              		.loc 1 1850 1 is_stmt 0 view .LVU860
 2703 0000 10B5     		push	{r4, lr}
 2704              	.LCFI56:
 2705              		.cfi_def_cfa_offset 8
 2706              		.cfi_offset 4, -8
 2707              		.cfi_offset 14, -4
 2708 0002 86B0     		sub	sp, sp, #24
 2709              	.LCFI57:
 2710              		.cfi_def_cfa_offset 32
1851:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 2711              		.loc 1 1851 5 is_stmt 1 view .LVU861
1851:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 2712              		.loc 1 1851 8 is_stmt 0 view .LVU862
 2713 0004 1446     		mov	r4, r2
 2714 0006 72B1     		cbz	r2, .L204
 2715              	.L201:
 2716              	.LVL302:
1860:rtos/uC-LIB/lib_mem.c ****                               p_pool,
 2717              		.loc 1 1860 5 is_stmt 1 view .LVU863
 2718 0008 0B9A     		ldr	r2, [sp, #44]
 2719 000a 0492     		str	r2, [sp, #16]
 2720 000c 0A9A     		ldr	r2, [sp, #40]
 2721 000e 0392     		str	r2, [sp, #12]
 2722 0010 099A     		ldr	r2, [sp, #36]
 2723 0012 0292     		str	r2, [sp, #8]
 2724 0014 0122     		movs	r2, #1
 2725 0016 0192     		str	r2, [sp, #4]
 2726 0018 089A     		ldr	r2, [sp, #32]
 2727 001a 0092     		str	r2, [sp]
 2728 001c 2246     		mov	r2, r4
 2729 001e FFF7FEFF 		bl	Mem_DynPoolCreateInternal
 2730              	.LVL303:
1869:rtos/uC-LIB/lib_mem.c **** 
 2731              		.loc 1 1869 1 is_stmt 0 view .LVU864
 2732 0022 06B0     		add	sp, sp, #24
 2733              	.LCFI58:
 2734              		.cfi_remember_state
 2735              		.cfi_def_cfa_offset 8
 2736              		@ sp needed
 2737 0024 10BD     		pop	{r4, pc}
 2738              	.LVL304:
 2739              	.L204:
 2740              	.LCFI59:
 2741              		.cfi_restore_state
1853:rtos/uC-LIB/lib_mem.c **** #else
 2742              		.loc 1 1853 15 view .LVU865
 2743 0026 014C     		ldr	r4, .L205
 2744 0028 EEE7     		b	.L201
 2745              	.L206:
 2746 002a 00BF     		.align	2
 2747              	.L205:
 2748 002c 00000000 		.word	Mem_SegHeap
 2749              		.cfi_endproc
ARM GAS  /tmp/cc3qzkyx.s 			page 111


 2750              	.LFE19:
 2752              		.section	.text.Mem_DynPoolCreateHW,"ax",%progbits
 2753              		.align	1
 2754              		.global	Mem_DynPoolCreateHW
 2755              		.syntax unified
 2756              		.thumb
 2757              		.thumb_func
 2758              		.fpu fpv4-sp-d16
 2760              	Mem_DynPoolCreateHW:
 2761              	.LVL305:
 2762              	.LFB20:
1922:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2763              		.loc 1 1922 1 is_stmt 1 view -0
 2764              		.cfi_startproc
 2765              		@ args = 16, pretend = 0, frame = 0
 2766              		@ frame_needed = 0, uses_anonymous_args = 0
1922:rtos/uC-LIB/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2767              		.loc 1 1922 1 is_stmt 0 view .LVU867
 2768 0000 10B5     		push	{r4, lr}
 2769              	.LCFI60:
 2770              		.cfi_def_cfa_offset 8
 2771              		.cfi_offset 4, -8
 2772              		.cfi_offset 14, -4
 2773 0002 86B0     		sub	sp, sp, #24
 2774              	.LCFI61:
 2775              		.cfi_def_cfa_offset 32
1923:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 2776              		.loc 1 1923 5 is_stmt 1 view .LVU868
1923:rtos/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 2777              		.loc 1 1923 8 is_stmt 0 view .LVU869
 2778 0004 6AB1     		cbz	r2, .L211
 2779              	.LVL306:
 2780              	.L208:
1932:rtos/uC-LIB/lib_mem.c ****                               p_pool,
 2781              		.loc 1 1932 5 is_stmt 1 view .LVU870
 2782 0006 0B9C     		ldr	r4, [sp, #44]
 2783 0008 0494     		str	r4, [sp, #16]
 2784 000a 0A9C     		ldr	r4, [sp, #40]
 2785 000c 0394     		str	r4, [sp, #12]
 2786 000e 099C     		ldr	r4, [sp, #36]
 2787 0010 0294     		str	r4, [sp, #8]
 2788 0012 1469     		ldr	r4, [r2, #16]
 2789 0014 0194     		str	r4, [sp, #4]
 2790 0016 089C     		ldr	r4, [sp, #32]
 2791 0018 0094     		str	r4, [sp]
 2792 001a FFF7FEFF 		bl	Mem_DynPoolCreateInternal
 2793              	.LVL307:
1941:rtos/uC-LIB/lib_mem.c **** 
 2794              		.loc 1 1941 1 is_stmt 0 view .LVU871
 2795 001e 06B0     		add	sp, sp, #24
 2796              	.LCFI62:
 2797              		.cfi_remember_state
 2798              		.cfi_def_cfa_offset 8
 2799              		@ sp needed
 2800 0020 10BD     		pop	{r4, pc}
 2801              	.LVL308:
 2802              	.L211:
ARM GAS  /tmp/cc3qzkyx.s 			page 112


 2803              	.LCFI63:
 2804              		.cfi_restore_state
1925:rtos/uC-LIB/lib_mem.c **** #else
 2805              		.loc 1 1925 15 view .LVU872
 2806 0022 014A     		ldr	r2, .L212
 2807              	.LVL309:
1925:rtos/uC-LIB/lib_mem.c **** #else
 2808              		.loc 1 1925 15 view .LVU873
 2809 0024 EFE7     		b	.L208
 2810              	.L213:
 2811 0026 00BF     		.align	2
 2812              	.L212:
 2813 0028 00000000 		.word	Mem_SegHeap
 2814              		.cfi_endproc
 2815              	.LFE20:
 2817              		.section	.text.Mem_DynPoolBlkGet,"ax",%progbits
 2818              		.align	1
 2819              		.global	Mem_DynPoolBlkGet
 2820              		.syntax unified
 2821              		.thumb
 2822              		.thumb_func
 2823              		.fpu fpv4-sp-d16
 2825              	Mem_DynPoolBlkGet:
 2826              	.LVL310:
 2827              	.LFB21:
1976:rtos/uC-LIB/lib_mem.c ****            void      *p_blk;
 2828              		.loc 1 1976 1 is_stmt 1 view -0
 2829              		.cfi_startproc
 2830              		@ args = 0, pretend = 0, frame = 0
 2831              		@ frame_needed = 0, uses_anonymous_args = 0
1976:rtos/uC-LIB/lib_mem.c ****            void      *p_blk;
 2832              		.loc 1 1976 1 is_stmt 0 view .LVU875
 2833 0000 70B5     		push	{r4, r5, r6, lr}
 2834              	.LCFI64:
 2835              		.cfi_def_cfa_offset 16
 2836              		.cfi_offset 4, -16
 2837              		.cfi_offset 5, -12
 2838              		.cfi_offset 6, -8
 2839              		.cfi_offset 14, -4
 2840 0002 84B0     		sub	sp, sp, #16
 2841              	.LCFI65:
 2842              		.cfi_def_cfa_offset 32
 2843 0004 0446     		mov	r4, r0
 2844 0006 0D46     		mov	r5, r1
1977:rtos/uC-LIB/lib_mem.c ****     const  CPU_CHAR  *p_pool_name;
 2845              		.loc 1 1977 12 is_stmt 1 view .LVU876
1978:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 2846              		.loc 1 1978 5 view .LVU877
1979:rtos/uC-LIB/lib_mem.c **** 
 2847              		.loc 1 1979 5 view .LVU878
 2848              	.LVL311:
1994:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
 2849              		.loc 1 1994 5 view .LVU879
1994:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
 2850              		.loc 1 1994 15 is_stmt 0 view .LVU880
 2851 0008 4369     		ldr	r3, [r0, #20]
1994:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
ARM GAS  /tmp/cc3qzkyx.s 			page 113


 2852              		.loc 1 1994 8 view .LVU881
 2853 000a 53B1     		cbz	r3, .L215
1995:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
 2854              		.loc 1 1995 9 is_stmt 1 view .LVU882
1995:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
 2855              		.loc 1 1995 9 view .LVU883
1995:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
 2856              		.loc 1 1995 9 view .LVU884
 2857 000c 4020     		movs	r0, #64
 2858              	.LVL312:
1995:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
 2859              		.loc 1 1995 9 is_stmt 0 view .LVU885
 2860 000e FFF7FEFF 		bl	CPU_SR_Save
 2861              	.LVL313:
1995:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
 2862              		.loc 1 1995 9 is_stmt 1 view .LVU886
1995:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
 2863              		.loc 1 1995 9 view .LVU887
1996:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 2864              		.loc 1 1996 9 view .LVU888
1996:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 2865              		.loc 1 1996 19 is_stmt 0 view .LVU889
 2866 0012 A369     		ldr	r3, [r4, #24]
1996:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 2867              		.loc 1 1996 42 view .LVU890
 2868 0014 6269     		ldr	r2, [r4, #20]
1996:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 2869              		.loc 1 1996 12 view .LVU891
 2870 0016 9342     		cmp	r3, r2
 2871 0018 12D2     		bcs	.L222
2003:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2872              		.loc 1 2003 9 is_stmt 1 view .LVU892
2003:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2873              		.loc 1 2003 28 is_stmt 0 view .LVU893
 2874 001a 0133     		adds	r3, r3, #1
 2875 001c A361     		str	r3, [r4, #24]
2004:rtos/uC-LIB/lib_mem.c ****     }
 2876              		.loc 1 2004 9 is_stmt 1 view .LVU894
2004:rtos/uC-LIB/lib_mem.c ****     }
 2877              		.loc 1 2004 9 view .LVU895
2004:rtos/uC-LIB/lib_mem.c ****     }
 2878              		.loc 1 2004 9 view .LVU896
 2879 001e FFF7FEFF 		bl	CPU_SR_Restore
 2880              	.LVL314:
 2881              	.L215:
2004:rtos/uC-LIB/lib_mem.c ****     }
 2882              		.loc 1 2004 9 discriminator 1 view .LVU897
2004:rtos/uC-LIB/lib_mem.c ****     }
 2883              		.loc 1 2004 9 discriminator 1 view .LVU898
2008:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
 2884              		.loc 1 2008 5 discriminator 1 view .LVU899
2008:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
 2885              		.loc 1 2008 5 discriminator 1 view .LVU900
2008:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
 2886              		.loc 1 2008 5 discriminator 1 view .LVU901
 2887 0022 4020     		movs	r0, #64
 2888 0024 FFF7FEFF 		bl	CPU_SR_Save
ARM GAS  /tmp/cc3qzkyx.s 			page 114


 2889              	.LVL315:
2008:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
 2890              		.loc 1 2008 5 discriminator 1 view .LVU902
2008:rtos/uC-LIB/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
 2891              		.loc 1 2008 5 discriminator 1 view .LVU903
2009:rtos/uC-LIB/lib_mem.c ****         p_blk              = p_pool->BlkFreePtr;
 2892              		.loc 1 2009 5 discriminator 1 view .LVU904
2009:rtos/uC-LIB/lib_mem.c ****         p_blk              = p_pool->BlkFreePtr;
 2893              		.loc 1 2009 15 is_stmt 0 discriminator 1 view .LVU905
 2894 0028 2669     		ldr	r6, [r4, #16]
2009:rtos/uC-LIB/lib_mem.c ****         p_blk              = p_pool->BlkFreePtr;
 2895              		.loc 1 2009 8 discriminator 1 view .LVU906
 2896 002a 86B1     		cbz	r6, .L218
2010:rtos/uC-LIB/lib_mem.c ****         p_pool->BlkFreePtr = *((void **)p_blk);
 2897              		.loc 1 2010 9 is_stmt 1 view .LVU907
 2898              	.LVL316:
2011:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2899              		.loc 1 2011 9 view .LVU908
2011:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2900              		.loc 1 2011 30 is_stmt 0 view .LVU909
 2901 002c 3368     		ldr	r3, [r6]
2011:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2902              		.loc 1 2011 28 view .LVU910
 2903 002e 2361     		str	r3, [r4, #16]
2012:rtos/uC-LIB/lib_mem.c **** 
 2904              		.loc 1 2012 9 is_stmt 1 view .LVU911
2012:rtos/uC-LIB/lib_mem.c **** 
 2905              		.loc 1 2012 9 view .LVU912
2012:rtos/uC-LIB/lib_mem.c **** 
 2906              		.loc 1 2012 9 view .LVU913
 2907 0030 FFF7FEFF 		bl	CPU_SR_Restore
 2908              	.LVL317:
2012:rtos/uC-LIB/lib_mem.c **** 
 2909              		.loc 1 2012 9 view .LVU914
2012:rtos/uC-LIB/lib_mem.c **** 
 2910              		.loc 1 2012 9 view .LVU915
2014:rtos/uC-LIB/lib_mem.c **** 
 2911              		.loc 1 2014 8 view .LVU916
2014:rtos/uC-LIB/lib_mem.c **** 
 2912              		.loc 1 2014 15 is_stmt 0 view .LVU917
 2913 0034 42F21073 		movw	r3, #10000
 2914 0038 2B80     		strh	r3, [r5]	@ movhi
2016:rtos/uC-LIB/lib_mem.c ****     }
 2915              		.loc 1 2016 9 is_stmt 1 view .LVU918
 2916              	.LVL318:
 2917              	.L214:
2041:rtos/uC-LIB/lib_mem.c **** 
 2918              		.loc 1 2041 1 is_stmt 0 view .LVU919
 2919 003a 3046     		mov	r0, r6
 2920 003c 04B0     		add	sp, sp, #16
 2921              	.LCFI66:
 2922              		.cfi_remember_state
 2923              		.cfi_def_cfa_offset 16
 2924              		@ sp needed
 2925 003e 70BD     		pop	{r4, r5, r6, pc}
 2926              	.LVL319:
 2927              	.L222:
ARM GAS  /tmp/cc3qzkyx.s 			page 115


 2928              	.LCFI67:
 2929              		.cfi_restore_state
1997:rtos/uC-LIB/lib_mem.c **** 
 2930              		.loc 1 1997 13 is_stmt 1 view .LVU920
1997:rtos/uC-LIB/lib_mem.c **** 
 2931              		.loc 1 1997 13 view .LVU921
1997:rtos/uC-LIB/lib_mem.c **** 
 2932              		.loc 1 1997 13 view .LVU922
 2933 0040 FFF7FEFF 		bl	CPU_SR_Restore
 2934              	.LVL320:
1997:rtos/uC-LIB/lib_mem.c **** 
 2935              		.loc 1 1997 13 view .LVU923
1997:rtos/uC-LIB/lib_mem.c **** 
 2936              		.loc 1 1997 13 view .LVU924
1999:rtos/uC-LIB/lib_mem.c ****             return (DEF_NULL);
 2937              		.loc 1 1999 12 view .LVU925
1999:rtos/uC-LIB/lib_mem.c ****             return (DEF_NULL);
 2938              		.loc 1 1999 19 is_stmt 0 view .LVU926
 2939 0044 42F2DE73 		movw	r3, #10206
 2940 0048 2B80     		strh	r3, [r5]	@ movhi
2000:rtos/uC-LIB/lib_mem.c ****         }
 2941              		.loc 1 2000 13 is_stmt 1 view .LVU927
2000:rtos/uC-LIB/lib_mem.c ****         }
 2942              		.loc 1 2000 20 is_stmt 0 view .LVU928
 2943 004a 0026     		movs	r6, #0
 2944 004c F5E7     		b	.L214
 2945              	.LVL321:
 2946              	.L218:
2018:rtos/uC-LIB/lib_mem.c **** 
 2947              		.loc 1 2018 5 is_stmt 1 view .LVU929
2018:rtos/uC-LIB/lib_mem.c **** 
 2948              		.loc 1 2018 5 view .LVU930
2018:rtos/uC-LIB/lib_mem.c **** 
 2949              		.loc 1 2018 5 view .LVU931
 2950 004e FFF7FEFF 		bl	CPU_SR_Restore
 2951              	.LVL322:
2018:rtos/uC-LIB/lib_mem.c **** 
 2952              		.loc 1 2018 5 view .LVU932
2018:rtos/uC-LIB/lib_mem.c **** 
 2953              		.loc 1 2018 5 view .LVU933
2024:rtos/uC-LIB/lib_mem.c **** #endif
 2954              		.loc 1 2024 5 view .LVU934
2026:rtos/uC-LIB/lib_mem.c ****                                  p_pool->PoolSegPtr,
 2955              		.loc 1 2026 5 view .LVU935
2026:rtos/uC-LIB/lib_mem.c ****                                  p_pool->PoolSegPtr,
 2956              		.loc 1 2026 13 is_stmt 0 view .LVU936
 2957 0052 0295     		str	r5, [sp, #8]
 2958 0054 0020     		movs	r0, #0
 2959 0056 0190     		str	r0, [sp, #4]
 2960 0058 E368     		ldr	r3, [r4, #12]
 2961 005a 0093     		str	r3, [sp]
 2962 005c A368     		ldr	r3, [r4, #8]
 2963 005e 6268     		ldr	r2, [r4, #4]
 2964 0060 2168     		ldr	r1, [r4]
 2965 0062 FFF7FEFF 		bl	Mem_SegAllocInternal
 2966              	.LVL323:
2033:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
ARM GAS  /tmp/cc3qzkyx.s 			page 116


 2967              		.loc 1 2033 5 is_stmt 1 view .LVU937
2033:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
 2968              		.loc 1 2033 9 is_stmt 0 view .LVU938
 2969 0066 2A88     		ldrh	r2, [r5]
2033:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
 2970              		.loc 1 2033 8 view .LVU939
 2971 0068 42F21073 		movw	r3, #10000
 2972 006c 9A42     		cmp	r2, r3
 2973 006e 01D1     		bne	.L223
2040:rtos/uC-LIB/lib_mem.c **** }
 2974              		.loc 1 2040 12 view .LVU940
 2975 0070 0646     		mov	r6, r0
 2976 0072 E2E7     		b	.L214
 2977              	.L223:
2034:rtos/uC-LIB/lib_mem.c ****             p_pool->BlkAllocCnt--;
 2978              		.loc 1 2034 9 is_stmt 1 view .LVU941
2034:rtos/uC-LIB/lib_mem.c ****             p_pool->BlkAllocCnt--;
 2979              		.loc 1 2034 19 is_stmt 0 view .LVU942
 2980 0074 6369     		ldr	r3, [r4, #20]
2034:rtos/uC-LIB/lib_mem.c ****             p_pool->BlkAllocCnt--;
 2981              		.loc 1 2034 12 view .LVU943
 2982 0076 002B     		cmp	r3, #0
 2983 0078 DFD0     		beq	.L214
2035:rtos/uC-LIB/lib_mem.c ****         }
 2984              		.loc 1 2035 13 is_stmt 1 view .LVU944
2035:rtos/uC-LIB/lib_mem.c ****         }
 2985              		.loc 1 2035 19 is_stmt 0 view .LVU945
 2986 007a A369     		ldr	r3, [r4, #24]
2035:rtos/uC-LIB/lib_mem.c ****         }
 2987              		.loc 1 2035 32 view .LVU946
 2988 007c 013B     		subs	r3, r3, #1
 2989 007e A361     		str	r3, [r4, #24]
2037:rtos/uC-LIB/lib_mem.c ****     }
 2990              		.loc 1 2037 9 is_stmt 1 view .LVU947
2037:rtos/uC-LIB/lib_mem.c ****     }
 2991              		.loc 1 2037 16 is_stmt 0 view .LVU948
 2992 0080 DBE7     		b	.L214
 2993              		.cfi_endproc
 2994              	.LFE21:
 2996              		.section	.text.Mem_DynPoolBlkFree,"ax",%progbits
 2997              		.align	1
 2998              		.global	Mem_DynPoolBlkFree
 2999              		.syntax unified
 3000              		.thumb
 3001              		.thumb_func
 3002              		.fpu fpv4-sp-d16
 3004              	Mem_DynPoolBlkFree:
 3005              	.LVL324:
 3006              	.LFB22:
2071:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 3007              		.loc 1 2071 1 is_stmt 1 view -0
 3008              		.cfi_startproc
 3009              		@ args = 0, pretend = 0, frame = 0
 3010              		@ frame_needed = 0, uses_anonymous_args = 0
2071:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 3011              		.loc 1 2071 1 is_stmt 0 view .LVU950
 3012 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/cc3qzkyx.s 			page 117


 3013              	.LCFI68:
 3014              		.cfi_def_cfa_offset 16
 3015              		.cfi_offset 4, -16
 3016              		.cfi_offset 5, -12
 3017              		.cfi_offset 6, -8
 3018              		.cfi_offset 14, -4
 3019 0002 0446     		mov	r4, r0
 3020 0004 0D46     		mov	r5, r1
 3021 0006 1646     		mov	r6, r2
2072:rtos/uC-LIB/lib_mem.c **** 
 3022              		.loc 1 2072 5 is_stmt 1 view .LVU951
 3023              	.LVL325:
2091:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3024              		.loc 1 2091 5 view .LVU952
2091:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3025              		.loc 1 2091 15 is_stmt 0 view .LVU953
 3026 0008 4369     		ldr	r3, [r0, #20]
2091:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3027              		.loc 1 2091 8 view .LVU954
 3028 000a 43B1     		cbz	r3, .L225
2092:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
 3029              		.loc 1 2092 9 is_stmt 1 view .LVU955
2092:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
 3030              		.loc 1 2092 9 view .LVU956
2092:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
 3031              		.loc 1 2092 9 view .LVU957
 3032 000c 4020     		movs	r0, #64
 3033              	.LVL326:
2092:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
 3034              		.loc 1 2092 9 is_stmt 0 view .LVU958
 3035 000e FFF7FEFF 		bl	CPU_SR_Save
 3036              	.LVL327:
2092:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
 3037              		.loc 1 2092 9 is_stmt 1 view .LVU959
2092:rtos/uC-LIB/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
 3038              		.loc 1 2092 9 view .LVU960
2093:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 3039              		.loc 1 2093 9 view .LVU961
2093:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 3040              		.loc 1 2093 19 is_stmt 0 view .LVU962
 3041 0012 A369     		ldr	r3, [r4, #24]
2093:rtos/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 3042              		.loc 1 2093 12 view .LVU963
 3043 0014 7BB1     		cbz	r3, .L229
2100:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3044              		.loc 1 2100 9 is_stmt 1 view .LVU964
2100:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3045              		.loc 1 2100 28 is_stmt 0 view .LVU965
 3046 0016 013B     		subs	r3, r3, #1
 3047 0018 A361     		str	r3, [r4, #24]
2101:rtos/uC-LIB/lib_mem.c ****     }
 3048              		.loc 1 2101 9 is_stmt 1 view .LVU966
2101:rtos/uC-LIB/lib_mem.c ****     }
 3049              		.loc 1 2101 9 view .LVU967
2101:rtos/uC-LIB/lib_mem.c ****     }
 3050              		.loc 1 2101 9 view .LVU968
 3051 001a FFF7FEFF 		bl	CPU_SR_Restore
ARM GAS  /tmp/cc3qzkyx.s 			page 118


 3052              	.LVL328:
 3053              	.L225:
2101:rtos/uC-LIB/lib_mem.c ****     }
 3054              		.loc 1 2101 9 discriminator 1 view .LVU969
2101:rtos/uC-LIB/lib_mem.c ****     }
 3055              		.loc 1 2101 9 discriminator 1 view .LVU970
2104:rtos/uC-LIB/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
 3056              		.loc 1 2104 5 discriminator 1 view .LVU971
2104:rtos/uC-LIB/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
 3057              		.loc 1 2104 5 discriminator 1 view .LVU972
2104:rtos/uC-LIB/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
 3058              		.loc 1 2104 5 discriminator 1 view .LVU973
 3059 001e 4020     		movs	r0, #64
 3060 0020 FFF7FEFF 		bl	CPU_SR_Save
 3061              	.LVL329:
2104:rtos/uC-LIB/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
 3062              		.loc 1 2104 5 discriminator 1 view .LVU974
2104:rtos/uC-LIB/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
 3063              		.loc 1 2104 5 discriminator 1 view .LVU975
2105:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreePtr = p_blk;
 3064              		.loc 1 2105 4 discriminator 1 view .LVU976
2105:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreePtr = p_blk;
 3065              		.loc 1 2105 32 is_stmt 0 discriminator 1 view .LVU977
 3066 0024 2369     		ldr	r3, [r4, #16]
2105:rtos/uC-LIB/lib_mem.c ****     p_pool->BlkFreePtr = p_blk;
 3067              		.loc 1 2105 24 discriminator 1 view .LVU978
 3068 0026 2B60     		str	r3, [r5]
2106:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 3069              		.loc 1 2106 5 is_stmt 1 discriminator 1 view .LVU979
2106:rtos/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 3070              		.loc 1 2106 24 is_stmt 0 discriminator 1 view .LVU980
 3071 0028 2561     		str	r5, [r4, #16]
2107:rtos/uC-LIB/lib_mem.c **** 
 3072              		.loc 1 2107 5 is_stmt 1 discriminator 1 view .LVU981
2107:rtos/uC-LIB/lib_mem.c **** 
 3073              		.loc 1 2107 5 discriminator 1 view .LVU982
2107:rtos/uC-LIB/lib_mem.c **** 
 3074              		.loc 1 2107 5 discriminator 1 view .LVU983
 3075 002a FFF7FEFF 		bl	CPU_SR_Restore
 3076              	.LVL330:
2107:rtos/uC-LIB/lib_mem.c **** 
 3077              		.loc 1 2107 5 discriminator 1 view .LVU984
2107:rtos/uC-LIB/lib_mem.c **** 
 3078              		.loc 1 2107 5 discriminator 1 view .LVU985
2109:rtos/uC-LIB/lib_mem.c **** }
 3079              		.loc 1 2109 4 discriminator 1 view .LVU986
2109:rtos/uC-LIB/lib_mem.c **** }
 3080              		.loc 1 2109 11 is_stmt 0 discriminator 1 view .LVU987
 3081 002e 42F21073 		movw	r3, #10000
 3082 0032 3380     		strh	r3, [r6]	@ movhi
 3083              	.L224:
2110:rtos/uC-LIB/lib_mem.c **** 
 3084              		.loc 1 2110 1 view .LVU988
 3085 0034 70BD     		pop	{r4, r5, r6, pc}
 3086              	.LVL331:
 3087              	.L229:
2094:rtos/uC-LIB/lib_mem.c **** 
ARM GAS  /tmp/cc3qzkyx.s 			page 119


 3088              		.loc 1 2094 13 is_stmt 1 view .LVU989
2094:rtos/uC-LIB/lib_mem.c **** 
 3089              		.loc 1 2094 13 view .LVU990
2094:rtos/uC-LIB/lib_mem.c **** 
 3090              		.loc 1 2094 13 view .LVU991
 3091 0036 FFF7FEFF 		bl	CPU_SR_Restore
 3092              	.LVL332:
2094:rtos/uC-LIB/lib_mem.c **** 
 3093              		.loc 1 2094 13 view .LVU992
2094:rtos/uC-LIB/lib_mem.c **** 
 3094              		.loc 1 2094 13 view .LVU993
2096:rtos/uC-LIB/lib_mem.c ****             return;
 3095              		.loc 1 2096 12 view .LVU994
2096:rtos/uC-LIB/lib_mem.c ****             return;
 3096              		.loc 1 2096 19 is_stmt 0 view .LVU995
 3097 003a 42F2DD73 		movw	r3, #10205
 3098 003e 3380     		strh	r3, [r6]	@ movhi
2097:rtos/uC-LIB/lib_mem.c ****         }
 3099              		.loc 1 2097 13 is_stmt 1 view .LVU996
 3100 0040 F8E7     		b	.L224
 3101              		.cfi_endproc
 3102              	.LFE22:
 3104              		.section	.text.Mem_DynPoolBlkNbrAvailGet,"ax",%progbits
 3105              		.align	1
 3106              		.global	Mem_DynPoolBlkNbrAvailGet
 3107              		.syntax unified
 3108              		.thumb
 3109              		.thumb_func
 3110              		.fpu fpv4-sp-d16
 3112              	Mem_DynPoolBlkNbrAvailGet:
 3113              	.LVL333:
 3114              	.LFB23:
2140:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  blk_nbr_avail;
 3115              		.loc 1 2140 1 view -0
 3116              		.cfi_startproc
 3117              		@ args = 0, pretend = 0, frame = 0
 3118              		@ frame_needed = 0, uses_anonymous_args = 0
2140:rtos/uC-LIB/lib_mem.c ****     CPU_SIZE_T  blk_nbr_avail;
 3119              		.loc 1 2140 1 is_stmt 0 view .LVU998
 3120 0000 70B5     		push	{r4, r5, r6, lr}
 3121              	.LCFI69:
 3122              		.cfi_def_cfa_offset 16
 3123              		.cfi_offset 4, -16
 3124              		.cfi_offset 5, -12
 3125              		.cfi_offset 6, -8
 3126              		.cfi_offset 14, -4
 3127 0002 0D46     		mov	r5, r1
2141:rtos/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 3128              		.loc 1 2141 5 is_stmt 1 view .LVU999
2142:rtos/uC-LIB/lib_mem.c **** 
 3129              		.loc 1 2142 5 view .LVU1000
 3130              	.LVL334:
2156:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3131              		.loc 1 2156 5 view .LVU1001
2156:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3132              		.loc 1 2156 15 is_stmt 0 view .LVU1002
 3133 0004 4669     		ldr	r6, [r0, #20]
ARM GAS  /tmp/cc3qzkyx.s 			page 120


2156:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_ENTER();
 3134              		.loc 1 2156 8 view .LVU1003
 3135 0006 26B9     		cbnz	r6, .L234
2163:rtos/uC-LIB/lib_mem.c ****        *p_err         = LIB_MEM_ERR_POOL_UNLIMITED;
 3136              		.loc 1 2163 9 is_stmt 1 view .LVU1004
 3137              	.LVL335:
2164:rtos/uC-LIB/lib_mem.c ****     }
 3138              		.loc 1 2164 8 view .LVU1005
2164:rtos/uC-LIB/lib_mem.c ****     }
 3139              		.loc 1 2164 23 is_stmt 0 view .LVU1006
 3140 0008 42F2DF73 		movw	r3, #10207
 3141 000c 0B80     		strh	r3, [r1]	@ movhi
 3142              	.LVL336:
2167:rtos/uC-LIB/lib_mem.c **** }
 3143              		.loc 1 2167 5 is_stmt 1 view .LVU1007
 3144              	.L230:
2168:rtos/uC-LIB/lib_mem.c **** 
 3145              		.loc 1 2168 1 is_stmt 0 view .LVU1008
 3146 000e 3046     		mov	r0, r6
 3147 0010 70BD     		pop	{r4, r5, r6, pc}
 3148              	.LVL337:
 3149              	.L234:
2168:rtos/uC-LIB/lib_mem.c **** 
 3150              		.loc 1 2168 1 view .LVU1009
 3151 0012 0446     		mov	r4, r0
2157:rtos/uC-LIB/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
 3152              		.loc 1 2157 9 is_stmt 1 view .LVU1010
2157:rtos/uC-LIB/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
 3153              		.loc 1 2157 9 view .LVU1011
2157:rtos/uC-LIB/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
 3154              		.loc 1 2157 9 view .LVU1012
 3155 0014 4020     		movs	r0, #64
 3156              	.LVL338:
2157:rtos/uC-LIB/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
 3157              		.loc 1 2157 9 is_stmt 0 view .LVU1013
 3158 0016 FFF7FEFF 		bl	CPU_SR_Save
 3159              	.LVL339:
2157:rtos/uC-LIB/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
 3160              		.loc 1 2157 9 is_stmt 1 view .LVU1014
2157:rtos/uC-LIB/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
 3161              		.loc 1 2157 9 view .LVU1015
2158:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3162              		.loc 1 2158 9 view .LVU1016
2158:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3163              		.loc 1 2158 31 is_stmt 0 view .LVU1017
 3164 001a 6669     		ldr	r6, [r4, #20]
2158:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3165              		.loc 1 2158 51 view .LVU1018
 3166 001c A369     		ldr	r3, [r4, #24]
2158:rtos/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 3167              		.loc 1 2158 23 view .LVU1019
 3168 001e F61A     		subs	r6, r6, r3
 3169              	.LVL340:
2159:rtos/uC-LIB/lib_mem.c **** 
 3170              		.loc 1 2159 9 is_stmt 1 view .LVU1020
2159:rtos/uC-LIB/lib_mem.c **** 
 3171              		.loc 1 2159 9 view .LVU1021
ARM GAS  /tmp/cc3qzkyx.s 			page 121


2159:rtos/uC-LIB/lib_mem.c **** 
 3172              		.loc 1 2159 9 view .LVU1022
 3173 0020 FFF7FEFF 		bl	CPU_SR_Restore
 3174              	.LVL341:
2159:rtos/uC-LIB/lib_mem.c **** 
 3175              		.loc 1 2159 9 view .LVU1023
2159:rtos/uC-LIB/lib_mem.c **** 
 3176              		.loc 1 2159 9 view .LVU1024
2161:rtos/uC-LIB/lib_mem.c ****     } else {
 3177              		.loc 1 2161 8 view .LVU1025
2161:rtos/uC-LIB/lib_mem.c ****     } else {
 3178              		.loc 1 2161 15 is_stmt 0 view .LVU1026
 3179 0024 42F21073 		movw	r3, #10000
 3180 0028 2B80     		strh	r3, [r5]	@ movhi
 3181 002a F0E7     		b	.L230
 3182              		.cfi_endproc
 3183              	.LFE23:
 3185              		.comm	Mem_SegHeadPtr,4,4
 3186              		.comm	Mem_SegHeap,20,4
 3187              		.comm	Mem_Heap,1024,4
 3188              		.text
 3189              	.Letext0:
 3190              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 3191              		.file 3 "rtos/uC-LIB/lib_def.h"
 3192              		.file 4 "rtos/uC-LIB/lib_mem.h"
 3193              		.file 5 "rtos/uC-CPU/cpu_core.h"
ARM GAS  /tmp/cc3qzkyx.s 			page 122


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lib_mem.c
     /tmp/cc3qzkyx.s:18     .text.Mem_SegCreateCritical:0000000000000000 $t
     /tmp/cc3qzkyx.s:25     .text.Mem_SegCreateCritical:0000000000000000 Mem_SegCreateCritical
     /tmp/cc3qzkyx.s:69     .text.Mem_SegCreateCritical:0000000000000018 $d
                            *COM*:0000000000000004 Mem_SegHeadPtr
     /tmp/cc3qzkyx.s:74     .text.Mem_SegOverlapChkCritical:0000000000000000 $t
     /tmp/cc3qzkyx.s:80     .text.Mem_SegOverlapChkCritical:0000000000000000 Mem_SegOverlapChkCritical
     /tmp/cc3qzkyx.s:196    .text.Mem_SegOverlapChkCritical:0000000000000048 $d
     /tmp/cc3qzkyx.s:201    .text.Mem_SegAllocExtCritical:0000000000000000 $t
     /tmp/cc3qzkyx.s:207    .text.Mem_SegAllocExtCritical:0000000000000000 Mem_SegAllocExtCritical
     /tmp/cc3qzkyx.s:340    .text.Mem_SegAllocInternal:0000000000000000 $t
     /tmp/cc3qzkyx.s:346    .text.Mem_SegAllocInternal:0000000000000000 Mem_SegAllocInternal
     /tmp/cc3qzkyx.s:453    .text.Mem_DynPoolCreateInternal:0000000000000000 $t
     /tmp/cc3qzkyx.s:459    .text.Mem_DynPoolCreateInternal:0000000000000000 Mem_DynPoolCreateInternal
     /tmp/cc3qzkyx.s:662    .text.Mem_DynPoolCreateInternal:00000000000000c8 $d
                            *COM*:0000000000000014 Mem_SegHeap
     /tmp/cc3qzkyx.s:667    .text.Mem_Set:0000000000000000 $t
     /tmp/cc3qzkyx.s:674    .text.Mem_Set:0000000000000000 Mem_Set
     /tmp/cc3qzkyx.s:790    .text.Mem_Clr:0000000000000000 $t
     /tmp/cc3qzkyx.s:797    .text.Mem_Clr:0000000000000000 Mem_Clr
     /tmp/cc3qzkyx.s:823    .text.Mem_Copy:0000000000000000 $t
     /tmp/cc3qzkyx.s:830    .text.Mem_Copy:0000000000000000 Mem_Copy
     /tmp/cc3qzkyx.s:971    .text.Mem_Move:0000000000000000 $t
     /tmp/cc3qzkyx.s:978    .text.Mem_Move:0000000000000000 Mem_Move
     /tmp/cc3qzkyx.s:1151   .text.Mem_Cmp:0000000000000000 $t
     /tmp/cc3qzkyx.s:1158   .text.Mem_Cmp:0000000000000000 Mem_Cmp
     /tmp/cc3qzkyx.s:1388   .text.Mem_HeapAlloc:0000000000000000 $t
     /tmp/cc3qzkyx.s:1395   .text.Mem_HeapAlloc:0000000000000000 Mem_HeapAlloc
     /tmp/cc3qzkyx.s:1462   .text.Mem_HeapAlloc:0000000000000030 $d
     /tmp/cc3qzkyx.s:1467   .text.Mem_SegCreate:0000000000000000 $t
     /tmp/cc3qzkyx.s:1474   .text.Mem_SegCreate:0000000000000000 Mem_SegCreate
     /tmp/cc3qzkyx.s:1547   .rodata.Mem_Init.str1.4:0000000000000000 $d
     /tmp/cc3qzkyx.s:1551   .text.Mem_Init:0000000000000000 $t
     /tmp/cc3qzkyx.s:1558   .text.Mem_Init:0000000000000000 Mem_Init
     /tmp/cc3qzkyx.s:1623   .text.Mem_Init:000000000000003c $d
                            *COM*:0000000000000400 Mem_Heap
     /tmp/cc3qzkyx.s:1631   .text.Mem_SegClr:0000000000000000 $t
     /tmp/cc3qzkyx.s:1638   .text.Mem_SegClr:0000000000000000 Mem_SegClr
     /tmp/cc3qzkyx.s:1690   .text.Mem_SegRemSizeGet:0000000000000000 $t
     /tmp/cc3qzkyx.s:1697   .text.Mem_SegRemSizeGet:0000000000000000 Mem_SegRemSizeGet
     /tmp/cc3qzkyx.s:1827   .text.Mem_SegRemSizeGet:0000000000000060 $d
     /tmp/cc3qzkyx.s:1832   .text.Mem_HeapGetSizeRem:0000000000000000 $t
     /tmp/cc3qzkyx.s:1839   .text.Mem_HeapGetSizeRem:0000000000000000 Mem_HeapGetSizeRem
     /tmp/cc3qzkyx.s:1884   .text.Mem_HeapGetSizeRem:0000000000000020 $d
     /tmp/cc3qzkyx.s:1889   .text.Mem_SegAlloc:0000000000000000 $t
     /tmp/cc3qzkyx.s:1896   .text.Mem_SegAlloc:0000000000000000 Mem_SegAlloc
     /tmp/cc3qzkyx.s:1950   .text.Mem_SegAlloc:0000000000000024 $d
     /tmp/cc3qzkyx.s:1955   .text.Mem_SegAllocExt:0000000000000000 $t
     /tmp/cc3qzkyx.s:1962   .text.Mem_SegAllocExt:0000000000000000 Mem_SegAllocExt
     /tmp/cc3qzkyx.s:2014   .text.Mem_SegAllocExt:0000000000000024 $d
     /tmp/cc3qzkyx.s:2019   .text.Mem_SegAllocHW:0000000000000000 $t
     /tmp/cc3qzkyx.s:2026   .text.Mem_SegAllocHW:0000000000000000 Mem_SegAllocHW
     /tmp/cc3qzkyx.s:2078   .text.Mem_SegAllocHW:0000000000000020 $d
     /tmp/cc3qzkyx.s:2083   .text.Mem_PoolClr:0000000000000000 $t
     /tmp/cc3qzkyx.s:2090   .text.Mem_PoolClr:0000000000000000 Mem_PoolClr
     /tmp/cc3qzkyx.s:2127   .rodata.Mem_PoolCreate.str1.4:0000000000000000 $d
ARM GAS  /tmp/cc3qzkyx.s 			page 123


     /tmp/cc3qzkyx.s:2134   .text.Mem_PoolCreate:0000000000000000 $t
     /tmp/cc3qzkyx.s:2141   .text.Mem_PoolCreate:0000000000000000 Mem_PoolCreate
     /tmp/cc3qzkyx.s:2435   .text.Mem_PoolCreate:0000000000000124 $d
     /tmp/cc3qzkyx.s:2442   .text.Mem_PoolBlkGet:0000000000000000 $t
     /tmp/cc3qzkyx.s:2449   .text.Mem_PoolBlkGet:0000000000000000 Mem_PoolBlkGet
     /tmp/cc3qzkyx.s:2539   .text.Mem_PoolBlkFree:0000000000000000 $t
     /tmp/cc3qzkyx.s:2546   .text.Mem_PoolBlkFree:0000000000000000 Mem_PoolBlkFree
     /tmp/cc3qzkyx.s:2627   .text.Mem_PoolBlkGetNbrAvail:0000000000000000 $t
     /tmp/cc3qzkyx.s:2634   .text.Mem_PoolBlkGetNbrAvail:0000000000000000 Mem_PoolBlkGetNbrAvail
     /tmp/cc3qzkyx.s:2688   .text.Mem_DynPoolCreate:0000000000000000 $t
     /tmp/cc3qzkyx.s:2695   .text.Mem_DynPoolCreate:0000000000000000 Mem_DynPoolCreate
     /tmp/cc3qzkyx.s:2748   .text.Mem_DynPoolCreate:000000000000002c $d
     /tmp/cc3qzkyx.s:2753   .text.Mem_DynPoolCreateHW:0000000000000000 $t
     /tmp/cc3qzkyx.s:2760   .text.Mem_DynPoolCreateHW:0000000000000000 Mem_DynPoolCreateHW
     /tmp/cc3qzkyx.s:2813   .text.Mem_DynPoolCreateHW:0000000000000028 $d
     /tmp/cc3qzkyx.s:2818   .text.Mem_DynPoolBlkGet:0000000000000000 $t
     /tmp/cc3qzkyx.s:2825   .text.Mem_DynPoolBlkGet:0000000000000000 Mem_DynPoolBlkGet
     /tmp/cc3qzkyx.s:2997   .text.Mem_DynPoolBlkFree:0000000000000000 $t
     /tmp/cc3qzkyx.s:3004   .text.Mem_DynPoolBlkFree:0000000000000000 Mem_DynPoolBlkFree
     /tmp/cc3qzkyx.s:3105   .text.Mem_DynPoolBlkNbrAvailGet:0000000000000000 $t
     /tmp/cc3qzkyx.s:3112   .text.Mem_DynPoolBlkNbrAvailGet:0000000000000000 Mem_DynPoolBlkNbrAvailGet
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_mem.h.119.ae80dab17a38b21876d7c4e43b8e22e5
                           .group:0000000000000000 wm4.lib_math.h.71.573f4f2b01b7c6b014b60b4987cfb00b
                           .group:0000000000000000 wm4.lib_str.h.60.32f6cabaf9bf142bd5051c414a220578
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.lib_str.h.174.5879a17e9fe25aed81d2c99c1603a671

UNDEFINED SYMBOLS
CPU_SR_Save
CPU_SR_Restore
CPU_SW_Exception

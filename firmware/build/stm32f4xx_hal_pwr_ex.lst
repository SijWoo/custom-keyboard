ARM GAS  /tmp/cczpuxA8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWREx_EnableBkUpReg,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWREx_EnableBkUpReg
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_PWREx_EnableBkUpReg:
  27              	.LFB130:
  28              		.file 1 "bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c"
   1:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
   2:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   ******************************************************************************
   3:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @file    stm32f4xx_hal_pwr_ex.c
   4:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following 
   7:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *          functionalities of PWR extension peripheral:           
   8:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *           + Peripheral Extended features functions
   9:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *         
  10:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   ******************************************************************************
  11:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @attention
  12:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *
  13:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  14:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * All rights reserved.</center></h2>
  15:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *
  16:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  17:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * the "License"; You may not use this file except in compliance with the
  18:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * License. You may obtain a copy of the License at:
  19:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  20:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *
  21:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   ******************************************************************************
  22:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */ 
  23:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  24:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  25:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #include "stm32f4xx_hal.h"
  26:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  27:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /** @addtogroup STM32F4xx_HAL_Driver
  28:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @{
  29:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
  30:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/cczpuxA8.s 			page 2


  31:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  32:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief PWR HAL module driver
  33:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @{
  34:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
  35:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  36:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  37:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  38:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  39:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  40:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /** @addtogroup PWREx_Private_Constants
  41:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @{
  42:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */    
  43:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #define PWR_OVERDRIVE_TIMEOUT_VALUE  1000U
  44:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #define PWR_UDERDRIVE_TIMEOUT_VALUE  1000U
  45:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #define PWR_BKPREG_TIMEOUT_VALUE     1000U
  46:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #define PWR_VOSRDY_TIMEOUT_VALUE     1000U
  47:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
  48:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @}
  49:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
  50:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  51:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****    
  52:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  53:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  54:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  55:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /* Private functions ---------------------------------------------------------*/
  56:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWREx Exported Functions
  57:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *  @{
  58:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
  59:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  60:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Peripheral Extended features functions 
  61:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *  @brief Peripheral Extended features functions 
  62:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *
  63:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** @verbatim   
  64:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  65:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****  ===============================================================================
  66:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****                  ##### Peripheral extended features functions #####
  67:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****  ===============================================================================
  68:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  69:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     *** Main and Backup Regulators configuration ***
  70:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     ================================================
  71:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     [..] 
  72:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       (+) The backup domain includes 4 Kbytes of backup SRAM accessible only from 
  73:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           the CPU, and address in 32-bit, 16-bit or 8-bit mode. Its content is 
  74:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           retained even in Standby or VBAT mode when the low power backup regulator
  75:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           is enabled. It can be considered as an internal EEPROM when VBAT is 
  76:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           always present. You can use the HAL_PWREx_EnableBkUpReg() function to 
  77:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           enable the low power backup regulator. 
  78:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  79:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       (+) When the backup domain is supplied by VDD (analog switch connected to VDD) 
  80:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           the backup SRAM is powered from VDD which replaces the VBAT power supply to 
  81:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           save battery life.
  82:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  83:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       (+) The backup SRAM is not mass erased by a tamper event. It is read 
  84:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           protected to prevent confidential data, such as cryptographic private 
  85:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           key, from being accessed. The backup SRAM can be erased only through 
  86:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           the Flash interface when a protection level change from level 1 to 
  87:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           level 0 is requested. 
ARM GAS  /tmp/cczpuxA8.s 			page 3


  88:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       -@- Refer to the description of Read protection (RDP) in the Flash 
  89:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           programming manual.
  90:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  91:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       (+) The main internal regulator can be configured to have a tradeoff between 
  92:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           performance and power consumption when the device does not operate at 
  93:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           the maximum frequency. This is done through __HAL_PWR_MAINREGULATORMODE_CONFIG() 
  94:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           macro which configure VOS bit in PWR_CR register
  95:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           
  96:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****         Refer to the product datasheets for more details.
  97:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
  98:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     *** FLASH Power Down configuration ****
  99:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     =======================================
 100:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     [..] 
 101:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       (+) By setting the FPDS bit in the PWR_CR register by using the 
 102:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           HAL_PWREx_EnableFlashPowerDown() function, the Flash memory also enters power 
 103:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           down mode when the device enters Stop mode. When the Flash memory 
 104:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           is in power down mode, an additional startup delay is incurred when 
 105:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           waking up from Stop mode.
 106:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****           
 107:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****            (+) For STM32F42xxx/43xxx/446xx/469xx/479xx Devices, the scale can be modified only when
 108:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****            is OFF and the HSI or HSE clock source is selected as system clock. 
 109:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****            The new value programmed is active only when the PLL is ON.
 110:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****            When the PLL is OFF, the voltage scale 3 is automatically selected. 
 111:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****         Refer to the datasheets for more details.
 112:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 113:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     *** Over-Drive and Under-Drive configuration ****
 114:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     =================================================
 115:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     [..]         
 116:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****        (+) For STM32F42xxx/43xxx/446xx/469xx/479xx Devices, in Run mode: the main regulator has
 117:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****            2 operating modes available:
 118:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****         (++) Normal mode: The CPU and core logic operate at maximum frequency at a given 
 119:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****              voltage scaling (scale 1, scale 2 or scale 3)
 120:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****         (++) Over-drive mode: This mode allows the CPU and the core logic to operate at a 
 121:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****             higher frequency than the normal mode for a given voltage scaling (scale 1,  
 122:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****             scale 2 or scale 3). This mode is enabled through HAL_PWREx_EnableOverDrive() function 
 123:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****             disabled by HAL_PWREx_DisableOverDrive() function, to enter or exit from Over-drive mod
 124:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****             the sequence described in Reference manual.
 125:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****              
 126:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****        (+) For STM32F42xxx/43xxx/446xx/469xx/479xx Devices, in Stop mode: the main regulator or low
 127:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****            supplies a low power voltage to the 1.2V domain, thus preserving the content of register
 128:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****            and internal SRAM. 2 operating modes are available:
 129:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****          (++) Normal mode: the 1.2V domain is preserved in nominal leakage mode. This mode is only 
 130:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****               available when the main regulator or the low power regulator is used in Scale 3 or 
 131:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****               low voltage mode.
 132:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****          (++) Under-drive mode: the 1.2V domain is preserved in reduced leakage mode. This mode is 
 133:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****               available when the main regulator or the low power regulator is in low voltage mode.
 134:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 135:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** @endverbatim
 136:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @{
 137:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 138:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 139:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 140:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Enables the Backup Regulator.
 141:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval HAL status
 142:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 143:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableBkUpReg(void)
 144:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
ARM GAS  /tmp/cczpuxA8.s 			page 4


  29              		.loc 1 144 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
 145:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   uint32_t tickstart = 0U;
  38              		.loc 1 145 3 view .LVU1
  39              	.LVL0:
 146:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 147:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *(__IO uint32_t *) CSR_BRE_BB = (uint32_t)ENABLE;
  40              		.loc 1 147 3 view .LVU2
  41              		.loc 1 147 33 is_stmt 0 view .LVU3
  42 0002 0A4B     		ldr	r3, .L8
  43 0004 0122     		movs	r2, #1
  44 0006 1A60     		str	r2, [r3]
 148:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 149:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   /* Get tick */
 150:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
  45              		.loc 1 150 3 is_stmt 1 view .LVU4
  46              		.loc 1 150 15 is_stmt 0 view .LVU5
  47 0008 FFF7FEFF 		bl	HAL_GetTick
  48              	.LVL1:
  49 000c 0446     		mov	r4, r0
  50              	.LVL2:
 151:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 152:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   /* Wait till Backup regulator ready flag is set */  
 153:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) == RESET)
  51              		.loc 1 153 3 is_stmt 1 view .LVU6
  52              	.L2:
  53              		.loc 1 153 8 view .LVU7
  54              		.loc 1 153 9 is_stmt 0 view .LVU8
  55 000e 084B     		ldr	r3, .L8+4
  56 0010 5B68     		ldr	r3, [r3, #4]
  57              		.loc 1 153 8 view .LVU9
  58 0012 13F0080F 		tst	r3, #8
  59 0016 07D1     		bne	.L7
 154:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   {
 155:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_BKPREG_TIMEOUT_VALUE)
  60              		.loc 1 155 5 is_stmt 1 view .LVU10
  61              		.loc 1 155 9 is_stmt 0 view .LVU11
  62 0018 FFF7FEFF 		bl	HAL_GetTick
  63              	.LVL3:
  64              		.loc 1 155 23 view .LVU12
  65 001c 001B     		subs	r0, r0, r4
  66              		.loc 1 155 7 view .LVU13
  67 001e B0F57A7F 		cmp	r0, #1000
  68 0022 F4D9     		bls	.L2
 156:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     {
 157:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
  69              		.loc 1 157 14 view .LVU14
  70 0024 0320     		movs	r0, #3
  71 0026 00E0     		b	.L3
  72              	.L7:
ARM GAS  /tmp/cczpuxA8.s 			page 5


 158:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     } 
 159:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   }
 160:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   return HAL_OK;
  73              		.loc 1 160 10 view .LVU15
  74 0028 0020     		movs	r0, #0
  75              	.L3:
 161:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
  76              		.loc 1 161 1 view .LVU16
  77 002a 10BD     		pop	{r4, pc}
  78              	.LVL4:
  79              	.L9:
  80              		.loc 1 161 1 view .LVU17
  81              		.align	2
  82              	.L8:
  83 002c A4000E42 		.word	1108213924
  84 0030 00700040 		.word	1073770496
  85              		.cfi_endproc
  86              	.LFE130:
  88              		.section	.text.HAL_PWREx_DisableBkUpReg,"ax",%progbits
  89              		.align	1
  90              		.global	HAL_PWREx_DisableBkUpReg
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv4-sp-d16
  96              	HAL_PWREx_DisableBkUpReg:
  97              	.LFB131:
 162:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 163:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 164:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Disables the Backup Regulator.
 165:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval HAL status
 166:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 167:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableBkUpReg(void)
 168:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
  98              		.loc 1 168 1 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102 0000 10B5     		push	{r4, lr}
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
 169:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   uint32_t tickstart = 0U;
 107              		.loc 1 169 3 view .LVU19
 108              	.LVL5:
 170:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 171:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *(__IO uint32_t *) CSR_BRE_BB = (uint32_t)DISABLE;
 109              		.loc 1 171 3 view .LVU20
 110              		.loc 1 171 33 is_stmt 0 view .LVU21
 111 0002 0A4B     		ldr	r3, .L17
 112 0004 0022     		movs	r2, #0
 113 0006 1A60     		str	r2, [r3]
 172:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 173:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   /* Get tick */
 174:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 114              		.loc 1 174 3 is_stmt 1 view .LVU22
ARM GAS  /tmp/cczpuxA8.s 			page 6


 115              		.loc 1 174 15 is_stmt 0 view .LVU23
 116 0008 FFF7FEFF 		bl	HAL_GetTick
 117              	.LVL6:
 118 000c 0446     		mov	r4, r0
 119              	.LVL7:
 175:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 176:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   /* Wait till Backup regulator ready flag is set */  
 177:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) != RESET)
 120              		.loc 1 177 3 is_stmt 1 view .LVU24
 121              	.L11:
 122              		.loc 1 177 8 view .LVU25
 123              		.loc 1 177 9 is_stmt 0 view .LVU26
 124 000e 084B     		ldr	r3, .L17+4
 125 0010 5B68     		ldr	r3, [r3, #4]
 126              		.loc 1 177 8 view .LVU27
 127 0012 13F0080F 		tst	r3, #8
 128 0016 07D0     		beq	.L16
 178:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   {
 179:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_BKPREG_TIMEOUT_VALUE)
 129              		.loc 1 179 5 is_stmt 1 view .LVU28
 130              		.loc 1 179 9 is_stmt 0 view .LVU29
 131 0018 FFF7FEFF 		bl	HAL_GetTick
 132              	.LVL8:
 133              		.loc 1 179 23 view .LVU30
 134 001c 001B     		subs	r0, r0, r4
 135              		.loc 1 179 7 view .LVU31
 136 001e B0F57A7F 		cmp	r0, #1000
 137 0022 F4D9     		bls	.L11
 180:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     {
 181:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 138              		.loc 1 181 14 view .LVU32
 139 0024 0320     		movs	r0, #3
 140 0026 00E0     		b	.L12
 141              	.L16:
 182:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     } 
 183:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   }
 184:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   return HAL_OK;
 142              		.loc 1 184 10 view .LVU33
 143 0028 0020     		movs	r0, #0
 144              	.L12:
 185:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 145              		.loc 1 185 1 view .LVU34
 146 002a 10BD     		pop	{r4, pc}
 147              	.LVL9:
 148              	.L18:
 149              		.loc 1 185 1 view .LVU35
 150              		.align	2
 151              	.L17:
 152 002c A4000E42 		.word	1108213924
 153 0030 00700040 		.word	1073770496
 154              		.cfi_endproc
 155              	.LFE131:
 157              		.section	.text.HAL_PWREx_EnableFlashPowerDown,"ax",%progbits
 158              		.align	1
 159              		.global	HAL_PWREx_EnableFlashPowerDown
 160              		.syntax unified
 161              		.thumb
ARM GAS  /tmp/cczpuxA8.s 			page 7


 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	HAL_PWREx_EnableFlashPowerDown:
 166              	.LFB132:
 186:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 187:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 188:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Enables the Flash Power Down in Stop mode.
 189:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval None
 190:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 191:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableFlashPowerDown(void)
 192:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
 167              		.loc 1 192 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 193:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *(__IO uint32_t *) CR_FPDS_BB = (uint32_t)ENABLE;
 172              		.loc 1 193 3 view .LVU37
 173              		.loc 1 193 33 is_stmt 0 view .LVU38
 174 0000 014B     		ldr	r3, .L20
 175 0002 0122     		movs	r2, #1
 176 0004 1A60     		str	r2, [r3]
 194:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 177              		.loc 1 194 1 view .LVU39
 178 0006 7047     		bx	lr
 179              	.L21:
 180              		.align	2
 181              	.L20:
 182 0008 24000E42 		.word	1108213796
 183              		.cfi_endproc
 184              	.LFE132:
 186              		.section	.text.HAL_PWREx_DisableFlashPowerDown,"ax",%progbits
 187              		.align	1
 188              		.global	HAL_PWREx_DisableFlashPowerDown
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu fpv4-sp-d16
 194              	HAL_PWREx_DisableFlashPowerDown:
 195              	.LFB133:
 195:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 196:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 197:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Disables the Flash Power Down in Stop mode.
 198:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval None
 199:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 200:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableFlashPowerDown(void)
 201:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
 196              		.loc 1 201 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 202:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *(__IO uint32_t *) CR_FPDS_BB = (uint32_t)DISABLE;
 201              		.loc 1 202 3 view .LVU41
 202              		.loc 1 202 33 is_stmt 0 view .LVU42
 203 0000 014B     		ldr	r3, .L23
 204 0002 0022     		movs	r2, #0
ARM GAS  /tmp/cczpuxA8.s 			page 8


 205 0004 1A60     		str	r2, [r3]
 203:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 206              		.loc 1 203 1 view .LVU43
 207 0006 7047     		bx	lr
 208              	.L24:
 209              		.align	2
 210              	.L23:
 211 0008 24000E42 		.word	1108213796
 212              		.cfi_endproc
 213              	.LFE133:
 215              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
 216              		.align	1
 217              		.global	HAL_PWREx_GetVoltageRange
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu fpv4-sp-d16
 223              	HAL_PWREx_GetVoltageRange:
 224              	.LFB134:
 204:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 205:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 206:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
 207:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval The configured scale for the regulator voltage(VOS bit field).
 208:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *         The returned value can be one of the following:
 209:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *            - @arg PWR_REGULATOR_VOLTAGE_SCALE1: Regulator voltage output Scale 1 mode
 210:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *            - @arg PWR_REGULATOR_VOLTAGE_SCALE2: Regulator voltage output Scale 2 mode
 211:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *            - @arg PWR_REGULATOR_VOLTAGE_SCALE3: Regulator voltage output Scale 3 mode
 212:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */  
 213:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 214:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
 225              		.loc 1 214 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 215:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   return (PWR->CR & PWR_CR_VOS);
 230              		.loc 1 215 3 view .LVU45
 231              		.loc 1 215 14 is_stmt 0 view .LVU46
 232 0000 024B     		ldr	r3, .L26
 233 0002 1868     		ldr	r0, [r3]
 216:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 234              		.loc 1 216 1 view .LVU47
 235 0004 00F44040 		and	r0, r0, #49152
 236 0008 7047     		bx	lr
 237              	.L27:
 238 000a 00BF     		.align	2
 239              	.L26:
 240 000c 00700040 		.word	1073770496
 241              		.cfi_endproc
 242              	.LFE134:
 244              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
 245              		.align	1
 246              		.global	HAL_PWREx_ControlVoltageScaling
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cczpuxA8.s 			page 9


 252              	HAL_PWREx_ControlVoltageScaling:
 253              	.LVL10:
 254              	.LFB135:
 217:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 218:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)
 219:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 220:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Configures the main internal regulator output voltage.
 221:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @param  VoltageScaling specifies the regulator output voltage to achieve
 222:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 223:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 224:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE1: Regulator voltage output range 1 mode,
 225:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *                                               the maximum value of fHCLK = 168 MHz.
 226:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE2: Regulator voltage output range 2 mode,
 227:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *                                               the maximum value of fHCLK = 144 MHz.
 228:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 229:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        a value below 144 MHz before calling HAL_PWREx_ConfigVoltageScaling() API.
 230:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 231:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        a value up to 168 MHz after calling HAL_PWREx_ConfigVoltageScaling() API.
 232:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval HAL Status
 233:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 234:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 235:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
 236:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   uint32_t tickstart = 0U;
 237:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   
 238:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 239:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   
 240:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   /* Enable PWR RCC Clock Peripheral */
 241:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 242:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   
 243:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   /* Set Range */
 244:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(VoltageScaling);
 245:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   
 246:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   /* Get Start Tick*/
 247:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 248:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   while((__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY) == RESET))
 249:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   {
 250:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_VOSRDY_TIMEOUT_VALUE)
 251:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     {
 252:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 253:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     } 
 254:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   }
 255:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 256:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   return HAL_OK;
 257:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 258:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 259:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #elif defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) 
 260:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) 
 261:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       defined(STM32F410Rx) || defined(STM32F411xE) || defined(STM32F446xx) || defined(STM32F469xx) 
 262:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx) || defined(STM32F412Rx) 
 263:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       defined(STM32F412Cx) || defined(STM32F413xx) || defined(STM32F423xx)
 264:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 265:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Configures the main internal regulator output voltage.
 266:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @param  VoltageScaling specifies the regulator output voltage to achieve
 267:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 268:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 269:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE1: Regulator voltage output range 1 mode,
 270:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *                                               the maximum value of fHCLK is 168 MHz. It can be 
ARM GAS  /tmp/cczpuxA8.s 			page 10


 271:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *                                               180 MHz by activating the over-drive mode.
 272:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE2: Regulator voltage output range 2 mode,
 273:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *                                               the maximum value of fHCLK is 144 MHz. It can be 
 274:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *                                               168 MHz by activating the over-drive mode.
 275:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE3: Regulator voltage output range 3 mode,
 276:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *                                               the maximum value of fHCLK is 120 MHz.
 277:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note To update the system clock frequency(SYSCLK):
 278:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        - Set the HSI or HSE as system clock frequency using the HAL_RCC_ClockConfig().
 279:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        - Call the HAL_RCC_OscConfig() to configure the PLL.
 280:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        - Call HAL_PWREx_ConfigVoltageScaling() API to adjust the voltage scale.
 281:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        - Set the new system clock frequency using the HAL_RCC_ClockConfig().
 282:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note The scale can be modified only when the HSI or HSE clock source is selected 
 283:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        as system clock source, otherwise the API returns HAL_ERROR.  
 284:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note When the PLL is OFF, the voltage scale 3 is automatically selected and the VOS bits
 285:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *       value in the PWR_CR1 register are not taken in account.
 286:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note This API forces the PLL state ON to allow the possibility to configure the voltage scale 
 287:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note The new voltage scale is active only when the PLL is ON.  
 288:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval HAL Status
 289:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 290:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 291:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
 255              		.loc 1 291 1 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 8
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		.loc 1 291 1 is_stmt 0 view .LVU49
 260 0000 30B5     		push	{r4, r5, lr}
 261              	.LCFI2:
 262              		.cfi_def_cfa_offset 12
 263              		.cfi_offset 4, -12
 264              		.cfi_offset 5, -8
 265              		.cfi_offset 14, -4
 266 0002 83B0     		sub	sp, sp, #12
 267              	.LCFI3:
 268              		.cfi_def_cfa_offset 24
 292:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   uint32_t tickstart = 0U;
 269              		.loc 1 292 3 is_stmt 1 view .LVU50
 270              	.LVL11:
 293:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   
 294:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 271              		.loc 1 294 3 view .LVU51
 295:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   
 296:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   /* Enable PWR RCC Clock Peripheral */
 297:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 272              		.loc 1 297 3 view .LVU52
 273              	.LBB2:
 274              		.loc 1 297 3 view .LVU53
 275 0004 0023     		movs	r3, #0
 276 0006 0093     		str	r3, [sp]
 277              		.loc 1 297 3 view .LVU54
 278 0008 2A4B     		ldr	r3, .L44
 279 000a 1A6C     		ldr	r2, [r3, #64]
 280 000c 42F08052 		orr	r2, r2, #268435456
 281 0010 1A64     		str	r2, [r3, #64]
 282              		.loc 1 297 3 view .LVU55
 283 0012 1A6C     		ldr	r2, [r3, #64]
 284 0014 02F08052 		and	r2, r2, #268435456
ARM GAS  /tmp/cczpuxA8.s 			page 11


 285 0018 0092     		str	r2, [sp]
 286              		.loc 1 297 3 view .LVU56
 287 001a 009A     		ldr	r2, [sp]
 288              	.LBE2:
 289              		.loc 1 297 3 view .LVU57
 298:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   
 299:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   /* Check if the PLL is used as system clock or not */
 300:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 290              		.loc 1 300 3 view .LVU58
 291              		.loc 1 300 6 is_stmt 0 view .LVU59
 292 001c 9B68     		ldr	r3, [r3, #8]
 293 001e 03F00C03 		and	r3, r3, #12
 294              		.loc 1 300 5 view .LVU60
 295 0022 082B     		cmp	r3, #8
 296 0024 43D0     		beq	.L36
 297 0026 0546     		mov	r5, r0
 301:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   {
 302:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     /* Disable the main PLL */
 303:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     __HAL_RCC_PLL_DISABLE();
 298              		.loc 1 303 5 is_stmt 1 view .LVU61
 299 0028 234B     		ldr	r3, .L44+4
 300 002a 0022     		movs	r2, #0
 301 002c 1A60     		str	r2, [r3]
 304:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     
 305:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     /* Get Start Tick */
 306:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();    
 302              		.loc 1 306 5 view .LVU62
 303              		.loc 1 306 17 is_stmt 0 view .LVU63
 304 002e FFF7FEFF 		bl	HAL_GetTick
 305              	.LVL12:
 306              		.loc 1 306 17 view .LVU64
 307 0032 0446     		mov	r4, r0
 308              	.LVL13:
 307:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     /* Wait till PLL is disabled */  
 308:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 309              		.loc 1 308 5 is_stmt 1 view .LVU65
 310              	.L30:
 311              		.loc 1 308 10 view .LVU66
 312              		.loc 1 308 11 is_stmt 0 view .LVU67
 313 0034 1F4B     		ldr	r3, .L44
 314 0036 1B68     		ldr	r3, [r3]
 315              		.loc 1 308 10 view .LVU68
 316 0038 13F0007F 		tst	r3, #33554432
 317 003c 06D0     		beq	.L41
 309:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     {
 310:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 318              		.loc 1 310 7 is_stmt 1 view .LVU69
 319              		.loc 1 310 11 is_stmt 0 view .LVU70
 320 003e FFF7FEFF 		bl	HAL_GetTick
 321              	.LVL14:
 322              		.loc 1 310 25 view .LVU71
 323 0042 031B     		subs	r3, r0, r4
 324              		.loc 1 310 9 view .LVU72
 325 0044 022B     		cmp	r3, #2
 326 0046 F5D9     		bls	.L30
 311:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       {
 312:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/cczpuxA8.s 			page 12


 327              		.loc 1 312 16 view .LVU73
 328 0048 0320     		movs	r0, #3
 329 004a 31E0     		b	.L29
 330              	.L41:
 313:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       }
 314:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     }
 315:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     
 316:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     /* Set Range */
 317:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(VoltageScaling);
 331              		.loc 1 317 5 is_stmt 1 view .LVU74
 332              	.LBB3:
 333              		.loc 1 317 5 view .LVU75
 334 004c 0023     		movs	r3, #0
 335 004e 0193     		str	r3, [sp, #4]
 336              		.loc 1 317 5 view .LVU76
 337 0050 1A4A     		ldr	r2, .L44+8
 338 0052 1368     		ldr	r3, [r2]
 339 0054 23F44043 		bic	r3, r3, #49152
 340 0058 1D43     		orrs	r5, r5, r3
 341              	.LVL15:
 342              		.loc 1 317 5 is_stmt 0 view .LVU77
 343 005a 1560     		str	r5, [r2]
 344              		.loc 1 317 5 is_stmt 1 view .LVU78
 345 005c 1368     		ldr	r3, [r2]
 346 005e 03F44043 		and	r3, r3, #49152
 347 0062 0193     		str	r3, [sp, #4]
 348              		.loc 1 317 5 view .LVU79
 349 0064 019B     		ldr	r3, [sp, #4]
 350              	.LBE3:
 351              		.loc 1 317 5 view .LVU80
 318:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     
 319:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     /* Enable the main PLL */
 320:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     __HAL_RCC_PLL_ENABLE();
 352              		.loc 1 320 5 view .LVU81
 353 0066 144B     		ldr	r3, .L44+4
 354 0068 0122     		movs	r2, #1
 355 006a 1A60     		str	r2, [r3]
 321:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     
 322:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     /* Get Start Tick */
 323:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();
 356              		.loc 1 323 5 view .LVU82
 357              		.loc 1 323 17 is_stmt 0 view .LVU83
 358 006c FFF7FEFF 		bl	HAL_GetTick
 359              	.LVL16:
 360 0070 0446     		mov	r4, r0
 361              	.LVL17:
 324:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     /* Wait till PLL is ready */  
 325:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 362              		.loc 1 325 5 is_stmt 1 view .LVU84
 363              	.L32:
 364              		.loc 1 325 10 view .LVU85
 365              		.loc 1 325 11 is_stmt 0 view .LVU86
 366 0072 104B     		ldr	r3, .L44
 367 0074 1B68     		ldr	r3, [r3]
 368              		.loc 1 325 10 view .LVU87
 369 0076 13F0007F 		tst	r3, #33554432
 370 007a 06D1     		bne	.L42
ARM GAS  /tmp/cczpuxA8.s 			page 13


 326:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     {
 327:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 371              		.loc 1 327 7 is_stmt 1 view .LVU88
 372              		.loc 1 327 11 is_stmt 0 view .LVU89
 373 007c FFF7FEFF 		bl	HAL_GetTick
 374              	.LVL18:
 375              		.loc 1 327 25 view .LVU90
 376 0080 001B     		subs	r0, r0, r4
 377              		.loc 1 327 9 view .LVU91
 378 0082 0228     		cmp	r0, #2
 379 0084 F5D9     		bls	.L32
 328:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       {
 329:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 380              		.loc 1 329 16 view .LVU92
 381 0086 0320     		movs	r0, #3
 382 0088 12E0     		b	.L29
 383              	.L42:
 330:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       } 
 331:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     }
 332:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     
 333:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     /* Get Start Tick */
 334:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();
 384              		.loc 1 334 5 is_stmt 1 view .LVU93
 385              		.loc 1 334 17 is_stmt 0 view .LVU94
 386 008a FFF7FEFF 		bl	HAL_GetTick
 387              	.LVL19:
 388 008e 0446     		mov	r4, r0
 389              	.LVL20:
 335:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     while((__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY) == RESET))
 390              		.loc 1 335 5 is_stmt 1 view .LVU95
 391              	.L34:
 392              		.loc 1 335 10 view .LVU96
 393              		.loc 1 335 12 is_stmt 0 view .LVU97
 394 0090 0A4B     		ldr	r3, .L44+8
 395 0092 5B68     		ldr	r3, [r3, #4]
 396              		.loc 1 335 10 view .LVU98
 397 0094 13F4804F 		tst	r3, #16384
 398 0098 07D1     		bne	.L43
 336:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     {
 337:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PWR_VOSRDY_TIMEOUT_VALUE)
 399              		.loc 1 337 7 is_stmt 1 view .LVU99
 400              		.loc 1 337 11 is_stmt 0 view .LVU100
 401 009a FFF7FEFF 		bl	HAL_GetTick
 402              	.LVL21:
 403              		.loc 1 337 25 view .LVU101
 404 009e 001B     		subs	r0, r0, r4
 405              		.loc 1 337 9 view .LVU102
 406 00a0 B0F57A7F 		cmp	r0, #1000
 407 00a4 F4D9     		bls	.L34
 338:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       {
 339:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 408              		.loc 1 339 16 view .LVU103
 409 00a6 0320     		movs	r0, #3
 410 00a8 02E0     		b	.L29
 411              	.L43:
 340:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****       } 
 341:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     }
ARM GAS  /tmp/cczpuxA8.s 			page 14


 342:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   }
 343:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   else
 344:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   {
 345:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     return HAL_ERROR;
 346:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   }
 347:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 348:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   return HAL_OK;
 412              		.loc 1 348 10 view .LVU104
 413 00aa 0020     		movs	r0, #0
 414 00ac 00E0     		b	.L29
 415              	.LVL22:
 416              	.L36:
 345:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   }
 417              		.loc 1 345 12 view .LVU105
 418 00ae 0120     		movs	r0, #1
 419              	.LVL23:
 420              	.L29:
 349:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 421              		.loc 1 349 1 view .LVU106
 422 00b0 03B0     		add	sp, sp, #12
 423              	.LCFI4:
 424              		.cfi_def_cfa_offset 12
 425              		@ sp needed
 426 00b2 30BD     		pop	{r4, r5, pc}
 427              	.L45:
 428              		.align	2
 429              	.L44:
 430 00b4 00380240 		.word	1073887232
 431 00b8 60004742 		.word	1111949408
 432 00bc 00700040 		.word	1073770496
 433              		.cfi_endproc
 434              	.LFE135:
 436              		.section	.text.HAL_PWREx_EnableMainRegulatorLowVoltage,"ax",%progbits
 437              		.align	1
 438              		.global	HAL_PWREx_EnableMainRegulatorLowVoltage
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	HAL_PWREx_EnableMainRegulatorLowVoltage:
 445              	.LFB136:
 350:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #endif /* STM32F405xx || STM32F415xx || STM32F407xx || STM32F417xx */
 351:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 352:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 353:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     defined(STM32F411xE) || defined(STM32F412Zx) || defined(STM32F412Vx) || defined(STM32F412Rx) ||
 354:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****     defined(STM32F413xx) || defined(STM32F423xx)
 355:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 356:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Enables Main Regulator low voltage mode.
 357:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note  This mode is only available for STM32F401xx/STM32F410xx/STM32F411xx/STM32F412Zx/STM32F41
 358:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        STM32F413xx/STM32F423xx devices.   
 359:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval None
 360:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 361:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableMainRegulatorLowVoltage(void)
 362:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
 446              		.loc 1 362 1 is_stmt 1 view -0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cczpuxA8.s 			page 15


 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 363:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *(__IO uint32_t *) CR_MRLVDS_BB = (uint32_t)ENABLE;
 451              		.loc 1 363 3 view .LVU108
 452              		.loc 1 363 35 is_stmt 0 view .LVU109
 453 0000 014B     		ldr	r3, .L47
 454 0002 0122     		movs	r2, #1
 455 0004 1A60     		str	r2, [r3]
 364:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 456              		.loc 1 364 1 view .LVU110
 457 0006 7047     		bx	lr
 458              	.L48:
 459              		.align	2
 460              	.L47:
 461 0008 2C000E42 		.word	1108213804
 462              		.cfi_endproc
 463              	.LFE136:
 465              		.section	.text.HAL_PWREx_DisableMainRegulatorLowVoltage,"ax",%progbits
 466              		.align	1
 467              		.global	HAL_PWREx_DisableMainRegulatorLowVoltage
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv4-sp-d16
 473              	HAL_PWREx_DisableMainRegulatorLowVoltage:
 474              	.LFB137:
 365:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 366:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 367:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Disables Main Regulator low voltage mode.
 368:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note  This mode is only available for STM32F401xx/STM32F410xx/STM32F411xx/STM32F412Zx/STM32F41
 369:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        STM32F413xx/STM32F423xxdevices. 
 370:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval None
 371:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 372:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableMainRegulatorLowVoltage(void)
 373:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
 475              		.loc 1 373 1 is_stmt 1 view -0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 374:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *(__IO uint32_t *) CR_MRLVDS_BB = (uint32_t)DISABLE;
 480              		.loc 1 374 3 view .LVU112
 481              		.loc 1 374 35 is_stmt 0 view .LVU113
 482 0000 014B     		ldr	r3, .L50
 483 0002 0022     		movs	r2, #0
 484 0004 1A60     		str	r2, [r3]
 375:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 485              		.loc 1 375 1 view .LVU114
 486 0006 7047     		bx	lr
 487              	.L51:
 488              		.align	2
 489              	.L50:
 490 0008 2C000E42 		.word	1108213804
 491              		.cfi_endproc
 492              	.LFE137:
 494              		.section	.text.HAL_PWREx_EnableLowRegulatorLowVoltage,"ax",%progbits
 495              		.align	1
ARM GAS  /tmp/cczpuxA8.s 			page 16


 496              		.global	HAL_PWREx_EnableLowRegulatorLowVoltage
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu fpv4-sp-d16
 502              	HAL_PWREx_EnableLowRegulatorLowVoltage:
 503              	.LFB138:
 376:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 377:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 378:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Enables Low Power Regulator low voltage mode.
 379:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note  This mode is only available for STM32F401xx/STM32F410xx/STM32F411xx/STM32F412Zx/STM32F41
 380:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        STM32F413xx/STM32F423xx devices.   
 381:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval None
 382:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 383:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowRegulatorLowVoltage(void)
 384:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
 504              		.loc 1 384 1 is_stmt 1 view -0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 385:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *(__IO uint32_t *) CR_LPLVDS_BB = (uint32_t)ENABLE;
 509              		.loc 1 385 3 view .LVU116
 510              		.loc 1 385 35 is_stmt 0 view .LVU117
 511 0000 014B     		ldr	r3, .L53
 512 0002 0122     		movs	r2, #1
 513 0004 1A60     		str	r2, [r3]
 386:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 514              		.loc 1 386 1 view .LVU118
 515 0006 7047     		bx	lr
 516              	.L54:
 517              		.align	2
 518              	.L53:
 519 0008 28000E42 		.word	1108213800
 520              		.cfi_endproc
 521              	.LFE138:
 523              		.section	.text.HAL_PWREx_DisableLowRegulatorLowVoltage,"ax",%progbits
 524              		.align	1
 525              		.global	HAL_PWREx_DisableLowRegulatorLowVoltage
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	HAL_PWREx_DisableLowRegulatorLowVoltage:
 532              	.LFB139:
 387:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** 
 388:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** /**
 389:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @brief Disables Low Power Regulator low voltage mode.
 390:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @note  This mode is only available for STM32F401xx/STM32F410xx/STM32F411xx/STM32F412Zx/STM32F41
 391:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *        STM32F413xx/STM32F423xx  devices.   
 392:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   * @retval None
 393:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   */
 394:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableLowRegulatorLowVoltage(void)
 395:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** {
 533              		.loc 1 395 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cczpuxA8.s 			page 17


 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 396:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c ****   *(__IO uint32_t *) CR_LPLVDS_BB = (uint32_t)DISABLE;
 538              		.loc 1 396 3 view .LVU120
 539              		.loc 1 396 35 is_stmt 0 view .LVU121
 540 0000 014B     		ldr	r3, .L56
 541 0002 0022     		movs	r2, #0
 542 0004 1A60     		str	r2, [r3]
 397:bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Src/stm32f4xx_hal_pwr_ex.c **** }
 543              		.loc 1 397 1 view .LVU122
 544 0006 7047     		bx	lr
 545              	.L57:
 546              		.align	2
 547              	.L56:
 548 0008 28000E42 		.word	1108213800
 549              		.cfi_endproc
 550              	.LFE139:
 552              		.text
 553              	.Letext0:
 554              		.file 2 "/home/sijin/Git/ARM-Toolchain-Setup/gcc-arm-none-eabi/arm-none-eabi/include/machine/_defa
 555              		.file 3 "/home/sijin/Git/ARM-Toolchain-Setup/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 556              		.file 4 "cmsis/Include/core_cm4.h"
 557              		.file 5 "cmsis/Device/ST/Include/system_stm32f4xx.h"
 558              		.file 6 "cmsis/Device/ST/Include/stm32f413xx.h"
 559              		.file 7 "cmsis/Device/ST/Include/stm32f4xx.h"
 560              		.file 8 "bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Inc/stm32f4xx_hal_def.h"
 561              		.file 9 "bsp/STMicroelectronics/stm32f413/stm32f4xx_hal_driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cczpuxA8.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_pwr_ex.c
     /tmp/cczpuxA8.s:18     .text.HAL_PWREx_EnableBkUpReg:0000000000000000 $t
     /tmp/cczpuxA8.s:26     .text.HAL_PWREx_EnableBkUpReg:0000000000000000 HAL_PWREx_EnableBkUpReg
     /tmp/cczpuxA8.s:83     .text.HAL_PWREx_EnableBkUpReg:000000000000002c $d
     /tmp/cczpuxA8.s:89     .text.HAL_PWREx_DisableBkUpReg:0000000000000000 $t
     /tmp/cczpuxA8.s:96     .text.HAL_PWREx_DisableBkUpReg:0000000000000000 HAL_PWREx_DisableBkUpReg
     /tmp/cczpuxA8.s:152    .text.HAL_PWREx_DisableBkUpReg:000000000000002c $d
     /tmp/cczpuxA8.s:158    .text.HAL_PWREx_EnableFlashPowerDown:0000000000000000 $t
     /tmp/cczpuxA8.s:165    .text.HAL_PWREx_EnableFlashPowerDown:0000000000000000 HAL_PWREx_EnableFlashPowerDown
     /tmp/cczpuxA8.s:182    .text.HAL_PWREx_EnableFlashPowerDown:0000000000000008 $d
     /tmp/cczpuxA8.s:187    .text.HAL_PWREx_DisableFlashPowerDown:0000000000000000 $t
     /tmp/cczpuxA8.s:194    .text.HAL_PWREx_DisableFlashPowerDown:0000000000000000 HAL_PWREx_DisableFlashPowerDown
     /tmp/cczpuxA8.s:211    .text.HAL_PWREx_DisableFlashPowerDown:0000000000000008 $d
     /tmp/cczpuxA8.s:216    .text.HAL_PWREx_GetVoltageRange:0000000000000000 $t
     /tmp/cczpuxA8.s:223    .text.HAL_PWREx_GetVoltageRange:0000000000000000 HAL_PWREx_GetVoltageRange
     /tmp/cczpuxA8.s:240    .text.HAL_PWREx_GetVoltageRange:000000000000000c $d
     /tmp/cczpuxA8.s:245    .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 $t
     /tmp/cczpuxA8.s:252    .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 HAL_PWREx_ControlVoltageScaling
     /tmp/cczpuxA8.s:430    .text.HAL_PWREx_ControlVoltageScaling:00000000000000b4 $d
     /tmp/cczpuxA8.s:437    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:0000000000000000 $t
     /tmp/cczpuxA8.s:444    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:0000000000000000 HAL_PWREx_EnableMainRegulatorLowVoltage
     /tmp/cczpuxA8.s:461    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:0000000000000008 $d
     /tmp/cczpuxA8.s:466    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:0000000000000000 $t
     /tmp/cczpuxA8.s:473    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:0000000000000000 HAL_PWREx_DisableMainRegulatorLowVoltage
     /tmp/cczpuxA8.s:490    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:0000000000000008 $d
     /tmp/cczpuxA8.s:495    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:0000000000000000 $t
     /tmp/cczpuxA8.s:502    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:0000000000000000 HAL_PWREx_EnableLowRegulatorLowVoltage
     /tmp/cczpuxA8.s:519    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:0000000000000008 $d
     /tmp/cczpuxA8.s:524    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:0000000000000000 $t
     /tmp/cczpuxA8.s:531    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:0000000000000000 HAL_PWREx_DisableLowRegulatorLowVoltage
     /tmp/cczpuxA8.s:548    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:0000000000000008 $d
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.stm32f4xx_hal_conf.h.24.49915eda91abe45d897cb4b7f0e0c969
                           .group:0000000000000000 wm4.stm32f4xx.h.55.60c09cb5ab474e463c44285ed7739f1f
                           .group:0000000000000000 wm4.stm32f413xx.h.51.056d3d585e2d067bbb384490eebcddec
                           .group:0000000000000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.f42444deefab66ffa141b9b9fddb57a3
                           .group:0000000000000000 wm4.core_cm4.h.174.059a5e001a9e729091d1407208e93224
                           .group:0000000000000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:0000000000000000 wm4.stm32f413xx.h.931.135ef1268ffd04ff90978aa2b475f8a0
                           .group:0000000000000000 wm4.stm32f4xx.h.212.729f0f890654645a3f47ccc0cc2b00e7
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.394d12941f5a0482dbe3c36ee9e57b2b
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.stm32f4xx_hal_def.h.58.2d2c85d5b9693a63e90566b806e8a752
                           .group:0000000000000000 wm4.stm32f4xx_hal_rcc_ex.h.22.5a8f849a3b0614ab22db1d7c22b7410a
                           .group:0000000000000000 wm4.stm32f4xx_hal_rcc.h.108.0c18a3cfc2dd91bdf92470b4bd0ea1b5
                           .group:0000000000000000 wm4.stm32f4xx_hal_exti.h.22.362bf341926a2fd3363cdafa6cac5f16
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio.h.22.be2c6bcf9722096ea8f49a41bf6aa50c
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio_ex.h.22.bf544e65d63b7ac4a13ca5f7938b821b
ARM GAS  /tmp/cczpuxA8.s 			page 19


                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio.h.264.978ac12eab1d3b3400b35b8c427e2c33
                           .group:0000000000000000 wm4.stm32f4xx_hal_dma.h.22.91874dedf3efdfd19ab60261dcf7928c
                           .group:0000000000000000 wm4.stm32f4xx_hal_dma.h.704.31aa663b064412fd28303766eb63eb65
                           .group:0000000000000000 wm4.stm32f4xx_hal_cortex.h.22.e6aa3b847b5388be63c32d1f9e696ef7
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash.h.22.31b301be2655c3eb8583e51c8231544a
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash_ex.h.22.ebebea52434d28454b2b987fa9e698fc
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash.h.363.51efdf0f6c88f683efb89d7cc95cc1be
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr.h.22.2c27d93ae187efe3a73816f03a329970
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr_ex.h.22.a735ba4f49c5b2574a98d58f3b7ae925
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr.h.337.60b43975c84527a23cb6994b23165a5e
                           .group:0000000000000000 wm4.stm32f4xx_hal.h.72.7cab665cef831b3c8c4718884b1ec523

UNDEFINED SYMBOLS
HAL_GetTick

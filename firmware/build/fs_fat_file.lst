ARM GAS  /tmp/ccKN2FgP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fs_fat_file.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FS_FAT_FileModuleInit,"ax",%progbits
  18              		.align	1
  19              		.global	FS_FAT_FileModuleInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	FS_FAT_FileModuleInit:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "rtos/uC-FS/FAT/fs_fat_file.c"
   1:rtos/uC-FS/FAT/fs_fat_file.c **** /*
   2:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
   3:rtos/uC-FS/FAT/fs_fat_file.c **** *                                                uC/FS
   4:rtos/uC-FS/FAT/fs_fat_file.c **** *                                      The Embedded File System
   5:rtos/uC-FS/FAT/fs_fat_file.c **** *
   6:rtos/uC-FS/FAT/fs_fat_file.c **** *                         (c) Copyright 2008-2019; Silicon Laboratories Inc.,
   7:rtos/uC-FS/FAT/fs_fat_file.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-FS/FAT/fs_fat_file.c **** *
   9:rtos/uC-FS/FAT/fs_fat_file.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-FS/FAT/fs_fat_file.c **** *
  11:rtos/uC-FS/FAT/fs_fat_file.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-FS/FAT/fs_fat_file.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-FS/FAT/fs_fat_file.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-FS/FAT/fs_fat_file.c **** *                  license, you may not use this software.
  15:rtos/uC-FS/FAT/fs_fat_file.c **** *
  16:rtos/uC-FS/FAT/fs_fat_file.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-FS/FAT/fs_fat_file.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-FS/FAT/fs_fat_file.c **** *
  19:rtos/uC-FS/FAT/fs_fat_file.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-FS/FAT/fs_fat_file.c **** *
  21:rtos/uC-FS/FAT/fs_fat_file.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  23:rtos/uC-FS/FAT/fs_fat_file.c **** */
  24:rtos/uC-FS/FAT/fs_fat_file.c **** 
  25:rtos/uC-FS/FAT/fs_fat_file.c **** /*
  26:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  27:rtos/uC-FS/FAT/fs_fat_file.c **** *
  28:rtos/uC-FS/FAT/fs_fat_file.c **** *                                     FILE SYSTEM FAT MANAGEMENT
  29:rtos/uC-FS/FAT/fs_fat_file.c **** *
ARM GAS  /tmp/ccKN2FgP.s 			page 2


  30:rtos/uC-FS/FAT/fs_fat_file.c **** *                                             FILE ACCESS
  31:rtos/uC-FS/FAT/fs_fat_file.c **** *
  32:rtos/uC-FS/FAT/fs_fat_file.c **** * Filename : fs_fat_file.c
  33:rtos/uC-FS/FAT/fs_fat_file.c **** * Version  : v4.07.06
  34:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  35:rtos/uC-FS/FAT/fs_fat_file.c **** */
  36:rtos/uC-FS/FAT/fs_fat_file.c **** 
  37:rtos/uC-FS/FAT/fs_fat_file.c **** /*
  38:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  39:rtos/uC-FS/FAT/fs_fat_file.c **** *                                               MODULE
  40:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  41:rtos/uC-FS/FAT/fs_fat_file.c **** */
  42:rtos/uC-FS/FAT/fs_fat_file.c **** 
  43:rtos/uC-FS/FAT/fs_fat_file.c **** #define  MICRIUM_SOURCE
  44:rtos/uC-FS/FAT/fs_fat_file.c **** #define  FS_FAT_FILE_MODULE
  45:rtos/uC-FS/FAT/fs_fat_file.c **** 
  46:rtos/uC-FS/FAT/fs_fat_file.c **** 
  47:rtos/uC-FS/FAT/fs_fat_file.c **** /*
  48:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  49:rtos/uC-FS/FAT/fs_fat_file.c **** *                                            INCLUDE FILES
  50:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  51:rtos/uC-FS/FAT/fs_fat_file.c **** */
  52:rtos/uC-FS/FAT/fs_fat_file.c **** 
  53:rtos/uC-FS/FAT/fs_fat_file.c **** #include  <lib_mem.h>
  54:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "../Source/fs.h"
  55:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "../Source/fs_buf.h"
  56:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "../Source/fs_cfg_fs.h"
  57:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "../Source/fs_dev.h"
  58:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "../Source/fs_entry.h"
  59:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "../Source/fs_file.h"
  60:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "../Source/fs_vol.h"
  61:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "fs_fat.h"
  62:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "fs_fat_file.h"
  63:rtos/uC-FS/FAT/fs_fat_file.c **** #include  "fs_fat_journal.h"
  64:rtos/uC-FS/FAT/fs_fat_file.c **** 
  65:rtos/uC-FS/FAT/fs_fat_file.c **** 
  66:rtos/uC-FS/FAT/fs_fat_file.c **** /*
  67:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  68:rtos/uC-FS/FAT/fs_fat_file.c **** *                                               MODULE
  69:rtos/uC-FS/FAT/fs_fat_file.c **** *
  70:rtos/uC-FS/FAT/fs_fat_file.c **** * Note(s) : (1) See 'fs_fat.h  MODULE'.
  71:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  72:rtos/uC-FS/FAT/fs_fat_file.c **** */
  73:rtos/uC-FS/FAT/fs_fat_file.c **** 
  74:rtos/uC-FS/FAT/fs_fat_file.c **** #ifdef   FS_FAT_MODULE_PRESENT                                  /* See Note #1.                    
  75:rtos/uC-FS/FAT/fs_fat_file.c **** 
  76:rtos/uC-FS/FAT/fs_fat_file.c **** 
  77:rtos/uC-FS/FAT/fs_fat_file.c **** /*
  78:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  79:rtos/uC-FS/FAT/fs_fat_file.c **** *                                            LOCAL DEFINES
  80:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  81:rtos/uC-FS/FAT/fs_fat_file.c **** */
  82:rtos/uC-FS/FAT/fs_fat_file.c **** 
  83:rtos/uC-FS/FAT/fs_fat_file.c **** 
  84:rtos/uC-FS/FAT/fs_fat_file.c **** /*
  85:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  86:rtos/uC-FS/FAT/fs_fat_file.c **** *                                          LOCAL DATA TYPES
ARM GAS  /tmp/ccKN2FgP.s 			page 3


  87:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  88:rtos/uC-FS/FAT/fs_fat_file.c **** */
  89:rtos/uC-FS/FAT/fs_fat_file.c **** 
  90:rtos/uC-FS/FAT/fs_fat_file.c **** 
  91:rtos/uC-FS/FAT/fs_fat_file.c **** /*
  92:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  93:rtos/uC-FS/FAT/fs_fat_file.c **** *                                           LOCAL CONSTANTS
  94:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
  95:rtos/uC-FS/FAT/fs_fat_file.c **** */
  96:rtos/uC-FS/FAT/fs_fat_file.c **** 
  97:rtos/uC-FS/FAT/fs_fat_file.c **** 
  98:rtos/uC-FS/FAT/fs_fat_file.c **** /*
  99:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 100:rtos/uC-FS/FAT/fs_fat_file.c **** *                                            LOCAL TABLES
 101:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 102:rtos/uC-FS/FAT/fs_fat_file.c **** */
 103:rtos/uC-FS/FAT/fs_fat_file.c **** 
 104:rtos/uC-FS/FAT/fs_fat_file.c **** 
 105:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 106:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 107:rtos/uC-FS/FAT/fs_fat_file.c **** *                                       LOCAL GLOBAL VARIABLES
 108:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 109:rtos/uC-FS/FAT/fs_fat_file.c **** */
 110:rtos/uC-FS/FAT/fs_fat_file.c **** 
 111:rtos/uC-FS/FAT/fs_fat_file.c **** static  MEM_POOL  FS_FAT_FileDataPool;
 112:rtos/uC-FS/FAT/fs_fat_file.c **** 
 113:rtos/uC-FS/FAT/fs_fat_file.c **** 
 114:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 115:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 116:rtos/uC-FS/FAT/fs_fat_file.c **** *                                            LOCAL MACRO'S
 117:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 118:rtos/uC-FS/FAT/fs_fat_file.c **** */
 119:rtos/uC-FS/FAT/fs_fat_file.c **** 
 120:rtos/uC-FS/FAT/fs_fat_file.c **** 
 121:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 122:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 123:rtos/uC-FS/FAT/fs_fat_file.c **** *                                      LOCAL FUNCTION PROTOTYPES
 124:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 125:rtos/uC-FS/FAT/fs_fat_file.c **** */
 126:rtos/uC-FS/FAT/fs_fat_file.c **** 
 127:rtos/uC-FS/FAT/fs_fat_file.c **** 
 128:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 129:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 130:rtos/uC-FS/FAT/fs_fat_file.c **** *                                     LOCAL CONFIGURATION ERRORS
 131:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 132:rtos/uC-FS/FAT/fs_fat_file.c **** */
 133:rtos/uC-FS/FAT/fs_fat_file.c **** 
 134:rtos/uC-FS/FAT/fs_fat_file.c **** 
 135:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 136:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 137:rtos/uC-FS/FAT/fs_fat_file.c **** *                                       FS_FAT_FileModuleInit()
 138:rtos/uC-FS/FAT/fs_fat_file.c **** *
 139:rtos/uC-FS/FAT/fs_fat_file.c **** * Description : Initialize FAT File module.
 140:rtos/uC-FS/FAT/fs_fat_file.c **** *
 141:rtos/uC-FS/FAT/fs_fat_file.c **** * Argument(s) : file_cnt    Number of files to allocate.
 142:rtos/uC-FS/FAT/fs_fat_file.c **** *
 143:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_err       Pointer to variable that will receive the return error code from this f
ARM GAS  /tmp/ccKN2FgP.s 			page 4


 144:rtos/uC-FS/FAT/fs_fat_file.c **** *
 145:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_NONE         Module initialized.
 146:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_MEM_ALLOC    Memory could not be allocated.
 147:rtos/uC-FS/FAT/fs_fat_file.c **** *
 148:rtos/uC-FS/FAT/fs_fat_file.c **** * Return(s)   : none.
 149:rtos/uC-FS/FAT/fs_fat_file.c **** *
 150:rtos/uC-FS/FAT/fs_fat_file.c **** * Note(s)     : none.
 151:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 152:rtos/uC-FS/FAT/fs_fat_file.c **** */
 153:rtos/uC-FS/FAT/fs_fat_file.c **** 
 154:rtos/uC-FS/FAT/fs_fat_file.c **** void  FS_FAT_FileModuleInit (FS_QTY   file_cnt,
 155:rtos/uC-FS/FAT/fs_fat_file.c ****                              FS_ERR  *p_err)
 156:rtos/uC-FS/FAT/fs_fat_file.c **** {
  30              		.loc 1 156 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 156 1 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 86B0     		sub	sp, sp, #24
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 32
  43 0004 0346     		mov	r3, r0
  44 0006 0C46     		mov	r4, r1
 157:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_SIZE_T  octets_reqd;
  45              		.loc 1 157 5 is_stmt 1 view .LVU2
 158:rtos/uC-FS/FAT/fs_fat_file.c ****     LIB_ERR     pool_err;
  46              		.loc 1 158 5 view .LVU3
 159:rtos/uC-FS/FAT/fs_fat_file.c **** 
 160:rtos/uC-FS/FAT/fs_fat_file.c **** 
 161:rtos/uC-FS/FAT/fs_fat_file.c ****     Mem_PoolCreate(&FS_FAT_FileDataPool,
  47              		.loc 1 161 5 view .LVU4
  48 0008 0DF11202 		add	r2, sp, #18
  49 000c 0392     		str	r2, [sp, #12]
  50 000e 05AA     		add	r2, sp, #20
  51 0010 0292     		str	r2, [sp, #8]
  52 0012 0422     		movs	r2, #4
  53 0014 0192     		str	r2, [sp, #4]
  54 0016 4022     		movs	r2, #64
  55 0018 0092     		str	r2, [sp]
  56 001a 0022     		movs	r2, #0
  57 001c 1146     		mov	r1, r2
  58              	.LVL1:
  59              		.loc 1 161 5 is_stmt 0 view .LVU5
  60 001e 0648     		ldr	r0, .L4
  61              	.LVL2:
  62              		.loc 1 161 5 view .LVU6
  63 0020 FFF7FEFF 		bl	Mem_PoolCreate
  64              	.LVL3:
 162:rtos/uC-FS/FAT/fs_fat_file.c ****                     DEF_NULL,
 163:rtos/uC-FS/FAT/fs_fat_file.c ****                     0,
 164:rtos/uC-FS/FAT/fs_fat_file.c ****                     file_cnt,
 165:rtos/uC-FS/FAT/fs_fat_file.c ****                     sizeof(FS_FAT_FILE_DATA),
ARM GAS  /tmp/ccKN2FgP.s 			page 5


 166:rtos/uC-FS/FAT/fs_fat_file.c ****                     sizeof(CPU_ALIGN),
 167:rtos/uC-FS/FAT/fs_fat_file.c ****                    &octets_reqd,
 168:rtos/uC-FS/FAT/fs_fat_file.c ****                    &pool_err);
 169:rtos/uC-FS/FAT/fs_fat_file.c **** 
 170:rtos/uC-FS/FAT/fs_fat_file.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
  65              		.loc 1 170 5 is_stmt 1 view .LVU7
  66              		.loc 1 170 18 is_stmt 0 view .LVU8
  67 0024 BDF81220 		ldrh	r2, [sp, #18]
  68              		.loc 1 170 8 view .LVU9
  69 0028 42F21073 		movw	r3, #10000
  70 002c 9A42     		cmp	r2, r3
  71 002e 01D0     		beq	.L1
 171:rtos/uC-FS/FAT/fs_fat_file.c ****         *p_err  = FS_ERR_MEM_ALLOC;
  72              		.loc 1 171 9 is_stmt 1 view .LVU10
  73              		.loc 1 171 17 is_stmt 0 view .LVU11
  74 0030 1123     		movs	r3, #17
  75 0032 2380     		strh	r3, [r4]	@ movhi
 172:rtos/uC-FS/FAT/fs_fat_file.c ****          FS_TRACE_INFO(("FS_FAT_FileModuleInit(): Could not alloc mem for FAT file info: %d octets 
  76              		.loc 1 172 126 is_stmt 1 view .LVU12
  77              	.L1:
 173:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 174:rtos/uC-FS/FAT/fs_fat_file.c **** }
  78              		.loc 1 174 1 is_stmt 0 view .LVU13
  79 0034 06B0     		add	sp, sp, #24
  80              	.LCFI2:
  81              		.cfi_def_cfa_offset 8
  82              		@ sp needed
  83 0036 10BD     		pop	{r4, pc}
  84              	.LVL4:
  85              	.L5:
  86              		.loc 1 174 1 view .LVU14
  87              		.align	2
  88              	.L4:
  89 0038 00000000 		.word	.LANCHOR0
  90              		.cfi_endproc
  91              	.LFE0:
  93              		.section	.text.FS_FAT_FileClose,"ax",%progbits
  94              		.align	1
  95              		.global	FS_FAT_FileClose
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	FS_FAT_FileClose:
 102              	.LVL5:
 103              	.LFB1:
 175:rtos/uC-FS/FAT/fs_fat_file.c **** 
 176:rtos/uC-FS/FAT/fs_fat_file.c **** 
 177:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 178:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 179:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 180:rtos/uC-FS/FAT/fs_fat_file.c **** *                                       SYSTEM DRIVER FUNCTIONS
 181:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 182:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 183:rtos/uC-FS/FAT/fs_fat_file.c **** */
 184:rtos/uC-FS/FAT/fs_fat_file.c **** 
 185:rtos/uC-FS/FAT/fs_fat_file.c **** /*
ARM GAS  /tmp/ccKN2FgP.s 			page 6


 186:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 187:rtos/uC-FS/FAT/fs_fat_file.c **** *                                         FS_FAT_FileClose()
 188:rtos/uC-FS/FAT/fs_fat_file.c **** *
 189:rtos/uC-FS/FAT/fs_fat_file.c **** * Description : Close a file.
 190:rtos/uC-FS/FAT/fs_fat_file.c **** *
 191:rtos/uC-FS/FAT/fs_fat_file.c **** * Argument(s) : p_file      Pointer to a file.
 192:rtos/uC-FS/FAT/fs_fat_file.c **** *               -----       Argument validated by caller.
 193:rtos/uC-FS/FAT/fs_fat_file.c **** *
 194:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 195:rtos/uC-FS/FAT/fs_fat_file.c **** *
 196:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_NONE        File closed.
 197:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_NULL_PTR    Argument 'p_buf' is a NULL pointer.
 198:rtos/uC-FS/FAT/fs_fat_file.c **** * Return(s)   : none.
 199:rtos/uC-FS/FAT/fs_fat_file.c **** *
 200:rtos/uC-FS/FAT/fs_fat_file.c **** * Note(s)     : (1) The file system lock MUST be held to free the file data back to the file data p
 201:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 202:rtos/uC-FS/FAT/fs_fat_file.c **** */
 203:rtos/uC-FS/FAT/fs_fat_file.c **** 
 204:rtos/uC-FS/FAT/fs_fat_file.c **** void  FS_FAT_FileClose  (FS_FILE  *p_file,
 205:rtos/uC-FS/FAT/fs_fat_file.c ****                          FS_ERR   *p_err)
 206:rtos/uC-FS/FAT/fs_fat_file.c **** {
 104              		.loc 1 206 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		.loc 1 206 1 is_stmt 0 view .LVU16
 109 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 110              	.LCFI3:
 111              		.cfi_def_cfa_offset 20
 112              		.cfi_offset 4, -20
 113              		.cfi_offset 5, -16
 114              		.cfi_offset 6, -12
 115              		.cfi_offset 7, -8
 116              		.cfi_offset 14, -4
 117 0002 85B0     		sub	sp, sp, #20
 118              	.LCFI4:
 119              		.cfi_def_cfa_offset 40
 120 0004 0E46     		mov	r6, r1
 207:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_DATA  *p_fat_file_data;
 121              		.loc 1 207 5 is_stmt 1 view .LVU17
 208:rtos/uC-FS/FAT/fs_fat_file.c ****     LIB_ERR            pool_err;
 122              		.loc 1 208 5 view .LVU18
 209:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_ERR             err;
 123              		.loc 1 209 5 view .LVU19
 210:rtos/uC-FS/FAT/fs_fat_file.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 211:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_BUF            *p_buf;
 124              		.loc 1 211 5 view .LVU20
 212:rtos/uC-FS/FAT/fs_fat_file.c **** #endif
 213:rtos/uC-FS/FAT/fs_fat_file.c **** 
 214:rtos/uC-FS/FAT/fs_fat_file.c **** 
 215:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data = (FS_FAT_FILE_DATA *)p_file->DataPtr;
 125              		.loc 1 215 5 view .LVU21
 126              		.loc 1 215 21 is_stmt 0 view .LVU22
 127 0006 056C     		ldr	r5, [r0, #64]
 128              	.LVL6:
 216:rtos/uC-FS/FAT/fs_fat_file.c **** 
 217:rtos/uC-FS/FAT/fs_fat_file.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)                         /* ------------------ UPDATE DIR SE
ARM GAS  /tmp/ccKN2FgP.s 			page 7


 218:rtos/uC-FS/FAT/fs_fat_file.c ****     if (DEF_BIT_IS_SET(p_fat_file_data->Mode, FS_FILE_ACCESS_MODE_CACHED | FS_FILE_ACCESS_MODE_WR) 
 129              		.loc 1 218 5 is_stmt 1 view .LVU23
 130              		.loc 1 218 9 is_stmt 0 view .LVU24
 131 0008 EB68     		ldr	r3, [r5, #12]
 132 000a 03F04203 		and	r3, r3, #66
 133              		.loc 1 218 8 view .LVU25
 134 000e 422B     		cmp	r3, #66
 135 0010 03D1     		bne	.L7
 136 0012 0446     		mov	r4, r0
 219:rtos/uC-FS/FAT/fs_fat_file.c ****         if (p_fat_file_data->UpdateReqd == DEF_YES) {
 137              		.loc 1 219 9 is_stmt 1 view .LVU26
 138              		.loc 1 219 28 is_stmt 0 view .LVU27
 139 0014 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 140              		.loc 1 219 12 view .LVU28
 141 0016 012B     		cmp	r3, #1
 142 0018 08D0     		beq	.L14
 143              	.LVL7:
 144              	.L7:
 220:rtos/uC-FS/FAT/fs_fat_file.c ****             p_buf = FSBuf_Get(p_file->VolPtr);
 221:rtos/uC-FS/FAT/fs_fat_file.c ****             if (p_buf == (FS_BUF *)0) {
 222:rtos/uC-FS/FAT/fs_fat_file.c ****                *p_err = FS_ERR_NULL_PTR;
 223:rtos/uC-FS/FAT/fs_fat_file.c ****                 return;
 224:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 225:rtos/uC-FS/FAT/fs_fat_file.c **** 
 226:rtos/uC-FS/FAT/fs_fat_file.c ****             FS_FAT_LowEntryUpdate(p_file->VolPtr,
 227:rtos/uC-FS/FAT/fs_fat_file.c ****                                   p_buf,
 228:rtos/uC-FS/FAT/fs_fat_file.c ****                                   p_fat_file_data,
 229:rtos/uC-FS/FAT/fs_fat_file.c ****                                   DEF_YES,
 230:rtos/uC-FS/FAT/fs_fat_file.c ****                                   p_err);
 231:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Flush(p_buf, p_err);
 232:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 233:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 234:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 235:rtos/uC-FS/FAT/fs_fat_file.c **** #endif
 236:rtos/uC-FS/FAT/fs_fat_file.c **** 
 237:rtos/uC-FS/FAT/fs_fat_file.c **** 
 238:rtos/uC-FS/FAT/fs_fat_file.c **** 
 239:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------ FREE FILE DAT
 240:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_OS_Lock(&err);                                           /* Acquire FS lock (see Note #1).  
 145              		.loc 1 240 5 is_stmt 1 view .LVU29
 146 001a 03A8     		add	r0, sp, #12
 147 001c FFF7FEFF 		bl	FS_OS_Lock
 148              	.LVL8:
 241:rtos/uC-FS/FAT/fs_fat_file.c ****     if (err != FS_ERR_NONE) {
 149              		.loc 1 241 5 view .LVU30
 150              		.loc 1 241 13 is_stmt 0 view .LVU31
 151 0020 BDF80C30 		ldrh	r3, [sp, #12]
 152              		.loc 1 241 8 view .LVU32
 153 0024 CBB1     		cbz	r3, .L10
 242:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = err;
 154              		.loc 1 242 8 is_stmt 1 view .LVU33
 155              		.loc 1 242 15 is_stmt 0 view .LVU34
 156 0026 3380     		strh	r3, [r6]	@ movhi
 243:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 157              		.loc 1 243 9 is_stmt 1 view .LVU35
 158              	.L6:
 244:rtos/uC-FS/FAT/fs_fat_file.c ****     }
ARM GAS  /tmp/ccKN2FgP.s 			page 8


 245:rtos/uC-FS/FAT/fs_fat_file.c **** 
 246:rtos/uC-FS/FAT/fs_fat_file.c ****     Mem_PoolBlkFree(        &FS_FAT_FileDataPool,
 247:rtos/uC-FS/FAT/fs_fat_file.c ****                     (void *) p_fat_file_data,
 248:rtos/uC-FS/FAT/fs_fat_file.c ****                             &pool_err);
 249:rtos/uC-FS/FAT/fs_fat_file.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
 250:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_OS_Unlock();
 251:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_MEM_ALLOC;
 252:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 253:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 254:rtos/uC-FS/FAT/fs_fat_file.c **** 
 255:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_OS_Unlock();
 256:rtos/uC-FS/FAT/fs_fat_file.c **** 
 257:rtos/uC-FS/FAT/fs_fat_file.c ****    *p_err = FS_ERR_NONE;
 258:rtos/uC-FS/FAT/fs_fat_file.c **** }
 159              		.loc 1 258 1 is_stmt 0 view .LVU36
 160 0028 05B0     		add	sp, sp, #20
 161              	.LCFI5:
 162              		.cfi_remember_state
 163              		.cfi_def_cfa_offset 20
 164              		@ sp needed
 165 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 166              	.LVL9:
 167              	.L14:
 168              	.LCFI6:
 169              		.cfi_restore_state
 220:rtos/uC-FS/FAT/fs_fat_file.c ****             if (p_buf == (FS_BUF *)0) {
 170              		.loc 1 220 13 is_stmt 1 view .LVU37
 220:rtos/uC-FS/FAT/fs_fat_file.c ****             if (p_buf == (FS_BUF *)0) {
 171              		.loc 1 220 21 is_stmt 0 view .LVU38
 172 002c C06B     		ldr	r0, [r0, #60]
 173              	.LVL10:
 220:rtos/uC-FS/FAT/fs_fat_file.c ****             if (p_buf == (FS_BUF *)0) {
 174              		.loc 1 220 21 view .LVU39
 175 002e FFF7FEFF 		bl	FSBuf_Get
 176              	.LVL11:
 221:rtos/uC-FS/FAT/fs_fat_file.c ****                *p_err = FS_ERR_NULL_PTR;
 177              		.loc 1 221 13 is_stmt 1 view .LVU40
 221:rtos/uC-FS/FAT/fs_fat_file.c ****                *p_err = FS_ERR_NULL_PTR;
 178              		.loc 1 221 16 is_stmt 0 view .LVU41
 179 0032 0746     		mov	r7, r0
 180 0034 70B1     		cbz	r0, .L15
 226:rtos/uC-FS/FAT/fs_fat_file.c ****                                   p_buf,
 181              		.loc 1 226 13 is_stmt 1 view .LVU42
 182 0036 0096     		str	r6, [sp]
 183 0038 0123     		movs	r3, #1
 184 003a 2A46     		mov	r2, r5
 185 003c 0146     		mov	r1, r0
 186 003e E06B     		ldr	r0, [r4, #60]
 187              	.LVL12:
 226:rtos/uC-FS/FAT/fs_fat_file.c ****                                   p_buf,
 188              		.loc 1 226 13 is_stmt 0 view .LVU43
 189 0040 FFF7FEFF 		bl	FS_FAT_LowEntryUpdate
 190              	.LVL13:
 231:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 191              		.loc 1 231 13 is_stmt 1 view .LVU44
 192 0044 3146     		mov	r1, r6
 193 0046 3846     		mov	r0, r7
ARM GAS  /tmp/ccKN2FgP.s 			page 9


 194 0048 FFF7FEFF 		bl	FSBuf_Flush
 195              	.LVL14:
 232:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 196              		.loc 1 232 13 view .LVU45
 197 004c 3846     		mov	r0, r7
 198 004e FFF7FEFF 		bl	FSBuf_Free
 199              	.LVL15:
 200 0052 E2E7     		b	.L7
 201              	.LVL16:
 202              	.L15:
 222:rtos/uC-FS/FAT/fs_fat_file.c ****                 return;
 203              		.loc 1 222 16 view .LVU46
 222:rtos/uC-FS/FAT/fs_fat_file.c ****                 return;
 204              		.loc 1 222 23 is_stmt 0 view .LVU47
 205 0054 1323     		movs	r3, #19
 206 0056 3380     		strh	r3, [r6]	@ movhi
 223:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 207              		.loc 1 223 17 is_stmt 1 view .LVU48
 208 0058 E6E7     		b	.L6
 209              	.LVL17:
 210              	.L10:
 246:rtos/uC-FS/FAT/fs_fat_file.c ****                     (void *) p_fat_file_data,
 211              		.loc 1 246 5 view .LVU49
 212 005a 0DF10E02 		add	r2, sp, #14
 213 005e 2946     		mov	r1, r5
 214 0060 0948     		ldr	r0, .L16
 215 0062 FFF7FEFF 		bl	Mem_PoolBlkFree
 216              	.LVL18:
 249:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_OS_Unlock();
 217              		.loc 1 249 5 view .LVU50
 249:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_OS_Unlock();
 218              		.loc 1 249 18 is_stmt 0 view .LVU51
 219 0066 BDF80E20 		ldrh	r2, [sp, #14]
 249:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_OS_Unlock();
 220              		.loc 1 249 8 view .LVU52
 221 006a 42F21073 		movw	r3, #10000
 222 006e 9A42     		cmp	r2, r3
 223 0070 04D0     		beq	.L11
 250:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_MEM_ALLOC;
 224              		.loc 1 250 9 is_stmt 1 view .LVU53
 225 0072 FFF7FEFF 		bl	FS_OS_Unlock
 226              	.LVL19:
 251:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 227              		.loc 1 251 8 view .LVU54
 251:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 228              		.loc 1 251 15 is_stmt 0 view .LVU55
 229 0076 1123     		movs	r3, #17
 230 0078 3380     		strh	r3, [r6]	@ movhi
 252:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 231              		.loc 1 252 9 is_stmt 1 view .LVU56
 232 007a D5E7     		b	.L6
 233              	.L11:
 255:rtos/uC-FS/FAT/fs_fat_file.c **** 
 234              		.loc 1 255 5 view .LVU57
 235 007c FFF7FEFF 		bl	FS_OS_Unlock
 236              	.LVL20:
 257:rtos/uC-FS/FAT/fs_fat_file.c **** }
ARM GAS  /tmp/ccKN2FgP.s 			page 10


 237              		.loc 1 257 4 view .LVU58
 257:rtos/uC-FS/FAT/fs_fat_file.c **** }
 238              		.loc 1 257 11 is_stmt 0 view .LVU59
 239 0080 0023     		movs	r3, #0
 240 0082 3380     		strh	r3, [r6]	@ movhi
 241 0084 D0E7     		b	.L6
 242              	.L17:
 243 0086 00BF     		.align	2
 244              	.L16:
 245 0088 00000000 		.word	.LANCHOR0
 246              		.cfi_endproc
 247              	.LFE1:
 249              		.section	.text.FS_FAT_FileOpen,"ax",%progbits
 250              		.align	1
 251              		.global	FS_FAT_FileOpen
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	FS_FAT_FileOpen:
 258              	.LVL21:
 259              	.LFB2:
 259:rtos/uC-FS/FAT/fs_fat_file.c **** 
 260:rtos/uC-FS/FAT/fs_fat_file.c **** 
 261:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 262:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 263:rtos/uC-FS/FAT/fs_fat_file.c **** *                                          FS_FAT_FileOpen()
 264:rtos/uC-FS/FAT/fs_fat_file.c **** *
 265:rtos/uC-FS/FAT/fs_fat_file.c **** * Description : Open a file.
 266:rtos/uC-FS/FAT/fs_fat_file.c **** *
 267:rtos/uC-FS/FAT/fs_fat_file.c **** * Argument(s) : p_file          Pointer to a file.
 268:rtos/uC-FS/FAT/fs_fat_file.c **** *               ------          Argument validated by caller.
 269:rtos/uC-FS/FAT/fs_fat_file.c **** *
 270:rtos/uC-FS/FAT/fs_fat_file.c **** *               name_file       Name of the file.
 271:rtos/uC-FS/FAT/fs_fat_file.c **** *               ---------       Pointer validated by caller.
 272:rtos/uC-FS/FAT/fs_fat_file.c **** *
 273:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_err           Pointer to variable that will receive the return error code from th
 274:rtos/uC-FS/FAT/fs_fat_file.c **** *
 275:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_NONE                      File opened successfully.
 276:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_BUF_NONE_AVAIL            Buffer not available.
 277:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_DEV                       Device access error.
 278:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_DEV_FULL                  Device is full (space could no
 279:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_DIR_FULL                  Directory is full (space could
 280:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_ENTRY_CORRUPT             File system entry is corrupt.
 281:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_ENTRY_EXISTS              File system entry exists.
 282:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_ENTRY_NOT_FILE            File system entry NOT a file.
 283:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_ENTRY_NOT_FOUND           File system entry NOT found
 284:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
 285:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
 286:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_ENTRY_RD_ONLY             File system entry marked read-
 287:rtos/uC-FS/FAT/fs_fat_file.c **** *                                   FS_ERR_NAME_INVALID              Invalid file name or path.
 288:rtos/uC-FS/FAT/fs_fat_file.c **** *
 289:rtos/uC-FS/FAT/fs_fat_file.c **** * Return(s)   : none.
 290:rtos/uC-FS/FAT/fs_fat_file.c **** *
 291:rtos/uC-FS/FAT/fs_fat_file.c **** * Note(s)     : (1) The file system lock MUST be held to get the file data from the file data pool.
 292:rtos/uC-FS/FAT/fs_fat_file.c **** *
 293:rtos/uC-FS/FAT/fs_fat_file.c **** *               (2) (a) If long file names are NOT used :
ARM GAS  /tmp/ccKN2FgP.s 			page 11


 294:rtos/uC-FS/FAT/fs_fat_file.c **** *
 295:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (1) The file name      is limited to   8 characters (excluding period & ext
 296:rtos/uC-FS/FAT/fs_fat_file.c **** *
 297:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (2) The file extension is limited to   3 characters.
 298:rtos/uC-FS/FAT/fs_fat_file.c **** *
 299:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (3) A directory name   is limited to   8 characters.
 300:rtos/uC-FS/FAT/fs_fat_file.c **** *
 301:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (4) The full path      is limited to  80 characters (including a trailing N
 302:rtos/uC-FS/FAT/fs_fat_file.c **** *
 303:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (5) The file name may contain up to ONE period, which separates the name fr
 304:rtos/uC-FS/FAT/fs_fat_file.c **** *                           extensions.  This period MAY NOT be the first character of the file nam
 305:rtos/uC-FS/FAT/fs_fat_file.c **** *
 306:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (b) If long file names ARE used :
 307:rtos/uC-FS/FAT/fs_fat_file.c **** *
 308:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (1) The file name      is limited to 255 characters (including period & ext
 309:rtos/uC-FS/FAT/fs_fat_file.c **** *
 310:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (2) A directory name   is limited to 255 characters.
 311:rtos/uC-FS/FAT/fs_fat_file.c **** *
 312:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (3) The full path      is limited to 260 characters (including a trailing N
 313:rtos/uC-FS/FAT/fs_fat_file.c **** *
 314:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (c) If the file name passed by 'pname_file' violates any of these rules, then N
 315:rtos/uC-FS/FAT/fs_fat_file.c **** *                       modification will occur to the disk information & an error code will be ret
 316:rtos/uC-FS/FAT/fs_fat_file.c **** *
 317:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (d) Trailing periods are ignored.
 318:rtos/uC-FS/FAT/fs_fat_file.c **** *
 319:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (e) Leading & trailing spaces are ignored.
 320:rtos/uC-FS/FAT/fs_fat_file.c **** *
 321:rtos/uC-FS/FAT/fs_fat_file.c **** *               (3) According to [Ref 1], "a zero-length file--a file that has no data allocated to
 322:rtos/uC-FS/FAT/fs_fat_file.c **** *                   has a first cluster number of 0 placed in its directory entry".
 323:rtos/uC-FS/FAT/fs_fat_file.c **** *
 324:rtos/uC-FS/FAT/fs_fat_file.c **** *               (4) If journaling is enabled & journaling started, logs may be written to the journ
 325:rtos/uC-FS/FAT/fs_fat_file.c **** *
 326:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (a) ... (from 'FS_FAT_LowEntryCreate()') to ensure that either the new file is 
 327:rtos/uC-FS/FAT/fs_fat_file.c **** *                       created or no changes occur to the file system, if the file does not exist 
 328:rtos/uC-FS/FAT/fs_fat_file.c **** *                       FS_FAT_MODE_CREATE flag is set.
 329:rtos/uC-FS/FAT/fs_fat_file.c **** *
 330:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (b) ... (from 'FS_FAT_LowEntryTruncate()') to ensure that either the existing f
 331:rtos/uC-FS/FAT/fs_fat_file.c **** *                       fully truncated or no changes occur to the file system, if the file does ex
 332:rtos/uC-FS/FAT/fs_fat_file.c **** *                       the FS_FAT_MODE_TRUNCATE flag is set.
 333:rtos/uC-FS/FAT/fs_fat_file.c **** *
 334:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (c) Since this is a top level action, the journal must be cleared once it is fi
 335:rtos/uC-FS/FAT/fs_fat_file.c **** *                       or after an error occurs.
 336:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 337:rtos/uC-FS/FAT/fs_fat_file.c **** */
 338:rtos/uC-FS/FAT/fs_fat_file.c **** 
 339:rtos/uC-FS/FAT/fs_fat_file.c **** void  FS_FAT_FileOpen (FS_FILE   *p_file,
 340:rtos/uC-FS/FAT/fs_fat_file.c ****                        CPU_CHAR  *name_file,
 341:rtos/uC-FS/FAT/fs_fat_file.c ****                        FS_ERR    *p_err)
 342:rtos/uC-FS/FAT/fs_fat_file.c **** {
 260              		.loc 1 342 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		.loc 1 342 1 is_stmt 0 view .LVU61
 265 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 266              	.LCFI7:
 267              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccKN2FgP.s 			page 12


 268              		.cfi_offset 4, -20
 269              		.cfi_offset 5, -16
 270              		.cfi_offset 6, -12
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 85B0     		sub	sp, sp, #20
 274              	.LCFI8:
 275              		.cfi_def_cfa_offset 40
 276 0004 0546     		mov	r5, r0
 277 0006 0E46     		mov	r6, r1
 278 0008 1446     		mov	r4, r2
 343:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_DATA  *p_file_data;
 279              		.loc 1 343 5 is_stmt 1 view .LVU62
 344:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_ERR             err;
 280              		.loc 1 344 5 view .LVU63
 345:rtos/uC-FS/FAT/fs_fat_file.c ****     LIB_ERR            pool_err;
 281              		.loc 1 345 5 view .LVU64
 346:rtos/uC-FS/FAT/fs_fat_file.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
 347:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_BUF            *p_buf;
 348:rtos/uC-FS/FAT/fs_fat_file.c **** #endif
 349:rtos/uC-FS/FAT/fs_fat_file.c **** 
 350:rtos/uC-FS/FAT/fs_fat_file.c **** 
 351:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------ ALLOC FILE DA
 352:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_OS_Lock(p_err);                                          /* Acquire FS lock (see Note #1).  
 282              		.loc 1 352 5 view .LVU65
 283 000a 1046     		mov	r0, r2
 284              	.LVL22:
 285              		.loc 1 352 5 is_stmt 0 view .LVU66
 286 000c FFF7FEFF 		bl	FS_OS_Lock
 287              	.LVL23:
 353:rtos/uC-FS/FAT/fs_fat_file.c ****     if (*p_err != FS_ERR_NONE) {
 288              		.loc 1 353 5 is_stmt 1 view .LVU67
 289              		.loc 1 353 9 is_stmt 0 view .LVU68
 290 0010 2388     		ldrh	r3, [r4]
 291              		.loc 1 353 8 view .LVU69
 292 0012 0BB1     		cbz	r3, .L24
 293              	.L18:
 354:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 355:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 356:rtos/uC-FS/FAT/fs_fat_file.c **** 
 357:rtos/uC-FS/FAT/fs_fat_file.c ****     p_file_data = (FS_FAT_FILE_DATA *)Mem_PoolBlkGet(&FS_FAT_FileDataPool,
 358:rtos/uC-FS/FAT/fs_fat_file.c ****                                                       sizeof(FS_FAT_FILE_DATA),
 359:rtos/uC-FS/FAT/fs_fat_file.c ****                                                      &pool_err);
 360:rtos/uC-FS/FAT/fs_fat_file.c ****     (void)pool_err;                                            /* Err ignored. Ret val chk'd instea
 361:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_OS_Unlock();
 362:rtos/uC-FS/FAT/fs_fat_file.c **** 
 363:rtos/uC-FS/FAT/fs_fat_file.c **** 
 364:rtos/uC-FS/FAT/fs_fat_file.c ****     if (p_file_data == (FS_FAT_FILE_DATA *)0) {
 365:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_MEM_ALLOC;
 366:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 367:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 368:rtos/uC-FS/FAT/fs_fat_file.c **** 
 369:rtos/uC-FS/FAT/fs_fat_file.c **** 
 370:rtos/uC-FS/FAT/fs_fat_file.c **** 
 371:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* --------------------- OPEN FILE 
 372:rtos/uC-FS/FAT/fs_fat_file.c ****     p_file->DataPtr = (void *)p_file_data;
 373:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_LowEntryFind( p_file->VolPtr,
ARM GAS  /tmp/ccKN2FgP.s 			page 13


 374:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_file_data,
 375:rtos/uC-FS/FAT/fs_fat_file.c ****                          name_file,
 376:rtos/uC-FS/FAT/fs_fat_file.c ****                         (p_file->AccessMode | FS_FAT_MODE_FILE),
 377:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_err);
 378:rtos/uC-FS/FAT/fs_fat_file.c **** 
 379:rtos/uC-FS/FAT/fs_fat_file.c ****     if (*p_err != FS_ERR_NONE) {
 380:rtos/uC-FS/FAT/fs_fat_file.c ****          FS_FAT_FileClose(p_file, &err);
 381:rtos/uC-FS/FAT/fs_fat_file.c ****          return;
 382:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 383:rtos/uC-FS/FAT/fs_fat_file.c **** 
 384:rtos/uC-FS/FAT/fs_fat_file.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
 385:rtos/uC-FS/FAT/fs_fat_file.c ****     p_buf = FSBuf_Get(p_file->VolPtr);                          /* Get buf.                        
 386:rtos/uC-FS/FAT/fs_fat_file.c ****     if (p_buf == DEF_NULL) {
 387:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 388:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 389:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 390:rtos/uC-FS/FAT/fs_fat_file.c **** 
 391:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_JournalClrReset(p_file->VolPtr, p_buf, p_err);       /* Clr journal (see Note #4c).     
 392:rtos/uC-FS/FAT/fs_fat_file.c ****     if (*p_err != FS_ERR_NONE) {
 393:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
 394:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 395:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 396:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Flush & free buf.               
 397:rtos/uC-FS/FAT/fs_fat_file.c ****     FSBuf_Flush(p_buf, p_err);
 398:rtos/uC-FS/FAT/fs_fat_file.c ****     FSBuf_Free(p_buf);
 399:rtos/uC-FS/FAT/fs_fat_file.c **** #endif
 400:rtos/uC-FS/FAT/fs_fat_file.c **** }
 294              		.loc 1 400 1 view .LVU70
 295 0014 05B0     		add	sp, sp, #20
 296              	.LCFI9:
 297              		.cfi_remember_state
 298              		.cfi_def_cfa_offset 20
 299              		@ sp needed
 300 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 301              	.LVL24:
 302              	.L24:
 303              	.LCFI10:
 304              		.cfi_restore_state
 357:rtos/uC-FS/FAT/fs_fat_file.c ****                                                       sizeof(FS_FAT_FILE_DATA),
 305              		.loc 1 357 5 is_stmt 1 view .LVU71
 357:rtos/uC-FS/FAT/fs_fat_file.c ****                                                       sizeof(FS_FAT_FILE_DATA),
 306              		.loc 1 357 39 is_stmt 0 view .LVU72
 307 0018 03AA     		add	r2, sp, #12
 308 001a 4021     		movs	r1, #64
 309 001c 0E48     		ldr	r0, .L26
 310 001e FFF7FEFF 		bl	Mem_PoolBlkGet
 311              	.LVL25:
 312 0022 0746     		mov	r7, r0
 313              	.LVL26:
 360:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_OS_Unlock();
 314              		.loc 1 360 5 is_stmt 1 view .LVU73
 361:rtos/uC-FS/FAT/fs_fat_file.c **** 
 315              		.loc 1 361 5 view .LVU74
 316 0024 FFF7FEFF 		bl	FS_OS_Unlock
 317              	.LVL27:
 364:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_MEM_ALLOC;
 318              		.loc 1 364 5 view .LVU75
ARM GAS  /tmp/ccKN2FgP.s 			page 14


 364:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_MEM_ALLOC;
 319              		.loc 1 364 8 is_stmt 0 view .LVU76
 320 0028 97B1     		cbz	r7, .L25
 372:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_LowEntryFind( p_file->VolPtr,
 321              		.loc 1 372 5 is_stmt 1 view .LVU77
 372:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_LowEntryFind( p_file->VolPtr,
 322              		.loc 1 372 21 is_stmt 0 view .LVU78
 323 002a 2F64     		str	r7, [r5, #64]
 373:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_file_data,
 324              		.loc 1 373 5 is_stmt 1 view .LVU79
 376:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_err);
 325              		.loc 1 376 32 is_stmt 0 view .LVU80
 326 002c 2B69     		ldr	r3, [r5, #16]
 373:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_file_data,
 327              		.loc 1 373 5 view .LVU81
 328 002e 0094     		str	r4, [sp]
 329 0030 43F40073 		orr	r3, r3, #512
 330 0034 3246     		mov	r2, r6
 331 0036 3946     		mov	r1, r7
 332 0038 E86B     		ldr	r0, [r5, #60]
 333 003a FFF7FEFF 		bl	FS_FAT_LowEntryFind
 334              	.LVL28:
 379:rtos/uC-FS/FAT/fs_fat_file.c ****          FS_FAT_FileClose(p_file, &err);
 335              		.loc 1 379 5 is_stmt 1 view .LVU82
 379:rtos/uC-FS/FAT/fs_fat_file.c ****          FS_FAT_FileClose(p_file, &err);
 336              		.loc 1 379 9 is_stmt 0 view .LVU83
 337 003e 2388     		ldrh	r3, [r4]
 379:rtos/uC-FS/FAT/fs_fat_file.c ****          FS_FAT_FileClose(p_file, &err);
 338              		.loc 1 379 8 view .LVU84
 339 0040 002B     		cmp	r3, #0
 340 0042 E7D0     		beq	.L18
 380:rtos/uC-FS/FAT/fs_fat_file.c ****          return;
 341              		.loc 1 380 10 is_stmt 1 view .LVU85
 342 0044 0DF10E01 		add	r1, sp, #14
 343 0048 2846     		mov	r0, r5
 344 004a FFF7FEFF 		bl	FS_FAT_FileClose
 345              	.LVL29:
 381:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 346              		.loc 1 381 10 view .LVU86
 347 004e E1E7     		b	.L18
 348              	.L25:
 365:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 349              		.loc 1 365 8 view .LVU87
 365:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 350              		.loc 1 365 15 is_stmt 0 view .LVU88
 351 0050 1123     		movs	r3, #17
 352 0052 2380     		strh	r3, [r4]	@ movhi
 366:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 353              		.loc 1 366 9 is_stmt 1 view .LVU89
 354 0054 DEE7     		b	.L18
 355              	.L27:
 356 0056 00BF     		.align	2
 357              	.L26:
 358 0058 00000000 		.word	.LANCHOR0
 359              		.cfi_endproc
 360              	.LFE2:
 362              		.section	.text.FS_FAT_FilePosSet,"ax",%progbits
ARM GAS  /tmp/ccKN2FgP.s 			page 15


 363              		.align	1
 364              		.global	FS_FAT_FilePosSet
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	FS_FAT_FilePosSet:
 371              	.LVL30:
 372              	.LFB3:
 401:rtos/uC-FS/FAT/fs_fat_file.c **** 
 402:rtos/uC-FS/FAT/fs_fat_file.c **** 
 403:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 404:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 405:rtos/uC-FS/FAT/fs_fat_file.c **** *                                         FS_FAT_FilePosSet()
 406:rtos/uC-FS/FAT/fs_fat_file.c **** *
 407:rtos/uC-FS/FAT/fs_fat_file.c **** * Description : Set file position indicator.
 408:rtos/uC-FS/FAT/fs_fat_file.c **** *
 409:rtos/uC-FS/FAT/fs_fat_file.c **** * Argument(s) : p_file      Pointer to a file.
 410:rtos/uC-FS/FAT/fs_fat_file.c **** *               ------      Argument validated by caller.
 411:rtos/uC-FS/FAT/fs_fat_file.c **** *
 412:rtos/uC-FS/FAT/fs_fat_file.c **** *               pos_new     File position.
 413:rtos/uC-FS/FAT/fs_fat_file.c **** *
 414:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 415:rtos/uC-FS/FAT/fs_fat_file.c **** *
 416:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_NONE             File position set successful.
 417:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_BUF_NONE_AVAIL   No buffer available.
 418:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_DEV              Device access error.
 419:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_DEV_FULL         Device is full (no space could be allocated
 420:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_ENTRY_CORRUPT    File system entry is corrupt.
 421:rtos/uC-FS/FAT/fs_fat_file.c **** *
 422:rtos/uC-FS/FAT/fs_fat_file.c **** * Return(s)   : none.
 423:rtos/uC-FS/FAT/fs_fat_file.c **** *
 424:rtos/uC-FS/FAT/fs_fat_file.c **** * Note(s)     : (1) The file's 'occupied' cluster contains or will contain data.  Though additional
 425:rtos/uC-FS/FAT/fs_fat_file.c **** *                   clusters may belong to the file (without valid contents), only the occupied clu
 426:rtos/uC-FS/FAT/fs_fat_file.c **** *                   count can be pre-computed & guaranteed to be linked to the cluster chain.
 427:rtos/uC-FS/FAT/fs_fat_file.c **** *
 428:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (a) For example, a 16384-byte file on a volume with a 4096-byte cluster has 4 c
 429:rtos/uC-FS/FAT/fs_fat_file.c **** *                       with data & zero or more unoccupied clusters.  To set the file position at 
 430:rtos/uC-FS/FAT/fs_fat_file.c **** *                       16384 or beyond, the position must first be set at the 0th byte of the 5th 
 431:rtos/uC-FS/FAT/fs_fat_file.c **** *                       of the file :
 432:rtos/uC-FS/FAT/fs_fat_file.c **** *
 433:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (1) Follow chain start->clus1->clus2->clus3; then
 434:rtos/uC-FS/FAT/fs_fat_file.c **** *                       (2) Get or allocate one or more additional cluster(s).
 435:rtos/uC-FS/FAT/fs_fat_file.c **** *
 436:rtos/uC-FS/FAT/fs_fat_file.c **** *               (2) If journaling is enabled & journaling started, logs may be written to the journ
 437:rtos/uC-FS/FAT/fs_fat_file.c **** *                   ensure that new clusters, after allocation are linked to the file's cluster cha
 438:rtos/uC-FS/FAT/fs_fat_file.c **** *
 439:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (a) Since this is a top level action, the journal must be cleared once it is fi
 440:rtos/uC-FS/FAT/fs_fat_file.c **** *                       or after an error occurs.
 441:rtos/uC-FS/FAT/fs_fat_file.c **** *
 442:rtos/uC-FS/FAT/fs_fat_file.c **** *               (3) When an error code force the function to exit, FS_FAT_JournalExitFileWr() must 
 443:rtos/uC-FS/FAT/fs_fat_file.c **** *                   called. FS_FAT_JournalExitFileWr() can return an error code, however the first
 444:rtos/uC-FS/FAT/fs_fat_file.c **** *                   error code to happen has priority over the second.
 445:rtos/uC-FS/FAT/fs_fat_file.c **** *
 446:rtos/uC-FS/FAT/fs_fat_file.c **** *               (4) Position can only be set in the existing portion of a file. If the position is 
 447:rtos/uC-FS/FAT/fs_fat_file.c **** *                   after the file size, the code must call FS_FAT_FileWr() instead to correctly
 448:rtos/uC-FS/FAT/fs_fat_file.c **** *                   allocate clusters and fill data region with '0'.
ARM GAS  /tmp/ccKN2FgP.s 			page 16


 449:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 450:rtos/uC-FS/FAT/fs_fat_file.c **** */
 451:rtos/uC-FS/FAT/fs_fat_file.c **** 
 452:rtos/uC-FS/FAT/fs_fat_file.c **** void  FS_FAT_FilePosSet (FS_FILE       *p_file,
 453:rtos/uC-FS/FAT/fs_fat_file.c ****                          FS_FILE_SIZE   pos_new,
 454:rtos/uC-FS/FAT/fs_fat_file.c ****                          FS_ERR        *p_err)
 455:rtos/uC-FS/FAT/fs_fat_file.c **** {
 373              		.loc 1 455 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		.loc 1 455 1 is_stmt 0 view .LVU91
 378 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 379              	.LCFI11:
 380              		.cfi_def_cfa_offset 36
 381              		.cfi_offset 4, -36
 382              		.cfi_offset 5, -32
 383              		.cfi_offset 6, -28
 384              		.cfi_offset 7, -24
 385              		.cfi_offset 8, -20
 386              		.cfi_offset 9, -16
 387              		.cfi_offset 10, -12
 388              		.cfi_offset 11, -8
 389              		.cfi_offset 14, -4
 390 0004 83B0     		sub	sp, sp, #12
 391              	.LCFI12:
 392              		.cfi_def_cfa_offset 48
 393 0006 0646     		mov	r6, r0
 394 0008 0C46     		mov	r4, r1
 395 000a 9046     		mov	r8, r2
 456:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus;
 396              		.loc 1 456 5 is_stmt 1 view .LVU92
 457:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_new;
 397              		.loc 1 457 5 view .LVU93
 458:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_cnt_cur;
 398              		.loc 1 458 5 view .LVU94
 459:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_cnt_file;
 399              		.loc 1 459 5 view .LVU95
 460:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_cnt_new;
 400              		.loc 1 460 5 view .LVU96
 461:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     clus_pos_new_sec;
 401              		.loc 1 461 5 view .LVU97
 462:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_new;
 402              		.loc 1 462 5 view .LVU98
 463:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_SEC_SIZE        sec_pos_new;
 403              		.loc 1 463 5 view .LVU99
 464:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_BUF            *p_buf;
 404              		.loc 1 464 5 view .LVU100
 465:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_DATA       *p_fat_data;
 405              		.loc 1 465 5 view .LVU101
 466:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_DATA  *p_fat_file_data;
 406              		.loc 1 466 5 view .LVU102
 467:rtos/uC-FS/FAT/fs_fat_file.c **** 
 468:rtos/uC-FS/FAT/fs_fat_file.c **** 
 469:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data = (FS_FAT_FILE_DATA *)(p_file->DataPtr);
 407              		.loc 1 469 5 view .LVU103
 408              		.loc 1 469 21 is_stmt 0 view .LVU104
ARM GAS  /tmp/ccKN2FgP.s 			page 17


 409 000c 056C     		ldr	r5, [r0, #64]
 410              	.LVL31:
 470:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_data      = (FS_FAT_DATA      *)(p_file->VolPtr->DataPtr);
 411              		.loc 1 470 5 is_stmt 1 view .LVU105
 412              		.loc 1 470 50 is_stmt 0 view .LVU106
 413 000e C06B     		ldr	r0, [r0, #60]
 414              	.LVL32:
 415              		.loc 1 470 21 view .LVU107
 416 0010 476B     		ldr	r7, [r0, #52]
 417              	.LVL33:
 471:rtos/uC-FS/FAT/fs_fat_file.c **** 
 472:rtos/uC-FS/FAT/fs_fat_file.c ****     if ((p_fat_file_data->FileFirstClus == 0u) &&
 418              		.loc 1 472 5 is_stmt 1 view .LVU108
 419              		.loc 1 472 25 is_stmt 0 view .LVU109
 420 0012 6B6A     		ldr	r3, [r5, #36]
 421              		.loc 1 472 8 view .LVU110
 422 0014 03B9     		cbnz	r3, .L29
 423              		.loc 1 472 48 discriminator 1 view .LVU111
 424 0016 51B1     		cbz	r1, .L45
 425              	.L29:
 473:rtos/uC-FS/FAT/fs_fat_file.c ****         (pos_new                        == 0u)) {
 474:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_NONE;
 475:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 476:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 477:rtos/uC-FS/FAT/fs_fat_file.c **** 
 478:rtos/uC-FS/FAT/fs_fat_file.c ****     p_buf = FSBuf_Get(p_file->VolPtr);
 426              		.loc 1 478 5 is_stmt 1 view .LVU112
 427              		.loc 1 478 13 is_stmt 0 view .LVU113
 428 0018 FFF7FEFF 		bl	FSBuf_Get
 429              	.LVL34:
 479:rtos/uC-FS/FAT/fs_fat_file.c ****     if (p_buf == (FS_BUF *)0) {
 430              		.loc 1 479 5 is_stmt 1 view .LVU114
 431              		.loc 1 479 8 is_stmt 0 view .LVU115
 432 001c 8146     		mov	r9, r0
 433 001e 40B1     		cbz	r0, .L46
 480:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 481:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 482:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 483:rtos/uC-FS/FAT/fs_fat_file.c **** 
 484:rtos/uC-FS/FAT/fs_fat_file.c **** 
 485:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------ CALC CLUS CNT
 486:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Calc occupied clus cnts (see Not
 487:rtos/uC-FS/FAT/fs_fat_file.c ****     clus_cnt_new  = (pos_new                   > 0u) ? (FS_UTIL_DIV_PWR2(pos_new                   
 434              		.loc 1 487 5 is_stmt 1 view .LVU116
 435              		.loc 1 487 144 is_stmt 0 view .LVU117
 436 0020 5CB1     		cbz	r4, .L43
 437              		.loc 1 487 57 discriminator 1 view .LVU118
 438 0022 631E     		subs	r3, r4, #1
 439 0024 97F84820 		ldrb	r2, [r7, #72]	@ zero_extendqisi2
 440 0028 D340     		lsrs	r3, r3, r2
 441              		.loc 1 487 144 discriminator 1 view .LVU119
 442 002a 0133     		adds	r3, r3, #1
 443 002c 06E0     		b	.L32
 444              	.LVL35:
 445              	.L45:
 474:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 446              		.loc 1 474 8 is_stmt 1 view .LVU120
ARM GAS  /tmp/ccKN2FgP.s 			page 18


 474:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 447              		.loc 1 474 15 is_stmt 0 view .LVU121
 448 002e 1380     		strh	r3, [r2]	@ movhi
 475:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 449              		.loc 1 475 9 is_stmt 1 view .LVU122
 450 0030 57E0     		b	.L28
 451              	.LVL36:
 452              	.L46:
 480:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 453              		.loc 1 480 8 view .LVU123
 480:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 454              		.loc 1 480 15 is_stmt 0 view .LVU124
 455 0032 6423     		movs	r3, #100
 456 0034 A8F80030 		strh	r3, [r8]	@ movhi
 481:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 457              		.loc 1 481 9 is_stmt 1 view .LVU125
 458 0038 53E0     		b	.L28
 459              	.L43:
 460              		.loc 1 487 144 is_stmt 0 view .LVU126
 461 003a 2346     		mov	r3, r4
 462              	.L32:
 463              	.LVL37:
 488:rtos/uC-FS/FAT/fs_fat_file.c ****     clus_cnt_cur  = (p_fat_file_data->FilePos  > 0u) ? (FS_UTIL_DIV_PWR2(p_fat_file_data->FilePos  
 464              		.loc 1 488 5 is_stmt 1 discriminator 4 view .LVU127
 465              		.loc 1 488 37 is_stmt 0 discriminator 4 view .LVU128
 466 003c 2A68     		ldr	r2, [r5]
 467              		.loc 1 488 144 discriminator 4 view .LVU129
 468 003e 22B1     		cbz	r2, .L33
 469              		.loc 1 488 57 discriminator 1 view .LVU130
 470 0040 013A     		subs	r2, r2, #1
 471 0042 97F84810 		ldrb	r1, [r7, #72]	@ zero_extendqisi2
 472 0046 CA40     		lsrs	r2, r2, r1
 473              		.loc 1 488 144 discriminator 1 view .LVU131
 474 0048 0132     		adds	r2, r2, #1
 475              	.L33:
 476              	.LVL38:
 489:rtos/uC-FS/FAT/fs_fat_file.c ****     clus_cnt_file = (p_fat_file_data->FileSize > 0u) ? (FS_UTIL_DIV_PWR2(p_fat_file_data->FileSize 
 477              		.loc 1 489 5 is_stmt 1 discriminator 4 view .LVU132
 478              		.loc 1 489 37 is_stmt 0 discriminator 4 view .LVU133
 479 004a 6868     		ldr	r0, [r5, #4]
 480              	.LVL39:
 481              		.loc 1 489 144 discriminator 4 view .LVU134
 482 004c 20B1     		cbz	r0, .L34
 483              		.loc 1 489 57 discriminator 1 view .LVU135
 484 004e 0138     		subs	r0, r0, #1
 485 0050 97F84810 		ldrb	r1, [r7, #72]	@ zero_extendqisi2
 486 0054 C840     		lsrs	r0, r0, r1
 487              		.loc 1 489 144 discriminator 1 view .LVU136
 488 0056 0130     		adds	r0, r0, #1
 489              	.L34:
 490              	.LVL40:
 490:rtos/uC-FS/FAT/fs_fat_file.c **** 
 491:rtos/uC-FS/FAT/fs_fat_file.c ****     if (((pos_new & (p_fat_data->ClusSize_octet - 1u)) == 0u) &&    /* If new pos is at last byte o
 491              		.loc 1 491 5 is_stmt 1 discriminator 4 view .LVU137
 492              		.loc 1 491 32 is_stmt 0 discriminator 4 view .LVU138
 493 0058 796C     		ldr	r1, [r7, #68]
 494              		.loc 1 491 49 discriminator 4 view .LVU139
ARM GAS  /tmp/ccKN2FgP.s 			page 19


 495 005a 0139     		subs	r1, r1, #1
 496              		.loc 1 491 8 discriminator 4 view .LVU140
 497 005c 11EA040C 		ands	ip, r1, r4
 498 0060 06D1     		bne	.L35
 499              		.loc 1 491 63 discriminator 1 view .LVU141
 500 0062 2CB1     		cbz	r4, .L35
 492:rtos/uC-FS/FAT/fs_fat_file.c ****         ( pos_new                                      != 0u)) {
 493:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_pos_new      = p_fat_data->SecSize;                     /* ... set sec pos past last by
 501              		.loc 1 493 9 is_stmt 1 view .LVU142
 502              		.loc 1 493 26 is_stmt 0 view .LVU143
 503 0064 D7F834B0 		ldr	fp, [r7, #52]
 504              	.LVL41:
 494:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_pos_new_sec = p_fat_data->ClusSize_sec - 1u;           /* ... &   clus at last sec of 
 505              		.loc 1 494 9 is_stmt 1 view .LVU144
 506              		.loc 1 494 38 is_stmt 0 view .LVU145
 507 0068 F96B     		ldr	r1, [r7, #60]
 508              		.loc 1 494 26 view .LVU146
 509 006a 01F1FF3A 		add	r10, r1, #-1
 510              	.LVL42:
 511              		.loc 1 494 26 view .LVU147
 512 006e 08E0     		b	.L36
 513              	.LVL43:
 514              	.L35:
 495:rtos/uC-FS/FAT/fs_fat_file.c **** 
 496:rtos/uC-FS/FAT/fs_fat_file.c ****     } else {
 497:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_pos_new      = pos_new & (p_fat_data->SecSize - 1u);
 515              		.loc 1 497 9 is_stmt 1 view .LVU148
 516              		.loc 1 497 59 is_stmt 0 view .LVU149
 517 0070 796B     		ldr	r1, [r7, #52]
 518 0072 01F1FF3B 		add	fp, r1, #-1
 519              		.loc 1 497 26 view .LVU150
 520 0076 0BEA040B 		and	fp, fp, r4
 521              	.LVL44:
 498:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_pos_new_sec = FS_UTIL_DIV_PWR2(pos_new & (p_fat_data->ClusSize_octet - 1u), p_fat_data
 522              		.loc 1 498 9 is_stmt 1 view .LVU151
 523              		.loc 1 498 28 is_stmt 0 view .LVU152
 524 007a 97F838A0 		ldrb	r10, [r7, #56]	@ zero_extendqisi2
 525              		.loc 1 498 26 view .LVU153
 526 007e 2CFA0AFA 		lsr	r10, ip, r10
 527              	.LVL45:
 528              	.L36:
 499:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 500:rtos/uC-FS/FAT/fs_fat_file.c **** 
 501:rtos/uC-FS/FAT/fs_fat_file.c **** 
 502:rtos/uC-FS/FAT/fs_fat_file.c **** 
 503:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------ POS IN CUR CL
 504:rtos/uC-FS/FAT/fs_fat_file.c ****     if (clus_cnt_new == clus_cnt_cur) {
 529              		.loc 1 504 5 is_stmt 1 view .LVU154
 530              		.loc 1 504 8 is_stmt 0 view .LVU155
 531 0082 9342     		cmp	r3, r2
 532 0084 1AD0     		beq	.L47
 505:rtos/uC-FS/FAT/fs_fat_file.c ****         clus    = FS_FAT_SEC_TO_CLUS(p_fat_data, p_fat_file_data->FileCurSec);
 506:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_new = FS_FAT_CLUS_TO_SEC(p_fat_data, clus) + clus_pos_new_sec;
 507:rtos/uC-FS/FAT/fs_fat_file.c **** 
 508:rtos/uC-FS/FAT/fs_fat_file.c **** 
 509:rtos/uC-FS/FAT/fs_fat_file.c **** 
 510:rtos/uC-FS/FAT/fs_fat_file.c ****     } else if (clus_cnt_new <= 1u) {                            /* ------------ POS IN FIRST CLUS, 
ARM GAS  /tmp/ccKN2FgP.s 			page 20


 533              		.loc 1 510 12 is_stmt 1 view .LVU156
 534              		.loc 1 510 15 is_stmt 0 view .LVU157
 535 0086 012B     		cmp	r3, #1
 536 0088 2ED9     		bls	.L48
 511:rtos/uC-FS/FAT/fs_fat_file.c ****         if (p_fat_file_data->FileFirstClus == 0u) {             /* If first sec zero (no data) ... 
 512:rtos/uC-FS/FAT/fs_fat_file.c ****            *p_err = FS_ERR_VOL_INVALID_OP;
 513:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 514:rtos/uC-FS/FAT/fs_fat_file.c ****             return;
 515:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 516:rtos/uC-FS/FAT/fs_fat_file.c **** 
 517:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_new = p_fat_file_data->FileFirstClus;
 518:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_new  = FS_FAT_CLUS_TO_SEC(p_fat_data, clus_new) + clus_pos_new_sec;
 519:rtos/uC-FS/FAT/fs_fat_file.c **** 
 520:rtos/uC-FS/FAT/fs_fat_file.c **** 
 521:rtos/uC-FS/FAT/fs_fat_file.c **** 
 522:rtos/uC-FS/FAT/fs_fat_file.c ****     } else if (clus_cnt_new > clus_cnt_file) {                  /* --------------- POS BEYOND LAST 
 537              		.loc 1 522 12 is_stmt 1 view .LVU158
 538              		.loc 1 522 15 is_stmt 0 view .LVU159
 539 008a 8342     		cmp	r3, r0
 540 008c 3ED8     		bhi	.L49
 523:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
 524:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
 525:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 526:rtos/uC-FS/FAT/fs_fat_file.c **** 
 527:rtos/uC-FS/FAT/fs_fat_file.c **** 
 528:rtos/uC-FS/FAT/fs_fat_file.c ****     } else {                                                    /* ----- POS BEFORE LAST CLUS, NOT 
 529:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Move to last known clus.        
 530:rtos/uC-FS/FAT/fs_fat_file.c ****         clus = FS_FAT_ClusChainFollow(p_file->VolPtr,
 541              		.loc 1 530 9 is_stmt 1 view .LVU160
 542              		.loc 1 530 16 is_stmt 0 view .LVU161
 543 008e 6A6A     		ldr	r2, [r5, #36]
 544              	.LVL46:
 545              		.loc 1 530 16 view .LVU162
 546 0090 CDF80480 		str	r8, [sp, #4]
 547 0094 0021     		movs	r1, #0
 548 0096 0091     		str	r1, [sp]
 549 0098 013B     		subs	r3, r3, #1
 550              	.LVL47:
 551              		.loc 1 530 16 view .LVU163
 552 009a 4946     		mov	r1, r9
 553 009c F06B     		ldr	r0, [r6, #60]
 554              	.LVL48:
 555              		.loc 1 530 16 view .LVU164
 556 009e FFF7FEFF 		bl	FS_FAT_ClusChainFollow
 557              	.LVL49:
 531:rtos/uC-FS/FAT/fs_fat_file.c ****                                       p_buf,
 532:rtos/uC-FS/FAT/fs_fat_file.c ****                                       p_fat_file_data->FileFirstClus,
 533:rtos/uC-FS/FAT/fs_fat_file.c ****                                      (clus_cnt_new - 1u),
 534:rtos/uC-FS/FAT/fs_fat_file.c ****                                       DEF_NULL,
 535:rtos/uC-FS/FAT/fs_fat_file.c ****                                       p_err);
 536:rtos/uC-FS/FAT/fs_fat_file.c **** 
 537:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
 558              		.loc 1 537 9 is_stmt 1 view .LVU165
 559              		.loc 1 537 13 is_stmt 0 view .LVU166
 560 00a2 B8F80030 		ldrh	r3, [r8]
 561              		.loc 1 537 12 view .LVU167
 562 00a6 002B     		cmp	r3, #0
ARM GAS  /tmp/ccKN2FgP.s 			page 21


 563 00a8 38D1     		bne	.L50
 538:rtos/uC-FS/FAT/fs_fat_file.c ****              FSBuf_Free(p_buf);
 539:rtos/uC-FS/FAT/fs_fat_file.c ****              return;
 540:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 541:rtos/uC-FS/FAT/fs_fat_file.c **** 
 542:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_new = FS_FAT_CLUS_TO_SEC(p_fat_data, clus) + clus_pos_new_sec;
 564              		.loc 1 542 9 is_stmt 1 view .LVU168
 565              		.loc 1 542 19 is_stmt 0 view .LVU169
 566 00aa F96A     		ldr	r1, [r7, #44]
 567 00ac 0238     		subs	r0, r0, #2
 568              	.LVL50:
 569              		.loc 1 542 19 view .LVU170
 570 00ae 97F84030 		ldrb	r3, [r7, #64]	@ zero_extendqisi2
 571 00b2 9840     		lsls	r0, r0, r3
 572              	.LVL51:
 573              		.loc 1 542 19 view .LVU171
 574 00b4 0844     		add	r0, r0, r1
 575              		.loc 1 542 17 view .LVU172
 576 00b6 00EB0A01 		add	r1, r0, r10
 577              	.LVL52:
 578              		.loc 1 542 17 view .LVU173
 579 00ba 08E0     		b	.L38
 580              	.LVL53:
 581              	.L47:
 505:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_new = FS_FAT_CLUS_TO_SEC(p_fat_data, clus) + clus_pos_new_sec;
 582              		.loc 1 505 9 is_stmt 1 view .LVU174
 505:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_new = FS_FAT_CLUS_TO_SEC(p_fat_data, clus) + clus_pos_new_sec;
 583              		.loc 1 505 19 is_stmt 0 view .LVU175
 584 00bc AB6A     		ldr	r3, [r5, #40]
 585              	.LVL54:
 505:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_new = FS_FAT_CLUS_TO_SEC(p_fat_data, clus) + clus_pos_new_sec;
 586              		.loc 1 505 19 view .LVU176
 587 00be F96A     		ldr	r1, [r7, #44]
 588 00c0 5B1A     		subs	r3, r3, r1
 589 00c2 97F84020 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 590              	.LVL55:
 505:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_new = FS_FAT_CLUS_TO_SEC(p_fat_data, clus) + clus_pos_new_sec;
 591              		.loc 1 505 19 view .LVU177
 592 00c6 D340     		lsrs	r3, r3, r2
 593              	.LVL56:
 506:rtos/uC-FS/FAT/fs_fat_file.c **** 
 594              		.loc 1 506 9 is_stmt 1 view .LVU178
 506:rtos/uC-FS/FAT/fs_fat_file.c **** 
 595              		.loc 1 506 19 is_stmt 0 view .LVU179
 596 00c8 9340     		lsls	r3, r3, r2
 597              	.LVL57:
 506:rtos/uC-FS/FAT/fs_fat_file.c **** 
 598              		.loc 1 506 19 view .LVU180
 599 00ca 1944     		add	r1, r1, r3
 600              	.LVL58:
 506:rtos/uC-FS/FAT/fs_fat_file.c **** 
 601              		.loc 1 506 17 view .LVU181
 602 00cc 5144     		add	r1, r1, r10
 603              	.LVL59:
 604              	.L38:
 543:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 544:rtos/uC-FS/FAT/fs_fat_file.c **** 
ARM GAS  /tmp/ccKN2FgP.s 			page 22


 545:rtos/uC-FS/FAT/fs_fat_file.c **** 
 546:rtos/uC-FS/FAT/fs_fat_file.c **** 
 547:rtos/uC-FS/FAT/fs_fat_file.c **** 
 548:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ----------------- UPDATE FILE IN
 549:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FilePos       = pos_new;
 605              		.loc 1 549 5 is_stmt 1 view .LVU182
 606              		.loc 1 549 36 is_stmt 0 view .LVU183
 607 00ce 2C60     		str	r4, [r5]
 550:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSec    = sec_new;
 608              		.loc 1 550 5 is_stmt 1 view .LVU184
 609              		.loc 1 550 36 is_stmt 0 view .LVU185
 610 00d0 A962     		str	r1, [r5, #40]
 551:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSecPos = sec_pos_new;
 611              		.loc 1 551 5 is_stmt 1 view .LVU186
 612              		.loc 1 551 36 is_stmt 0 view .LVU187
 613 00d2 C5F82CB0 		str	fp, [r5, #44]
 552:rtos/uC-FS/FAT/fs_fat_file.c **** 
 553:rtos/uC-FS/FAT/fs_fat_file.c ****     FSBuf_Free(p_buf);
 614              		.loc 1 553 5 is_stmt 1 view .LVU188
 615 00d6 4846     		mov	r0, r9
 616 00d8 FFF7FEFF 		bl	FSBuf_Free
 617              	.LVL60:
 554:rtos/uC-FS/FAT/fs_fat_file.c ****    *p_err = FS_ERR_NONE;
 618              		.loc 1 554 4 view .LVU189
 619              		.loc 1 554 11 is_stmt 0 view .LVU190
 620 00dc 0023     		movs	r3, #0
 621 00de A8F80030 		strh	r3, [r8]	@ movhi
 622              	.LVL61:
 623              	.L28:
 555:rtos/uC-FS/FAT/fs_fat_file.c **** }
 624              		.loc 1 555 1 view .LVU191
 625 00e2 03B0     		add	sp, sp, #12
 626              	.LCFI13:
 627              		.cfi_remember_state
 628              		.cfi_def_cfa_offset 36
 629              		@ sp needed
 630 00e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 631              	.LVL62:
 632              	.L48:
 633              	.LCFI14:
 634              		.cfi_restore_state
 511:rtos/uC-FS/FAT/fs_fat_file.c ****            *p_err = FS_ERR_VOL_INVALID_OP;
 635              		.loc 1 511 9 is_stmt 1 view .LVU192
 511:rtos/uC-FS/FAT/fs_fat_file.c ****            *p_err = FS_ERR_VOL_INVALID_OP;
 636              		.loc 1 511 28 is_stmt 0 view .LVU193
 637 00e8 6B6A     		ldr	r3, [r5, #36]
 638              	.LVL63:
 511:rtos/uC-FS/FAT/fs_fat_file.c ****            *p_err = FS_ERR_VOL_INVALID_OP;
 639              		.loc 1 511 12 view .LVU194
 640 00ea 3BB1     		cbz	r3, .L51
 517:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_new  = FS_FAT_CLUS_TO_SEC(p_fat_data, clus_new) + clus_pos_new_sec;
 641              		.loc 1 517 9 is_stmt 1 view .LVU195
 642              	.LVL64:
 518:rtos/uC-FS/FAT/fs_fat_file.c **** 
 643              		.loc 1 518 9 view .LVU196
 518:rtos/uC-FS/FAT/fs_fat_file.c **** 
 644              		.loc 1 518 20 is_stmt 0 view .LVU197
ARM GAS  /tmp/ccKN2FgP.s 			page 23


 645 00ec F96A     		ldr	r1, [r7, #44]
 646 00ee 023B     		subs	r3, r3, #2
 647              	.LVL65:
 518:rtos/uC-FS/FAT/fs_fat_file.c **** 
 648              		.loc 1 518 20 view .LVU198
 649 00f0 97F84020 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 650              	.LVL66:
 518:rtos/uC-FS/FAT/fs_fat_file.c **** 
 651              		.loc 1 518 20 view .LVU199
 652 00f4 9340     		lsls	r3, r3, r2
 653 00f6 1944     		add	r1, r1, r3
 518:rtos/uC-FS/FAT/fs_fat_file.c **** 
 654              		.loc 1 518 18 view .LVU200
 655 00f8 5144     		add	r1, r1, r10
 656              	.LVL67:
 518:rtos/uC-FS/FAT/fs_fat_file.c **** 
 657              		.loc 1 518 18 view .LVU201
 658 00fa E8E7     		b	.L38
 659              	.LVL68:
 660              	.L51:
 512:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 661              		.loc 1 512 12 is_stmt 1 view .LVU202
 512:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 662              		.loc 1 512 19 is_stmt 0 view .LVU203
 663 00fc 40F27D53 		movw	r3, #1405
 664 0100 A8F80030 		strh	r3, [r8]	@ movhi
 513:rtos/uC-FS/FAT/fs_fat_file.c ****             return;
 665              		.loc 1 513 13 is_stmt 1 view .LVU204
 666 0104 4846     		mov	r0, r9
 667              	.LVL69:
 513:rtos/uC-FS/FAT/fs_fat_file.c ****             return;
 668              		.loc 1 513 13 is_stmt 0 view .LVU205
 669 0106 FFF7FEFF 		bl	FSBuf_Free
 670              	.LVL70:
 514:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 671              		.loc 1 514 13 is_stmt 1 view .LVU206
 672 010a EAE7     		b	.L28
 673              	.LVL71:
 674              	.L49:
 523:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
 675              		.loc 1 523 8 view .LVU207
 523:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
 676              		.loc 1 523 15 is_stmt 0 view .LVU208
 677 010c 40F27D53 		movw	r3, #1405
 678              	.LVL72:
 523:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
 679              		.loc 1 523 15 view .LVU209
 680 0110 A8F80030 		strh	r3, [r8]	@ movhi
 524:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 681              		.loc 1 524 9 is_stmt 1 view .LVU210
 682 0114 4846     		mov	r0, r9
 683              	.LVL73:
 524:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 684              		.loc 1 524 9 is_stmt 0 view .LVU211
 685 0116 FFF7FEFF 		bl	FSBuf_Free
 686              	.LVL74:
 525:rtos/uC-FS/FAT/fs_fat_file.c **** 
ARM GAS  /tmp/ccKN2FgP.s 			page 24


 687              		.loc 1 525 9 is_stmt 1 view .LVU212
 688 011a E2E7     		b	.L28
 689              	.LVL75:
 690              	.L50:
 538:rtos/uC-FS/FAT/fs_fat_file.c ****              return;
 691              		.loc 1 538 14 view .LVU213
 692 011c 4846     		mov	r0, r9
 693              	.LVL76:
 538:rtos/uC-FS/FAT/fs_fat_file.c ****              return;
 694              		.loc 1 538 14 is_stmt 0 view .LVU214
 695 011e FFF7FEFF 		bl	FSBuf_Free
 696              	.LVL77:
 539:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 697              		.loc 1 539 14 is_stmt 1 view .LVU215
 698 0122 DEE7     		b	.L28
 699              		.cfi_endproc
 700              	.LFE3:
 702              		.section	.text.FS_FAT_FileQuery,"ax",%progbits
 703              		.align	1
 704              		.global	FS_FAT_FileQuery
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv4-sp-d16
 710              	FS_FAT_FileQuery:
 711              	.LVL78:
 712              	.LFB4:
 556:rtos/uC-FS/FAT/fs_fat_file.c **** 
 557:rtos/uC-FS/FAT/fs_fat_file.c **** 
 558:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 559:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 560:rtos/uC-FS/FAT/fs_fat_file.c **** *                                         FS_FAT_FileQuery()
 561:rtos/uC-FS/FAT/fs_fat_file.c **** *
 562:rtos/uC-FS/FAT/fs_fat_file.c **** * Description : Get information about a file.
 563:rtos/uC-FS/FAT/fs_fat_file.c **** *
 564:rtos/uC-FS/FAT/fs_fat_file.c **** * Argument(s) : p_file      Pointer to a file.
 565:rtos/uC-FS/FAT/fs_fat_file.c **** *               ------      Argument validated by caller.
 566:rtos/uC-FS/FAT/fs_fat_file.c **** *
 567:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_info      Pointer to structure that will receive the file information.
 568:rtos/uC-FS/FAT/fs_fat_file.c **** *               ------      Pointer validated by caller.
 569:rtos/uC-FS/FAT/fs_fat_file.c **** *
 570:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 571:rtos/uC-FS/FAT/fs_fat_file.c **** *
 572:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_NONE              File information obtained successful.
 573:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_BUF_NONE_AVAIL    No buffer available.
 574:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_DEV               Device access error.
 575:rtos/uC-FS/FAT/fs_fat_file.c **** *
 576:rtos/uC-FS/FAT/fs_fat_file.c **** * Return(s)   : none.
 577:rtos/uC-FS/FAT/fs_fat_file.c **** *
 578:rtos/uC-FS/FAT/fs_fat_file.c **** * Note(s)     : none.
 579:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 580:rtos/uC-FS/FAT/fs_fat_file.c **** */
 581:rtos/uC-FS/FAT/fs_fat_file.c **** 
 582:rtos/uC-FS/FAT/fs_fat_file.c **** void  FS_FAT_FileQuery (FS_FILE        *p_file,
 583:rtos/uC-FS/FAT/fs_fat_file.c ****                         FS_ENTRY_INFO  *p_info,
 584:rtos/uC-FS/FAT/fs_fat_file.c ****                         FS_ERR         *p_err)
 585:rtos/uC-FS/FAT/fs_fat_file.c **** {
ARM GAS  /tmp/ccKN2FgP.s 			page 25


 713              		.loc 1 585 1 view -0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		.loc 1 585 1 is_stmt 0 view .LVU217
 718 0000 70B5     		push	{r4, r5, r6, lr}
 719              	.LCFI15:
 720              		.cfi_def_cfa_offset 16
 721              		.cfi_offset 4, -16
 722              		.cfi_offset 5, -12
 723              		.cfi_offset 6, -8
 724              		.cfi_offset 14, -4
 725 0002 0C46     		mov	r4, r1
 726 0004 1646     		mov	r6, r2
 586:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FLAGS           fat_attrib;
 727              		.loc 1 586 5 is_stmt 1 view .LVU218
 587:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FLAGS           fs_attrib;
 728              		.loc 1 587 5 view .LVU219
 588:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_DATA  *p_fat_file_data;
 729              		.loc 1 588 5 view .LVU220
 589:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_DATA       *p_fat_data;
 730              		.loc 1 589 5 view .LVU221
 590:rtos/uC-FS/FAT/fs_fat_file.c **** 
 591:rtos/uC-FS/FAT/fs_fat_file.c **** 
 592:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_data      = (FS_FAT_DATA      *)(p_file->VolPtr->DataPtr);
 731              		.loc 1 592 5 view .LVU222
 732              		.loc 1 592 50 is_stmt 0 view .LVU223
 733 0006 C36B     		ldr	r3, [r0, #60]
 734              		.loc 1 592 21 view .LVU224
 735 0008 596B     		ldr	r1, [r3, #52]
 736              	.LVL79:
 593:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data = (FS_FAT_FILE_DATA *)(p_file->DataPtr);
 737              		.loc 1 593 5 is_stmt 1 view .LVU225
 738              		.loc 1 593 21 is_stmt 0 view .LVU226
 739 000a 056C     		ldr	r5, [r0, #64]
 740              	.LVL80:
 594:rtos/uC-FS/FAT/fs_fat_file.c **** 
 595:rtos/uC-FS/FAT/fs_fat_file.c **** 
 596:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------- FILE ATTRIB'
 597:rtos/uC-FS/FAT/fs_fat_file.c ****     fat_attrib = p_fat_file_data->Attrib;
 741              		.loc 1 597 5 is_stmt 1 view .LVU227
 742              		.loc 1 597 16 is_stmt 0 view .LVU228
 743 000c 2A6B     		ldr	r2, [r5, #48]
 744              	.LVL81:
 598:rtos/uC-FS/FAT/fs_fat_file.c ****     fs_attrib  = 0u;
 745              		.loc 1 598 5 is_stmt 1 view .LVU229
 599:rtos/uC-FS/FAT/fs_fat_file.c ****     DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_RD);
 746              		.loc 1 599 5 view .LVU230
 600:rtos/uC-FS/FAT/fs_fat_file.c ****     if (DEF_BIT_IS_CLR(fat_attrib, FS_FAT_DIRENT_ATTR_READ_ONLY) == DEF_YES) {
 747              		.loc 1 600 5 view .LVU231
 748              		.loc 1 600 8 is_stmt 0 view .LVU232
 749 000e 12F0010F 		tst	r2, #1
 750 0012 2CD0     		beq	.L57
 599:rtos/uC-FS/FAT/fs_fat_file.c ****     DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_RD);
 751              		.loc 1 599 5 view .LVU233
 752 0014 0123     		movs	r3, #1
 753              	.L53:
ARM GAS  /tmp/ccKN2FgP.s 			page 26


 754              	.LVL82:
 601:rtos/uC-FS/FAT/fs_fat_file.c ****         DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_WR);             /* NOT read only.                  
 602:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 603:rtos/uC-FS/FAT/fs_fat_file.c ****     if (DEF_BIT_IS_SET(fat_attrib, FS_FAT_DIRENT_ATTR_HIDDEN   ) == DEF_YES) {
 755              		.loc 1 603 5 is_stmt 1 view .LVU234
 756              		.loc 1 603 8 is_stmt 0 view .LVU235
 757 0016 12F0020F 		tst	r2, #2
 758 001a 01D0     		beq	.L54
 604:rtos/uC-FS/FAT/fs_fat_file.c ****         DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_HIDDEN);         /* Hidden.                         
 759              		.loc 1 604 9 is_stmt 1 view .LVU236
 760 001c 43F00403 		orr	r3, r3, #4
 761              	.LVL83:
 762              	.L54:
 605:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 606:rtos/uC-FS/FAT/fs_fat_file.c ****     if (DEF_BIT_IS_SET(fat_attrib, FS_FAT_DIRENT_ATTR_DIRECTORY) == DEF_YES) {
 763              		.loc 1 606 5 view .LVU237
 764              		.loc 1 606 8 is_stmt 0 view .LVU238
 765 0020 12F0100F 		tst	r2, #16
 766 0024 01D0     		beq	.L55
 607:rtos/uC-FS/FAT/fs_fat_file.c ****         DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_DIR);            /* Directory.                      
 767              		.loc 1 607 9 is_stmt 1 view .LVU239
 768 0026 43F04003 		orr	r3, r3, #64
 769              	.LVL84:
 770              	.L55:
 608:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 609:rtos/uC-FS/FAT/fs_fat_file.c ****     p_info->Attrib = fs_attrib;
 771              		.loc 1 609 5 view .LVU240
 772              		.loc 1 609 20 is_stmt 0 view .LVU241
 773 002a 2360     		str	r3, [r4]
 610:rtos/uC-FS/FAT/fs_fat_file.c **** 
 611:rtos/uC-FS/FAT/fs_fat_file.c **** 
 612:rtos/uC-FS/FAT/fs_fat_file.c **** 
 613:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* --------------------- FILE SIZE 
 614:rtos/uC-FS/FAT/fs_fat_file.c ****     p_info->Size    =  p_fat_file_data->FileSize;               /* File size.                      
 774              		.loc 1 614 5 is_stmt 1 view .LVU242
 775              		.loc 1 614 39 is_stmt 0 view .LVU243
 776 002c 6B68     		ldr	r3, [r5, #4]
 777              	.LVL85:
 778              		.loc 1 614 21 view .LVU244
 779 002e 6360     		str	r3, [r4, #4]
 615:rtos/uC-FS/FAT/fs_fat_file.c ****     p_info->BlkSize =  p_fat_data->ClusSize_octet;              /* Blk size (bytes per clus) & nbr 
 780              		.loc 1 615 5 is_stmt 1 view .LVU245
 781              		.loc 1 615 34 is_stmt 0 view .LVU246
 782 0030 4B6C     		ldr	r3, [r1, #68]
 783              		.loc 1 615 21 view .LVU247
 784 0032 A361     		str	r3, [r4, #24]
 616:rtos/uC-FS/FAT/fs_fat_file.c ****     p_info->BlkCnt  = (p_fat_file_data->FileSize == 0u) ? (FS_UTIL_DIV_PWR2(p_fat_file_data->FileSi
 785              		.loc 1 616 5 is_stmt 1 view .LVU248
 786              		.loc 1 616 39 is_stmt 0 view .LVU249
 787 0034 6B68     		ldr	r3, [r5, #4]
 788              		.loc 1 616 147 view .LVU250
 789 0036 E3B9     		cbnz	r3, .L58
 790              		.loc 1 616 60 discriminator 1 view .LVU251
 791 0038 013B     		subs	r3, r3, #1
 792 003a 91F84820 		ldrb	r2, [r1, #72]	@ zero_extendqisi2
 793              	.LVL86:
 794              		.loc 1 616 60 discriminator 1 view .LVU252
ARM GAS  /tmp/ccKN2FgP.s 			page 27


 795 003e D340     		lsrs	r3, r3, r2
 796              		.loc 1 616 147 discriminator 1 view .LVU253
 797 0040 0133     		adds	r3, r3, #1
 798              	.L56:
 799              		.loc 1 616 21 discriminator 4 view .LVU254
 800 0042 6361     		str	r3, [r4, #20]
 617:rtos/uC-FS/FAT/fs_fat_file.c **** 
 618:rtos/uC-FS/FAT/fs_fat_file.c **** 
 619:rtos/uC-FS/FAT/fs_fat_file.c **** 
 620:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ----------------- FILE DATE & TI
 621:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_DateTimeParse(&p_info->DateTimeCreate,               /* Creation date/time.             
 801              		.loc 1 621 5 is_stmt 1 discriminator 4 view .LVU255
 802 0044 EA8E     		ldrh	r2, [r5, #54]
 803 0046 A98E     		ldrh	r1, [r5, #52]
 804              	.LVL87:
 805              		.loc 1 621 5 is_stmt 0 discriminator 4 view .LVU256
 806 0048 04F10800 		add	r0, r4, #8
 807              	.LVL88:
 808              		.loc 1 621 5 discriminator 4 view .LVU257
 809 004c FFF7FEFF 		bl	FS_FAT_DateTimeParse
 810              	.LVL89:
 622:rtos/uC-FS/FAT/fs_fat_file.c ****                           p_fat_file_data->DateCreate,
 623:rtos/uC-FS/FAT/fs_fat_file.c ****                           p_fat_file_data->TimeCreate);
 624:rtos/uC-FS/FAT/fs_fat_file.c **** 
 625:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_DateTimeParse(&p_info->DateTimeWr,                   /* Wr       date/time.             
 811              		.loc 1 625 5 is_stmt 1 discriminator 4 view .LVU258
 812 0050 AA8F     		ldrh	r2, [r5, #60]
 813 0052 698F     		ldrh	r1, [r5, #58]
 814 0054 04F11000 		add	r0, r4, #16
 815 0058 FFF7FEFF 		bl	FS_FAT_DateTimeParse
 816              	.LVL90:
 626:rtos/uC-FS/FAT/fs_fat_file.c ****                           p_fat_file_data->DateWr,
 627:rtos/uC-FS/FAT/fs_fat_file.c ****                           p_fat_file_data->TimeWr);
 628:rtos/uC-FS/FAT/fs_fat_file.c **** 
 629:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_DateTimeParse(&p_info->DateAccess,                   /* Access   date.                  
 817              		.loc 1 629 5 discriminator 4 view .LVU259
 818 005c 0022     		movs	r2, #0
 819 005e 298F     		ldrh	r1, [r5, #56]
 820 0060 04F10C00 		add	r0, r4, #12
 821 0064 FFF7FEFF 		bl	FS_FAT_DateTimeParse
 822              	.LVL91:
 630:rtos/uC-FS/FAT/fs_fat_file.c ****                           p_fat_file_data->DateAccess,
 631:rtos/uC-FS/FAT/fs_fat_file.c ****                           0u);
 632:rtos/uC-FS/FAT/fs_fat_file.c **** 
 633:rtos/uC-FS/FAT/fs_fat_file.c ****    *p_err = FS_ERR_NONE;
 823              		.loc 1 633 4 discriminator 4 view .LVU260
 824              		.loc 1 633 11 is_stmt 0 discriminator 4 view .LVU261
 825 0068 0023     		movs	r3, #0
 826 006a 3380     		strh	r3, [r6]	@ movhi
 634:rtos/uC-FS/FAT/fs_fat_file.c **** }
 827              		.loc 1 634 1 discriminator 4 view .LVU262
 828 006c 70BD     		pop	{r4, r5, r6, pc}
 829              	.LVL92:
 830              	.L57:
 601:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 831              		.loc 1 601 9 view .LVU263
 832 006e 0323     		movs	r3, #3
ARM GAS  /tmp/ccKN2FgP.s 			page 28


 833 0070 D1E7     		b	.L53
 834              	.LVL93:
 835              	.L58:
 616:rtos/uC-FS/FAT/fs_fat_file.c **** 
 836              		.loc 1 616 147 view .LVU264
 837 0072 0023     		movs	r3, #0
 838 0074 E5E7     		b	.L56
 839              		.cfi_endproc
 840              	.LFE4:
 842              		.section	.text.FS_FAT_FileRd,"ax",%progbits
 843              		.align	1
 844              		.global	FS_FAT_FileRd
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu fpv4-sp-d16
 850              	FS_FAT_FileRd:
 851              	.LVL94:
 852              	.LFB5:
 635:rtos/uC-FS/FAT/fs_fat_file.c **** 
 636:rtos/uC-FS/FAT/fs_fat_file.c **** 
 637:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 638:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 639:rtos/uC-FS/FAT/fs_fat_file.c **** *                                           FS_FAT_FileRd()
 640:rtos/uC-FS/FAT/fs_fat_file.c **** *
 641:rtos/uC-FS/FAT/fs_fat_file.c **** * Description : Read from a file.
 642:rtos/uC-FS/FAT/fs_fat_file.c **** *
 643:rtos/uC-FS/FAT/fs_fat_file.c **** * Argument(s) : p_file      Pointer to a file.
 644:rtos/uC-FS/FAT/fs_fat_file.c **** *               ------      Argument validated by caller.
 645:rtos/uC-FS/FAT/fs_fat_file.c **** *
 646:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_dest      Pointer to destination buffer.
 647:rtos/uC-FS/FAT/fs_fat_file.c **** *               ------      Argument validated by caller.
 648:rtos/uC-FS/FAT/fs_fat_file.c **** *
 649:rtos/uC-FS/FAT/fs_fat_file.c **** *               size        Number of octets to read.
 650:rtos/uC-FS/FAT/fs_fat_file.c **** *
 651:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 652:rtos/uC-FS/FAT/fs_fat_file.c **** *
 653:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_NONE              File read successful.
 654:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_BUF_NONE_AVAIL    No buffer available.
 655:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_DEV               Device access error.
 656:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_ENTRY_CORRUPT     File system entry corrupt.
 657:rtos/uC-FS/FAT/fs_fat_file.c **** *
 658:rtos/uC-FS/FAT/fs_fat_file.c **** * Return(s)   : Number of bytes read, if file read successful.
 659:rtos/uC-FS/FAT/fs_fat_file.c **** *               0,                    otherwise.
 660:rtos/uC-FS/FAT/fs_fat_file.c **** *
 661:rtos/uC-FS/FAT/fs_fat_file.c **** * Note(s)     : (1) The 'FileCurSec' member of 'p_fat_file_data' will NOT be updated if the file re
 662:rtos/uC-FS/FAT/fs_fat_file.c **** *                   reaches the end of a sector.  In this case, 'FileCurSecPos' will equal the sect
 663:rtos/uC-FS/FAT/fs_fat_file.c **** *                   size; such a condition MUST be checked at the beginning of any file read/write 
 664:rtos/uC-FS/FAT/fs_fat_file.c **** *                   that the current sector number can be determined.
 665:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 666:rtos/uC-FS/FAT/fs_fat_file.c **** */
 667:rtos/uC-FS/FAT/fs_fat_file.c **** 
 668:rtos/uC-FS/FAT/fs_fat_file.c **** CPU_SIZE_T  FS_FAT_FileRd (FS_FILE     *p_file,
 669:rtos/uC-FS/FAT/fs_fat_file.c ****                            void        *p_dest,
 670:rtos/uC-FS/FAT/fs_fat_file.c ****                            CPU_SIZE_T   size,
 671:rtos/uC-FS/FAT/fs_fat_file.c ****                            FS_ERR      *p_err)
 672:rtos/uC-FS/FAT/fs_fat_file.c **** {
ARM GAS  /tmp/ccKN2FgP.s 			page 29


 853              		.loc 1 672 1 is_stmt 1 view -0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 32
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              		.loc 1 672 1 is_stmt 0 view .LVU266
 858 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 859              	.LCFI16:
 860              		.cfi_def_cfa_offset 36
 861              		.cfi_offset 4, -36
 862              		.cfi_offset 5, -32
 863              		.cfi_offset 6, -28
 864              		.cfi_offset 7, -24
 865              		.cfi_offset 8, -20
 866              		.cfi_offset 9, -16
 867              		.cfi_offset 10, -12
 868              		.cfi_offset 11, -8
 869              		.cfi_offset 14, -4
 870 0004 8BB0     		sub	sp, sp, #44
 871              	.LCFI17:
 872              		.cfi_def_cfa_offset 80
 873 0006 8346     		mov	fp, r0
 874 0008 0591     		str	r1, [sp, #20]
 875 000a 1446     		mov	r4, r2
 876 000c 9846     		mov	r8, r3
 673:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     clus_cur_sec_rem;
 877              		.loc 1 673 5 is_stmt 1 view .LVU267
 674:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_cnt_rd;
 878              		.loc 1 674 5 view .LVU268
 675:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_cnt_rem;
 879              		.loc 1 675 5 view .LVU269
 676:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_cur;
 880              		.loc 1 676 5 view .LVU270
 677:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_next;
 881              		.loc 1 677 5 view .LVU271
 678:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_cur_pos;
 882              		.loc 1 678 5 view .LVU272
 679:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_SIZE_T         size_rd;
 883              		.loc 1 679 5 view .LVU273
 680:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_SIZE_T         size_rem;
 884              		.loc 1 680 5 view .LVU274
 681:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_BUF            *p_buf;
 885              		.loc 1 681 5 view .LVU275
 682:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_INT08U        *p_dest_08;
 886              		.loc 1 682 5 view .LVU276
 683:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_DATA       *p_fat_data;
 887              		.loc 1 683 5 view .LVU277
 684:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_DATA  *p_fat_file_data;
 888              		.loc 1 684 5 view .LVU278
 685:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_INT08U        *p_temp_08;
 889              		.loc 1 685 5 view .LVU279
 686:rtos/uC-FS/FAT/fs_fat_file.c **** 
 687:rtos/uC-FS/FAT/fs_fat_file.c **** 
 688:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------ PREPARE FOR R
 689:rtos/uC-FS/FAT/fs_fat_file.c ****     p_buf = FSBuf_Get(p_file->VolPtr);                          /* Get rd buf.                     
 890              		.loc 1 689 5 view .LVU280
 891              		.loc 1 689 13 is_stmt 0 view .LVU281
 892 000e C06B     		ldr	r0, [r0, #60]
ARM GAS  /tmp/ccKN2FgP.s 			page 30


 893              	.LVL95:
 894              		.loc 1 689 13 view .LVU282
 895 0010 FFF7FEFF 		bl	FSBuf_Get
 896              	.LVL96:
 690:rtos/uC-FS/FAT/fs_fat_file.c ****     if (p_buf == (FS_BUF *)0) {
 897              		.loc 1 690 5 is_stmt 1 view .LVU283
 898              		.loc 1 690 8 is_stmt 0 view .LVU284
 899 0014 0490     		str	r0, [sp, #16]
 900 0016 68B3     		cbz	r0, .L95
 691:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 692:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 693:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 694:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data = (FS_FAT_FILE_DATA *)(p_file->DataPtr);
 901              		.loc 1 694 5 is_stmt 1 view .LVU285
 902              		.loc 1 694 21 is_stmt 0 view .LVU286
 903 0018 DBF84020 		ldr	r2, [fp, #64]
 904 001c 0992     		str	r2, [sp, #36]
 905              	.LVL97:
 695:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_data      = (FS_FAT_DATA      *)(p_file->VolPtr->DataPtr);
 906              		.loc 1 695 5 is_stmt 1 view .LVU287
 907              		.loc 1 695 50 is_stmt 0 view .LVU288
 908 001e DBF83C00 		ldr	r0, [fp, #60]
 909              	.LVL98:
 910              		.loc 1 695 21 view .LVU289
 911 0022 D0F834A0 		ldr	r10, [r0, #52]
 912              	.LVL99:
 696:rtos/uC-FS/FAT/fs_fat_file.c ****     p_dest_08       = (CPU_INT08U       *)(p_dest);
 913              		.loc 1 696 5 is_stmt 1 view .LVU290
 697:rtos/uC-FS/FAT/fs_fat_file.c **** 
 698:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* If first sec zero (no data) or f
 699:rtos/uC-FS/FAT/fs_fat_file.c ****     if ((p_fat_file_data->FileFirstClus == 0u)                        ||
 914              		.loc 1 699 5 view .LVU291
 915              		.loc 1 699 25 is_stmt 0 view .LVU292
 916 0026 536A     		ldr	r3, [r2, #36]
 917              		.loc 1 699 8 view .LVU293
 918 0028 53B3     		cbz	r3, .L63
 700:rtos/uC-FS/FAT/fs_fat_file.c ****         (p_fat_file_data->FilePos       >= p_fat_file_data->FileSize)) {
 919              		.loc 1 700 25 discriminator 1 view .LVU294
 920 002a 1368     		ldr	r3, [r2]
 921              		.loc 1 700 59 discriminator 1 view .LVU295
 922 002c 5268     		ldr	r2, [r2, #4]
 923              	.LVL100:
 699:rtos/uC-FS/FAT/fs_fat_file.c ****         (p_fat_file_data->FilePos       >= p_fat_file_data->FileSize)) {
 924              		.loc 1 699 71 discriminator 1 view .LVU296
 925 002e 9342     		cmp	r3, r2
 926 0030 26D2     		bcs	.L63
 701:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
 702:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err           = FS_ERR_NONE;
 703:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 704:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 705:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Truncate file rd to file rem.   
 706:rtos/uC-FS/FAT/fs_fat_file.c ****     if (size > (p_fat_file_data->FileSize - p_fat_file_data->FilePos)) {
 927              		.loc 1 706 5 is_stmt 1 view .LVU297
 928              		.loc 1 706 43 is_stmt 0 view .LVU298
 929 0032 D31A     		subs	r3, r2, r3
 930 0034 0793     		str	r3, [sp, #28]
 931              		.loc 1 706 8 view .LVU299
ARM GAS  /tmp/ccKN2FgP.s 			page 31


 932 0036 A342     		cmp	r3, r4
 933 0038 00D3     		bcc	.L65
 934 003a 0794     		str	r4, [sp, #28]
 935              	.L65:
 936              	.LVL101:
 707:rtos/uC-FS/FAT/fs_fat_file.c ****         size = (p_fat_file_data->FileSize - p_fat_file_data->FilePos);
 708:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 709:rtos/uC-FS/FAT/fs_fat_file.c **** 
 710:rtos/uC-FS/FAT/fs_fat_file.c ****     if (size == 0u) {
 937              		.loc 1 710 5 is_stmt 1 view .LVU300
 938              		.loc 1 710 8 is_stmt 0 view .LVU301
 939 003c 079B     		ldr	r3, [sp, #28]
 940 003e 53B3     		cbz	r3, .L96
 711:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
 712:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err           = FS_ERR_NONE;
 713:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 714:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 715:rtos/uC-FS/FAT/fs_fat_file.c **** 
 716:rtos/uC-FS/FAT/fs_fat_file.c ****     size_rem         = size;
 941              		.loc 1 716 5 is_stmt 1 view .LVU302
 942              	.LVL102:
 717:rtos/uC-FS/FAT/fs_fat_file.c ****     sec_cur          = p_fat_file_data->FileCurSec;
 943              		.loc 1 717 5 view .LVU303
 944              		.loc 1 717 22 is_stmt 0 view .LVU304
 945 0040 099B     		ldr	r3, [sp, #36]
 946 0042 9F6A     		ldr	r7, [r3, #40]
 947              	.LVL103:
 718:rtos/uC-FS/FAT/fs_fat_file.c ****     sec_cur_pos      = p_fat_file_data->FileCurSecPos;
 948              		.loc 1 718 5 is_stmt 1 view .LVU305
 949              		.loc 1 718 22 is_stmt 0 view .LVU306
 950 0044 D96A     		ldr	r1, [r3, #44]
 951 0046 0691     		str	r1, [sp, #24]
 952              	.LVL104:
 719:rtos/uC-FS/FAT/fs_fat_file.c ****     clus_cur_sec_rem = FS_FAT_CLUS_SEC_REM(p_fat_data, sec_cur);
 953              		.loc 1 719 5 is_stmt 1 view .LVU307
 954              		.loc 1 719 24 is_stmt 0 view .LVU308
 955 0048 DAF83C20 		ldr	r2, [r10, #60]
 956 004c DAF82C30 		ldr	r3, [r10, #44]
 957 0050 FB1A     		subs	r3, r7, r3
 958 0052 02F1FF39 		add	r9, r2, #-1
 959 0056 03EA0903 		and	r3, r3, r9
 960              		.loc 1 719 22 view .LVU309
 961 005a A2EB0309 		sub	r9, r2, r3
 962              	.LVL105:
 720:rtos/uC-FS/FAT/fs_fat_file.c **** 
 721:rtos/uC-FS/FAT/fs_fat_file.c ****     if (sec_cur_pos == p_fat_data->SecSize) {                   /* Sec pos at end of sec (so move t
 963              		.loc 1 721 5 is_stmt 1 view .LVU310
 964              		.loc 1 721 34 is_stmt 0 view .LVU311
 965 005e DAF83430 		ldr	r3, [r10, #52]
 966              		.loc 1 721 8 view .LVU312
 967 0062 8B42     		cmp	r3, r1
 968 0064 1ED0     		beq	.L97
 969              	.LVL106:
 970              	.L67:
 722:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur_pos = 0u;
 723:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 724:rtos/uC-FS/FAT/fs_fat_file.c ****                                         p_buf,
ARM GAS  /tmp/ccKN2FgP.s 			page 32


 725:rtos/uC-FS/FAT/fs_fat_file.c ****                                         sec_cur,
 726:rtos/uC-FS/FAT/fs_fat_file.c ****                                         p_err);
 727:rtos/uC-FS/FAT/fs_fat_file.c **** 
 728:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
 729:rtos/uC-FS/FAT/fs_fat_file.c ****             if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 730:rtos/uC-FS/FAT/fs_fat_file.c ****                 (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 731:rtos/uC-FS/FAT/fs_fat_file.c ****                  *p_err =  FS_ERR_ENTRY_CORRUPT;
 732:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 733:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 734:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
 735:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 736:rtos/uC-FS/FAT/fs_fat_file.c **** 
 737:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem = FS_FAT_CLUS_SEC_REM(p_fat_data, sec_cur);
 738:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 739:rtos/uC-FS/FAT/fs_fat_file.c **** 
 740:rtos/uC-FS/FAT/fs_fat_file.c **** 
 741:rtos/uC-FS/FAT/fs_fat_file.c **** 
 742:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------- PARTIAL (INITIAL) 
 743:rtos/uC-FS/FAT/fs_fat_file.c ****     if (sec_cur_pos != 0u) {
 971              		.loc 1 743 5 is_stmt 1 view .LVU313
 972              		.loc 1 743 8 is_stmt 0 view .LVU314
 973 0066 069B     		ldr	r3, [sp, #24]
 974 0068 002B     		cmp	r3, #0
 975 006a 43D1     		bne	.L98
 716:rtos/uC-FS/FAT/fs_fat_file.c ****     sec_cur          = p_fat_file_data->FileCurSec;
 976              		.loc 1 716 22 view .LVU315
 977 006c 079B     		ldr	r3, [sp, #28]
 978 006e 0393     		str	r3, [sp, #12]
 979              	.LVL107:
 980              	.L71:
 744:rtos/uC-FS/FAT/fs_fat_file.c ****         FSVol_RdLockedEx(p_file->VolPtr,                        /* Rd full sec.                    
 745:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_buf->DataPtr,
 746:rtos/uC-FS/FAT/fs_fat_file.c ****                          sec_cur,
 747:rtos/uC-FS/FAT/fs_fat_file.c ****                          1u,
 748:rtos/uC-FS/FAT/fs_fat_file.c ****                          FS_VOL_SEC_TYPE_FILE,
 749:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_err);
 750:rtos/uC-FS/FAT/fs_fat_file.c **** 
 751:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
 752:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 753:rtos/uC-FS/FAT/fs_fat_file.c ****             p_fat_file_data->FileCurSec     = sec_cur;
 754:rtos/uC-FS/FAT/fs_fat_file.c ****             p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 755:rtos/uC-FS/FAT/fs_fat_file.c ****             p_fat_file_data->FilePos       += size - size_rem;
 756:rtos/uC-FS/FAT/fs_fat_file.c ****             return (size - size_rem);
 757:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 758:rtos/uC-FS/FAT/fs_fat_file.c **** 
 759:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* More rd octets that bytes in par
 760:rtos/uC-FS/FAT/fs_fat_file.c ****         size_rd = DEF_MIN(size_rem, p_fat_data->SecSize - sec_cur_pos);
 761:rtos/uC-FS/FAT/fs_fat_file.c **** 
 762:rtos/uC-FS/FAT/fs_fat_file.c ****         p_temp_08 = (CPU_INT08U *)p_buf->DataPtr + sec_cur_pos;
 763:rtos/uC-FS/FAT/fs_fat_file.c ****         Mem_Copy((void     *)p_dest_08,                         /* Copy partial sec data.          
 764:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void     *)p_temp_08,
 765:rtos/uC-FS/FAT/fs_fat_file.c ****                  (CPU_SIZE_T)size_rd);
 766:rtos/uC-FS/FAT/fs_fat_file.c **** 
 767:rtos/uC-FS/FAT/fs_fat_file.c ****         size_rem    -= size_rd;
 768:rtos/uC-FS/FAT/fs_fat_file.c ****         p_dest_08   += size_rd;
 769:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur_pos += size_rd;
 770:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem--;
ARM GAS  /tmp/ccKN2FgP.s 			page 33


 771:rtos/uC-FS/FAT/fs_fat_file.c **** 
 772:rtos/uC-FS/FAT/fs_fat_file.c ****         if (size_rem > 0u) {                                    /* If more rd octets, get next sec 
 773:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur_pos = 0u;
 774:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 775:rtos/uC-FS/FAT/fs_fat_file.c ****                                             p_buf,
 776:rtos/uC-FS/FAT/fs_fat_file.c ****                                             sec_cur,
 777:rtos/uC-FS/FAT/fs_fat_file.c ****                                             p_err);
 778:rtos/uC-FS/FAT/fs_fat_file.c **** 
 779:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err != FS_ERR_NONE) {
 780:rtos/uC-FS/FAT/fs_fat_file.c ****                 if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 781:rtos/uC-FS/FAT/fs_fat_file.c ****                     (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 782:rtos/uC-FS/FAT/fs_fat_file.c ****                      *p_err =  FS_ERR_ENTRY_CORRUPT;
 783:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 784:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 785:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSec     = sec_cur;
 786:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 787:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FilePos       += size - size_rem;
 788:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 789:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 790:rtos/uC-FS/FAT/fs_fat_file.c **** 
 791:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur_sec_rem = FS_FAT_CLUS_SEC_REM(p_fat_data, sec_cur);
 792:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 793:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 794:rtos/uC-FS/FAT/fs_fat_file.c **** 
 795:rtos/uC-FS/FAT/fs_fat_file.c ****     sec_next = 0u;
 796:rtos/uC-FS/FAT/fs_fat_file.c **** 
 797:rtos/uC-FS/FAT/fs_fat_file.c ****     while (size_rem > 0u) {
 798:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cnt_rem = FS_UTIL_DIV_PWR2(size_rem, p_fat_data->SecSizeLog2);
 799:rtos/uC-FS/FAT/fs_fat_file.c ****         if (sec_cnt_rem > 0u) {                                 /* ------------------- FULL SEC RDs
 800:rtos/uC-FS/FAT/fs_fat_file.c **** 
 801:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cnt_rd = 0;
 802:rtos/uC-FS/FAT/fs_fat_file.c ****             do {                                                /* Cnt the max nbr of continuous se
 803:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cnt_rd += DEF_MIN(sec_cnt_rem - sec_cnt_rd, clus_cur_sec_rem);
 804:rtos/uC-FS/FAT/fs_fat_file.c **** 
 805:rtos/uC-FS/FAT/fs_fat_file.c ****                 if((sec_cnt_rem - sec_cnt_rd) > 0u) {
 806:rtos/uC-FS/FAT/fs_fat_file.c ****                     sec_next = FS_FAT_SecNextGet(p_file->VolPtr,
 807:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_buf,
 808:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  sec_cur + sec_cnt_rd - 1,
 809:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_err);
 810:rtos/uC-FS/FAT/fs_fat_file.c ****                     if (*p_err != FS_ERR_NONE) {
 811:rtos/uC-FS/FAT/fs_fat_file.c ****                         if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 812:rtos/uC-FS/FAT/fs_fat_file.c ****                             (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 813:rtos/uC-FS/FAT/fs_fat_file.c ****                              *p_err =  FS_ERR_ENTRY_CORRUPT;
 814:rtos/uC-FS/FAT/fs_fat_file.c ****                         }
 815:rtos/uC-FS/FAT/fs_fat_file.c ****                         FSBuf_Free(p_buf);
 816:rtos/uC-FS/FAT/fs_fat_file.c ****                         p_fat_file_data->FileCurSec     = sec_cur;
 817:rtos/uC-FS/FAT/fs_fat_file.c ****                         p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 818:rtos/uC-FS/FAT/fs_fat_file.c ****                         p_fat_file_data->FilePos       += size - size_rem;
 819:rtos/uC-FS/FAT/fs_fat_file.c ****                         return (size - size_rem);
 820:rtos/uC-FS/FAT/fs_fat_file.c ****                     }
 821:rtos/uC-FS/FAT/fs_fat_file.c **** 
 822:rtos/uC-FS/FAT/fs_fat_file.c ****                     clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 823:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 824:rtos/uC-FS/FAT/fs_fat_file.c **** 
 825:rtos/uC-FS/FAT/fs_fat_file.c ****             } while (((sec_cnt_rem - sec_cnt_rd) >   0u) &&
 826:rtos/uC-FS/FAT/fs_fat_file.c ****                       (sec_next                  == (sec_cur + sec_cnt_rd)));
 827:rtos/uC-FS/FAT/fs_fat_file.c **** 
ARM GAS  /tmp/ccKN2FgP.s 			page 34


 828:rtos/uC-FS/FAT/fs_fat_file.c **** 
 829:rtos/uC-FS/FAT/fs_fat_file.c ****             FSVol_RdLockedEx(        p_file->VolPtr,            /* Rd full sec's.                  
 830:rtos/uC-FS/FAT/fs_fat_file.c ****                              (void *)p_dest_08,
 831:rtos/uC-FS/FAT/fs_fat_file.c ****                                      sec_cur,
 832:rtos/uC-FS/FAT/fs_fat_file.c ****                                      sec_cnt_rd,
 833:rtos/uC-FS/FAT/fs_fat_file.c ****                                      FS_VOL_SEC_TYPE_FILE,
 834:rtos/uC-FS/FAT/fs_fat_file.c ****                                      p_err);
 835:rtos/uC-FS/FAT/fs_fat_file.c **** 
 836:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err != FS_ERR_NONE) {
 837:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 838:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSec     = sec_cur;
 839:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 840:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FilePos       += size - size_rem;
 841:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 842:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 843:rtos/uC-FS/FAT/fs_fat_file.c **** 
 844:rtos/uC-FS/FAT/fs_fat_file.c ****             size_rem   -= FS_UTIL_MULT_PWR2(sec_cnt_rd, p_fat_data->SecSizeLog2);
 845:rtos/uC-FS/FAT/fs_fat_file.c ****             p_dest_08  += FS_UTIL_MULT_PWR2(sec_cnt_rd, p_fat_data->SecSizeLog2);
 846:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur    += sec_cnt_rd - 1u;
 847:rtos/uC-FS/FAT/fs_fat_file.c **** 
 848:rtos/uC-FS/FAT/fs_fat_file.c ****             if((sec_cnt_rem - sec_cnt_rd) > 0u) {               /* Next clus is not contiguous.    
 849:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = sec_next;                         /* Set the next iter to start at ne
 850:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
 851:rtos/uC-FS/FAT/fs_fat_file.c ****             } else if (size_rem > 0u) {                         /* Partial sec left, fetch next sec
 852:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
 981              		.loc 1 852 29 view .LVU316
 982 0070 0026     		movs	r6, #0
 983 0072 00E1     		b	.L89
 984              	.LVL108:
 985              	.L95:
 691:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 986              		.loc 1 691 8 is_stmt 1 view .LVU317
 691:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 987              		.loc 1 691 15 is_stmt 0 view .LVU318
 988 0074 6423     		movs	r3, #100
 989 0076 A8F80030 		strh	r3, [r8]	@ movhi
 692:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 990              		.loc 1 692 9 is_stmt 1 view .LVU319
 692:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 991              		.loc 1 692 16 is_stmt 0 view .LVU320
 992 007a 0023     		movs	r3, #0
 993 007c 0793     		str	r3, [sp, #28]
 994 007e 06E0     		b	.L60
 995              	.LVL109:
 996              	.L63:
 701:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err           = FS_ERR_NONE;
 997              		.loc 1 701 9 is_stmt 1 view .LVU321
 998 0080 0498     		ldr	r0, [sp, #16]
 999 0082 FFF7FEFF 		bl	FSBuf_Free
 1000              	.LVL110:
 702:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 1001              		.loc 1 702 8 view .LVU322
 702:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 1002              		.loc 1 702 25 is_stmt 0 view .LVU323
 1003 0086 0023     		movs	r3, #0
 1004 0088 A8F80030 		strh	r3, [r8]	@ movhi
 703:rtos/uC-FS/FAT/fs_fat_file.c ****     }
ARM GAS  /tmp/ccKN2FgP.s 			page 35


 1005              		.loc 1 703 9 is_stmt 1 view .LVU324
 703:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1006              		.loc 1 703 16 is_stmt 0 view .LVU325
 1007 008c 0793     		str	r3, [sp, #28]
 1008              	.LVL111:
 1009              	.L60:
 853:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 854:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_buf,
 855:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 sec_cur,
 856:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_err);
 857:rtos/uC-FS/FAT/fs_fat_file.c ****                 if (*p_err != FS_ERR_NONE) {
 858:rtos/uC-FS/FAT/fs_fat_file.c ****                     if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 859:rtos/uC-FS/FAT/fs_fat_file.c ****                         (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 860:rtos/uC-FS/FAT/fs_fat_file.c ****                          *p_err =  FS_ERR_ENTRY_CORRUPT;
 861:rtos/uC-FS/FAT/fs_fat_file.c ****                     }
 862:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 863:rtos/uC-FS/FAT/fs_fat_file.c ****                     p_fat_file_data->FileCurSec     = sec_cur;
 864:rtos/uC-FS/FAT/fs_fat_file.c ****                     p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 865:rtos/uC-FS/FAT/fs_fat_file.c ****                     p_fat_file_data->FilePos       += size - size_rem;
 866:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (size - size_rem);
 867:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 868:rtos/uC-FS/FAT/fs_fat_file.c ****             } else {
 869:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = p_fat_data->SecSize;
 870:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 871:rtos/uC-FS/FAT/fs_fat_file.c **** 
 872:rtos/uC-FS/FAT/fs_fat_file.c **** 
 873:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {                                                /* -------------- PARTIAL (FINAL) S
 874:rtos/uC-FS/FAT/fs_fat_file.c ****             FSVol_RdLockedEx(p_file->VolPtr,                    /* Rd full sec.                    
 875:rtos/uC-FS/FAT/fs_fat_file.c ****                              p_buf->DataPtr,
 876:rtos/uC-FS/FAT/fs_fat_file.c ****                              sec_cur,
 877:rtos/uC-FS/FAT/fs_fat_file.c ****                              1u,
 878:rtos/uC-FS/FAT/fs_fat_file.c ****                              FS_VOL_SEC_TYPE_FILE,
 879:rtos/uC-FS/FAT/fs_fat_file.c ****                              p_err);
 880:rtos/uC-FS/FAT/fs_fat_file.c **** 
 881:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err != FS_ERR_NONE) {
 882:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 883:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSec     = sec_cur;
 884:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 885:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FilePos       += size - size_rem;
 886:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 887:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 888:rtos/uC-FS/FAT/fs_fat_file.c **** 
 889:rtos/uC-FS/FAT/fs_fat_file.c ****             Mem_Copy((void     *)p_dest_08,                     /* Copy partial sec data.          
 890:rtos/uC-FS/FAT/fs_fat_file.c ****                      (void     *)p_buf->DataPtr,
 891:rtos/uC-FS/FAT/fs_fat_file.c ****                      (CPU_SIZE_T)size_rem);
 892:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur_pos += size_rem;
 893:rtos/uC-FS/FAT/fs_fat_file.c ****             size_rem     = 0u;
 894:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 895:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 896:rtos/uC-FS/FAT/fs_fat_file.c **** 
 897:rtos/uC-FS/FAT/fs_fat_file.c **** 
 898:rtos/uC-FS/FAT/fs_fat_file.c **** 
 899:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ----------------- UPDATE FILE IN
 900:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSec     = sec_cur;
 901:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 902:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FilePos       += size;
 903:rtos/uC-FS/FAT/fs_fat_file.c **** 
ARM GAS  /tmp/ccKN2FgP.s 			page 36


 904:rtos/uC-FS/FAT/fs_fat_file.c ****     FSBuf_Free(p_buf);
 905:rtos/uC-FS/FAT/fs_fat_file.c **** 
 906:rtos/uC-FS/FAT/fs_fat_file.c ****    *p_err = FS_ERR_NONE;
 907:rtos/uC-FS/FAT/fs_fat_file.c **** 
 908:rtos/uC-FS/FAT/fs_fat_file.c ****     return (size);
 909:rtos/uC-FS/FAT/fs_fat_file.c **** }
 1010              		.loc 1 909 1 view .LVU326
 1011 008e 0798     		ldr	r0, [sp, #28]
 1012 0090 0BB0     		add	sp, sp, #44
 1013              	.LCFI18:
 1014              		.cfi_remember_state
 1015              		.cfi_def_cfa_offset 36
 1016              		@ sp needed
 1017 0092 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1018              	.LVL112:
 1019              	.L96:
 1020              	.LCFI19:
 1021              		.cfi_restore_state
 711:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err           = FS_ERR_NONE;
 1022              		.loc 1 711 9 is_stmt 1 view .LVU327
 1023 0096 0498     		ldr	r0, [sp, #16]
 1024 0098 FFF7FEFF 		bl	FSBuf_Free
 1025              	.LVL113:
 712:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 1026              		.loc 1 712 8 view .LVU328
 712:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 1027              		.loc 1 712 25 is_stmt 0 view .LVU329
 1028 009c 0023     		movs	r3, #0
 1029 009e A8F80030 		strh	r3, [r8]	@ movhi
 713:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1030              		.loc 1 713 9 is_stmt 1 view .LVU330
 713:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1031              		.loc 1 713 16 is_stmt 0 view .LVU331
 1032 00a2 F4E7     		b	.L60
 1033              	.LVL114:
 1034              	.L97:
 722:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 1035              		.loc 1 722 9 is_stmt 1 view .LVU332
 723:rtos/uC-FS/FAT/fs_fat_file.c ****                                         p_buf,
 1036              		.loc 1 723 9 view .LVU333
 723:rtos/uC-FS/FAT/fs_fat_file.c ****                                         p_buf,
 1037              		.loc 1 723 23 is_stmt 0 view .LVU334
 1038 00a4 4346     		mov	r3, r8
 1039 00a6 3A46     		mov	r2, r7
 1040 00a8 0499     		ldr	r1, [sp, #16]
 1041 00aa FFF7FEFF 		bl	FS_FAT_SecNextGet
 1042              	.LVL115:
 723:rtos/uC-FS/FAT/fs_fat_file.c ****                                         p_buf,
 1043              		.loc 1 723 23 view .LVU335
 1044 00ae 0746     		mov	r7, r0
 1045              	.LVL116:
 728:rtos/uC-FS/FAT/fs_fat_file.c ****             if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1046              		.loc 1 728 9 is_stmt 1 view .LVU336
 728:rtos/uC-FS/FAT/fs_fat_file.c ****             if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1047              		.loc 1 728 13 is_stmt 0 view .LVU337
 1048 00b0 B8F80030 		ldrh	r3, [r8]
 728:rtos/uC-FS/FAT/fs_fat_file.c ****             if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
ARM GAS  /tmp/ccKN2FgP.s 			page 37


 1049              		.loc 1 728 12 view .LVU338
 1050 00b4 6BB9     		cbnz	r3, .L99
 737:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1051              		.loc 1 737 9 is_stmt 1 view .LVU339
 737:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1052              		.loc 1 737 28 is_stmt 0 view .LVU340
 1053 00b6 DAF83C20 		ldr	r2, [r10, #60]
 1054 00ba DAF82C30 		ldr	r3, [r10, #44]
 1055 00be C31A     		subs	r3, r0, r3
 1056 00c0 02F1FF39 		add	r9, r2, #-1
 1057              	.LVL117:
 737:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1058              		.loc 1 737 28 view .LVU341
 1059 00c4 03EA0903 		and	r3, r3, r9
 737:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1060              		.loc 1 737 26 view .LVU342
 1061 00c8 A2EB0309 		sub	r9, r2, r3
 1062              	.LVL118:
 722:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 1063              		.loc 1 722 21 view .LVU343
 1064 00cc 0023     		movs	r3, #0
 1065 00ce 0693     		str	r3, [sp, #24]
 1066 00d0 C9E7     		b	.L67
 1067              	.L99:
 729:rtos/uC-FS/FAT/fs_fat_file.c ****                 (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1068              		.loc 1 729 13 is_stmt 1 view .LVU344
 729:rtos/uC-FS/FAT/fs_fat_file.c ****                 (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1069              		.loc 1 729 16 is_stmt 0 view .LVU345
 1070 00d2 40F23652 		movw	r2, #1334
 1071 00d6 9342     		cmp	r3, r2
 1072 00d8 02D0     		beq	.L69
 729:rtos/uC-FS/FAT/fs_fat_file.c ****                 (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1073              		.loc 1 729 55 discriminator 1 view .LVU346
 1074 00da B3F5A76F 		cmp	r3, #1336
 1075 00de 03D1     		bne	.L70
 1076              	.L69:
 731:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1077              		.loc 1 731 18 is_stmt 1 view .LVU347
 731:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1078              		.loc 1 731 25 is_stmt 0 view .LVU348
 1079 00e0 40F2BF23 		movw	r3, #703
 1080 00e4 A8F80030 		strh	r3, [r8]	@ movhi
 1081              	.L70:
 733:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
 1082              		.loc 1 733 13 is_stmt 1 view .LVU349
 1083 00e8 0498     		ldr	r0, [sp, #16]
 1084              	.LVL119:
 733:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
 1085              		.loc 1 733 13 is_stmt 0 view .LVU350
 1086 00ea FFF7FEFF 		bl	FSBuf_Free
 1087              	.LVL120:
 734:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1088              		.loc 1 734 13 is_stmt 1 view .LVU351
 734:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1089              		.loc 1 734 20 is_stmt 0 view .LVU352
 1090 00ee 0023     		movs	r3, #0
 1091 00f0 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccKN2FgP.s 			page 38


 1092              	.LVL121:
 734:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1093              		.loc 1 734 20 view .LVU353
 1094 00f2 CCE7     		b	.L60
 1095              	.LVL122:
 1096              	.L98:
 744:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_buf->DataPtr,
 1097              		.loc 1 744 9 is_stmt 1 view .LVU354
 1098 00f4 049B     		ldr	r3, [sp, #16]
 1099              	.LVL123:
 744:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_buf->DataPtr,
 1100              		.loc 1 744 9 is_stmt 0 view .LVU355
 1101 00f6 1969     		ldr	r1, [r3, #16]
 1102 00f8 CDF80480 		str	r8, [sp, #4]
 1103 00fc 0423     		movs	r3, #4
 1104 00fe 0093     		str	r3, [sp]
 1105 0100 0123     		movs	r3, #1
 1106 0102 3A46     		mov	r2, r7
 1107 0104 DBF83C00 		ldr	r0, [fp, #60]
 1108 0108 FFF7FEFF 		bl	FSVol_RdLockedEx
 1109              	.LVL124:
 751:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 1110              		.loc 1 751 9 is_stmt 1 view .LVU356
 751:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 1111              		.loc 1 751 13 is_stmt 0 view .LVU357
 1112 010c B8F80030 		ldrh	r3, [r8]
 751:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 1113              		.loc 1 751 12 view .LVU358
 1114 0110 8BBB     		cbnz	r3, .L100
 760:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1115              		.loc 1 760 9 is_stmt 1 view .LVU359
 760:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1116              		.loc 1 760 19 is_stmt 0 view .LVU360
 1117 0112 DAF83430 		ldr	r3, [r10, #52]
 1118 0116 069D     		ldr	r5, [sp, #24]
 1119 0118 5C1B     		subs	r4, r3, r5
 760:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1120              		.loc 1 760 17 view .LVU361
 1121 011a 079E     		ldr	r6, [sp, #28]
 1122 011c B442     		cmp	r4, r6
 1123 011e 28BF     		it	cs
 1124 0120 3446     		movcs	r4, r6
 1125              	.LVL125:
 762:rtos/uC-FS/FAT/fs_fat_file.c ****         Mem_Copy((void     *)p_dest_08,                         /* Copy partial sec data.          
 1126              		.loc 1 762 9 is_stmt 1 view .LVU362
 762:rtos/uC-FS/FAT/fs_fat_file.c ****         Mem_Copy((void     *)p_dest_08,                         /* Copy partial sec data.          
 1127              		.loc 1 762 40 is_stmt 0 view .LVU363
 1128 0122 049B     		ldr	r3, [sp, #16]
 1129 0124 1969     		ldr	r1, [r3, #16]
 1130              	.LVL126:
 763:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void     *)p_temp_08,
 1131              		.loc 1 763 9 is_stmt 1 view .LVU364
 1132 0126 2246     		mov	r2, r4
 1133 0128 2944     		add	r1, r1, r5
 1134              	.LVL127:
 763:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void     *)p_temp_08,
 1135              		.loc 1 763 9 is_stmt 0 view .LVU365
ARM GAS  /tmp/ccKN2FgP.s 			page 39


 1136 012a 0598     		ldr	r0, [sp, #20]
 1137 012c FFF7FEFF 		bl	Mem_Copy
 1138              	.LVL128:
 767:rtos/uC-FS/FAT/fs_fat_file.c ****         p_dest_08   += size_rd;
 1139              		.loc 1 767 9 is_stmt 1 view .LVU366
 768:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur_pos += size_rd;
 1140              		.loc 1 768 9 view .LVU367
 768:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur_pos += size_rd;
 1141              		.loc 1 768 21 is_stmt 0 view .LVU368
 1142 0130 059B     		ldr	r3, [sp, #20]
 1143 0132 2344     		add	r3, r3, r4
 1144 0134 0593     		str	r3, [sp, #20]
 1145              	.LVL129:
 769:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem--;
 1146              		.loc 1 769 9 is_stmt 1 view .LVU369
 769:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem--;
 1147              		.loc 1 769 21 is_stmt 0 view .LVU370
 1148 0136 2B19     		adds	r3, r5, r4
 1149              	.LVL130:
 769:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem--;
 1150              		.loc 1 769 21 view .LVU371
 1151 0138 0693     		str	r3, [sp, #24]
 1152              	.LVL131:
 770:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1153              		.loc 1 770 9 is_stmt 1 view .LVU372
 770:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1154              		.loc 1 770 25 is_stmt 0 view .LVU373
 1155 013a 09F1FF39 		add	r9, r9, #-1
 1156              	.LVL132:
 772:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur_pos = 0u;
 1157              		.loc 1 772 9 is_stmt 1 view .LVU374
 772:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur_pos = 0u;
 1158              		.loc 1 772 12 is_stmt 0 view .LVU375
 1159 013e 331B     		subs	r3, r6, r4
 1160              	.LVL133:
 772:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur_pos = 0u;
 1161              		.loc 1 772 12 view .LVU376
 1162 0140 0393     		str	r3, [sp, #12]
 1163 0142 95D0     		beq	.L71
 773:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 1164              		.loc 1 773 13 is_stmt 1 view .LVU377
 1165              	.LVL134:
 774:rtos/uC-FS/FAT/fs_fat_file.c ****                                             p_buf,
 1166              		.loc 1 774 13 view .LVU378
 774:rtos/uC-FS/FAT/fs_fat_file.c ****                                             p_buf,
 1167              		.loc 1 774 27 is_stmt 0 view .LVU379
 1168 0144 4346     		mov	r3, r8
 1169              	.LVL135:
 774:rtos/uC-FS/FAT/fs_fat_file.c ****                                             p_buf,
 1170              		.loc 1 774 27 view .LVU380
 1171 0146 3A46     		mov	r2, r7
 1172 0148 0499     		ldr	r1, [sp, #16]
 1173 014a DBF83C00 		ldr	r0, [fp, #60]
 1174 014e FFF7FEFF 		bl	FS_FAT_SecNextGet
 1175              	.LVL136:
 1176 0152 0746     		mov	r7, r0
 1177              	.LVL137:
ARM GAS  /tmp/ccKN2FgP.s 			page 40


 779:rtos/uC-FS/FAT/fs_fat_file.c ****                 if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1178              		.loc 1 779 13 is_stmt 1 view .LVU381
 779:rtos/uC-FS/FAT/fs_fat_file.c ****                 if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1179              		.loc 1 779 17 is_stmt 0 view .LVU382
 1180 0154 B8F80030 		ldrh	r3, [r8]
 779:rtos/uC-FS/FAT/fs_fat_file.c ****                 if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1181              		.loc 1 779 16 view .LVU383
 1182 0158 BBB9     		cbnz	r3, .L101
 791:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1183              		.loc 1 791 13 is_stmt 1 view .LVU384
 791:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1184              		.loc 1 791 32 is_stmt 0 view .LVU385
 1185 015a DAF83C20 		ldr	r2, [r10, #60]
 1186 015e DAF82C30 		ldr	r3, [r10, #44]
 1187 0162 C31A     		subs	r3, r0, r3
 1188 0164 02F1FF39 		add	r9, r2, #-1
 1189              	.LVL138:
 791:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1190              		.loc 1 791 32 view .LVU386
 1191 0168 03EA0903 		and	r3, r3, r9
 791:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1192              		.loc 1 791 30 view .LVU387
 1193 016c A2EB0309 		sub	r9, r2, r3
 1194              	.LVL139:
 773:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 1195              		.loc 1 773 25 view .LVU388
 1196 0170 0023     		movs	r3, #0
 1197 0172 0693     		str	r3, [sp, #24]
 1198 0174 7CE7     		b	.L71
 1199              	.LVL140:
 1200              	.L100:
 752:rtos/uC-FS/FAT/fs_fat_file.c ****             p_fat_file_data->FileCurSec     = sec_cur;
 1201              		.loc 1 752 13 is_stmt 1 view .LVU389
 1202 0176 0498     		ldr	r0, [sp, #16]
 1203 0178 FFF7FEFF 		bl	FSBuf_Free
 1204              	.LVL141:
 753:rtos/uC-FS/FAT/fs_fat_file.c ****             p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1205              		.loc 1 753 13 view .LVU390
 753:rtos/uC-FS/FAT/fs_fat_file.c ****             p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1206              		.loc 1 753 45 is_stmt 0 view .LVU391
 1207 017c 099B     		ldr	r3, [sp, #36]
 1208 017e 9F62     		str	r7, [r3, #40]
 754:rtos/uC-FS/FAT/fs_fat_file.c ****             p_fat_file_data->FilePos       += size - size_rem;
 1209              		.loc 1 754 13 is_stmt 1 view .LVU392
 754:rtos/uC-FS/FAT/fs_fat_file.c ****             p_fat_file_data->FilePos       += size - size_rem;
 1210              		.loc 1 754 45 is_stmt 0 view .LVU393
 1211 0180 069A     		ldr	r2, [sp, #24]
 1212 0182 DA62     		str	r2, [r3, #44]
 755:rtos/uC-FS/FAT/fs_fat_file.c ****             return (size - size_rem);
 1213              		.loc 1 755 13 is_stmt 1 view .LVU394
 756:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1214              		.loc 1 756 13 view .LVU395
 756:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1215              		.loc 1 756 26 is_stmt 0 view .LVU396
 1216 0184 0023     		movs	r3, #0
 1217 0186 0793     		str	r3, [sp, #28]
 1218              	.LVL142:
ARM GAS  /tmp/ccKN2FgP.s 			page 41


 756:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1219              		.loc 1 756 26 view .LVU397
 1220 0188 81E7     		b	.L60
 1221              	.LVL143:
 1222              	.L101:
 780:rtos/uC-FS/FAT/fs_fat_file.c ****                     (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1223              		.loc 1 780 17 is_stmt 1 view .LVU398
 780:rtos/uC-FS/FAT/fs_fat_file.c ****                     (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1224              		.loc 1 780 20 is_stmt 0 view .LVU399
 1225 018a 40F23652 		movw	r2, #1334
 1226 018e 9342     		cmp	r3, r2
 1227 0190 02D0     		beq	.L74
 780:rtos/uC-FS/FAT/fs_fat_file.c ****                     (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1228              		.loc 1 780 59 discriminator 1 view .LVU400
 1229 0192 B3F5A76F 		cmp	r3, #1336
 1230 0196 03D1     		bne	.L75
 1231              	.L74:
 782:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 1232              		.loc 1 782 22 is_stmt 1 view .LVU401
 782:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 1233              		.loc 1 782 29 is_stmt 0 view .LVU402
 1234 0198 40F2BF23 		movw	r3, #703
 1235 019c A8F80030 		strh	r3, [r8]	@ movhi
 1236              	.L75:
 784:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSec     = sec_cur;
 1237              		.loc 1 784 17 is_stmt 1 view .LVU403
 1238 01a0 0498     		ldr	r0, [sp, #16]
 1239              	.LVL144:
 784:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSec     = sec_cur;
 1240              		.loc 1 784 17 is_stmt 0 view .LVU404
 1241 01a2 FFF7FEFF 		bl	FSBuf_Free
 1242              	.LVL145:
 785:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1243              		.loc 1 785 17 is_stmt 1 view .LVU405
 785:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1244              		.loc 1 785 49 is_stmt 0 view .LVU406
 1245 01a6 099A     		ldr	r2, [sp, #36]
 1246 01a8 9762     		str	r7, [r2, #40]
 786:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FilePos       += size - size_rem;
 1247              		.loc 1 786 17 is_stmt 1 view .LVU407
 786:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FilePos       += size - size_rem;
 1248              		.loc 1 786 49 is_stmt 0 view .LVU408
 1249 01aa 0023     		movs	r3, #0
 1250 01ac D362     		str	r3, [r2, #44]
 787:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 1251              		.loc 1 787 17 is_stmt 1 view .LVU409
 787:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 1252              		.loc 1 787 48 is_stmt 0 view .LVU410
 1253 01ae 1368     		ldr	r3, [r2]
 1254 01b0 2344     		add	r3, r3, r4
 1255 01b2 1360     		str	r3, [r2]
 788:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1256              		.loc 1 788 17 is_stmt 1 view .LVU411
 788:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1257              		.loc 1 788 30 is_stmt 0 view .LVU412
 1258 01b4 0794     		str	r4, [sp, #28]
 1259              	.LVL146:
ARM GAS  /tmp/ccKN2FgP.s 			page 42


 788:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1260              		.loc 1 788 30 view .LVU413
 1261 01b6 6AE7     		b	.L60
 1262              	.LVL147:
 1263              	.L105:
 801:rtos/uC-FS/FAT/fs_fat_file.c ****             do {                                                /* Cnt the max nbr of continuous se
 1264              		.loc 1 801 24 view .LVU414
 1265 01b8 0024     		movs	r4, #0
 1266 01ba 4A46     		mov	r2, r9
 1267 01bc 3046     		mov	r0, r6
 1268 01be 049E     		ldr	r6, [sp, #16]
 1269              	.LVL148:
 801:rtos/uC-FS/FAT/fs_fat_file.c ****             do {                                                /* Cnt the max nbr of continuous se
 1270              		.loc 1 801 24 view .LVU415
 1271 01c0 06E0     		b	.L82
 1272              	.LVL149:
 1273              	.L78:
 822:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 1274              		.loc 1 822 21 is_stmt 1 view .LVU416
 822:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 1275              		.loc 1 822 38 is_stmt 0 view .LVU417
 1276 01c2 DAF83C20 		ldr	r2, [r10, #60]
 1277              	.LVL150:
 1278              	.L77:
 825:rtos/uC-FS/FAT/fs_fat_file.c ****                       (sec_next                  == (sec_cur + sec_cnt_rd)));
 1279              		.loc 1 825 21 is_stmt 1 view .LVU418
 826:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1280              		.loc 1 826 23 is_stmt 0 view .LVU419
 1281 01c6 A542     		cmp	r5, r4
 1282 01c8 30D0     		beq	.L81
 826:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1283              		.loc 1 826 62 discriminator 1 view .LVU420
 1284 01ca 3B19     		adds	r3, r7, r4
 825:rtos/uC-FS/FAT/fs_fat_file.c ****                       (sec_next                  == (sec_cur + sec_cnt_rd)));
 1285              		.loc 1 825 58 discriminator 1 view .LVU421
 1286 01cc 8342     		cmp	r3, r0
 1287 01ce 2DD1     		bne	.L81
 1288              	.LVL151:
 1289              	.L82:
 802:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cnt_rd += DEF_MIN(sec_cnt_rem - sec_cnt_rd, clus_cur_sec_rem);
 1290              		.loc 1 802 13 is_stmt 1 view .LVU422
 803:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1291              		.loc 1 803 17 view .LVU423
 803:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1292              		.loc 1 803 31 is_stmt 0 view .LVU424
 1293 01d0 2B1B     		subs	r3, r5, r4
 803:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1294              		.loc 1 803 28 view .LVU425
 1295 01d2 9342     		cmp	r3, r2
 1296 01d4 94BF     		ite	ls
 1297 01d6 E418     		addls	r4, r4, r3
 1298 01d8 A418     		addhi	r4, r4, r2
 1299              	.LVL152:
 805:rtos/uC-FS/FAT/fs_fat_file.c ****                     sec_next = FS_FAT_SecNextGet(p_file->VolPtr,
 1300              		.loc 1 805 17 is_stmt 1 view .LVU426
 805:rtos/uC-FS/FAT/fs_fat_file.c ****                     sec_next = FS_FAT_SecNextGet(p_file->VolPtr,
 1301              		.loc 1 805 19 is_stmt 0 view .LVU427
ARM GAS  /tmp/ccKN2FgP.s 			page 43


 1302 01da A542     		cmp	r5, r4
 1303 01dc F3D0     		beq	.L77
 806:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_buf,
 1304              		.loc 1 806 21 is_stmt 1 view .LVU428
 808:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_err);
 1305              		.loc 1 808 58 is_stmt 0 view .LVU429
 1306 01de 3A19     		adds	r2, r7, r4
 1307              	.LVL153:
 806:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_buf,
 1308              		.loc 1 806 32 view .LVU430
 1309 01e0 4346     		mov	r3, r8
 1310 01e2 013A     		subs	r2, r2, #1
 1311 01e4 3146     		mov	r1, r6
 1312 01e6 DBF83C00 		ldr	r0, [fp, #60]
 1313              	.LVL154:
 806:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_buf,
 1314              		.loc 1 806 32 view .LVU431
 1315 01ea FFF7FEFF 		bl	FS_FAT_SecNextGet
 1316              	.LVL155:
 810:rtos/uC-FS/FAT/fs_fat_file.c ****                         if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1317              		.loc 1 810 21 is_stmt 1 view .LVU432
 810:rtos/uC-FS/FAT/fs_fat_file.c ****                         if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1318              		.loc 1 810 25 is_stmt 0 view .LVU433
 1319 01ee B8F80030 		ldrh	r3, [r8]
 810:rtos/uC-FS/FAT/fs_fat_file.c ****                         if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1320              		.loc 1 810 24 view .LVU434
 1321 01f2 002B     		cmp	r3, #0
 1322 01f4 E5D0     		beq	.L78
 811:rtos/uC-FS/FAT/fs_fat_file.c ****                             (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1323              		.loc 1 811 25 is_stmt 1 view .LVU435
 811:rtos/uC-FS/FAT/fs_fat_file.c ****                             (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1324              		.loc 1 811 28 is_stmt 0 view .LVU436
 1325 01f6 40F23652 		movw	r2, #1334
 1326 01fa 9342     		cmp	r3, r2
 1327 01fc 02D0     		beq	.L79
 811:rtos/uC-FS/FAT/fs_fat_file.c ****                             (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1328              		.loc 1 811 67 discriminator 1 view .LVU437
 1329 01fe B3F5A76F 		cmp	r3, #1336
 1330 0202 03D1     		bne	.L80
 1331              	.L79:
 813:rtos/uC-FS/FAT/fs_fat_file.c ****                         }
 1332              		.loc 1 813 30 is_stmt 1 view .LVU438
 813:rtos/uC-FS/FAT/fs_fat_file.c ****                         }
 1333              		.loc 1 813 37 is_stmt 0 view .LVU439
 1334 0204 40F2BF23 		movw	r3, #703
 1335 0208 A8F80030 		strh	r3, [r8]	@ movhi
 1336              	.L80:
 815:rtos/uC-FS/FAT/fs_fat_file.c ****                         p_fat_file_data->FileCurSec     = sec_cur;
 1337              		.loc 1 815 25 is_stmt 1 view .LVU440
 1338 020c 0498     		ldr	r0, [sp, #16]
 1339              	.LVL156:
 815:rtos/uC-FS/FAT/fs_fat_file.c ****                         p_fat_file_data->FileCurSec     = sec_cur;
 1340              		.loc 1 815 25 is_stmt 0 view .LVU441
 1341 020e FFF7FEFF 		bl	FSBuf_Free
 1342              	.LVL157:
 816:rtos/uC-FS/FAT/fs_fat_file.c ****                         p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1343              		.loc 1 816 25 is_stmt 1 view .LVU442
ARM GAS  /tmp/ccKN2FgP.s 			page 44


 816:rtos/uC-FS/FAT/fs_fat_file.c ****                         p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1344              		.loc 1 816 57 is_stmt 0 view .LVU443
 1345 0212 099B     		ldr	r3, [sp, #36]
 1346 0214 9F62     		str	r7, [r3, #40]
 817:rtos/uC-FS/FAT/fs_fat_file.c ****                         p_fat_file_data->FilePos       += size - size_rem;
 1347              		.loc 1 817 25 is_stmt 1 view .LVU444
 817:rtos/uC-FS/FAT/fs_fat_file.c ****                         p_fat_file_data->FilePos       += size - size_rem;
 1348              		.loc 1 817 57 is_stmt 0 view .LVU445
 1349 0216 0699     		ldr	r1, [sp, #24]
 1350 0218 D962     		str	r1, [r3, #44]
 818:rtos/uC-FS/FAT/fs_fat_file.c ****                         return (size - size_rem);
 1351              		.loc 1 818 25 is_stmt 1 view .LVU446
 818:rtos/uC-FS/FAT/fs_fat_file.c ****                         return (size - size_rem);
 1352              		.loc 1 818 64 is_stmt 0 view .LVU447
 1353 021a 079A     		ldr	r2, [sp, #28]
 1354 021c 0399     		ldr	r1, [sp, #12]
 1355 021e 511A     		subs	r1, r2, r1
 1356 0220 0791     		str	r1, [sp, #28]
 1357              	.LVL158:
 818:rtos/uC-FS/FAT/fs_fat_file.c ****                         return (size - size_rem);
 1358              		.loc 1 818 56 view .LVU448
 1359 0222 1A46     		mov	r2, r3
 1360 0224 1B68     		ldr	r3, [r3]
 1361 0226 0B44     		add	r3, r3, r1
 1362 0228 1360     		str	r3, [r2]
 819:rtos/uC-FS/FAT/fs_fat_file.c ****                     }
 1363              		.loc 1 819 25 is_stmt 1 view .LVU449
 819:rtos/uC-FS/FAT/fs_fat_file.c ****                     }
 1364              		.loc 1 819 38 is_stmt 0 view .LVU450
 1365 022a 30E7     		b	.L60
 1366              	.LVL159:
 1367              	.L81:
 819:rtos/uC-FS/FAT/fs_fat_file.c ****                     }
 1368              		.loc 1 819 38 view .LVU451
 1369 022c 9146     		mov	r9, r2
 1370 022e 0646     		mov	r6, r0
 829:rtos/uC-FS/FAT/fs_fat_file.c ****                              (void *)p_dest_08,
 1371              		.loc 1 829 13 is_stmt 1 view .LVU452
 1372 0230 CDF80480 		str	r8, [sp, #4]
 1373 0234 0423     		movs	r3, #4
 1374 0236 0093     		str	r3, [sp]
 1375 0238 2346     		mov	r3, r4
 1376 023a 3A46     		mov	r2, r7
 1377              	.LVL160:
 829:rtos/uC-FS/FAT/fs_fat_file.c ****                              (void *)p_dest_08,
 1378              		.loc 1 829 13 is_stmt 0 view .LVU453
 1379 023c 0599     		ldr	r1, [sp, #20]
 1380 023e DBF83C00 		ldr	r0, [fp, #60]
 1381              	.LVL161:
 829:rtos/uC-FS/FAT/fs_fat_file.c ****                              (void *)p_dest_08,
 1382              		.loc 1 829 13 view .LVU454
 1383 0242 FFF7FEFF 		bl	FSVol_RdLockedEx
 1384              	.LVL162:
 836:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 1385              		.loc 1 836 13 is_stmt 1 view .LVU455
 836:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 1386              		.loc 1 836 17 is_stmt 0 view .LVU456
ARM GAS  /tmp/ccKN2FgP.s 			page 45


 1387 0246 B8F80030 		ldrh	r3, [r8]
 836:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 1388              		.loc 1 836 16 view .LVU457
 1389 024a 002B     		cmp	r3, #0
 1390 024c 38D1     		bne	.L102
 844:rtos/uC-FS/FAT/fs_fat_file.c ****             p_dest_08  += FS_UTIL_MULT_PWR2(sec_cnt_rd, p_fat_data->SecSizeLog2);
 1391              		.loc 1 844 13 is_stmt 1 view .LVU458
 844:rtos/uC-FS/FAT/fs_fat_file.c ****             p_dest_08  += FS_UTIL_MULT_PWR2(sec_cnt_rd, p_fat_data->SecSizeLog2);
 1392              		.loc 1 844 27 is_stmt 0 view .LVU459
 1393 024e 9AF83830 		ldrb	r3, [r10, #56]	@ zero_extendqisi2
 1394 0252 04FA03F3 		lsl	r3, r4, r3
 1395 0256 0693     		str	r3, [sp, #24]
 1396              	.LVL163:
 844:rtos/uC-FS/FAT/fs_fat_file.c ****             p_dest_08  += FS_UTIL_MULT_PWR2(sec_cnt_rd, p_fat_data->SecSizeLog2);
 1397              		.loc 1 844 24 view .LVU460
 1398 0258 039A     		ldr	r2, [sp, #12]
 1399 025a D21A     		subs	r2, r2, r3
 1400 025c 0892     		str	r2, [sp, #32]
 1401              	.LVL164:
 845:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur    += sec_cnt_rd - 1u;
 1402              		.loc 1 845 13 is_stmt 1 view .LVU461
 845:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur    += sec_cnt_rd - 1u;
 1403              		.loc 1 845 24 is_stmt 0 view .LVU462
 1404 025e 059A     		ldr	r2, [sp, #20]
 1405              	.LVL165:
 845:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur    += sec_cnt_rd - 1u;
 1406              		.loc 1 845 24 view .LVU463
 1407 0260 1A44     		add	r2, r2, r3
 1408 0262 0592     		str	r2, [sp, #20]
 1409              	.LVL166:
 846:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1410              		.loc 1 846 13 is_stmt 1 view .LVU464
 846:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1411              		.loc 1 846 24 is_stmt 0 view .LVU465
 1412 0264 2744     		add	r7, r7, r4
 1413              	.LVL167:
 846:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1414              		.loc 1 846 24 view .LVU466
 1415 0266 013F     		subs	r7, r7, #1
 1416              	.LVL168:
 848:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = sec_next;                         /* Set the next iter to start at ne
 1417              		.loc 1 848 13 is_stmt 1 view .LVU467
 848:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = sec_next;                         /* Set the next iter to start at ne
 1418              		.loc 1 848 15 is_stmt 0 view .LVU468
 1419 0268 A542     		cmp	r5, r4
 1420 026a 39D0     		beq	.L103
 844:rtos/uC-FS/FAT/fs_fat_file.c ****             p_dest_08  += FS_UTIL_MULT_PWR2(sec_cnt_rd, p_fat_data->SecSizeLog2);
 1421              		.loc 1 844 24 view .LVU469
 1422 026c 089B     		ldr	r3, [sp, #32]
 1423 026e 0393     		str	r3, [sp, #12]
 849:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
 1424              		.loc 1 849 29 view .LVU470
 1425 0270 3746     		mov	r7, r6
 1426              	.LVL169:
 850:rtos/uC-FS/FAT/fs_fat_file.c ****             } else if (size_rem > 0u) {                         /* Partial sec left, fetch next sec
 1427              		.loc 1 850 29 view .LVU471
 1428 0272 0023     		movs	r3, #0
ARM GAS  /tmp/ccKN2FgP.s 			page 46


 1429 0274 0693     		str	r3, [sp, #24]
 1430              	.LVL170:
 1431              	.L89:
 797:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cnt_rem = FS_UTIL_DIV_PWR2(size_rem, p_fat_data->SecSizeLog2);
 1432              		.loc 1 797 11 is_stmt 1 view .LVU472
 1433 0276 039B     		ldr	r3, [sp, #12]
 1434 0278 002B     		cmp	r3, #0
 1435 027a 75D0     		beq	.L104
 798:rtos/uC-FS/FAT/fs_fat_file.c ****         if (sec_cnt_rem > 0u) {                                 /* ------------------- FULL SEC RDs
 1436              		.loc 1 798 9 view .LVU473
 798:rtos/uC-FS/FAT/fs_fat_file.c ****         if (sec_cnt_rem > 0u) {                                 /* ------------------- FULL SEC RDs
 1437              		.loc 1 798 23 is_stmt 0 view .LVU474
 1438 027c 9AF83850 		ldrb	r5, [r10, #56]	@ zero_extendqisi2
 1439              	.LVL171:
 799:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1440              		.loc 1 799 9 is_stmt 1 view .LVU475
 799:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1441              		.loc 1 799 12 is_stmt 0 view .LVU476
 1442 0280 039B     		ldr	r3, [sp, #12]
 1443 0282 33FA05F5 		lsrs	r5, r3, r5
 1444              	.LVL172:
 799:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1445              		.loc 1 799 12 view .LVU477
 1446 0286 97D1     		bne	.L105
 874:rtos/uC-FS/FAT/fs_fat_file.c ****                              p_buf->DataPtr,
 1447              		.loc 1 874 13 is_stmt 1 view .LVU478
 1448 0288 049B     		ldr	r3, [sp, #16]
 1449 028a 1969     		ldr	r1, [r3, #16]
 1450 028c CDF80480 		str	r8, [sp, #4]
 1451 0290 0423     		movs	r3, #4
 1452 0292 0093     		str	r3, [sp]
 1453 0294 0123     		movs	r3, #1
 1454 0296 3A46     		mov	r2, r7
 1455 0298 DBF83C00 		ldr	r0, [fp, #60]
 1456 029c FFF7FEFF 		bl	FSVol_RdLockedEx
 1457              	.LVL173:
 881:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 1458              		.loc 1 881 13 view .LVU479
 881:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 1459              		.loc 1 881 17 is_stmt 0 view .LVU480
 1460 02a0 B8F80030 		ldrh	r3, [r8]
 881:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 1461              		.loc 1 881 16 view .LVU481
 1462 02a4 002B     		cmp	r3, #0
 1463 02a6 4FD1     		bne	.L106
 889:rtos/uC-FS/FAT/fs_fat_file.c ****                      (void     *)p_buf->DataPtr,
 1464              		.loc 1 889 13 is_stmt 1 view .LVU482
 1465 02a8 039C     		ldr	r4, [sp, #12]
 1466 02aa 2246     		mov	r2, r4
 1467 02ac 049B     		ldr	r3, [sp, #16]
 1468 02ae 1969     		ldr	r1, [r3, #16]
 1469 02b0 0598     		ldr	r0, [sp, #20]
 1470 02b2 FFF7FEFF 		bl	Mem_Copy
 1471              	.LVL174:
 892:rtos/uC-FS/FAT/fs_fat_file.c ****             size_rem     = 0u;
 1472              		.loc 1 892 13 view .LVU483
 892:rtos/uC-FS/FAT/fs_fat_file.c ****             size_rem     = 0u;
ARM GAS  /tmp/ccKN2FgP.s 			page 47


 1473              		.loc 1 892 25 is_stmt 0 view .LVU484
 1474 02b6 069B     		ldr	r3, [sp, #24]
 1475 02b8 2344     		add	r3, r3, r4
 1476 02ba 0693     		str	r3, [sp, #24]
 1477              	.LVL175:
 893:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1478              		.loc 1 893 13 is_stmt 1 view .LVU485
 893:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1479              		.loc 1 893 26 is_stmt 0 view .LVU486
 1480 02bc 0395     		str	r5, [sp, #12]
 1481 02be DAE7     		b	.L89
 1482              	.LVL176:
 1483              	.L102:
 837:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSec     = sec_cur;
 1484              		.loc 1 837 17 is_stmt 1 view .LVU487
 1485 02c0 0498     		ldr	r0, [sp, #16]
 1486 02c2 FFF7FEFF 		bl	FSBuf_Free
 1487              	.LVL177:
 838:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1488              		.loc 1 838 17 view .LVU488
 838:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1489              		.loc 1 838 49 is_stmt 0 view .LVU489
 1490 02c6 099B     		ldr	r3, [sp, #36]
 1491 02c8 9F62     		str	r7, [r3, #40]
 839:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FilePos       += size - size_rem;
 1492              		.loc 1 839 17 is_stmt 1 view .LVU490
 839:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FilePos       += size - size_rem;
 1493              		.loc 1 839 49 is_stmt 0 view .LVU491
 1494 02ca 0699     		ldr	r1, [sp, #24]
 1495 02cc D962     		str	r1, [r3, #44]
 840:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 1496              		.loc 1 840 17 is_stmt 1 view .LVU492
 840:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 1497              		.loc 1 840 56 is_stmt 0 view .LVU493
 1498 02ce 079A     		ldr	r2, [sp, #28]
 1499 02d0 0399     		ldr	r1, [sp, #12]
 1500 02d2 511A     		subs	r1, r2, r1
 1501 02d4 0791     		str	r1, [sp, #28]
 1502              	.LVL178:
 840:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 1503              		.loc 1 840 48 view .LVU494
 1504 02d6 1A46     		mov	r2, r3
 1505 02d8 1B68     		ldr	r3, [r3]
 1506 02da 0B44     		add	r3, r3, r1
 1507 02dc 1360     		str	r3, [r2]
 841:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1508              		.loc 1 841 17 is_stmt 1 view .LVU495
 841:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1509              		.loc 1 841 30 is_stmt 0 view .LVU496
 1510 02de D6E6     		b	.L60
 1511              	.LVL179:
 1512              	.L103:
 851:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
 1513              		.loc 1 851 20 is_stmt 1 view .LVU497
 851:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
 1514              		.loc 1 851 23 is_stmt 0 view .LVU498
 1515 02e0 089B     		ldr	r3, [sp, #32]
ARM GAS  /tmp/ccKN2FgP.s 			page 48


 1516 02e2 2BB9     		cbnz	r3, .L107
 869:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1517              		.loc 1 869 17 is_stmt 1 view .LVU499
 869:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1518              		.loc 1 869 29 is_stmt 0 view .LVU500
 1519 02e4 DAF83430 		ldr	r3, [r10, #52]
 1520 02e8 0693     		str	r3, [sp, #24]
 1521              	.LVL180:
 844:rtos/uC-FS/FAT/fs_fat_file.c ****             p_dest_08  += FS_UTIL_MULT_PWR2(sec_cnt_rd, p_fat_data->SecSizeLog2);
 1522              		.loc 1 844 24 view .LVU501
 1523 02ea 089B     		ldr	r3, [sp, #32]
 1524              	.LVL181:
 844:rtos/uC-FS/FAT/fs_fat_file.c ****             p_dest_08  += FS_UTIL_MULT_PWR2(sec_cnt_rd, p_fat_data->SecSizeLog2);
 1525              		.loc 1 844 24 view .LVU502
 1526 02ec 0393     		str	r3, [sp, #12]
 1527 02ee C2E7     		b	.L89
 1528              	.LVL182:
 1529              	.L107:
 852:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 1530              		.loc 1 852 17 is_stmt 1 view .LVU503
 853:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_buf,
 1531              		.loc 1 853 17 view .LVU504
 853:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_buf,
 1532              		.loc 1 853 31 is_stmt 0 view .LVU505
 1533 02f0 4346     		mov	r3, r8
 1534 02f2 3A46     		mov	r2, r7
 1535              	.LVL183:
 853:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_buf,
 1536              		.loc 1 853 31 view .LVU506
 1537 02f4 0499     		ldr	r1, [sp, #16]
 1538 02f6 DBF83C00 		ldr	r0, [fp, #60]
 1539 02fa FFF7FEFF 		bl	FS_FAT_SecNextGet
 1540              	.LVL184:
 1541 02fe 0746     		mov	r7, r0
 1542              	.LVL185:
 857:rtos/uC-FS/FAT/fs_fat_file.c ****                     if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1543              		.loc 1 857 17 is_stmt 1 view .LVU507
 857:rtos/uC-FS/FAT/fs_fat_file.c ****                     if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1544              		.loc 1 857 21 is_stmt 0 view .LVU508
 1545 0300 B8F80030 		ldrh	r3, [r8]
 857:rtos/uC-FS/FAT/fs_fat_file.c ****                     if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END) ||
 1546              		.loc 1 857 20 view .LVU509
 1547 0304 23B9     		cbnz	r3, .L108
 844:rtos/uC-FS/FAT/fs_fat_file.c ****             p_dest_08  += FS_UTIL_MULT_PWR2(sec_cnt_rd, p_fat_data->SecSizeLog2);
 1548              		.loc 1 844 24 view .LVU510
 1549 0306 089B     		ldr	r3, [sp, #32]
 1550 0308 0393     		str	r3, [sp, #12]
 852:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 1551              		.loc 1 852 29 view .LVU511
 1552 030a 0023     		movs	r3, #0
 1553 030c 0693     		str	r3, [sp, #24]
 1554 030e B2E7     		b	.L89
 1555              	.L108:
 858:rtos/uC-FS/FAT/fs_fat_file.c ****                         (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1556              		.loc 1 858 21 is_stmt 1 view .LVU512
 858:rtos/uC-FS/FAT/fs_fat_file.c ****                         (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1557              		.loc 1 858 24 is_stmt 0 view .LVU513
ARM GAS  /tmp/ccKN2FgP.s 			page 49


 1558 0310 40F23652 		movw	r2, #1334
 1559 0314 9342     		cmp	r3, r2
 1560 0316 02D0     		beq	.L86
 858:rtos/uC-FS/FAT/fs_fat_file.c ****                         (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 1561              		.loc 1 858 63 discriminator 1 view .LVU514
 1562 0318 B3F5A76F 		cmp	r3, #1336
 1563 031c 03D1     		bne	.L87
 1564              	.L86:
 860:rtos/uC-FS/FAT/fs_fat_file.c ****                     }
 1565              		.loc 1 860 26 is_stmt 1 view .LVU515
 860:rtos/uC-FS/FAT/fs_fat_file.c ****                     }
 1566              		.loc 1 860 33 is_stmt 0 view .LVU516
 1567 031e 40F2BF23 		movw	r3, #703
 1568 0322 A8F80030 		strh	r3, [r8]	@ movhi
 1569              	.L87:
 862:rtos/uC-FS/FAT/fs_fat_file.c ****                     p_fat_file_data->FileCurSec     = sec_cur;
 1570              		.loc 1 862 21 is_stmt 1 view .LVU517
 1571 0326 0498     		ldr	r0, [sp, #16]
 1572              	.LVL186:
 862:rtos/uC-FS/FAT/fs_fat_file.c ****                     p_fat_file_data->FileCurSec     = sec_cur;
 1573              		.loc 1 862 21 is_stmt 0 view .LVU518
 1574 0328 FFF7FEFF 		bl	FSBuf_Free
 1575              	.LVL187:
 863:rtos/uC-FS/FAT/fs_fat_file.c ****                     p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1576              		.loc 1 863 21 is_stmt 1 view .LVU519
 863:rtos/uC-FS/FAT/fs_fat_file.c ****                     p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1577              		.loc 1 863 53 is_stmt 0 view .LVU520
 1578 032c 099A     		ldr	r2, [sp, #36]
 1579 032e 9762     		str	r7, [r2, #40]
 864:rtos/uC-FS/FAT/fs_fat_file.c ****                     p_fat_file_data->FilePos       += size - size_rem;
 1580              		.loc 1 864 21 is_stmt 1 view .LVU521
 864:rtos/uC-FS/FAT/fs_fat_file.c ****                     p_fat_file_data->FilePos       += size - size_rem;
 1581              		.loc 1 864 53 is_stmt 0 view .LVU522
 1582 0330 0023     		movs	r3, #0
 1583 0332 D362     		str	r3, [r2, #44]
 865:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (size - size_rem);
 1584              		.loc 1 865 21 is_stmt 1 view .LVU523
 865:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (size - size_rem);
 1585              		.loc 1 865 60 is_stmt 0 view .LVU524
 1586 0334 069B     		ldr	r3, [sp, #24]
 1587 0336 0399     		ldr	r1, [sp, #12]
 1588 0338 5B1A     		subs	r3, r3, r1
 1589 033a 0799     		ldr	r1, [sp, #28]
 1590 033c 1944     		add	r1, r1, r3
 1591 033e 0791     		str	r1, [sp, #28]
 1592              	.LVL188:
 865:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (size - size_rem);
 1593              		.loc 1 865 52 view .LVU525
 1594 0340 1368     		ldr	r3, [r2]
 1595 0342 0B44     		add	r3, r3, r1
 1596 0344 1360     		str	r3, [r2]
 866:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 1597              		.loc 1 866 21 is_stmt 1 view .LVU526
 866:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 1598              		.loc 1 866 34 is_stmt 0 view .LVU527
 1599 0346 A2E6     		b	.L60
 1600              	.LVL189:
ARM GAS  /tmp/ccKN2FgP.s 			page 50


 1601              	.L106:
 882:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSec     = sec_cur;
 1602              		.loc 1 882 17 is_stmt 1 view .LVU528
 1603 0348 0498     		ldr	r0, [sp, #16]
 1604 034a FFF7FEFF 		bl	FSBuf_Free
 1605              	.LVL190:
 883:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1606              		.loc 1 883 17 view .LVU529
 883:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1607              		.loc 1 883 49 is_stmt 0 view .LVU530
 1608 034e 099B     		ldr	r3, [sp, #36]
 1609 0350 9F62     		str	r7, [r3, #40]
 884:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FilePos       += size - size_rem;
 1610              		.loc 1 884 17 is_stmt 1 view .LVU531
 884:rtos/uC-FS/FAT/fs_fat_file.c ****                 p_fat_file_data->FilePos       += size - size_rem;
 1611              		.loc 1 884 49 is_stmt 0 view .LVU532
 1612 0352 0699     		ldr	r1, [sp, #24]
 1613 0354 D962     		str	r1, [r3, #44]
 885:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 1614              		.loc 1 885 17 is_stmt 1 view .LVU533
 885:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 1615              		.loc 1 885 56 is_stmt 0 view .LVU534
 1616 0356 079A     		ldr	r2, [sp, #28]
 1617 0358 0399     		ldr	r1, [sp, #12]
 1618 035a 511A     		subs	r1, r2, r1
 1619 035c 0791     		str	r1, [sp, #28]
 1620              	.LVL191:
 885:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (size - size_rem);
 1621              		.loc 1 885 48 view .LVU535
 1622 035e 1A46     		mov	r2, r3
 1623 0360 1B68     		ldr	r3, [r3]
 1624 0362 0B44     		add	r3, r3, r1
 1625 0364 1360     		str	r3, [r2]
 886:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1626              		.loc 1 886 17 is_stmt 1 view .LVU536
 886:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 1627              		.loc 1 886 30 is_stmt 0 view .LVU537
 1628 0366 92E6     		b	.L60
 1629              	.LVL192:
 1630              	.L104:
 900:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1631              		.loc 1 900 5 is_stmt 1 view .LVU538
 900:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSecPos  = sec_cur_pos;
 1632              		.loc 1 900 37 is_stmt 0 view .LVU539
 1633 0368 099A     		ldr	r2, [sp, #36]
 1634 036a 9762     		str	r7, [r2, #40]
 901:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FilePos       += size;
 1635              		.loc 1 901 5 is_stmt 1 view .LVU540
 901:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FilePos       += size;
 1636              		.loc 1 901 37 is_stmt 0 view .LVU541
 1637 036c 0699     		ldr	r1, [sp, #24]
 1638 036e D162     		str	r1, [r2, #44]
 902:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1639              		.loc 1 902 5 is_stmt 1 view .LVU542
 902:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1640              		.loc 1 902 36 is_stmt 0 view .LVU543
 1641 0370 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccKN2FgP.s 			page 51


 1642              	.LVL193:
 902:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1643              		.loc 1 902 36 view .LVU544
 1644 0372 0799     		ldr	r1, [sp, #28]
 1645 0374 0B44     		add	r3, r3, r1
 1646 0376 1360     		str	r3, [r2]
 904:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1647              		.loc 1 904 5 is_stmt 1 view .LVU545
 1648 0378 0498     		ldr	r0, [sp, #16]
 1649 037a FFF7FEFF 		bl	FSBuf_Free
 1650              	.LVL194:
 906:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1651              		.loc 1 906 4 view .LVU546
 906:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1652              		.loc 1 906 11 is_stmt 0 view .LVU547
 1653 037e 0023     		movs	r3, #0
 1654 0380 A8F80030 		strh	r3, [r8]	@ movhi
 908:rtos/uC-FS/FAT/fs_fat_file.c **** }
 1655              		.loc 1 908 5 is_stmt 1 view .LVU548
 908:rtos/uC-FS/FAT/fs_fat_file.c **** }
 1656              		.loc 1 908 12 is_stmt 0 view .LVU549
 1657 0384 83E6     		b	.L60
 1658              		.cfi_endproc
 1659              	.LFE5:
 1661              		.section	.text.FS_FAT_FileTruncate,"ax",%progbits
 1662              		.align	1
 1663              		.global	FS_FAT_FileTruncate
 1664              		.syntax unified
 1665              		.thumb
 1666              		.thumb_func
 1667              		.fpu fpv4-sp-d16
 1669              	FS_FAT_FileTruncate:
 1670              	.LVL195:
 1671              	.LFB6:
 910:rtos/uC-FS/FAT/fs_fat_file.c **** 
 911:rtos/uC-FS/FAT/fs_fat_file.c **** 
 912:rtos/uC-FS/FAT/fs_fat_file.c **** /*
 913:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 914:rtos/uC-FS/FAT/fs_fat_file.c **** *                                        FS_FAT_FileTruncate()
 915:rtos/uC-FS/FAT/fs_fat_file.c **** *
 916:rtos/uC-FS/FAT/fs_fat_file.c **** * Description : Truncate a file.
 917:rtos/uC-FS/FAT/fs_fat_file.c **** *
 918:rtos/uC-FS/FAT/fs_fat_file.c **** * Argument(s) : p_file      Pointer to a file.
 919:rtos/uC-FS/FAT/fs_fat_file.c **** *               ------      Argument validated by caller.
 920:rtos/uC-FS/FAT/fs_fat_file.c **** *
 921:rtos/uC-FS/FAT/fs_fat_file.c **** *               size        Size of file after truncation (see Note #1).
 922:rtos/uC-FS/FAT/fs_fat_file.c **** *
 923:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 924:rtos/uC-FS/FAT/fs_fat_file.c **** *
 925:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_NONE              File truncated successful.
 926:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_BUF_NONE_AVAIL    No buffer available.
 927:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_DEV               Device access error.
 928:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_DEV_FULL          Device is full (no space could be allocate
 929:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_ENTRY_CORRUPT     File system entry is corrupt.
 930:rtos/uC-FS/FAT/fs_fat_file.c **** *
 931:rtos/uC-FS/FAT/fs_fat_file.c **** * Return(s)   : none.
 932:rtos/uC-FS/FAT/fs_fat_file.c **** *
ARM GAS  /tmp/ccKN2FgP.s 			page 52


 933:rtos/uC-FS/FAT/fs_fat_file.c **** * Note(s)     : (1) If 'len' is 0, then it is possible for no data cluster to have been assigned to
 934:rtos/uC-FS/FAT/fs_fat_file.c **** *                   file.  In that case, no action need be taken.
 935:rtos/uC-FS/FAT/fs_fat_file.c **** *
 936:rtos/uC-FS/FAT/fs_fat_file.c **** *               (2) If journaling is enabled & journaling started, logs will be written (from
 937:rtos/uC-FS/FAT/fs_fat_file.c **** *                  'FS_FAT_LowEntryTruncated()') to the journal to ensure that either the entry is
 938:rtos/uC-FS/FAT/fs_fat_file.c **** *                   truncated to the specified size or no changes occur to the file system.
 939:rtos/uC-FS/FAT/fs_fat_file.c **** *
 940:rtos/uC-FS/FAT/fs_fat_file.c **** *                   (a) Since this is a top level action, the journal must be cleared once it is fi
 941:rtos/uC-FS/FAT/fs_fat_file.c **** *                       or after an error occurs.
 942:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
 943:rtos/uC-FS/FAT/fs_fat_file.c **** */
 944:rtos/uC-FS/FAT/fs_fat_file.c **** 
 945:rtos/uC-FS/FAT/fs_fat_file.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 946:rtos/uC-FS/FAT/fs_fat_file.c **** void  FS_FAT_FileTruncate (FS_FILE       *p_file,
 947:rtos/uC-FS/FAT/fs_fat_file.c ****                            FS_FILE_SIZE   size,
 948:rtos/uC-FS/FAT/fs_fat_file.c ****                            FS_ERR        *p_err)
 949:rtos/uC-FS/FAT/fs_fat_file.c **** {
 1672              		.loc 1 949 1 is_stmt 1 view -0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676              		.loc 1 949 1 is_stmt 0 view .LVU551
 1677 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1678              	.LCFI20:
 1679              		.cfi_def_cfa_offset 24
 1680              		.cfi_offset 4, -24
 1681              		.cfi_offset 5, -20
 1682              		.cfi_offset 6, -16
 1683              		.cfi_offset 7, -12
 1684              		.cfi_offset 8, -8
 1685              		.cfi_offset 14, -4
 1686 0004 82B0     		sub	sp, sp, #8
 1687              	.LCFI21:
 1688              		.cfi_def_cfa_offset 32
 1689 0006 0746     		mov	r7, r0
 1690 0008 0C46     		mov	r4, r1
 1691 000a 1546     		mov	r5, r2
 950:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_BUF            *p_buf;
 1692              		.loc 1 950 5 is_stmt 1 view .LVU552
 951:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_DATA  *p_fat_file_data;
 1693              		.loc 1 951 5 view .LVU553
 952:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_SIZE   pos;
 1694              		.loc 1 952 5 view .LVU554
 953:rtos/uC-FS/FAT/fs_fat_file.c **** 
 954:rtos/uC-FS/FAT/fs_fat_file.c **** 
 955:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------- SET FILE POS
 956:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data = (FS_FAT_FILE_DATA *)(p_file->DataPtr);
 1695              		.loc 1 956 5 view .LVU555
 1696              		.loc 1 956 21 is_stmt 0 view .LVU556
 1697 000c 066C     		ldr	r6, [r0, #64]
 1698              	.LVL196:
 957:rtos/uC-FS/FAT/fs_fat_file.c **** 
 958:rtos/uC-FS/FAT/fs_fat_file.c ****     if ((p_fat_file_data->FileFirstClus == 0u) &&               /* If no data clus's assigned to fi
 1699              		.loc 1 958 5 is_stmt 1 view .LVU557
 1700              		.loc 1 958 25 is_stmt 0 view .LVU558
 1701 000e 736A     		ldr	r3, [r6, #36]
 1702              		.loc 1 958 8 view .LVU559
ARM GAS  /tmp/ccKN2FgP.s 			page 53


 1703 0010 03B9     		cbnz	r3, .L110
 1704              		.loc 1 958 48 discriminator 1 view .LVU560
 1705 0012 F1B1     		cbz	r1, .L117
 1706              	.L110:
 959:rtos/uC-FS/FAT/fs_fat_file.c ****         (size                           == 0u)) {               /* ... & file should be truncated t
 960:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_NONE;                                    /* ... do nothing & rtn (see Note #
 961:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 962:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 963:rtos/uC-FS/FAT/fs_fat_file.c **** 
 964:rtos/uC-FS/FAT/fs_fat_file.c ****     if (size < p_fat_file_data->FilePos) {                      /* If file pos AFTER new EOF ...   
 1707              		.loc 1 964 5 is_stmt 1 view .LVU561
 1708              		.loc 1 964 31 is_stmt 0 view .LVU562
 1709 0014 D6F80080 		ldr	r8, [r6]
 1710              		.loc 1 964 8 view .LVU563
 1711 0018 A045     		cmp	r8, r4
 1712 001a 1CD8     		bhi	.L118
 965:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_FAT_FilePosSet(p_file,                               /* ... set file pos to new EOF.    
 966:rtos/uC-FS/FAT/fs_fat_file.c ****                           size,
 967:rtos/uC-FS/FAT/fs_fat_file.c ****                           p_err);
 968:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
 969:rtos/uC-FS/FAT/fs_fat_file.c ****             return;
 970:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 971:rtos/uC-FS/FAT/fs_fat_file.c **** 
 972:rtos/uC-FS/FAT/fs_fat_file.c **** 
 973:rtos/uC-FS/FAT/fs_fat_file.c **** 
 974:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* -------------------- EXTEND FILE
 975:rtos/uC-FS/FAT/fs_fat_file.c ****     } else {
 976:rtos/uC-FS/FAT/fs_fat_file.c ****         if (size > p_fat_file_data->FileSize) {                 /* If file pos AFTER current EOF ..
 1713              		.loc 1 976 9 is_stmt 1 view .LVU564
 1714              		.loc 1 976 35 is_stmt 0 view .LVU565
 1715 001c 7368     		ldr	r3, [r6, #4]
 1716              		.loc 1 976 12 view .LVU566
 1717 001e A342     		cmp	r3, r4
 1718 0020 22D3     		bcc	.L119
 1719              	.LVL197:
 1720              	.L113:
 977:rtos/uC-FS/FAT/fs_fat_file.c ****             pos = p_fat_file_data->FilePos;                     /* ... save file pos data        ..
 978:rtos/uC-FS/FAT/fs_fat_file.c **** 
 979:rtos/uC-FS/FAT/fs_fat_file.c ****             FS_FAT_FilePosSet(p_file,                           /* ... extend file               ..
 980:rtos/uC-FS/FAT/fs_fat_file.c ****                               size,
 981:rtos/uC-FS/FAT/fs_fat_file.c ****                               p_err);
 982:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err != FS_ERR_NONE) {
 983:rtos/uC-FS/FAT/fs_fat_file.c ****                 return;
 984:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 985:rtos/uC-FS/FAT/fs_fat_file.c **** 
 986:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ... restore file pos data.      
 987:rtos/uC-FS/FAT/fs_fat_file.c ****             FS_FAT_FilePosSet(p_file,                           /* ... extend file               ..
 988:rtos/uC-FS/FAT/fs_fat_file.c ****                               pos,
 989:rtos/uC-FS/FAT/fs_fat_file.c ****                               p_err);
 990:rtos/uC-FS/FAT/fs_fat_file.c ****             return;
 991:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 992:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 993:rtos/uC-FS/FAT/fs_fat_file.c **** 
 994:rtos/uC-FS/FAT/fs_fat_file.c **** 
 995:rtos/uC-FS/FAT/fs_fat_file.c **** 
 996:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------- TRUNCATE FIL
 997:rtos/uC-FS/FAT/fs_fat_file.c ****     p_buf = FSBuf_Get(p_file->VolPtr);
ARM GAS  /tmp/ccKN2FgP.s 			page 54


 1721              		.loc 1 997 5 is_stmt 1 view .LVU567
 1722              		.loc 1 997 13 is_stmt 0 view .LVU568
 1723 0022 F86B     		ldr	r0, [r7, #60]
 1724 0024 FFF7FEFF 		bl	FSBuf_Get
 1725              	.LVL198:
 998:rtos/uC-FS/FAT/fs_fat_file.c ****     if (p_buf == (FS_BUF *)0) {
 1726              		.loc 1 998 5 is_stmt 1 view .LVU569
 1727              		.loc 1 998 8 is_stmt 0 view .LVU570
 1728 0028 8046     		mov	r8, r0
 1729 002a 58B3     		cbz	r0, .L120
 999:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
1000:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
1001:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1002:rtos/uC-FS/FAT/fs_fat_file.c **** 
1003:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_LowEntryTruncate(p_file->VolPtr,
 1730              		.loc 1 1003 5 is_stmt 1 view .LVU571
 1731 002c 0095     		str	r5, [sp]
 1732 002e 2346     		mov	r3, r4
 1733 0030 3246     		mov	r2, r6
 1734 0032 0146     		mov	r1, r0
 1735 0034 F86B     		ldr	r0, [r7, #60]
 1736              	.LVL199:
 1737              		.loc 1 1003 5 is_stmt 0 view .LVU572
 1738 0036 FFF7FEFF 		bl	FS_FAT_LowEntryTruncate
 1739              	.LVL200:
1004:rtos/uC-FS/FAT/fs_fat_file.c ****                             p_buf,
1005:rtos/uC-FS/FAT/fs_fat_file.c ****                             p_fat_file_data,
1006:rtos/uC-FS/FAT/fs_fat_file.c ****                             size,
1007:rtos/uC-FS/FAT/fs_fat_file.c ****                             p_err);
1008:rtos/uC-FS/FAT/fs_fat_file.c **** 
1009:rtos/uC-FS/FAT/fs_fat_file.c **** 
1010:rtos/uC-FS/FAT/fs_fat_file.c ****     if (*p_err != FS_ERR_NONE) {
 1740              		.loc 1 1010 5 is_stmt 1 view .LVU573
 1741              		.loc 1 1010 9 is_stmt 0 view .LVU574
 1742 003a 2B88     		ldrh	r3, [r5]
 1743              		.loc 1 1010 8 view .LVU575
 1744 003c 2BBB     		cbnz	r3, .L121
1011:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
1012:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
1013:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1014:rtos/uC-FS/FAT/fs_fat_file.c **** 
1015:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* -------------------- CLR JOURNAL
1016:rtos/uC-FS/FAT/fs_fat_file.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
1017:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_JournalClrReset(p_file->VolPtr, p_buf, p_err);       /* See Note #2a.                   
1018:rtos/uC-FS/FAT/fs_fat_file.c ****     if (*p_err != FS_ERR_NONE) {
1019:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
1020:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
1021:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1022:rtos/uC-FS/FAT/fs_fat_file.c **** #endif
1023:rtos/uC-FS/FAT/fs_fat_file.c **** 
1024:rtos/uC-FS/FAT/fs_fat_file.c ****     FSBuf_Flush(p_buf, p_err);
 1745              		.loc 1 1024 5 is_stmt 1 view .LVU576
 1746 003e 2946     		mov	r1, r5
 1747 0040 4046     		mov	r0, r8
 1748 0042 FFF7FEFF 		bl	FSBuf_Flush
 1749              	.LVL201:
1025:rtos/uC-FS/FAT/fs_fat_file.c ****     FSBuf_Free(p_buf);
ARM GAS  /tmp/ccKN2FgP.s 			page 55


 1750              		.loc 1 1025 5 view .LVU577
 1751 0046 4046     		mov	r0, r8
 1752 0048 FFF7FEFF 		bl	FSBuf_Free
 1753              	.LVL202:
 1754              	.L109:
1026:rtos/uC-FS/FAT/fs_fat_file.c **** 
1027:rtos/uC-FS/FAT/fs_fat_file.c **** }
 1755              		.loc 1 1027 1 is_stmt 0 view .LVU578
 1756 004c 02B0     		add	sp, sp, #8
 1757              	.LCFI22:
 1758              		.cfi_remember_state
 1759              		.cfi_def_cfa_offset 24
 1760              		@ sp needed
 1761 004e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1762              	.LVL203:
 1763              	.L117:
 1764              	.LCFI23:
 1765              		.cfi_restore_state
 960:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 1766              		.loc 1 960 8 is_stmt 1 view .LVU579
 960:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 1767              		.loc 1 960 15 is_stmt 0 view .LVU580
 1768 0052 1380     		strh	r3, [r2]	@ movhi
 961:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1769              		.loc 1 961 9 is_stmt 1 view .LVU581
 1770 0054 FAE7     		b	.L109
 1771              	.L118:
 965:rtos/uC-FS/FAT/fs_fat_file.c ****                           size,
 1772              		.loc 1 965 9 view .LVU582
 1773 0056 2A46     		mov	r2, r5
 1774              	.LVL204:
 965:rtos/uC-FS/FAT/fs_fat_file.c ****                           size,
 1775              		.loc 1 965 9 is_stmt 0 view .LVU583
 1776 0058 2146     		mov	r1, r4
 1777              	.LVL205:
 965:rtos/uC-FS/FAT/fs_fat_file.c ****                           size,
 1778              		.loc 1 965 9 view .LVU584
 1779 005a 3846     		mov	r0, r7
 1780              	.LVL206:
 965:rtos/uC-FS/FAT/fs_fat_file.c ****                           size,
 1781              		.loc 1 965 9 view .LVU585
 1782 005c FFF7FEFF 		bl	FS_FAT_FilePosSet
 1783              	.LVL207:
 968:rtos/uC-FS/FAT/fs_fat_file.c ****             return;
 1784              		.loc 1 968 9 is_stmt 1 view .LVU586
 968:rtos/uC-FS/FAT/fs_fat_file.c ****             return;
 1785              		.loc 1 968 13 is_stmt 0 view .LVU587
 1786 0060 2B88     		ldrh	r3, [r5]
 968:rtos/uC-FS/FAT/fs_fat_file.c ****             return;
 1787              		.loc 1 968 12 view .LVU588
 1788 0062 002B     		cmp	r3, #0
 1789 0064 DDD0     		beq	.L113
 1790 0066 F1E7     		b	.L109
 1791              	.LVL208:
 1792              	.L119:
 977:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1793              		.loc 1 977 13 is_stmt 1 view .LVU589
ARM GAS  /tmp/ccKN2FgP.s 			page 56


 979:rtos/uC-FS/FAT/fs_fat_file.c ****                               size,
 1794              		.loc 1 979 13 view .LVU590
 1795 0068 2A46     		mov	r2, r5
 1796              	.LVL209:
 979:rtos/uC-FS/FAT/fs_fat_file.c ****                               size,
 1797              		.loc 1 979 13 is_stmt 0 view .LVU591
 1798 006a 2146     		mov	r1, r4
 1799              	.LVL210:
 979:rtos/uC-FS/FAT/fs_fat_file.c ****                               size,
 1800              		.loc 1 979 13 view .LVU592
 1801 006c 3846     		mov	r0, r7
 1802              	.LVL211:
 979:rtos/uC-FS/FAT/fs_fat_file.c ****                               size,
 1803              		.loc 1 979 13 view .LVU593
 1804 006e FFF7FEFF 		bl	FS_FAT_FilePosSet
 1805              	.LVL212:
 982:rtos/uC-FS/FAT/fs_fat_file.c ****                 return;
 1806              		.loc 1 982 13 is_stmt 1 view .LVU594
 982:rtos/uC-FS/FAT/fs_fat_file.c ****                 return;
 1807              		.loc 1 982 17 is_stmt 0 view .LVU595
 1808 0072 2B88     		ldrh	r3, [r5]
 982:rtos/uC-FS/FAT/fs_fat_file.c ****                 return;
 1809              		.loc 1 982 16 view .LVU596
 1810 0074 002B     		cmp	r3, #0
 1811 0076 E9D1     		bne	.L109
 987:rtos/uC-FS/FAT/fs_fat_file.c ****                               pos,
 1812              		.loc 1 987 13 is_stmt 1 view .LVU597
 1813 0078 2A46     		mov	r2, r5
 1814 007a 4146     		mov	r1, r8
 1815 007c 3846     		mov	r0, r7
 1816 007e FFF7FEFF 		bl	FS_FAT_FilePosSet
 1817              	.LVL213:
 990:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 1818              		.loc 1 990 13 view .LVU598
 1819 0082 E3E7     		b	.L109
 1820              	.LVL214:
 1821              	.L120:
 999:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 1822              		.loc 1 999 8 view .LVU599
 999:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 1823              		.loc 1 999 15 is_stmt 0 view .LVU600
 1824 0084 6423     		movs	r3, #100
 1825 0086 2B80     		strh	r3, [r5]	@ movhi
1000:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1826              		.loc 1 1000 9 is_stmt 1 view .LVU601
 1827 0088 E0E7     		b	.L109
 1828              	.LVL215:
 1829              	.L121:
1011:rtos/uC-FS/FAT/fs_fat_file.c ****         return;
 1830              		.loc 1 1011 9 view .LVU602
 1831 008a 4046     		mov	r0, r8
 1832 008c FFF7FEFF 		bl	FSBuf_Free
 1833              	.LVL216:
1012:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1834              		.loc 1 1012 9 view .LVU603
 1835 0090 DCE7     		b	.L109
 1836              		.cfi_endproc
ARM GAS  /tmp/ccKN2FgP.s 			page 57


 1837              	.LFE6:
 1839              		.section	.text.FS_FAT_FileWr,"ax",%progbits
 1840              		.align	1
 1841              		.global	FS_FAT_FileWr
 1842              		.syntax unified
 1843              		.thumb
 1844              		.thumb_func
 1845              		.fpu fpv4-sp-d16
 1847              	FS_FAT_FileWr:
 1848              	.LVL217:
 1849              	.LFB7:
1028:rtos/uC-FS/FAT/fs_fat_file.c **** #endif
1029:rtos/uC-FS/FAT/fs_fat_file.c **** 
1030:rtos/uC-FS/FAT/fs_fat_file.c **** 
1031:rtos/uC-FS/FAT/fs_fat_file.c **** /*
1032:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
1033:rtos/uC-FS/FAT/fs_fat_file.c **** *                                           FS_FAT_FileWr()
1034:rtos/uC-FS/FAT/fs_fat_file.c **** *
1035:rtos/uC-FS/FAT/fs_fat_file.c **** * Description : Write to a file.
1036:rtos/uC-FS/FAT/fs_fat_file.c **** *
1037:rtos/uC-FS/FAT/fs_fat_file.c **** * Argument(s) : p_file      Pointer to a file.
1038:rtos/uC-FS/FAT/fs_fat_file.c **** *               ------      Argument validated by caller.
1039:rtos/uC-FS/FAT/fs_fat_file.c **** *
1040:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_src       Pointer to source buffer.
1041:rtos/uC-FS/FAT/fs_fat_file.c **** *               -----       Argument validated by caller.
1042:rtos/uC-FS/FAT/fs_fat_file.c **** *
1043:rtos/uC-FS/FAT/fs_fat_file.c **** *               size        Number of octets to write.
1044:rtos/uC-FS/FAT/fs_fat_file.c **** *
1045:rtos/uC-FS/FAT/fs_fat_file.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1046:rtos/uC-FS/FAT/fs_fat_file.c **** *
1047:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_NONE             File written successful.
1048:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_DEV              Device access error.
1049:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_DEV_FULL         Device is full (no space could be allocated
1050:rtos/uC-FS/FAT/fs_fat_file.c **** *                               FS_ERR_ENTRY_CORRUPT    File system entry is corrupt.
1051:rtos/uC-FS/FAT/fs_fat_file.c **** *
1052:rtos/uC-FS/FAT/fs_fat_file.c **** * Return(s)   : Number of bytes written, if file write successful.
1053:rtos/uC-FS/FAT/fs_fat_file.c **** *               0,                       otherwise.
1054:rtos/uC-FS/FAT/fs_fat_file.c **** *
1055:rtos/uC-FS/FAT/fs_fat_file.c **** * Note(s)     : (1) The sector position is left at the position past the end of the sector when the
1056:rtos/uC-FS/FAT/fs_fat_file.c **** *                   next bytes written will be written to the next sector in the file.
1057:rtos/uC-FS/FAT/fs_fat_file.c **** *
1058:rtos/uC-FS/FAT/fs_fat_file.c **** *               (2) When an error code force the function to exit, FS_FAT_JournalExitFileWr() must 
1059:rtos/uC-FS/FAT/fs_fat_file.c **** *                   called. FS_FAT_JournalExitFileWr() can return an error code, however the first
1060:rtos/uC-FS/FAT/fs_fat_file.c **** *                   error code to happen has priority over the second.
1061:rtos/uC-FS/FAT/fs_fat_file.c **** *
1062:rtos/uC-FS/FAT/fs_fat_file.c **** *               (3) The number of bytes used by the file prior to the write operation is used to
1063:rtos/uC-FS/FAT/fs_fat_file.c **** *                   determine if the last sector of the write operation has to be read.
1064:rtos/uC-FS/FAT/fs_fat_file.c **** *
1065:rtos/uC-FS/FAT/fs_fat_file.c **** *               (4) The chain follow operation will overwrite the data stored in the buffer, so the
1066:rtos/uC-FS/FAT/fs_fat_file.c **** *                   buffer MUST be flushed before this operation is performed.
1067:rtos/uC-FS/FAT/fs_fat_file.c **** ***************************************************************************************************
1068:rtos/uC-FS/FAT/fs_fat_file.c **** */
1069:rtos/uC-FS/FAT/fs_fat_file.c **** 
1070:rtos/uC-FS/FAT/fs_fat_file.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1071:rtos/uC-FS/FAT/fs_fat_file.c **** CPU_SIZE_T  FS_FAT_FileWr (FS_FILE     *p_file,
1072:rtos/uC-FS/FAT/fs_fat_file.c ****                            void        *p_src,
1073:rtos/uC-FS/FAT/fs_fat_file.c ****                            CPU_SIZE_T   size,
ARM GAS  /tmp/ccKN2FgP.s 			page 58


1074:rtos/uC-FS/FAT/fs_fat_file.c ****                            FS_ERR      *p_err)
1075:rtos/uC-FS/FAT/fs_fat_file.c **** {
 1850              		.loc 1 1075 1 view -0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 40
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              		.loc 1 1075 1 is_stmt 0 view .LVU605
 1855 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1856              	.LCFI24:
 1857              		.cfi_def_cfa_offset 36
 1858              		.cfi_offset 4, -36
 1859              		.cfi_offset 5, -32
 1860              		.cfi_offset 6, -28
 1861              		.cfi_offset 7, -24
 1862              		.cfi_offset 8, -20
 1863              		.cfi_offset 9, -16
 1864              		.cfi_offset 10, -12
 1865              		.cfi_offset 11, -8
 1866              		.cfi_offset 14, -4
 1867 0004 8DB0     		sub	sp, sp, #52
 1868              	.LCFI25:
 1869              		.cfi_def_cfa_offset 88
 1870 0006 0490     		str	r0, [sp, #16]
 1871 0008 0591     		str	r1, [sp, #20]
 1872 000a 0792     		str	r2, [sp, #28]
 1873 000c 9846     		mov	r8, r3
1076:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_start;
 1874              		.loc 1 1076 5 is_stmt 1 view .LVU606
1077:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_cur;
 1875              		.loc 1 1077 5 view .LVU607
1078:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_prev;
 1876              		.loc 1 1078 5 view .LVU608
1079:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_next;
 1877              		.loc 1 1079 5 view .LVU609
1080:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_nbr;
 1878              		.loc 1 1080 5 view .LVU610
1081:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_CLUS_NBR    clus_cnt;
 1879              		.loc 1 1081 5 view .LVU611
1082:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     clus_cur_sec_rem;
 1880              		.loc 1 1082 5 view .LVU612
1083:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_SIZE   file_pos;
 1881              		.loc 1 1083 5 view .LVU613
1084:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_cnt_rem;
 1882              		.loc 1 1084 5 view .LVU614
1085:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_cnt_wr;
 1883              		.loc 1 1085 5 view .LVU615
1086:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_cur;
 1884              		.loc 1 1086 5 view .LVU616
1087:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_next;
 1885              		.loc 1 1087 5 view .LVU617
1088:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_SEC_NBR     sec_cur_pos;
 1886              		.loc 1 1088 5 view .LVU618
1089:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_SIZE   file_valid_size_rem;
 1887              		.loc 1 1089 5 view .LVU619
1090:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_SIZE_T         size_avail_in_file;
 1888              		.loc 1 1090 5 view .LVU620
1091:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_SIZE_T         size_alloc;
ARM GAS  /tmp/ccKN2FgP.s 			page 59


 1889              		.loc 1 1091 5 view .LVU621
1092:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_SIZE_T         size_rem;
 1890              		.loc 1 1092 5 view .LVU622
1093:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_SIZE_T         size_wr;
 1891              		.loc 1 1093 5 view .LVU623
1094:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_BUF            *p_buf;
 1892              		.loc 1 1094 5 view .LVU624
1095:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_INT08U        *p_src_08;
 1893              		.loc 1 1095 5 view .LVU625
1096:rtos/uC-FS/FAT/fs_fat_file.c ****     CPU_INT08U        *p_temp_08;
 1894              		.loc 1 1096 5 view .LVU626
1097:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_DATA       *p_fat_data;
 1895              		.loc 1 1097 5 view .LVU627
1098:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_FILE_DATA  *p_fat_file_data;
 1896              		.loc 1 1098 5 view .LVU628
1099:rtos/uC-FS/FAT/fs_fat_file.c **** 
1100:rtos/uC-FS/FAT/fs_fat_file.c **** 
1101:rtos/uC-FS/FAT/fs_fat_file.c **** 
1102:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------ PREPARE FOR W
1103:rtos/uC-FS/FAT/fs_fat_file.c ****     p_buf = FSBuf_Get(p_file->VolPtr);
 1897              		.loc 1 1103 5 view .LVU629
 1898              		.loc 1 1103 13 is_stmt 0 view .LVU630
 1899 000e C06B     		ldr	r0, [r0, #60]
 1900              	.LVL218:
 1901              		.loc 1 1103 13 view .LVU631
 1902 0010 FFF7FEFF 		bl	FSBuf_Get
 1903              	.LVL219:
1104:rtos/uC-FS/FAT/fs_fat_file.c ****     if (p_buf == (FS_BUF *)0) {
 1904              		.loc 1 1104 5 is_stmt 1 view .LVU632
 1905              		.loc 1 1104 8 is_stmt 0 view .LVU633
 1906 0014 38B3     		cbz	r0, .L170
 1907 0016 8346     		mov	fp, r0
1105:rtos/uC-FS/FAT/fs_fat_file.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
1106:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
1107:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1108:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data = (FS_FAT_FILE_DATA *)(p_file->DataPtr);
 1908              		.loc 1 1108 5 is_stmt 1 view .LVU634
 1909              		.loc 1 1108 21 is_stmt 0 view .LVU635
 1910 0018 049A     		ldr	r2, [sp, #16]
 1911 001a 136C     		ldr	r3, [r2, #64]
 1912 001c 0993     		str	r3, [sp, #36]
 1913              	.LVL220:
1109:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_data      = (FS_FAT_DATA      *)(p_file->VolPtr->DataPtr);
 1914              		.loc 1 1109 5 is_stmt 1 view .LVU636
 1915              		.loc 1 1109 50 is_stmt 0 view .LVU637
 1916 001e D06B     		ldr	r0, [r2, #60]
 1917              	.LVL221:
 1918              		.loc 1 1109 21 view .LVU638
 1919 0020 D0F834A0 		ldr	r10, [r0, #52]
 1920              	.LVL222:
1110:rtos/uC-FS/FAT/fs_fat_file.c ****     p_src_08        = (CPU_INT08U       *)(p_src);
 1921              		.loc 1 1110 5 is_stmt 1 view .LVU639
1111:rtos/uC-FS/FAT/fs_fat_file.c **** 
1112:rtos/uC-FS/FAT/fs_fat_file.c **** 
1113:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ----------------- ALLOC CLUS CHA
1114:rtos/uC-FS/FAT/fs_fat_file.c ****     sec_cur_pos = p_fat_file_data->FileCurSecPos;
 1922              		.loc 1 1114 5 view .LVU640
ARM GAS  /tmp/ccKN2FgP.s 			page 60


 1923              		.loc 1 1114 17 is_stmt 0 view .LVU641
 1924 0024 D96A     		ldr	r1, [r3, #44]
 1925 0026 0691     		str	r1, [sp, #24]
 1926              	.LVL223:
1115:rtos/uC-FS/FAT/fs_fat_file.c ****     sec_cur     = p_fat_file_data->FileCurSec;
 1927              		.loc 1 1115 5 is_stmt 1 view .LVU642
 1928              		.loc 1 1115 17 is_stmt 0 view .LVU643
 1929 0028 9F6A     		ldr	r7, [r3, #40]
 1930              	.LVL224:
1116:rtos/uC-FS/FAT/fs_fat_file.c **** 
1117:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Calc nbr of clus to alloc.      
1118:rtos/uC-FS/FAT/fs_fat_file.c ****     size_alloc  = size;
 1931              		.loc 1 1118 5 is_stmt 1 view .LVU644
1119:rtos/uC-FS/FAT/fs_fat_file.c **** 
1120:rtos/uC-FS/FAT/fs_fat_file.c ****     if (p_fat_file_data->FileFirstClus != 0u) {
 1932              		.loc 1 1120 5 view .LVU645
 1933              		.loc 1 1120 24 is_stmt 0 view .LVU646
 1934 002a 5E6A     		ldr	r6, [r3, #36]
 1935              		.loc 1 1120 8 view .LVU647
 1936 002c 06B3     		cbz	r6, .L125
1121:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur         = FS_FAT_SEC_TO_CLUS(p_fat_data, sec_cur);
 1937              		.loc 1 1121 9 is_stmt 1 view .LVU648
 1938              		.loc 1 1121 28 is_stmt 0 view .LVU649
 1939 002e DAF82C30 		ldr	r3, [r10, #44]
 1940              	.LVL225:
 1941              		.loc 1 1121 28 view .LVU650
 1942 0032 FB1A     		subs	r3, r7, r3
 1943 0034 9AF84060 		ldrb	r6, [r10, #64]	@ zero_extendqisi2
 1944 0038 23FA06F6 		lsr	r6, r3, r6
 1945              		.loc 1 1121 26 view .LVU651
 1946 003c 0236     		adds	r6, r6, #2
 1947              	.LVL226:
1122:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem = FS_FAT_CLUS_SEC_REM(p_fat_data, sec_cur);
 1948              		.loc 1 1122 9 is_stmt 1 view .LVU652
 1949              		.loc 1 1122 28 is_stmt 0 view .LVU653
 1950 003e DAF83C20 		ldr	r2, [r10, #60]
 1951              	.LVL227:
 1952              		.loc 1 1122 28 view .LVU654
 1953 0042 02F1FF39 		add	r9, r2, #-1
 1954 0046 03EA0903 		and	r3, r3, r9
 1955              		.loc 1 1122 26 view .LVU655
 1956 004a A2EB0309 		sub	r9, r2, r3
 1957              	.LVL228:
1123:rtos/uC-FS/FAT/fs_fat_file.c **** 
1124:rtos/uC-FS/FAT/fs_fat_file.c ****         size_avail_in_file  = p_fat_data->SecSize - sec_cur_pos;            /* Rem size from cur se
 1958              		.loc 1 1124 9 is_stmt 1 view .LVU656
 1959              		.loc 1 1124 41 is_stmt 0 view .LVU657
 1960 004e DAF83430 		ldr	r3, [r10, #52]
 1961              		.loc 1 1124 29 view .LVU658
 1962 0052 5C1A     		subs	r4, r3, r1
 1963              	.LVL229:
1125:rtos/uC-FS/FAT/fs_fat_file.c ****         size_avail_in_file += p_fat_data->SecSize * (clus_cur_sec_rem - 1u);/* Rem size from cur cl
 1964              		.loc 1 1125 9 is_stmt 1 view .LVU659
 1965              		.loc 1 1125 71 is_stmt 0 view .LVU660
 1966 0054 09F1FF32 		add	r2, r9, #-1
 1967              		.loc 1 1125 28 view .LVU661
 1968 0058 02FB0343 		mla	r3, r2, r3, r4
ARM GAS  /tmp/ccKN2FgP.s 			page 61


 1969              	.LVL230:
1126:rtos/uC-FS/FAT/fs_fat_file.c **** 
1127:rtos/uC-FS/FAT/fs_fat_file.c ****         if (size_avail_in_file >= size_alloc) {
 1970              		.loc 1 1127 9 is_stmt 1 view .LVU662
 1971              		.loc 1 1127 12 is_stmt 0 view .LVU663
 1972 005c 079A     		ldr	r2, [sp, #28]
 1973 005e 9A42     		cmp	r2, r3
 1974 0060 25D9     		bls	.L161
1128:rtos/uC-FS/FAT/fs_fat_file.c ****             size_alloc = 0u;
1129:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {
1130:rtos/uC-FS/FAT/fs_fat_file.c ****             size_alloc -= size_avail_in_file;
 1975              		.loc 1 1130 13 is_stmt 1 view .LVU664
 1976              		.loc 1 1130 24 is_stmt 0 view .LVU665
 1977 0062 D41A     		subs	r4, r2, r3
 1978              	.LVL231:
 1979              		.loc 1 1130 24 view .LVU666
 1980 0064 07E0     		b	.L126
 1981              	.LVL232:
 1982              	.L170:
1105:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 1983              		.loc 1 1105 8 is_stmt 1 view .LVU667
1105:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 1984              		.loc 1 1105 15 is_stmt 0 view .LVU668
 1985 0066 6423     		movs	r3, #100
 1986 0068 A8F80030 		strh	r3, [r8]	@ movhi
1106:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1987              		.loc 1 1106 9 is_stmt 1 view .LVU669
1106:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 1988              		.loc 1 1106 16 is_stmt 0 view .LVU670
 1989 006c 0025     		movs	r5, #0
 1990 006e 1FE1     		b	.L122
 1991              	.LVL233:
 1992              	.L125:
1131:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1132:rtos/uC-FS/FAT/fs_fat_file.c **** 
1133:rtos/uC-FS/FAT/fs_fat_file.c ****     } else {
1134:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur         = 0u;
 1993              		.loc 1 1134 9 is_stmt 1 view .LVU671
1135:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 1994              		.loc 1 1135 9 view .LVU672
 1995              		.loc 1 1135 26 is_stmt 0 view .LVU673
 1996 0070 DAF83C90 		ldr	r9, [r10, #60]
 1997              	.LVL234:
1118:rtos/uC-FS/FAT/fs_fat_file.c **** 
 1998              		.loc 1 1118 17 view .LVU674
 1999 0074 079C     		ldr	r4, [sp, #28]
 2000              	.LVL235:
 2001              	.L126:
1136:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1137:rtos/uC-FS/FAT/fs_fat_file.c **** 
1138:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Nbr of  full    clus.           
1139:rtos/uC-FS/FAT/fs_fat_file.c ****     clus_nbr  = FS_UTIL_DIV_PWR2(size_alloc, p_fat_data->ClusSizeLog2_octet);
 2002              		.loc 1 1139 5 is_stmt 1 view .LVU675
 2003              		.loc 1 1139 17 is_stmt 0 view .LVU676
 2004 0076 9AF84820 		ldrb	r2, [r10, #72]	@ zero_extendqisi2
 2005              		.loc 1 1139 15 view .LVU677
 2006 007a 24FA02F2 		lsr	r2, r4, r2
ARM GAS  /tmp/ccKN2FgP.s 			page 62


 2007              	.LVL236:
1140:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Add one partial clus if needed. 
1141:rtos/uC-FS/FAT/fs_fat_file.c ****     clus_nbr += ((size_alloc & (p_fat_data->ClusSize_octet - 1u)) != 0u) ? 1u : 0u;
 2008              		.loc 1 1141 5 is_stmt 1 view .LVU678
 2009              		.loc 1 1141 43 is_stmt 0 view .LVU679
 2010 007e DAF84430 		ldr	r3, [r10, #68]
 2011              		.loc 1 1141 60 view .LVU680
 2012 0082 013B     		subs	r3, r3, #1
 2013              		.loc 1 1141 79 view .LVU681
 2014 0084 2340     		ands	r3, r3, r4
 2015 0086 00D0     		beq	.L127
 2016              		.loc 1 1141 79 view .LVU682
 2017 0088 0123     		movs	r3, #1
 2018              	.L127:
 2019              		.loc 1 1141 14 discriminator 4 view .LVU683
 2020 008a 9C18     		adds	r4, r3, r2
 2021              	.LVL237:
1142:rtos/uC-FS/FAT/fs_fat_file.c **** 
1143:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Follow clus chain until end.    
1144:rtos/uC-FS/FAT/fs_fat_file.c ****     clus_prev = clus_cur;
 2022              		.loc 1 1144 5 is_stmt 1 discriminator 4 view .LVU684
1145:rtos/uC-FS/FAT/fs_fat_file.c ****     if (clus_prev != 0) {
 2023              		.loc 1 1145 5 discriminator 4 view .LVU685
 2024              		.loc 1 1145 8 is_stmt 0 discriminator 4 view .LVU686
 2025 008c F6B1     		cbz	r6, .L162
1146:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_next = FS_FAT_ClusChainEndFind(p_file->VolPtr,
 2026              		.loc 1 1146 9 is_stmt 1 view .LVU687
 2027              		.loc 1 1146 21 is_stmt 0 view .LVU688
 2028 008e CDF80080 		str	r8, [sp]
 2029              	.LVL238:
 2030              		.loc 1 1146 21 view .LVU689
 2031 0092 0BAB     		add	r3, sp, #44
 2032 0094 3246     		mov	r2, r6
 2033 0096 5946     		mov	r1, fp
 2034              	.LVL239:
 2035              		.loc 1 1146 21 view .LVU690
 2036 0098 FFF7FEFF 		bl	FS_FAT_ClusChainEndFind
 2037              	.LVL240:
 2038 009c 0546     		mov	r5, r0
 2039              	.LVL241:
1147:rtos/uC-FS/FAT/fs_fat_file.c ****                                             p_buf,
1148:rtos/uC-FS/FAT/fs_fat_file.c ****                                             clus_prev,
1149:rtos/uC-FS/FAT/fs_fat_file.c ****                                            &clus_cnt,
1150:rtos/uC-FS/FAT/fs_fat_file.c ****                                             p_err);
1151:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
 2040              		.loc 1 1151 9 is_stmt 1 view .LVU691
 2041              		.loc 1 1151 13 is_stmt 0 view .LVU692
 2042 009e B8F80030 		ldrh	r3, [r8]
 2043              		.loc 1 1151 12 view .LVU693
 2044 00a2 33B9     		cbnz	r3, .L171
1152:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err == FS_ERR_SYS_CLUS_INVALID) {
1153:rtos/uC-FS/FAT/fs_fat_file.c ****                 *p_err = FS_ERR_ENTRY_CORRUPT;
1154:rtos/uC-FS/FAT/fs_fat_file.c ****             }
1155:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
1156:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
1157:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1158:rtos/uC-FS/FAT/fs_fat_file.c **** 
ARM GAS  /tmp/ccKN2FgP.s 			page 63


1159:rtos/uC-FS/FAT/fs_fat_file.c ****         if (clus_nbr > clus_cnt) {
 2045              		.loc 1 1159 9 is_stmt 1 view .LVU694
 2046              		.loc 1 1159 22 is_stmt 0 view .LVU695
 2047 00a4 0B9B     		ldr	r3, [sp, #44]
 2048              		.loc 1 1159 12 view .LVU696
 2049 00a6 A342     		cmp	r3, r4
 2050 00a8 40D2     		bcs	.L163
1160:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_nbr -= clus_cnt;
 2051              		.loc 1 1160 13 is_stmt 1 view .LVU697
 2052              		.loc 1 1160 22 is_stmt 0 view .LVU698
 2053 00aa E41A     		subs	r4, r4, r3
 2054              	.LVL242:
1161:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_prev = clus_next;
 2055              		.loc 1 1161 13 is_stmt 1 view .LVU699
 2056              		.loc 1 1161 13 is_stmt 0 view .LVU700
 2057 00ac 0FE0     		b	.L128
 2058              	.LVL243:
 2059              	.L161:
1128:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {
 2060              		.loc 1 1128 24 view .LVU701
 2061 00ae 0024     		movs	r4, #0
 2062 00b0 E1E7     		b	.L126
 2063              	.LVL244:
 2064              	.L171:
1152:rtos/uC-FS/FAT/fs_fat_file.c ****                 *p_err = FS_ERR_ENTRY_CORRUPT;
 2065              		.loc 1 1152 13 is_stmt 1 view .LVU702
1152:rtos/uC-FS/FAT/fs_fat_file.c ****                 *p_err = FS_ERR_ENTRY_CORRUPT;
 2066              		.loc 1 1152 16 is_stmt 0 view .LVU703
 2067 00b2 B3F5A76F 		cmp	r3, #1336
 2068 00b6 04D0     		beq	.L172
 2069              	.L130:
1155:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
 2070              		.loc 1 1155 13 is_stmt 1 view .LVU704
 2071 00b8 5846     		mov	r0, fp
 2072              	.LVL245:
1155:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
 2073              		.loc 1 1155 13 is_stmt 0 view .LVU705
 2074 00ba FFF7FEFF 		bl	FSBuf_Free
 2075              	.LVL246:
1156:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2076              		.loc 1 1156 13 is_stmt 1 view .LVU706
1156:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2077              		.loc 1 1156 20 is_stmt 0 view .LVU707
 2078 00be 0025     		movs	r5, #0
 2079              	.LVL247:
1156:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2080              		.loc 1 1156 20 view .LVU708
 2081 00c0 F6E0     		b	.L122
 2082              	.LVL248:
 2083              	.L172:
1153:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2084              		.loc 1 1153 17 is_stmt 1 view .LVU709
1153:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2085              		.loc 1 1153 24 is_stmt 0 view .LVU710
 2086 00c2 40F2BF23 		movw	r3, #703
 2087 00c6 A8F80030 		strh	r3, [r8]	@ movhi
 2088 00ca F5E7     		b	.L130
ARM GAS  /tmp/ccKN2FgP.s 			page 64


 2089              	.LVL249:
 2090              	.L162:
1144:rtos/uC-FS/FAT/fs_fat_file.c ****     if (clus_prev != 0) {
 2091              		.loc 1 1144 15 view .LVU711
 2092 00cc 3546     		mov	r5, r6
 2093              	.LVL250:
 2094              	.L128:
1162:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {
1163:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_nbr = 0;
1164:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1165:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1166:rtos/uC-FS/FAT/fs_fat_file.c **** 
1167:rtos/uC-FS/FAT/fs_fat_file.c **** 
1168:rtos/uC-FS/FAT/fs_fat_file.c ****     clus_start = FS_FAT_ClusChainAlloc(p_file->VolPtr,          /* Alloc non-alloc'd part of chain.
 2095              		.loc 1 1168 5 is_stmt 1 view .LVU712
 2096              		.loc 1 1168 18 is_stmt 0 view .LVU713
 2097 00ce CDF80080 		str	r8, [sp]
 2098 00d2 2346     		mov	r3, r4
 2099 00d4 2A46     		mov	r2, r5
 2100 00d6 5946     		mov	r1, fp
 2101 00d8 0498     		ldr	r0, [sp, #16]
 2102 00da C06B     		ldr	r0, [r0, #60]
 2103 00dc FFF7FEFF 		bl	FS_FAT_ClusChainAlloc
 2104              	.LVL251:
 2105 00e0 0446     		mov	r4, r0
 2106              	.LVL252:
1169:rtos/uC-FS/FAT/fs_fat_file.c ****                                        p_buf,
1170:rtos/uC-FS/FAT/fs_fat_file.c ****                                        clus_prev,
1171:rtos/uC-FS/FAT/fs_fat_file.c ****                                        clus_nbr,
1172:rtos/uC-FS/FAT/fs_fat_file.c ****                                        p_err);
1173:rtos/uC-FS/FAT/fs_fat_file.c ****     if (*p_err == FS_ERR_NONE) {
 2107              		.loc 1 1173 5 is_stmt 1 view .LVU714
 2108              		.loc 1 1173 9 is_stmt 0 view .LVU715
 2109 00e2 B8F80030 		ldrh	r3, [r8]
 2110              		.loc 1 1173 8 view .LVU716
 2111 00e6 23B3     		cbz	r3, .L173
 2112              	.LVL253:
 2113              	.L131:
1174:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Flush(p_buf, p_err);                              /* Flush buf (see Note #4).        
1175:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1176:rtos/uC-FS/FAT/fs_fat_file.c ****     if (*p_err != FS_ERR_NONE) {
 2114              		.loc 1 1176 5 is_stmt 1 view .LVU717
 2115              		.loc 1 1176 9 is_stmt 0 view .LVU718
 2116 00e8 B8F80030 		ldrh	r3, [r8]
 2117              		.loc 1 1176 8 view .LVU719
 2118 00ec 33BB     		cbnz	r3, .L174
1177:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
1178:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
1179:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1180:rtos/uC-FS/FAT/fs_fat_file.c **** 
1181:rtos/uC-FS/FAT/fs_fat_file.c **** 
1182:rtos/uC-FS/FAT/fs_fat_file.c ****     if (clus_prev != clus_start) {                              /* If new chain ...                
 2119              		.loc 1 1182 5 is_stmt 1 view .LVU720
 2120              		.loc 1 1182 8 is_stmt 0 view .LVU721
 2121 00ee A542     		cmp	r5, r4
 2122 00f0 09D0     		beq	.L133
1183:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur   = clus_start;
ARM GAS  /tmp/ccKN2FgP.s 			page 65


 2123              		.loc 1 1183 9 is_stmt 1 view .LVU722
 2124              	.LVL254:
1184:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur    = FS_FAT_CLUS_TO_SEC(p_fat_data, clus_cur);
 2125              		.loc 1 1184 9 view .LVU723
 2126              		.loc 1 1184 22 is_stmt 0 view .LVU724
 2127 00f2 DAF82C70 		ldr	r7, [r10, #44]
 2128              	.LVL255:
 2129              		.loc 1 1184 22 view .LVU725
 2130 00f6 A31E     		subs	r3, r4, #2
 2131 00f8 9AF84020 		ldrb	r2, [r10, #64]	@ zero_extendqisi2
 2132 00fc 9340     		lsls	r3, r3, r2
 2133              		.loc 1 1184 20 view .LVU726
 2134 00fe 1F44     		add	r7, r7, r3
 2135              	.LVL256:
1185:rtos/uC-FS/FAT/fs_fat_file.c **** 
1186:rtos/uC-FS/FAT/fs_fat_file.c ****         p_fat_file_data->FileFirstClus = clus_start;            /* ... set first clus of file.     
 2136              		.loc 1 1186 9 is_stmt 1 view .LVU727
 2137              		.loc 1 1186 40 is_stmt 0 view .LVU728
 2138 0100 099B     		ldr	r3, [sp, #36]
 2139 0102 5C62     		str	r4, [r3, #36]
1183:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur    = FS_FAT_CLUS_TO_SEC(p_fat_data, clus_cur);
 2140              		.loc 1 1183 20 view .LVU729
 2141 0104 2646     		mov	r6, r4
 2142              	.LVL257:
 2143              	.L133:
1187:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1188:rtos/uC-FS/FAT/fs_fat_file.c **** 
1189:rtos/uC-FS/FAT/fs_fat_file.c **** 
1190:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* --------------------- WR DATA --
1191:rtos/uC-FS/FAT/fs_fat_file.c ****     size_rem = size;
 2144              		.loc 1 1191 5 is_stmt 1 view .LVU730
1192:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Set nb of bytes valid in file pr
1193:rtos/uC-FS/FAT/fs_fat_file.c ****     file_valid_size_rem = 0u;
 2145              		.loc 1 1193 5 view .LVU731
1194:rtos/uC-FS/FAT/fs_fat_file.c ****     if (p_fat_file_data->FilePos < p_fat_file_data->FileSize) {
 2146              		.loc 1 1194 5 view .LVU732
 2147              		.loc 1 1194 24 is_stmt 0 view .LVU733
 2148 0106 099A     		ldr	r2, [sp, #36]
 2149 0108 1368     		ldr	r3, [r2]
 2150              		.loc 1 1194 51 view .LVU734
 2151 010a 5268     		ldr	r2, [r2, #4]
 2152              		.loc 1 1194 8 view .LVU735
 2153 010c 9342     		cmp	r3, r2
 2154 010e 1AD2     		bcs	.L164
1195:rtos/uC-FS/FAT/fs_fat_file.c ****         file_valid_size_rem = p_fat_file_data->FileSize
 2155              		.loc 1 1195 9 is_stmt 1 view .LVU736
 2156              		.loc 1 1195 29 is_stmt 0 view .LVU737
 2157 0110 D31A     		subs	r3, r2, r3
 2158 0112 0893     		str	r3, [sp, #32]
 2159              	.LVL258:
 2160              	.L134:
1196:rtos/uC-FS/FAT/fs_fat_file.c ****                             - p_fat_file_data->FilePos;
1197:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1198:rtos/uC-FS/FAT/fs_fat_file.c **** 
1199:rtos/uC-FS/FAT/fs_fat_file.c **** 
1200:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------ SKIP FULL SEC
1201:rtos/uC-FS/FAT/fs_fat_file.c ****     if (sec_cur_pos == p_fat_data->SecSize) {                   /* Sec pos at end of sec (so move t
ARM GAS  /tmp/ccKN2FgP.s 			page 66


 2161              		.loc 1 1201 5 is_stmt 1 view .LVU738
 2162              		.loc 1 1201 34 is_stmt 0 view .LVU739
 2163 0114 DAF83430 		ldr	r3, [r10, #52]
 2164              		.loc 1 1201 8 view .LVU740
 2165 0118 069A     		ldr	r2, [sp, #24]
 2166 011a 9342     		cmp	r3, r2
 2167 011c 16D0     		beq	.L175
 2168              	.LVL259:
 2169              	.L135:
1202:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur_pos = 0u;
1203:rtos/uC-FS/FAT/fs_fat_file.c ****         if (clus_cur_sec_rem == 1u) {
1204:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur = FS_FAT_ClusChainFollow(p_file->VolPtr,
1205:rtos/uC-FS/FAT/fs_fat_file.c ****                                               p_buf,
1206:rtos/uC-FS/FAT/fs_fat_file.c ****                                               clus_cur,
1207:rtos/uC-FS/FAT/fs_fat_file.c ****                                               1u,
1208:rtos/uC-FS/FAT/fs_fat_file.c ****                                               DEF_NULL,
1209:rtos/uC-FS/FAT/fs_fat_file.c ****                                               p_err);
1210:rtos/uC-FS/FAT/fs_fat_file.c **** 
1211:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err != FS_ERR_NONE) {
1212:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
1213:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (0u);
1214:rtos/uC-FS/FAT/fs_fat_file.c ****             }
1215:rtos/uC-FS/FAT/fs_fat_file.c **** 
1216:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur          = FS_FAT_CLUS_TO_SEC(p_fat_data, clus_cur);
1217:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur_sec_rem = p_fat_data->ClusSize_sec;
1218:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {
1219:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur++;
1220:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur_sec_rem--;
1221:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1222:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1223:rtos/uC-FS/FAT/fs_fat_file.c **** 
1224:rtos/uC-FS/FAT/fs_fat_file.c **** 
1225:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------ PARTIAL SEC W
1226:rtos/uC-FS/FAT/fs_fat_file.c ****     if (sec_cur_pos != 0u) {
 2170              		.loc 1 1226 5 is_stmt 1 view .LVU741
 2171              		.loc 1 1226 8 is_stmt 0 view .LVU742
 2172 011e 069B     		ldr	r3, [sp, #24]
 2173 0120 002B     		cmp	r3, #0
 2174 0122 3CD1     		bne	.L176
1191:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* Set nb of bytes valid in file pr
 2175              		.loc 1 1191 14 view .LVU743
 2176 0124 079B     		ldr	r3, [sp, #28]
 2177 0126 0393     		str	r3, [sp, #12]
 2178              	.LVL260:
 2179              	.L138:
1227:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Flush(p_buf, p_err);
1228:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
1229:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
1230:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
1231:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1232:rtos/uC-FS/FAT/fs_fat_file.c **** 
1233:rtos/uC-FS/FAT/fs_fat_file.c ****         FSVol_RdLockedEx(p_file->VolPtr,                        /* Rd full sec.                    
1234:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_buf->DataPtr,
1235:rtos/uC-FS/FAT/fs_fat_file.c ****                          sec_cur,
1236:rtos/uC-FS/FAT/fs_fat_file.c ****                          1u,
1237:rtos/uC-FS/FAT/fs_fat_file.c ****                          FS_VOL_SEC_TYPE_FILE,
1238:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_err);
ARM GAS  /tmp/ccKN2FgP.s 			page 67


1239:rtos/uC-FS/FAT/fs_fat_file.c **** 
1240:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
1241:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
1242:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
1243:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1244:rtos/uC-FS/FAT/fs_fat_file.c **** 
1245:rtos/uC-FS/FAT/fs_fat_file.c ****         size_wr = DEF_MIN(size_rem, p_fat_data->SecSize - sec_cur_pos);
1246:rtos/uC-FS/FAT/fs_fat_file.c **** 
1247:rtos/uC-FS/FAT/fs_fat_file.c ****         p_temp_08 = (CPU_INT08U *)p_buf->DataPtr + sec_cur_pos;
1248:rtos/uC-FS/FAT/fs_fat_file.c ****         Mem_Copy((void       *)p_temp_08,                       /* Copy data into buf.             
1249:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void       *)p_src_08,
1250:rtos/uC-FS/FAT/fs_fat_file.c ****                  (CPU_SIZE_T  )size_wr);
1251:rtos/uC-FS/FAT/fs_fat_file.c **** 
1252:rtos/uC-FS/FAT/fs_fat_file.c ****         FSVol_WrLockedEx(p_file->VolPtr,                        /* Wr full sec.                    
1253:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_buf->DataPtr,
1254:rtos/uC-FS/FAT/fs_fat_file.c ****                          sec_cur,
1255:rtos/uC-FS/FAT/fs_fat_file.c ****                          1u,
1256:rtos/uC-FS/FAT/fs_fat_file.c ****                          FS_VOL_SEC_TYPE_FILE,
1257:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_err);
1258:rtos/uC-FS/FAT/fs_fat_file.c **** 
1259:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
1260:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
1261:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
1262:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1263:rtos/uC-FS/FAT/fs_fat_file.c **** 
1264:rtos/uC-FS/FAT/fs_fat_file.c ****         size_rem    -= size_wr;
1265:rtos/uC-FS/FAT/fs_fat_file.c ****         p_src_08    += size_wr;
1266:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur_pos += size_wr;
1267:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem--;
1268:rtos/uC-FS/FAT/fs_fat_file.c ****         if(size_wr > file_valid_size_rem) {
1269:rtos/uC-FS/FAT/fs_fat_file.c ****             file_valid_size_rem  = 0u;
1270:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {
1271:rtos/uC-FS/FAT/fs_fat_file.c ****             file_valid_size_rem -= size_wr;
1272:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1273:rtos/uC-FS/FAT/fs_fat_file.c **** 
1274:rtos/uC-FS/FAT/fs_fat_file.c ****         if (size_rem > 0u) {                                    /* If more wr octets, get next sec 
1275:rtos/uC-FS/FAT/fs_fat_file.c ****             if (clus_cur_sec_rem == 0u) {
1276:rtos/uC-FS/FAT/fs_fat_file.c ****                 clus_cur = FS_FAT_ClusChainFollow(p_file->VolPtr,
1277:rtos/uC-FS/FAT/fs_fat_file.c ****                                                   p_buf,
1278:rtos/uC-FS/FAT/fs_fat_file.c ****                                                   clus_cur,
1279:rtos/uC-FS/FAT/fs_fat_file.c ****                                                   1u,
1280:rtos/uC-FS/FAT/fs_fat_file.c ****                                                   0,
1281:rtos/uC-FS/FAT/fs_fat_file.c ****                                                   p_err);
1282:rtos/uC-FS/FAT/fs_fat_file.c ****                 if (*p_err != FS_ERR_NONE) {
1283:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
1284:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (0u);
1285:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
1286:rtos/uC-FS/FAT/fs_fat_file.c **** 
1287:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur          = FS_FAT_CLUS_TO_SEC(p_fat_data, clus_cur);
1288:rtos/uC-FS/FAT/fs_fat_file.c ****                 clus_cur_sec_rem = p_fat_data->ClusSize_sec;
1289:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos      = 0u;
1290:rtos/uC-FS/FAT/fs_fat_file.c ****             } else {
1291:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur++;
1292:rtos/uC-FS/FAT/fs_fat_file.c ****             }
1293:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1294:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1295:rtos/uC-FS/FAT/fs_fat_file.c **** 
ARM GAS  /tmp/ccKN2FgP.s 			page 68


1296:rtos/uC-FS/FAT/fs_fat_file.c **** 
1297:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ------------------- FULL SEC WRs
1298:rtos/uC-FS/FAT/fs_fat_file.c ****     sec_next = 0u;
 2180              		.loc 1 1298 5 is_stmt 1 view .LVU744
1299:rtos/uC-FS/FAT/fs_fat_file.c ****     while (size_rem > 0u) {
 2181              		.loc 1 1299 5 view .LVU745
1298:rtos/uC-FS/FAT/fs_fat_file.c ****     while (size_rem > 0u) {
 2182              		.loc 1 1298 14 is_stmt 0 view .LVU746
 2183 0128 0026     		movs	r6, #0
 2184              		.loc 1 1299 11 view .LVU747
 2185 012a 44E1     		b	.L145
 2186              	.LVL261:
 2187              	.L163:
1144:rtos/uC-FS/FAT/fs_fat_file.c ****     if (clus_prev != 0) {
 2188              		.loc 1 1144 15 view .LVU748
 2189 012c 3546     		mov	r5, r6
1163:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2190              		.loc 1 1163 22 view .LVU749
 2191 012e 0024     		movs	r4, #0
 2192              	.LVL262:
1163:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2193              		.loc 1 1163 22 view .LVU750
 2194 0130 CDE7     		b	.L128
 2195              	.LVL263:
 2196              	.L173:
1174:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 2197              		.loc 1 1174 9 is_stmt 1 view .LVU751
 2198 0132 4146     		mov	r1, r8
 2199 0134 5846     		mov	r0, fp
 2200              	.LVL264:
1174:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 2201              		.loc 1 1174 9 is_stmt 0 view .LVU752
 2202 0136 FFF7FEFF 		bl	FSBuf_Flush
 2203              	.LVL265:
 2204 013a D5E7     		b	.L131
 2205              	.L174:
1177:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
 2206              		.loc 1 1177 9 is_stmt 1 view .LVU753
 2207 013c 5846     		mov	r0, fp
 2208 013e FFF7FEFF 		bl	FSBuf_Free
 2209              	.LVL266:
1178:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 2210              		.loc 1 1178 9 view .LVU754
1178:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 2211              		.loc 1 1178 16 is_stmt 0 view .LVU755
 2212 0142 0025     		movs	r5, #0
 2213              	.LVL267:
1178:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 2214              		.loc 1 1178 16 view .LVU756
 2215 0144 B4E0     		b	.L122
 2216              	.LVL268:
 2217              	.L164:
1193:rtos/uC-FS/FAT/fs_fat_file.c ****     if (p_fat_file_data->FilePos < p_fat_file_data->FileSize) {
 2218              		.loc 1 1193 25 view .LVU757
 2219 0146 0023     		movs	r3, #0
 2220 0148 0893     		str	r3, [sp, #32]
 2221 014a E3E7     		b	.L134
ARM GAS  /tmp/ccKN2FgP.s 			page 69


 2222              	.LVL269:
 2223              	.L175:
1202:rtos/uC-FS/FAT/fs_fat_file.c ****         if (clus_cur_sec_rem == 1u) {
 2224              		.loc 1 1202 9 is_stmt 1 view .LVU758
1203:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur = FS_FAT_ClusChainFollow(p_file->VolPtr,
 2225              		.loc 1 1203 9 view .LVU759
1203:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur = FS_FAT_ClusChainFollow(p_file->VolPtr,
 2226              		.loc 1 1203 12 is_stmt 0 view .LVU760
 2227 014c B9F1010F 		cmp	r9, #1
 2228 0150 05D0     		beq	.L177
1219:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur_sec_rem--;
 2229              		.loc 1 1219 13 is_stmt 1 view .LVU761
1219:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur_sec_rem--;
 2230              		.loc 1 1219 20 is_stmt 0 view .LVU762
 2231 0152 0137     		adds	r7, r7, #1
 2232              	.LVL270:
1220:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2233              		.loc 1 1220 13 is_stmt 1 view .LVU763
1220:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2234              		.loc 1 1220 29 is_stmt 0 view .LVU764
 2235 0154 09F1FF39 		add	r9, r9, #-1
 2236              	.LVL271:
1202:rtos/uC-FS/FAT/fs_fat_file.c ****         if (clus_cur_sec_rem == 1u) {
 2237              		.loc 1 1202 21 view .LVU765
 2238 0158 0023     		movs	r3, #0
 2239 015a 0693     		str	r3, [sp, #24]
 2240 015c DFE7     		b	.L135
 2241              	.L177:
1204:rtos/uC-FS/FAT/fs_fat_file.c ****                                               p_buf,
 2242              		.loc 1 1204 13 is_stmt 1 view .LVU766
1204:rtos/uC-FS/FAT/fs_fat_file.c ****                                               p_buf,
 2243              		.loc 1 1204 24 is_stmt 0 view .LVU767
 2244 015e CDF80480 		str	r8, [sp, #4]
 2245 0162 0023     		movs	r3, #0
 2246 0164 0093     		str	r3, [sp]
 2247 0166 0123     		movs	r3, #1
 2248 0168 3246     		mov	r2, r6
 2249 016a 5946     		mov	r1, fp
 2250 016c 0498     		ldr	r0, [sp, #16]
 2251 016e C06B     		ldr	r0, [r0, #60]
 2252 0170 FFF7FEFF 		bl	FS_FAT_ClusChainFollow
 2253              	.LVL272:
 2254 0174 0646     		mov	r6, r0
 2255              	.LVL273:
1211:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2256              		.loc 1 1211 13 is_stmt 1 view .LVU768
1211:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2257              		.loc 1 1211 17 is_stmt 0 view .LVU769
 2258 0176 B8F80030 		ldrh	r3, [r8]
1211:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2259              		.loc 1 1211 16 view .LVU770
 2260 017a 5BB9     		cbnz	r3, .L178
1216:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 2261              		.loc 1 1216 13 is_stmt 1 view .LVU771
1216:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 2262              		.loc 1 1216 32 is_stmt 0 view .LVU772
 2263 017c DAF82C70 		ldr	r7, [r10, #44]
ARM GAS  /tmp/ccKN2FgP.s 			page 70


 2264              	.LVL274:
1216:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 2265              		.loc 1 1216 32 view .LVU773
 2266 0180 831E     		subs	r3, r0, #2
 2267 0182 9AF84020 		ldrb	r2, [r10, #64]	@ zero_extendqisi2
 2268 0186 9340     		lsls	r3, r3, r2
1216:rtos/uC-FS/FAT/fs_fat_file.c ****             clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 2269              		.loc 1 1216 30 view .LVU774
 2270 0188 1F44     		add	r7, r7, r3
 2271              	.LVL275:
1217:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {
 2272              		.loc 1 1217 13 is_stmt 1 view .LVU775
1217:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {
 2273              		.loc 1 1217 30 is_stmt 0 view .LVU776
 2274 018a DAF83C90 		ldr	r9, [r10, #60]
 2275              	.LVL276:
1202:rtos/uC-FS/FAT/fs_fat_file.c ****         if (clus_cur_sec_rem == 1u) {
 2276              		.loc 1 1202 21 view .LVU777
 2277 018e 0023     		movs	r3, #0
 2278 0190 0693     		str	r3, [sp, #24]
 2279 0192 C4E7     		b	.L135
 2280              	.L178:
1212:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (0u);
 2281              		.loc 1 1212 17 is_stmt 1 view .LVU778
 2282 0194 5846     		mov	r0, fp
 2283              	.LVL277:
1212:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (0u);
 2284              		.loc 1 1212 17 is_stmt 0 view .LVU779
 2285 0196 FFF7FEFF 		bl	FSBuf_Free
 2286              	.LVL278:
1213:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2287              		.loc 1 1213 17 is_stmt 1 view .LVU780
1213:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2288              		.loc 1 1213 24 is_stmt 0 view .LVU781
 2289 019a 0025     		movs	r5, #0
 2290              	.LVL279:
1213:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2291              		.loc 1 1213 24 view .LVU782
 2292 019c 88E0     		b	.L122
 2293              	.LVL280:
 2294              	.L176:
1227:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
 2295              		.loc 1 1227 9 is_stmt 1 view .LVU783
 2296 019e 4146     		mov	r1, r8
 2297 01a0 5846     		mov	r0, fp
 2298 01a2 FFF7FEFF 		bl	FSBuf_Flush
 2299              	.LVL281:
1228:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2300              		.loc 1 1228 9 view .LVU784
1228:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2301              		.loc 1 1228 13 is_stmt 0 view .LVU785
 2302 01a6 B8F80030 		ldrh	r3, [r8]
1228:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2303              		.loc 1 1228 12 view .LVU786
 2304 01aa 002B     		cmp	r3, #0
 2305 01ac 46D1     		bne	.L179
1233:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_buf->DataPtr,
ARM GAS  /tmp/ccKN2FgP.s 			page 71


 2306              		.loc 1 1233 9 is_stmt 1 view .LVU787
 2307 01ae DBF81010 		ldr	r1, [fp, #16]
 2308 01b2 CDF80480 		str	r8, [sp, #4]
 2309 01b6 0423     		movs	r3, #4
 2310 01b8 0093     		str	r3, [sp]
 2311 01ba 0123     		movs	r3, #1
 2312 01bc 3A46     		mov	r2, r7
 2313 01be 0498     		ldr	r0, [sp, #16]
 2314 01c0 C06B     		ldr	r0, [r0, #60]
 2315 01c2 FFF7FEFF 		bl	FSVol_RdLockedEx
 2316              	.LVL282:
1240:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2317              		.loc 1 1240 9 view .LVU788
1240:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2318              		.loc 1 1240 13 is_stmt 0 view .LVU789
 2319 01c6 B8F80030 		ldrh	r3, [r8]
1240:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2320              		.loc 1 1240 12 view .LVU790
 2321 01ca 002B     		cmp	r3, #0
 2322 01cc 3BD1     		bne	.L180
1245:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2323              		.loc 1 1245 9 is_stmt 1 view .LVU791
1245:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2324              		.loc 1 1245 19 is_stmt 0 view .LVU792
 2325 01ce DAF83430 		ldr	r3, [r10, #52]
 2326 01d2 069D     		ldr	r5, [sp, #24]
 2327              	.LVL283:
1245:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2328              		.loc 1 1245 19 view .LVU793
 2329 01d4 5C1B     		subs	r4, r3, r5
 2330              	.LVL284:
1245:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2331              		.loc 1 1245 17 view .LVU794
 2332 01d6 079B     		ldr	r3, [sp, #28]
 2333 01d8 9C42     		cmp	r4, r3
 2334 01da 28BF     		it	cs
 2335 01dc 1C46     		movcs	r4, r3
 2336              	.LVL285:
1247:rtos/uC-FS/FAT/fs_fat_file.c ****         Mem_Copy((void       *)p_temp_08,                       /* Copy data into buf.             
 2337              		.loc 1 1247 9 is_stmt 1 view .LVU795
1247:rtos/uC-FS/FAT/fs_fat_file.c ****         Mem_Copy((void       *)p_temp_08,                       /* Copy data into buf.             
 2338              		.loc 1 1247 40 is_stmt 0 view .LVU796
 2339 01de DBF81000 		ldr	r0, [fp, #16]
 2340              	.LVL286:
1248:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void       *)p_src_08,
 2341              		.loc 1 1248 9 is_stmt 1 view .LVU797
 2342 01e2 2246     		mov	r2, r4
 2343 01e4 0599     		ldr	r1, [sp, #20]
 2344 01e6 2844     		add	r0, r0, r5
 2345              	.LVL287:
1248:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void       *)p_src_08,
 2346              		.loc 1 1248 9 is_stmt 0 view .LVU798
 2347 01e8 FFF7FEFF 		bl	Mem_Copy
 2348              	.LVL288:
1252:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_buf->DataPtr,
 2349              		.loc 1 1252 9 is_stmt 1 view .LVU799
 2350 01ec DBF81010 		ldr	r1, [fp, #16]
ARM GAS  /tmp/ccKN2FgP.s 			page 72


 2351 01f0 CDF80480 		str	r8, [sp, #4]
 2352 01f4 0423     		movs	r3, #4
 2353 01f6 0093     		str	r3, [sp]
 2354 01f8 0123     		movs	r3, #1
 2355 01fa 3A46     		mov	r2, r7
 2356 01fc 0498     		ldr	r0, [sp, #16]
 2357 01fe C06B     		ldr	r0, [r0, #60]
 2358 0200 FFF7FEFF 		bl	FSVol_WrLockedEx
 2359              	.LVL289:
1259:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2360              		.loc 1 1259 9 view .LVU800
1259:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2361              		.loc 1 1259 13 is_stmt 0 view .LVU801
 2362 0204 B8F80030 		ldrh	r3, [r8]
1259:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2363              		.loc 1 1259 12 view .LVU802
 2364 0208 13BB     		cbnz	r3, .L181
1264:rtos/uC-FS/FAT/fs_fat_file.c ****         p_src_08    += size_wr;
 2365              		.loc 1 1264 9 is_stmt 1 view .LVU803
1264:rtos/uC-FS/FAT/fs_fat_file.c ****         p_src_08    += size_wr;
 2366              		.loc 1 1264 21 is_stmt 0 view .LVU804
 2367 020a 079B     		ldr	r3, [sp, #28]
 2368 020c 1B1B     		subs	r3, r3, r4
 2369 020e 0393     		str	r3, [sp, #12]
 2370              	.LVL290:
1265:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur_pos += size_wr;
 2371              		.loc 1 1265 9 is_stmt 1 view .LVU805
1265:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur_pos += size_wr;
 2372              		.loc 1 1265 21 is_stmt 0 view .LVU806
 2373 0210 059B     		ldr	r3, [sp, #20]
 2374              	.LVL291:
1265:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cur_pos += size_wr;
 2375              		.loc 1 1265 21 view .LVU807
 2376 0212 2344     		add	r3, r3, r4
 2377 0214 0593     		str	r3, [sp, #20]
 2378              	.LVL292:
1266:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem--;
 2379              		.loc 1 1266 9 is_stmt 1 view .LVU808
1266:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem--;
 2380              		.loc 1 1266 21 is_stmt 0 view .LVU809
 2381 0216 069B     		ldr	r3, [sp, #24]
 2382              	.LVL293:
1266:rtos/uC-FS/FAT/fs_fat_file.c ****         clus_cur_sec_rem--;
 2383              		.loc 1 1266 21 view .LVU810
 2384 0218 2344     		add	r3, r3, r4
 2385 021a 0693     		str	r3, [sp, #24]
 2386              	.LVL294:
1267:rtos/uC-FS/FAT/fs_fat_file.c ****         if(size_wr > file_valid_size_rem) {
 2387              		.loc 1 1267 9 is_stmt 1 view .LVU811
1267:rtos/uC-FS/FAT/fs_fat_file.c ****         if(size_wr > file_valid_size_rem) {
 2388              		.loc 1 1267 25 is_stmt 0 view .LVU812
 2389 021c 09F1FF39 		add	r9, r9, #-1
 2390              	.LVL295:
1268:rtos/uC-FS/FAT/fs_fat_file.c ****             file_valid_size_rem  = 0u;
 2391              		.loc 1 1268 9 is_stmt 1 view .LVU813
1268:rtos/uC-FS/FAT/fs_fat_file.c ****             file_valid_size_rem  = 0u;
 2392              		.loc 1 1268 11 is_stmt 0 view .LVU814
ARM GAS  /tmp/ccKN2FgP.s 			page 73


 2393 0220 089B     		ldr	r3, [sp, #32]
 2394              	.LVL296:
1268:rtos/uC-FS/FAT/fs_fat_file.c ****             file_valid_size_rem  = 0u;
 2395              		.loc 1 1268 11 view .LVU815
 2396 0222 A342     		cmp	r3, r4
 2397 0224 19D3     		bcc	.L166
1271:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2398              		.loc 1 1271 13 is_stmt 1 view .LVU816
1271:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2399              		.loc 1 1271 33 is_stmt 0 view .LVU817
 2400 0226 1B1B     		subs	r3, r3, r4
 2401 0228 0893     		str	r3, [sp, #32]
 2402              	.LVL297:
 2403              	.L142:
1274:rtos/uC-FS/FAT/fs_fat_file.c ****             if (clus_cur_sec_rem == 0u) {
 2404              		.loc 1 1274 9 is_stmt 1 view .LVU818
1274:rtos/uC-FS/FAT/fs_fat_file.c ****             if (clus_cur_sec_rem == 0u) {
 2405              		.loc 1 1274 12 is_stmt 0 view .LVU819
 2406 022a 039B     		ldr	r3, [sp, #12]
 2407 022c 002B     		cmp	r3, #0
 2408 022e 3FF47BAF 		beq	.L138
1275:rtos/uC-FS/FAT/fs_fat_file.c ****                 clus_cur = FS_FAT_ClusChainFollow(p_file->VolPtr,
 2409              		.loc 1 1275 13 is_stmt 1 view .LVU820
1275:rtos/uC-FS/FAT/fs_fat_file.c ****                 clus_cur = FS_FAT_ClusChainFollow(p_file->VolPtr,
 2410              		.loc 1 1275 16 is_stmt 0 view .LVU821
 2411 0232 B9F1000F 		cmp	r9, #0
 2412 0236 13D0     		beq	.L182
1291:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2413              		.loc 1 1291 17 is_stmt 1 view .LVU822
1291:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2414              		.loc 1 1291 24 is_stmt 0 view .LVU823
 2415 0238 0137     		adds	r7, r7, #1
 2416              	.LVL298:
1291:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2417              		.loc 1 1291 24 view .LVU824
 2418 023a 75E7     		b	.L138
 2419              	.LVL299:
 2420              	.L179:
1229:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
 2421              		.loc 1 1229 13 is_stmt 1 view .LVU825
 2422 023c 5846     		mov	r0, fp
 2423 023e FFF7FEFF 		bl	FSBuf_Free
 2424              	.LVL300:
1230:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2425              		.loc 1 1230 13 view .LVU826
1230:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2426              		.loc 1 1230 20 is_stmt 0 view .LVU827
 2427 0242 0025     		movs	r5, #0
 2428              	.LVL301:
1230:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2429              		.loc 1 1230 20 view .LVU828
 2430 0244 34E0     		b	.L122
 2431              	.LVL302:
 2432              	.L180:
1241:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
 2433              		.loc 1 1241 13 is_stmt 1 view .LVU829
 2434 0246 5846     		mov	r0, fp
ARM GAS  /tmp/ccKN2FgP.s 			page 74


 2435 0248 FFF7FEFF 		bl	FSBuf_Free
 2436              	.LVL303:
1242:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2437              		.loc 1 1242 13 view .LVU830
1242:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2438              		.loc 1 1242 20 is_stmt 0 view .LVU831
 2439 024c 0025     		movs	r5, #0
 2440              	.LVL304:
1242:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2441              		.loc 1 1242 20 view .LVU832
 2442 024e 2FE0     		b	.L122
 2443              	.LVL305:
 2444              	.L181:
1260:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
 2445              		.loc 1 1260 13 is_stmt 1 view .LVU833
 2446 0250 5846     		mov	r0, fp
 2447 0252 FFF7FEFF 		bl	FSBuf_Free
 2448              	.LVL306:
1261:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2449              		.loc 1 1261 13 view .LVU834
1261:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2450              		.loc 1 1261 20 is_stmt 0 view .LVU835
 2451 0256 0025     		movs	r5, #0
 2452 0258 2AE0     		b	.L122
 2453              	.LVL307:
 2454              	.L166:
1269:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {
 2455              		.loc 1 1269 34 view .LVU836
 2456 025a 0023     		movs	r3, #0
 2457 025c 0893     		str	r3, [sp, #32]
 2458              	.LVL308:
1269:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {
 2459              		.loc 1 1269 34 view .LVU837
 2460 025e E4E7     		b	.L142
 2461              	.LVL309:
 2462              	.L182:
1276:rtos/uC-FS/FAT/fs_fat_file.c ****                                                   p_buf,
 2463              		.loc 1 1276 17 is_stmt 1 view .LVU838
1276:rtos/uC-FS/FAT/fs_fat_file.c ****                                                   p_buf,
 2464              		.loc 1 1276 28 is_stmt 0 view .LVU839
 2465 0260 CDF80480 		str	r8, [sp, #4]
 2466 0264 0023     		movs	r3, #0
 2467 0266 0093     		str	r3, [sp]
 2468 0268 0123     		movs	r3, #1
 2469 026a 3246     		mov	r2, r6
 2470 026c 5946     		mov	r1, fp
 2471 026e 0498     		ldr	r0, [sp, #16]
 2472 0270 C06B     		ldr	r0, [r0, #60]
 2473 0272 FFF7FEFF 		bl	FS_FAT_ClusChainFollow
 2474              	.LVL310:
1282:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 2475              		.loc 1 1282 17 is_stmt 1 view .LVU840
1282:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 2476              		.loc 1 1282 21 is_stmt 0 view .LVU841
 2477 0276 B8F80020 		ldrh	r2, [r8]
1282:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 2478              		.loc 1 1282 20 view .LVU842
ARM GAS  /tmp/ccKN2FgP.s 			page 75


 2479 027a 5AB9     		cbnz	r2, .L183
1287:rtos/uC-FS/FAT/fs_fat_file.c ****                 clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 2480              		.loc 1 1287 17 is_stmt 1 view .LVU843
1287:rtos/uC-FS/FAT/fs_fat_file.c ****                 clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 2481              		.loc 1 1287 36 is_stmt 0 view .LVU844
 2482 027c DAF82C70 		ldr	r7, [r10, #44]
 2483              	.LVL311:
1287:rtos/uC-FS/FAT/fs_fat_file.c ****                 clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 2484              		.loc 1 1287 36 view .LVU845
 2485 0280 831E     		subs	r3, r0, #2
 2486 0282 9AF84020 		ldrb	r2, [r10, #64]	@ zero_extendqisi2
 2487 0286 9340     		lsls	r3, r3, r2
1287:rtos/uC-FS/FAT/fs_fat_file.c ****                 clus_cur_sec_rem = p_fat_data->ClusSize_sec;
 2488              		.loc 1 1287 34 view .LVU846
 2489 0288 1F44     		add	r7, r7, r3
 2490              	.LVL312:
1288:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos      = 0u;
 2491              		.loc 1 1288 17 is_stmt 1 view .LVU847
1289:rtos/uC-FS/FAT/fs_fat_file.c ****             } else {
 2492              		.loc 1 1289 17 view .LVU848
1289:rtos/uC-FS/FAT/fs_fat_file.c ****             } else {
 2493              		.loc 1 1289 34 is_stmt 0 view .LVU849
 2494 028a CDF81890 		str	r9, [sp, #24]
1288:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos      = 0u;
 2495              		.loc 1 1288 34 view .LVU850
 2496 028e DAF83C90 		ldr	r9, [r10, #60]
 2497 0292 49E7     		b	.L138
 2498              	.LVL313:
 2499              	.L183:
1283:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (0u);
 2500              		.loc 1 1283 21 is_stmt 1 view .LVU851
 2501 0294 5846     		mov	r0, fp
 2502              	.LVL314:
1283:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (0u);
 2503              		.loc 1 1283 21 is_stmt 0 view .LVU852
 2504 0296 FFF7FEFF 		bl	FSBuf_Free
 2505              	.LVL315:
1284:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2506              		.loc 1 1284 21 is_stmt 1 view .LVU853
1284:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2507              		.loc 1 1284 28 is_stmt 0 view .LVU854
 2508 029a 4D46     		mov	r5, r9
 2509 029c 08E0     		b	.L122
 2510              	.LVL316:
 2511              	.L191:
1300:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cnt_rem = FS_UTIL_DIV_PWR2(size_rem, p_fat_data->SecSizeLog2);
1301:rtos/uC-FS/FAT/fs_fat_file.c **** 
1302:rtos/uC-FS/FAT/fs_fat_file.c ****         if (sec_cnt_rem > 0u) {
1303:rtos/uC-FS/FAT/fs_fat_file.c **** 
1304:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cnt_wr = 0;
 2512              		.loc 1 1304 24 view .LVU855
 2513 029e 0024     		movs	r4, #0
 2514 02a0 4A46     		mov	r2, r9
 2515 02a2 3046     		mov	r0, r6
 2516 02a4 049E     		ldr	r6, [sp, #16]
 2517              	.LVL317:
 2518              		.loc 1 1304 24 view .LVU856
ARM GAS  /tmp/ccKN2FgP.s 			page 76


 2519 02a6 0CE0     		b	.L150
 2520              	.LVL318:
 2521              	.L184:
1305:rtos/uC-FS/FAT/fs_fat_file.c ****             do {                                                /* Cnt the max nbr of continuous se
1306:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cnt_wr += DEF_MIN(sec_cnt_rem - sec_cnt_wr, clus_cur_sec_rem);
1307:rtos/uC-FS/FAT/fs_fat_file.c **** 
1308:rtos/uC-FS/FAT/fs_fat_file.c ****                 if((sec_cnt_rem - sec_cnt_wr) > 0u) {
1309:rtos/uC-FS/FAT/fs_fat_file.c ****                     sec_next = FS_FAT_SecNextGet(p_file->VolPtr,
1310:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_buf,
1311:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  sec_cur + sec_cnt_wr - 1,
1312:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_err);
1313:rtos/uC-FS/FAT/fs_fat_file.c ****                     if (*p_err != FS_ERR_NONE) {
1314:rtos/uC-FS/FAT/fs_fat_file.c ****                         FSBuf_Free(p_buf);
 2522              		.loc 1 1314 25 is_stmt 1 view .LVU857
 2523 02a8 5846     		mov	r0, fp
 2524              	.LVL319:
 2525              		.loc 1 1314 25 is_stmt 0 view .LVU858
 2526 02aa FFF7FEFF 		bl	FSBuf_Free
 2527              	.LVL320:
1315:rtos/uC-FS/FAT/fs_fat_file.c ****                         return (0u);
 2528              		.loc 1 1315 25 is_stmt 1 view .LVU859
 2529              		.loc 1 1315 32 is_stmt 0 view .LVU860
 2530 02ae 0025     		movs	r5, #0
 2531              	.LVL321:
 2532              	.L122:
1316:rtos/uC-FS/FAT/fs_fat_file.c ****                     }
1317:rtos/uC-FS/FAT/fs_fat_file.c **** 
1318:rtos/uC-FS/FAT/fs_fat_file.c ****                     clus_cur_sec_rem = p_fat_data->ClusSize_sec;
1319:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
1320:rtos/uC-FS/FAT/fs_fat_file.c **** 
1321:rtos/uC-FS/FAT/fs_fat_file.c ****             } while (((sec_cnt_rem - sec_cnt_wr) >   0u) &&
1322:rtos/uC-FS/FAT/fs_fat_file.c ****                       (sec_next                  == (sec_cur + sec_cnt_wr)));
1323:rtos/uC-FS/FAT/fs_fat_file.c **** 
1324:rtos/uC-FS/FAT/fs_fat_file.c **** 
1325:rtos/uC-FS/FAT/fs_fat_file.c ****             FSVol_WrLockedEx(        p_file->VolPtr,            /* Wr full sec's.                  
1326:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void *)p_src_08,
1327:rtos/uC-FS/FAT/fs_fat_file.c ****                          sec_cur,
1328:rtos/uC-FS/FAT/fs_fat_file.c ****                          sec_cnt_wr,
1329:rtos/uC-FS/FAT/fs_fat_file.c ****                          FS_VOL_SEC_TYPE_FILE,
1330:rtos/uC-FS/FAT/fs_fat_file.c ****                          p_err);
1331:rtos/uC-FS/FAT/fs_fat_file.c **** 
1332:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err != FS_ERR_NONE) {
1333:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
1334:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (0u);
1335:rtos/uC-FS/FAT/fs_fat_file.c ****             }
1336:rtos/uC-FS/FAT/fs_fat_file.c **** 
1337:rtos/uC-FS/FAT/fs_fat_file.c ****             size_rem   -= FS_UTIL_MULT_PWR2(sec_cnt_wr, p_fat_data->SecSizeLog2);
1338:rtos/uC-FS/FAT/fs_fat_file.c ****             p_src_08   += FS_UTIL_MULT_PWR2(sec_cnt_wr, p_fat_data->SecSizeLog2);
1339:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur    += sec_cnt_wr - 1u;
1340:rtos/uC-FS/FAT/fs_fat_file.c **** 
1341:rtos/uC-FS/FAT/fs_fat_file.c ****             if((sec_cnt_rem - sec_cnt_wr) > 0u) {               /* Next clus is not contiguous.    
1342:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = sec_next;                         /* Set the next iter to start at ne
1343:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
1344:rtos/uC-FS/FAT/fs_fat_file.c ****             } else if (size_rem > 0u) {                         /* Partial sec left, fetch next sec
1345:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
1346:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
1347:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_buf,
ARM GAS  /tmp/ccKN2FgP.s 			page 77


1348:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 sec_cur,
1349:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_err);
1350:rtos/uC-FS/FAT/fs_fat_file.c ****                 if (*p_err != FS_ERR_NONE) {
1351:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
1352:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (0u);
1353:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
1354:rtos/uC-FS/FAT/fs_fat_file.c ****             } else {
1355:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = p_fat_data->SecSize;
1356:rtos/uC-FS/FAT/fs_fat_file.c ****             }
1357:rtos/uC-FS/FAT/fs_fat_file.c **** 
1358:rtos/uC-FS/FAT/fs_fat_file.c ****         } else {                                                /* -------------- PARTIAL (FINAL) S
1359:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Flush(p_buf, p_err);
1360:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err != FS_ERR_NONE) {
1361:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
1362:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (0u);
1363:rtos/uC-FS/FAT/fs_fat_file.c ****             }
1364:rtos/uC-FS/FAT/fs_fat_file.c **** 
1365:rtos/uC-FS/FAT/fs_fat_file.c ****             if(file_valid_size_rem > 0u) {                     /* Rd only if there is valid data re
1366:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSVol_RdLockedEx(p_file->VolPtr,               /* Rd full sec.                     
1367:rtos/uC-FS/FAT/fs_fat_file.c ****                                  p_buf->DataPtr,
1368:rtos/uC-FS/FAT/fs_fat_file.c ****                                  sec_cur,
1369:rtos/uC-FS/FAT/fs_fat_file.c ****                                  1u,
1370:rtos/uC-FS/FAT/fs_fat_file.c ****                                  FS_VOL_SEC_TYPE_FILE,
1371:rtos/uC-FS/FAT/fs_fat_file.c ****                                  p_err);
1372:rtos/uC-FS/FAT/fs_fat_file.c **** 
1373:rtos/uC-FS/FAT/fs_fat_file.c ****                 if (*p_err != FS_ERR_NONE) {
1374:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
1375:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (0u);
1376:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
1377:rtos/uC-FS/FAT/fs_fat_file.c **** #if  (FS_CFG_DBG_MEM_CLR_EN == DEF_ENABLED)
1378:rtos/uC-FS/FAT/fs_fat_file.c ****             } else {                                           /* Clr buf data.                    
1379:rtos/uC-FS/FAT/fs_fat_file.c ****                 Mem_Clr(p_buf->DataPtr, p_buf->Size);
1380:rtos/uC-FS/FAT/fs_fat_file.c ****             }
1381:rtos/uC-FS/FAT/fs_fat_file.c **** #else
1382:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1383:rtos/uC-FS/FAT/fs_fat_file.c **** #endif
1384:rtos/uC-FS/FAT/fs_fat_file.c **** 
1385:rtos/uC-FS/FAT/fs_fat_file.c **** 
1386:rtos/uC-FS/FAT/fs_fat_file.c **** 
1387:rtos/uC-FS/FAT/fs_fat_file.c ****             Mem_Copy((void       *)p_buf->DataPtr,              /* Copy data into buf.             
1388:rtos/uC-FS/FAT/fs_fat_file.c ****                      (void       *)p_src_08,
1389:rtos/uC-FS/FAT/fs_fat_file.c ****                      (CPU_SIZE_T  )size_rem);
1390:rtos/uC-FS/FAT/fs_fat_file.c **** 
1391:rtos/uC-FS/FAT/fs_fat_file.c ****             FSVol_WrLockedEx(p_file->VolPtr,                    /* Wr full sec.                    
1392:rtos/uC-FS/FAT/fs_fat_file.c ****                              p_buf->DataPtr,
1393:rtos/uC-FS/FAT/fs_fat_file.c ****                              sec_cur,
1394:rtos/uC-FS/FAT/fs_fat_file.c ****                              1u,
1395:rtos/uC-FS/FAT/fs_fat_file.c ****                              FS_VOL_SEC_TYPE_FILE,
1396:rtos/uC-FS/FAT/fs_fat_file.c ****                              p_err);
1397:rtos/uC-FS/FAT/fs_fat_file.c **** 
1398:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err != FS_ERR_NONE) {
1399:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
1400:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (0u);
1401:rtos/uC-FS/FAT/fs_fat_file.c ****             }
1402:rtos/uC-FS/FAT/fs_fat_file.c **** 
1403:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur_pos = size_rem;
1404:rtos/uC-FS/FAT/fs_fat_file.c ****             size_rem    = 0u;
ARM GAS  /tmp/ccKN2FgP.s 			page 78


1405:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1406:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1407:rtos/uC-FS/FAT/fs_fat_file.c **** 
1408:rtos/uC-FS/FAT/fs_fat_file.c **** 
1409:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* ----------------- UPDATE DIR ENT
1410:rtos/uC-FS/FAT/fs_fat_file.c ****     file_pos = p_fat_file_data->FilePos + size;
1411:rtos/uC-FS/FAT/fs_fat_file.c **** 
1412:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSec    = sec_cur;
1413:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSecPos = sec_cur_pos;
1414:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FilePos       = file_pos;
1415:rtos/uC-FS/FAT/fs_fat_file.c **** 
1416:rtos/uC-FS/FAT/fs_fat_file.c ****     if (file_pos > p_fat_file_data->FileSize) {                 /* New file pos past old file size.
1417:rtos/uC-FS/FAT/fs_fat_file.c ****         p_fat_file_data->FileSize = file_pos;
1418:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1419:rtos/uC-FS/FAT/fs_fat_file.c **** 
1420:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* If file uncached ...            
1421:rtos/uC-FS/FAT/fs_fat_file.c ****     if (DEF_BIT_IS_CLR(p_fat_file_data->Mode, FS_FILE_ACCESS_MODE_CACHED) == DEF_YES) {
1422:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_FAT_LowEntryUpdate(p_file->VolPtr,                   /*                  ... update dir 
1423:rtos/uC-FS/FAT/fs_fat_file.c ****                               p_buf,
1424:rtos/uC-FS/FAT/fs_fat_file.c ****                               p_fat_file_data,
1425:rtos/uC-FS/FAT/fs_fat_file.c ****                               DEF_YES,
1426:rtos/uC-FS/FAT/fs_fat_file.c ****                               p_err);
1427:rtos/uC-FS/FAT/fs_fat_file.c ****         if (*p_err != FS_ERR_NONE) {
1428:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
1429:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
1430:rtos/uC-FS/FAT/fs_fat_file.c ****         }
1431:rtos/uC-FS/FAT/fs_fat_file.c **** 
1432:rtos/uC-FS/FAT/fs_fat_file.c ****     } else {                                                    /* ... otherwise    ...            
1433:rtos/uC-FS/FAT/fs_fat_file.c ****         p_fat_file_data->UpdateReqd = DEF_YES;                  /*                  ... update dir 
1434:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1435:rtos/uC-FS/FAT/fs_fat_file.c **** 
1436:rtos/uC-FS/FAT/fs_fat_file.c **** 
1437:rtos/uC-FS/FAT/fs_fat_file.c ****                                                                 /* -------------------- CLR JOURNAL
1438:rtos/uC-FS/FAT/fs_fat_file.c **** #ifdef FS_FAT_JOURNAL_MODULE_PRESENT
1439:rtos/uC-FS/FAT/fs_fat_file.c ****     FS_FAT_JournalClrReset(p_file->VolPtr, p_buf, p_err);
1440:rtos/uC-FS/FAT/fs_fat_file.c ****     if (*p_err != FS_ERR_NONE) {
1441:rtos/uC-FS/FAT/fs_fat_file.c ****         FSBuf_Free(p_buf);
1442:rtos/uC-FS/FAT/fs_fat_file.c ****         return (0u);
1443:rtos/uC-FS/FAT/fs_fat_file.c ****     }
1444:rtos/uC-FS/FAT/fs_fat_file.c **** #endif
1445:rtos/uC-FS/FAT/fs_fat_file.c **** 
1446:rtos/uC-FS/FAT/fs_fat_file.c **** 
1447:rtos/uC-FS/FAT/fs_fat_file.c ****     FSBuf_Flush(p_buf, p_err);
1448:rtos/uC-FS/FAT/fs_fat_file.c ****     FSBuf_Free(p_buf);
1449:rtos/uC-FS/FAT/fs_fat_file.c ****    *p_err = FS_ERR_NONE;
1450:rtos/uC-FS/FAT/fs_fat_file.c ****     return (size);
1451:rtos/uC-FS/FAT/fs_fat_file.c **** }
 2533              		.loc 1 1451 1 view .LVU861
 2534 02b0 2846     		mov	r0, r5
 2535 02b2 0DB0     		add	sp, sp, #52
 2536              	.LCFI26:
 2537              		.cfi_remember_state
 2538              		.cfi_def_cfa_offset 36
 2539              		@ sp needed
 2540 02b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2541              	.LVL322:
 2542              	.L147:
ARM GAS  /tmp/ccKN2FgP.s 			page 79


 2543              	.LCFI27:
 2544              		.cfi_restore_state
1321:rtos/uC-FS/FAT/fs_fat_file.c ****                       (sec_next                  == (sec_cur + sec_cnt_wr)));
 2545              		.loc 1 1321 21 is_stmt 1 view .LVU862
1322:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2546              		.loc 1 1322 23 is_stmt 0 view .LVU863
 2547 02b8 A542     		cmp	r5, r4
 2548 02ba 17D0     		beq	.L149
1322:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2549              		.loc 1 1322 62 discriminator 1 view .LVU864
 2550 02bc 3B19     		adds	r3, r7, r4
1321:rtos/uC-FS/FAT/fs_fat_file.c ****                       (sec_next                  == (sec_cur + sec_cnt_wr)));
 2551              		.loc 1 1321 58 discriminator 1 view .LVU865
 2552 02be 8342     		cmp	r3, r0
 2553 02c0 14D1     		bne	.L149
 2554              	.LVL323:
 2555              	.L150:
1305:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cnt_wr += DEF_MIN(sec_cnt_rem - sec_cnt_wr, clus_cur_sec_rem);
 2556              		.loc 1 1305 13 is_stmt 1 view .LVU866
1306:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2557              		.loc 1 1306 17 view .LVU867
1306:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2558              		.loc 1 1306 31 is_stmt 0 view .LVU868
 2559 02c2 2B1B     		subs	r3, r5, r4
1306:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2560              		.loc 1 1306 28 view .LVU869
 2561 02c4 9342     		cmp	r3, r2
 2562 02c6 94BF     		ite	ls
 2563 02c8 E418     		addls	r4, r4, r3
 2564 02ca A418     		addhi	r4, r4, r2
 2565              	.LVL324:
1308:rtos/uC-FS/FAT/fs_fat_file.c ****                     sec_next = FS_FAT_SecNextGet(p_file->VolPtr,
 2566              		.loc 1 1308 17 is_stmt 1 view .LVU870
1308:rtos/uC-FS/FAT/fs_fat_file.c ****                     sec_next = FS_FAT_SecNextGet(p_file->VolPtr,
 2567              		.loc 1 1308 19 is_stmt 0 view .LVU871
 2568 02cc A542     		cmp	r5, r4
 2569 02ce F3D0     		beq	.L147
1309:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_buf,
 2570              		.loc 1 1309 21 is_stmt 1 view .LVU872
1311:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_err);
 2571              		.loc 1 1311 58 is_stmt 0 view .LVU873
 2572 02d0 3A19     		adds	r2, r7, r4
 2573              	.LVL325:
1309:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_buf,
 2574              		.loc 1 1309 32 view .LVU874
 2575 02d2 4346     		mov	r3, r8
 2576 02d4 013A     		subs	r2, r2, #1
 2577 02d6 5946     		mov	r1, fp
 2578 02d8 F06B     		ldr	r0, [r6, #60]
 2579              	.LVL326:
1309:rtos/uC-FS/FAT/fs_fat_file.c ****                                                  p_buf,
 2580              		.loc 1 1309 32 view .LVU875
 2581 02da FFF7FEFF 		bl	FS_FAT_SecNextGet
 2582              	.LVL327:
1313:rtos/uC-FS/FAT/fs_fat_file.c ****                         FSBuf_Free(p_buf);
 2583              		.loc 1 1313 21 is_stmt 1 view .LVU876
1313:rtos/uC-FS/FAT/fs_fat_file.c ****                         FSBuf_Free(p_buf);
ARM GAS  /tmp/ccKN2FgP.s 			page 80


 2584              		.loc 1 1313 25 is_stmt 0 view .LVU877
 2585 02de B8F80030 		ldrh	r3, [r8]
1313:rtos/uC-FS/FAT/fs_fat_file.c ****                         FSBuf_Free(p_buf);
 2586              		.loc 1 1313 24 view .LVU878
 2587 02e2 002B     		cmp	r3, #0
 2588 02e4 E0D1     		bne	.L184
1318:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2589              		.loc 1 1318 21 is_stmt 1 view .LVU879
1318:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2590              		.loc 1 1318 38 is_stmt 0 view .LVU880
 2591 02e6 DAF83C20 		ldr	r2, [r10, #60]
 2592              	.LVL328:
1318:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2593              		.loc 1 1318 38 view .LVU881
 2594 02ea E5E7     		b	.L147
 2595              	.L149:
1318:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2596              		.loc 1 1318 38 view .LVU882
 2597 02ec 9146     		mov	r9, r2
 2598 02ee 0646     		mov	r6, r0
1325:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void *)p_src_08,
 2599              		.loc 1 1325 13 is_stmt 1 view .LVU883
 2600 02f0 CDF80480 		str	r8, [sp, #4]
 2601 02f4 0423     		movs	r3, #4
 2602 02f6 0093     		str	r3, [sp]
 2603 02f8 2346     		mov	r3, r4
 2604 02fa 3A46     		mov	r2, r7
 2605              	.LVL329:
1325:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void *)p_src_08,
 2606              		.loc 1 1325 13 is_stmt 0 view .LVU884
 2607 02fc 0599     		ldr	r1, [sp, #20]
 2608 02fe 0498     		ldr	r0, [sp, #16]
 2609              	.LVL330:
1325:rtos/uC-FS/FAT/fs_fat_file.c ****                  (void *)p_src_08,
 2610              		.loc 1 1325 13 view .LVU885
 2611 0300 C06B     		ldr	r0, [r0, #60]
 2612 0302 FFF7FEFF 		bl	FSVol_WrLockedEx
 2613              	.LVL331:
1332:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2614              		.loc 1 1332 13 is_stmt 1 view .LVU886
1332:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2615              		.loc 1 1332 17 is_stmt 0 view .LVU887
 2616 0306 B8F80030 		ldrh	r3, [r8]
1332:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2617              		.loc 1 1332 16 view .LVU888
 2618 030a 93B9     		cbnz	r3, .L185
1337:rtos/uC-FS/FAT/fs_fat_file.c ****             p_src_08   += FS_UTIL_MULT_PWR2(sec_cnt_wr, p_fat_data->SecSizeLog2);
 2619              		.loc 1 1337 13 is_stmt 1 view .LVU889
1337:rtos/uC-FS/FAT/fs_fat_file.c ****             p_src_08   += FS_UTIL_MULT_PWR2(sec_cnt_wr, p_fat_data->SecSizeLog2);
 2620              		.loc 1 1337 27 is_stmt 0 view .LVU890
 2621 030c 9AF83830 		ldrb	r3, [r10, #56]	@ zero_extendqisi2
 2622 0310 04FA03F3 		lsl	r3, r4, r3
1337:rtos/uC-FS/FAT/fs_fat_file.c ****             p_src_08   += FS_UTIL_MULT_PWR2(sec_cnt_wr, p_fat_data->SecSizeLog2);
 2623              		.loc 1 1337 24 view .LVU891
 2624 0314 039A     		ldr	r2, [sp, #12]
 2625 0316 D21A     		subs	r2, r2, r3
 2626 0318 0692     		str	r2, [sp, #24]
ARM GAS  /tmp/ccKN2FgP.s 			page 81


 2627              	.LVL332:
1338:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur    += sec_cnt_wr - 1u;
 2628              		.loc 1 1338 13 is_stmt 1 view .LVU892
1338:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur    += sec_cnt_wr - 1u;
 2629              		.loc 1 1338 24 is_stmt 0 view .LVU893
 2630 031a 059A     		ldr	r2, [sp, #20]
 2631              	.LVL333:
1338:rtos/uC-FS/FAT/fs_fat_file.c ****             sec_cur    += sec_cnt_wr - 1u;
 2632              		.loc 1 1338 24 view .LVU894
 2633 031c 1A44     		add	r2, r2, r3
 2634 031e 0592     		str	r2, [sp, #20]
 2635              	.LVL334:
1339:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2636              		.loc 1 1339 13 is_stmt 1 view .LVU895
1339:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2637              		.loc 1 1339 24 is_stmt 0 view .LVU896
 2638 0320 2744     		add	r7, r7, r4
 2639              	.LVL335:
1339:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2640              		.loc 1 1339 24 view .LVU897
 2641 0322 013F     		subs	r7, r7, #1
 2642              	.LVL336:
1341:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = sec_next;                         /* Set the next iter to start at ne
 2643              		.loc 1 1341 13 is_stmt 1 view .LVU898
1341:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = sec_next;                         /* Set the next iter to start at ne
 2644              		.loc 1 1341 15 is_stmt 0 view .LVU899
 2645 0324 A542     		cmp	r5, r4
 2646 0326 09D0     		beq	.L186
1337:rtos/uC-FS/FAT/fs_fat_file.c ****             p_src_08   += FS_UTIL_MULT_PWR2(sec_cnt_wr, p_fat_data->SecSizeLog2);
 2647              		.loc 1 1337 24 view .LVU900
 2648 0328 069D     		ldr	r5, [sp, #24]
 2649              	.LVL337:
1342:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
 2650              		.loc 1 1342 29 view .LVU901
 2651 032a 3746     		mov	r7, r6
 2652              	.LVL338:
1343:rtos/uC-FS/FAT/fs_fat_file.c ****             } else if (size_rem > 0u) {                         /* Partial sec left, fetch next sec
 2653              		.loc 1 1343 29 view .LVU902
 2654 032c 0023     		movs	r3, #0
 2655 032e 0393     		str	r3, [sp, #12]
1343:rtos/uC-FS/FAT/fs_fat_file.c ****             } else if (size_rem > 0u) {                         /* Partial sec left, fetch next sec
 2656              		.loc 1 1343 29 view .LVU903
 2657 0330 3EE0     		b	.L152
 2658              	.LVL339:
 2659              	.L185:
1333:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (0u);
 2660              		.loc 1 1333 17 is_stmt 1 view .LVU904
 2661 0332 5846     		mov	r0, fp
 2662 0334 FFF7FEFF 		bl	FSBuf_Free
 2663              	.LVL340:
1334:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2664              		.loc 1 1334 17 view .LVU905
1334:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2665              		.loc 1 1334 24 is_stmt 0 view .LVU906
 2666 0338 0025     		movs	r5, #0
 2667              	.LVL341:
1334:rtos/uC-FS/FAT/fs_fat_file.c ****             }
ARM GAS  /tmp/ccKN2FgP.s 			page 82


 2668              		.loc 1 1334 24 view .LVU907
 2669 033a B9E7     		b	.L122
 2670              	.LVL342:
 2671              	.L186:
1344:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
 2672              		.loc 1 1344 20 is_stmt 1 view .LVU908
1344:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur_pos = 0u;
 2673              		.loc 1 1344 23 is_stmt 0 view .LVU909
 2674 033c 069B     		ldr	r3, [sp, #24]
 2675 033e 23B9     		cbnz	r3, .L187
1355:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2676              		.loc 1 1355 17 is_stmt 1 view .LVU910
1355:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2677              		.loc 1 1355 29 is_stmt 0 view .LVU911
 2678 0340 DAF83430 		ldr	r3, [r10, #52]
 2679 0344 0393     		str	r3, [sp, #12]
 2680              	.LVL343:
1337:rtos/uC-FS/FAT/fs_fat_file.c ****             p_src_08   += FS_UTIL_MULT_PWR2(sec_cnt_wr, p_fat_data->SecSizeLog2);
 2681              		.loc 1 1337 24 view .LVU912
 2682 0346 069D     		ldr	r5, [sp, #24]
 2683              	.LVL344:
1337:rtos/uC-FS/FAT/fs_fat_file.c ****             p_src_08   += FS_UTIL_MULT_PWR2(sec_cnt_wr, p_fat_data->SecSizeLog2);
 2684              		.loc 1 1337 24 view .LVU913
 2685 0348 32E0     		b	.L152
 2686              	.LVL345:
 2687              	.L187:
1345:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 2688              		.loc 1 1345 17 is_stmt 1 view .LVU914
1346:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_buf,
 2689              		.loc 1 1346 17 view .LVU915
1346:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_buf,
 2690              		.loc 1 1346 31 is_stmt 0 view .LVU916
 2691 034a 4346     		mov	r3, r8
 2692 034c 3A46     		mov	r2, r7
 2693              	.LVL346:
1346:rtos/uC-FS/FAT/fs_fat_file.c ****                                                 p_buf,
 2694              		.loc 1 1346 31 view .LVU917
 2695 034e 5946     		mov	r1, fp
 2696 0350 0498     		ldr	r0, [sp, #16]
 2697 0352 C06B     		ldr	r0, [r0, #60]
 2698 0354 FFF7FEFF 		bl	FS_FAT_SecNextGet
 2699              	.LVL347:
 2700 0358 0746     		mov	r7, r0
 2701              	.LVL348:
1350:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 2702              		.loc 1 1350 17 is_stmt 1 view .LVU918
1350:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 2703              		.loc 1 1350 21 is_stmt 0 view .LVU919
 2704 035a B8F80030 		ldrh	r3, [r8]
1350:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 2705              		.loc 1 1350 20 view .LVU920
 2706 035e 1BB9     		cbnz	r3, .L188
1337:rtos/uC-FS/FAT/fs_fat_file.c ****             p_src_08   += FS_UTIL_MULT_PWR2(sec_cnt_wr, p_fat_data->SecSizeLog2);
 2707              		.loc 1 1337 24 view .LVU921
 2708 0360 069D     		ldr	r5, [sp, #24]
 2709              	.LVL349:
1345:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
ARM GAS  /tmp/ccKN2FgP.s 			page 83


 2710              		.loc 1 1345 29 view .LVU922
 2711 0362 0023     		movs	r3, #0
 2712 0364 0393     		str	r3, [sp, #12]
1345:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 2713              		.loc 1 1345 29 view .LVU923
 2714 0366 23E0     		b	.L152
 2715              	.LVL350:
 2716              	.L188:
1351:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (0u);
 2717              		.loc 1 1351 21 is_stmt 1 view .LVU924
 2718 0368 5846     		mov	r0, fp
 2719              	.LVL351:
1351:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (0u);
 2720              		.loc 1 1351 21 is_stmt 0 view .LVU925
 2721 036a FFF7FEFF 		bl	FSBuf_Free
 2722              	.LVL352:
1352:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2723              		.loc 1 1352 21 is_stmt 1 view .LVU926
1352:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2724              		.loc 1 1352 28 is_stmt 0 view .LVU927
 2725 036e 0025     		movs	r5, #0
 2726              	.LVL353:
1352:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2727              		.loc 1 1352 28 view .LVU928
 2728 0370 9EE7     		b	.L122
 2729              	.LVL354:
 2730              	.L192:
1361:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (0u);
 2731              		.loc 1 1361 17 is_stmt 1 view .LVU929
 2732 0372 5846     		mov	r0, fp
 2733 0374 FFF7FEFF 		bl	FSBuf_Free
 2734              	.LVL355:
1362:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2735              		.loc 1 1362 17 view .LVU930
1362:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2736              		.loc 1 1362 24 is_stmt 0 view .LVU931
 2737 0378 9AE7     		b	.L122
 2738              	.L155:
1379:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2739              		.loc 1 1379 17 is_stmt 1 view .LVU932
 2740 037a DBF80010 		ldr	r1, [fp]
 2741 037e DBF81000 		ldr	r0, [fp, #16]
 2742 0382 FFF7FEFF 		bl	Mem_Clr
 2743              	.LVL356:
 2744              	.L156:
1387:rtos/uC-FS/FAT/fs_fat_file.c ****                      (void       *)p_src_08,
 2745              		.loc 1 1387 13 view .LVU933
 2746 0386 039A     		ldr	r2, [sp, #12]
 2747 0388 0599     		ldr	r1, [sp, #20]
 2748 038a DBF81000 		ldr	r0, [fp, #16]
 2749 038e FFF7FEFF 		bl	Mem_Copy
 2750              	.LVL357:
1391:rtos/uC-FS/FAT/fs_fat_file.c ****                              p_buf->DataPtr,
 2751              		.loc 1 1391 13 view .LVU934
 2752 0392 DBF81010 		ldr	r1, [fp, #16]
 2753 0396 CDF80480 		str	r8, [sp, #4]
 2754 039a 0423     		movs	r3, #4
ARM GAS  /tmp/ccKN2FgP.s 			page 84


 2755 039c 0093     		str	r3, [sp]
 2756 039e 0123     		movs	r3, #1
 2757 03a0 3A46     		mov	r2, r7
 2758 03a2 0498     		ldr	r0, [sp, #16]
 2759 03a4 C06B     		ldr	r0, [r0, #60]
 2760 03a6 FFF7FEFF 		bl	FSVol_WrLockedEx
 2761              	.LVL358:
1398:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2762              		.loc 1 1398 13 view .LVU935
1398:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2763              		.loc 1 1398 17 is_stmt 0 view .LVU936
 2764 03aa B8F80030 		ldrh	r3, [r8]
1398:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2765              		.loc 1 1398 16 view .LVU937
 2766 03ae 53BB     		cbnz	r3, .L189
 2767              	.LVL359:
 2768              	.L152:
1345:rtos/uC-FS/FAT/fs_fat_file.c ****                 sec_cur     = FS_FAT_SecNextGet(p_file->VolPtr,
 2769              		.loc 1 1345 29 view .LVU938
 2770 03b0 039B     		ldr	r3, [sp, #12]
 2771 03b2 0693     		str	r3, [sp, #24]
 2772 03b4 0395     		str	r5, [sp, #12]
 2773              	.LVL360:
 2774              	.L145:
1299:rtos/uC-FS/FAT/fs_fat_file.c ****         sec_cnt_rem = FS_UTIL_DIV_PWR2(size_rem, p_fat_data->SecSizeLog2);
 2775              		.loc 1 1299 11 is_stmt 1 view .LVU939
 2776 03b6 039B     		ldr	r3, [sp, #12]
 2777 03b8 4BB3     		cbz	r3, .L190
1300:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2778              		.loc 1 1300 9 view .LVU940
1300:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2779              		.loc 1 1300 23 is_stmt 0 view .LVU941
 2780 03ba 9AF83850 		ldrb	r5, [r10, #56]	@ zero_extendqisi2
 2781              	.LVL361:
1302:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2782              		.loc 1 1302 9 is_stmt 1 view .LVU942
1302:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2783              		.loc 1 1302 12 is_stmt 0 view .LVU943
 2784 03be 039B     		ldr	r3, [sp, #12]
 2785 03c0 33FA05F5 		lsrs	r5, r3, r5
 2786              	.LVL362:
1302:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2787              		.loc 1 1302 12 view .LVU944
 2788 03c4 7FF46BAF 		bne	.L191
1359:rtos/uC-FS/FAT/fs_fat_file.c ****             if (*p_err != FS_ERR_NONE) {
 2789              		.loc 1 1359 13 is_stmt 1 view .LVU945
 2790 03c8 4146     		mov	r1, r8
 2791 03ca 5846     		mov	r0, fp
 2792 03cc FFF7FEFF 		bl	FSBuf_Flush
 2793              	.LVL363:
1360:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2794              		.loc 1 1360 13 view .LVU946
1360:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2795              		.loc 1 1360 17 is_stmt 0 view .LVU947
 2796 03d0 B8F80030 		ldrh	r3, [r8]
1360:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSBuf_Free(p_buf);
 2797              		.loc 1 1360 16 view .LVU948
ARM GAS  /tmp/ccKN2FgP.s 			page 85


 2798 03d4 002B     		cmp	r3, #0
 2799 03d6 CCD1     		bne	.L192
1365:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSVol_RdLockedEx(p_file->VolPtr,               /* Rd full sec.                     
 2800              		.loc 1 1365 13 is_stmt 1 view .LVU949
1365:rtos/uC-FS/FAT/fs_fat_file.c ****                 FSVol_RdLockedEx(p_file->VolPtr,               /* Rd full sec.                     
 2801              		.loc 1 1365 15 is_stmt 0 view .LVU950
 2802 03d8 089B     		ldr	r3, [sp, #32]
 2803 03da 002B     		cmp	r3, #0
 2804 03dc CDD0     		beq	.L155
1366:rtos/uC-FS/FAT/fs_fat_file.c ****                                  p_buf->DataPtr,
 2805              		.loc 1 1366 17 is_stmt 1 view .LVU951
 2806 03de DBF81010 		ldr	r1, [fp, #16]
 2807 03e2 CDF80480 		str	r8, [sp, #4]
 2808 03e6 0423     		movs	r3, #4
 2809 03e8 0093     		str	r3, [sp]
 2810 03ea 0123     		movs	r3, #1
 2811 03ec 3A46     		mov	r2, r7
 2812 03ee 0498     		ldr	r0, [sp, #16]
 2813 03f0 C06B     		ldr	r0, [r0, #60]
 2814 03f2 FFF7FEFF 		bl	FSVol_RdLockedEx
 2815              	.LVL364:
1373:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 2816              		.loc 1 1373 17 view .LVU952
1373:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 2817              		.loc 1 1373 21 is_stmt 0 view .LVU953
 2818 03f6 B8F80030 		ldrh	r3, [r8]
1373:rtos/uC-FS/FAT/fs_fat_file.c ****                     FSBuf_Free(p_buf);
 2819              		.loc 1 1373 20 view .LVU954
 2820 03fa 002B     		cmp	r3, #0
 2821 03fc C3D0     		beq	.L156
1374:rtos/uC-FS/FAT/fs_fat_file.c ****                     return (0u);
 2822              		.loc 1 1374 21 is_stmt 1 view .LVU955
 2823 03fe 5846     		mov	r0, fp
 2824 0400 FFF7FEFF 		bl	FSBuf_Free
 2825              	.LVL365:
1375:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2826              		.loc 1 1375 21 view .LVU956
1375:rtos/uC-FS/FAT/fs_fat_file.c ****                 }
 2827              		.loc 1 1375 28 is_stmt 0 view .LVU957
 2828 0404 54E7     		b	.L122
 2829              	.L189:
1399:rtos/uC-FS/FAT/fs_fat_file.c ****                 return (0u);
 2830              		.loc 1 1399 17 is_stmt 1 view .LVU958
 2831 0406 5846     		mov	r0, fp
 2832 0408 FFF7FEFF 		bl	FSBuf_Free
 2833              	.LVL366:
1400:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2834              		.loc 1 1400 17 view .LVU959
1400:rtos/uC-FS/FAT/fs_fat_file.c ****             }
 2835              		.loc 1 1400 24 is_stmt 0 view .LVU960
 2836 040c 50E7     		b	.L122
 2837              	.LVL367:
 2838              	.L190:
1410:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2839              		.loc 1 1410 5 is_stmt 1 view .LVU961
1410:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2840              		.loc 1 1410 31 is_stmt 0 view .LVU962
ARM GAS  /tmp/ccKN2FgP.s 			page 86


 2841 040e 099A     		ldr	r2, [sp, #36]
 2842 0410 1368     		ldr	r3, [r2]
 2843              	.LVL368:
1410:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2844              		.loc 1 1410 14 view .LVU963
 2845 0412 0799     		ldr	r1, [sp, #28]
 2846 0414 0B44     		add	r3, r3, r1
 2847              	.LVL369:
1412:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSecPos = sec_cur_pos;
 2848              		.loc 1 1412 5 is_stmt 1 view .LVU964
1412:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FileCurSecPos = sec_cur_pos;
 2849              		.loc 1 1412 36 is_stmt 0 view .LVU965
 2850 0416 1146     		mov	r1, r2
 2851 0418 9762     		str	r7, [r2, #40]
1413:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FilePos       = file_pos;
 2852              		.loc 1 1413 5 is_stmt 1 view .LVU966
1413:rtos/uC-FS/FAT/fs_fat_file.c ****     p_fat_file_data->FilePos       = file_pos;
 2853              		.loc 1 1413 36 is_stmt 0 view .LVU967
 2854 041a 0698     		ldr	r0, [sp, #24]
 2855 041c D062     		str	r0, [r2, #44]
1414:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2856              		.loc 1 1414 5 is_stmt 1 view .LVU968
1414:rtos/uC-FS/FAT/fs_fat_file.c **** 
 2857              		.loc 1 1414 36 is_stmt 0 view .LVU969
 2858 041e 1360     		str	r3, [r2]
1416:rtos/uC-FS/FAT/fs_fat_file.c ****         p_fat_file_data->FileSize = file_pos;
 2859              		.loc 1 1416 5 is_stmt 1 view .LVU970
1416:rtos/uC-FS/FAT/fs_fat_file.c ****         p_fat_file_data->FileSize = file_pos;
 2860              		.loc 1 1416 35 is_stmt 0 view .LVU971
 2861 0420 5268     		ldr	r2, [r2, #4]
1416:rtos/uC-FS/FAT/fs_fat_file.c ****         p_fat_file_data->FileSize = file_pos;
 2862              		.loc 1 1416 8 view .LVU972
 2863 0422 9A42     		cmp	r2, r3
 2864 0424 00D2     		bcs	.L158
1417:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 2865              		.loc 1 1417 9 is_stmt 1 view .LVU973
1417:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 2866              		.loc 1 1417 35 is_stmt 0 view .LVU974
 2867 0426 4B60     		str	r3, [r1, #4]
 2868              	.L158:
1421:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_FAT_LowEntryUpdate(p_file->VolPtr,                   /*                  ... update dir 
 2869              		.loc 1 1421 5 is_stmt 1 view .LVU975
1421:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_FAT_LowEntryUpdate(p_file->VolPtr,                   /*                  ... update dir 
 2870              		.loc 1 1421 9 is_stmt 0 view .LVU976
 2871 0428 099B     		ldr	r3, [sp, #36]
 2872              	.LVL370:
1421:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_FAT_LowEntryUpdate(p_file->VolPtr,                   /*                  ... update dir 
 2873              		.loc 1 1421 9 view .LVU977
 2874 042a DD68     		ldr	r5, [r3, #12]
1421:rtos/uC-FS/FAT/fs_fat_file.c ****         FS_FAT_LowEntryUpdate(p_file->VolPtr,                   /*                  ... update dir 
 2875              		.loc 1 1421 8 view .LVU978
 2876 042c 15F04005 		ands	r5, r5, #64
 2877 0430 0ED0     		beq	.L193
1433:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 2878              		.loc 1 1433 9 is_stmt 1 view .LVU979
1433:rtos/uC-FS/FAT/fs_fat_file.c ****     }
 2879              		.loc 1 1433 37 is_stmt 0 view .LVU980
ARM GAS  /tmp/ccKN2FgP.s 			page 87


 2880 0432 0123     		movs	r3, #1
 2881 0434 099A     		ldr	r2, [sp, #36]
 2882 0436 1372     		strb	r3, [r2, #8]
 2883              	.LVL371:
 2884              	.L160:
1447:rtos/uC-FS/FAT/fs_fat_file.c ****     FSBuf_Free(p_buf);
 2885              		.loc 1 1447 5 is_stmt 1 view .LVU981
 2886 0438 4146     		mov	r1, r8
 2887 043a 5846     		mov	r0, fp
 2888 043c FFF7FEFF 		bl	FSBuf_Flush
 2889              	.LVL372:
1448:rtos/uC-FS/FAT/fs_fat_file.c ****    *p_err = FS_ERR_NONE;
 2890              		.loc 1 1448 5 view .LVU982
 2891 0440 5846     		mov	r0, fp
 2892 0442 FFF7FEFF 		bl	FSBuf_Free
 2893              	.LVL373:
1449:rtos/uC-FS/FAT/fs_fat_file.c ****     return (size);
 2894              		.loc 1 1449 4 view .LVU983
1449:rtos/uC-FS/FAT/fs_fat_file.c ****     return (size);
 2895              		.loc 1 1449 11 is_stmt 0 view .LVU984
 2896 0446 0023     		movs	r3, #0
 2897 0448 A8F80030 		strh	r3, [r8]	@ movhi
1450:rtos/uC-FS/FAT/fs_fat_file.c **** }
 2898              		.loc 1 1450 5 is_stmt 1 view .LVU985
1450:rtos/uC-FS/FAT/fs_fat_file.c **** }
 2899              		.loc 1 1450 12 is_stmt 0 view .LVU986
 2900 044c 079D     		ldr	r5, [sp, #28]
 2901 044e 2FE7     		b	.L122
 2902              	.LVL374:
 2903              	.L193:
1422:rtos/uC-FS/FAT/fs_fat_file.c ****                               p_buf,
 2904              		.loc 1 1422 9 is_stmt 1 view .LVU987
 2905 0450 CDF80080 		str	r8, [sp]
 2906              	.LVL375:
1422:rtos/uC-FS/FAT/fs_fat_file.c ****                               p_buf,
 2907              		.loc 1 1422 9 is_stmt 0 view .LVU988
 2908 0454 0123     		movs	r3, #1
 2909 0456 099A     		ldr	r2, [sp, #36]
 2910 0458 5946     		mov	r1, fp
 2911 045a 0498     		ldr	r0, [sp, #16]
 2912 045c C06B     		ldr	r0, [r0, #60]
 2913 045e FFF7FEFF 		bl	FS_FAT_LowEntryUpdate
 2914              	.LVL376:
1427:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2915              		.loc 1 1427 9 is_stmt 1 view .LVU989
1427:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2916              		.loc 1 1427 13 is_stmt 0 view .LVU990
 2917 0462 B8F80030 		ldrh	r3, [r8]
1427:rtos/uC-FS/FAT/fs_fat_file.c ****             FSBuf_Free(p_buf);
 2918              		.loc 1 1427 12 view .LVU991
 2919 0466 002B     		cmp	r3, #0
 2920 0468 E6D0     		beq	.L160
1428:rtos/uC-FS/FAT/fs_fat_file.c ****             return (0u);
 2921              		.loc 1 1428 13 is_stmt 1 view .LVU992
 2922 046a 5846     		mov	r0, fp
 2923 046c FFF7FEFF 		bl	FSBuf_Free
 2924              	.LVL377:
ARM GAS  /tmp/ccKN2FgP.s 			page 88


1429:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2925              		.loc 1 1429 13 view .LVU993
1429:rtos/uC-FS/FAT/fs_fat_file.c ****         }
 2926              		.loc 1 1429 20 is_stmt 0 view .LVU994
 2927 0470 1EE7     		b	.L122
 2928              		.cfi_endproc
 2929              	.LFE7:
 2931              		.section	.bss.FS_FAT_FileDataPool,"aw",%nobits
 2932              		.align	2
 2933              		.set	.LANCHOR0,. + 0
 2936              	FS_FAT_FileDataPool:
 2937 0000 00000000 		.space	24
 2937      00000000 
 2937      00000000 
 2937      00000000 
 2937      00000000 
 2938              		.text
 2939              	.Letext0:
 2940              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 2941              		.file 3 "rtos/uC-LIB/lib_def.h"
 2942              		.file 4 "rtos/uC-LIB/lib_mem.h"
 2943              		.file 5 "rtos/uC-Clk/Source/clk.h"
 2944              		.file 6 "rtos/uC-FS/FAT/../Source/fs_type.h"
 2945              		.file 7 "rtos/uC-FS/FAT/../Source/fs_buf.h"
 2946              		.file 8 "rtos/uC-FS/FAT/../Source/fs_dev.h"
 2947              		.file 9 "rtos/uC-FS/FAT/../Source/fs_entry.h"
 2948              		.file 10 "rtos/uC-FS/FAT/../Source/fs_file.h"
 2949              		.file 11 "rtos/uC-FS/FAT/../Source/fs_vol.h"
 2950              		.file 12 "rtos/uC-FS/FAT/../Source/fs_err.h"
 2951              		.file 13 "rtos/uC-FS/FAT/../Source/fs_ctr.h"
 2952              		.file 14 "rtos/uC-FS/FAT/fs_fat_type.h"
 2953              		.file 15 "rtos/uC-FS/FAT/fs_fat.h"
ARM GAS  /tmp/ccKN2FgP.s 			page 89


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fs_fat_file.c
     /tmp/ccKN2FgP.s:18     .text.FS_FAT_FileModuleInit:0000000000000000 $t
     /tmp/ccKN2FgP.s:26     .text.FS_FAT_FileModuleInit:0000000000000000 FS_FAT_FileModuleInit
     /tmp/ccKN2FgP.s:89     .text.FS_FAT_FileModuleInit:0000000000000038 $d
     /tmp/ccKN2FgP.s:94     .text.FS_FAT_FileClose:0000000000000000 $t
     /tmp/ccKN2FgP.s:101    .text.FS_FAT_FileClose:0000000000000000 FS_FAT_FileClose
     /tmp/ccKN2FgP.s:245    .text.FS_FAT_FileClose:0000000000000088 $d
     /tmp/ccKN2FgP.s:250    .text.FS_FAT_FileOpen:0000000000000000 $t
     /tmp/ccKN2FgP.s:257    .text.FS_FAT_FileOpen:0000000000000000 FS_FAT_FileOpen
     /tmp/ccKN2FgP.s:358    .text.FS_FAT_FileOpen:0000000000000058 $d
     /tmp/ccKN2FgP.s:363    .text.FS_FAT_FilePosSet:0000000000000000 $t
     /tmp/ccKN2FgP.s:370    .text.FS_FAT_FilePosSet:0000000000000000 FS_FAT_FilePosSet
     /tmp/ccKN2FgP.s:703    .text.FS_FAT_FileQuery:0000000000000000 $t
     /tmp/ccKN2FgP.s:710    .text.FS_FAT_FileQuery:0000000000000000 FS_FAT_FileQuery
     /tmp/ccKN2FgP.s:843    .text.FS_FAT_FileRd:0000000000000000 $t
     /tmp/ccKN2FgP.s:850    .text.FS_FAT_FileRd:0000000000000000 FS_FAT_FileRd
     /tmp/ccKN2FgP.s:1662   .text.FS_FAT_FileTruncate:0000000000000000 $t
     /tmp/ccKN2FgP.s:1669   .text.FS_FAT_FileTruncate:0000000000000000 FS_FAT_FileTruncate
     /tmp/ccKN2FgP.s:1840   .text.FS_FAT_FileWr:0000000000000000 $t
     /tmp/ccKN2FgP.s:1847   .text.FS_FAT_FileWr:0000000000000000 FS_FAT_FileWr
     /tmp/ccKN2FgP.s:2932   .bss.FS_FAT_FileDataPool:0000000000000000 $d
     /tmp/ccKN2FgP.s:2936   .bss.FS_FAT_FileDataPool:0000000000000000 FS_FAT_FileDataPool
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_mem.h.121.89b942a057fb20091baad8bf6b28b1e6
                           .group:0000000000000000 wm4.fs.h.42.4f6311a594ee5619f1ee7a9392eb7faa
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.fs_def.h.42.653ad677c23ef93c522ec84af681385d
                           .group:0000000000000000 wm4.fs_cfg.h.116.da4f8e9d0b9040a97ef3bf26c61e90fd
                           .group:0000000000000000 wm4.clk.h.99.39403db6a27321e53b261bbe20b56e1d
                           .group:0000000000000000 wm4.lib_str.h.60.d6fb3a1336db17c586ed26be94929677
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366
                           .group:0000000000000000 wm4.fs_cfg_fs.h.176.c85074fbe881bfa594608376a65f4dc2
                           .group:0000000000000000 wm4.fs_type.h.42.3e681b291920189044ba1da24ae0f22a
                           .group:0000000000000000 wm4.fs_err.h.42.d52bfed31dff3d1419c5cf09952dee67
                           .group:0000000000000000 wm4.fs.h.97.1d629f0ba32b5622ab4e01a254bd98e8
                           .group:0000000000000000 wm4.fs_buf.h.42.0c8ba10968f085926266a27b71b3972d
                           .group:0000000000000000 wm4.fs_dev.h.42.457d0b7de373584765db5fbe40e7c30d
                           .group:0000000000000000 wm4.fs_ctr.h.42.9d1398cac157503ac8af114819f7782b
                           .group:0000000000000000 wm4.fs_dev.h.84.0b8682dc82cfd464ab0da30a876c8006
                           .group:0000000000000000 wm4.fs_entry.h.42.9d70c930b2952a9ef63a0a4e9d586c20
                           .group:0000000000000000 wm4.fs_file.h.42.74c26597bc17b842069a1de9e164f613
                           .group:0000000000000000 wm4.fs_vol.h.42.b307128eec61fcaf68a96ce7f965d41e
                           .group:0000000000000000 wm4.fs_util.h.64.fe7812d6ca4c430dea2d2e705fd73c11
                           .group:0000000000000000 wm4.fs_fat_type.h.44.5030ef39a150a8f4f55331616cd38bbd
                           .group:0000000000000000 wm4.fs_fat.h.103.89adf2d396ea9a0dd44def3a42712dd1
                           .group:0000000000000000 wm4.fs_fat_file.h.46.a3191b0ded2add06dbda7b911daa3ed3

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccKN2FgP.s 			page 90


Mem_PoolCreate
FS_OS_Lock
FSBuf_Get
FS_FAT_LowEntryUpdate
FSBuf_Flush
FSBuf_Free
Mem_PoolBlkFree
FS_OS_Unlock
Mem_PoolBlkGet
FS_FAT_LowEntryFind
FS_FAT_ClusChainFollow
FS_FAT_DateTimeParse
FS_FAT_SecNextGet
FSVol_RdLockedEx
Mem_Copy
FS_FAT_LowEntryTruncate
FS_FAT_ClusChainEndFind
FS_FAT_ClusChainAlloc
FSVol_WrLockedEx
Mem_Clr

ARM GAS  /tmp/cci2QNa3.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fs_buf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FSBuf_Clr,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	FSBuf_Clr:
  26              	.LVL0:
  27              	.LFB6:
  28              		.file 1 "rtos/uC-FS/Source/fs_buf.c"
   1:rtos/uC-FS/Source/fs_buf.c **** /*
   2:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
   3:rtos/uC-FS/Source/fs_buf.c **** *                                                uC/FS
   4:rtos/uC-FS/Source/fs_buf.c **** *                                      The Embedded File System
   5:rtos/uC-FS/Source/fs_buf.c **** *
   6:rtos/uC-FS/Source/fs_buf.c **** *                         (c) Copyright 2008-2019; Silicon Laboratories Inc.,
   7:rtos/uC-FS/Source/fs_buf.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-FS/Source/fs_buf.c **** *
   9:rtos/uC-FS/Source/fs_buf.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-FS/Source/fs_buf.c **** *
  11:rtos/uC-FS/Source/fs_buf.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-FS/Source/fs_buf.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-FS/Source/fs_buf.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-FS/Source/fs_buf.c **** *                  license, you may not use this software.
  15:rtos/uC-FS/Source/fs_buf.c **** *
  16:rtos/uC-FS/Source/fs_buf.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-FS/Source/fs_buf.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-FS/Source/fs_buf.c **** *
  19:rtos/uC-FS/Source/fs_buf.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-FS/Source/fs_buf.c **** *
  21:rtos/uC-FS/Source/fs_buf.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  23:rtos/uC-FS/Source/fs_buf.c **** */
  24:rtos/uC-FS/Source/fs_buf.c **** 
  25:rtos/uC-FS/Source/fs_buf.c **** /*
  26:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  27:rtos/uC-FS/Source/fs_buf.c **** *
  28:rtos/uC-FS/Source/fs_buf.c **** *                                    FILE SYSTEM BUFFER MANAGEMENT
  29:rtos/uC-FS/Source/fs_buf.c **** *
  30:rtos/uC-FS/Source/fs_buf.c **** * Filename : fs_buf.c
ARM GAS  /tmp/cci2QNa3.s 			page 2


  31:rtos/uC-FS/Source/fs_buf.c **** * Version  : v4.07.06
  32:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  33:rtos/uC-FS/Source/fs_buf.c **** */
  34:rtos/uC-FS/Source/fs_buf.c **** 
  35:rtos/uC-FS/Source/fs_buf.c **** /*
  36:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  37:rtos/uC-FS/Source/fs_buf.c **** *                                               MODULE
  38:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  39:rtos/uC-FS/Source/fs_buf.c **** */
  40:rtos/uC-FS/Source/fs_buf.c **** 
  41:rtos/uC-FS/Source/fs_buf.c **** #define  MICRIUM_SOURCE
  42:rtos/uC-FS/Source/fs_buf.c **** #define  FS_BUF_MODULE
  43:rtos/uC-FS/Source/fs_buf.c **** 
  44:rtos/uC-FS/Source/fs_buf.c **** 
  45:rtos/uC-FS/Source/fs_buf.c **** /*
  46:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  47:rtos/uC-FS/Source/fs_buf.c **** *                                            INCLUDE FILES
  48:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  49:rtos/uC-FS/Source/fs_buf.c **** */
  50:rtos/uC-FS/Source/fs_buf.c **** 
  51:rtos/uC-FS/Source/fs_buf.c **** #include  <cpu.h>
  52:rtos/uC-FS/Source/fs_buf.c **** #include  <cpu_core.h>
  53:rtos/uC-FS/Source/fs_buf.c **** #include  <lib_ascii.h>
  54:rtos/uC-FS/Source/fs_buf.c **** #include  <lib_mem.h>
  55:rtos/uC-FS/Source/fs_buf.c **** #include  "fs.h"
  56:rtos/uC-FS/Source/fs_buf.c **** #include  "fs_buf.h"
  57:rtos/uC-FS/Source/fs_buf.c **** #include  "fs_vol.h"
  58:rtos/uC-FS/Source/fs_buf.c **** 
  59:rtos/uC-FS/Source/fs_buf.c **** 
  60:rtos/uC-FS/Source/fs_buf.c **** /*
  61:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  62:rtos/uC-FS/Source/fs_buf.c **** *                                            LOCAL DEFINES
  63:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  64:rtos/uC-FS/Source/fs_buf.c **** */
  65:rtos/uC-FS/Source/fs_buf.c **** 
  66:rtos/uC-FS/Source/fs_buf.c **** 
  67:rtos/uC-FS/Source/fs_buf.c **** /*
  68:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  69:rtos/uC-FS/Source/fs_buf.c **** *                                           LOCAL CONSTANTS
  70:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  71:rtos/uC-FS/Source/fs_buf.c **** */
  72:rtos/uC-FS/Source/fs_buf.c **** 
  73:rtos/uC-FS/Source/fs_buf.c **** 
  74:rtos/uC-FS/Source/fs_buf.c **** /*
  75:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  76:rtos/uC-FS/Source/fs_buf.c **** *                                          LOCAL DATA TYPES
  77:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  78:rtos/uC-FS/Source/fs_buf.c **** */
  79:rtos/uC-FS/Source/fs_buf.c **** 
  80:rtos/uC-FS/Source/fs_buf.c **** 
  81:rtos/uC-FS/Source/fs_buf.c **** /*
  82:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  83:rtos/uC-FS/Source/fs_buf.c **** *                                            LOCAL TABLES
  84:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  85:rtos/uC-FS/Source/fs_buf.c **** */
  86:rtos/uC-FS/Source/fs_buf.c **** 
  87:rtos/uC-FS/Source/fs_buf.c **** 
ARM GAS  /tmp/cci2QNa3.s 			page 3


  88:rtos/uC-FS/Source/fs_buf.c **** /*
  89:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  90:rtos/uC-FS/Source/fs_buf.c **** *                                       LOCAL GLOBAL VARIABLES
  91:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
  92:rtos/uC-FS/Source/fs_buf.c **** */
  93:rtos/uC-FS/Source/fs_buf.c **** 
  94:rtos/uC-FS/Source/fs_buf.c **** static  MEM_POOL    FSBuf_Pool;                                 /* Pool of bufs.                   
  95:rtos/uC-FS/Source/fs_buf.c **** 
  96:rtos/uC-FS/Source/fs_buf.c **** static  MEM_POOL    FSBuf_DataPool;                             /* Pool of buf data.               
  97:rtos/uC-FS/Source/fs_buf.c **** 
  98:rtos/uC-FS/Source/fs_buf.c **** static  CPU_SIZE_T  FSBuf_BufSize;                              /* Size of each buf.               
  99:rtos/uC-FS/Source/fs_buf.c **** 
 100:rtos/uC-FS/Source/fs_buf.c **** 
 101:rtos/uC-FS/Source/fs_buf.c **** /*
 102:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 103:rtos/uC-FS/Source/fs_buf.c **** *                                      LOCAL FUNCTION PROTOTYPES
 104:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 105:rtos/uC-FS/Source/fs_buf.c **** */
 106:rtos/uC-FS/Source/fs_buf.c **** 
 107:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_DBG_MEM_CLR_EN == DEF_ENABLED)
 108:rtos/uC-FS/Source/fs_buf.c **** static  void  FSBuf_Clr(FS_BUF  *p_buf);
 109:rtos/uC-FS/Source/fs_buf.c **** #endif
 110:rtos/uC-FS/Source/fs_buf.c **** 
 111:rtos/uC-FS/Source/fs_buf.c **** 
 112:rtos/uC-FS/Source/fs_buf.c **** /*
 113:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 114:rtos/uC-FS/Source/fs_buf.c **** *                                     LOCAL CONFIGURATION ERRORS
 115:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 116:rtos/uC-FS/Source/fs_buf.c **** */
 117:rtos/uC-FS/Source/fs_buf.c **** 
 118:rtos/uC-FS/Source/fs_buf.c **** 
 119:rtos/uC-FS/Source/fs_buf.c **** /*
 120:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 121:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 122:rtos/uC-FS/Source/fs_buf.c **** *                                         INTERNAL FUNCTIONS
 123:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 124:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 125:rtos/uC-FS/Source/fs_buf.c **** */
 126:rtos/uC-FS/Source/fs_buf.c **** 
 127:rtos/uC-FS/Source/fs_buf.c **** /*
 128:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 129:rtos/uC-FS/Source/fs_buf.c **** *                                         FSBuf_ModuleInit()
 130:rtos/uC-FS/Source/fs_buf.c **** *
 131:rtos/uC-FS/Source/fs_buf.c **** * Description : Initialize buffer module.
 132:rtos/uC-FS/Source/fs_buf.c **** *
 133:rtos/uC-FS/Source/fs_buf.c **** * Argument(s) : buf_cnt     Number of buffers to allocate.
 134:rtos/uC-FS/Source/fs_buf.c **** *
 135:rtos/uC-FS/Source/fs_buf.c **** *               buf_size    Size of each buffer, in octets.
 136:rtos/uC-FS/Source/fs_buf.c **** *
 137:rtos/uC-FS/Source/fs_buf.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 138:rtos/uC-FS/Source/fs_buf.c **** *               ----------  Argument validated by caller.
 139:rtos/uC-FS/Source/fs_buf.c **** *
 140:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_NONE         Module initialized.
 141:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_MEM_ALLOC    Memory could not be allocated.
 142:rtos/uC-FS/Source/fs_buf.c **** *
 143:rtos/uC-FS/Source/fs_buf.c **** * Return(s)   : none.
 144:rtos/uC-FS/Source/fs_buf.c **** *
ARM GAS  /tmp/cci2QNa3.s 			page 4


 145:rtos/uC-FS/Source/fs_buf.c **** * Note(s)     : none.
 146:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 147:rtos/uC-FS/Source/fs_buf.c **** */
 148:rtos/uC-FS/Source/fs_buf.c **** 
 149:rtos/uC-FS/Source/fs_buf.c **** void  FSBuf_ModuleInit (FS_QTY       buf_cnt,
 150:rtos/uC-FS/Source/fs_buf.c ****                         CPU_SIZE_T   buf_size,
 151:rtos/uC-FS/Source/fs_buf.c ****                         FS_ERR      *p_err)
 152:rtos/uC-FS/Source/fs_buf.c **** {
 153:rtos/uC-FS/Source/fs_buf.c ****     CPU_SIZE_T  octets_reqd;
 154:rtos/uC-FS/Source/fs_buf.c ****     LIB_ERR     pool_err;
 155:rtos/uC-FS/Source/fs_buf.c **** 
 156:rtos/uC-FS/Source/fs_buf.c **** 
 157:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_TRIAL_EN == DEF_ENABLED)                            /* Trial limitation: max 4 buf.    
 158:rtos/uC-FS/Source/fs_buf.c ****     if (buf_cnt > FS_TRIAL_MAX_BUF_CNT) {
 159:rtos/uC-FS/Source/fs_buf.c ****        *p_err = FS_ERR_INVALID_CFG;
 160:rtos/uC-FS/Source/fs_buf.c ****         return;
 161:rtos/uC-FS/Source/fs_buf.c ****     }
 162:rtos/uC-FS/Source/fs_buf.c **** #endif
 163:rtos/uC-FS/Source/fs_buf.c **** 
 164:rtos/uC-FS/Source/fs_buf.c ****                                                                 /* ------------------- INIT BUF POO
 165:rtos/uC-FS/Source/fs_buf.c ****     Mem_PoolCreate(&FSBuf_Pool,                                 /* Create buf pool.                
 166:rtos/uC-FS/Source/fs_buf.c ****                     DEF_NULL,
 167:rtos/uC-FS/Source/fs_buf.c ****                     0,
 168:rtos/uC-FS/Source/fs_buf.c ****                     buf_cnt,
 169:rtos/uC-FS/Source/fs_buf.c ****                     sizeof(FS_BUF),
 170:rtos/uC-FS/Source/fs_buf.c ****                     sizeof(CPU_ALIGN),
 171:rtos/uC-FS/Source/fs_buf.c ****                    &octets_reqd,
 172:rtos/uC-FS/Source/fs_buf.c ****                    &pool_err);
 173:rtos/uC-FS/Source/fs_buf.c **** 
 174:rtos/uC-FS/Source/fs_buf.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
 175:rtos/uC-FS/Source/fs_buf.c ****        *p_err = FS_ERR_MEM_ALLOC;
 176:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_ModuleInit(): Could not alloc mem for bufs: %d octets required.\r\n",
 177:rtos/uC-FS/Source/fs_buf.c ****         return;
 178:rtos/uC-FS/Source/fs_buf.c ****     }
 179:rtos/uC-FS/Source/fs_buf.c **** 
 180:rtos/uC-FS/Source/fs_buf.c **** 
 181:rtos/uC-FS/Source/fs_buf.c ****     Mem_PoolCreate(&FSBuf_DataPool,                             /* Create buf data pool.           
 182:rtos/uC-FS/Source/fs_buf.c ****                     DEF_NULL,
 183:rtos/uC-FS/Source/fs_buf.c ****                     0,
 184:rtos/uC-FS/Source/fs_buf.c ****                     buf_cnt,
 185:rtos/uC-FS/Source/fs_buf.c ****                     buf_size,
 186:rtos/uC-FS/Source/fs_buf.c ****                     FS_CFG_BUF_ALIGN_OCTETS,
 187:rtos/uC-FS/Source/fs_buf.c ****                    &octets_reqd,
 188:rtos/uC-FS/Source/fs_buf.c ****                    &pool_err);
 189:rtos/uC-FS/Source/fs_buf.c **** 
 190:rtos/uC-FS/Source/fs_buf.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
 191:rtos/uC-FS/Source/fs_buf.c ****        *p_err = FS_ERR_MEM_ALLOC;
 192:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_ModuleInit(): Could not alloc mem for buf data: %d octets required.\r
 193:rtos/uC-FS/Source/fs_buf.c ****         return;
 194:rtos/uC-FS/Source/fs_buf.c ****     }
 195:rtos/uC-FS/Source/fs_buf.c **** 
 196:rtos/uC-FS/Source/fs_buf.c ****     FSBuf_BufSize = buf_size;
 197:rtos/uC-FS/Source/fs_buf.c **** }
 198:rtos/uC-FS/Source/fs_buf.c **** 
 199:rtos/uC-FS/Source/fs_buf.c **** 
 200:rtos/uC-FS/Source/fs_buf.c **** /*
 201:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
ARM GAS  /tmp/cci2QNa3.s 			page 5


 202:rtos/uC-FS/Source/fs_buf.c **** *                                             FSBuf_Get()
 203:rtos/uC-FS/Source/fs_buf.c **** *
 204:rtos/uC-FS/Source/fs_buf.c **** * Description : Allocate & initialize a buffer.
 205:rtos/uC-FS/Source/fs_buf.c **** *
 206:rtos/uC-FS/Source/fs_buf.c **** * Argument(s) : p_vol       Pointer to volume to associate with buffer.
 207:rtos/uC-FS/Source/fs_buf.c **** *
 208:rtos/uC-FS/Source/fs_buf.c **** * Return(s)   : Pointer to a buffer, if NO errors.
 209:rtos/uC-FS/Source/fs_buf.c **** *               Pointer to NULL,     otherwise.
 210:rtos/uC-FS/Source/fs_buf.c **** *
 211:rtos/uC-FS/Source/fs_buf.c **** * Note(s)     : (1) Critical sections are necessary to protect the getting & freeing of buffers so 
 212:rtos/uC-FS/Source/fs_buf.c **** *                   universal locking mechanism is required during these operations.
 213:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 214:rtos/uC-FS/Source/fs_buf.c **** */
 215:rtos/uC-FS/Source/fs_buf.c **** 
 216:rtos/uC-FS/Source/fs_buf.c **** FS_BUF  *FSBuf_Get (FS_VOL  *p_vol)
 217:rtos/uC-FS/Source/fs_buf.c **** {
 218:rtos/uC-FS/Source/fs_buf.c ****     FS_BUF   *p_buf;
 219:rtos/uC-FS/Source/fs_buf.c ****     void     *p_buf_data;
 220:rtos/uC-FS/Source/fs_buf.c ****     LIB_ERR   pool_err;
 221:rtos/uC-FS/Source/fs_buf.c ****     CPU_SR_ALLOC();
 222:rtos/uC-FS/Source/fs_buf.c **** 
 223:rtos/uC-FS/Source/fs_buf.c **** 
 224:rtos/uC-FS/Source/fs_buf.c ****     CPU_CRITICAL_ENTER();
 225:rtos/uC-FS/Source/fs_buf.c ****     p_buf      = (FS_BUF *)Mem_PoolBlkGet(&FSBuf_Pool,
 226:rtos/uC-FS/Source/fs_buf.c ****                                            sizeof(FS_BUF),
 227:rtos/uC-FS/Source/fs_buf.c ****                                           &pool_err);
 228:rtos/uC-FS/Source/fs_buf.c ****     (void)pool_err;                                            /* Err ignored. Ret val chk'd instea
 229:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf == (FS_BUF *)0) {
 230:rtos/uC-FS/Source/fs_buf.c ****         CPU_CRITICAL_EXIT();
 231:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_Get(): Could not alloc buf from pool.\r\n"));
 232:rtos/uC-FS/Source/fs_buf.c ****         return ((FS_BUF *)0);
 233:rtos/uC-FS/Source/fs_buf.c ****     }
 234:rtos/uC-FS/Source/fs_buf.c **** 
 235:rtos/uC-FS/Source/fs_buf.c ****     p_buf_data = (void *)Mem_PoolBlkGet(&FSBuf_DataPool,
 236:rtos/uC-FS/Source/fs_buf.c ****                                          FSBuf_BufSize,
 237:rtos/uC-FS/Source/fs_buf.c ****                                         &pool_err);
 238:rtos/uC-FS/Source/fs_buf.c ****     (void)pool_err;                                            /* Err ignored. Ret val chk'd instea
 239:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf_data == (void *)0) {
 240:rtos/uC-FS/Source/fs_buf.c ****         Mem_PoolBlkFree(        &FSBuf_Pool,
 241:rtos/uC-FS/Source/fs_buf.c ****                         (void *) p_buf,
 242:rtos/uC-FS/Source/fs_buf.c ****                                 &pool_err);
 243:rtos/uC-FS/Source/fs_buf.c ****         CPU_CRITICAL_EXIT();
 244:rtos/uC-FS/Source/fs_buf.c ****         (void)pool_err;                                        /* Err ignored. Already exiting on p
 245:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_Get(): Could not alloc buf data from pool.\r\n"));
 246:rtos/uC-FS/Source/fs_buf.c ****         return ((FS_BUF *)0);
 247:rtos/uC-FS/Source/fs_buf.c ****     }
 248:rtos/uC-FS/Source/fs_buf.c ****     CPU_CRITICAL_EXIT();
 249:rtos/uC-FS/Source/fs_buf.c **** 
 250:rtos/uC-FS/Source/fs_buf.c ****     p_buf->Size    = FSBuf_BufSize;
 251:rtos/uC-FS/Source/fs_buf.c **** 
 252:rtos/uC-FS/Source/fs_buf.c ****     p_buf->State   = FS_BUF_STATE_NONE;
 253:rtos/uC-FS/Source/fs_buf.c ****     p_buf->Start   = 0u;
 254:rtos/uC-FS/Source/fs_buf.c ****     p_buf->DataPtr = p_buf_data;
 255:rtos/uC-FS/Source/fs_buf.c ****     p_buf->VolPtr  = p_vol;
 256:rtos/uC-FS/Source/fs_buf.c **** 
 257:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_DBG_MEM_CLR_EN == DEF_ENABLED)
 258:rtos/uC-FS/Source/fs_buf.c ****     Mem_Clr(p_buf->DataPtr, FSBuf_BufSize);
ARM GAS  /tmp/cci2QNa3.s 			page 6


 259:rtos/uC-FS/Source/fs_buf.c **** #endif
 260:rtos/uC-FS/Source/fs_buf.c **** 
 261:rtos/uC-FS/Source/fs_buf.c ****     return (p_buf);
 262:rtos/uC-FS/Source/fs_buf.c **** }
 263:rtos/uC-FS/Source/fs_buf.c **** 
 264:rtos/uC-FS/Source/fs_buf.c **** 
 265:rtos/uC-FS/Source/fs_buf.c **** /*
 266:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 267:rtos/uC-FS/Source/fs_buf.c **** *                                            FSBuf_Free()
 268:rtos/uC-FS/Source/fs_buf.c **** *
 269:rtos/uC-FS/Source/fs_buf.c **** * Description : Free a buffer.
 270:rtos/uC-FS/Source/fs_buf.c **** *
 271:rtos/uC-FS/Source/fs_buf.c **** * Argument(s) : p_buf       Pointer to a buffer.
 272:rtos/uC-FS/Source/fs_buf.c **** *               ----------  Argument validated by caller.
 273:rtos/uC-FS/Source/fs_buf.c **** *
 274:rtos/uC-FS/Source/fs_buf.c **** * Return(s)   : none.
 275:rtos/uC-FS/Source/fs_buf.c **** *
 276:rtos/uC-FS/Source/fs_buf.c **** * Note(s)     : (1) See 'FSBuf_Get() Note #1'.
 277:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 278:rtos/uC-FS/Source/fs_buf.c **** */
 279:rtos/uC-FS/Source/fs_buf.c **** 
 280:rtos/uC-FS/Source/fs_buf.c **** void  FSBuf_Free (FS_BUF  *p_buf)
 281:rtos/uC-FS/Source/fs_buf.c **** {
 282:rtos/uC-FS/Source/fs_buf.c ****     void     *p_buf_data;
 283:rtos/uC-FS/Source/fs_buf.c ****     LIB_ERR   pool_err;
 284:rtos/uC-FS/Source/fs_buf.c ****     CPU_SR_ALLOC();
 285:rtos/uC-FS/Source/fs_buf.c **** 
 286:rtos/uC-FS/Source/fs_buf.c ****                                                                 /* ------------------- FREE TO POOL
 287:rtos/uC-FS/Source/fs_buf.c ****     CPU_CRITICAL_ENTER();
 288:rtos/uC-FS/Source/fs_buf.c ****     p_buf_data = p_buf->DataPtr;                                /* Free buf data.                  
 289:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf_data != (CPU_INT08U *)0) {
 290:rtos/uC-FS/Source/fs_buf.c ****         Mem_PoolBlkFree(        &FSBuf_DataPool,
 291:rtos/uC-FS/Source/fs_buf.c ****                         (void *) p_buf_data,
 292:rtos/uC-FS/Source/fs_buf.c ****                                 &pool_err);
 293:rtos/uC-FS/Source/fs_buf.c ****        (void)pool_err;                                         /* Err if already free not relevant.
 294:rtos/uC-FS/Source/fs_buf.c ****     }
 295:rtos/uC-FS/Source/fs_buf.c **** 
 296:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_DBG_MEM_CLR_EN == DEF_ENABLED)
 297:rtos/uC-FS/Source/fs_buf.c ****     FSBuf_Clr(p_buf);
 298:rtos/uC-FS/Source/fs_buf.c **** #endif
 299:rtos/uC-FS/Source/fs_buf.c **** 
 300:rtos/uC-FS/Source/fs_buf.c ****     Mem_PoolBlkFree(        &FSBuf_Pool,                        /* Free buf.                       
 301:rtos/uC-FS/Source/fs_buf.c ****                     (void *) p_buf,
 302:rtos/uC-FS/Source/fs_buf.c ****                             &pool_err);
 303:rtos/uC-FS/Source/fs_buf.c ****    (void)pool_err;                                             /* Err if already free not relevant.
 304:rtos/uC-FS/Source/fs_buf.c ****     CPU_CRITICAL_EXIT();
 305:rtos/uC-FS/Source/fs_buf.c **** }
 306:rtos/uC-FS/Source/fs_buf.c **** 
 307:rtos/uC-FS/Source/fs_buf.c **** 
 308:rtos/uC-FS/Source/fs_buf.c **** /*
 309:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 310:rtos/uC-FS/Source/fs_buf.c **** *                                            FSBuf_Flush()
 311:rtos/uC-FS/Source/fs_buf.c **** *
 312:rtos/uC-FS/Source/fs_buf.c **** * Description : Flush buffer.
 313:rtos/uC-FS/Source/fs_buf.c **** *
 314:rtos/uC-FS/Source/fs_buf.c **** * Argument(s) : p_buf       Pointer to a buffer.
 315:rtos/uC-FS/Source/fs_buf.c **** *               ----------  Argument validated by caller.
ARM GAS  /tmp/cci2QNa3.s 			page 7


 316:rtos/uC-FS/Source/fs_buf.c **** *
 317:rtos/uC-FS/Source/fs_buf.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 318:rtos/uC-FS/Source/fs_buf.c **** *               ----------  Argument validated by caller.
 319:rtos/uC-FS/Source/fs_buf.c **** *
 320:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_NONE                   Buffer flushed.
 321:rtos/uC-FS/Source/fs_buf.c **** *
 322:rtos/uC-FS/Source/fs_buf.c **** *                                                             ------ RETURNED BY FSVol_WrLockedEx()
 323:rtos/uC-FS/Source/fs_buf.c **** *                                                             ------ RETURNED BY FSVol_RdLockedEx()
 324:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level formatte
 325:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_DEV_IO                 Device I/O error.
 326:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_DEV_TIMEOUT            Device timeout error.
 327:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_DEV_NOT_PRESENT        Device is not present.
 328:rtos/uC-FS/Source/fs_buf.c **** *
 329:rtos/uC-FS/Source/fs_buf.c **** * Return(s)   : none.
 330:rtos/uC-FS/Source/fs_buf.c **** *
 331:rtos/uC-FS/Source/fs_buf.c **** * Note(s)     : none.
 332:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 333:rtos/uC-FS/Source/fs_buf.c **** */
 334:rtos/uC-FS/Source/fs_buf.c **** 
 335:rtos/uC-FS/Source/fs_buf.c **** void  FSBuf_Flush (FS_BUF  *p_buf,
 336:rtos/uC-FS/Source/fs_buf.c ****                    FS_ERR  *p_err)
 337:rtos/uC-FS/Source/fs_buf.c **** {
 338:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 339:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf->State == FS_BUF_STATE_DIRTY) {                   /* ---------------- FLUSH BUF CONTE
 340:rtos/uC-FS/Source/fs_buf.c ****         FSVol_WrLockedEx(p_buf->VolPtr,                         /* Wr sec.                         
 341:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 342:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->Start,
 343:rtos/uC-FS/Source/fs_buf.c ****                          1u,
 344:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->SecType,
 345:rtos/uC-FS/Source/fs_buf.c ****                          p_err);
 346:rtos/uC-FS/Source/fs_buf.c ****         if (*p_err != FS_ERR_NONE) {
 347:rtos/uC-FS/Source/fs_buf.c ****             p_buf->State = FS_BUF_STATE_NONE;
 348:rtos/uC-FS/Source/fs_buf.c ****             return;
 349:rtos/uC-FS/Source/fs_buf.c ****         }
 350:rtos/uC-FS/Source/fs_buf.c ****     }
 351:rtos/uC-FS/Source/fs_buf.c **** #endif
 352:rtos/uC-FS/Source/fs_buf.c **** 
 353:rtos/uC-FS/Source/fs_buf.c ****     p_buf->State = FS_BUF_STATE_NONE;                           /* Update buf state.               
 354:rtos/uC-FS/Source/fs_buf.c **** 
 355:rtos/uC-FS/Source/fs_buf.c ****    *p_err = FS_ERR_NONE;
 356:rtos/uC-FS/Source/fs_buf.c **** }
 357:rtos/uC-FS/Source/fs_buf.c **** 
 358:rtos/uC-FS/Source/fs_buf.c **** 
 359:rtos/uC-FS/Source/fs_buf.c **** /*
 360:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 361:rtos/uC-FS/Source/fs_buf.c **** *                                          FSBuf_MarkDirty()
 362:rtos/uC-FS/Source/fs_buf.c **** *
 363:rtos/uC-FS/Source/fs_buf.c **** * Description : Mark buffer as dirty.
 364:rtos/uC-FS/Source/fs_buf.c **** *
 365:rtos/uC-FS/Source/fs_buf.c **** * Argument(s) : p_buf       Pointer to a buffer.
 366:rtos/uC-FS/Source/fs_buf.c **** *               ----------  Argument validated by caller.
 367:rtos/uC-FS/Source/fs_buf.c **** *
 368:rtos/uC-FS/Source/fs_buf.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 369:rtos/uC-FS/Source/fs_buf.c **** *               ----------  Argument validated by caller.
 370:rtos/uC-FS/Source/fs_buf.c **** *
 371:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_NONE    Buffer marked.
 372:rtos/uC-FS/Source/fs_buf.c **** *
ARM GAS  /tmp/cci2QNa3.s 			page 8


 373:rtos/uC-FS/Source/fs_buf.c **** * Return(s)   : none.
 374:rtos/uC-FS/Source/fs_buf.c **** *
 375:rtos/uC-FS/Source/fs_buf.c **** * Note(s)     : none.
 376:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 377:rtos/uC-FS/Source/fs_buf.c **** */
 378:rtos/uC-FS/Source/fs_buf.c **** 
 379:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 380:rtos/uC-FS/Source/fs_buf.c **** void  FSBuf_MarkDirty (FS_BUF  *p_buf,
 381:rtos/uC-FS/Source/fs_buf.c ****                        FS_ERR  *p_err)
 382:rtos/uC-FS/Source/fs_buf.c **** {
 383:rtos/uC-FS/Source/fs_buf.c ****     p_buf->State = FS_BUF_STATE_DIRTY;
 384:rtos/uC-FS/Source/fs_buf.c ****    *p_err = FS_ERR_NONE;
 385:rtos/uC-FS/Source/fs_buf.c **** }
 386:rtos/uC-FS/Source/fs_buf.c **** #endif
 387:rtos/uC-FS/Source/fs_buf.c **** 
 388:rtos/uC-FS/Source/fs_buf.c **** 
 389:rtos/uC-FS/Source/fs_buf.c **** /*
 390:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 391:rtos/uC-FS/Source/fs_buf.c **** *                                             FSBuf_Set()
 392:rtos/uC-FS/Source/fs_buf.c **** *
 393:rtos/uC-FS/Source/fs_buf.c **** * Description : Set buffer sector.
 394:rtos/uC-FS/Source/fs_buf.c **** *
 395:rtos/uC-FS/Source/fs_buf.c **** * Argument(s) : p_buf       Pointer to a buffer.
 396:rtos/uC-FS/Source/fs_buf.c **** *               ----------  Argument validated by caller.
 397:rtos/uC-FS/Source/fs_buf.c **** *
 398:rtos/uC-FS/Source/fs_buf.c **** *               start       Sector number.
 399:rtos/uC-FS/Source/fs_buf.c **** *
 400:rtos/uC-FS/Source/fs_buf.c **** *               type        Type of sector :
 401:rtos/uC-FS/Source/fs_buf.c **** *
 402:rtos/uC-FS/Source/fs_buf.c **** *                               FS_VOL_SEC_TYPE_MGMT    Management sector.
 403:rtos/uC-FS/Source/fs_buf.c **** *                               FS_VOL_SEC_TYPE_DIR     Directory sector.
 404:rtos/uC-FS/Source/fs_buf.c **** *                               FS_VOL_SEC_TYPE_FILE    File sector.
 405:rtos/uC-FS/Source/fs_buf.c **** *
 406:rtos/uC-FS/Source/fs_buf.c **** *               rd          Indicates whether sector contents on volume will be read into buffer :
 407:rtos/uC-FS/Source/fs_buf.c **** *
 408:rtos/uC-FS/Source/fs_buf.c **** *                               DEF_YES    Read sector contents on volume into buffer.
 409:rtos/uC-FS/Source/fs_buf.c **** *                               DEF_NO     Leave buffer contents alone.
 410:rtos/uC-FS/Source/fs_buf.c **** *
 411:rtos/uC-FS/Source/fs_buf.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 412:rtos/uC-FS/Source/fs_buf.c **** *               ----------  Argument validated by caller.
 413:rtos/uC-FS/Source/fs_buf.c **** *
 414:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_NONE                   Buffer set.
 415:rtos/uC-FS/Source/fs_buf.c **** *
 416:rtos/uC-FS/Source/fs_buf.c **** *                                                             ------ RETURNED BY FSVol_WrLockedEx()
 417:rtos/uC-FS/Source/fs_buf.c **** *                                                             ------ RETURNED BY FSVol_RdLockedEx()
 418:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_DEV_INVALID_LOW_FMT    Device needs to be low-level formatte
 419:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_DEV_IO                 Device I/O error.
 420:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_DEV_TIMEOUT            Device timeout error.
 421:rtos/uC-FS/Source/fs_buf.c **** *                               FS_ERR_DEV_NOT_PRESENT        Device is not present.
 422:rtos/uC-FS/Source/fs_buf.c **** *
 423:rtos/uC-FS/Source/fs_buf.c **** * Return(s)   : none.
 424:rtos/uC-FS/Source/fs_buf.c **** *
 425:rtos/uC-FS/Source/fs_buf.c **** * Note(s)     : none.
 426:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 427:rtos/uC-FS/Source/fs_buf.c **** */
 428:rtos/uC-FS/Source/fs_buf.c **** 
 429:rtos/uC-FS/Source/fs_buf.c **** void  FSBuf_Set (FS_BUF       *p_buf,
ARM GAS  /tmp/cci2QNa3.s 			page 9


 430:rtos/uC-FS/Source/fs_buf.c ****                  FS_SEC_NBR    start,
 431:rtos/uC-FS/Source/fs_buf.c ****                  FS_FLAGS      sec_type,
 432:rtos/uC-FS/Source/fs_buf.c ****                  CPU_BOOLEAN   rd,
 433:rtos/uC-FS/Source/fs_buf.c ****                  FS_ERR       *p_err)
 434:rtos/uC-FS/Source/fs_buf.c **** {
 435:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf->State != FS_BUF_STATE_NONE) {                    /* -------------------- DATA IN BUF
 436:rtos/uC-FS/Source/fs_buf.c ****         if (p_buf->Start == start) {
 437:rtos/uC-FS/Source/fs_buf.c ****            *p_err = FS_ERR_NONE;
 438:rtos/uC-FS/Source/fs_buf.c ****             return;
 439:rtos/uC-FS/Source/fs_buf.c ****         }
 440:rtos/uC-FS/Source/fs_buf.c ****     }
 441:rtos/uC-FS/Source/fs_buf.c **** 
 442:rtos/uC-FS/Source/fs_buf.c **** 
 443:rtos/uC-FS/Source/fs_buf.c **** 
 444:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 445:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf->State == FS_BUF_STATE_DIRTY) {                   /* ---------------- FLUSH BUF CONTE
 446:rtos/uC-FS/Source/fs_buf.c ****         FSVol_WrLockedEx(p_buf->VolPtr,                         /* Wr sec.                         
 447:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 448:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->Start,
 449:rtos/uC-FS/Source/fs_buf.c ****                          1u,
 450:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->SecType,
 451:rtos/uC-FS/Source/fs_buf.c ****                          p_err);
 452:rtos/uC-FS/Source/fs_buf.c ****         if (*p_err != FS_ERR_NONE) {
 453:rtos/uC-FS/Source/fs_buf.c ****             return;
 454:rtos/uC-FS/Source/fs_buf.c ****         }
 455:rtos/uC-FS/Source/fs_buf.c **** 
 456:rtos/uC-FS/Source/fs_buf.c ****         p_buf->State = FS_BUF_STATE_USED;                       /* Update buf state.               
 457:rtos/uC-FS/Source/fs_buf.c ****     }
 458:rtos/uC-FS/Source/fs_buf.c **** #endif
 459:rtos/uC-FS/Source/fs_buf.c **** 
 460:rtos/uC-FS/Source/fs_buf.c **** 
 461:rtos/uC-FS/Source/fs_buf.c **** 
 462:rtos/uC-FS/Source/fs_buf.c ****     if (rd == DEF_YES) {                                        /* ----------------- INIT BUF CONTE
 463:rtos/uC-FS/Source/fs_buf.c ****         FSVol_RdLockedEx(p_buf->VolPtr,                         /* Rd sec.                         
 464:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 465:rtos/uC-FS/Source/fs_buf.c ****                          start,
 466:rtos/uC-FS/Source/fs_buf.c ****                          1u,
 467:rtos/uC-FS/Source/fs_buf.c ****                          sec_type,
 468:rtos/uC-FS/Source/fs_buf.c ****                          p_err);
 469:rtos/uC-FS/Source/fs_buf.c ****         if (*p_err != FS_ERR_NONE) {
 470:rtos/uC-FS/Source/fs_buf.c ****             p_buf->State = FS_BUF_STATE_NONE;
 471:rtos/uC-FS/Source/fs_buf.c ****             return;
 472:rtos/uC-FS/Source/fs_buf.c ****         }
 473:rtos/uC-FS/Source/fs_buf.c ****     }
 474:rtos/uC-FS/Source/fs_buf.c **** 
 475:rtos/uC-FS/Source/fs_buf.c ****     p_buf->State   = FS_BUF_STATE_USED;                         /* Update buf state.               
 476:rtos/uC-FS/Source/fs_buf.c ****     p_buf->Start   = start;
 477:rtos/uC-FS/Source/fs_buf.c ****     p_buf->SecType = sec_type;
 478:rtos/uC-FS/Source/fs_buf.c ****    *p_err = FS_ERR_NONE;
 479:rtos/uC-FS/Source/fs_buf.c **** }
 480:rtos/uC-FS/Source/fs_buf.c **** 
 481:rtos/uC-FS/Source/fs_buf.c **** 
 482:rtos/uC-FS/Source/fs_buf.c **** /*
 483:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 484:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 485:rtos/uC-FS/Source/fs_buf.c **** *                                           LOCAL FUNCTIONS
 486:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
ARM GAS  /tmp/cci2QNa3.s 			page 10


 487:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 488:rtos/uC-FS/Source/fs_buf.c **** */
 489:rtos/uC-FS/Source/fs_buf.c **** 
 490:rtos/uC-FS/Source/fs_buf.c **** /*
 491:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 492:rtos/uC-FS/Source/fs_buf.c **** *                                             FSBuf_Clr()
 493:rtos/uC-FS/Source/fs_buf.c **** *
 494:rtos/uC-FS/Source/fs_buf.c **** * Description : Clear a buffer.
 495:rtos/uC-FS/Source/fs_buf.c **** *
 496:rtos/uC-FS/Source/fs_buf.c **** * Argument(s) : p_buf       Pointer to a buffer.
 497:rtos/uC-FS/Source/fs_buf.c **** *               ----------  Argument validated by caller.
 498:rtos/uC-FS/Source/fs_buf.c **** *
 499:rtos/uC-FS/Source/fs_buf.c **** * Return(s)   : none.
 500:rtos/uC-FS/Source/fs_buf.c **** *
 501:rtos/uC-FS/Source/fs_buf.c **** * Note(s)     : none.
 502:rtos/uC-FS/Source/fs_buf.c **** ***************************************************************************************************
 503:rtos/uC-FS/Source/fs_buf.c **** */
 504:rtos/uC-FS/Source/fs_buf.c **** 
 505:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_DBG_MEM_CLR_EN == DEF_ENABLED)
 506:rtos/uC-FS/Source/fs_buf.c **** static  void  FSBuf_Clr (FS_BUF  *p_buf)
 507:rtos/uC-FS/Source/fs_buf.c **** {
  29              		.loc 1 507 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 508:rtos/uC-FS/Source/fs_buf.c ****     p_buf->State   =  FS_BUF_STATE_NONE;
  34              		.loc 1 508 5 view .LVU1
  35              		.loc 1 508 20 is_stmt 0 view .LVU2
  36 0000 0023     		movs	r3, #0
  37 0002 8380     		strh	r3, [r0, #4]	@ movhi
 509:rtos/uC-FS/Source/fs_buf.c ****     p_buf->Start   =  0u;
  38              		.loc 1 509 5 is_stmt 1 view .LVU3
  39              		.loc 1 509 20 is_stmt 0 view .LVU4
  40 0004 8360     		str	r3, [r0, #8]
 510:rtos/uC-FS/Source/fs_buf.c ****     p_buf->SecType =  FS_VOL_SEC_TYPE_UNKNOWN;
  41              		.loc 1 510 5 is_stmt 1 view .LVU5
  42              		.loc 1 510 20 is_stmt 0 view .LVU6
  43 0006 C360     		str	r3, [r0, #12]
 511:rtos/uC-FS/Source/fs_buf.c ****     p_buf->DataPtr = (void   *)0;
  44              		.loc 1 511 5 is_stmt 1 view .LVU7
  45              		.loc 1 511 20 is_stmt 0 view .LVU8
  46 0008 0361     		str	r3, [r0, #16]
 512:rtos/uC-FS/Source/fs_buf.c ****     p_buf->VolPtr  = (FS_VOL *)0;
  47              		.loc 1 512 5 is_stmt 1 view .LVU9
  48              		.loc 1 512 20 is_stmt 0 view .LVU10
  49 000a 4361     		str	r3, [r0, #20]
 513:rtos/uC-FS/Source/fs_buf.c **** }
  50              		.loc 1 513 1 view .LVU11
  51 000c 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE6:
  55              		.section	.text.FSBuf_ModuleInit,"ax",%progbits
  56              		.align	1
  57              		.global	FSBuf_ModuleInit
  58              		.syntax unified
  59              		.thumb
ARM GAS  /tmp/cci2QNa3.s 			page 11


  60              		.thumb_func
  61              		.fpu fpv4-sp-d16
  63              	FSBuf_ModuleInit:
  64              	.LVL1:
  65              	.LFB0:
 152:rtos/uC-FS/Source/fs_buf.c ****     CPU_SIZE_T  octets_reqd;
  66              		.loc 1 152 1 is_stmt 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 0, uses_anonymous_args = 0
 152:rtos/uC-FS/Source/fs_buf.c ****     CPU_SIZE_T  octets_reqd;
  70              		.loc 1 152 1 is_stmt 0 view .LVU13
  71 0000 70B5     		push	{r4, r5, r6, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 16
  74              		.cfi_offset 4, -16
  75              		.cfi_offset 5, -12
  76              		.cfi_offset 6, -8
  77              		.cfi_offset 14, -4
  78 0002 86B0     		sub	sp, sp, #24
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 40
  81 0004 0446     		mov	r4, r0
  82 0006 0E46     		mov	r6, r1
  83 0008 1546     		mov	r5, r2
 153:rtos/uC-FS/Source/fs_buf.c ****     LIB_ERR     pool_err;
  84              		.loc 1 153 5 is_stmt 1 view .LVU14
 154:rtos/uC-FS/Source/fs_buf.c **** 
  85              		.loc 1 154 5 view .LVU15
 165:rtos/uC-FS/Source/fs_buf.c ****                     DEF_NULL,
  86              		.loc 1 165 5 view .LVU16
  87 000a 0DF11203 		add	r3, sp, #18
  88 000e 0393     		str	r3, [sp, #12]
  89 0010 05AB     		add	r3, sp, #20
  90 0012 0293     		str	r3, [sp, #8]
  91 0014 0423     		movs	r3, #4
  92 0016 0193     		str	r3, [sp, #4]
  93 0018 1823     		movs	r3, #24
  94 001a 0093     		str	r3, [sp]
  95 001c 0346     		mov	r3, r0
  96 001e 0022     		movs	r2, #0
  97              	.LVL2:
 165:rtos/uC-FS/Source/fs_buf.c ****                     DEF_NULL,
  98              		.loc 1 165 5 is_stmt 0 view .LVU17
  99 0020 1146     		mov	r1, r2
 100              	.LVL3:
 165:rtos/uC-FS/Source/fs_buf.c ****                     DEF_NULL,
 101              		.loc 1 165 5 view .LVU18
 102 0022 1348     		ldr	r0, .L8
 103              	.LVL4:
 165:rtos/uC-FS/Source/fs_buf.c ****                     DEF_NULL,
 104              		.loc 1 165 5 view .LVU19
 105 0024 FFF7FEFF 		bl	Mem_PoolCreate
 106              	.LVL5:
 174:rtos/uC-FS/Source/fs_buf.c ****        *p_err = FS_ERR_MEM_ALLOC;
 107              		.loc 1 174 5 is_stmt 1 view .LVU20
 174:rtos/uC-FS/Source/fs_buf.c ****        *p_err = FS_ERR_MEM_ALLOC;
ARM GAS  /tmp/cci2QNa3.s 			page 12


 108              		.loc 1 174 18 is_stmt 0 view .LVU21
 109 0028 BDF81220 		ldrh	r2, [sp, #18]
 174:rtos/uC-FS/Source/fs_buf.c ****        *p_err = FS_ERR_MEM_ALLOC;
 110              		.loc 1 174 8 view .LVU22
 111 002c 42F21073 		movw	r3, #10000
 112 0030 9A42     		cmp	r2, r3
 113 0032 03D0     		beq	.L3
 175:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_ModuleInit(): Could not alloc mem for bufs: %d octets required.\r\n",
 114              		.loc 1 175 8 is_stmt 1 view .LVU23
 175:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_ModuleInit(): Could not alloc mem for bufs: %d octets required.\r\n",
 115              		.loc 1 175 15 is_stmt 0 view .LVU24
 116 0034 1123     		movs	r3, #17
 117 0036 2B80     		strh	r3, [r5]	@ movhi
 176:rtos/uC-FS/Source/fs_buf.c ****         return;
 118              		.loc 1 176 114 is_stmt 1 view .LVU25
 177:rtos/uC-FS/Source/fs_buf.c ****     }
 119              		.loc 1 177 9 view .LVU26
 120              	.L2:
 197:rtos/uC-FS/Source/fs_buf.c **** 
 121              		.loc 1 197 1 is_stmt 0 view .LVU27
 122 0038 06B0     		add	sp, sp, #24
 123              	.LCFI2:
 124              		.cfi_remember_state
 125              		.cfi_def_cfa_offset 16
 126              		@ sp needed
 127 003a 70BD     		pop	{r4, r5, r6, pc}
 128              	.LVL6:
 129              	.L3:
 130              	.LCFI3:
 131              		.cfi_restore_state
 181:rtos/uC-FS/Source/fs_buf.c ****                     DEF_NULL,
 132              		.loc 1 181 5 is_stmt 1 view .LVU28
 133 003c 0DF11203 		add	r3, sp, #18
 134 0040 0393     		str	r3, [sp, #12]
 135 0042 05AB     		add	r3, sp, #20
 136 0044 0293     		str	r3, [sp, #8]
 137 0046 0423     		movs	r3, #4
 138 0048 0193     		str	r3, [sp, #4]
 139 004a 0096     		str	r6, [sp]
 140 004c 2346     		mov	r3, r4
 141 004e 0022     		movs	r2, #0
 142 0050 1146     		mov	r1, r2
 143 0052 0848     		ldr	r0, .L8+4
 144 0054 FFF7FEFF 		bl	Mem_PoolCreate
 145              	.LVL7:
 190:rtos/uC-FS/Source/fs_buf.c ****        *p_err = FS_ERR_MEM_ALLOC;
 146              		.loc 1 190 5 view .LVU29
 190:rtos/uC-FS/Source/fs_buf.c ****        *p_err = FS_ERR_MEM_ALLOC;
 147              		.loc 1 190 18 is_stmt 0 view .LVU30
 148 0058 BDF81220 		ldrh	r2, [sp, #18]
 190:rtos/uC-FS/Source/fs_buf.c ****        *p_err = FS_ERR_MEM_ALLOC;
 149              		.loc 1 190 8 view .LVU31
 150 005c 42F21073 		movw	r3, #10000
 151 0060 9A42     		cmp	r2, r3
 152 0062 02D0     		beq	.L5
 191:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_ModuleInit(): Could not alloc mem for buf data: %d octets required.\r
 153              		.loc 1 191 8 is_stmt 1 view .LVU32
ARM GAS  /tmp/cci2QNa3.s 			page 13


 191:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_ModuleInit(): Could not alloc mem for buf data: %d octets required.\r
 154              		.loc 1 191 15 is_stmt 0 view .LVU33
 155 0064 1123     		movs	r3, #17
 156 0066 2B80     		strh	r3, [r5]	@ movhi
 192:rtos/uC-FS/Source/fs_buf.c ****         return;
 157              		.loc 1 192 118 is_stmt 1 view .LVU34
 193:rtos/uC-FS/Source/fs_buf.c ****     }
 158              		.loc 1 193 9 view .LVU35
 159 0068 E6E7     		b	.L2
 160              	.L5:
 196:rtos/uC-FS/Source/fs_buf.c **** }
 161              		.loc 1 196 5 view .LVU36
 196:rtos/uC-FS/Source/fs_buf.c **** }
 162              		.loc 1 196 19 is_stmt 0 view .LVU37
 163 006a 034B     		ldr	r3, .L8+8
 164 006c 1E60     		str	r6, [r3]
 165 006e E3E7     		b	.L2
 166              	.L9:
 167              		.align	2
 168              	.L8:
 169 0070 00000000 		.word	.LANCHOR0
 170 0074 00000000 		.word	.LANCHOR1
 171 0078 00000000 		.word	.LANCHOR2
 172              		.cfi_endproc
 173              	.LFE0:
 175              		.section	.text.FSBuf_Get,"ax",%progbits
 176              		.align	1
 177              		.global	FSBuf_Get
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	FSBuf_Get:
 184              	.LVL8:
 185              	.LFB1:
 217:rtos/uC-FS/Source/fs_buf.c ****     FS_BUF   *p_buf;
 186              		.loc 1 217 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 8
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 217:rtos/uC-FS/Source/fs_buf.c ****     FS_BUF   *p_buf;
 190              		.loc 1 217 1 is_stmt 0 view .LVU39
 191 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 192              	.LCFI4:
 193              		.cfi_def_cfa_offset 20
 194              		.cfi_offset 4, -20
 195              		.cfi_offset 5, -16
 196              		.cfi_offset 6, -12
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 83B0     		sub	sp, sp, #12
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 32
 202 0004 0646     		mov	r6, r0
 218:rtos/uC-FS/Source/fs_buf.c ****     void     *p_buf_data;
 203              		.loc 1 218 5 is_stmt 1 view .LVU40
 219:rtos/uC-FS/Source/fs_buf.c ****     LIB_ERR   pool_err;
ARM GAS  /tmp/cci2QNa3.s 			page 14


 204              		.loc 1 219 5 view .LVU41
 220:rtos/uC-FS/Source/fs_buf.c ****     CPU_SR_ALLOC();
 205              		.loc 1 220 5 view .LVU42
 221:rtos/uC-FS/Source/fs_buf.c **** 
 206              		.loc 1 221 5 view .LVU43
 207              	.LVL9:
 224:rtos/uC-FS/Source/fs_buf.c ****     p_buf      = (FS_BUF *)Mem_PoolBlkGet(&FSBuf_Pool,
 208              		.loc 1 224 5 view .LVU44
 224:rtos/uC-FS/Source/fs_buf.c ****     p_buf      = (FS_BUF *)Mem_PoolBlkGet(&FSBuf_Pool,
 209              		.loc 1 224 5 view .LVU45
 224:rtos/uC-FS/Source/fs_buf.c ****     p_buf      = (FS_BUF *)Mem_PoolBlkGet(&FSBuf_Pool,
 210              		.loc 1 224 5 view .LVU46
 211 0006 4020     		movs	r0, #64
 212              	.LVL10:
 224:rtos/uC-FS/Source/fs_buf.c ****     p_buf      = (FS_BUF *)Mem_PoolBlkGet(&FSBuf_Pool,
 213              		.loc 1 224 5 is_stmt 0 view .LVU47
 214 0008 FFF7FEFF 		bl	CPU_SR_Save
 215              	.LVL11:
 216 000c 0546     		mov	r5, r0
 217              	.LVL12:
 224:rtos/uC-FS/Source/fs_buf.c ****     p_buf      = (FS_BUF *)Mem_PoolBlkGet(&FSBuf_Pool,
 218              		.loc 1 224 5 is_stmt 1 view .LVU48
 224:rtos/uC-FS/Source/fs_buf.c ****     p_buf      = (FS_BUF *)Mem_PoolBlkGet(&FSBuf_Pool,
 219              		.loc 1 224 5 view .LVU49
 225:rtos/uC-FS/Source/fs_buf.c ****                                            sizeof(FS_BUF),
 220              		.loc 1 225 5 view .LVU50
 225:rtos/uC-FS/Source/fs_buf.c ****                                            sizeof(FS_BUF),
 221              		.loc 1 225 28 is_stmt 0 view .LVU51
 222 000e 0DF10602 		add	r2, sp, #6
 223 0012 1821     		movs	r1, #24
 224 0014 1648     		ldr	r0, .L17
 225              	.LVL13:
 225:rtos/uC-FS/Source/fs_buf.c ****                                            sizeof(FS_BUF),
 226              		.loc 1 225 28 view .LVU52
 227 0016 FFF7FEFF 		bl	Mem_PoolBlkGet
 228              	.LVL14:
 228:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf == (FS_BUF *)0) {
 229              		.loc 1 228 5 is_stmt 1 view .LVU53
 229:rtos/uC-FS/Source/fs_buf.c ****         CPU_CRITICAL_EXIT();
 230              		.loc 1 229 5 view .LVU54
 229:rtos/uC-FS/Source/fs_buf.c ****         CPU_CRITICAL_EXIT();
 231              		.loc 1 229 8 is_stmt 0 view .LVU55
 232 001a 0446     		mov	r4, r0
 233 001c C8B1     		cbz	r0, .L15
 235:rtos/uC-FS/Source/fs_buf.c ****                                          FSBuf_BufSize,
 234              		.loc 1 235 5 is_stmt 1 view .LVU56
 235:rtos/uC-FS/Source/fs_buf.c ****                                          FSBuf_BufSize,
 235              		.loc 1 235 18 is_stmt 0 view .LVU57
 236 001e 0DF10602 		add	r2, sp, #6
 237 0022 144B     		ldr	r3, .L17+4
 238 0024 1968     		ldr	r1, [r3]
 239 0026 1448     		ldr	r0, .L17+8
 240              	.LVL15:
 235:rtos/uC-FS/Source/fs_buf.c ****                                          FSBuf_BufSize,
 241              		.loc 1 235 18 view .LVU58
 242 0028 FFF7FEFF 		bl	Mem_PoolBlkGet
 243              	.LVL16:
ARM GAS  /tmp/cci2QNa3.s 			page 15


 238:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf_data == (void *)0) {
 244              		.loc 1 238 5 is_stmt 1 view .LVU59
 239:rtos/uC-FS/Source/fs_buf.c ****         Mem_PoolBlkFree(        &FSBuf_Pool,
 245              		.loc 1 239 5 view .LVU60
 239:rtos/uC-FS/Source/fs_buf.c ****         Mem_PoolBlkFree(        &FSBuf_Pool,
 246              		.loc 1 239 8 is_stmt 0 view .LVU61
 247 002c 0746     		mov	r7, r0
 248 002e A0B1     		cbz	r0, .L16
 248:rtos/uC-FS/Source/fs_buf.c **** 
 249              		.loc 1 248 5 is_stmt 1 view .LVU62
 248:rtos/uC-FS/Source/fs_buf.c **** 
 250              		.loc 1 248 5 view .LVU63
 248:rtos/uC-FS/Source/fs_buf.c **** 
 251              		.loc 1 248 5 view .LVU64
 252 0030 2846     		mov	r0, r5
 253              	.LVL17:
 248:rtos/uC-FS/Source/fs_buf.c **** 
 254              		.loc 1 248 5 is_stmt 0 view .LVU65
 255 0032 FFF7FEFF 		bl	CPU_SR_Restore
 256              	.LVL18:
 248:rtos/uC-FS/Source/fs_buf.c **** 
 257              		.loc 1 248 5 is_stmt 1 view .LVU66
 248:rtos/uC-FS/Source/fs_buf.c **** 
 258              		.loc 1 248 5 view .LVU67
 250:rtos/uC-FS/Source/fs_buf.c **** 
 259              		.loc 1 250 5 view .LVU68
 250:rtos/uC-FS/Source/fs_buf.c **** 
 260              		.loc 1 250 20 is_stmt 0 view .LVU69
 261 0036 0F4B     		ldr	r3, .L17+4
 262 0038 1968     		ldr	r1, [r3]
 263 003a 2160     		str	r1, [r4]
 252:rtos/uC-FS/Source/fs_buf.c ****     p_buf->Start   = 0u;
 264              		.loc 1 252 5 is_stmt 1 view .LVU70
 252:rtos/uC-FS/Source/fs_buf.c ****     p_buf->Start   = 0u;
 265              		.loc 1 252 20 is_stmt 0 view .LVU71
 266 003c 0023     		movs	r3, #0
 267 003e A380     		strh	r3, [r4, #4]	@ movhi
 253:rtos/uC-FS/Source/fs_buf.c ****     p_buf->DataPtr = p_buf_data;
 268              		.loc 1 253 5 is_stmt 1 view .LVU72
 253:rtos/uC-FS/Source/fs_buf.c ****     p_buf->DataPtr = p_buf_data;
 269              		.loc 1 253 20 is_stmt 0 view .LVU73
 270 0040 A360     		str	r3, [r4, #8]
 254:rtos/uC-FS/Source/fs_buf.c ****     p_buf->VolPtr  = p_vol;
 271              		.loc 1 254 5 is_stmt 1 view .LVU74
 254:rtos/uC-FS/Source/fs_buf.c ****     p_buf->VolPtr  = p_vol;
 272              		.loc 1 254 20 is_stmt 0 view .LVU75
 273 0042 2761     		str	r7, [r4, #16]
 255:rtos/uC-FS/Source/fs_buf.c **** 
 274              		.loc 1 255 5 is_stmt 1 view .LVU76
 255:rtos/uC-FS/Source/fs_buf.c **** 
 275              		.loc 1 255 20 is_stmt 0 view .LVU77
 276 0044 6661     		str	r6, [r4, #20]
 258:rtos/uC-FS/Source/fs_buf.c **** #endif
 277              		.loc 1 258 5 is_stmt 1 view .LVU78
 278 0046 3846     		mov	r0, r7
 279 0048 FFF7FEFF 		bl	Mem_Clr
 280              	.LVL19:
ARM GAS  /tmp/cci2QNa3.s 			page 16


 261:rtos/uC-FS/Source/fs_buf.c **** }
 281              		.loc 1 261 5 view .LVU79
 282              	.L10:
 262:rtos/uC-FS/Source/fs_buf.c **** 
 283              		.loc 1 262 1 is_stmt 0 view .LVU80
 284 004c 2046     		mov	r0, r4
 285 004e 03B0     		add	sp, sp, #12
 286              	.LCFI6:
 287              		.cfi_remember_state
 288              		.cfi_def_cfa_offset 20
 289              		@ sp needed
 290 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 291              	.LVL20:
 292              	.L15:
 293              	.LCFI7:
 294              		.cfi_restore_state
 230:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_Get(): Could not alloc buf from pool.\r\n"));
 295              		.loc 1 230 9 is_stmt 1 view .LVU81
 230:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_Get(): Could not alloc buf from pool.\r\n"));
 296              		.loc 1 230 9 view .LVU82
 230:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_Get(): Could not alloc buf from pool.\r\n"));
 297              		.loc 1 230 9 view .LVU83
 298 0052 2846     		mov	r0, r5
 299              	.LVL21:
 230:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_Get(): Could not alloc buf from pool.\r\n"));
 300              		.loc 1 230 9 is_stmt 0 view .LVU84
 301 0054 FFF7FEFF 		bl	CPU_SR_Restore
 302              	.LVL22:
 230:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_Get(): Could not alloc buf from pool.\r\n"));
 303              		.loc 1 230 9 is_stmt 1 view .LVU85
 230:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_Get(): Could not alloc buf from pool.\r\n"));
 304              		.loc 1 230 9 view .LVU86
 231:rtos/uC-FS/Source/fs_buf.c ****         return ((FS_BUF *)0);
 305              		.loc 1 231 75 view .LVU87
 232:rtos/uC-FS/Source/fs_buf.c ****     }
 306              		.loc 1 232 9 view .LVU88
 232:rtos/uC-FS/Source/fs_buf.c ****     }
 307              		.loc 1 232 16 is_stmt 0 view .LVU89
 308 0058 F8E7     		b	.L10
 309              	.LVL23:
 310              	.L16:
 240:rtos/uC-FS/Source/fs_buf.c ****                         (void *) p_buf,
 311              		.loc 1 240 9 is_stmt 1 view .LVU90
 312 005a 0DF10602 		add	r2, sp, #6
 313 005e 2146     		mov	r1, r4
 314 0060 0348     		ldr	r0, .L17
 315              	.LVL24:
 240:rtos/uC-FS/Source/fs_buf.c ****                         (void *) p_buf,
 316              		.loc 1 240 9 is_stmt 0 view .LVU91
 317 0062 FFF7FEFF 		bl	Mem_PoolBlkFree
 318              	.LVL25:
 243:rtos/uC-FS/Source/fs_buf.c ****         (void)pool_err;                                        /* Err ignored. Already exiting on p
 319              		.loc 1 243 9 is_stmt 1 view .LVU92
 243:rtos/uC-FS/Source/fs_buf.c ****         (void)pool_err;                                        /* Err ignored. Already exiting on p
 320              		.loc 1 243 9 view .LVU93
 243:rtos/uC-FS/Source/fs_buf.c ****         (void)pool_err;                                        /* Err ignored. Already exiting on p
 321              		.loc 1 243 9 view .LVU94
ARM GAS  /tmp/cci2QNa3.s 			page 17


 322 0066 2846     		mov	r0, r5
 323 0068 FFF7FEFF 		bl	CPU_SR_Restore
 324              	.LVL26:
 243:rtos/uC-FS/Source/fs_buf.c ****         (void)pool_err;                                        /* Err ignored. Already exiting on p
 325              		.loc 1 243 9 view .LVU95
 243:rtos/uC-FS/Source/fs_buf.c ****         (void)pool_err;                                        /* Err ignored. Already exiting on p
 326              		.loc 1 243 9 view .LVU96
 244:rtos/uC-FS/Source/fs_buf.c ****         FS_TRACE_INFO(("FSBuf_Get(): Could not alloc buf data from pool.\r\n"));
 327              		.loc 1 244 9 view .LVU97
 245:rtos/uC-FS/Source/fs_buf.c ****         return ((FS_BUF *)0);
 328              		.loc 1 245 80 view .LVU98
 246:rtos/uC-FS/Source/fs_buf.c ****     }
 329              		.loc 1 246 9 view .LVU99
 246:rtos/uC-FS/Source/fs_buf.c ****     }
 330              		.loc 1 246 16 is_stmt 0 view .LVU100
 331 006c 3C46     		mov	r4, r7
 332              	.LVL27:
 246:rtos/uC-FS/Source/fs_buf.c ****     }
 333              		.loc 1 246 16 view .LVU101
 334 006e EDE7     		b	.L10
 335              	.L18:
 336              		.align	2
 337              	.L17:
 338 0070 00000000 		.word	.LANCHOR0
 339 0074 00000000 		.word	.LANCHOR2
 340 0078 00000000 		.word	.LANCHOR1
 341              		.cfi_endproc
 342              	.LFE1:
 344              		.section	.text.FSBuf_Free,"ax",%progbits
 345              		.align	1
 346              		.global	FSBuf_Free
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu fpv4-sp-d16
 352              	FSBuf_Free:
 353              	.LVL28:
 354              	.LFB2:
 281:rtos/uC-FS/Source/fs_buf.c ****     void     *p_buf_data;
 355              		.loc 1 281 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 281:rtos/uC-FS/Source/fs_buf.c ****     void     *p_buf_data;
 359              		.loc 1 281 1 is_stmt 0 view .LVU103
 360 0000 30B5     		push	{r4, r5, lr}
 361              	.LCFI8:
 362              		.cfi_def_cfa_offset 12
 363              		.cfi_offset 4, -12
 364              		.cfi_offset 5, -8
 365              		.cfi_offset 14, -4
 366 0002 83B0     		sub	sp, sp, #12
 367              	.LCFI9:
 368              		.cfi_def_cfa_offset 24
 369 0004 0446     		mov	r4, r0
 282:rtos/uC-FS/Source/fs_buf.c ****     LIB_ERR   pool_err;
 370              		.loc 1 282 5 is_stmt 1 view .LVU104
ARM GAS  /tmp/cci2QNa3.s 			page 18


 283:rtos/uC-FS/Source/fs_buf.c ****     CPU_SR_ALLOC();
 371              		.loc 1 283 5 view .LVU105
 284:rtos/uC-FS/Source/fs_buf.c **** 
 372              		.loc 1 284 5 view .LVU106
 373              	.LVL29:
 287:rtos/uC-FS/Source/fs_buf.c ****     p_buf_data = p_buf->DataPtr;                                /* Free buf data.                  
 374              		.loc 1 287 5 view .LVU107
 287:rtos/uC-FS/Source/fs_buf.c ****     p_buf_data = p_buf->DataPtr;                                /* Free buf data.                  
 375              		.loc 1 287 5 view .LVU108
 287:rtos/uC-FS/Source/fs_buf.c ****     p_buf_data = p_buf->DataPtr;                                /* Free buf data.                  
 376              		.loc 1 287 5 view .LVU109
 377 0006 4020     		movs	r0, #64
 378              	.LVL30:
 287:rtos/uC-FS/Source/fs_buf.c ****     p_buf_data = p_buf->DataPtr;                                /* Free buf data.                  
 379              		.loc 1 287 5 is_stmt 0 view .LVU110
 380 0008 FFF7FEFF 		bl	CPU_SR_Save
 381              	.LVL31:
 382 000c 0546     		mov	r5, r0
 383              	.LVL32:
 287:rtos/uC-FS/Source/fs_buf.c ****     p_buf_data = p_buf->DataPtr;                                /* Free buf data.                  
 384              		.loc 1 287 5 is_stmt 1 view .LVU111
 287:rtos/uC-FS/Source/fs_buf.c ****     p_buf_data = p_buf->DataPtr;                                /* Free buf data.                  
 385              		.loc 1 287 5 view .LVU112
 288:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf_data != (CPU_INT08U *)0) {
 386              		.loc 1 288 5 view .LVU113
 288:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf_data != (CPU_INT08U *)0) {
 387              		.loc 1 288 16 is_stmt 0 view .LVU114
 388 000e 2169     		ldr	r1, [r4, #16]
 389              	.LVL33:
 289:rtos/uC-FS/Source/fs_buf.c ****         Mem_PoolBlkFree(        &FSBuf_DataPool,
 390              		.loc 1 289 5 is_stmt 1 view .LVU115
 289:rtos/uC-FS/Source/fs_buf.c ****         Mem_PoolBlkFree(        &FSBuf_DataPool,
 391              		.loc 1 289 8 is_stmt 0 view .LVU116
 392 0010 21B1     		cbz	r1, .L20
 290:rtos/uC-FS/Source/fs_buf.c ****                         (void *) p_buf_data,
 393              		.loc 1 290 9 is_stmt 1 view .LVU117
 394 0012 0DF10602 		add	r2, sp, #6
 395 0016 0848     		ldr	r0, .L22
 396              	.LVL34:
 290:rtos/uC-FS/Source/fs_buf.c ****                         (void *) p_buf_data,
 397              		.loc 1 290 9 is_stmt 0 view .LVU118
 398 0018 FFF7FEFF 		bl	Mem_PoolBlkFree
 399              	.LVL35:
 400              	.L20:
 293:rtos/uC-FS/Source/fs_buf.c ****     }
 401              		.loc 1 293 8 is_stmt 1 view .LVU119
 297:rtos/uC-FS/Source/fs_buf.c **** #endif
 402              		.loc 1 297 5 view .LVU120
 403 001c 2046     		mov	r0, r4
 404 001e FFF7FEFF 		bl	FSBuf_Clr
 405              	.LVL36:
 300:rtos/uC-FS/Source/fs_buf.c ****                     (void *) p_buf,
 406              		.loc 1 300 5 view .LVU121
 407 0022 0DF10602 		add	r2, sp, #6
 408 0026 2146     		mov	r1, r4
 409 0028 0448     		ldr	r0, .L22+4
 410 002a FFF7FEFF 		bl	Mem_PoolBlkFree
ARM GAS  /tmp/cci2QNa3.s 			page 19


 411              	.LVL37:
 303:rtos/uC-FS/Source/fs_buf.c ****     CPU_CRITICAL_EXIT();
 412              		.loc 1 303 4 view .LVU122
 304:rtos/uC-FS/Source/fs_buf.c **** }
 413              		.loc 1 304 5 view .LVU123
 304:rtos/uC-FS/Source/fs_buf.c **** }
 414              		.loc 1 304 5 view .LVU124
 304:rtos/uC-FS/Source/fs_buf.c **** }
 415              		.loc 1 304 5 view .LVU125
 416 002e 2846     		mov	r0, r5
 417 0030 FFF7FEFF 		bl	CPU_SR_Restore
 418              	.LVL38:
 304:rtos/uC-FS/Source/fs_buf.c **** }
 419              		.loc 1 304 5 view .LVU126
 304:rtos/uC-FS/Source/fs_buf.c **** }
 420              		.loc 1 304 5 view .LVU127
 305:rtos/uC-FS/Source/fs_buf.c **** 
 421              		.loc 1 305 1 is_stmt 0 view .LVU128
 422 0034 03B0     		add	sp, sp, #12
 423              	.LCFI10:
 424              		.cfi_def_cfa_offset 12
 425              		@ sp needed
 426 0036 30BD     		pop	{r4, r5, pc}
 427              	.LVL39:
 428              	.L23:
 305:rtos/uC-FS/Source/fs_buf.c **** 
 429              		.loc 1 305 1 view .LVU129
 430              		.align	2
 431              	.L22:
 432 0038 00000000 		.word	.LANCHOR1
 433 003c 00000000 		.word	.LANCHOR0
 434              		.cfi_endproc
 435              	.LFE2:
 437              		.section	.text.FSBuf_Flush,"ax",%progbits
 438              		.align	1
 439              		.global	FSBuf_Flush
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	FSBuf_Flush:
 446              	.LVL40:
 447              	.LFB3:
 337:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 448              		.loc 1 337 1 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 337:rtos/uC-FS/Source/fs_buf.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 452              		.loc 1 337 1 is_stmt 0 view .LVU131
 453 0000 30B5     		push	{r4, r5, lr}
 454              	.LCFI11:
 455              		.cfi_def_cfa_offset 12
 456              		.cfi_offset 4, -12
 457              		.cfi_offset 5, -8
 458              		.cfi_offset 14, -4
 459 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cci2QNa3.s 			page 20


 460              	.LCFI12:
 461              		.cfi_def_cfa_offset 24
 462 0004 0446     		mov	r4, r0
 463 0006 0D46     		mov	r5, r1
 339:rtos/uC-FS/Source/fs_buf.c ****         FSVol_WrLockedEx(p_buf->VolPtr,                         /* Wr sec.                         
 464              		.loc 1 339 5 is_stmt 1 view .LVU132
 339:rtos/uC-FS/Source/fs_buf.c ****         FSVol_WrLockedEx(p_buf->VolPtr,                         /* Wr sec.                         
 465              		.loc 1 339 14 is_stmt 0 view .LVU133
 466 0008 8388     		ldrh	r3, [r0, #4]
 339:rtos/uC-FS/Source/fs_buf.c ****         FSVol_WrLockedEx(p_buf->VolPtr,                         /* Wr sec.                         
 467              		.loc 1 339 8 view .LVU134
 468 000a 022B     		cmp	r3, #2
 469 000c 04D0     		beq	.L28
 470              	.LVL41:
 471              	.L25:
 353:rtos/uC-FS/Source/fs_buf.c **** 
 472              		.loc 1 353 5 is_stmt 1 view .LVU135
 353:rtos/uC-FS/Source/fs_buf.c **** 
 473              		.loc 1 353 18 is_stmt 0 view .LVU136
 474 000e 0023     		movs	r3, #0
 475 0010 A380     		strh	r3, [r4, #4]	@ movhi
 355:rtos/uC-FS/Source/fs_buf.c **** }
 476              		.loc 1 355 4 is_stmt 1 view .LVU137
 355:rtos/uC-FS/Source/fs_buf.c **** }
 477              		.loc 1 355 11 is_stmt 0 view .LVU138
 478 0012 2B80     		strh	r3, [r5]	@ movhi
 479              	.L24:
 356:rtos/uC-FS/Source/fs_buf.c **** 
 480              		.loc 1 356 1 view .LVU139
 481 0014 03B0     		add	sp, sp, #12
 482              	.LCFI13:
 483              		.cfi_remember_state
 484              		.cfi_def_cfa_offset 12
 485              		@ sp needed
 486 0016 30BD     		pop	{r4, r5, pc}
 487              	.LVL42:
 488              	.L28:
 489              	.LCFI14:
 490              		.cfi_restore_state
 340:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 491              		.loc 1 340 9 is_stmt 1 view .LVU140
 492 0018 0191     		str	r1, [sp, #4]
 493 001a C368     		ldr	r3, [r0, #12]
 494 001c 0093     		str	r3, [sp]
 495 001e 0123     		movs	r3, #1
 496 0020 8268     		ldr	r2, [r0, #8]
 497 0022 0169     		ldr	r1, [r0, #16]
 498              	.LVL43:
 340:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 499              		.loc 1 340 9 is_stmt 0 view .LVU141
 500 0024 4069     		ldr	r0, [r0, #20]
 501              	.LVL44:
 340:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 502              		.loc 1 340 9 view .LVU142
 503 0026 FFF7FEFF 		bl	FSVol_WrLockedEx
 504              	.LVL45:
 346:rtos/uC-FS/Source/fs_buf.c ****             p_buf->State = FS_BUF_STATE_NONE;
ARM GAS  /tmp/cci2QNa3.s 			page 21


 505              		.loc 1 346 9 is_stmt 1 view .LVU143
 346:rtos/uC-FS/Source/fs_buf.c ****             p_buf->State = FS_BUF_STATE_NONE;
 506              		.loc 1 346 13 is_stmt 0 view .LVU144
 507 002a 2B88     		ldrh	r3, [r5]
 346:rtos/uC-FS/Source/fs_buf.c ****             p_buf->State = FS_BUF_STATE_NONE;
 508              		.loc 1 346 12 view .LVU145
 509 002c 002B     		cmp	r3, #0
 510 002e EED0     		beq	.L25
 347:rtos/uC-FS/Source/fs_buf.c ****             return;
 511              		.loc 1 347 13 is_stmt 1 view .LVU146
 347:rtos/uC-FS/Source/fs_buf.c ****             return;
 512              		.loc 1 347 26 is_stmt 0 view .LVU147
 513 0030 0023     		movs	r3, #0
 514 0032 A380     		strh	r3, [r4, #4]	@ movhi
 348:rtos/uC-FS/Source/fs_buf.c ****         }
 515              		.loc 1 348 13 is_stmt 1 view .LVU148
 516 0034 EEE7     		b	.L24
 517              		.cfi_endproc
 518              	.LFE3:
 520              		.section	.text.FSBuf_MarkDirty,"ax",%progbits
 521              		.align	1
 522              		.global	FSBuf_MarkDirty
 523              		.syntax unified
 524              		.thumb
 525              		.thumb_func
 526              		.fpu fpv4-sp-d16
 528              	FSBuf_MarkDirty:
 529              	.LVL46:
 530              	.LFB4:
 382:rtos/uC-FS/Source/fs_buf.c ****     p_buf->State = FS_BUF_STATE_DIRTY;
 531              		.loc 1 382 1 view -0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 383:rtos/uC-FS/Source/fs_buf.c ****    *p_err = FS_ERR_NONE;
 536              		.loc 1 383 5 view .LVU150
 383:rtos/uC-FS/Source/fs_buf.c ****    *p_err = FS_ERR_NONE;
 537              		.loc 1 383 18 is_stmt 0 view .LVU151
 538 0000 0223     		movs	r3, #2
 539 0002 8380     		strh	r3, [r0, #4]	@ movhi
 384:rtos/uC-FS/Source/fs_buf.c **** }
 540              		.loc 1 384 4 is_stmt 1 view .LVU152
 384:rtos/uC-FS/Source/fs_buf.c **** }
 541              		.loc 1 384 11 is_stmt 0 view .LVU153
 542 0004 0023     		movs	r3, #0
 543 0006 0B80     		strh	r3, [r1]	@ movhi
 385:rtos/uC-FS/Source/fs_buf.c **** #endif
 544              		.loc 1 385 1 view .LVU154
 545 0008 7047     		bx	lr
 546              		.cfi_endproc
 547              	.LFE4:
 549              		.section	.text.FSBuf_Set,"ax",%progbits
 550              		.align	1
 551              		.global	FSBuf_Set
 552              		.syntax unified
 553              		.thumb
ARM GAS  /tmp/cci2QNa3.s 			page 22


 554              		.thumb_func
 555              		.fpu fpv4-sp-d16
 557              	FSBuf_Set:
 558              	.LVL47:
 559              	.LFB5:
 434:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf->State != FS_BUF_STATE_NONE) {                    /* -------------------- DATA IN BUF
 560              		.loc 1 434 1 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 4, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 434:rtos/uC-FS/Source/fs_buf.c ****     if (p_buf->State != FS_BUF_STATE_NONE) {                    /* -------------------- DATA IN BUF
 564              		.loc 1 434 1 is_stmt 0 view .LVU156
 565 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 566              	.LCFI15:
 567              		.cfi_def_cfa_offset 24
 568              		.cfi_offset 4, -24
 569              		.cfi_offset 5, -20
 570              		.cfi_offset 6, -16
 571              		.cfi_offset 7, -12
 572              		.cfi_offset 8, -8
 573              		.cfi_offset 14, -4
 574 0004 82B0     		sub	sp, sp, #8
 575              	.LCFI16:
 576              		.cfi_def_cfa_offset 32
 577 0006 0446     		mov	r4, r0
 578 0008 0D46     		mov	r5, r1
 579 000a 9046     		mov	r8, r2
 580 000c 1E46     		mov	r6, r3
 581 000e 089F     		ldr	r7, [sp, #32]
 435:rtos/uC-FS/Source/fs_buf.c ****         if (p_buf->Start == start) {
 582              		.loc 1 435 5 is_stmt 1 view .LVU157
 435:rtos/uC-FS/Source/fs_buf.c ****         if (p_buf->Start == start) {
 583              		.loc 1 435 14 is_stmt 0 view .LVU158
 584 0010 8188     		ldrh	r1, [r0, #4]
 585              	.LVL48:
 435:rtos/uC-FS/Source/fs_buf.c ****         if (p_buf->Start == start) {
 586              		.loc 1 435 8 view .LVU159
 587 0012 11B1     		cbz	r1, .L31
 436:rtos/uC-FS/Source/fs_buf.c ****            *p_err = FS_ERR_NONE;
 588              		.loc 1 436 9 is_stmt 1 view .LVU160
 436:rtos/uC-FS/Source/fs_buf.c ****            *p_err = FS_ERR_NONE;
 589              		.loc 1 436 18 is_stmt 0 view .LVU161
 590 0014 8368     		ldr	r3, [r0, #8]
 591              	.LVL49:
 436:rtos/uC-FS/Source/fs_buf.c ****            *p_err = FS_ERR_NONE;
 592              		.loc 1 436 12 view .LVU162
 593 0016 AB42     		cmp	r3, r5
 594 0018 0DD0     		beq	.L36
 595              	.L31:
 445:rtos/uC-FS/Source/fs_buf.c ****         FSVol_WrLockedEx(p_buf->VolPtr,                         /* Wr sec.                         
 596              		.loc 1 445 5 is_stmt 1 view .LVU163
 445:rtos/uC-FS/Source/fs_buf.c ****         FSVol_WrLockedEx(p_buf->VolPtr,                         /* Wr sec.                         
 597              		.loc 1 445 8 is_stmt 0 view .LVU164
 598 001a 0229     		cmp	r1, #2
 599 001c 0ED0     		beq	.L37
 600              	.LVL50:
 601              	.L33:
ARM GAS  /tmp/cci2QNa3.s 			page 23


 462:rtos/uC-FS/Source/fs_buf.c ****         FSVol_RdLockedEx(p_buf->VolPtr,                         /* Rd sec.                         
 602              		.loc 1 462 5 is_stmt 1 view .LVU165
 462:rtos/uC-FS/Source/fs_buf.c ****         FSVol_RdLockedEx(p_buf->VolPtr,                         /* Rd sec.                         
 603              		.loc 1 462 8 is_stmt 0 view .LVU166
 604 001e 012E     		cmp	r6, #1
 605 0020 1BD0     		beq	.L38
 606              	.L34:
 475:rtos/uC-FS/Source/fs_buf.c ****     p_buf->Start   = start;
 607              		.loc 1 475 5 is_stmt 1 view .LVU167
 475:rtos/uC-FS/Source/fs_buf.c ****     p_buf->Start   = start;
 608              		.loc 1 475 20 is_stmt 0 view .LVU168
 609 0022 0123     		movs	r3, #1
 610 0024 A380     		strh	r3, [r4, #4]	@ movhi
 476:rtos/uC-FS/Source/fs_buf.c ****     p_buf->SecType = sec_type;
 611              		.loc 1 476 5 is_stmt 1 view .LVU169
 476:rtos/uC-FS/Source/fs_buf.c ****     p_buf->SecType = sec_type;
 612              		.loc 1 476 20 is_stmt 0 view .LVU170
 613 0026 A560     		str	r5, [r4, #8]
 477:rtos/uC-FS/Source/fs_buf.c ****    *p_err = FS_ERR_NONE;
 614              		.loc 1 477 5 is_stmt 1 view .LVU171
 477:rtos/uC-FS/Source/fs_buf.c ****    *p_err = FS_ERR_NONE;
 615              		.loc 1 477 20 is_stmt 0 view .LVU172
 616 0028 C4F80C80 		str	r8, [r4, #12]
 478:rtos/uC-FS/Source/fs_buf.c **** }
 617              		.loc 1 478 4 is_stmt 1 view .LVU173
 478:rtos/uC-FS/Source/fs_buf.c **** }
 618              		.loc 1 478 11 is_stmt 0 view .LVU174
 619 002c 0023     		movs	r3, #0
 620 002e 3B80     		strh	r3, [r7]	@ movhi
 621              	.L30:
 479:rtos/uC-FS/Source/fs_buf.c **** 
 622              		.loc 1 479 1 view .LVU175
 623 0030 02B0     		add	sp, sp, #8
 624              	.LCFI17:
 625              		.cfi_remember_state
 626              		.cfi_def_cfa_offset 24
 627              		@ sp needed
 628 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 629              	.LVL51:
 630              	.L36:
 631              	.LCFI18:
 632              		.cfi_restore_state
 437:rtos/uC-FS/Source/fs_buf.c ****             return;
 633              		.loc 1 437 12 is_stmt 1 view .LVU176
 437:rtos/uC-FS/Source/fs_buf.c ****             return;
 634              		.loc 1 437 19 is_stmt 0 view .LVU177
 635 0036 0023     		movs	r3, #0
 636 0038 3B80     		strh	r3, [r7]	@ movhi
 438:rtos/uC-FS/Source/fs_buf.c ****         }
 637              		.loc 1 438 13 is_stmt 1 view .LVU178
 638 003a F9E7     		b	.L30
 639              	.L37:
 446:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 640              		.loc 1 446 9 view .LVU179
 641 003c 0197     		str	r7, [sp, #4]
 642 003e E368     		ldr	r3, [r4, #12]
 643 0040 0093     		str	r3, [sp]
ARM GAS  /tmp/cci2QNa3.s 			page 24


 644 0042 0123     		movs	r3, #1
 645 0044 A268     		ldr	r2, [r4, #8]
 646              	.LVL52:
 446:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 647              		.loc 1 446 9 is_stmt 0 view .LVU180
 648 0046 2169     		ldr	r1, [r4, #16]
 649 0048 6069     		ldr	r0, [r4, #20]
 650              	.LVL53:
 446:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 651              		.loc 1 446 9 view .LVU181
 652 004a FFF7FEFF 		bl	FSVol_WrLockedEx
 653              	.LVL54:
 452:rtos/uC-FS/Source/fs_buf.c ****             return;
 654              		.loc 1 452 9 is_stmt 1 view .LVU182
 452:rtos/uC-FS/Source/fs_buf.c ****             return;
 655              		.loc 1 452 13 is_stmt 0 view .LVU183
 656 004e 3B88     		ldrh	r3, [r7]
 452:rtos/uC-FS/Source/fs_buf.c ****             return;
 657              		.loc 1 452 12 view .LVU184
 658 0050 002B     		cmp	r3, #0
 659 0052 EDD1     		bne	.L30
 456:rtos/uC-FS/Source/fs_buf.c ****     }
 660              		.loc 1 456 9 is_stmt 1 view .LVU185
 456:rtos/uC-FS/Source/fs_buf.c ****     }
 661              		.loc 1 456 22 is_stmt 0 view .LVU186
 662 0054 0123     		movs	r3, #1
 663 0056 A380     		strh	r3, [r4, #4]	@ movhi
 664 0058 E1E7     		b	.L33
 665              	.L38:
 463:rtos/uC-FS/Source/fs_buf.c ****                          p_buf->DataPtr,
 666              		.loc 1 463 9 is_stmt 1 view .LVU187
 667 005a 0197     		str	r7, [sp, #4]
 668 005c CDF80080 		str	r8, [sp]
 669 0060 0123     		movs	r3, #1
 670 0062 2A46     		mov	r2, r5
 671 0064 2169     		ldr	r1, [r4, #16]
 672 0066 6069     		ldr	r0, [r4, #20]
 673 0068 FFF7FEFF 		bl	FSVol_RdLockedEx
 674              	.LVL55:
 469:rtos/uC-FS/Source/fs_buf.c ****             p_buf->State = FS_BUF_STATE_NONE;
 675              		.loc 1 469 9 view .LVU188
 469:rtos/uC-FS/Source/fs_buf.c ****             p_buf->State = FS_BUF_STATE_NONE;
 676              		.loc 1 469 13 is_stmt 0 view .LVU189
 677 006c 3B88     		ldrh	r3, [r7]
 469:rtos/uC-FS/Source/fs_buf.c ****             p_buf->State = FS_BUF_STATE_NONE;
 678              		.loc 1 469 12 view .LVU190
 679 006e 002B     		cmp	r3, #0
 680 0070 D7D0     		beq	.L34
 470:rtos/uC-FS/Source/fs_buf.c ****             return;
 681              		.loc 1 470 13 is_stmt 1 view .LVU191
 470:rtos/uC-FS/Source/fs_buf.c ****             return;
 682              		.loc 1 470 26 is_stmt 0 view .LVU192
 683 0072 0023     		movs	r3, #0
 684 0074 A380     		strh	r3, [r4, #4]	@ movhi
 471:rtos/uC-FS/Source/fs_buf.c ****         }
 685              		.loc 1 471 13 is_stmt 1 view .LVU193
 686 0076 DBE7     		b	.L30
ARM GAS  /tmp/cci2QNa3.s 			page 25


 687              		.cfi_endproc
 688              	.LFE5:
 690              		.section	.bss.FSBuf_BufSize,"aw",%nobits
 691              		.align	2
 692              		.set	.LANCHOR2,. + 0
 695              	FSBuf_BufSize:
 696 0000 00000000 		.space	4
 697              		.section	.bss.FSBuf_DataPool,"aw",%nobits
 698              		.align	2
 699              		.set	.LANCHOR1,. + 0
 702              	FSBuf_DataPool:
 703 0000 00000000 		.space	24
 703      00000000 
 703      00000000 
 703      00000000 
 703      00000000 
 704              		.section	.bss.FSBuf_Pool,"aw",%nobits
 705              		.align	2
 706              		.set	.LANCHOR0,. + 0
 709              	FSBuf_Pool:
 710 0000 00000000 		.space	24
 710      00000000 
 710      00000000 
 710      00000000 
 710      00000000 
 711              		.text
 712              	.Letext0:
 713              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 714              		.file 3 "rtos/uC-LIB/lib_def.h"
 715              		.file 4 "rtos/uC-LIB/lib_mem.h"
 716              		.file 5 "rtos/uC-FS/Source/fs_type.h"
 717              		.file 6 "rtos/uC-FS/Source/fs_buf.h"
 718              		.file 7 "rtos/uC-FS/Source/fs_vol.h"
 719              		.file 8 "rtos/uC-FS/Source/fs_err.h"
 720              		.file 9 "rtos/uC-FS/Source/fs_ctr.h"
ARM GAS  /tmp/cci2QNa3.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fs_buf.c
     /tmp/cci2QNa3.s:18     .text.FSBuf_Clr:0000000000000000 $t
     /tmp/cci2QNa3.s:25     .text.FSBuf_Clr:0000000000000000 FSBuf_Clr
     /tmp/cci2QNa3.s:56     .text.FSBuf_ModuleInit:0000000000000000 $t
     /tmp/cci2QNa3.s:63     .text.FSBuf_ModuleInit:0000000000000000 FSBuf_ModuleInit
     /tmp/cci2QNa3.s:169    .text.FSBuf_ModuleInit:0000000000000070 $d
     /tmp/cci2QNa3.s:176    .text.FSBuf_Get:0000000000000000 $t
     /tmp/cci2QNa3.s:183    .text.FSBuf_Get:0000000000000000 FSBuf_Get
     /tmp/cci2QNa3.s:338    .text.FSBuf_Get:0000000000000070 $d
     /tmp/cci2QNa3.s:345    .text.FSBuf_Free:0000000000000000 $t
     /tmp/cci2QNa3.s:352    .text.FSBuf_Free:0000000000000000 FSBuf_Free
     /tmp/cci2QNa3.s:432    .text.FSBuf_Free:0000000000000038 $d
     /tmp/cci2QNa3.s:438    .text.FSBuf_Flush:0000000000000000 $t
     /tmp/cci2QNa3.s:445    .text.FSBuf_Flush:0000000000000000 FSBuf_Flush
     /tmp/cci2QNa3.s:521    .text.FSBuf_MarkDirty:0000000000000000 $t
     /tmp/cci2QNa3.s:528    .text.FSBuf_MarkDirty:0000000000000000 FSBuf_MarkDirty
     /tmp/cci2QNa3.s:550    .text.FSBuf_Set:0000000000000000 $t
     /tmp/cci2QNa3.s:557    .text.FSBuf_Set:0000000000000000 FSBuf_Set
     /tmp/cci2QNa3.s:691    .bss.FSBuf_BufSize:0000000000000000 $d
     /tmp/cci2QNa3.s:695    .bss.FSBuf_BufSize:0000000000000000 FSBuf_BufSize
     /tmp/cci2QNa3.s:698    .bss.FSBuf_DataPool:0000000000000000 $d
     /tmp/cci2QNa3.s:702    .bss.FSBuf_DataPool:0000000000000000 FSBuf_DataPool
     /tmp/cci2QNa3.s:705    .bss.FSBuf_Pool:0000000000000000 $d
     /tmp/cci2QNa3.s:709    .bss.FSBuf_Pool:0000000000000000 FSBuf_Pool
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_mem.h.121.89b942a057fb20091baad8bf6b28b1e6
                           .group:0000000000000000 wm4.fs.h.42.4f6311a594ee5619f1ee7a9392eb7faa
                           .group:0000000000000000 wm4.fs_def.h.42.653ad677c23ef93c522ec84af681385d
                           .group:0000000000000000 wm4.fs_cfg.h.116.da4f8e9d0b9040a97ef3bf26c61e90fd
                           .group:0000000000000000 wm4.clk.h.99.39403db6a27321e53b261bbe20b56e1d
                           .group:0000000000000000 wm4.lib_str.h.60.d6fb3a1336db17c586ed26be94929677
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366
                           .group:0000000000000000 wm4.fs_cfg_fs.h.176.c85074fbe881bfa594608376a65f4dc2
                           .group:0000000000000000 wm4.fs_type.h.42.3e681b291920189044ba1da24ae0f22a
                           .group:0000000000000000 wm4.fs_err.h.42.d52bfed31dff3d1419c5cf09952dee67
                           .group:0000000000000000 wm4.fs.h.97.1d629f0ba32b5622ab4e01a254bd98e8
                           .group:0000000000000000 wm4.fs_buf.h.42.56a1feb5348fed282358e83e63539dba
                           .group:0000000000000000 wm4.fs_vol.h.42.6f34e6a2e2db310debaffbf0344054a2
                           .group:0000000000000000 wm4.fs_ctr.h.42.9d1398cac157503ac8af114819f7782b
                           .group:0000000000000000 wm4.fs_vol.h.83.fd165084f1d541edeb55ea0b6d9b6170

UNDEFINED SYMBOLS
Mem_PoolCreate
CPU_SR_Save
Mem_PoolBlkGet
CPU_SR_Restore
Mem_Clr
ARM GAS  /tmp/cci2QNa3.s 			page 27


Mem_PoolBlkFree
FSVol_WrLockedEx
FSVol_RdLockedEx

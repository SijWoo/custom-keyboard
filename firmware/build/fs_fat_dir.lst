ARM GAS  /tmp/ccNRjW2f.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fs_fat_dir.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FS_FAT_DirModuleInit,"ax",%progbits
  18              		.align	1
  19              		.global	FS_FAT_DirModuleInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	FS_FAT_DirModuleInit:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "rtos/uC-FS/FAT/fs_fat_dir.c"
   1:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
   2:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
   3:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                                uC/FS
   4:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                      The Embedded File System
   5:rtos/uC-FS/FAT/fs_fat_dir.c **** *
   6:rtos/uC-FS/FAT/fs_fat_dir.c **** *                         (c) Copyright 2008-2019; Silicon Laboratories Inc.,
   7:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-FS/FAT/fs_fat_dir.c **** *
   9:rtos/uC-FS/FAT/fs_fat_dir.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-FS/FAT/fs_fat_dir.c **** *
  11:rtos/uC-FS/FAT/fs_fat_dir.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-FS/FAT/fs_fat_dir.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-FS/FAT/fs_fat_dir.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-FS/FAT/fs_fat_dir.c **** *                  license, you may not use this software.
  15:rtos/uC-FS/FAT/fs_fat_dir.c **** *
  16:rtos/uC-FS/FAT/fs_fat_dir.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-FS/FAT/fs_fat_dir.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-FS/FAT/fs_fat_dir.c **** *
  19:rtos/uC-FS/FAT/fs_fat_dir.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-FS/FAT/fs_fat_dir.c **** *
  21:rtos/uC-FS/FAT/fs_fat_dir.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  23:rtos/uC-FS/FAT/fs_fat_dir.c **** */
  24:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  25:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
  26:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  27:rtos/uC-FS/FAT/fs_fat_dir.c **** *
  28:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                     FILE SYSTEM FAT MANAGEMENT
  29:rtos/uC-FS/FAT/fs_fat_dir.c **** *
ARM GAS  /tmp/ccNRjW2f.s 			page 2


  30:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                          DIRECTORY ACCESS
  31:rtos/uC-FS/FAT/fs_fat_dir.c **** *
  32:rtos/uC-FS/FAT/fs_fat_dir.c **** * Filename : fs_fat_dir.c
  33:rtos/uC-FS/FAT/fs_fat_dir.c **** * Version  : v4.07.06
  34:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  35:rtos/uC-FS/FAT/fs_fat_dir.c **** */
  36:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  37:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
  38:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  39:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                               MODULE
  40:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  41:rtos/uC-FS/FAT/fs_fat_dir.c **** */
  42:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  43:rtos/uC-FS/FAT/fs_fat_dir.c **** #define  MICRIUM_SOURCE
  44:rtos/uC-FS/FAT/fs_fat_dir.c **** #define  FS_FAT_DIR_MODULE
  45:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  46:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  47:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
  48:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  49:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                            INCLUDE FILES
  50:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  51:rtos/uC-FS/FAT/fs_fat_dir.c **** */
  52:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  53:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  <lib_mem.h>
  54:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "../Source/fs.h"
  55:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "../Source/fs_buf.h"
  56:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "../Source/fs_cfg_fs.h"
  57:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "../Source/fs_dev.h"
  58:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "../Source/fs_dir.h"
  59:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "../Source/fs_file.h"
  60:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "../Source/fs_unicode.h"
  61:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "../Source/fs_vol.h"
  62:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "fs_fat.h"
  63:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "fs_fat_dir.h"
  64:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "fs_fat_lfn.h"
  65:rtos/uC-FS/FAT/fs_fat_dir.c **** #include  "fs_fat_sfn.h"
  66:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  67:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  68:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
  69:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  70:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                               MODULE
  71:rtos/uC-FS/FAT/fs_fat_dir.c **** *
  72:rtos/uC-FS/FAT/fs_fat_dir.c **** * Note(s) : (1) See 'fs_fat.h  MODULE'.
  73:rtos/uC-FS/FAT/fs_fat_dir.c **** *
  74:rtos/uC-FS/FAT/fs_fat_dir.c **** *           (2) See 'fs_dir.h  MODULE'.
  75:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  76:rtos/uC-FS/FAT/fs_fat_dir.c **** */
  77:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  78:rtos/uC-FS/FAT/fs_fat_dir.c **** #ifdef   FS_FAT_MODULE_PRESENT                                  /* See Note #1.                    
  79:rtos/uC-FS/FAT/fs_fat_dir.c **** #ifdef   FS_DIR_MODULE_PRESENT                                  /* See Note #2.                    
  80:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  81:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  82:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
  83:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  84:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                            LOCAL DEFINES
  85:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  86:rtos/uC-FS/FAT/fs_fat_dir.c **** */
ARM GAS  /tmp/ccNRjW2f.s 			page 3


  87:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  88:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  89:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
  90:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  91:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                          LOCAL DATA TYPES
  92:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  93:rtos/uC-FS/FAT/fs_fat_dir.c **** */
  94:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  95:rtos/uC-FS/FAT/fs_fat_dir.c **** 
  96:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
  97:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
  98:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                           LOCAL CONSTANTS
  99:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 100:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 101:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 102:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 103:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 104:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 105:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                            LOCAL TABLES
 106:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 107:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 108:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 109:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 110:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 111:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 112:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                       LOCAL GLOBAL VARIABLES
 113:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 114:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 115:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 116:rtos/uC-FS/FAT/fs_fat_dir.c **** static  MEM_POOL  FS_FAT_DirDataPool;
 117:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 118:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 119:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 120:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 121:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                            LOCAL MACRO'S
 122:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 123:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 124:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 125:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 126:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 127:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 128:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                      LOCAL FUNCTION PROTOTYPES
 129:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 130:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 131:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 132:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 133:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 134:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 135:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                     LOCAL CONFIGURATION ERRORS
 136:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 137:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 138:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 139:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 140:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 141:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 142:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                       FS_FAT_DirModuleInit()
 143:rtos/uC-FS/FAT/fs_fat_dir.c **** *
ARM GAS  /tmp/ccNRjW2f.s 			page 4


 144:rtos/uC-FS/FAT/fs_fat_dir.c **** * Description : Initialize FAT Directory module.
 145:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 146:rtos/uC-FS/FAT/fs_fat_dir.c **** * Argument(s) : dir_cnt     Number of directories to allocate.
 147:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 148:rtos/uC-FS/FAT/fs_fat_dir.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 149:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 150:rtos/uC-FS/FAT/fs_fat_dir.c **** *                               FS_ERR_NONE         Module initialized.
 151:rtos/uC-FS/FAT/fs_fat_dir.c **** *                               FS_ERR_MEM_ALLOC    Memory could not be allocated.
 152:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 153:rtos/uC-FS/FAT/fs_fat_dir.c **** * Return(s)   : none.
 154:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 155:rtos/uC-FS/FAT/fs_fat_dir.c **** * Note(s)     : none.
 156:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 157:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 158:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 159:rtos/uC-FS/FAT/fs_fat_dir.c **** void  FS_FAT_DirModuleInit (FS_QTY   dir_cnt,
 160:rtos/uC-FS/FAT/fs_fat_dir.c ****                             FS_ERR  *p_err)
 161:rtos/uC-FS/FAT/fs_fat_dir.c **** {
  30              		.loc 1 161 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 161 1 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 86B0     		sub	sp, sp, #24
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 32
  43 0004 0346     		mov	r3, r0
  44 0006 0C46     		mov	r4, r1
 162:rtos/uC-FS/FAT/fs_fat_dir.c ****     CPU_SIZE_T  octets_reqd;
  45              		.loc 1 162 5 is_stmt 1 view .LVU2
 163:rtos/uC-FS/FAT/fs_fat_dir.c ****     LIB_ERR     pool_err;
  46              		.loc 1 163 5 view .LVU3
 164:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 165:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 166:rtos/uC-FS/FAT/fs_fat_dir.c ****     Mem_PoolCreate(&FS_FAT_DirDataPool,
  47              		.loc 1 166 5 view .LVU4
  48 0008 0DF11202 		add	r2, sp, #18
  49 000c 0392     		str	r2, [sp, #12]
  50 000e 05AA     		add	r2, sp, #20
  51 0010 0292     		str	r2, [sp, #8]
  52 0012 0422     		movs	r2, #4
  53 0014 0192     		str	r2, [sp, #4]
  54 0016 4022     		movs	r2, #64
  55 0018 0092     		str	r2, [sp]
  56 001a 0022     		movs	r2, #0
  57 001c 1146     		mov	r1, r2
  58              	.LVL1:
  59              		.loc 1 166 5 is_stmt 0 view .LVU5
  60 001e 0648     		ldr	r0, .L4
  61              	.LVL2:
  62              		.loc 1 166 5 view .LVU6
  63 0020 FFF7FEFF 		bl	Mem_PoolCreate
ARM GAS  /tmp/ccNRjW2f.s 			page 5


  64              	.LVL3:
 167:rtos/uC-FS/FAT/fs_fat_dir.c ****                     DEF_NULL,
 168:rtos/uC-FS/FAT/fs_fat_dir.c ****                     0,
 169:rtos/uC-FS/FAT/fs_fat_dir.c ****                     dir_cnt,
 170:rtos/uC-FS/FAT/fs_fat_dir.c ****                     sizeof(FS_FAT_FILE_DATA),
 171:rtos/uC-FS/FAT/fs_fat_dir.c ****                     sizeof(CPU_ALIGN),
 172:rtos/uC-FS/FAT/fs_fat_dir.c ****                    &octets_reqd,
 173:rtos/uC-FS/FAT/fs_fat_dir.c ****                    &pool_err);
 174:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 175:rtos/uC-FS/FAT/fs_fat_dir.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
  65              		.loc 1 175 5 is_stmt 1 view .LVU7
  66              		.loc 1 175 18 is_stmt 0 view .LVU8
  67 0024 BDF81220 		ldrh	r2, [sp, #18]
  68              		.loc 1 175 8 view .LVU9
  69 0028 42F21073 		movw	r3, #10000
  70 002c 9A42     		cmp	r2, r3
  71 002e 01D0     		beq	.L1
 176:rtos/uC-FS/FAT/fs_fat_dir.c ****         *p_err  = FS_ERR_MEM_ALLOC;
  72              		.loc 1 176 9 is_stmt 1 view .LVU10
  73              		.loc 1 176 17 is_stmt 0 view .LVU11
  74 0030 1123     		movs	r3, #17
  75 0032 2380     		strh	r3, [r4]	@ movhi
 177:rtos/uC-FS/FAT/fs_fat_dir.c ****          FS_TRACE_INFO(("FS_FAT_DirModuleInit(): Could not alloc mem for FAT file info: %d octets r
  76              		.loc 1 177 125 is_stmt 1 view .LVU12
  77              	.L1:
 178:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 179:rtos/uC-FS/FAT/fs_fat_dir.c **** }
  78              		.loc 1 179 1 is_stmt 0 view .LVU13
  79 0034 06B0     		add	sp, sp, #24
  80              	.LCFI2:
  81              		.cfi_def_cfa_offset 8
  82              		@ sp needed
  83 0036 10BD     		pop	{r4, pc}
  84              	.LVL4:
  85              	.L5:
  86              		.loc 1 179 1 view .LVU14
  87              		.align	2
  88              	.L4:
  89 0038 00000000 		.word	.LANCHOR0
  90              		.cfi_endproc
  91              	.LFE0:
  93              		.section	.text.FS_FAT_DirClose,"ax",%progbits
  94              		.align	1
  95              		.global	FS_FAT_DirClose
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	FS_FAT_DirClose:
 102              	.LVL5:
 103              	.LFB1:
 180:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 181:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 182:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 183:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 184:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 185:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                       SYSTEM DRIVER FUNCTIONS
ARM GAS  /tmp/ccNRjW2f.s 			page 6


 186:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 187:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 188:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 189:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 190:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 191:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 192:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                          FS_FAT_DirClose()
 193:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 194:rtos/uC-FS/FAT/fs_fat_dir.c **** * Description : Close a directory.
 195:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 196:rtos/uC-FS/FAT/fs_fat_dir.c **** * Argument(s) : p_dir       Pointer to a directory.
 197:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 198:rtos/uC-FS/FAT/fs_fat_dir.c **** * Return(s)   : none.
 199:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 200:rtos/uC-FS/FAT/fs_fat_dir.c **** * Note(s)     : (1) The file system lock MUST be held to free the directory data back to the direct
 201:rtos/uC-FS/FAT/fs_fat_dir.c **** *                   data pool.
 202:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 203:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 204:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 205:rtos/uC-FS/FAT/fs_fat_dir.c **** void  FS_FAT_DirClose (FS_DIR  *p_dir)
 206:rtos/uC-FS/FAT/fs_fat_dir.c **** {
 104              		.loc 1 206 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		.loc 1 206 1 is_stmt 0 view .LVU16
 109 0000 10B5     		push	{r4, lr}
 110              	.LCFI3:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 4, -8
 113              		.cfi_offset 14, -4
 114 0002 82B0     		sub	sp, sp, #8
 115              	.LCFI4:
 116              		.cfi_def_cfa_offset 16
 207:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_FILE_DATA  *p_dir_data;
 117              		.loc 1 207 5 is_stmt 1 view .LVU17
 208:rtos/uC-FS/FAT/fs_fat_dir.c ****     LIB_ERR            pool_err;
 118              		.loc 1 208 5 view .LVU18
 209:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_ERR             err;
 119              		.loc 1 209 5 view .LVU19
 210:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 211:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 212:rtos/uC-FS/FAT/fs_fat_dir.c ****     p_dir_data = (FS_FAT_FILE_DATA *)p_dir->DataPtr;
 120              		.loc 1 212 5 view .LVU20
 121              		.loc 1 212 16 is_stmt 0 view .LVU21
 122 0004 4469     		ldr	r4, [r0, #20]
 123              	.LVL6:
 213:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 214:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 215:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 216:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* ------------------- FREE DIR DAT
 217:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_OS_Lock(&err);                                           /* Acquire FS lock (see Note #1).  
 124              		.loc 1 217 5 is_stmt 1 view .LVU22
 125 0006 01A8     		add	r0, sp, #4
 126              	.LVL7:
 127              		.loc 1 217 5 is_stmt 0 view .LVU23
 128 0008 FFF7FEFF 		bl	FS_OS_Lock
ARM GAS  /tmp/ccNRjW2f.s 			page 7


 129              	.LVL8:
 218:rtos/uC-FS/FAT/fs_fat_dir.c ****     if (err != FS_ERR_NONE) {
 130              		.loc 1 218 5 is_stmt 1 view .LVU24
 131              		.loc 1 218 13 is_stmt 0 view .LVU25
 132 000c BDF80430 		ldrh	r3, [sp, #4]
 133              		.loc 1 218 8 view .LVU26
 134 0010 7BB9     		cbnz	r3, .L10
 135              	.L7:
 219:rtos/uC-FS/FAT/fs_fat_dir.c ****         CPU_SW_EXCEPTION(;);                                    /* Fatal err.                      
 136              		.loc 1 219 9 is_stmt 1 discriminator 1 view .LVU27
 220:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 221:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 222:rtos/uC-FS/FAT/fs_fat_dir.c ****     Mem_PoolBlkFree(        &FS_FAT_DirDataPool,                /* Free FAT dir data.              
 137              		.loc 1 222 5 discriminator 1 view .LVU28
 138 0012 0DF10602 		add	r2, sp, #6
 139 0016 2146     		mov	r1, r4
 140 0018 0948     		ldr	r0, .L12
 141 001a FFF7FEFF 		bl	Mem_PoolBlkFree
 142              	.LVL9:
 223:rtos/uC-FS/FAT/fs_fat_dir.c ****                     (void *) p_dir_data,
 224:rtos/uC-FS/FAT/fs_fat_dir.c ****                             &pool_err);
 225:rtos/uC-FS/FAT/fs_fat_dir.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
 143              		.loc 1 225 5 discriminator 1 view .LVU29
 144              		.loc 1 225 18 is_stmt 0 discriminator 1 view .LVU30
 145 001e BDF80620 		ldrh	r2, [sp, #6]
 146              		.loc 1 225 8 discriminator 1 view .LVU31
 147 0022 42F21073 		movw	r3, #10000
 148 0026 9A42     		cmp	r2, r3
 149 0028 06D1     		bne	.L11
 150              	.L8:
 226:rtos/uC-FS/FAT/fs_fat_dir.c ****         CPU_SW_EXCEPTION(;);                                    /* Fatal err.                      
 151              		.loc 1 226 9 is_stmt 1 discriminator 1 view .LVU32
 227:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 228:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 229:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_OS_Unlock();
 152              		.loc 1 229 5 discriminator 1 view .LVU33
 153 002a FFF7FEFF 		bl	FS_OS_Unlock
 154              	.LVL10:
 230:rtos/uC-FS/FAT/fs_fat_dir.c **** }
 155              		.loc 1 230 1 is_stmt 0 discriminator 1 view .LVU34
 156 002e 02B0     		add	sp, sp, #8
 157              	.LCFI5:
 158              		.cfi_remember_state
 159              		.cfi_def_cfa_offset 8
 160              		@ sp needed
 161 0030 10BD     		pop	{r4, pc}
 162              	.LVL11:
 163              	.L10:
 164              	.LCFI6:
 165              		.cfi_restore_state
 219:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 166              		.loc 1 219 9 is_stmt 1 view .LVU35
 219:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 167              		.loc 1 219 9 view .LVU36
 168 0032 FFF7FEFF 		bl	CPU_SW_Exception
 169              	.LVL12:
 170 0036 ECE7     		b	.L7
ARM GAS  /tmp/ccNRjW2f.s 			page 8


 171              	.L11:
 226:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 172              		.loc 1 226 9 view .LVU37
 226:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 173              		.loc 1 226 9 view .LVU38
 174 0038 FFF7FEFF 		bl	CPU_SW_Exception
 175              	.LVL13:
 176 003c F5E7     		b	.L8
 177              	.L13:
 178 003e 00BF     		.align	2
 179              	.L12:
 180 0040 00000000 		.word	.LANCHOR0
 181              		.cfi_endproc
 182              	.LFE1:
 184              		.section	.text.FS_FAT_DirOpen,"ax",%progbits
 185              		.align	1
 186              		.global	FS_FAT_DirOpen
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	FS_FAT_DirOpen:
 193              	.LVL14:
 194              	.LFB2:
 231:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 232:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 233:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 234:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 235:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                          FS_FAT_DirOpen()
 236:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 237:rtos/uC-FS/FAT/fs_fat_dir.c **** * Description : Open a directory.
 238:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 239:rtos/uC-FS/FAT/fs_fat_dir.c **** * Argument(s) : p_dir       Pointer to associated directory.
 240:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 241:rtos/uC-FS/FAT/fs_fat_dir.c **** *               name_dir    Name of the directory.
 242:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 243:rtos/uC-FS/FAT/fs_fat_dir.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 244:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 245:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_NONE                      Directory opened successfully.
 246:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_BUF_NONE_AVAIL            Buffer not available.
 247:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_DEV                       Device access error.
 248:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_ENTRY_NOT_DIR             File system entry NOT a direct
 249:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_ENTRY_NOT_FOUND           File system entry NOT found
 250:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
 251:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
 252:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_NAME_INVALID              Invalid file name or path.
 253:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 254:rtos/uC-FS/FAT/fs_fat_dir.c **** * Return(s)   : none.
 255:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 256:rtos/uC-FS/FAT/fs_fat_dir.c **** * Note(s)     : (1) The file system lock MUST be held to get the directory data from the directory 
 257:rtos/uC-FS/FAT/fs_fat_dir.c **** *                   pool.
 258:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 259:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 260:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 261:rtos/uC-FS/FAT/fs_fat_dir.c **** void  FS_FAT_DirOpen (FS_DIR    *p_dir,
 262:rtos/uC-FS/FAT/fs_fat_dir.c ****                       CPU_CHAR  *name_dir,
 263:rtos/uC-FS/FAT/fs_fat_dir.c ****                       FS_ERR    *p_err)
ARM GAS  /tmp/ccNRjW2f.s 			page 9


 264:rtos/uC-FS/FAT/fs_fat_dir.c **** {
 195              		.loc 1 264 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		.loc 1 264 1 is_stmt 0 view .LVU40
 200 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 201              	.LCFI7:
 202              		.cfi_def_cfa_offset 20
 203              		.cfi_offset 4, -20
 204              		.cfi_offset 5, -16
 205              		.cfi_offset 6, -12
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 85B0     		sub	sp, sp, #20
 209              	.LCFI8:
 210              		.cfi_def_cfa_offset 40
 211 0004 0746     		mov	r7, r0
 212 0006 0D46     		mov	r5, r1
 213 0008 1446     		mov	r4, r2
 265:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_FILE_DATA  *p_dir_data;
 214              		.loc 1 265 5 is_stmt 1 view .LVU41
 266:rtos/uC-FS/FAT/fs_fat_dir.c ****     LIB_ERR            pool_err;
 215              		.loc 1 266 5 view .LVU42
 267:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 268:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 269:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* ------------------ ALLOC DIR DAT
 270:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_OS_Lock(p_err);                                          /* Acquire FS lock (see Note #1).  
 216              		.loc 1 270 5 view .LVU43
 217 000a 1046     		mov	r0, r2
 218              	.LVL15:
 219              		.loc 1 270 5 is_stmt 0 view .LVU44
 220 000c FFF7FEFF 		bl	FS_OS_Lock
 221              	.LVL16:
 271:rtos/uC-FS/FAT/fs_fat_dir.c ****     if (*p_err != FS_ERR_NONE) {
 222              		.loc 1 271 5 is_stmt 1 view .LVU45
 223              		.loc 1 271 9 is_stmt 0 view .LVU46
 224 0010 2388     		ldrh	r3, [r4]
 225              		.loc 1 271 8 view .LVU47
 226 0012 0BB1     		cbz	r3, .L19
 227              	.L14:
 272:rtos/uC-FS/FAT/fs_fat_dir.c ****         return;
 273:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 274:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 275:rtos/uC-FS/FAT/fs_fat_dir.c ****     p_dir_data = (FS_FAT_FILE_DATA *)Mem_PoolBlkGet(&FS_FAT_DirDataPool,
 276:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                      sizeof(FS_FAT_FILE_DATA),
 277:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                     &pool_err);
 278:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 279:rtos/uC-FS/FAT/fs_fat_dir.c ****     (void)pool_err;                                            /* Err ignored. Ret val chk'd instea
 280:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_OS_Unlock();
 281:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 282:rtos/uC-FS/FAT/fs_fat_dir.c ****     if (p_dir_data == DEF_NULL) {
 283:rtos/uC-FS/FAT/fs_fat_dir.c ****         return;
 284:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 285:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 286:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 287:rtos/uC-FS/FAT/fs_fat_dir.c **** 
ARM GAS  /tmp/ccNRjW2f.s 			page 10


 288:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* --------------------- OPEN DIR -
 289:rtos/uC-FS/FAT/fs_fat_dir.c ****     p_dir->DataPtr = (void *)p_dir_data;
 290:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_LowEntryFind( p_dir->VolPtr,
 291:rtos/uC-FS/FAT/fs_fat_dir.c ****                          p_dir_data,
 292:rtos/uC-FS/FAT/fs_fat_dir.c ****                          name_dir,
 293:rtos/uC-FS/FAT/fs_fat_dir.c ****                         (FS_FAT_MODE_RD | FS_FAT_MODE_DIR),
 294:rtos/uC-FS/FAT/fs_fat_dir.c ****                          p_err);
 295:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 296:rtos/uC-FS/FAT/fs_fat_dir.c ****     if (*p_err != FS_ERR_NONE) {
 297:rtos/uC-FS/FAT/fs_fat_dir.c ****          FS_FAT_DirClose(p_dir);
 298:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 299:rtos/uC-FS/FAT/fs_fat_dir.c **** }
 228              		.loc 1 299 1 view .LVU48
 229 0014 05B0     		add	sp, sp, #20
 230              	.LCFI9:
 231              		.cfi_remember_state
 232              		.cfi_def_cfa_offset 20
 233              		@ sp needed
 234 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 235              	.LVL17:
 236              	.L19:
 237              	.LCFI10:
 238              		.cfi_restore_state
 275:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                      sizeof(FS_FAT_FILE_DATA),
 239              		.loc 1 275 5 is_stmt 1 view .LVU49
 275:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                      sizeof(FS_FAT_FILE_DATA),
 240              		.loc 1 275 38 is_stmt 0 view .LVU50
 241 0018 0DF10E02 		add	r2, sp, #14
 242 001c 4021     		movs	r1, #64
 243 001e 0C48     		ldr	r0, .L20
 244 0020 FFF7FEFF 		bl	Mem_PoolBlkGet
 245              	.LVL18:
 246 0024 0646     		mov	r6, r0
 247              	.LVL19:
 279:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_OS_Unlock();
 248              		.loc 1 279 5 is_stmt 1 view .LVU51
 280:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 249              		.loc 1 280 5 view .LVU52
 250 0026 FFF7FEFF 		bl	FS_OS_Unlock
 251              	.LVL20:
 282:rtos/uC-FS/FAT/fs_fat_dir.c ****         return;
 252              		.loc 1 282 5 view .LVU53
 282:rtos/uC-FS/FAT/fs_fat_dir.c ****         return;
 253              		.loc 1 282 8 is_stmt 0 view .LVU54
 254 002a 002E     		cmp	r6, #0
 255 002c F2D0     		beq	.L14
 289:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_LowEntryFind( p_dir->VolPtr,
 256              		.loc 1 289 5 is_stmt 1 view .LVU55
 289:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_LowEntryFind( p_dir->VolPtr,
 257              		.loc 1 289 20 is_stmt 0 view .LVU56
 258 002e 7E61     		str	r6, [r7, #20]
 290:rtos/uC-FS/FAT/fs_fat_dir.c ****                          p_dir_data,
 259              		.loc 1 290 5 is_stmt 1 view .LVU57
 260 0030 0094     		str	r4, [sp]
 261 0032 40F20113 		movw	r3, #257
 262 0036 2A46     		mov	r2, r5
 263 0038 3146     		mov	r1, r6
ARM GAS  /tmp/ccNRjW2f.s 			page 11


 264 003a 3869     		ldr	r0, [r7, #16]
 265 003c FFF7FEFF 		bl	FS_FAT_LowEntryFind
 266              	.LVL21:
 296:rtos/uC-FS/FAT/fs_fat_dir.c ****          FS_FAT_DirClose(p_dir);
 267              		.loc 1 296 5 view .LVU58
 296:rtos/uC-FS/FAT/fs_fat_dir.c ****          FS_FAT_DirClose(p_dir);
 268              		.loc 1 296 9 is_stmt 0 view .LVU59
 269 0040 2388     		ldrh	r3, [r4]
 296:rtos/uC-FS/FAT/fs_fat_dir.c ****          FS_FAT_DirClose(p_dir);
 270              		.loc 1 296 8 view .LVU60
 271 0042 002B     		cmp	r3, #0
 272 0044 E6D0     		beq	.L14
 297:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 273              		.loc 1 297 10 is_stmt 1 view .LVU61
 274 0046 3846     		mov	r0, r7
 275 0048 FFF7FEFF 		bl	FS_FAT_DirClose
 276              	.LVL22:
 277 004c E2E7     		b	.L14
 278              	.L21:
 279 004e 00BF     		.align	2
 280              	.L20:
 281 0050 00000000 		.word	.LANCHOR0
 282              		.cfi_endproc
 283              	.LFE2:
 285              		.section	.text.FS_FAT_DirRd,"ax",%progbits
 286              		.align	1
 287              		.global	FS_FAT_DirRd
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	FS_FAT_DirRd:
 294              	.LVL23:
 295              	.LFB3:
 300:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 301:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 302:rtos/uC-FS/FAT/fs_fat_dir.c **** /*
 303:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 304:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                            FSSys_DirRd()
 305:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 306:rtos/uC-FS/FAT/fs_fat_dir.c **** * Description : Read a directory entry from a directory.
 307:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 308:rtos/uC-FS/FAT/fs_fat_dir.c **** * Argument(s) : p_dir           Pointer to a directory.
 309:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 310:rtos/uC-FS/FAT/fs_fat_dir.c **** *               p_dir_entry     Pointer to a directory entry.
 311:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 312:rtos/uC-FS/FAT/fs_fat_dir.c **** *               p_err           Pointer to variable that will receive the return error code from th
 313:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 314:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_NONE              Directory entry read successfully.
 315:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_EOF               End of directory reached.
 316:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_DEV               Device access error.
 317:rtos/uC-FS/FAT/fs_fat_dir.c **** *                                   FS_ERR_BUF_NONE_AVAIL    Buffer not available.
 318:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 319:rtos/uC-FS/FAT/fs_fat_dir.c **** * Return(s)   : none.
 320:rtos/uC-FS/FAT/fs_fat_dir.c **** *
 321:rtos/uC-FS/FAT/fs_fat_dir.c **** * Note(s)     : (1) A block, for the purpose of the file information, is a cluster.  The number of 
 322:rtos/uC-FS/FAT/fs_fat_dir.c **** *                   is the number of clusters holding file data; it is possible that additional emp
ARM GAS  /tmp/ccNRjW2f.s 			page 12


 323:rtos/uC-FS/FAT/fs_fat_dir.c **** *                   clusters may be linked to the file.
 324:rtos/uC-FS/FAT/fs_fat_dir.c **** ***************************************************************************************************
 325:rtos/uC-FS/FAT/fs_fat_dir.c **** */
 326:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 327:rtos/uC-FS/FAT/fs_fat_dir.c **** void  FS_FAT_DirRd (FS_DIR        *p_dir,
 328:rtos/uC-FS/FAT/fs_fat_dir.c ****                     FS_DIR_ENTRY  *p_dir_entry,
 329:rtos/uC-FS/FAT/fs_fat_dir.c ****                     FS_ERR        *p_err)
 330:rtos/uC-FS/FAT/fs_fat_dir.c **** {
 296              		.loc 1 330 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 16
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		.loc 1 330 1 is_stmt 0 view .LVU63
 301 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 302              	.LCFI11:
 303              		.cfi_def_cfa_offset 28
 304              		.cfi_offset 4, -28
 305              		.cfi_offset 5, -24
 306              		.cfi_offset 6, -20
 307              		.cfi_offset 7, -16
 308              		.cfi_offset 8, -12
 309              		.cfi_offset 9, -8
 310              		.cfi_offset 14, -4
 311 0004 87B0     		sub	sp, sp, #28
 312              	.LCFI12:
 313              		.cfi_def_cfa_offset 56
 314 0006 0446     		mov	r4, r0
 315 0008 0D46     		mov	r5, r1
 316 000a 1646     		mov	r6, r2
 331:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_BUF            *p_buf;
 317              		.loc 1 331 5 is_stmt 1 view .LVU64
 332:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_FILE_DATA  *p_dir_data;
 318              		.loc 1 332 5 view .LVU65
 333:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_DATE        date_val;
 319              		.loc 1 333 5 view .LVU66
 334:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_DIR_POS     end_pos;
 320              		.loc 1 334 5 view .LVU67
 335:rtos/uC-FS/FAT/fs_fat_dir.c ****     CPU_INT08U         fat_attrib;
 321              		.loc 1 335 5 view .LVU68
 336:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_DATA       *p_fat_data;
 322              		.loc 1 336 5 view .LVU69
 337:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FLAGS           fs_attrib;
 323              		.loc 1 337 5 view .LVU70
 338:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_DIR_POS     pos;
 324              		.loc 1 338 5 view .LVU71
 339:rtos/uC-FS/FAT/fs_fat_dir.c ****     CPU_INT08U        *p_temp;
 325              		.loc 1 339 5 view .LVU72
 340:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_TIME        time_val;
 326              		.loc 1 340 5 view .LVU73
 341:rtos/uC-FS/FAT/fs_fat_dir.c **** #if  defined(FS_FAT_LFN_MODULE_PRESENT) && \
 342:rtos/uC-FS/FAT/fs_fat_dir.c ****             (FS_CFG_UTF8_EN == DEF_ENABLED)
 343:rtos/uC-FS/FAT/fs_fat_dir.c ****     CPU_WCHAR         *p_name_rtn;
 344:rtos/uC-FS/FAT/fs_fat_dir.c ****     CPU_WCHAR          name_lfn[FS_FAT_MAX_FILE_NAME_LEN + 1u];
 345:rtos/uC-FS/FAT/fs_fat_dir.c **** #endif
 346:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 347:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 348:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* ------------------ PREPARE FOR R
ARM GAS  /tmp/ccNRjW2f.s 			page 13


 349:rtos/uC-FS/FAT/fs_fat_dir.c ****     p_buf = FSBuf_Get(p_dir->VolPtr);                           /* Get rd buf.                     
 327              		.loc 1 349 5 view .LVU74
 328              		.loc 1 349 13 is_stmt 0 view .LVU75
 329 000c 0069     		ldr	r0, [r0, #16]
 330              	.LVL24:
 331              		.loc 1 349 13 view .LVU76
 332 000e FFF7FEFF 		bl	FSBuf_Get
 333              	.LVL25:
 350:rtos/uC-FS/FAT/fs_fat_dir.c ****     if (p_buf == (FS_BUF *)0) {
 334              		.loc 1 350 5 is_stmt 1 view .LVU77
 335              		.loc 1 350 8 is_stmt 0 view .LVU78
 336 0012 F8B1     		cbz	r0, .L34
 337 0014 8046     		mov	r8, r0
 351:rtos/uC-FS/FAT/fs_fat_dir.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 352:rtos/uC-FS/FAT/fs_fat_dir.c ****         return;
 353:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 354:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 355:rtos/uC-FS/FAT/fs_fat_dir.c ****     p_dir_data = (FS_FAT_FILE_DATA *)(p_dir->DataPtr);
 338              		.loc 1 355 5 is_stmt 1 view .LVU79
 339              		.loc 1 355 16 is_stmt 0 view .LVU80
 340 0016 6769     		ldr	r7, [r4, #20]
 341              	.LVL26:
 356:rtos/uC-FS/FAT/fs_fat_dir.c ****     p_fat_data = (FS_FAT_DATA      *)(p_dir->VolPtr->DataPtr);
 342              		.loc 1 356 5 is_stmt 1 view .LVU81
 343              		.loc 1 356 44 is_stmt 0 view .LVU82
 344 0018 2069     		ldr	r0, [r4, #16]
 345              	.LVL27:
 346              		.loc 1 356 16 view .LVU83
 347 001a D0F83490 		ldr	r9, [r0, #52]
 348              	.LVL28:
 357:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 358:rtos/uC-FS/FAT/fs_fat_dir.c ****     pos.SecNbr = p_dir_data->FileCurSec;
 349              		.loc 1 358 5 is_stmt 1 view .LVU84
 350              		.loc 1 358 28 is_stmt 0 view .LVU85
 351 001e BB6A     		ldr	r3, [r7, #40]
 352              		.loc 1 358 16 view .LVU86
 353 0020 0293     		str	r3, [sp, #8]
 359:rtos/uC-FS/FAT/fs_fat_dir.c ****     pos.SecPos = p_dir_data->FileCurSecPos;
 354              		.loc 1 359 5 is_stmt 1 view .LVU87
 355              		.loc 1 359 28 is_stmt 0 view .LVU88
 356 0022 FB6A     		ldr	r3, [r7, #44]
 357              		.loc 1 359 16 view .LVU89
 358 0024 0393     		str	r3, [sp, #12]
 360:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 361:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 362:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* ------------------ FIND DIR ENTR
 363:rtos/uC-FS/FAT/fs_fat_dir.c **** #if  defined(FS_FAT_LFN_MODULE_PRESENT) && \
 364:rtos/uC-FS/FAT/fs_fat_dir.c ****             (FS_CFG_UTF8_EN == DEF_ENABLED)
 365:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_FN_API_Active.NextDirEntryGet(         p_dir->VolPtr,
 366:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                   p_buf,
 367:rtos/uC-FS/FAT/fs_fat_dir.c ****                                          (void *)&name_lfn[0],
 368:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                  &pos,
 369:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                  &end_pos,
 370:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                   p_err);
 371:rtos/uC-FS/FAT/fs_fat_dir.c **** #else
 372:rtos/uC-FS/FAT/fs_fat_dir.c ****     FS_FAT_FN_API_Active.NextDirEntryGet(         p_dir->VolPtr,
 359              		.loc 1 372 5 is_stmt 1 view .LVU90
ARM GAS  /tmp/ccNRjW2f.s 			page 14


 360              		.loc 1 372 25 is_stmt 0 view .LVU91
 361 0026 394B     		ldr	r3, .L35
 362 0028 1C69     		ldr	r4, [r3, #16]
 363              	.LVL29:
 364              		.loc 1 372 5 view .LVU92
 365 002a 0196     		str	r6, [sp, #4]
 366 002c 04AB     		add	r3, sp, #16
 367 002e 0093     		str	r3, [sp]
 368 0030 02AB     		add	r3, sp, #8
 369 0032 2A46     		mov	r2, r5
 370 0034 4146     		mov	r1, r8
 371 0036 A047     		blx	r4
 372              	.LVL30:
 373:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                   p_buf,
 374:rtos/uC-FS/FAT/fs_fat_dir.c ****                                          (void *)&p_dir_entry->Name[0],
 375:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                  &pos,
 376:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                  &end_pos,
 377:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                   p_err);
 378:rtos/uC-FS/FAT/fs_fat_dir.c **** #endif
 379:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 380:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* ---------------- GET DIR ENTRY I
 381:rtos/uC-FS/FAT/fs_fat_dir.c ****     switch (*p_err) {
 373              		.loc 1 381 5 is_stmt 1 view .LVU93
 374              		.loc 1 381 13 is_stmt 0 view .LVU94
 375 0038 3388     		ldrh	r3, [r6]
 376              		.loc 1 381 5 view .LVU95
 377 003a 73B1     		cbz	r3, .L25
 378 003c 162B     		cmp	r3, #22
 379 003e 03D1     		bne	.L26
 382:rtos/uC-FS/FAT/fs_fat_dir.c ****         case FS_ERR_EOF:                                        /* EOF encountered.                
 383:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_data->FileCurSec    = end_pos.SecNbr;
 380              		.loc 1 383 14 is_stmt 1 view .LVU96
 381              		.loc 1 383 49 is_stmt 0 view .LVU97
 382 0040 049B     		ldr	r3, [sp, #16]
 383              		.loc 1 383 40 view .LVU98
 384 0042 BB62     		str	r3, [r7, #40]
 384:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_data->FileCurSecPos = end_pos.SecPos;
 385              		.loc 1 384 14 is_stmt 1 view .LVU99
 386              		.loc 1 384 49 is_stmt 0 view .LVU100
 387 0044 059B     		ldr	r3, [sp, #20]
 388              		.loc 1 384 40 view .LVU101
 389 0046 FB62     		str	r3, [r7, #44]
 385:rtos/uC-FS/FAT/fs_fat_dir.c ****              break;
 390              		.loc 1 385 14 is_stmt 1 view .LVU102
 391              	.L26:
 386:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 387:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 388:rtos/uC-FS/FAT/fs_fat_dir.c ****         case FS_ERR_NONE:
 389:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_temp = (CPU_INT08U *)p_buf->DataPtr + end_pos.SecPos;
 390:rtos/uC-FS/FAT/fs_fat_dir.c **** #if  defined(FS_FAT_LFN_MODULE_PRESENT) && \
 391:rtos/uC-FS/FAT/fs_fat_dir.c ****             (FS_CFG_UTF8_EN == DEF_ENABLED)
 392:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_name_rtn = &name_lfn[0];
 393:rtos/uC-FS/FAT/fs_fat_dir.c ****              WC_StrToMB(&p_dir_entry->Name[0],                  /* Copy wide-char str to multi-byte
 394:rtos/uC-FS/FAT/fs_fat_dir.c ****                         &p_name_rtn,
 395:rtos/uC-FS/FAT/fs_fat_dir.c ****                          FS_FAT_MAX_FILE_NAME_LEN);
 396:rtos/uC-FS/FAT/fs_fat_dir.c **** #endif
 397:rtos/uC-FS/FAT/fs_fat_dir.c **** 
ARM GAS  /tmp/ccNRjW2f.s 			page 15


 398:rtos/uC-FS/FAT/fs_fat_dir.c ****              fs_attrib  = 0u;
 399:rtos/uC-FS/FAT/fs_fat_dir.c ****              fat_attrib = MEM_VAL_GET_INT08U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_ATTR));;
 400:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* Parse attrib's.                 
 401:rtos/uC-FS/FAT/fs_fat_dir.c ****              DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_RD);
 402:rtos/uC-FS/FAT/fs_fat_dir.c ****              if (DEF_BIT_IS_SET(fat_attrib, FS_FAT_DIRENT_ATTR_READ_ONLY) == DEF_NO) {
 403:rtos/uC-FS/FAT/fs_fat_dir.c ****                  DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_WR);
 404:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
 405:rtos/uC-FS/FAT/fs_fat_dir.c ****              if (DEF_BIT_IS_SET(fat_attrib, FS_FAT_DIRENT_ATTR_HIDDEN   ) == DEF_YES) {
 406:rtos/uC-FS/FAT/fs_fat_dir.c ****                  DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_HIDDEN);
 407:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
 408:rtos/uC-FS/FAT/fs_fat_dir.c ****              if (DEF_BIT_IS_SET(fat_attrib, FS_FAT_DIRENT_ATTR_DIRECTORY) == DEF_YES) {
 409:rtos/uC-FS/FAT/fs_fat_dir.c ****                  DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_DIR);
 410:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
 411:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 412:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_entry->Info.Attrib  =   fs_attrib;
 413:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_entry->Info.Size    =  (FS_FILE_SIZE)MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp +
 414:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 415:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* Calc blk cnt (see Note #1).     
 416:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_entry->Info.BlkSize =  p_fat_data->ClusSize_octet;
 417:rtos/uC-FS/FAT/fs_fat_dir.c ****              if ((p_dir_entry->Info.Size & (p_fat_data->ClusSize_octet - 1u)) != 0u) {
 418:rtos/uC-FS/FAT/fs_fat_dir.c ****                 p_dir_entry->Info.BlkCnt = FS_UTIL_DIV_PWR2(p_dir_entry->Info.Size, p_fat_data->Clu
 419:rtos/uC-FS/FAT/fs_fat_dir.c ****              } else {
 420:rtos/uC-FS/FAT/fs_fat_dir.c ****                 p_dir_entry->Info.BlkCnt = FS_UTIL_DIV_PWR2(p_dir_entry->Info.Size, p_fat_data->Clu
 421:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
 422:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 423:rtos/uC-FS/FAT/fs_fat_dir.c ****              date_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_CRTDATE));
 424:rtos/uC-FS/FAT/fs_fat_dir.c ****              time_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_CRTTIME));
 425:rtos/uC-FS/FAT/fs_fat_dir.c ****              FS_FAT_DateTimeParse(&(p_dir_entry->Info.DateTimeCreate), date_val, time_val);
 426:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 427:rtos/uC-FS/FAT/fs_fat_dir.c ****              date_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_WRTDATE));
 428:rtos/uC-FS/FAT/fs_fat_dir.c ****              time_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_WRTTIME));
 429:rtos/uC-FS/FAT/fs_fat_dir.c ****              FS_FAT_DateTimeParse(&(p_dir_entry->Info.DateTimeWr),     date_val, time_val);
 430:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 431:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_data->FileCurSec    = end_pos.SecNbr;
 432:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_data->FileCurSecPos = end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 433:rtos/uC-FS/FAT/fs_fat_dir.c ****              break;
 434:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 435:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 436:rtos/uC-FS/FAT/fs_fat_dir.c ****         default:                                                /* Other error.                    
 437:rtos/uC-FS/FAT/fs_fat_dir.c ****              break;
 438:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 439:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 440:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 441:rtos/uC-FS/FAT/fs_fat_dir.c ****     FSBuf_Free(p_buf);
 392              		.loc 1 441 5 view .LVU103
 393 0048 4046     		mov	r0, r8
 394 004a FFF7FEFF 		bl	FSBuf_Free
 395              	.LVL31:
 396              	.L22:
 442:rtos/uC-FS/FAT/fs_fat_dir.c **** }
 397              		.loc 1 442 1 is_stmt 0 view .LVU104
 398 004e 07B0     		add	sp, sp, #28
 399              	.LCFI13:
 400              		.cfi_remember_state
 401              		.cfi_def_cfa_offset 28
 402              		@ sp needed
 403 0050 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccNRjW2f.s 			page 16


 404              	.LVL32:
 405              	.L34:
 406              	.LCFI14:
 407              		.cfi_restore_state
 351:rtos/uC-FS/FAT/fs_fat_dir.c ****         return;
 408              		.loc 1 351 8 is_stmt 1 view .LVU105
 351:rtos/uC-FS/FAT/fs_fat_dir.c ****         return;
 409              		.loc 1 351 15 is_stmt 0 view .LVU106
 410 0054 6423     		movs	r3, #100
 411 0056 3380     		strh	r3, [r6]	@ movhi
 352:rtos/uC-FS/FAT/fs_fat_dir.c ****     }
 412              		.loc 1 352 9 is_stmt 1 view .LVU107
 413 0058 F9E7     		b	.L22
 414              	.LVL33:
 415              	.L25:
 389:rtos/uC-FS/FAT/fs_fat_dir.c **** #if  defined(FS_FAT_LFN_MODULE_PRESENT) && \
 416              		.loc 1 389 14 view .LVU108
 389:rtos/uC-FS/FAT/fs_fat_dir.c **** #if  defined(FS_FAT_LFN_MODULE_PRESENT) && \
 417              		.loc 1 389 42 is_stmt 0 view .LVU109
 418 005a D8F81040 		ldr	r4, [r8, #16]
 389:rtos/uC-FS/FAT/fs_fat_dir.c **** #if  defined(FS_FAT_LFN_MODULE_PRESENT) && \
 419              		.loc 1 389 61 view .LVU110
 420 005e 059B     		ldr	r3, [sp, #20]
 389:rtos/uC-FS/FAT/fs_fat_dir.c **** #if  defined(FS_FAT_LFN_MODULE_PRESENT) && \
 421              		.loc 1 389 21 view .LVU111
 422 0060 1C44     		add	r4, r4, r3
 423              	.LVL34:
 398:rtos/uC-FS/FAT/fs_fat_dir.c ****              fat_attrib = MEM_VAL_GET_INT08U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_ATTR));;
 424              		.loc 1 398 14 is_stmt 1 view .LVU112
 399:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* Parse attrib's.                 
 425              		.loc 1 399 14 view .LVU113
 399:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* Parse attrib's.                 
 426              		.loc 1 399 25 is_stmt 0 view .LVU114
 427 0062 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 428              	.LVL35:
 399:rtos/uC-FS/FAT/fs_fat_dir.c ****                                                                 /* Parse attrib's.                 
 429              		.loc 1 399 96 is_stmt 1 view .LVU115
 401:rtos/uC-FS/FAT/fs_fat_dir.c ****              if (DEF_BIT_IS_SET(fat_attrib, FS_FAT_DIRENT_ATTR_READ_ONLY) == DEF_NO) {
 430              		.loc 1 401 14 view .LVU116
 402:rtos/uC-FS/FAT/fs_fat_dir.c ****                  DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_WR);
 431              		.loc 1 402 14 view .LVU117
 402:rtos/uC-FS/FAT/fs_fat_dir.c ****                  DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_WR);
 432              		.loc 1 402 17 is_stmt 0 view .LVU118
 433 0064 13F0010F 		tst	r3, #1
 434 0068 47D0     		beq	.L32
 401:rtos/uC-FS/FAT/fs_fat_dir.c ****              if (DEF_BIT_IS_SET(fat_attrib, FS_FAT_DIRENT_ATTR_READ_ONLY) == DEF_NO) {
 435              		.loc 1 401 14 view .LVU119
 436 006a 0122     		movs	r2, #1
 437              	.L27:
 438              	.LVL36:
 405:rtos/uC-FS/FAT/fs_fat_dir.c ****                  DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_HIDDEN);
 439              		.loc 1 405 14 is_stmt 1 view .LVU120
 405:rtos/uC-FS/FAT/fs_fat_dir.c ****                  DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_HIDDEN);
 440              		.loc 1 405 17 is_stmt 0 view .LVU121
 441 006c 13F0020F 		tst	r3, #2
 442 0070 01D0     		beq	.L28
 406:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
ARM GAS  /tmp/ccNRjW2f.s 			page 17


 443              		.loc 1 406 18 is_stmt 1 view .LVU122
 444 0072 42F00402 		orr	r2, r2, #4
 445              	.LVL37:
 446              	.L28:
 408:rtos/uC-FS/FAT/fs_fat_dir.c ****                  DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_DIR);
 447              		.loc 1 408 14 view .LVU123
 408:rtos/uC-FS/FAT/fs_fat_dir.c ****                  DEF_BIT_SET(fs_attrib, FS_ENTRY_ATTRIB_DIR);
 448              		.loc 1 408 17 is_stmt 0 view .LVU124
 449 0076 13F0100F 		tst	r3, #16
 450 007a 01D0     		beq	.L29
 409:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
 451              		.loc 1 409 18 is_stmt 1 view .LVU125
 452 007c 42F04002 		orr	r2, r2, #64
 453              	.LVL38:
 454              	.L29:
 412:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_entry->Info.Size    =  (FS_FILE_SIZE)MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp +
 455              		.loc 1 412 14 view .LVU126
 412:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_entry->Info.Size    =  (FS_FILE_SIZE)MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp +
 456              		.loc 1 412 40 is_stmt 0 view .LVU127
 457 0080 C5F80021 		str	r2, [r5, #256]
 413:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 458              		.loc 1 413 14 is_stmt 1 view .LVU128
 413:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 459              		.loc 1 413 57 is_stmt 0 view .LVU129
 460 0084 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 461              	.LVL39:
 413:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 462              		.loc 1 413 57 view .LVU130
 463 0086 627F     		ldrb	r2, [r4, #29]	@ zero_extendqisi2
 464              	.LVL40:
 413:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 465              		.loc 1 413 57 view .LVU131
 466 0088 03EB0223 		add	r3, r3, r2, lsl #8
 467 008c A27F     		ldrb	r2, [r4, #30]	@ zero_extendqisi2
 468 008e 03EB0243 		add	r3, r3, r2, lsl #16
 469 0092 E27F     		ldrb	r2, [r4, #31]	@ zero_extendqisi2
 413:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 470              		.loc 1 413 43 view .LVU132
 471 0094 03EB0263 		add	r3, r3, r2, lsl #24
 413:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 472              		.loc 1 413 40 view .LVU133
 473 0098 C5F80431 		str	r3, [r5, #260]
 416:rtos/uC-FS/FAT/fs_fat_dir.c ****              if ((p_dir_entry->Info.Size & (p_fat_data->ClusSize_octet - 1u)) != 0u) {
 474              		.loc 1 416 14 is_stmt 1 view .LVU134
 416:rtos/uC-FS/FAT/fs_fat_dir.c ****              if ((p_dir_entry->Info.Size & (p_fat_data->ClusSize_octet - 1u)) != 0u) {
 475              		.loc 1 416 53 is_stmt 0 view .LVU135
 476 009c D9F84420 		ldr	r2, [r9, #68]
 416:rtos/uC-FS/FAT/fs_fat_dir.c ****              if ((p_dir_entry->Info.Size & (p_fat_data->ClusSize_octet - 1u)) != 0u) {
 477              		.loc 1 416 40 view .LVU136
 478 00a0 C5F81821 		str	r2, [r5, #280]
 417:rtos/uC-FS/FAT/fs_fat_dir.c ****                 p_dir_entry->Info.BlkCnt = FS_UTIL_DIV_PWR2(p_dir_entry->Info.Size, p_fat_data->Clu
 479              		.loc 1 417 14 is_stmt 1 view .LVU137
 417:rtos/uC-FS/FAT/fs_fat_dir.c ****                 p_dir_entry->Info.BlkCnt = FS_UTIL_DIV_PWR2(p_dir_entry->Info.Size, p_fat_data->Clu
 480              		.loc 1 417 72 is_stmt 0 view .LVU138
 481 00a4 013A     		subs	r2, r2, #1
 417:rtos/uC-FS/FAT/fs_fat_dir.c ****                 p_dir_entry->Info.BlkCnt = FS_UTIL_DIV_PWR2(p_dir_entry->Info.Size, p_fat_data->Clu
 482              		.loc 1 417 17 view .LVU139
ARM GAS  /tmp/ccNRjW2f.s 			page 18


 483 00a6 1342     		tst	r3, r2
 484 00a8 29D0     		beq	.L30
 418:rtos/uC-FS/FAT/fs_fat_dir.c ****              } else {
 485              		.loc 1 418 17 is_stmt 1 view .LVU140
 418:rtos/uC-FS/FAT/fs_fat_dir.c ****              } else {
 486              		.loc 1 418 44 is_stmt 0 view .LVU141
 487 00aa 99F84820 		ldrb	r2, [r9, #72]	@ zero_extendqisi2
 488 00ae D340     		lsrs	r3, r3, r2
 418:rtos/uC-FS/FAT/fs_fat_dir.c ****              } else {
 489              		.loc 1 418 117 view .LVU142
 490 00b0 0133     		adds	r3, r3, #1
 418:rtos/uC-FS/FAT/fs_fat_dir.c ****              } else {
 491              		.loc 1 418 42 view .LVU143
 492 00b2 C5F81431 		str	r3, [r5, #276]
 493              	.L31:
 423:rtos/uC-FS/FAT/fs_fat_dir.c ****              time_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_CRTTIME));
 494              		.loc 1 423 14 is_stmt 1 view .LVU144
 423:rtos/uC-FS/FAT/fs_fat_dir.c ****              time_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_CRTTIME));
 495              		.loc 1 423 25 is_stmt 0 view .LVU145
 496 00b6 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 497 00b8 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 423:rtos/uC-FS/FAT/fs_fat_dir.c ****              time_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_CRTTIME));
 498              		.loc 1 423 23 view .LVU146
 499 00ba 01EB0321 		add	r1, r1, r3, lsl #8
 500              	.LVL41:
 424:rtos/uC-FS/FAT/fs_fat_dir.c ****              FS_FAT_DateTimeParse(&(p_dir_entry->Info.DateTimeCreate), date_val, time_val);
 501              		.loc 1 424 14 is_stmt 1 view .LVU147
 424:rtos/uC-FS/FAT/fs_fat_dir.c ****              FS_FAT_DateTimeParse(&(p_dir_entry->Info.DateTimeCreate), date_val, time_val);
 502              		.loc 1 424 25 is_stmt 0 view .LVU148
 503 00be A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 504 00c0 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 424:rtos/uC-FS/FAT/fs_fat_dir.c ****              FS_FAT_DateTimeParse(&(p_dir_entry->Info.DateTimeCreate), date_val, time_val);
 505              		.loc 1 424 23 view .LVU149
 506 00c2 02EB0322 		add	r2, r2, r3, lsl #8
 507              	.LVL42:
 425:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 508              		.loc 1 425 14 is_stmt 1 view .LVU150
 509 00c6 92B2     		uxth	r2, r2
 425:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 510              		.loc 1 425 14 is_stmt 0 view .LVU151
 511 00c8 89B2     		uxth	r1, r1
 425:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 512              		.loc 1 425 14 view .LVU152
 513 00ca 05F58470 		add	r0, r5, #264
 514 00ce FFF7FEFF 		bl	FS_FAT_DateTimeParse
 515              	.LVL43:
 427:rtos/uC-FS/FAT/fs_fat_dir.c ****              time_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_WRTTIME));
 516              		.loc 1 427 14 is_stmt 1 view .LVU153
 427:rtos/uC-FS/FAT/fs_fat_dir.c ****              time_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_WRTTIME));
 517              		.loc 1 427 25 is_stmt 0 view .LVU154
 518 00d2 217E     		ldrb	r1, [r4, #24]	@ zero_extendqisi2
 519 00d4 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 427:rtos/uC-FS/FAT/fs_fat_dir.c ****              time_val = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp + FS_FAT_DIRENT_OFF_WRTTIME));
 520              		.loc 1 427 23 view .LVU155
 521 00d6 01EB0321 		add	r1, r1, r3, lsl #8
 522              	.LVL44:
 428:rtos/uC-FS/FAT/fs_fat_dir.c ****              FS_FAT_DateTimeParse(&(p_dir_entry->Info.DateTimeWr),     date_val, time_val);
ARM GAS  /tmp/ccNRjW2f.s 			page 19


 523              		.loc 1 428 14 is_stmt 1 view .LVU156
 428:rtos/uC-FS/FAT/fs_fat_dir.c ****              FS_FAT_DateTimeParse(&(p_dir_entry->Info.DateTimeWr),     date_val, time_val);
 524              		.loc 1 428 25 is_stmt 0 view .LVU157
 525 00da A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 526 00dc E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 428:rtos/uC-FS/FAT/fs_fat_dir.c ****              FS_FAT_DateTimeParse(&(p_dir_entry->Info.DateTimeWr),     date_val, time_val);
 527              		.loc 1 428 23 view .LVU158
 528 00de 02EB0322 		add	r2, r2, r3, lsl #8
 529              	.LVL45:
 429:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 530              		.loc 1 429 14 is_stmt 1 view .LVU159
 531 00e2 92B2     		uxth	r2, r2
 429:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 532              		.loc 1 429 14 is_stmt 0 view .LVU160
 533 00e4 89B2     		uxth	r1, r1
 429:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 534              		.loc 1 429 14 view .LVU161
 535 00e6 05F58870 		add	r0, r5, #272
 536 00ea FFF7FEFF 		bl	FS_FAT_DateTimeParse
 537              	.LVL46:
 431:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_data->FileCurSecPos = end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 538              		.loc 1 431 14 is_stmt 1 view .LVU162
 431:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_data->FileCurSecPos = end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 539              		.loc 1 431 49 is_stmt 0 view .LVU163
 540 00ee 049B     		ldr	r3, [sp, #16]
 431:rtos/uC-FS/FAT/fs_fat_dir.c ****              p_dir_data->FileCurSecPos = end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 541              		.loc 1 431 40 view .LVU164
 542 00f0 BB62     		str	r3, [r7, #40]
 432:rtos/uC-FS/FAT/fs_fat_dir.c ****              break;
 543              		.loc 1 432 14 is_stmt 1 view .LVU165
 432:rtos/uC-FS/FAT/fs_fat_dir.c ****              break;
 544              		.loc 1 432 49 is_stmt 0 view .LVU166
 545 00f2 059B     		ldr	r3, [sp, #20]
 432:rtos/uC-FS/FAT/fs_fat_dir.c ****              break;
 546              		.loc 1 432 57 view .LVU167
 547 00f4 2033     		adds	r3, r3, #32
 432:rtos/uC-FS/FAT/fs_fat_dir.c ****              break;
 548              		.loc 1 432 40 view .LVU168
 549 00f6 FB62     		str	r3, [r7, #44]
 433:rtos/uC-FS/FAT/fs_fat_dir.c **** 
 550              		.loc 1 433 14 is_stmt 1 view .LVU169
 551 00f8 A6E7     		b	.L26
 552              	.LVL47:
 553              	.L32:
 403:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
 554              		.loc 1 403 18 is_stmt 0 view .LVU170
 555 00fa 0322     		movs	r2, #3
 556 00fc B6E7     		b	.L27
 557              	.LVL48:
 558              	.L30:
 420:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
 559              		.loc 1 420 17 is_stmt 1 view .LVU171
 420:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
 560              		.loc 1 420 44 is_stmt 0 view .LVU172
 561 00fe 99F84820 		ldrb	r2, [r9, #72]	@ zero_extendqisi2
 562 0102 D340     		lsrs	r3, r3, r2
 420:rtos/uC-FS/FAT/fs_fat_dir.c ****              }
ARM GAS  /tmp/ccNRjW2f.s 			page 20


 563              		.loc 1 420 42 view .LVU173
 564 0104 C5F81431 		str	r3, [r5, #276]
 565 0108 D5E7     		b	.L31
 566              	.L36:
 567 010a 00BF     		.align	2
 568              	.L35:
 569 010c 00000000 		.word	FS_FAT_LFN_API
 570              		.cfi_endproc
 571              	.LFE3:
 573              		.section	.bss.FS_FAT_DirDataPool,"aw",%nobits
 574              		.align	2
 575              		.set	.LANCHOR0,. + 0
 578              	FS_FAT_DirDataPool:
 579 0000 00000000 		.space	24
 579      00000000 
 579      00000000 
 579      00000000 
 579      00000000 
 580              		.text
 581              	.Letext0:
 582              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 583              		.file 3 "rtos/uC-LIB/lib_def.h"
 584              		.file 4 "rtos/uC-LIB/lib_mem.h"
 585              		.file 5 "rtos/uC-Clk/Source/clk.h"
 586              		.file 6 "rtos/uC-FS/FAT/../Source/fs_type.h"
 587              		.file 7 "rtos/uC-FS/FAT/../Source/fs_buf.h"
 588              		.file 8 "rtos/uC-FS/FAT/../Source/fs_dev.h"
 589              		.file 9 "rtos/uC-FS/FAT/../Source/fs_dir.h"
 590              		.file 10 "rtos/uC-FS/FAT/../Source/fs_entry.h"
 591              		.file 11 "rtos/uC-FS/FAT/../Source/fs_vol.h"
 592              		.file 12 "rtos/uC-FS/FAT/../Source/fs_err.h"
 593              		.file 13 "rtos/uC-FS/FAT/../Source/fs_ctr.h"
 594              		.file 14 "rtos/uC-FS/FAT/fs_fat_type.h"
 595              		.file 15 "rtos/uC-FS/FAT/fs_fat.h"
 596              		.file 16 "rtos/uC-FS/FAT/fs_fat_lfn.h"
 597              		.file 17 "rtos/uC-FS/FAT/fs_fat_sfn.h"
 598              		.file 18 "rtos/uC-CPU/cpu_core.h"
ARM GAS  /tmp/ccNRjW2f.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fs_fat_dir.c
     /tmp/ccNRjW2f.s:18     .text.FS_FAT_DirModuleInit:0000000000000000 $t
     /tmp/ccNRjW2f.s:26     .text.FS_FAT_DirModuleInit:0000000000000000 FS_FAT_DirModuleInit
     /tmp/ccNRjW2f.s:89     .text.FS_FAT_DirModuleInit:0000000000000038 $d
     /tmp/ccNRjW2f.s:94     .text.FS_FAT_DirClose:0000000000000000 $t
     /tmp/ccNRjW2f.s:101    .text.FS_FAT_DirClose:0000000000000000 FS_FAT_DirClose
     /tmp/ccNRjW2f.s:180    .text.FS_FAT_DirClose:0000000000000040 $d
     /tmp/ccNRjW2f.s:185    .text.FS_FAT_DirOpen:0000000000000000 $t
     /tmp/ccNRjW2f.s:192    .text.FS_FAT_DirOpen:0000000000000000 FS_FAT_DirOpen
     /tmp/ccNRjW2f.s:281    .text.FS_FAT_DirOpen:0000000000000050 $d
     /tmp/ccNRjW2f.s:286    .text.FS_FAT_DirRd:0000000000000000 $t
     /tmp/ccNRjW2f.s:293    .text.FS_FAT_DirRd:0000000000000000 FS_FAT_DirRd
     /tmp/ccNRjW2f.s:569    .text.FS_FAT_DirRd:000000000000010c $d
     /tmp/ccNRjW2f.s:574    .bss.FS_FAT_DirDataPool:0000000000000000 $d
     /tmp/ccNRjW2f.s:578    .bss.FS_FAT_DirDataPool:0000000000000000 FS_FAT_DirDataPool
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_mem.h.121.89b942a057fb20091baad8bf6b28b1e6
                           .group:0000000000000000 wm4.fs.h.42.4f6311a594ee5619f1ee7a9392eb7faa
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.fs_def.h.42.653ad677c23ef93c522ec84af681385d
                           .group:0000000000000000 wm4.fs_cfg.h.116.da4f8e9d0b9040a97ef3bf26c61e90fd
                           .group:0000000000000000 wm4.clk.h.99.39403db6a27321e53b261bbe20b56e1d
                           .group:0000000000000000 wm4.lib_str.h.60.d6fb3a1336db17c586ed26be94929677
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366
                           .group:0000000000000000 wm4.fs_cfg_fs.h.176.c85074fbe881bfa594608376a65f4dc2
                           .group:0000000000000000 wm4.fs_type.h.42.3e681b291920189044ba1da24ae0f22a
                           .group:0000000000000000 wm4.fs_err.h.42.d52bfed31dff3d1419c5cf09952dee67
                           .group:0000000000000000 wm4.fs.h.97.1d629f0ba32b5622ab4e01a254bd98e8
                           .group:0000000000000000 wm4.fs_buf.h.42.0c8ba10968f085926266a27b71b3972d
                           .group:0000000000000000 wm4.fs_dev.h.42.457d0b7de373584765db5fbe40e7c30d
                           .group:0000000000000000 wm4.fs_ctr.h.42.9d1398cac157503ac8af114819f7782b
                           .group:0000000000000000 wm4.fs_dev.h.84.0b8682dc82cfd464ab0da30a876c8006
                           .group:0000000000000000 wm4.fs_entry.h.42.9d70c930b2952a9ef63a0a4e9d586c20
                           .group:0000000000000000 wm4.fs_dir.h.83.d0300b5b24eed020443871730cac76e3
                           .group:0000000000000000 wm4.fs_file.h.42.74c26597bc17b842069a1de9e164f613
                           .group:0000000000000000 wm4.fs_unicode.h.42.7187f638062b29b06572d839ddc5f920
                           .group:0000000000000000 wm4.fs_vol.h.42.b307128eec61fcaf68a96ce7f965d41e
                           .group:0000000000000000 wm4.fs_util.h.64.fe7812d6ca4c430dea2d2e705fd73c11
                           .group:0000000000000000 wm4.fs_fat_type.h.44.5030ef39a150a8f4f55331616cd38bbd
                           .group:0000000000000000 wm4.fs_fat.h.103.89adf2d396ea9a0dd44def3a42712dd1
                           .group:0000000000000000 wm4.fs_fat_dir.h.48.7d6d41942f5493099166f044de7ba3c4
                           .group:0000000000000000 wm4.fs_fat_lfn.h.50.b46137ae8fe3a65a357b1862d2f89547
                           .group:0000000000000000 wm4.fs_fat_sfn.h.46.5d51e4dfd288beb475141580db2c7825

UNDEFINED SYMBOLS
Mem_PoolCreate
FS_OS_Lock
Mem_PoolBlkFree
ARM GAS  /tmp/ccNRjW2f.s 			page 22


FS_OS_Unlock
CPU_SW_Exception
Mem_PoolBlkGet
FS_FAT_LowEntryFind
FSBuf_Get
FSBuf_Free
FS_FAT_DateTimeParse
FS_FAT_LFN_API

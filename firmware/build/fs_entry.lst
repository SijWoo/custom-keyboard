ARM GAS  /tmp/cc8IPqmX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fs_entry.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FSEntry_NameParseChk,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	FSEntry_NameParseChk:
  26              	.LVL0:
  27              	.LFB13:
  28              		.file 1 "rtos/uC-FS/Source/fs_entry.c"
   1:rtos/uC-FS/Source/fs_entry.c **** /*
   2:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
   3:rtos/uC-FS/Source/fs_entry.c **** *                                                uC/FS
   4:rtos/uC-FS/Source/fs_entry.c **** *                                      The Embedded File System
   5:rtos/uC-FS/Source/fs_entry.c **** *
   6:rtos/uC-FS/Source/fs_entry.c **** *                         (c) Copyright 2008-2019; Silicon Laboratories Inc.,
   7:rtos/uC-FS/Source/fs_entry.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-FS/Source/fs_entry.c **** *
   9:rtos/uC-FS/Source/fs_entry.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-FS/Source/fs_entry.c **** *
  11:rtos/uC-FS/Source/fs_entry.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-FS/Source/fs_entry.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-FS/Source/fs_entry.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-FS/Source/fs_entry.c **** *                  license, you may not use this software.
  15:rtos/uC-FS/Source/fs_entry.c **** *
  16:rtos/uC-FS/Source/fs_entry.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-FS/Source/fs_entry.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-FS/Source/fs_entry.c **** *
  19:rtos/uC-FS/Source/fs_entry.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-FS/Source/fs_entry.c **** *
  21:rtos/uC-FS/Source/fs_entry.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  23:rtos/uC-FS/Source/fs_entry.c **** */
  24:rtos/uC-FS/Source/fs_entry.c **** 
  25:rtos/uC-FS/Source/fs_entry.c **** /*
  26:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  27:rtos/uC-FS/Source/fs_entry.c **** *
  28:rtos/uC-FS/Source/fs_entry.c **** *                                      FILE SYSTEM ENTRY ACCESS
  29:rtos/uC-FS/Source/fs_entry.c **** *
  30:rtos/uC-FS/Source/fs_entry.c **** * Filename : fs_entry.c
ARM GAS  /tmp/cc8IPqmX.s 			page 2


  31:rtos/uC-FS/Source/fs_entry.c **** * Version  : v4.07.06
  32:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  33:rtos/uC-FS/Source/fs_entry.c **** */
  34:rtos/uC-FS/Source/fs_entry.c **** 
  35:rtos/uC-FS/Source/fs_entry.c **** /*
  36:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  37:rtos/uC-FS/Source/fs_entry.c **** *                                               MODULE
  38:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  39:rtos/uC-FS/Source/fs_entry.c **** */
  40:rtos/uC-FS/Source/fs_entry.c **** 
  41:rtos/uC-FS/Source/fs_entry.c **** #define  MICRIUM_SOURCE
  42:rtos/uC-FS/Source/fs_entry.c **** #define  FS_ENTRY_MODULE
  43:rtos/uC-FS/Source/fs_entry.c **** 
  44:rtos/uC-FS/Source/fs_entry.c **** 
  45:rtos/uC-FS/Source/fs_entry.c **** /*
  46:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  47:rtos/uC-FS/Source/fs_entry.c **** *                                            INCLUDE FILES
  48:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  49:rtos/uC-FS/Source/fs_entry.c **** */
  50:rtos/uC-FS/Source/fs_entry.c **** 
  51:rtos/uC-FS/Source/fs_entry.c **** #include  <cpu.h>
  52:rtos/uC-FS/Source/fs_entry.c **** #include  <cpu_core.h>
  53:rtos/uC-FS/Source/fs_entry.c **** #include  <clk.h>
  54:rtos/uC-FS/Source/fs_entry.c **** #include  "fs.h"
  55:rtos/uC-FS/Source/fs_entry.c **** #include  "fs_entry.h"
  56:rtos/uC-FS/Source/fs_entry.c **** #include  "fs_err.h"
  57:rtos/uC-FS/Source/fs_entry.c **** #include  "fs_file.h"
  58:rtos/uC-FS/Source/fs_entry.c **** #include  "fs_dir.h"
  59:rtos/uC-FS/Source/fs_entry.c **** #include  "fs_vol.h"
  60:rtos/uC-FS/Source/fs_entry.c **** #include  "fs_buf.h"
  61:rtos/uC-FS/Source/fs_entry.c **** #include  "fs_def.h"
  62:rtos/uC-FS/Source/fs_entry.c **** #include  "fs_dev.h"
  63:rtos/uC-FS/Source/fs_entry.c **** #include  "fs_sys.h"
  64:rtos/uC-FS/Source/fs_entry.c **** 
  65:rtos/uC-FS/Source/fs_entry.c **** 
  66:rtos/uC-FS/Source/fs_entry.c **** /*
  67:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  68:rtos/uC-FS/Source/fs_entry.c **** *                                            LOCAL DEFINES
  69:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  70:rtos/uC-FS/Source/fs_entry.c **** */
  71:rtos/uC-FS/Source/fs_entry.c **** 
  72:rtos/uC-FS/Source/fs_entry.c **** 
  73:rtos/uC-FS/Source/fs_entry.c **** /*
  74:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  75:rtos/uC-FS/Source/fs_entry.c **** *                                           LOCAL CONSTANTS
  76:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  77:rtos/uC-FS/Source/fs_entry.c **** */
  78:rtos/uC-FS/Source/fs_entry.c **** 
  79:rtos/uC-FS/Source/fs_entry.c **** 
  80:rtos/uC-FS/Source/fs_entry.c **** /*
  81:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  82:rtos/uC-FS/Source/fs_entry.c **** *                                          LOCAL DATA TYPES
  83:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  84:rtos/uC-FS/Source/fs_entry.c **** */
  85:rtos/uC-FS/Source/fs_entry.c **** 
  86:rtos/uC-FS/Source/fs_entry.c **** 
  87:rtos/uC-FS/Source/fs_entry.c **** /*
ARM GAS  /tmp/cc8IPqmX.s 			page 3


  88:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  89:rtos/uC-FS/Source/fs_entry.c **** *                                            LOCAL TABLES
  90:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  91:rtos/uC-FS/Source/fs_entry.c **** */
  92:rtos/uC-FS/Source/fs_entry.c **** 
  93:rtos/uC-FS/Source/fs_entry.c **** 
  94:rtos/uC-FS/Source/fs_entry.c **** /*
  95:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  96:rtos/uC-FS/Source/fs_entry.c **** *                                       LOCAL GLOBAL VARIABLES
  97:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
  98:rtos/uC-FS/Source/fs_entry.c **** */
  99:rtos/uC-FS/Source/fs_entry.c **** 
 100:rtos/uC-FS/Source/fs_entry.c **** 
 101:rtos/uC-FS/Source/fs_entry.c **** /*
 102:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 103:rtos/uC-FS/Source/fs_entry.c **** *                                      LOCAL FUNCTION PROTOTYPES
 104:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 105:rtos/uC-FS/Source/fs_entry.c **** */
 106:rtos/uC-FS/Source/fs_entry.c **** 
 107:rtos/uC-FS/Source/fs_entry.c ****                                                                             /* ------------- HANDLE
 108:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 109:rtos/uC-FS/Source/fs_entry.c **** static  void      FSEntry_AttribSetHandler(CPU_CHAR       *name_full,       /* Set a file or direct
 110:rtos/uC-FS/Source/fs_entry.c ****                                            FS_FLAGS        attrib,
 111:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ERR         *p_err);
 112:rtos/uC-FS/Source/fs_entry.c **** 
 113:rtos/uC-FS/Source/fs_entry.c **** static  void      FSEntry_CreateHandler   (CPU_CHAR       *name_full,       /* Create a file or dir
 114:rtos/uC-FS/Source/fs_entry.c ****                                            FS_FLAGS        entry_type,
 115:rtos/uC-FS/Source/fs_entry.c ****                                            CPU_BOOLEAN     excl,
 116:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ERR         *p_err);
 117:rtos/uC-FS/Source/fs_entry.c **** 
 118:rtos/uC-FS/Source/fs_entry.c **** static  void      FSEntry_DelHandler      (CPU_CHAR       *name_full,       /* Delete a file or dir
 119:rtos/uC-FS/Source/fs_entry.c ****                                            FS_FLAGS        entry_type,
 120:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ERR         *p_err);
 121:rtos/uC-FS/Source/fs_entry.c **** #endif
 122:rtos/uC-FS/Source/fs_entry.c **** 
 123:rtos/uC-FS/Source/fs_entry.c **** static  void      FSEntry_QueryHandler    (CPU_CHAR       *name_full,       /* Get info about a fil
 124:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ENTRY_INFO  *p_info,
 125:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ERR         *p_err);
 126:rtos/uC-FS/Source/fs_entry.c **** 
 127:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 128:rtos/uC-FS/Source/fs_entry.c **** static  void      FSEntry_RenameHandler   (CPU_CHAR       *name_full_old,   /* Rename a file or dir
 129:rtos/uC-FS/Source/fs_entry.c ****                                            CPU_CHAR       *name_full_new,
 130:rtos/uC-FS/Source/fs_entry.c ****                                            CPU_BOOLEAN     excl,
 131:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ERR         *p_err);
 132:rtos/uC-FS/Source/fs_entry.c **** 
 133:rtos/uC-FS/Source/fs_entry.c **** static  void      FSEntry_TimeSetHandler  (CPU_CHAR       *name_full,       /* Set a file or direct
 134:rtos/uC-FS/Source/fs_entry.c ****                                            CLK_DATE_TIME  *p_time,
 135:rtos/uC-FS/Source/fs_entry.c ****                                            CPU_INT08U      time_type,
 136:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ERR         *p_err);
 137:rtos/uC-FS/Source/fs_entry.c **** #endif
 138:rtos/uC-FS/Source/fs_entry.c **** 
 139:rtos/uC-FS/Source/fs_entry.c **** 
 140:rtos/uC-FS/Source/fs_entry.c ****                                                                             /* ---------- MISCELLAN
 141:rtos/uC-FS/Source/fs_entry.c **** static  CPU_CHAR  *FSEntry_NameParseChk   (CPU_CHAR       *name_full,       /* Parse full entry nam
 142:rtos/uC-FS/Source/fs_entry.c ****                                            FS_VOL        **pp_vol,
 143:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ERR         *p_err);
 144:rtos/uC-FS/Source/fs_entry.c **** 
ARM GAS  /tmp/cc8IPqmX.s 			page 4


 145:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 146:rtos/uC-FS/Source/fs_entry.c **** static  CPU_CHAR  *FSEntry_NameParseChkEx (CPU_CHAR       *name_full,       /* Parse full entry nam
 147:rtos/uC-FS/Source/fs_entry.c ****                                            CPU_CHAR       *name_vol,
 148:rtos/uC-FS/Source/fs_entry.c ****                                            CPU_BOOLEAN    *p_dflt,
 149:rtos/uC-FS/Source/fs_entry.c ****                                            FS_VOL        **pp_vol,
 150:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ERR         *p_err);
 151:rtos/uC-FS/Source/fs_entry.c **** #endif
 152:rtos/uC-FS/Source/fs_entry.c **** 
 153:rtos/uC-FS/Source/fs_entry.c **** 
 154:rtos/uC-FS/Source/fs_entry.c **** /*
 155:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 156:rtos/uC-FS/Source/fs_entry.c **** *                                     LOCAL CONFIGURATION ERRORS
 157:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 158:rtos/uC-FS/Source/fs_entry.c **** */
 159:rtos/uC-FS/Source/fs_entry.c **** 
 160:rtos/uC-FS/Source/fs_entry.c **** 
 161:rtos/uC-FS/Source/fs_entry.c **** /*
 162:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 163:rtos/uC-FS/Source/fs_entry.c **** *                                         FSEntry_AttribSet()
 164:rtos/uC-FS/Source/fs_entry.c **** *
 165:rtos/uC-FS/Source/fs_entry.c **** * Description : Set a file or directory's attributes.
 166:rtos/uC-FS/Source/fs_entry.c **** *
 167:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
 168:rtos/uC-FS/Source/fs_entry.c **** *
 169:rtos/uC-FS/Source/fs_entry.c **** *               attrib      Entry attributes to set (see Note #2).
 170:rtos/uC-FS/Source/fs_entry.c **** *
 171:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 172:rtos/uC-FS/Source/fs_entry.c **** *
 173:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE                      Entry attributes set successfully.
 174:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_FILE_INVALID_ATTRIB       Entry attributes specified invalid
 175:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_NULL                 Argument 'name_full' passed a NULL
 176:rtos/uC-FS/Source/fs_entry.c **** *
 177:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_ROOT_DIR            File system entry is a root direct
 178:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_INVALID_OP            Invalid operation on volume.
 179:rtos/uC-FS/Source/fs_entry.c **** *
 180:rtos/uC-FS/Source/fs_entry.c **** *                                                                --- RETURNED BY FSEntry_NameParseC
 181:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Entry name specified invalid OR vo
 182:rtos/uC-FS/Source/fs_entry.c **** *                                                                   could not be found.
 183:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_PATH_TOO_LONG        Entry name specified too long.
 184:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_OPEN              Volume was not open.
 185:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_MOUNTED           Volume was not mounted.
 186:rtos/uC-FS/Source/fs_entry.c **** *
 187:rtos/uC-FS/Source/fs_entry.c **** *                                                                --- RETURNED BY FSSys_EntryAttribS
 188:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_BUF_NONE_AVAIL            Buffer not available.
 189:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_DEV                       Device access error.
 190:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_FOUND           File system entry NOT found
 191:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
 192:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
 193:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Invalid file name or path.
 194:rtos/uC-FS/Source/fs_entry.c **** *
 195:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
 196:rtos/uC-FS/Source/fs_entry.c **** *
 197:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : (1) If the entry does not exist, an error is returned.
 198:rtos/uC-FS/Source/fs_entry.c **** *
 199:rtos/uC-FS/Source/fs_entry.c **** *               (2) Three entry attributes may be modified by this function :
 200:rtos/uC-FS/Source/fs_entry.c **** *
 201:rtos/uC-FS/Source/fs_entry.c **** *                       FS_ENTRY_ATTRIB_RD         Entry is readable.
ARM GAS  /tmp/cc8IPqmX.s 			page 5


 202:rtos/uC-FS/Source/fs_entry.c **** *                       FS_ENTRY_ATTRIB_WR         Entry is writeable.
 203:rtos/uC-FS/Source/fs_entry.c **** *                       FS_ENTRY_ATTRIB_HIDDEN     Entry is hidden from user-level processes.
 204:rtos/uC-FS/Source/fs_entry.c **** *
 205:rtos/uC-FS/Source/fs_entry.c **** *                   (a) An attribute will be cleared if its flag is not OR'd into 'attrib'.
 206:rtos/uC-FS/Source/fs_entry.c **** *
 207:rtos/uC-FS/Source/fs_entry.c **** *                   (b) An attribute will be set     if its flag is     OR'd into 'attrib'.
 208:rtos/uC-FS/Source/fs_entry.c **** *
 209:rtos/uC-FS/Source/fs_entry.c **** *                   (c) If another flag besides these is set, then an error will be returned.
 210:rtos/uC-FS/Source/fs_entry.c **** *
 211:rtos/uC-FS/Source/fs_entry.c **** *               (3) The attributes of the root directory may NOT be set.
 212:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 213:rtos/uC-FS/Source/fs_entry.c **** */
 214:rtos/uC-FS/Source/fs_entry.c **** 
 215:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 216:rtos/uC-FS/Source/fs_entry.c **** void  FSEntry_AttribSet (CPU_CHAR  *name_full,
 217:rtos/uC-FS/Source/fs_entry.c ****                          FS_FLAGS   attrib,
 218:rtos/uC-FS/Source/fs_entry.c ****                          FS_ERR    *p_err)
 219:rtos/uC-FS/Source/fs_entry.c **** {
 220:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 221:rtos/uC-FS/Source/fs_entry.c **** 
 222:rtos/uC-FS/Source/fs_entry.c **** 
 223:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 224:rtos/uC-FS/Source/fs_entry.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 225:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 226:rtos/uC-FS/Source/fs_entry.c ****     }
 227:rtos/uC-FS/Source/fs_entry.c ****     if (name_full == (CPU_CHAR *)0) {                           /* Validate name ptr.              
 228:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 229:rtos/uC-FS/Source/fs_entry.c ****         return;
 230:rtos/uC-FS/Source/fs_entry.c ****     }
 231:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Validate attrib.                
 232:rtos/uC-FS/Source/fs_entry.c ****     if (DEF_BIT_IS_SET_ANY(attrib, ~(FS_ENTRY_ATTRIB_RD | FS_ENTRY_ATTRIB_WR | FS_ENTRY_ATTRIB_HIDD
 233:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_FILE_INVALID_ATTRIB;
 234:rtos/uC-FS/Source/fs_entry.c ****         return;
 235:rtos/uC-FS/Source/fs_entry.c ****     }
 236:rtos/uC-FS/Source/fs_entry.c **** #endif
 237:rtos/uC-FS/Source/fs_entry.c **** 
 238:rtos/uC-FS/Source/fs_entry.c **** 
 239:rtos/uC-FS/Source/fs_entry.c **** 
 240:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------ FORM FULL PAT
 241:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 242:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = FS_WorkingDirPathForm(name_full, p_err);   /* Try to form path.               
 243:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
 244:rtos/uC-FS/Source/fs_entry.c ****         return;
 245:rtos/uC-FS/Source/fs_entry.c ****     }
 246:rtos/uC-FS/Source/fs_entry.c **** #else
 247:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = name_full;
 248:rtos/uC-FS/Source/fs_entry.c **** #endif
 249:rtos/uC-FS/Source/fs_entry.c **** 
 250:rtos/uC-FS/Source/fs_entry.c **** 
 251:rtos/uC-FS/Source/fs_entry.c **** 
 252:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* -------------------- SET ATTRIB 
 253:rtos/uC-FS/Source/fs_entry.c ****     FSEntry_AttribSetHandler(name_full_temp,
 254:rtos/uC-FS/Source/fs_entry.c ****                              attrib,
 255:rtos/uC-FS/Source/fs_entry.c ****                              p_err);
 256:rtos/uC-FS/Source/fs_entry.c **** 
 257:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 258:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_temp != name_full) {
ARM GAS  /tmp/cc8IPqmX.s 			page 6


 259:rtos/uC-FS/Source/fs_entry.c ****         FS_WorkingDirObjFree(name_full_temp);
 260:rtos/uC-FS/Source/fs_entry.c ****     }
 261:rtos/uC-FS/Source/fs_entry.c **** #endif
 262:rtos/uC-FS/Source/fs_entry.c **** }
 263:rtos/uC-FS/Source/fs_entry.c **** #endif
 264:rtos/uC-FS/Source/fs_entry.c **** 
 265:rtos/uC-FS/Source/fs_entry.c **** 
 266:rtos/uC-FS/Source/fs_entry.c **** /*
 267:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 268:rtos/uC-FS/Source/fs_entry.c **** *                                           FSEntry_Copy()
 269:rtos/uC-FS/Source/fs_entry.c **** *
 270:rtos/uC-FS/Source/fs_entry.c **** * Description : Copy a file.
 271:rtos/uC-FS/Source/fs_entry.c **** *
 272:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full_src   Name of the source      file.
 273:rtos/uC-FS/Source/fs_entry.c **** *
 274:rtos/uC-FS/Source/fs_entry.c **** *               name_full_dest  Name of the destination file.
 275:rtos/uC-FS/Source/fs_entry.c **** *
 276:rtos/uC-FS/Source/fs_entry.c **** *               excl            Indicates whether creation of new entry should be exclusive :
 277:rtos/uC-FS/Source/fs_entry.c **** *
 278:rtos/uC-FS/Source/fs_entry.c **** *                                   DEF_YES, if the entry will be copied ONLY if 'name_full_dest' d
 279:rtos/uC-FS/Source/fs_entry.c **** *                                                not exist.
 280:rtos/uC-FS/Source/fs_entry.c **** *                                   DEF_NO,  if the entry will be copied even if 'name_full_dest' d
 281:rtos/uC-FS/Source/fs_entry.c **** *                                                exist.
 282:rtos/uC-FS/Source/fs_entry.c **** *
 283:rtos/uC-FS/Source/fs_entry.c **** *               p_err           Pointer to variable that will receive the return error code from th
 284:rtos/uC-FS/Source/fs_entry.c **** *
 285:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NONE                      File copied successfully.
 286:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_NULL                 Argument 'name_full_src'/'name
 287:rtos/uC-FS/Source/fs_entry.c **** *                                                                        passed a NULL pointer.
 288:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_INVALID_OP            Invalid operation on volume.
 289:rtos/uC-FS/Source/fs_entry.c **** *
 290:rtos/uC-FS/Source/fs_entry.c **** *                                                                    --- RETURNED BY FSEntry_NamePa
 291:rtos/uC-FS/Source/fs_entry.c **** *                                                                    -------- RETURNED BY FS_NamePa
 292:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_INVALID              Source or destination name spe
 293:rtos/uC-FS/Source/fs_entry.c **** *                                                                        invalid OR volume could no
 294:rtos/uC-FS/Source/fs_entry.c **** *                                                                        found.
 295:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_PATH_TOO_LONG        Source or destination name spe
 296:rtos/uC-FS/Source/fs_entry.c **** *                                                                        too long.
 297:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_NOT_OPEN              Volume was not open.
 298:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_NOT_MOUNTED           Volume was not mounted.
 299:rtos/uC-FS/Source/fs_entry.c **** *
 300:rtos/uC-FS/Source/fs_entry.c **** *                                                                    --------- RETURNED BY FSFile_O
 301:rtos/uC-FS/Source/fs_entry.c **** *                                                                    --------- RETURNED BY FSFile_R
 302:rtos/uC-FS/Source/fs_entry.c **** *                                                                    --------- RETURNED BY FSFile_W
 303:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_BUF_NONE_AVAIL            Buffer not available.
 304:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_DEV                       Device access error.
 305:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_EXISTS              File system entry exists.
 306:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_NOT_FILE            File system entry NOT a file.
 307:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_NOT_FOUND           File system entry NOT found.
 308:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
 309:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
 310:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_RD_ONLY             File system entry marked read-
 311:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_INVALID              Invalid file name or path.
 312:rtos/uC-FS/Source/fs_entry.c **** *
 313:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
 314:rtos/uC-FS/Source/fs_entry.c **** *
 315:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : (1) 'name_full_src' must be an existing file.
ARM GAS  /tmp/cc8IPqmX.s 			page 7


 316:rtos/uC-FS/Source/fs_entry.c **** *
 317:rtos/uC-FS/Source/fs_entry.c **** *               (2) If 'excl' is DEF_NO, 'name_full_dest' must either not exist or be an existing f
 318:rtos/uC-FS/Source/fs_entry.c **** *                   it may not be an existing directory.  If 'excl' is DEF_YES, 'name_full_dest' mu
 319:rtos/uC-FS/Source/fs_entry.c **** *                   not exist.
 320:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 321:rtos/uC-FS/Source/fs_entry.c **** */
 322:rtos/uC-FS/Source/fs_entry.c **** 
 323:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 324:rtos/uC-FS/Source/fs_entry.c **** void  FSEntry_Copy (CPU_CHAR     *name_full_src,
 325:rtos/uC-FS/Source/fs_entry.c ****                     CPU_CHAR     *name_full_dest,
 326:rtos/uC-FS/Source/fs_entry.c ****                     CPU_BOOLEAN   excl,
 327:rtos/uC-FS/Source/fs_entry.c ****                     FS_ERR       *p_err)
 328:rtos/uC-FS/Source/fs_entry.c **** {
 329:rtos/uC-FS/Source/fs_entry.c ****     FS_BUF       *p_buf;
 330:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   done;
 331:rtos/uC-FS/Source/fs_entry.c ****     FS_ERR        err;
 332:rtos/uC-FS/Source/fs_entry.c ****     FS_FILE      *p_file_dest;
 333:rtos/uC-FS/Source/fs_entry.c ****     FS_FILE      *p_file_src;
 334:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T    file_rd_len;
 335:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS      mode;
 336:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   no_err;
 337:rtos/uC-FS/Source/fs_entry.c **** 
 338:rtos/uC-FS/Source/fs_entry.c **** 
 339:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 340:rtos/uC-FS/Source/fs_entry.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 341:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 342:rtos/uC-FS/Source/fs_entry.c ****     }
 343:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_src == (CPU_CHAR *)0) {                       /* Validate src name ptr.          
 344:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 345:rtos/uC-FS/Source/fs_entry.c ****         return;
 346:rtos/uC-FS/Source/fs_entry.c ****     }
 347:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_dest == (CPU_CHAR *)0) {                      /* Validate dest name ptr.         
 348:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 349:rtos/uC-FS/Source/fs_entry.c ****         return;
 350:rtos/uC-FS/Source/fs_entry.c ****     }
 351:rtos/uC-FS/Source/fs_entry.c **** #endif
 352:rtos/uC-FS/Source/fs_entry.c **** 
 353:rtos/uC-FS/Source/fs_entry.c **** 
 354:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* --------------------- COPY FILE 
 355:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Open src file.                  
 356:rtos/uC-FS/Source/fs_entry.c ****     p_file_src = FSFile_Open(name_full_src, FS_FILE_ACCESS_MODE_RD, p_err);
 357:rtos/uC-FS/Source/fs_entry.c ****     if (p_file_src == DEF_NULL) {
 358:rtos/uC-FS/Source/fs_entry.c ****         return;
 359:rtos/uC-FS/Source/fs_entry.c ****     } else {
 360:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err != FS_ERR_NONE) {
 361:rtos/uC-FS/Source/fs_entry.c ****             return;
 362:rtos/uC-FS/Source/fs_entry.c ****         }
 363:rtos/uC-FS/Source/fs_entry.c ****     }
 364:rtos/uC-FS/Source/fs_entry.c **** 
 365:rtos/uC-FS/Source/fs_entry.c ****     if (excl == DEF_YES) {
 366:rtos/uC-FS/Source/fs_entry.c ****         mode =  FS_FILE_ACCESS_MODE_WR | FS_FILE_ACCESS_MODE_CREATE | FS_FILE_ACCESS_MODE_EXCL;
 367:rtos/uC-FS/Source/fs_entry.c ****     } else {
 368:rtos/uC-FS/Source/fs_entry.c ****         mode =  FS_FILE_ACCESS_MODE_WR | FS_FILE_ACCESS_MODE_CREATE | FS_FILE_ACCESS_MODE_TRUNCATE;
 369:rtos/uC-FS/Source/fs_entry.c ****     }
 370:rtos/uC-FS/Source/fs_entry.c ****     p_file_dest = FSFile_Open(name_full_dest, mode, p_err);     /* Open dest file.                 
 371:rtos/uC-FS/Source/fs_entry.c ****     if (p_file_dest == DEF_NULL) {
 372:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_src, &err);
ARM GAS  /tmp/cc8IPqmX.s 			page 8


 373:rtos/uC-FS/Source/fs_entry.c ****         return;
 374:rtos/uC-FS/Source/fs_entry.c ****     }
 375:rtos/uC-FS/Source/fs_entry.c **** 
 376:rtos/uC-FS/Source/fs_entry.c ****     p_buf = FSBuf_Get(DEF_NULL);
 377:rtos/uC-FS/Source/fs_entry.c ****     if (p_buf == DEF_NULL) {
 378:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_src, &err);
 379:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_dest, &err);
 380:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 381:rtos/uC-FS/Source/fs_entry.c ****         return;
 382:rtos/uC-FS/Source/fs_entry.c ****     }
 383:rtos/uC-FS/Source/fs_entry.c **** 
 384:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Copy file.                      
 385:rtos/uC-FS/Source/fs_entry.c ****     done = DEF_NO;
 386:rtos/uC-FS/Source/fs_entry.c ****     do {
 387:rtos/uC-FS/Source/fs_entry.c ****         file_rd_len = FSFile_Rd(p_file_src,
 388:rtos/uC-FS/Source/fs_entry.c ****                                 p_buf->DataPtr,
 389:rtos/uC-FS/Source/fs_entry.c ****                                 p_buf->Size,
 390:rtos/uC-FS/Source/fs_entry.c ****                                 p_err);
 391:rtos/uC-FS/Source/fs_entry.c **** 
 392:rtos/uC-FS/Source/fs_entry.c ****         no_err = (*p_err == FS_ERR_NONE);
 393:rtos/uC-FS/Source/fs_entry.c **** 
 394:rtos/uC-FS/Source/fs_entry.c ****         if ((file_rd_len > 0u) && no_err) {
 395:rtos/uC-FS/Source/fs_entry.c ****            (void)FSFile_Wr(p_file_dest,
 396:rtos/uC-FS/Source/fs_entry.c ****                            p_buf->DataPtr,
 397:rtos/uC-FS/Source/fs_entry.c ****                            file_rd_len,
 398:rtos/uC-FS/Source/fs_entry.c ****                            p_err);
 399:rtos/uC-FS/Source/fs_entry.c **** 
 400:rtos/uC-FS/Source/fs_entry.c ****             if ((file_rd_len != p_buf->Size) || (*p_err != FS_ERR_NONE)) {
 401:rtos/uC-FS/Source/fs_entry.c ****                 done = DEF_YES;
 402:rtos/uC-FS/Source/fs_entry.c ****             }
 403:rtos/uC-FS/Source/fs_entry.c **** 
 404:rtos/uC-FS/Source/fs_entry.c ****         } else {
 405:rtos/uC-FS/Source/fs_entry.c ****             done = DEF_YES;
 406:rtos/uC-FS/Source/fs_entry.c ****         }
 407:rtos/uC-FS/Source/fs_entry.c ****     } while (done == DEF_NO);
 408:rtos/uC-FS/Source/fs_entry.c **** 
 409:rtos/uC-FS/Source/fs_entry.c ****     FSFile_Close(p_file_src, &err);
 410:rtos/uC-FS/Source/fs_entry.c ****     FSFile_Close(p_file_dest, &err);
 411:rtos/uC-FS/Source/fs_entry.c ****     FSBuf_Free  (p_buf);
 412:rtos/uC-FS/Source/fs_entry.c **** }
 413:rtos/uC-FS/Source/fs_entry.c **** #endif
 414:rtos/uC-FS/Source/fs_entry.c **** 
 415:rtos/uC-FS/Source/fs_entry.c **** 
 416:rtos/uC-FS/Source/fs_entry.c **** /*
 417:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 418:rtos/uC-FS/Source/fs_entry.c **** *                                          FSEntry_Create()
 419:rtos/uC-FS/Source/fs_entry.c **** *
 420:rtos/uC-FS/Source/fs_entry.c **** * Description : Create a file or directory.
 421:rtos/uC-FS/Source/fs_entry.c **** *
 422:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
 423:rtos/uC-FS/Source/fs_entry.c **** *
 424:rtos/uC-FS/Source/fs_entry.c **** *               entry_type  Indicates whether the new entry shall be a directory or a file :
 425:rtos/uC-FS/Source/fs_entry.c **** *
 426:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ENTRY_TYPE_DIR,  if the entry shall be a directory.
 427:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ENTRY_TYPE_FILE, if the entry shall be a file.
 428:rtos/uC-FS/Source/fs_entry.c **** *
 429:rtos/uC-FS/Source/fs_entry.c **** *               excl        Indicates whether creation of new entry shall be exclusive :
ARM GAS  /tmp/cc8IPqmX.s 			page 9


 430:rtos/uC-FS/Source/fs_entry.c **** *
 431:rtos/uC-FS/Source/fs_entry.c **** *                               DEF_YES, if the entry shall be created ONLY if 'name_full' does not
 432:rtos/uC-FS/Source/fs_entry.c **** *                               DEF_NO,  if the entry shall be created even if 'name_full' does    
 433:rtos/uC-FS/Source/fs_entry.c **** *
 434:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 435:rtos/uC-FS/Source/fs_entry.c **** *
 436:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE                      Entry created successfully.
 437:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_NULL                 Argument 'name_full' passed a NULL
 438:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_TYPE_INVALID        Argument 'entry_type' is invalid.
 439:rtos/uC-FS/Source/fs_entry.c **** *
 440:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_INVALID_OP            Invalid operation on volume.
 441:rtos/uC-FS/Source/fs_entry.c **** *
 442:rtos/uC-FS/Source/fs_entry.c **** *                                                                --- RETURNED BY FSEntry_NameParseC
 443:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Entry name specified invalid OR vo
 444:rtos/uC-FS/Source/fs_entry.c **** *                                                                    could not be found.
 445:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_PATH_TOO_LONG        Entry name specified too long.
 446:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_OPEN              Volume was not open.
 447:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_MOUNTED           Volume was not mounted.
 448:rtos/uC-FS/Source/fs_entry.c **** *
 449:rtos/uC-FS/Source/fs_entry.c **** *                                                                ----- RETURNED BY FSSys_EntryCreat
 450:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_BUF_NONE_AVAIL            Buffer not available.
 451:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_DEV                       Device access error.
 452:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_EXISTS              File system entry exists.
 453:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_DIR             File system entry NOT a directory.
 454:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_EMPTY           File system entry NOT empty.
 455:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_FILE            File system entry NOT a file.
 456:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
 457:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
 458:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_RD_ONLY             File system entry marked read-only
 459:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Invalid file name or path.
 460:rtos/uC-FS/Source/fs_entry.c **** *
 461:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
 462:rtos/uC-FS/Source/fs_entry.c **** *
 463:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : (1) If the entry exists & is a file, 'dir' is DEF_NO & 'excl' is DEF_NO, then the
 464:rtos/uC-FS/Source/fs_entry.c **** *                   existing entry will be truncated.  If the entry exists & is a directory & 'dir'
 465:rtos/uC-FS/Source/fs_entry.c **** *                   is DEF_YES, then no change will be made to the file system.
 466:rtos/uC-FS/Source/fs_entry.c **** *
 467:rtos/uC-FS/Source/fs_entry.c **** *               (2) If the entry exists & is a directory, 'dir' is DEF_NO & 'excl' is DEF_NO, then
 468:rtos/uC-FS/Source/fs_entry.c **** *                   no change will be made to the file system.  Similarly, if the entry exists & is
 469:rtos/uC-FS/Source/fs_entry.c **** *                   a file & 'dir' is DEF_YES, then no change will be made to the file system.
 470:rtos/uC-FS/Source/fs_entry.c **** *
 471:rtos/uC-FS/Source/fs_entry.c **** *               (3) The root directory may NOT be created.
 472:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 473:rtos/uC-FS/Source/fs_entry.c **** */
 474:rtos/uC-FS/Source/fs_entry.c **** 
 475:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 476:rtos/uC-FS/Source/fs_entry.c **** void  FSEntry_Create (CPU_CHAR     *name_full,
 477:rtos/uC-FS/Source/fs_entry.c ****                       FS_FLAGS      entry_type,
 478:rtos/uC-FS/Source/fs_entry.c ****                       CPU_BOOLEAN   excl,
 479:rtos/uC-FS/Source/fs_entry.c ****                       FS_ERR       *p_err)
 480:rtos/uC-FS/Source/fs_entry.c **** {
 481:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 482:rtos/uC-FS/Source/fs_entry.c **** 
 483:rtos/uC-FS/Source/fs_entry.c **** 
 484:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 485:rtos/uC-FS/Source/fs_entry.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 486:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
ARM GAS  /tmp/cc8IPqmX.s 			page 10


 487:rtos/uC-FS/Source/fs_entry.c ****     }
 488:rtos/uC-FS/Source/fs_entry.c ****     if (name_full == (CPU_CHAR *)0) {                           /* Validate name ptr.              
 489:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 490:rtos/uC-FS/Source/fs_entry.c ****         return;
 491:rtos/uC-FS/Source/fs_entry.c ****     }
 492:rtos/uC-FS/Source/fs_entry.c ****     if (entry_type != FS_ENTRY_TYPE_FILE) {
 493:rtos/uC-FS/Source/fs_entry.c ****         if (entry_type != FS_ENTRY_TYPE_DIR) {
 494:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_ENTRY_TYPE_INVALID;
 495:rtos/uC-FS/Source/fs_entry.c ****         }
 496:rtos/uC-FS/Source/fs_entry.c ****     }
 497:rtos/uC-FS/Source/fs_entry.c **** #endif
 498:rtos/uC-FS/Source/fs_entry.c **** 
 499:rtos/uC-FS/Source/fs_entry.c **** 
 500:rtos/uC-FS/Source/fs_entry.c **** 
 501:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------ FORM FULL PAT
 502:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 503:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = FS_WorkingDirPathForm(name_full, p_err);   /* Try to form path.               
 504:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
 505:rtos/uC-FS/Source/fs_entry.c ****         return;
 506:rtos/uC-FS/Source/fs_entry.c ****     }
 507:rtos/uC-FS/Source/fs_entry.c **** #else
 508:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = name_full;
 509:rtos/uC-FS/Source/fs_entry.c **** #endif
 510:rtos/uC-FS/Source/fs_entry.c **** 
 511:rtos/uC-FS/Source/fs_entry.c **** 
 512:rtos/uC-FS/Source/fs_entry.c **** 
 513:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------- CREATE ENTRY
 514:rtos/uC-FS/Source/fs_entry.c ****     FSEntry_CreateHandler(name_full_temp,
 515:rtos/uC-FS/Source/fs_entry.c ****                           entry_type,
 516:rtos/uC-FS/Source/fs_entry.c ****                           excl,
 517:rtos/uC-FS/Source/fs_entry.c ****                           p_err);
 518:rtos/uC-FS/Source/fs_entry.c **** 
 519:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 520:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_temp != name_full) {
 521:rtos/uC-FS/Source/fs_entry.c ****         FS_WorkingDirObjFree(name_full_temp);
 522:rtos/uC-FS/Source/fs_entry.c ****     }
 523:rtos/uC-FS/Source/fs_entry.c **** #endif
 524:rtos/uC-FS/Source/fs_entry.c **** }
 525:rtos/uC-FS/Source/fs_entry.c **** #endif
 526:rtos/uC-FS/Source/fs_entry.c **** 
 527:rtos/uC-FS/Source/fs_entry.c **** /*
 528:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 529:rtos/uC-FS/Source/fs_entry.c **** *                                            FSEntry_Del()
 530:rtos/uC-FS/Source/fs_entry.c **** *
 531:rtos/uC-FS/Source/fs_entry.c **** * Description : Delete a file or directory.
 532:rtos/uC-FS/Source/fs_entry.c **** *
 533:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
 534:rtos/uC-FS/Source/fs_entry.c **** *
 535:rtos/uC-FS/Source/fs_entry.c **** *               entry_type  Indicates whether the new entry can be a directory / a file :
 536:rtos/uC-FS/Source/fs_entry.c **** *
 537:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ENTRY_TYPE_DIR,  if the entry can be a directory.
 538:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ENTRY_TYPE_FILE, if the entry can be a file.
 539:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ENTRY_TYPE_ANY,  if the entry can be any type
 540:rtos/uC-FS/Source/fs_entry.c **** *
 541:rtos/uC-FS/Source/fs_entry.c **** *                           These values can be OR'd to allow multiple types.
 542:rtos/uC-FS/Source/fs_entry.c **** *
 543:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
ARM GAS  /tmp/cc8IPqmX.s 			page 11


 544:rtos/uC-FS/Source/fs_entry.c **** *
 545:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE                     Entry deleted successfully.
 546:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_NULL                Argument 'name_full' passed a NULL 
 547:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_ROOT_DIR           File system entry is a root directo
 548:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_INVALID_OP           Invalid operation on volume.
 549:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_OPEN               Open entry cannot be deleted.
 550:rtos/uC-FS/Source/fs_entry.c **** *
 551:rtos/uC-FS/Source/fs_entry.c **** *                                                                ------ RETURNED BY FSFile_IsOpen()
 552:rtos/uC-FS/Source/fs_entry.c **** *                                                                ----------- AND BY FSDir_IsOpen() 
 553:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE                     File/Dir opened successfully.
 554:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NULL_PTR                 Argument 'name_full' passed a NULL 
 555:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_BUF_NONE_AVAIL           No buffer available.
 556:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_FILE           Entry not a file or dir.
 557:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID             Invalid name or path.
 558:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_INVALID_SEC_NBR      Invalid sector number found in dire
 559:rtos/uC-FS/Source/fs_entry.c **** *
 560:rtos/uC-FS/Source/fs_entry.c **** *                                                                --- RETURNED BY FSEntry_NameParseC
 561:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Entry name specified invalid OR vo
 562:rtos/uC-FS/Source/fs_entry.c **** *                                                                    could not be found.
 563:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_PATH_TOO_LONG        Entry name specified too long.
 564:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_OPEN              Volume was not open.
 565:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_MOUNTED           Volume was not mounted.
 566:rtos/uC-FS/Source/fs_entry.c **** *
 567:rtos/uC-FS/Source/fs_entry.c **** *                                                                ------ RETURNED BY FSSys_EntryDel(
 568:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_BUF_NONE_AVAIL            Buffer not available.
 569:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_DEV                       Device access error.
 570:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_FILE            File system entry NOT a file.
 571:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_DIR             File system entry NOT a directory.
 572:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_EMPTY           File system entry NOT empty.
 573:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
 574:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
 575:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Invalid file name or path.
 576:rtos/uC-FS/Source/fs_entry.c **** *
 577:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
 578:rtos/uC-FS/Source/fs_entry.c **** *
 579:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : (1) When a file is removed, the space occupied by the file is freed and shall no lo
 580:rtos/uC-FS/Source/fs_entry.c **** *                   be accessible.
 581:rtos/uC-FS/Source/fs_entry.c **** *
 582:rtos/uC-FS/Source/fs_entry.c **** *               (2) (a) A directory can be removed only if it is an empty directory.
 583:rtos/uC-FS/Source/fs_entry.c **** *
 584:rtos/uC-FS/Source/fs_entry.c **** *                   (b) The root directory cannot be deleted.
 585:rtos/uC-FS/Source/fs_entry.c **** *
 586:rtos/uC-FS/Source/fs_entry.c **** *               (3) See 'fs_remove()  Note(s)'.
 587:rtos/uC-FS/Source/fs_entry.c **** *
 588:rtos/uC-FS/Source/fs_entry.c **** *               (4) See 'fs_rmdir()  Note(s)'.
 589:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 590:rtos/uC-FS/Source/fs_entry.c **** */
 591:rtos/uC-FS/Source/fs_entry.c **** 
 592:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 593:rtos/uC-FS/Source/fs_entry.c **** void  FSEntry_Del (CPU_CHAR     *name_full,
 594:rtos/uC-FS/Source/fs_entry.c ****                    FS_FLAGS      entry_type,
 595:rtos/uC-FS/Source/fs_entry.c ****                    FS_ERR       *p_err)
 596:rtos/uC-FS/Source/fs_entry.c **** {
 597:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 598:rtos/uC-FS/Source/fs_entry.c **** 
 599:rtos/uC-FS/Source/fs_entry.c **** 
 600:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE PTR
ARM GAS  /tmp/cc8IPqmX.s 			page 12


 601:rtos/uC-FS/Source/fs_entry.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 602:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 603:rtos/uC-FS/Source/fs_entry.c ****     }
 604:rtos/uC-FS/Source/fs_entry.c ****     if (name_full == (CPU_CHAR *)0) {                           /* Validate name ptr.              
 605:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 606:rtos/uC-FS/Source/fs_entry.c ****         return;
 607:rtos/uC-FS/Source/fs_entry.c ****     }
 608:rtos/uC-FS/Source/fs_entry.c ****     if (((entry_type &  FS_ENTRY_TYPE_ANY) == 0) ||
 609:rtos/uC-FS/Source/fs_entry.c ****         ((entry_type & ~FS_ENTRY_TYPE_ANY) != 0)) {
 610:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_TYPE_INVALID;
 611:rtos/uC-FS/Source/fs_entry.c ****         return;
 612:rtos/uC-FS/Source/fs_entry.c ****     }
 613:rtos/uC-FS/Source/fs_entry.c **** #endif
 614:rtos/uC-FS/Source/fs_entry.c **** 
 615:rtos/uC-FS/Source/fs_entry.c **** 
 616:rtos/uC-FS/Source/fs_entry.c **** 
 617:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------ FORM FULL PAT
 618:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 619:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = FS_WorkingDirPathForm(name_full, p_err);   /* Try to form path.               
 620:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
 621:rtos/uC-FS/Source/fs_entry.c ****         return;
 622:rtos/uC-FS/Source/fs_entry.c ****     }
 623:rtos/uC-FS/Source/fs_entry.c **** #else
 624:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = name_full;
 625:rtos/uC-FS/Source/fs_entry.c **** #endif
 626:rtos/uC-FS/Source/fs_entry.c **** 
 627:rtos/uC-FS/Source/fs_entry.c **** 
 628:rtos/uC-FS/Source/fs_entry.c **** 
 629:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* --------------------- DEL ENTRY 
 630:rtos/uC-FS/Source/fs_entry.c ****     FSEntry_DelHandler(name_full_temp,
 631:rtos/uC-FS/Source/fs_entry.c ****                        entry_type,
 632:rtos/uC-FS/Source/fs_entry.c ****                        p_err);
 633:rtos/uC-FS/Source/fs_entry.c **** 
 634:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 635:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_temp != name_full) {
 636:rtos/uC-FS/Source/fs_entry.c ****         FS_WorkingDirObjFree(name_full_temp);
 637:rtos/uC-FS/Source/fs_entry.c ****     }
 638:rtos/uC-FS/Source/fs_entry.c **** #endif
 639:rtos/uC-FS/Source/fs_entry.c **** }
 640:rtos/uC-FS/Source/fs_entry.c **** #endif
 641:rtos/uC-FS/Source/fs_entry.c **** 
 642:rtos/uC-FS/Source/fs_entry.c **** 
 643:rtos/uC-FS/Source/fs_entry.c **** /*
 644:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 645:rtos/uC-FS/Source/fs_entry.c **** *                                           FSEntry_Query()
 646:rtos/uC-FS/Source/fs_entry.c **** *
 647:rtos/uC-FS/Source/fs_entry.c **** * Description : Get information about a file or directory.
 648:rtos/uC-FS/Source/fs_entry.c **** *
 649:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
 650:rtos/uC-FS/Source/fs_entry.c **** *
 651:rtos/uC-FS/Source/fs_entry.c **** *               p_info      Pointer to structure that will receive the entry information.
 652:rtos/uC-FS/Source/fs_entry.c **** *
 653:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 654:rtos/uC-FS/Source/fs_entry.c **** *
 655:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE                      Entry information gotten successfu
 656:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_NULL                 Argument 'name_full' passed a NULL
 657:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NULL_PTR                  Argument 'p_info' passed a NULL po
ARM GAS  /tmp/cc8IPqmX.s 			page 13


 658:rtos/uC-FS/Source/fs_entry.c **** *
 659:rtos/uC-FS/Source/fs_entry.c **** *                                                                ---- RETURNED BY FSEntry_NameParse
 660:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Entry name specified invalid OR vo
 661:rtos/uC-FS/Source/fs_entry.c **** *                                                                    could not be found.
 662:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_PATH_TOO_LONG        Entry name specified too long.
 663:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_OPEN              Volume was not open.
 664:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_MOUNTED           Volume was not mounted.
 665:rtos/uC-FS/Source/fs_entry.c **** *
 666:rtos/uC-FS/Source/fs_entry.c **** *                                                                ------ RETURNED BY FSSys_EntryQuer
 667:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_BUF_NONE_AVAIL            Buffer not available.
 668:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_DEV                       Device access error.
 669:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_FOUND           File system entry NOT found
 670:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
 671:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
 672:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Invalid file name or path.
 673:rtos/uC-FS/Source/fs_entry.c **** *
 674:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
 675:rtos/uC-FS/Source/fs_entry.c **** *
 676:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : none.
 677:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 678:rtos/uC-FS/Source/fs_entry.c **** */
 679:rtos/uC-FS/Source/fs_entry.c **** 
 680:rtos/uC-FS/Source/fs_entry.c **** void  FSEntry_Query (CPU_CHAR       *name_full,
 681:rtos/uC-FS/Source/fs_entry.c ****                      FS_ENTRY_INFO  *p_info,
 682:rtos/uC-FS/Source/fs_entry.c ****                      FS_ERR         *p_err)
 683:rtos/uC-FS/Source/fs_entry.c **** 
 684:rtos/uC-FS/Source/fs_entry.c **** {
 685:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 686:rtos/uC-FS/Source/fs_entry.c **** 
 687:rtos/uC-FS/Source/fs_entry.c **** 
 688:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 689:rtos/uC-FS/Source/fs_entry.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 690:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 691:rtos/uC-FS/Source/fs_entry.c ****     }
 692:rtos/uC-FS/Source/fs_entry.c ****     if (name_full == (CPU_CHAR *)0) {                           /* Validate name ptr.              
 693:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 694:rtos/uC-FS/Source/fs_entry.c ****         return;
 695:rtos/uC-FS/Source/fs_entry.c ****     }
 696:rtos/uC-FS/Source/fs_entry.c ****     if (p_info == (FS_ENTRY_INFO *)0) {                         /* Validate info ptr.              
 697:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NULL_PTR;
 698:rtos/uC-FS/Source/fs_entry.c ****         return;
 699:rtos/uC-FS/Source/fs_entry.c ****     }
 700:rtos/uC-FS/Source/fs_entry.c **** #endif
 701:rtos/uC-FS/Source/fs_entry.c **** 
 702:rtos/uC-FS/Source/fs_entry.c **** 
 703:rtos/uC-FS/Source/fs_entry.c **** 
 704:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------ FORM FULL PAT
 705:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 706:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = FS_WorkingDirPathForm(name_full, p_err);   /* Try to form path.               
 707:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
 708:rtos/uC-FS/Source/fs_entry.c ****         return;
 709:rtos/uC-FS/Source/fs_entry.c ****     }
 710:rtos/uC-FS/Source/fs_entry.c **** #else
 711:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = name_full;
 712:rtos/uC-FS/Source/fs_entry.c **** #endif
 713:rtos/uC-FS/Source/fs_entry.c **** 
 714:rtos/uC-FS/Source/fs_entry.c **** 
ARM GAS  /tmp/cc8IPqmX.s 			page 14


 715:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------ GET ENTRY INF
 716:rtos/uC-FS/Source/fs_entry.c ****     FSEntry_QueryHandler(name_full_temp,
 717:rtos/uC-FS/Source/fs_entry.c ****                          p_info,
 718:rtos/uC-FS/Source/fs_entry.c ****                          p_err);
 719:rtos/uC-FS/Source/fs_entry.c **** 
 720:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 721:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_temp != name_full) {
 722:rtos/uC-FS/Source/fs_entry.c ****         FS_WorkingDirObjFree(name_full_temp);
 723:rtos/uC-FS/Source/fs_entry.c ****     }
 724:rtos/uC-FS/Source/fs_entry.c **** #endif
 725:rtos/uC-FS/Source/fs_entry.c **** }
 726:rtos/uC-FS/Source/fs_entry.c **** 
 727:rtos/uC-FS/Source/fs_entry.c **** 
 728:rtos/uC-FS/Source/fs_entry.c **** /*
 729:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 730:rtos/uC-FS/Source/fs_entry.c **** *                                          FSEntry_Rename()
 731:rtos/uC-FS/Source/fs_entry.c **** *
 732:rtos/uC-FS/Source/fs_entry.c **** * Description : Rename a file or directory.
 733:rtos/uC-FS/Source/fs_entry.c **** *
 734:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full_old   Old path of the entry.
 735:rtos/uC-FS/Source/fs_entry.c **** *
 736:rtos/uC-FS/Source/fs_entry.c **** *               name_full_new   New path of the entry.
 737:rtos/uC-FS/Source/fs_entry.c **** *
 738:rtos/uC-FS/Source/fs_entry.c **** *               excl            Indicates whether creation of new entry should be exclusive (see No
 739:rtos/uC-FS/Source/fs_entry.c **** *
 740:rtos/uC-FS/Source/fs_entry.c **** *                                   DEF_YES, if the entry shall be renamed ONLY if 'name_full_new'
 741:rtos/uC-FS/Source/fs_entry.c **** *                                                does not exist.
 742:rtos/uC-FS/Source/fs_entry.c **** *                                   DEF_NO,  if the entry shall be renamed even if 'name_full_new'
 743:rtos/uC-FS/Source/fs_entry.c **** *                                                does exist.
 744:rtos/uC-FS/Source/fs_entry.c **** *
 745:rtos/uC-FS/Source/fs_entry.c **** *               p_err           Pointer to variable that will receive the return error code from th
 746:rtos/uC-FS/Source/fs_entry.c **** *
 747:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NONE                      Entry renamed successfully.
 748:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_NULL                 Argument 'name_full_old'/'name
 749:rtos/uC-FS/Source/fs_entry.c **** *                                                                        passed a NULL pointer.
 750:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRIES_VOLS_DIFF         Paths specify file system entr
 751:rtos/uC-FS/Source/fs_entry.c **** *                                                                        on different vols (see Not
 752:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_ROOT_DIR            File system entry is a root di
 753:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_INVALID_OP            Invalid operation on volume.
 754:rtos/uC-FS/Source/fs_entry.c **** *
 755:rtos/uC-FS/Source/fs_entry.c **** *                                                                    --- RETURNED BY FSEntry_NamePa
 756:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_INVALID              Entry name specified invalid O
 757:rtos/uC-FS/Source/fs_entry.c **** *                                                                        volume could not be found.
 758:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_PATH_TOO_LONG        Entry name specified too long.
 759:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_NOT_OPEN              Volume was not open.
 760:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_NOT_MOUNTED           Volume was not mounted.
 761:rtos/uC-FS/Source/fs_entry.c **** *
 762:rtos/uC-FS/Source/fs_entry.c **** *                                                                    ------ RETURNED BY FSSys_Entry
 763:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_BUF_NONE_AVAIL            Buffer not available.
 764:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_DEV                       Device access error.
 765:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRIES_TYPE_DIFF         Paths do not both specify file
 766:rtos/uC-FS/Source/fs_entry.c **** *                                                                        OR directories (see Notes 
 767:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_EXISTS              File system entry exists.
 768:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_NOT_EMPTY           File system entry NOT empty.
 769:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_NOT_FOUND           File system entry NOT found
 770:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
 771:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
ARM GAS  /tmp/cc8IPqmX.s 			page 15


 772:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_RD_ONLY             File system entry marked read-
 773:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_INVALID              Invalid file name or path.
 774:rtos/uC-FS/Source/fs_entry.c **** *
 775:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
 776:rtos/uC-FS/Source/fs_entry.c **** *
 777:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : (1) If 'name_full_old' & 'name_full_new' specify entries on different volumes, then
 778:rtos/uC-FS/Source/fs_entry.c **** *                   'name_full_old' MUST specify a file.  If 'name_full_old' specifies a directory,
 779:rtos/uC-FS/Source/fs_entry.c **** *                   error will be returned.
 780:rtos/uC-FS/Source/fs_entry.c **** *
 781:rtos/uC-FS/Source/fs_entry.c **** *               (2) (a) If 'name_full_old' and 'name_full_new' specify the same entry, the volume
 782:rtos/uC-FS/Source/fs_entry.c **** *                       will not be modified and no error will be returned.
 783:rtos/uC-FS/Source/fs_entry.c **** *
 784:rtos/uC-FS/Source/fs_entry.c **** *                   (b) If 'name_full_old' specifies a file:
 785:rtos/uC-FS/Source/fs_entry.c **** *
 786:rtos/uC-FS/Source/fs_entry.c **** *                       (1) ... 'name_full_new' must NOT specify a directory
 787:rtos/uC-FS/Source/fs_entry.c **** *
 788:rtos/uC-FS/Source/fs_entry.c **** *                       (2) ... if 'excl' is DEF_NO and 'name_full_new' is a file, 'name_full_new'
 789:rtos/uC-FS/Source/fs_entry.c **** *                               will be removed.
 790:rtos/uC-FS/Source/fs_entry.c **** *
 791:rtos/uC-FS/Source/fs_entry.c **** *                   (c) If 'name_full_old' specifies a directory:
 792:rtos/uC-FS/Source/fs_entry.c **** *
 793:rtos/uC-FS/Source/fs_entry.c **** *                       (1) ... 'name_full_new' must NOT specify a file
 794:rtos/uC-FS/Source/fs_entry.c **** *
 795:rtos/uC-FS/Source/fs_entry.c **** *                       (2) ... if 'excl' is DEF_NO and 'name_full_new' is a directory, 'name_full_
 796:rtos/uC-FS/Source/fs_entry.c **** *                               MUST be empty; if so, it will be removed.
 797:rtos/uC-FS/Source/fs_entry.c **** *
 798:rtos/uC-FS/Source/fs_entry.c **** *               (3) If 'excl' is DEF_NO, 'name_full_new' must not exist.
 799:rtos/uC-FS/Source/fs_entry.c **** *
 800:rtos/uC-FS/Source/fs_entry.c **** *               (4) The root directory may NOT be renamed.
 801:rtos/uC-FS/Source/fs_entry.c **** *
 802:rtos/uC-FS/Source/fs_entry.c **** *               (5) See 'fs_rename()  Note(s)'.
 803:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 804:rtos/uC-FS/Source/fs_entry.c **** */
 805:rtos/uC-FS/Source/fs_entry.c **** 
 806:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 807:rtos/uC-FS/Source/fs_entry.c **** void  FSEntry_Rename (CPU_CHAR     *name_full_old,
 808:rtos/uC-FS/Source/fs_entry.c ****                       CPU_CHAR     *name_full_new,
 809:rtos/uC-FS/Source/fs_entry.c ****                       CPU_BOOLEAN   excl,
 810:rtos/uC-FS/Source/fs_entry.c ****                       FS_ERR       *p_err)
 811:rtos/uC-FS/Source/fs_entry.c **** {
 812:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp_old;
 813:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp_new;
 814:rtos/uC-FS/Source/fs_entry.c **** 
 815:rtos/uC-FS/Source/fs_entry.c **** 
 816:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 817:rtos/uC-FS/Source/fs_entry.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 818:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 819:rtos/uC-FS/Source/fs_entry.c ****     }
 820:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_old == (CPU_CHAR *)0) {                       /* Validate old name ptr.          
 821:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 822:rtos/uC-FS/Source/fs_entry.c ****         return;
 823:rtos/uC-FS/Source/fs_entry.c ****     }
 824:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_new == (CPU_CHAR *)0) {                       /* Validate new name ptr.          
 825:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 826:rtos/uC-FS/Source/fs_entry.c ****         return;
 827:rtos/uC-FS/Source/fs_entry.c ****     }
 828:rtos/uC-FS/Source/fs_entry.c **** #endif
ARM GAS  /tmp/cc8IPqmX.s 			page 16


 829:rtos/uC-FS/Source/fs_entry.c **** 
 830:rtos/uC-FS/Source/fs_entry.c **** 
 831:rtos/uC-FS/Source/fs_entry.c **** 
 832:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------ FORM FULL PAT
 833:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 834:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp_old = FS_WorkingDirPathForm(name_full_old,   /* Try to form path.               
 835:rtos/uC-FS/Source/fs_entry.c ****                                                p_err);
 836:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
 837:rtos/uC-FS/Source/fs_entry.c ****         return;
 838:rtos/uC-FS/Source/fs_entry.c ****     }
 839:rtos/uC-FS/Source/fs_entry.c **** 
 840:rtos/uC-FS/Source/fs_entry.c **** 
 841:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp_new = FS_WorkingDirPathForm(name_full_new,   /* Try to form path.               
 842:rtos/uC-FS/Source/fs_entry.c ****                                                p_err);
 843:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
 844:rtos/uC-FS/Source/fs_entry.c ****         if (name_full_temp_old != name_full_old) {
 845:rtos/uC-FS/Source/fs_entry.c ****             FS_WorkingDirObjFree(name_full_temp_old);
 846:rtos/uC-FS/Source/fs_entry.c ****         }
 847:rtos/uC-FS/Source/fs_entry.c ****         return;
 848:rtos/uC-FS/Source/fs_entry.c ****     }
 849:rtos/uC-FS/Source/fs_entry.c **** #else
 850:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp_old = name_full_old;
 851:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp_new = name_full_new;
 852:rtos/uC-FS/Source/fs_entry.c **** #endif
 853:rtos/uC-FS/Source/fs_entry.c **** 
 854:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------- RENAME ENTRY
 855:rtos/uC-FS/Source/fs_entry.c ****     FSEntry_RenameHandler(name_full_temp_old,
 856:rtos/uC-FS/Source/fs_entry.c ****                           name_full_temp_new,
 857:rtos/uC-FS/Source/fs_entry.c ****                           excl,
 858:rtos/uC-FS/Source/fs_entry.c ****                           p_err);
 859:rtos/uC-FS/Source/fs_entry.c **** 
 860:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 861:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_temp_new != name_full_new) {
 862:rtos/uC-FS/Source/fs_entry.c ****         FS_WorkingDirObjFree(name_full_temp_new);
 863:rtos/uC-FS/Source/fs_entry.c ****     }
 864:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_temp_old != name_full_old) {
 865:rtos/uC-FS/Source/fs_entry.c ****         FS_WorkingDirObjFree(name_full_temp_old);
 866:rtos/uC-FS/Source/fs_entry.c ****     }
 867:rtos/uC-FS/Source/fs_entry.c **** #endif
 868:rtos/uC-FS/Source/fs_entry.c **** }
 869:rtos/uC-FS/Source/fs_entry.c **** #endif
 870:rtos/uC-FS/Source/fs_entry.c **** 
 871:rtos/uC-FS/Source/fs_entry.c **** 
 872:rtos/uC-FS/Source/fs_entry.c **** 
 873:rtos/uC-FS/Source/fs_entry.c **** /*
 874:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 875:rtos/uC-FS/Source/fs_entry.c **** *                                          FSEntry_TimeSet()
 876:rtos/uC-FS/Source/fs_entry.c **** *
 877:rtos/uC-FS/Source/fs_entry.c **** * Description : Set a file or directory's date/time.
 878:rtos/uC-FS/Source/fs_entry.c **** *
 879:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
 880:rtos/uC-FS/Source/fs_entry.c **** *
 881:rtos/uC-FS/Source/fs_entry.c **** *               p_time      Pointer to date/time.
 882:rtos/uC-FS/Source/fs_entry.c **** *
 883:rtos/uC-FS/Source/fs_entry.c **** *               time_type   Flag to indicate which Date/Time should be set
 884:rtos/uC-FS/Source/fs_entry.c **** *
 885:rtos/uC-FS/Source/fs_entry.c **** *                               FS_DATE_TIME_CREATE
ARM GAS  /tmp/cc8IPqmX.s 			page 17


 886:rtos/uC-FS/Source/fs_entry.c **** *                               FS_DATE_TIME_MODIFY
 887:rtos/uC-FS/Source/fs_entry.c **** *                               FS_DATE_TIME_ACCESS
 888:rtos/uC-FS/Source/fs_entry.c **** *                               FS_DATE_TIME_ALL
 889:rtos/uC-FS/Source/fs_entry.c **** *
 890:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 891:rtos/uC-FS/Source/fs_entry.c **** *
 892:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE                         Entry date/time set successfull
 893:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_NULL                    Argument 'name_full' passed a N
 894:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NULL_PTR                     Argument 'p_time' passed a NULL
 895:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_ROOT_DIR               File system entry is a root dir
 896:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_FILE_INVALID_DATE_TIME       Date/time specified invalid.
 897:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_INVALID_OP               Invalid operation on volume.
 898:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_FILE_INVALID_DATE_TIME_TYPE  time_type flag specified is inv
 899:rtos/uC-FS/Source/fs_entry.c **** *
 900:rtos/uC-FS/Source/fs_entry.c **** *                                                                   ---- RETURNED BY FSEntry_NamePa
 901:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID                 Entry name specified invalid OR
 902:rtos/uC-FS/Source/fs_entry.c **** *                                                                       could not be found.
 903:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_PATH_TOO_LONG           Entry name specified too long.
 904:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_OPEN                 Volume was not open.
 905:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_MOUNTED              Volume was not mounted.
 906:rtos/uC-FS/Source/fs_entry.c **** *
 907:rtos/uC-FS/Source/fs_entry.c **** *                                                                   ----- RETURNED BY FSSys_EntryTi
 908:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_BUF_NONE_AVAIL               Buffer not available.
 909:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_DEV                          Device access error.
 910:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_FOUND              File system entry NOT found
 911:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_FOUND       Entry parent NOT found.
 912:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_DIR         Entry parent NOT a directory.
 913:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID                 Invalid file name or path.
 914:rtos/uC-FS/Source/fs_entry.c **** *
 915:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
 916:rtos/uC-FS/Source/fs_entry.c **** *
 917:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : (1) The date/time of the root directory may NOT be set.
 918:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 919:rtos/uC-FS/Source/fs_entry.c **** */
 920:rtos/uC-FS/Source/fs_entry.c **** 
 921:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 922:rtos/uC-FS/Source/fs_entry.c **** void  FSEntry_TimeSet (CPU_CHAR      *name_full,
 923:rtos/uC-FS/Source/fs_entry.c ****                        CLK_DATE_TIME *p_time,
 924:rtos/uC-FS/Source/fs_entry.c ****                        CPU_INT08U     time_type,
 925:rtos/uC-FS/Source/fs_entry.c ****                        FS_ERR        *p_err)
 926:rtos/uC-FS/Source/fs_entry.c **** {
 927:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     *name_full_temp;
 928:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)
 929:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   valid;
 930:rtos/uC-FS/Source/fs_entry.c **** #endif
 931:rtos/uC-FS/Source/fs_entry.c **** 
 932:rtos/uC-FS/Source/fs_entry.c **** 
 933:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------- VALIDATE ARG
 934:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)
 935:rtos/uC-FS/Source/fs_entry.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 936:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 937:rtos/uC-FS/Source/fs_entry.c ****     }
 938:rtos/uC-FS/Source/fs_entry.c ****     if (name_full == (CPU_CHAR *)0) {                           /* Validate name ptr.              
 939:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 940:rtos/uC-FS/Source/fs_entry.c ****         return;
 941:rtos/uC-FS/Source/fs_entry.c ****     }
 942:rtos/uC-FS/Source/fs_entry.c **** 
ARM GAS  /tmp/cc8IPqmX.s 			page 18


 943:rtos/uC-FS/Source/fs_entry.c ****     if (p_time == (CLK_DATE_TIME *)0) {                         /* Validate date/time ptr.         
 944:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NULL_PTR;
 945:rtos/uC-FS/Source/fs_entry.c ****         return;
 946:rtos/uC-FS/Source/fs_entry.c ****     }
 947:rtos/uC-FS/Source/fs_entry.c **** 
 948:rtos/uC-FS/Source/fs_entry.c ****     valid = Clk_IsUnixDateTimeValid(p_time);                    /* Validate date/time.             
 949:rtos/uC-FS/Source/fs_entry.c ****     if (valid == DEF_NO) {
 950:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_FILE_INVALID_DATE_TIME;
 951:rtos/uC-FS/Source/fs_entry.c ****         return;
 952:rtos/uC-FS/Source/fs_entry.c ****     }
 953:rtos/uC-FS/Source/fs_entry.c **** 
 954:rtos/uC-FS/Source/fs_entry.c ****     valid = FS_IS_VALID_DATE_TIME_TYPE(time_type);              /* Validate date/time type flag    
 955:rtos/uC-FS/Source/fs_entry.c ****     if (valid == DEF_NO) {
 956:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_FILE_INVALID_DATE_TIME_TYPE;
 957:rtos/uC-FS/Source/fs_entry.c ****         return;
 958:rtos/uC-FS/Source/fs_entry.c ****     }
 959:rtos/uC-FS/Source/fs_entry.c **** #endif
 960:rtos/uC-FS/Source/fs_entry.c **** 
 961:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------ FORM FULL PAT
 962:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 963:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = FS_WorkingDirPathForm(name_full, p_err);   /* Try to form path.               
 964:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
 965:rtos/uC-FS/Source/fs_entry.c ****         return;
 966:rtos/uC-FS/Source/fs_entry.c ****     }
 967:rtos/uC-FS/Source/fs_entry.c **** #else
 968:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp = name_full;
 969:rtos/uC-FS/Source/fs_entry.c **** #endif
 970:rtos/uC-FS/Source/fs_entry.c **** 
 971:rtos/uC-FS/Source/fs_entry.c **** 
 972:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------- SET DATE/TIM
 973:rtos/uC-FS/Source/fs_entry.c ****     FSEntry_TimeSetHandler(name_full_temp,
 974:rtos/uC-FS/Source/fs_entry.c ****                            p_time,
 975:rtos/uC-FS/Source/fs_entry.c ****                            time_type,
 976:rtos/uC-FS/Source/fs_entry.c ****                            p_err);
 977:rtos/uC-FS/Source/fs_entry.c **** 
 978:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 979:rtos/uC-FS/Source/fs_entry.c ****     if (name_full_temp != name_full) {
 980:rtos/uC-FS/Source/fs_entry.c ****         FS_WorkingDirObjFree(name_full_temp);
 981:rtos/uC-FS/Source/fs_entry.c ****     }
 982:rtos/uC-FS/Source/fs_entry.c **** #endif
 983:rtos/uC-FS/Source/fs_entry.c **** }
 984:rtos/uC-FS/Source/fs_entry.c **** #endif
 985:rtos/uC-FS/Source/fs_entry.c **** 
 986:rtos/uC-FS/Source/fs_entry.c **** 
 987:rtos/uC-FS/Source/fs_entry.c **** /*
 988:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 989:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 990:rtos/uC-FS/Source/fs_entry.c **** *                                           LOCAL FUNCTIONS
 991:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 992:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 993:rtos/uC-FS/Source/fs_entry.c **** */
 994:rtos/uC-FS/Source/fs_entry.c **** 
 995:rtos/uC-FS/Source/fs_entry.c **** /*
 996:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
 997:rtos/uC-FS/Source/fs_entry.c **** *                                     FSEntry_AttribSetHandler()
 998:rtos/uC-FS/Source/fs_entry.c **** *
 999:rtos/uC-FS/Source/fs_entry.c **** * Description : Set a file or directory's attributes.
ARM GAS  /tmp/cc8IPqmX.s 			page 19


1000:rtos/uC-FS/Source/fs_entry.c **** *
1001:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
1002:rtos/uC-FS/Source/fs_entry.c **** *               ---------   Argument validated by caller.
1003:rtos/uC-FS/Source/fs_entry.c **** *
1004:rtos/uC-FS/Source/fs_entry.c **** *               attrib      Entry attributes to set.
1005:rtos/uC-FS/Source/fs_entry.c **** *
1006:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1007:rtos/uC-FS/Source/fs_entry.c **** *               -----       Argument validated by caller.
1008:rtos/uC-FS/Source/fs_entry.c **** *
1009:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE    Entry attributes set successfully.
1010:rtos/uC-FS/Source/fs_entry.c **** *                               See 'FSEntry_AttribSet()'.
1011:rtos/uC-FS/Source/fs_entry.c **** *
1012:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
1013:rtos/uC-FS/Source/fs_entry.c **** *
1014:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : none.
1015:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1016:rtos/uC-FS/Source/fs_entry.c **** */
1017:rtos/uC-FS/Source/fs_entry.c **** 
1018:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1019:rtos/uC-FS/Source/fs_entry.c **** static  void  FSEntry_AttribSetHandler (CPU_CHAR  *name_full,
1020:rtos/uC-FS/Source/fs_entry.c ****                                         FS_FLAGS   attrib,
1021:rtos/uC-FS/Source/fs_entry.c ****                                         FS_ERR    *p_err)
1022:rtos/uC-FS/Source/fs_entry.c **** {
1023:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     *name_entry;
1024:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL       *p_vol;
1025:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   file_open;
1026:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   dir_open;
1027:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   entry_open;
1028:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   mode_ro;
1029:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS      mode;
1030:rtos/uC-FS/Source/fs_entry.c **** 
1031:rtos/uC-FS/Source/fs_entry.c **** 
1032:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* --------------- VERIFY IF ENTRY 
1033:rtos/uC-FS/Source/fs_entry.c ****     dir_open  = DEF_NO;
1034:rtos/uC-FS/Source/fs_entry.c ****     file_open = DEF_NO;
1035:rtos/uC-FS/Source/fs_entry.c **** 
1036:rtos/uC-FS/Source/fs_entry.c ****     file_open = FSFile_IsOpen(name_full, &mode, p_err);
1037:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
1038:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
1039:rtos/uC-FS/Source/fs_entry.c ****         return;
1040:rtos/uC-FS/Source/fs_entry.c ****     }
1041:rtos/uC-FS/Source/fs_entry.c **** 
1042:rtos/uC-FS/Source/fs_entry.c **** #ifdef   FS_DIR_MODULE_PRESENT
1043:rtos/uC-FS/Source/fs_entry.c ****     dir_open  = FSDir_IsOpen(name_full, p_err);
1044:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
1045:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
1046:rtos/uC-FS/Source/fs_entry.c ****         return;
1047:rtos/uC-FS/Source/fs_entry.c ****     }
1048:rtos/uC-FS/Source/fs_entry.c **** #endif
1049:rtos/uC-FS/Source/fs_entry.c **** 
1050:rtos/uC-FS/Source/fs_entry.c ****     entry_open = dir_open || file_open;
1051:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
1052:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_OPEN;
1053:rtos/uC-FS/Source/fs_entry.c ****         return;
1054:rtos/uC-FS/Source/fs_entry.c ****     }
1055:rtos/uC-FS/Source/fs_entry.c **** 
1056:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ---------------------- GET VOL -
ARM GAS  /tmp/cc8IPqmX.s 			page 20


1057:rtos/uC-FS/Source/fs_entry.c ****     name_entry = FSEntry_NameParseChk( name_full,
1058:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
1059:rtos/uC-FS/Source/fs_entry.c ****                                        p_err);
1060:rtos/uC-FS/Source/fs_entry.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
1061:rtos/uC-FS/Source/fs_entry.c ****     if ((p_vol      == (FS_VOL   *)0) ||                        /* Rtn err if no vol found ...     
1062:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
1063:rtos/uC-FS/Source/fs_entry.c ****         return;
1064:rtos/uC-FS/Source/fs_entry.c ****     }
1065:rtos/uC-FS/Source/fs_entry.c **** 
1066:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Chk vol mode.                   
1067:rtos/uC-FS/Source/fs_entry.c ****     mode_ro = DEF_BIT_IS_CLR(p_vol->AccessMode, FS_VOL_ACCESS_MODE_WR);
1068:rtos/uC-FS/Source/fs_entry.c ****     if (mode_ro == DEF_YES) {
1069:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1070:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
1071:rtos/uC-FS/Source/fs_entry.c ****         return;
1072:rtos/uC-FS/Source/fs_entry.c ****     }
1073:rtos/uC-FS/Source/fs_entry.c **** 
1074:rtos/uC-FS/Source/fs_entry.c **** 
1075:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* -------------------- SET ATTRIB 
1076:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry[0] == (CPU_CHAR)ASCII_CHAR_NULL) {           /* Rtn err if entry specifies root 
1077:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1078:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
1079:rtos/uC-FS/Source/fs_entry.c ****         return;
1080:rtos/uC-FS/Source/fs_entry.c ****     }
1081:rtos/uC-FS/Source/fs_entry.c **** 
1082:rtos/uC-FS/Source/fs_entry.c ****     FSSys_EntryAttribSet(p_vol,
1083:rtos/uC-FS/Source/fs_entry.c ****                          name_entry,
1084:rtos/uC-FS/Source/fs_entry.c ****                          attrib,
1085:rtos/uC-FS/Source/fs_entry.c ****                          p_err);
1086:rtos/uC-FS/Source/fs_entry.c **** 
1087:rtos/uC-FS/Source/fs_entry.c **** 
1088:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ----------------- RELEASE VOL & 
1089:rtos/uC-FS/Source/fs_entry.c ****     FSVol_ReleaseUnlock(p_vol);
1090:rtos/uC-FS/Source/fs_entry.c **** }
1091:rtos/uC-FS/Source/fs_entry.c **** #endif
1092:rtos/uC-FS/Source/fs_entry.c **** 
1093:rtos/uC-FS/Source/fs_entry.c **** 
1094:rtos/uC-FS/Source/fs_entry.c **** /*
1095:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1096:rtos/uC-FS/Source/fs_entry.c **** *                                       FSEntry_CreateHandler()
1097:rtos/uC-FS/Source/fs_entry.c **** *
1098:rtos/uC-FS/Source/fs_entry.c **** * Description : Create a file or directory.
1099:rtos/uC-FS/Source/fs_entry.c **** *
1100:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
1101:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1102:rtos/uC-FS/Source/fs_entry.c **** *
1103:rtos/uC-FS/Source/fs_entry.c **** *               entry_type  Indicates whether the new entry shall be a directory or a file :
1104:rtos/uC-FS/Source/fs_entry.c **** *
1105:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ENTRY_TYPE_DIR,  if the entry shall be a directory.
1106:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ENTRY_TYPE_FILE, if the entry shall be a file.
1107:rtos/uC-FS/Source/fs_entry.c **** *
1108:rtos/uC-FS/Source/fs_entry.c **** *               excl        Indicates whether creation of new entry shall be exclusive :
1109:rtos/uC-FS/Source/fs_entry.c **** *
1110:rtos/uC-FS/Source/fs_entry.c **** *                               DEF_YES, if the entry shall be created ONLY if 'name_full' does not
1111:rtos/uC-FS/Source/fs_entry.c **** *                               DEF_NO,  if the entry shall be created even if 'name_full' does    
1112:rtos/uC-FS/Source/fs_entry.c **** *
1113:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
ARM GAS  /tmp/cc8IPqmX.s 			page 21


1114:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1115:rtos/uC-FS/Source/fs_entry.c **** *
1116:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE    Entry created successfully.
1117:rtos/uC-FS/Source/fs_entry.c **** *                               See 'FSEntry_Create()'.
1118:rtos/uC-FS/Source/fs_entry.c **** *
1119:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
1120:rtos/uC-FS/Source/fs_entry.c **** *
1121:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : none.
1122:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1123:rtos/uC-FS/Source/fs_entry.c **** */
1124:rtos/uC-FS/Source/fs_entry.c **** 
1125:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1126:rtos/uC-FS/Source/fs_entry.c **** static  void  FSEntry_CreateHandler (CPU_CHAR     *name_full,
1127:rtos/uC-FS/Source/fs_entry.c ****                                      FS_FLAGS      entry_type,
1128:rtos/uC-FS/Source/fs_entry.c ****                                      CPU_BOOLEAN   excl,
1129:rtos/uC-FS/Source/fs_entry.c ****                                      FS_ERR       *p_err)
1130:rtos/uC-FS/Source/fs_entry.c **** {
1131:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_entry;
1132:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL    *p_vol;
1133:rtos/uC-FS/Source/fs_entry.c **** 
1134:rtos/uC-FS/Source/fs_entry.c **** 
1135:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ---------------------- GET VOL -
1136:rtos/uC-FS/Source/fs_entry.c ****     name_entry = FSEntry_NameParseChk( name_full,
1137:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
1138:rtos/uC-FS/Source/fs_entry.c ****                                        p_err);
1139:rtos/uC-FS/Source/fs_entry.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
1140:rtos/uC-FS/Source/fs_entry.c ****     if ((p_vol      == (FS_VOL   *)0) ||                        /* Rtn err if no vol found ...     
1141:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
1142:rtos/uC-FS/Source/fs_entry.c ****         return;
1143:rtos/uC-FS/Source/fs_entry.c ****     }
1144:rtos/uC-FS/Source/fs_entry.c **** 
1145:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Chk vol mode.                   
1146:rtos/uC-FS/Source/fs_entry.c ****     if (DEF_BIT_IS_CLR(p_vol->AccessMode, FS_VOL_ACCESS_MODE_WR)== DEF_YES) {
1147:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1148:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
1149:rtos/uC-FS/Source/fs_entry.c ****         return;
1150:rtos/uC-FS/Source/fs_entry.c ****     }
1151:rtos/uC-FS/Source/fs_entry.c **** 
1152:rtos/uC-FS/Source/fs_entry.c **** 
1153:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------- CREATE ENTRY
1154:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry[0] == (CPU_CHAR)ASCII_CHAR_NULL) {           /* Rtn err if entry specifies root 
1155:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1156:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
1157:rtos/uC-FS/Source/fs_entry.c ****         return;
1158:rtos/uC-FS/Source/fs_entry.c ****     }
1159:rtos/uC-FS/Source/fs_entry.c **** 
1160:rtos/uC-FS/Source/fs_entry.c ****     FSSys_EntryCreate(p_vol,
1161:rtos/uC-FS/Source/fs_entry.c ****                       name_entry,
1162:rtos/uC-FS/Source/fs_entry.c ****                       entry_type,
1163:rtos/uC-FS/Source/fs_entry.c ****                       excl,
1164:rtos/uC-FS/Source/fs_entry.c ****                       p_err);
1165:rtos/uC-FS/Source/fs_entry.c **** 
1166:rtos/uC-FS/Source/fs_entry.c **** 
1167:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ----------------- RELEASE VOL & 
1168:rtos/uC-FS/Source/fs_entry.c ****     FSVol_ReleaseUnlock(p_vol);
1169:rtos/uC-FS/Source/fs_entry.c **** }
1170:rtos/uC-FS/Source/fs_entry.c **** #endif
ARM GAS  /tmp/cc8IPqmX.s 			page 22


1171:rtos/uC-FS/Source/fs_entry.c **** 
1172:rtos/uC-FS/Source/fs_entry.c **** 
1173:rtos/uC-FS/Source/fs_entry.c **** 
1174:rtos/uC-FS/Source/fs_entry.c **** /*
1175:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1176:rtos/uC-FS/Source/fs_entry.c **** *                                        FSEntry_DelHandler()
1177:rtos/uC-FS/Source/fs_entry.c **** *
1178:rtos/uC-FS/Source/fs_entry.c **** * Description : Delete a file or directory.
1179:rtos/uC-FS/Source/fs_entry.c **** *
1180:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full       Name of the entry.
1181:rtos/uC-FS/Source/fs_entry.c **** *               ---------       Argument validated by caller.
1182:rtos/uC-FS/Source/fs_entry.c **** *
1183:rtos/uC-FS/Source/fs_entry.c **** *               entry_type      Indicates whether the new entry can be a directory / a file :
1184:rtos/uC-FS/Source/fs_entry.c **** *               ----------      Argument validated by caller.
1185:rtos/uC-FS/Source/fs_entry.c **** *
1186:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ENTRY_TYPE_DIR,  if the entry can be a directory.
1187:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ENTRY_TYPE_FILE, if the entry can be a file.
1188:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ENTRY_TYPE_ANY,  if the entry can be any type
1189:rtos/uC-FS/Source/fs_entry.c **** *
1190:rtos/uC-FS/Source/fs_entry.c **** *                               These values can be OR'd to allow multiple types.
1191:rtos/uC-FS/Source/fs_entry.c **** *
1192:rtos/uC-FS/Source/fs_entry.c **** *               p_err           Pointer to variable that will receive the return error code from th
1193:rtos/uC-FS/Source/fs_entry.c **** *               -----           Argument validated by caller.
1194:rtos/uC-FS/Source/fs_entry.c **** *
1195:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE                     Entry deleted successfully.
1196:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_NULL                Argument 'name_full' passed a NULL 
1197:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_ROOT_DIR           File system entry is a root directo
1198:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_INVALID_OP           Invalid operation on volume.
1199:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_OPEN               Open entry cannot be deleted.
1200:rtos/uC-FS/Source/fs_entry.c **** *
1201:rtos/uC-FS/Source/fs_entry.c **** *                                                                ------ RETURNED BY FSFile_IsOpen()
1202:rtos/uC-FS/Source/fs_entry.c **** *                                                                ----------- AND BY FSDir_IsOpen() 
1203:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE                     File/Dir opened successfully.
1204:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NULL_PTR                 Argument 'name_full' passed a NULL 
1205:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_BUF_NONE_AVAIL           No buffer available.
1206:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_FILE           Entry not a file or dir.
1207:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID             Invalid name or path.
1208:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_INVALID_SEC_NBR      Invalid sector number found in dire
1209:rtos/uC-FS/Source/fs_entry.c **** *
1210:rtos/uC-FS/Source/fs_entry.c **** *                                                                --- RETURNED BY FSEntry_NameParseC
1211:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Entry name specified invalid OR vo
1212:rtos/uC-FS/Source/fs_entry.c **** *                                                                    could not be found.
1213:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_PATH_TOO_LONG        Entry name specified too long.
1214:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_OPEN              Volume was not open.
1215:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_MOUNTED           Volume was not mounted.
1216:rtos/uC-FS/Source/fs_entry.c **** *
1217:rtos/uC-FS/Source/fs_entry.c **** *                                                                ------ RETURNED BY FSSys_EntryDel(
1218:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_BUF_NONE_AVAIL            Buffer not available.
1219:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_DEV                       Device access error.
1220:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_FILE            File system entry NOT a file.
1221:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_DIR             File system entry NOT a directory.
1222:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_NOT_EMPTY           File system entry NOT empty.
1223:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
1224:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
1225:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID              Invalid file name or path.
1226:rtos/uC-FS/Source/fs_entry.c **** *
1227:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
ARM GAS  /tmp/cc8IPqmX.s 			page 23


1228:rtos/uC-FS/Source/fs_entry.c **** *
1229:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : none.
1230:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1231:rtos/uC-FS/Source/fs_entry.c **** */
1232:rtos/uC-FS/Source/fs_entry.c **** 
1233:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1234:rtos/uC-FS/Source/fs_entry.c **** static  void  FSEntry_DelHandler (CPU_CHAR  *name_full,
1235:rtos/uC-FS/Source/fs_entry.c ****                                   FS_FLAGS   entry_type,
1236:rtos/uC-FS/Source/fs_entry.c ****                                   FS_ERR    *p_err)
1237:rtos/uC-FS/Source/fs_entry.c **** {
1238:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     *name_entry;
1239:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL       *p_vol;
1240:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS      mode;
1241:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS      del_entry_type;
1242:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   file_open;
1243:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   dir_open;
1244:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   entry_open;
1245:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   is_file;
1246:rtos/uC-FS/Source/fs_entry.c **** #ifdef   FS_DIR_MODULE_PRESENT
1247:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   is_dir;
1248:rtos/uC-FS/Source/fs_entry.c **** #endif
1249:rtos/uC-FS/Source/fs_entry.c **** 
1250:rtos/uC-FS/Source/fs_entry.c **** 
1251:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* --------------- VERIFY IF ENTRY 
1252:rtos/uC-FS/Source/fs_entry.c ****     dir_open  = DEF_NO;
1253:rtos/uC-FS/Source/fs_entry.c ****     file_open = DEF_NO;
1254:rtos/uC-FS/Source/fs_entry.c **** 
1255:rtos/uC-FS/Source/fs_entry.c ****     is_file = DEF_BIT_IS_SET(entry_type, FS_ENTRY_TYPE_FILE);
1256:rtos/uC-FS/Source/fs_entry.c ****     if (is_file == DEF_YES) {
1257:rtos/uC-FS/Source/fs_entry.c ****         file_open = FSFile_IsOpen(name_full, &mode, p_err);
1258:rtos/uC-FS/Source/fs_entry.c ****         if ((*p_err != FS_ERR_NONE) &&
1259:rtos/uC-FS/Source/fs_entry.c ****             (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
1260:rtos/uC-FS/Source/fs_entry.c ****             return;
1261:rtos/uC-FS/Source/fs_entry.c ****         }
1262:rtos/uC-FS/Source/fs_entry.c ****     }
1263:rtos/uC-FS/Source/fs_entry.c **** #ifdef   FS_DIR_MODULE_PRESENT
1264:rtos/uC-FS/Source/fs_entry.c ****     is_dir = DEF_BIT_IS_SET(entry_type, FS_ENTRY_TYPE_DIR);
1265:rtos/uC-FS/Source/fs_entry.c ****     if (is_dir == DEF_YES) {
1266:rtos/uC-FS/Source/fs_entry.c ****         dir_open  = FSDir_IsOpen(name_full, p_err);
1267:rtos/uC-FS/Source/fs_entry.c ****     }
1268:rtos/uC-FS/Source/fs_entry.c **** #endif
1269:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
1270:rtos/uC-FS/Source/fs_entry.c ****         return;
1271:rtos/uC-FS/Source/fs_entry.c ****     }
1272:rtos/uC-FS/Source/fs_entry.c **** 
1273:rtos/uC-FS/Source/fs_entry.c ****     del_entry_type = entry_type;
1274:rtos/uC-FS/Source/fs_entry.c **** 
1275:rtos/uC-FS/Source/fs_entry.c ****     if (DEF_BIT_IS_SET(del_entry_type, FS_ENTRY_TYPE_ANY)) {
1276:rtos/uC-FS/Source/fs_entry.c ****         if (dir_open  == DEF_YES) {                             /* Clr dir  bit if dir  is open.   
1277:rtos/uC-FS/Source/fs_entry.c ****             DEF_BIT_CLR(del_entry_type, FS_ENTRY_TYPE_DIR);
1278:rtos/uC-FS/Source/fs_entry.c ****         }
1279:rtos/uC-FS/Source/fs_entry.c ****         if (file_open == DEF_YES) {                             /* Clr file bit if file is open.   
1280:rtos/uC-FS/Source/fs_entry.c ****             DEF_BIT_CLR(del_entry_type, FS_ENTRY_TYPE_FILE);
1281:rtos/uC-FS/Source/fs_entry.c ****         }
1282:rtos/uC-FS/Source/fs_entry.c **** 
1283:rtos/uC-FS/Source/fs_entry.c ****     } else {
1284:rtos/uC-FS/Source/fs_entry.c ****         entry_open = dir_open || file_open;
ARM GAS  /tmp/cc8IPqmX.s 			page 24


1285:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
1286:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_ENTRY_OPEN;
1287:rtos/uC-FS/Source/fs_entry.c ****             return;
1288:rtos/uC-FS/Source/fs_entry.c ****         }
1289:rtos/uC-FS/Source/fs_entry.c ****     }
1290:rtos/uC-FS/Source/fs_entry.c **** 
1291:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ---------------------- GET VOL -
1292:rtos/uC-FS/Source/fs_entry.c ****     name_entry = FSEntry_NameParseChk(name_full,
1293:rtos/uC-FS/Source/fs_entry.c ****                                      &p_vol,
1294:rtos/uC-FS/Source/fs_entry.c ****                                       p_err);
1295:rtos/uC-FS/Source/fs_entry.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
1296:rtos/uC-FS/Source/fs_entry.c ****     if (( p_vol      == (FS_VOL   *)0) ||                       /* Rtn err if no vol found ...     
1297:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
1298:rtos/uC-FS/Source/fs_entry.c ****         (*p_err      !=  FS_ERR_NONE)) {                        /*                         ... or i
1299:rtos/uC-FS/Source/fs_entry.c ****         return;
1300:rtos/uC-FS/Source/fs_entry.c ****     }
1301:rtos/uC-FS/Source/fs_entry.c **** 
1302:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Chk vol mode.                   
1303:rtos/uC-FS/Source/fs_entry.c ****     if (DEF_BIT_IS_CLR(p_vol->AccessMode, FS_VOL_ACCESS_MODE_WR)== DEF_YES) {
1304:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1305:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
1306:rtos/uC-FS/Source/fs_entry.c ****         return;
1307:rtos/uC-FS/Source/fs_entry.c ****     }
1308:rtos/uC-FS/Source/fs_entry.c **** 
1309:rtos/uC-FS/Source/fs_entry.c **** 
1310:rtos/uC-FS/Source/fs_entry.c **** 
1311:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* --------------------- DEL ENTRY 
1312:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry[0] == (CPU_CHAR)ASCII_CHAR_NULL) {           /* Rtn err if entry specifies root 
1313:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1314:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
1315:rtos/uC-FS/Source/fs_entry.c ****         return;
1316:rtos/uC-FS/Source/fs_entry.c ****     }
1317:rtos/uC-FS/Source/fs_entry.c **** 
1318:rtos/uC-FS/Source/fs_entry.c ****     FSSys_EntryDel(p_vol,
1319:rtos/uC-FS/Source/fs_entry.c ****                    name_entry,
1320:rtos/uC-FS/Source/fs_entry.c ****                    del_entry_type,
1321:rtos/uC-FS/Source/fs_entry.c ****                    p_err);
1322:rtos/uC-FS/Source/fs_entry.c **** 
1323:rtos/uC-FS/Source/fs_entry.c ****     if (DEF_BIT_IS_SET(entry_type, FS_ENTRY_TYPE_ANY)) {        /* Correct rtn'd err if type is FS_
1324:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err == FS_ERR_ENTRY_NOT_DIR) {
1325:rtos/uC-FS/Source/fs_entry.c ****             *p_err  = FS_ERR_ENTRY_OPEN;
1326:rtos/uC-FS/Source/fs_entry.c ****         }
1327:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err == FS_ERR_ENTRY_NOT_FILE) {
1328:rtos/uC-FS/Source/fs_entry.c ****             *p_err  = FS_ERR_ENTRY_OPEN;
1329:rtos/uC-FS/Source/fs_entry.c ****         }
1330:rtos/uC-FS/Source/fs_entry.c ****     }
1331:rtos/uC-FS/Source/fs_entry.c **** 
1332:rtos/uC-FS/Source/fs_entry.c **** 
1333:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ----------------- RELEASE VOL & 
1334:rtos/uC-FS/Source/fs_entry.c ****     FSVol_ReleaseUnlock(p_vol);
1335:rtos/uC-FS/Source/fs_entry.c **** }
1336:rtos/uC-FS/Source/fs_entry.c **** #endif
1337:rtos/uC-FS/Source/fs_entry.c **** 
1338:rtos/uC-FS/Source/fs_entry.c **** 
1339:rtos/uC-FS/Source/fs_entry.c **** /*
1340:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1341:rtos/uC-FS/Source/fs_entry.c **** *                                       FSEntry_QueryHandler()
ARM GAS  /tmp/cc8IPqmX.s 			page 25


1342:rtos/uC-FS/Source/fs_entry.c **** *
1343:rtos/uC-FS/Source/fs_entry.c **** * Description : Get information about a file or directory.
1344:rtos/uC-FS/Source/fs_entry.c **** *
1345:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
1346:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1347:rtos/uC-FS/Source/fs_entry.c **** *
1348:rtos/uC-FS/Source/fs_entry.c **** *               p_info      Pointer to structure that will receive the entry information.
1349:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1350:rtos/uC-FS/Source/fs_entry.c **** *
1351:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1352:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1353:rtos/uC-FS/Source/fs_entry.c **** *
1354:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE    Entry information gotten successfully.
1355:rtos/uC-FS/Source/fs_entry.c **** *                               See 'FSEntry_Query()'.
1356:rtos/uC-FS/Source/fs_entry.c **** *
1357:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
1358:rtos/uC-FS/Source/fs_entry.c **** *
1359:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : none.
1360:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1361:rtos/uC-FS/Source/fs_entry.c **** */
1362:rtos/uC-FS/Source/fs_entry.c **** 
1363:rtos/uC-FS/Source/fs_entry.c **** static  void  FSEntry_QueryHandler (CPU_CHAR       *name_full,
1364:rtos/uC-FS/Source/fs_entry.c ****                                     FS_ENTRY_INFO  *p_info,
1365:rtos/uC-FS/Source/fs_entry.c ****                                     FS_ERR         *p_err)
1366:rtos/uC-FS/Source/fs_entry.c **** 
1367:rtos/uC-FS/Source/fs_entry.c **** {
1368:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_entry;
1369:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL    *p_vol;
1370:rtos/uC-FS/Source/fs_entry.c **** 
1371:rtos/uC-FS/Source/fs_entry.c **** 
1372:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ---------------------- GET VOL -
1373:rtos/uC-FS/Source/fs_entry.c ****     name_entry = FSEntry_NameParseChk( name_full,
1374:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
1375:rtos/uC-FS/Source/fs_entry.c ****                                        p_err);
1376:rtos/uC-FS/Source/fs_entry.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
1377:rtos/uC-FS/Source/fs_entry.c ****     if (( p_vol      == (FS_VOL   *)0) ||                       /* Rtn err if no vol found ...     
1378:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
1379:rtos/uC-FS/Source/fs_entry.c ****         (*p_err      !=  FS_ERR_NONE)) {                        /*                         ... or i
1380:rtos/uC-FS/Source/fs_entry.c ****         return;
1381:rtos/uC-FS/Source/fs_entry.c ****     }
1382:rtos/uC-FS/Source/fs_entry.c **** 
1383:rtos/uC-FS/Source/fs_entry.c **** 
1384:rtos/uC-FS/Source/fs_entry.c **** 
1385:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------ GET ENTRY INF
1386:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry[0] == (CPU_CHAR)ASCII_CHAR_NULL) {           /* Root dir.                       
1387:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1388:rtos/uC-FS/Source/fs_entry.c ****         p_info->Attrib         = FS_ENTRY_ATTRIB_DIR | FS_ENTRY_ATTRIB_DIR_ROOT;
1389:rtos/uC-FS/Source/fs_entry.c ****         p_info->Size           = 0u;
1390:rtos/uC-FS/Source/fs_entry.c ****         p_info->DateTimeCreate = FS_TIME_TS_INVALID;
1391:rtos/uC-FS/Source/fs_entry.c ****         p_info->DateAccess     = FS_TIME_TS_INVALID;
1392:rtos/uC-FS/Source/fs_entry.c ****         p_info->DateTimeWr     = FS_TIME_TS_INVALID;
1393:rtos/uC-FS/Source/fs_entry.c ****         p_info->BlkCnt         = 0u;
1394:rtos/uC-FS/Source/fs_entry.c ****         p_info->BlkSize        = 0u;
1395:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NONE;
1396:rtos/uC-FS/Source/fs_entry.c ****         return;
1397:rtos/uC-FS/Source/fs_entry.c ****     }
1398:rtos/uC-FS/Source/fs_entry.c **** 
ARM GAS  /tmp/cc8IPqmX.s 			page 26


1399:rtos/uC-FS/Source/fs_entry.c ****     FSSys_EntryQuery(p_vol,
1400:rtos/uC-FS/Source/fs_entry.c ****                      name_entry,
1401:rtos/uC-FS/Source/fs_entry.c ****                      p_info,
1402:rtos/uC-FS/Source/fs_entry.c ****                      p_err);
1403:rtos/uC-FS/Source/fs_entry.c **** 
1404:rtos/uC-FS/Source/fs_entry.c **** 
1405:rtos/uC-FS/Source/fs_entry.c **** 
1406:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ----------------- RELEASE VOL & 
1407:rtos/uC-FS/Source/fs_entry.c ****     FSVol_ReleaseUnlock(p_vol);
1408:rtos/uC-FS/Source/fs_entry.c **** }
1409:rtos/uC-FS/Source/fs_entry.c **** 
1410:rtos/uC-FS/Source/fs_entry.c **** 
1411:rtos/uC-FS/Source/fs_entry.c **** /*
1412:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1413:rtos/uC-FS/Source/fs_entry.c **** *                                       FSEntry_RenameHandler()
1414:rtos/uC-FS/Source/fs_entry.c **** *
1415:rtos/uC-FS/Source/fs_entry.c **** * Description : Rename a file or directory.
1416:rtos/uC-FS/Source/fs_entry.c **** *
1417:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full_old   Old path of the entry.
1418:rtos/uC-FS/Source/fs_entry.c **** *               -------------   Argument validated by caller.
1419:rtos/uC-FS/Source/fs_entry.c **** *
1420:rtos/uC-FS/Source/fs_entry.c **** *               name_full_new   New path of the entry.
1421:rtos/uC-FS/Source/fs_entry.c **** *               -------------   Argument validated by caller.
1422:rtos/uC-FS/Source/fs_entry.c **** *
1423:rtos/uC-FS/Source/fs_entry.c **** *               excl            Indicates whether creation of new entry should be exclusive (see No
1424:rtos/uC-FS/Source/fs_entry.c **** *
1425:rtos/uC-FS/Source/fs_entry.c **** *                                   DEF_YES, if the entry shall be renamed ONLY if 'name_full_new'
1426:rtos/uC-FS/Source/fs_entry.c **** *                                                does not exist.
1427:rtos/uC-FS/Source/fs_entry.c **** *                                   DEF_NO,  if the entry shall be renamed even if 'name_full_new'
1428:rtos/uC-FS/Source/fs_entry.c **** *                                                does exist.
1429:rtos/uC-FS/Source/fs_entry.c **** *
1430:rtos/uC-FS/Source/fs_entry.c **** *               p_err           Pointer to variable that will receive the return error code from th
1431:rtos/uC-FS/Source/fs_entry.c **** *               -----           Argument validated by caller.
1432:rtos/uC-FS/Source/fs_entry.c **** *
1433:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NONE                      Entry renamed successfully.
1434:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_NULL                 Argument 'name_full_old'/'name
1435:rtos/uC-FS/Source/fs_entry.c **** *                                                                        passed a NULL pointer.
1436:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRIES_VOLS_DIFF         Paths specify file system entr
1437:rtos/uC-FS/Source/fs_entry.c **** *                                                                        on different vols (see Not
1438:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_ROOT_DIR            File system entry is a root di
1439:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_INVALID_OP            Invalid operation on volume.
1440:rtos/uC-FS/Source/fs_entry.c **** *
1441:rtos/uC-FS/Source/fs_entry.c **** *                                                                   -------- RETURNED BY FSFile_IsO
1442:rtos/uC-FS/Source/fs_entry.c **** *                                                                   ------------- AND BY FSDir_IsOp
1443:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NONE                     File/Dir opened successfully.
1444:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NULL_PTR                 Argument 'name_full' passed a N
1445:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_BUF_NONE_AVAIL           No buffer available.
1446:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_NOT_FILE           Entry not a file or dir.
1447:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_INVALID             Invalid name or path.
1448:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_INVALID_SEC_NBR      Invalid sector number found in 
1449:rtos/uC-FS/Source/fs_entry.c **** *
1450:rtos/uC-FS/Source/fs_entry.c **** *                                                                    --- RETURNED BY FSEntry_NamePa
1451:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_INVALID              Entry name specified invalid O
1452:rtos/uC-FS/Source/fs_entry.c **** *                                                                        volume could not be found.
1453:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_PATH_TOO_LONG        Entry name specified too long.
1454:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_NOT_OPEN              Volume was not open.
1455:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_VOL_NOT_MOUNTED           Volume was not mounted.
ARM GAS  /tmp/cc8IPqmX.s 			page 27


1456:rtos/uC-FS/Source/fs_entry.c **** *
1457:rtos/uC-FS/Source/fs_entry.c **** *                                                                    ------ RETURNED BY FSSys_Entry
1458:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_BUF_NONE_AVAIL            Buffer not available.
1459:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_DEV                       Device access error.
1460:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRIES_TYPE_DIFF         Paths do not both specify file
1461:rtos/uC-FS/Source/fs_entry.c **** *                                                                        OR directories (see Notes 
1462:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_EXISTS              File system entry exists.
1463:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_NOT_EMPTY           File system entry NOT empty.
1464:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_NOT_FOUND           File system entry NOT found
1465:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
1466:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
1467:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_ENTRY_RD_ONLY             File system entry marked read-
1468:rtos/uC-FS/Source/fs_entry.c **** *                                   FS_ERR_NAME_INVALID              Invalid file name or path.
1469:rtos/uC-FS/Source/fs_entry.c **** *
1470:rtos/uC-FS/Source/fs_entry.c **** *
1471:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
1472:rtos/uC-FS/Source/fs_entry.c **** *
1473:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : none.
1474:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1475:rtos/uC-FS/Source/fs_entry.c **** */
1476:rtos/uC-FS/Source/fs_entry.c **** 
1477:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1478:rtos/uC-FS/Source/fs_entry.c **** static  void  FSEntry_RenameHandler (CPU_CHAR     *name_full_old,
1479:rtos/uC-FS/Source/fs_entry.c ****                                      CPU_CHAR     *name_full_new,
1480:rtos/uC-FS/Source/fs_entry.c ****                                      CPU_BOOLEAN   excl,
1481:rtos/uC-FS/Source/fs_entry.c ****                                      FS_ERR       *p_err)
1482:rtos/uC-FS/Source/fs_entry.c **** {
1483:rtos/uC-FS/Source/fs_entry.c ****     CPU_INT16S   cmp_val;
1484:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  dflt;
1485:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  diff;
1486:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  dir_open;
1487:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  file_open;
1488:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  entry_open;
1489:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS     mode;
1490:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T   name_entry_len;
1491:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T   file_name_len;
1492:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     name_vol_old[FS_CFG_MAX_VOL_NAME_LEN + 1u];
1493:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     name_vol_new[FS_CFG_MAX_VOL_NAME_LEN + 1u];
1494:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *name_entry_old;
1495:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *name_entry_new;
1496:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *file_name;
1497:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL      *p_vol;
1498:rtos/uC-FS/Source/fs_entry.c **** 
1499:rtos/uC-FS/Source/fs_entry.c **** 
1500:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* --------------- VERIFY IF ENTRY 
1501:rtos/uC-FS/Source/fs_entry.c ****     dir_open  = DEF_NO;
1502:rtos/uC-FS/Source/fs_entry.c ****     file_open = DEF_NO;
1503:rtos/uC-FS/Source/fs_entry.c **** 
1504:rtos/uC-FS/Source/fs_entry.c ****     file_open = FSFile_IsOpen(name_full_old, &mode, p_err);
1505:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
1506:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
1507:rtos/uC-FS/Source/fs_entry.c ****         return;
1508:rtos/uC-FS/Source/fs_entry.c ****     }
1509:rtos/uC-FS/Source/fs_entry.c **** 
1510:rtos/uC-FS/Source/fs_entry.c **** #ifdef   FS_DIR_MODULE_PRESENT
1511:rtos/uC-FS/Source/fs_entry.c ****     dir_open  = FSDir_IsOpen(name_full_old, p_err);
1512:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
ARM GAS  /tmp/cc8IPqmX.s 			page 28


1513:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
1514:rtos/uC-FS/Source/fs_entry.c ****         return;
1515:rtos/uC-FS/Source/fs_entry.c ****     }
1516:rtos/uC-FS/Source/fs_entry.c **** #endif
1517:rtos/uC-FS/Source/fs_entry.c **** 
1518:rtos/uC-FS/Source/fs_entry.c ****     entry_open = dir_open || file_open;
1519:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
1520:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_OPEN;
1521:rtos/uC-FS/Source/fs_entry.c ****         return;
1522:rtos/uC-FS/Source/fs_entry.c ****     }
1523:rtos/uC-FS/Source/fs_entry.c **** 
1524:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ----------- VERIFY IF DEST ENTRY
1525:rtos/uC-FS/Source/fs_entry.c ****     if (excl == DEF_NO) {
1526:rtos/uC-FS/Source/fs_entry.c ****         dir_open  = DEF_NO;
1527:rtos/uC-FS/Source/fs_entry.c ****         file_open = DEF_NO;
1528:rtos/uC-FS/Source/fs_entry.c **** 
1529:rtos/uC-FS/Source/fs_entry.c ****         file_open = FSFile_IsOpen(name_full_new, &mode, p_err);
1530:rtos/uC-FS/Source/fs_entry.c ****         switch (*p_err) {
1531:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_NONE:
1532:rtos/uC-FS/Source/fs_entry.c ****                  break;
1533:rtos/uC-FS/Source/fs_entry.c **** 
1534:rtos/uC-FS/Source/fs_entry.c **** 
1535:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_ENTRY_NOT_FILE:
1536:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_ENTRY_NOT_FOUND:
1537:rtos/uC-FS/Source/fs_entry.c ****                 *p_err = FS_ERR_NONE;
1538:rtos/uC-FS/Source/fs_entry.c ****                  break;
1539:rtos/uC-FS/Source/fs_entry.c **** 
1540:rtos/uC-FS/Source/fs_entry.c **** 
1541:rtos/uC-FS/Source/fs_entry.c ****             default:
1542:rtos/uC-FS/Source/fs_entry.c ****                  return;
1543:rtos/uC-FS/Source/fs_entry.c ****         }
1544:rtos/uC-FS/Source/fs_entry.c **** 
1545:rtos/uC-FS/Source/fs_entry.c **** #ifdef   FS_DIR_MODULE_PRESENT
1546:rtos/uC-FS/Source/fs_entry.c ****         dir_open  = FSDir_IsOpen(name_full_new, p_err);
1547:rtos/uC-FS/Source/fs_entry.c ****         switch (*p_err) {
1548:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_NONE:
1549:rtos/uC-FS/Source/fs_entry.c ****                  break;
1550:rtos/uC-FS/Source/fs_entry.c **** 
1551:rtos/uC-FS/Source/fs_entry.c **** 
1552:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_ENTRY_NOT_DIR:
1553:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_ENTRY_NOT_FOUND:
1554:rtos/uC-FS/Source/fs_entry.c ****                 *p_err = FS_ERR_NONE;
1555:rtos/uC-FS/Source/fs_entry.c ****                  break;
1556:rtos/uC-FS/Source/fs_entry.c **** 
1557:rtos/uC-FS/Source/fs_entry.c **** 
1558:rtos/uC-FS/Source/fs_entry.c ****             default:
1559:rtos/uC-FS/Source/fs_entry.c ****                  return;
1560:rtos/uC-FS/Source/fs_entry.c ****         }
1561:rtos/uC-FS/Source/fs_entry.c **** #endif
1562:rtos/uC-FS/Source/fs_entry.c **** 
1563:rtos/uC-FS/Source/fs_entry.c ****         entry_open = dir_open || file_open;
1564:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
1565:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_ENTRY_OPEN;
1566:rtos/uC-FS/Source/fs_entry.c ****             return;
1567:rtos/uC-FS/Source/fs_entry.c ****         }
1568:rtos/uC-FS/Source/fs_entry.c **** 
1569:rtos/uC-FS/Source/fs_entry.c ****     }
ARM GAS  /tmp/cc8IPqmX.s 			page 29


1570:rtos/uC-FS/Source/fs_entry.c **** 
1571:rtos/uC-FS/Source/fs_entry.c **** 
1572:rtos/uC-FS/Source/fs_entry.c **** 
1573:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------- GET DEST VOL
1574:rtos/uC-FS/Source/fs_entry.c ****     name_entry_new = FS_PathParse(name_full_new,
1575:rtos/uC-FS/Source/fs_entry.c ****                                   name_vol_new,
1576:rtos/uC-FS/Source/fs_entry.c ****                                   p_err);
1577:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
1578:rtos/uC-FS/Source/fs_entry.c ****         return;
1579:rtos/uC-FS/Source/fs_entry.c ****     }
1580:rtos/uC-FS/Source/fs_entry.c **** 
1581:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry_new == (CPU_CHAR *)0) {                      /* Rtn err if name illegal.        
1582:rtos/uC-FS/Source/fs_entry.c ****        *p_err =  FS_ERR_NAME_INVALID;
1583:rtos/uC-FS/Source/fs_entry.c ****         return;
1584:rtos/uC-FS/Source/fs_entry.c ****     }
1585:rtos/uC-FS/Source/fs_entry.c **** 
1586:rtos/uC-FS/Source/fs_entry.c ****     if (*name_entry_new != FS_CHAR_PATH_SEP) {                  /* Require init path sep char.     
1587:rtos/uC-FS/Source/fs_entry.c ****         *p_err = FS_ERR_NAME_INVALID;
1588:rtos/uC-FS/Source/fs_entry.c ****          return;
1589:rtos/uC-FS/Source/fs_entry.c ****     }
1590:rtos/uC-FS/Source/fs_entry.c ****     name_entry_new++;                                           /* Ignore  init path sep char.     
1591:rtos/uC-FS/Source/fs_entry.c **** 
1592:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry_new[0] == (CPU_CHAR)ASCII_CHAR_NULL) {       /* Rtn err if entry specifies root 
1593:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
1594:rtos/uC-FS/Source/fs_entry.c ****         return;
1595:rtos/uC-FS/Source/fs_entry.c ****     }
1596:rtos/uC-FS/Source/fs_entry.c **** 
1597:rtos/uC-FS/Source/fs_entry.c ****     name_entry_len = Str_Len_N(name_entry_new, FS_CFG_MAX_PATH_NAME_LEN + 1u);
1598:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry_len > FS_CFG_MAX_PATH_NAME_LEN) {            /* Rtn err if file name is too long
1599:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_PATH_TOO_LONG;
1600:rtos/uC-FS/Source/fs_entry.c ****         return;
1601:rtos/uC-FS/Source/fs_entry.c ****     }
1602:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Parse name to evaluate length of
1603:rtos/uC-FS/Source/fs_entry.c ****     file_name     = Str_Char_Last_N(name_entry_new, FS_CFG_MAX_PATH_NAME_LEN,      (CPU_CHAR)ASCII_
1604:rtos/uC-FS/Source/fs_entry.c ****     file_name_len = Str_Len_N(      file_name,  FS_CFG_MAX_FILE_NAME_LEN + 1u);
1605:rtos/uC-FS/Source/fs_entry.c ****     if (file_name_len == 0u) {
1606:rtos/uC-FS/Source/fs_entry.c ****         file_name_len = name_entry_len;
1607:rtos/uC-FS/Source/fs_entry.c ****     }
1608:rtos/uC-FS/Source/fs_entry.c **** 
1609:rtos/uC-FS/Source/fs_entry.c ****     if (file_name_len > FS_CFG_MAX_FILE_NAME_LEN) {
1610:rtos/uC-FS/Source/fs_entry.c ****         *p_err = FS_ERR_NAME_BASE_TOO_LONG;                     /* Rtn err if base name is too long
1611:rtos/uC-FS/Source/fs_entry.c ****         return;
1612:rtos/uC-FS/Source/fs_entry.c ****     }
1613:rtos/uC-FS/Source/fs_entry.c **** 
1614:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* -------------------- GET SRC VOL
1615:rtos/uC-FS/Source/fs_entry.c ****     name_entry_old = FSEntry_NameParseChkEx( name_full_old,
1616:rtos/uC-FS/Source/fs_entry.c ****                                              name_vol_old,
1617:rtos/uC-FS/Source/fs_entry.c ****                                             &dflt,
1618:rtos/uC-FS/Source/fs_entry.c ****                                             &p_vol,
1619:rtos/uC-FS/Source/fs_entry.c ****                                              p_err);
1620:rtos/uC-FS/Source/fs_entry.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
1621:rtos/uC-FS/Source/fs_entry.c ****     if (( p_vol          == (FS_VOL   *)0) ||                   /* Rtn err if no vol found ...     
1622:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry_old == (CPU_CHAR *)0) ||                   /*                         ... or i
1623:rtos/uC-FS/Source/fs_entry.c ****         (*p_err         !=  FS_ERR_NONE)) {                     /*                         ... or i
1624:rtos/uC-FS/Source/fs_entry.c ****         return;
1625:rtos/uC-FS/Source/fs_entry.c ****     }
1626:rtos/uC-FS/Source/fs_entry.c **** 
ARM GAS  /tmp/cc8IPqmX.s 			page 30


1627:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry_old[0] == (CPU_CHAR)ASCII_CHAR_NULL) {       /* Rtn err if entry specifies root 
1628:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1629:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
1630:rtos/uC-FS/Source/fs_entry.c ****         return;
1631:rtos/uC-FS/Source/fs_entry.c ****     }
1632:rtos/uC-FS/Source/fs_entry.c **** 
1633:rtos/uC-FS/Source/fs_entry.c **** 
1634:rtos/uC-FS/Source/fs_entry.c **** 
1635:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ----------------- HANDLE DIFF VO
1636:rtos/uC-FS/Source/fs_entry.c ****     diff = DEF_NO;
1637:rtos/uC-FS/Source/fs_entry.c ****     if (name_vol_new[0] == (CPU_CHAR)ASCII_CHAR_NULL) {         /* Vols diff if new is dflt ...    
1638:rtos/uC-FS/Source/fs_entry.c ****         if (dflt == DEF_NO) {                                   /*                          ... but
1639:rtos/uC-FS/Source/fs_entry.c ****             diff = DEF_YES;
1640:rtos/uC-FS/Source/fs_entry.c ****         }
1641:rtos/uC-FS/Source/fs_entry.c ****     } else {
1642:rtos/uC-FS/Source/fs_entry.c ****         cmp_val = Str_Cmp_N(name_vol_old, name_vol_new, FS_CFG_MAX_VOL_NAME_LEN);
1643:rtos/uC-FS/Source/fs_entry.c ****         if (cmp_val != 0) {                                     /* Old & new vol names are diff.   
1644:rtos/uC-FS/Source/fs_entry.c ****             diff = DEF_YES;
1645:rtos/uC-FS/Source/fs_entry.c ****         }
1646:rtos/uC-FS/Source/fs_entry.c ****     }
1647:rtos/uC-FS/Source/fs_entry.c **** 
1648:rtos/uC-FS/Source/fs_entry.c ****     if (diff == DEF_YES) {                                      /* Vols are diff ...               
1649:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1650:rtos/uC-FS/Source/fs_entry.c **** 
1651:rtos/uC-FS/Source/fs_entry.c ****         FSEntry_Copy(name_full_old,                             /*               ... copy file ... 
1652:rtos/uC-FS/Source/fs_entry.c ****                      name_full_new,
1653:rtos/uC-FS/Source/fs_entry.c ****                      excl,
1654:rtos/uC-FS/Source/fs_entry.c ****                      p_err);
1655:rtos/uC-FS/Source/fs_entry.c **** 
1656:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err != FS_ERR_NONE) {
1657:rtos/uC-FS/Source/fs_entry.c ****             if (*p_err == FS_ERR_ENTRY_NOT_FILE) {
1658:rtos/uC-FS/Source/fs_entry.c ****                 *p_err =  FS_ERR_ENTRIES_VOLS_DIFF;
1659:rtos/uC-FS/Source/fs_entry.c ****             }
1660:rtos/uC-FS/Source/fs_entry.c ****             return;
1661:rtos/uC-FS/Source/fs_entry.c ****         }
1662:rtos/uC-FS/Source/fs_entry.c **** 
1663:rtos/uC-FS/Source/fs_entry.c ****         FSEntry_Del(name_full_old,                              /*                             ... 
1664:rtos/uC-FS/Source/fs_entry.c ****                     FS_ENTRY_TYPE_FILE,
1665:rtos/uC-FS/Source/fs_entry.c ****                     p_err);
1666:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err != FS_ERR_NONE) {
1667:rtos/uC-FS/Source/fs_entry.c ****             return;
1668:rtos/uC-FS/Source/fs_entry.c ****         }
1669:rtos/uC-FS/Source/fs_entry.c **** 
1670:rtos/uC-FS/Source/fs_entry.c **** 
1671:rtos/uC-FS/Source/fs_entry.c **** 
1672:rtos/uC-FS/Source/fs_entry.c ****     } else {                                                    /* ------------------ HANDLE SAME V
1673:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Chk vol mode ...                
1674:rtos/uC-FS/Source/fs_entry.c ****         if (DEF_BIT_IS_CLR(p_vol->AccessMode, FS_VOL_ACCESS_MODE_WR)== DEF_YES) {
1675:rtos/uC-FS/Source/fs_entry.c ****             FSVol_ReleaseUnlock(p_vol);
1676:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_VOL_INVALID_OP;
1677:rtos/uC-FS/Source/fs_entry.c ****             return;
1678:rtos/uC-FS/Source/fs_entry.c ****         }
1679:rtos/uC-FS/Source/fs_entry.c **** 
1680:rtos/uC-FS/Source/fs_entry.c ****         FSSys_EntryRename(p_vol,                                /*              ... rename file.   
1681:rtos/uC-FS/Source/fs_entry.c ****                           name_entry_old,
1682:rtos/uC-FS/Source/fs_entry.c ****                           name_entry_new,
1683:rtos/uC-FS/Source/fs_entry.c ****                           excl,
ARM GAS  /tmp/cc8IPqmX.s 			page 31


1684:rtos/uC-FS/Source/fs_entry.c ****                           p_err);
1685:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err == FS_ERR_ENTRIES_SAME) {
1686:rtos/uC-FS/Source/fs_entry.c ****             *p_err =  FS_ERR_NONE;
1687:rtos/uC-FS/Source/fs_entry.c ****         }
1688:rtos/uC-FS/Source/fs_entry.c **** 
1689:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1690:rtos/uC-FS/Source/fs_entry.c ****     }
1691:rtos/uC-FS/Source/fs_entry.c **** }
1692:rtos/uC-FS/Source/fs_entry.c **** #endif
1693:rtos/uC-FS/Source/fs_entry.c **** 
1694:rtos/uC-FS/Source/fs_entry.c **** 
1695:rtos/uC-FS/Source/fs_entry.c **** /*
1696:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1697:rtos/uC-FS/Source/fs_entry.c **** *                                      FSEntry_TimeSetHandler()
1698:rtos/uC-FS/Source/fs_entry.c **** *
1699:rtos/uC-FS/Source/fs_entry.c **** * Description : Set a file or directory's date/time.
1700:rtos/uC-FS/Source/fs_entry.c **** *
1701:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
1702:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1703:rtos/uC-FS/Source/fs_entry.c **** *
1704:rtos/uC-FS/Source/fs_entry.c **** *               p_time      Pointer to date/time.
1705:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1706:rtos/uC-FS/Source/fs_entry.c **** *
1707:rtos/uC-FS/Source/fs_entry.c **** *               time_type   Flag to indicate which Date/Time should be set
1708:rtos/uC-FS/Source/fs_entry.c **** *
1709:rtos/uC-FS/Source/fs_entry.c **** *                               FS_DATE_TIME_CREATE
1710:rtos/uC-FS/Source/fs_entry.c **** *                               FS_DATE_TIME_MODIFY
1711:rtos/uC-FS/Source/fs_entry.c **** *                               FS_DATE_TIME_ACCESS
1712:rtos/uC-FS/Source/fs_entry.c **** *                               FS_DATE_TIME_ALL
1713:rtos/uC-FS/Source/fs_entry.c **** *
1714:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1715:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1716:rtos/uC-FS/Source/fs_entry.c **** *
1717:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NONE    Entry date/time set successfully.
1718:rtos/uC-FS/Source/fs_entry.c **** *                               See 'FSEntry_TimeSet()'.
1719:rtos/uC-FS/Source/fs_entry.c **** *
1720:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : none.
1721:rtos/uC-FS/Source/fs_entry.c **** *
1722:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : none.
1723:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1724:rtos/uC-FS/Source/fs_entry.c **** */
1725:rtos/uC-FS/Source/fs_entry.c **** 
1726:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1727:rtos/uC-FS/Source/fs_entry.c **** static  void  FSEntry_TimeSetHandler (CPU_CHAR      *name_full,
1728:rtos/uC-FS/Source/fs_entry.c ****                                       CLK_DATE_TIME *p_time,
1729:rtos/uC-FS/Source/fs_entry.c ****                                       CPU_INT08U     time_type,
1730:rtos/uC-FS/Source/fs_entry.c ****                                       FS_ERR        *p_err)
1731:rtos/uC-FS/Source/fs_entry.c **** {
1732:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_entry;
1733:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL    *p_vol;
1734:rtos/uC-FS/Source/fs_entry.c **** 
1735:rtos/uC-FS/Source/fs_entry.c **** 
1736:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ---------------------- GET VOL -
1737:rtos/uC-FS/Source/fs_entry.c ****     name_entry = FSEntry_NameParseChk( name_full,
1738:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
1739:rtos/uC-FS/Source/fs_entry.c ****                                        p_err);
1740:rtos/uC-FS/Source/fs_entry.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
ARM GAS  /tmp/cc8IPqmX.s 			page 32


1741:rtos/uC-FS/Source/fs_entry.c ****     if ((p_vol      == (FS_VOL   *)0) ||                        /* Rtn err if no vol found ...     
1742:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
1743:rtos/uC-FS/Source/fs_entry.c ****         return;
1744:rtos/uC-FS/Source/fs_entry.c ****     }
1745:rtos/uC-FS/Source/fs_entry.c **** 
1746:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Chk vol mode.                   
1747:rtos/uC-FS/Source/fs_entry.c ****     if (DEF_BIT_IS_CLR(p_vol->AccessMode, FS_VOL_ACCESS_MODE_WR)== DEF_YES) {
1748:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1749:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
1750:rtos/uC-FS/Source/fs_entry.c ****         return;
1751:rtos/uC-FS/Source/fs_entry.c ****     }
1752:rtos/uC-FS/Source/fs_entry.c **** 
1753:rtos/uC-FS/Source/fs_entry.c **** 
1754:rtos/uC-FS/Source/fs_entry.c **** 
1755:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ------------------- SET DATE/TIM
1756:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry[0] == (CPU_CHAR)ASCII_CHAR_NULL) {           /* Rtn err if entry specifies root 
1757:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
1758:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
1759:rtos/uC-FS/Source/fs_entry.c ****         return;
1760:rtos/uC-FS/Source/fs_entry.c ****     }
1761:rtos/uC-FS/Source/fs_entry.c **** 
1762:rtos/uC-FS/Source/fs_entry.c ****     FSSys_EntryTimeSet(p_vol,
1763:rtos/uC-FS/Source/fs_entry.c ****                        name_entry,
1764:rtos/uC-FS/Source/fs_entry.c ****                        p_time,
1765:rtos/uC-FS/Source/fs_entry.c ****                        time_type,
1766:rtos/uC-FS/Source/fs_entry.c ****                        p_err);
1767:rtos/uC-FS/Source/fs_entry.c **** 
1768:rtos/uC-FS/Source/fs_entry.c **** 
1769:rtos/uC-FS/Source/fs_entry.c **** 
1770:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* ----------------- RELEASE VOL & 
1771:rtos/uC-FS/Source/fs_entry.c ****     FSVol_ReleaseUnlock(p_vol);
1772:rtos/uC-FS/Source/fs_entry.c **** }
1773:rtos/uC-FS/Source/fs_entry.c **** #endif
1774:rtos/uC-FS/Source/fs_entry.c **** 
1775:rtos/uC-FS/Source/fs_entry.c **** 
1776:rtos/uC-FS/Source/fs_entry.c **** /*
1777:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1778:rtos/uC-FS/Source/fs_entry.c **** *                                       FSEntry_NameParseChk()
1779:rtos/uC-FS/Source/fs_entry.c **** *
1780:rtos/uC-FS/Source/fs_entry.c **** * Description : Parse full entry name & get volume pointer & pointer to entry name.
1781:rtos/uC-FS/Source/fs_entry.c **** *
1782:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
1783:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1784:rtos/uC-FS/Source/fs_entry.c **** *
1785:rtos/uC-FS/Source/fs_entry.c **** *               pp_vol      Pointer to volume pointer which will hold pointer to volume.
1786:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1787:rtos/uC-FS/Source/fs_entry.c **** *
1788:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1789:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1790:rtos/uC-FS/Source/fs_entry.c **** *
1791:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID          Entry name could not be parsed, lacks 
1792:rtos/uC-FS/Source/fs_entry.c **** *                                                                initial path separator character o
1793:rtos/uC-FS/Source/fs_entry.c **** *                                                                includes an invalid volume name.
1794:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_PATH_TOO_LONG    Entry name is too long.
1795:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_OPEN          Volume not opened.
1796:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_MOUNTED       Volume not mounted.
1797:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_OS_LOCK               OS Lock NOT acquired.
ARM GAS  /tmp/cc8IPqmX.s 			page 33


1798:rtos/uC-FS/Source/fs_entry.c **** *
1799:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : Pointer to start of entry name.
1800:rtos/uC-FS/Source/fs_entry.c **** *
1801:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : (1) If the volume name could not be parsed, the volume does not exist or no entry n
1802:rtos/uC-FS/Source/fs_entry.c **** *                   is specified, then NULL pointers are returned for BOTH the entry name & the vol
1803:rtos/uC-FS/Source/fs_entry.c **** *                   Otherwise, both the entry name & volume should be valid pointers.
1804:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1805:rtos/uC-FS/Source/fs_entry.c **** */
1806:rtos/uC-FS/Source/fs_entry.c **** 
1807:rtos/uC-FS/Source/fs_entry.c **** static  CPU_CHAR  *FSEntry_NameParseChk (CPU_CHAR   *name_full,
1808:rtos/uC-FS/Source/fs_entry.c ****                                          FS_VOL    **pp_vol,
1809:rtos/uC-FS/Source/fs_entry.c ****                                          FS_ERR     *p_err)
1810:rtos/uC-FS/Source/fs_entry.c **** {
  29              		.loc 1 1810 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 1810 1 is_stmt 0 view .LVU1
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 85B0     		sub	sp, sp, #20
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 40
  45 0004 0F46     		mov	r7, r1
  46 0006 1646     		mov	r6, r2
1811:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T   name_entry_len;
  47              		.loc 1 1811 5 is_stmt 1 view .LVU2
1812:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T   file_name_len;
  48              		.loc 1 1812 5 view .LVU3
1813:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *name_entry;
  49              		.loc 1 1813 5 view .LVU4
1814:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL      *p_vol_temp;
  50              		.loc 1 1814 5 view .LVU5
1815:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *file_name;
  51              		.loc 1 1815 5 view .LVU6
1816:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     name_vol_temp[FS_CFG_MAX_VOL_NAME_LEN + 1u];
  52              		.loc 1 1816 5 view .LVU7
1817:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  vol_lock_ok;
  53              		.loc 1 1817 5 view .LVU8
1818:rtos/uC-FS/Source/fs_entry.c **** 
1819:rtos/uC-FS/Source/fs_entry.c **** 
1820:rtos/uC-FS/Source/fs_entry.c ****    *pp_vol     = (FS_VOL *)0;
  54              		.loc 1 1820 4 view .LVU9
  55              		.loc 1 1820 16 is_stmt 0 view .LVU10
  56 0008 0023     		movs	r3, #0
  57 000a 0B60     		str	r3, [r1]
1821:rtos/uC-FS/Source/fs_entry.c ****     name_entry =  FS_PathParse(name_full,
  58              		.loc 1 1821 5 is_stmt 1 view .LVU11
  59              		.loc 1 1821 19 is_stmt 0 view .LVU12
  60 000c 01A9     		add	r1, sp, #4
  61              	.LVL1:
ARM GAS  /tmp/cc8IPqmX.s 			page 34


  62              		.loc 1 1821 19 view .LVU13
  63 000e FFF7FEFF 		bl	FS_PathParse
  64              	.LVL2:
1822:rtos/uC-FS/Source/fs_entry.c ****                                name_vol_temp,
1823:rtos/uC-FS/Source/fs_entry.c ****                                p_err);
1824:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
  65              		.loc 1 1824 5 is_stmt 1 view .LVU14
  66              		.loc 1 1824 9 is_stmt 0 view .LVU15
  67 0012 3388     		ldrh	r3, [r6]
  68              		.loc 1 1824 8 view .LVU16
  69 0014 002B     		cmp	r3, #0
  70 0016 6BD1     		bne	.L16
  71 0018 0446     		mov	r4, r0
1825:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
1826:rtos/uC-FS/Source/fs_entry.c ****     }
1827:rtos/uC-FS/Source/fs_entry.c **** 
1828:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry == (CPU_CHAR *)0) {                          /* If name could not be parsed ... 
  72              		.loc 1 1828 5 is_stmt 1 view .LVU17
  73              		.loc 1 1828 8 is_stmt 0 view .LVU18
  74 001a A8B3     		cbz	r0, .L19
1829:rtos/uC-FS/Source/fs_entry.c ****        *p_err =  FS_ERR_NAME_INVALID;
1830:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);                                 /* ... rtn NULL vol & file name.   
1831:rtos/uC-FS/Source/fs_entry.c ****     }
1832:rtos/uC-FS/Source/fs_entry.c **** 
1833:rtos/uC-FS/Source/fs_entry.c ****     if (*name_entry != FS_CHAR_PATH_SEP) {                      /* Require init path sep char.     
  75              		.loc 1 1833 5 is_stmt 1 view .LVU19
  76              		.loc 1 1833 9 is_stmt 0 view .LVU20
  77 001c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  78              		.loc 1 1833 8 view .LVU21
  79 001e 5C2B     		cmp	r3, #92
  80 0020 36D1     		bne	.L20
1834:rtos/uC-FS/Source/fs_entry.c ****         *p_err =  FS_ERR_NAME_INVALID;
1835:rtos/uC-FS/Source/fs_entry.c ****          return ((CPU_CHAR *)0);
1836:rtos/uC-FS/Source/fs_entry.c ****     }
1837:rtos/uC-FS/Source/fs_entry.c ****     name_entry++;                                               /* Ignore  init path sep char.     
  81              		.loc 1 1837 5 is_stmt 1 view .LVU22
  82              		.loc 1 1837 15 is_stmt 0 view .LVU23
  83 0022 0134     		adds	r4, r4, #1
  84              	.LVL3:
1838:rtos/uC-FS/Source/fs_entry.c **** 
1839:rtos/uC-FS/Source/fs_entry.c ****     name_entry_len = Str_Len_N(name_entry, FS_CFG_MAX_PATH_NAME_LEN + 1u);
  85              		.loc 1 1839 5 is_stmt 1 view .LVU24
  86              		.loc 1 1839 22 is_stmt 0 view .LVU25
  87 0024 40F20511 		movw	r1, #261
  88 0028 2046     		mov	r0, r4
  89 002a FFF7FEFF 		bl	Str_Len_N
  90              	.LVL4:
  91 002e 0546     		mov	r5, r0
  92              	.LVL5:
1840:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry_len > FS_CFG_MAX_PATH_NAME_LEN) {            /* Rtn err if file name is too long
  93              		.loc 1 1840 5 is_stmt 1 view .LVU26
  94              		.loc 1 1840 8 is_stmt 0 view .LVU27
  95 0030 B0F5827F 		cmp	r0, #260
  96 0034 33D8     		bhi	.L21
1841:rtos/uC-FS/Source/fs_entry.c ****        *p_err =  FS_ERR_NAME_PATH_TOO_LONG;
1842:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
1843:rtos/uC-FS/Source/fs_entry.c ****     }
ARM GAS  /tmp/cc8IPqmX.s 			page 35


1844:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Parse name to evaluate length of
1845:rtos/uC-FS/Source/fs_entry.c ****     file_name     = Str_Char_Last_N(name_entry, FS_CFG_MAX_PATH_NAME_LEN,      (CPU_CHAR)ASCII_CHAR
  97              		.loc 1 1845 5 is_stmt 1 view .LVU28
  98              		.loc 1 1845 21 is_stmt 0 view .LVU29
  99 0036 5C22     		movs	r2, #92
 100 0038 4FF48271 		mov	r1, #260
 101 003c 2046     		mov	r0, r4
 102              	.LVL6:
 103              		.loc 1 1845 21 view .LVU30
 104 003e FFF7FEFF 		bl	Str_Char_Last_N
 105              	.LVL7:
1846:rtos/uC-FS/Source/fs_entry.c ****     file_name_len = Str_Len_N(      file_name,  FS_CFG_MAX_FILE_NAME_LEN + 1u);
 106              		.loc 1 1846 5 is_stmt 1 view .LVU31
 107              		.loc 1 1846 21 is_stmt 0 view .LVU32
 108 0042 4FF48071 		mov	r1, #256
 109 0046 FFF7FEFF 		bl	Str_Len_N
 110              	.LVL8:
1847:rtos/uC-FS/Source/fs_entry.c ****     if (file_name_len == 0u) {
 111              		.loc 1 1847 5 is_stmt 1 view .LVU33
 112              		.loc 1 1847 8 is_stmt 0 view .LVU34
 113 004a 00B1     		cbz	r0, .L6
1846:rtos/uC-FS/Source/fs_entry.c ****     file_name_len = Str_Len_N(      file_name,  FS_CFG_MAX_FILE_NAME_LEN + 1u);
 114              		.loc 1 1846 21 view .LVU35
 115 004c 0546     		mov	r5, r0
 116              	.LVL9:
 117              	.L6:
1848:rtos/uC-FS/Source/fs_entry.c ****         file_name_len = name_entry_len;
1849:rtos/uC-FS/Source/fs_entry.c ****     }
1850:rtos/uC-FS/Source/fs_entry.c **** 
1851:rtos/uC-FS/Source/fs_entry.c ****     if (file_name_len > FS_CFG_MAX_FILE_NAME_LEN) {
 118              		.loc 1 1851 5 is_stmt 1 view .LVU36
 119              		.loc 1 1851 8 is_stmt 0 view .LVU37
 120 004e FF2D     		cmp	r5, #255
 121 0050 2AD8     		bhi	.L22
1852:rtos/uC-FS/Source/fs_entry.c ****         *p_err = FS_ERR_NAME_BASE_TOO_LONG;                     /* Rtn err if base name is too long
1853:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
1854:rtos/uC-FS/Source/fs_entry.c ****     }
1855:rtos/uC-FS/Source/fs_entry.c **** 
1856:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Acquire ref to vol.             
1857:rtos/uC-FS/Source/fs_entry.c ****     p_vol_temp = (name_vol_temp[0] == (CPU_CHAR)ASCII_CHAR_NULL) ? FSVol_AcquireDflt()
 122              		.loc 1 1857 5 is_stmt 1 view .LVU38
 123              		.loc 1 1857 32 is_stmt 0 view .LVU39
 124 0052 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1858:rtos/uC-FS/Source/fs_entry.c ****                                                                  : FSVol_Acquire(name_vol_temp, p_e
 125              		.loc 1 1858 66 view .LVU40
 126 0056 63BB     		cbnz	r3, .L8
1857:rtos/uC-FS/Source/fs_entry.c ****                                                                  : FSVol_Acquire(name_vol_temp, p_e
 127              		.loc 1 1857 68 view .LVU41
 128 0058 FFF7FEFF 		bl	FSVol_AcquireDflt
 129              	.LVL10:
 130 005c 0546     		mov	r5, r0
 131              	.LVL11:
 132              	.L9:
1859:rtos/uC-FS/Source/fs_entry.c **** 
1860:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
 133              		.loc 1 1860 5 is_stmt 1 discriminator 1 view .LVU42
 134              		.loc 1 1860 9 is_stmt 0 discriminator 1 view .LVU43
ARM GAS  /tmp/cc8IPqmX.s 			page 36


 135 005e 3388     		ldrh	r3, [r6]
 136              		.loc 1 1860 8 discriminator 1 view .LVU44
 137 0060 002B     		cmp	r3, #0
 138 0062 47D1     		bne	.L17
1861:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
1862:rtos/uC-FS/Source/fs_entry.c ****     }
1863:rtos/uC-FS/Source/fs_entry.c **** 
1864:rtos/uC-FS/Source/fs_entry.c ****     if (p_vol_temp == (FS_VOL *)0) {
 139              		.loc 1 1864 5 is_stmt 1 view .LVU45
 140              		.loc 1 1864 8 is_stmt 0 view .LVU46
 141 0064 5DB3     		cbz	r5, .L23
1865:rtos/uC-FS/Source/fs_entry.c ****        *p_err =  FS_ERR_NAME_INVALID;
1866:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
1867:rtos/uC-FS/Source/fs_entry.c ****     }
1868:rtos/uC-FS/Source/fs_entry.c **** 
1869:rtos/uC-FS/Source/fs_entry.c ****     vol_lock_ok = FSVol_Lock(p_vol_temp);                       /* Lock vol.                       
 142              		.loc 1 1869 5 is_stmt 1 view .LVU47
 143              		.loc 1 1869 19 is_stmt 0 view .LVU48
 144 0066 2846     		mov	r0, r5
 145 0068 FFF7FEFF 		bl	FSVol_Lock
 146              	.LVL12:
1870:rtos/uC-FS/Source/fs_entry.c ****     if (vol_lock_ok == DEF_NO) {
 147              		.loc 1 1870 5 is_stmt 1 view .LVU49
 148              		.loc 1 1870 8 is_stmt 0 view .LVU50
 149 006c 60B3     		cbz	r0, .L24
1871:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_OS_LOCK;
1872:rtos/uC-FS/Source/fs_entry.c ****         FSVol_Release(p_vol_temp);
1873:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
1874:rtos/uC-FS/Source/fs_entry.c ****     }
1875:rtos/uC-FS/Source/fs_entry.c **** 
1876:rtos/uC-FS/Source/fs_entry.c ****     (void)FSVol_RefreshLocked(p_vol_temp, p_err);               /* Refresh vol.                    
 150              		.loc 1 1876 5 is_stmt 1 view .LVU51
 151              		.loc 1 1876 11 is_stmt 0 view .LVU52
 152 006e 3146     		mov	r1, r6
 153 0070 2846     		mov	r0, r5
 154              	.LVL13:
 155              		.loc 1 1876 11 view .LVU53
 156 0072 FFF7FEFF 		bl	FSVol_RefreshLocked
 157              	.LVL14:
1877:rtos/uC-FS/Source/fs_entry.c **** 
1878:rtos/uC-FS/Source/fs_entry.c ****     switch (p_vol_temp->State) {
 158              		.loc 1 1878 5 is_stmt 1 view .LVU54
 159              		.loc 1 1878 23 is_stmt 0 view .LVU55
 160 0076 2B88     		ldrh	r3, [r5]
 161              		.loc 1 1878 5 view .LVU56
 162 0078 042B     		cmp	r3, #4
 163 007a 2DD9     		bls	.L25
 164 007c 052B     		cmp	r3, #5
 165 007e 2DD1     		bne	.L14
1879:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_OPEN:                                 /* Rtn err if vol is not mounted.  
1880:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_PRESENT:
1881:rtos/uC-FS/Source/fs_entry.c ****              FSVol_ReleaseUnlock(p_vol_temp);
1882:rtos/uC-FS/Source/fs_entry.c ****              return ((CPU_CHAR *)0);
1883:rtos/uC-FS/Source/fs_entry.c **** 
1884:rtos/uC-FS/Source/fs_entry.c **** 
1885:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_MOUNTED:
1886:rtos/uC-FS/Source/fs_entry.c ****              break;
ARM GAS  /tmp/cc8IPqmX.s 			page 37


 166              		.loc 1 1886 14 is_stmt 1 view .LVU57
1887:rtos/uC-FS/Source/fs_entry.c **** 
1888:rtos/uC-FS/Source/fs_entry.c **** 
1889:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_CLOSED:
1890:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_CLOSING:
1891:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_OPENING:                              /* Rtn err if vol is not open.     
1892:rtos/uC-FS/Source/fs_entry.c ****         default:
1893:rtos/uC-FS/Source/fs_entry.c ****              FSVol_ReleaseUnlock(p_vol_temp);
1894:rtos/uC-FS/Source/fs_entry.c ****              return ((CPU_CHAR *)0);
1895:rtos/uC-FS/Source/fs_entry.c ****     }
1896:rtos/uC-FS/Source/fs_entry.c **** 
1897:rtos/uC-FS/Source/fs_entry.c ****    *pp_vol = p_vol_temp;
 167              		.loc 1 1897 4 view .LVU58
 168              		.loc 1 1897 12 is_stmt 0 view .LVU59
 169 0080 3D60     		str	r5, [r7]
1898:rtos/uC-FS/Source/fs_entry.c ****    *p_err  = FS_ERR_NONE;
 170              		.loc 1 1898 4 is_stmt 1 view .LVU60
 171              		.loc 1 1898 12 is_stmt 0 view .LVU61
 172 0082 0023     		movs	r3, #0
 173 0084 3380     		strh	r3, [r6]	@ movhi
1899:rtos/uC-FS/Source/fs_entry.c ****     return (name_entry);
 174              		.loc 1 1899 5 is_stmt 1 view .LVU62
 175              		.loc 1 1899 12 is_stmt 0 view .LVU63
 176 0086 07E0     		b	.L1
 177              	.LVL15:
 178              	.L19:
1829:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);                                 /* ... rtn NULL vol & file name.   
 179              		.loc 1 1829 8 is_stmt 1 view .LVU64
1829:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);                                 /* ... rtn NULL vol & file name.   
 180              		.loc 1 1829 15 is_stmt 0 view .LVU65
 181 0088 40F28733 		movw	r3, #903
 182 008c 3380     		strh	r3, [r6]	@ movhi
1830:rtos/uC-FS/Source/fs_entry.c ****     }
 183              		.loc 1 1830 9 is_stmt 1 view .LVU66
1830:rtos/uC-FS/Source/fs_entry.c ****     }
 184              		.loc 1 1830 16 is_stmt 0 view .LVU67
 185 008e 03E0     		b	.L1
 186              	.L20:
1834:rtos/uC-FS/Source/fs_entry.c ****          return ((CPU_CHAR *)0);
 187              		.loc 1 1834 9 is_stmt 1 view .LVU68
1834:rtos/uC-FS/Source/fs_entry.c ****          return ((CPU_CHAR *)0);
 188              		.loc 1 1834 16 is_stmt 0 view .LVU69
 189 0090 40F28733 		movw	r3, #903
 190 0094 3380     		strh	r3, [r6]	@ movhi
1835:rtos/uC-FS/Source/fs_entry.c ****     }
 191              		.loc 1 1835 10 is_stmt 1 view .LVU70
1835:rtos/uC-FS/Source/fs_entry.c ****     }
 192              		.loc 1 1835 17 is_stmt 0 view .LVU71
 193 0096 0024     		movs	r4, #0
 194              	.LVL16:
 195              	.L1:
1900:rtos/uC-FS/Source/fs_entry.c **** }
 196              		.loc 1 1900 1 view .LVU72
 197 0098 2046     		mov	r0, r4
 198 009a 05B0     		add	sp, sp, #20
 199              	.LCFI2:
 200              		.cfi_remember_state
ARM GAS  /tmp/cc8IPqmX.s 			page 38


 201              		.cfi_def_cfa_offset 20
 202              		@ sp needed
 203 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 204              	.LVL17:
 205              	.L21:
 206              	.LCFI3:
 207              		.cfi_restore_state
1841:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 208              		.loc 1 1841 8 is_stmt 1 view .LVU73
1841:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 209              		.loc 1 1841 15 is_stmt 0 view .LVU74
 210 009e 40F28A33 		movw	r3, #906
 211 00a2 3380     		strh	r3, [r6]	@ movhi
1842:rtos/uC-FS/Source/fs_entry.c ****     }
 212              		.loc 1 1842 9 is_stmt 1 view .LVU75
1842:rtos/uC-FS/Source/fs_entry.c ****     }
 213              		.loc 1 1842 16 is_stmt 0 view .LVU76
 214 00a4 0024     		movs	r4, #0
 215              	.LVL18:
1842:rtos/uC-FS/Source/fs_entry.c ****     }
 216              		.loc 1 1842 16 view .LVU77
 217 00a6 F7E7     		b	.L1
 218              	.LVL19:
 219              	.L22:
1852:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 220              		.loc 1 1852 9 is_stmt 1 view .LVU78
1852:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 221              		.loc 1 1852 16 is_stmt 0 view .LVU79
 222 00a8 4FF46173 		mov	r3, #900
 223 00ac 3380     		strh	r3, [r6]	@ movhi
1853:rtos/uC-FS/Source/fs_entry.c ****     }
 224              		.loc 1 1853 9 is_stmt 1 view .LVU80
1853:rtos/uC-FS/Source/fs_entry.c ****     }
 225              		.loc 1 1853 16 is_stmt 0 view .LVU81
 226 00ae 0024     		movs	r4, #0
 227              	.LVL20:
1853:rtos/uC-FS/Source/fs_entry.c ****     }
 228              		.loc 1 1853 16 view .LVU82
 229 00b0 F2E7     		b	.L1
 230              	.LVL21:
 231              	.L8:
1858:rtos/uC-FS/Source/fs_entry.c **** 
 232              		.loc 1 1858 68 discriminator 1 view .LVU83
 233 00b2 3146     		mov	r1, r6
 234 00b4 01A8     		add	r0, sp, #4
 235 00b6 FFF7FEFF 		bl	FSVol_Acquire
 236              	.LVL22:
 237 00ba 0546     		mov	r5, r0
 238              	.LVL23:
1858:rtos/uC-FS/Source/fs_entry.c **** 
 239              		.loc 1 1858 68 discriminator 1 view .LVU84
 240 00bc CFE7     		b	.L9
 241              	.LVL24:
 242              	.L23:
1865:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 243              		.loc 1 1865 8 is_stmt 1 view .LVU85
1865:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
ARM GAS  /tmp/cc8IPqmX.s 			page 39


 244              		.loc 1 1865 15 is_stmt 0 view .LVU86
 245 00be 40F28733 		movw	r3, #903
 246 00c2 3380     		strh	r3, [r6]	@ movhi
1866:rtos/uC-FS/Source/fs_entry.c ****     }
 247              		.loc 1 1866 9 is_stmt 1 view .LVU87
1866:rtos/uC-FS/Source/fs_entry.c ****     }
 248              		.loc 1 1866 16 is_stmt 0 view .LVU88
 249 00c4 2C46     		mov	r4, r5
 250              	.LVL25:
1866:rtos/uC-FS/Source/fs_entry.c ****     }
 251              		.loc 1 1866 16 view .LVU89
 252 00c6 E7E7     		b	.L1
 253              	.LVL26:
 254              	.L24:
1871:rtos/uC-FS/Source/fs_entry.c ****         FSVol_Release(p_vol_temp);
 255              		.loc 1 1871 8 is_stmt 1 view .LVU90
1871:rtos/uC-FS/Source/fs_entry.c ****         FSVol_Release(p_vol_temp);
 256              		.loc 1 1871 15 is_stmt 0 view .LVU91
 257 00c8 40F2DD53 		movw	r3, #1501
 258 00cc 3380     		strh	r3, [r6]	@ movhi
1872:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 259              		.loc 1 1872 9 is_stmt 1 view .LVU92
 260 00ce 2846     		mov	r0, r5
 261              	.LVL27:
1872:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 262              		.loc 1 1872 9 is_stmt 0 view .LVU93
 263 00d0 FFF7FEFF 		bl	FSVol_Release
 264              	.LVL28:
1873:rtos/uC-FS/Source/fs_entry.c ****     }
 265              		.loc 1 1873 9 is_stmt 1 view .LVU94
1873:rtos/uC-FS/Source/fs_entry.c ****     }
 266              		.loc 1 1873 16 is_stmt 0 view .LVU95
 267 00d4 0024     		movs	r4, #0
 268              	.LVL29:
1873:rtos/uC-FS/Source/fs_entry.c ****     }
 269              		.loc 1 1873 16 view .LVU96
 270 00d6 DFE7     		b	.L1
 271              	.LVL30:
 272              	.L25:
1878:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_OPEN:                                 /* Rtn err if vol is not mounted.  
 273              		.loc 1 1878 5 view .LVU97
 274 00d8 032B     		cmp	r3, #3
 275 00da 04D2     		bcs	.L26
 276              	.L14:
1893:rtos/uC-FS/Source/fs_entry.c ****              return ((CPU_CHAR *)0);
 277              		.loc 1 1893 14 is_stmt 1 view .LVU98
 278 00dc 2846     		mov	r0, r5
 279 00de FFF7FEFF 		bl	FSVol_ReleaseUnlock
 280              	.LVL31:
1894:rtos/uC-FS/Source/fs_entry.c ****     }
 281              		.loc 1 1894 14 view .LVU99
1894:rtos/uC-FS/Source/fs_entry.c ****     }
 282              		.loc 1 1894 21 is_stmt 0 view .LVU100
 283 00e2 0024     		movs	r4, #0
 284              	.LVL32:
1894:rtos/uC-FS/Source/fs_entry.c ****     }
 285              		.loc 1 1894 21 view .LVU101
ARM GAS  /tmp/cc8IPqmX.s 			page 40


 286 00e4 D8E7     		b	.L1
 287              	.LVL33:
 288              	.L26:
1881:rtos/uC-FS/Source/fs_entry.c ****              return ((CPU_CHAR *)0);
 289              		.loc 1 1881 14 is_stmt 1 view .LVU102
 290 00e6 2846     		mov	r0, r5
 291 00e8 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 292              	.LVL34:
1882:rtos/uC-FS/Source/fs_entry.c **** 
 293              		.loc 1 1882 14 view .LVU103
1882:rtos/uC-FS/Source/fs_entry.c **** 
 294              		.loc 1 1882 21 is_stmt 0 view .LVU104
 295 00ec 0024     		movs	r4, #0
 296              	.LVL35:
1882:rtos/uC-FS/Source/fs_entry.c **** 
 297              		.loc 1 1882 21 view .LVU105
 298 00ee D3E7     		b	.L1
 299              	.LVL36:
 300              	.L16:
1825:rtos/uC-FS/Source/fs_entry.c ****     }
 301              		.loc 1 1825 16 view .LVU106
 302 00f0 0024     		movs	r4, #0
 303 00f2 D1E7     		b	.L1
 304              	.LVL37:
 305              	.L17:
1861:rtos/uC-FS/Source/fs_entry.c ****     }
 306              		.loc 1 1861 16 view .LVU107
 307 00f4 0024     		movs	r4, #0
 308              	.LVL38:
1861:rtos/uC-FS/Source/fs_entry.c ****     }
 309              		.loc 1 1861 16 view .LVU108
 310 00f6 CFE7     		b	.L1
 311              		.cfi_endproc
 312              	.LFE13:
 314              		.section	.text.FSEntry_AttribSetHandler,"ax",%progbits
 315              		.align	1
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	FSEntry_AttribSetHandler:
 322              	.LVL39:
 323              	.LFB7:
1022:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     *name_entry;
 324              		.loc 1 1022 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 8
 327              		@ frame_needed = 0, uses_anonymous_args = 0
1022:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     *name_entry;
 328              		.loc 1 1022 1 is_stmt 0 view .LVU110
 329 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 330              	.LCFI4:
 331              		.cfi_def_cfa_offset 20
 332              		.cfi_offset 4, -20
 333              		.cfi_offset 5, -16
 334              		.cfi_offset 6, -12
 335              		.cfi_offset 7, -8
ARM GAS  /tmp/cc8IPqmX.s 			page 41


 336              		.cfi_offset 14, -4
 337 0002 83B0     		sub	sp, sp, #12
 338              	.LCFI5:
 339              		.cfi_def_cfa_offset 32
 340 0004 0546     		mov	r5, r0
 341 0006 0F46     		mov	r7, r1
 342 0008 1446     		mov	r4, r2
1023:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL       *p_vol;
 343              		.loc 1 1023 5 is_stmt 1 view .LVU111
1024:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   file_open;
 344              		.loc 1 1024 5 view .LVU112
1025:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   dir_open;
 345              		.loc 1 1025 5 view .LVU113
1026:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   entry_open;
 346              		.loc 1 1026 5 view .LVU114
1027:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   mode_ro;
 347              		.loc 1 1027 5 view .LVU115
1028:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS      mode;
 348              		.loc 1 1028 5 view .LVU116
1029:rtos/uC-FS/Source/fs_entry.c **** 
 349              		.loc 1 1029 5 view .LVU117
1033:rtos/uC-FS/Source/fs_entry.c ****     file_open = DEF_NO;
 350              		.loc 1 1033 5 view .LVU118
 351              	.LVL40:
1034:rtos/uC-FS/Source/fs_entry.c **** 
 352              		.loc 1 1034 5 view .LVU119
1036:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 353              		.loc 1 1036 5 view .LVU120
1036:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 354              		.loc 1 1036 17 is_stmt 0 view .LVU121
 355 000a 6946     		mov	r1, sp
 356              	.LVL41:
1036:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 357              		.loc 1 1036 17 view .LVU122
 358 000c FFF7FEFF 		bl	FSFile_IsOpen
 359              	.LVL42:
1036:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 360              		.loc 1 1036 17 view .LVU123
 361 0010 0646     		mov	r6, r0
 362              	.LVL43:
1037:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 363              		.loc 1 1037 5 is_stmt 1 view .LVU124
1037:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 364              		.loc 1 1037 10 is_stmt 0 view .LVU125
 365 0012 2388     		ldrh	r3, [r4]
1037:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 366              		.loc 1 1037 8 view .LVU126
 367 0014 13B1     		cbz	r3, .L28
1037:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 368              		.loc 1 1037 33 discriminator 1 view .LVU127
 369 0016 B3F5317F 		cmp	r3, #708
 370 001a 2BD1     		bne	.L27
 371              	.L28:
1043:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 372              		.loc 1 1043 5 is_stmt 1 view .LVU128
1043:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 373              		.loc 1 1043 17 is_stmt 0 view .LVU129
ARM GAS  /tmp/cc8IPqmX.s 			page 42


 374 001c 2146     		mov	r1, r4
 375 001e 2846     		mov	r0, r5
 376 0020 FFF7FEFF 		bl	FSDir_IsOpen
 377              	.LVL44:
1044:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
 378              		.loc 1 1044 5 is_stmt 1 view .LVU130
1044:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
 379              		.loc 1 1044 10 is_stmt 0 view .LVU131
 380 0024 2388     		ldrh	r3, [r4]
1044:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
 381              		.loc 1 1044 8 view .LVU132
 382 0026 1BB1     		cbz	r3, .L30
1044:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
 383              		.loc 1 1044 33 discriminator 1 view .LVU133
 384 0028 40F2C222 		movw	r2, #706
 385 002c 9342     		cmp	r3, r2
 386 002e 21D1     		bne	.L27
 387              	.L30:
1050:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 388              		.loc 1 1050 5 is_stmt 1 view .LVU134
1050:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 389              		.loc 1 1050 27 is_stmt 0 view .LVU135
 390 0030 10B9     		cbnz	r0, .L36
1050:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 391              		.loc 1 1050 27 discriminator 2 view .LVU136
 392 0032 D6B1     		cbz	r6, .L37
1050:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 393              		.loc 1 1050 27 view .LVU137
 394 0034 0123     		movs	r3, #1
 395 0036 00E0     		b	.L31
 396              	.L36:
 397 0038 0123     		movs	r3, #1
 398              	.L31:
 399              	.LVL45:
1051:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_OPEN;
 400              		.loc 1 1051 5 is_stmt 1 discriminator 6 view .LVU138
1051:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_OPEN;
 401              		.loc 1 1051 8 is_stmt 0 discriminator 6 view .LVU139
 402 003a C3B9     		cbnz	r3, .L39
1057:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 403              		.loc 1 1057 5 is_stmt 1 view .LVU140
1057:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 404              		.loc 1 1057 18 is_stmt 0 view .LVU141
 405 003c 2246     		mov	r2, r4
 406 003e 01A9     		add	r1, sp, #4
 407 0040 2846     		mov	r0, r5
 408              	.LVL46:
1057:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 409              		.loc 1 1057 18 view .LVU142
 410 0042 FFF7FEFF 		bl	FSEntry_NameParseChk
 411              	.LVL47:
1057:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 412              		.loc 1 1057 18 view .LVU143
 413 0046 0146     		mov	r1, r0
 414              	.LVL48:
1060:rtos/uC-FS/Source/fs_entry.c ****     if ((p_vol      == (FS_VOL   *)0) ||                        /* Rtn err if no vol found ...     
 415              		.loc 1 1060 5 is_stmt 1 view .LVU144
ARM GAS  /tmp/cc8IPqmX.s 			page 43


1061:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 416              		.loc 1 1061 5 view .LVU145
1061:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 417              		.loc 1 1061 21 is_stmt 0 view .LVU146
 418 0048 0198     		ldr	r0, [sp, #4]
 419              	.LVL49:
1061:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 420              		.loc 1 1061 8 view .LVU147
 421 004a 98B1     		cbz	r0, .L27
1061:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 422              		.loc 1 1061 39 discriminator 1 view .LVU148
 423 004c 91B1     		cbz	r1, .L27
1067:rtos/uC-FS/Source/fs_entry.c ****     if (mode_ro == DEF_YES) {
 424              		.loc 1 1067 5 is_stmt 1 view .LVU149
1067:rtos/uC-FS/Source/fs_entry.c ****     if (mode_ro == DEF_YES) {
 425              		.loc 1 1067 15 is_stmt 0 view .LVU150
 426 004e C368     		ldr	r3, [r0, #12]
1067:rtos/uC-FS/Source/fs_entry.c ****     if (mode_ro == DEF_YES) {
 427              		.loc 1 1067 13 view .LVU151
 428 0050 13F0020F 		tst	r3, #2
 429 0054 10D0     		beq	.L40
 430              	.LVL50:
1068:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 431              		.loc 1 1068 5 is_stmt 1 view .LVU152
1076:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 432              		.loc 1 1076 5 view .LVU153
1076:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 433              		.loc 1 1076 19 is_stmt 0 view .LVU154
 434 0056 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
1076:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 435              		.loc 1 1076 8 view .LVU155
 436 0058 A3B1     		cbz	r3, .L41
1082:rtos/uC-FS/Source/fs_entry.c ****                          name_entry,
 437              		.loc 1 1082 5 is_stmt 1 view .LVU156
 438 005a 2346     		mov	r3, r4
 439 005c 3A46     		mov	r2, r7
 440 005e FFF7FEFF 		bl	FSSys_EntryAttribSet
 441              	.LVL51:
1089:rtos/uC-FS/Source/fs_entry.c **** }
 442              		.loc 1 1089 5 view .LVU157
 443 0062 0198     		ldr	r0, [sp, #4]
 444 0064 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 445              	.LVL52:
 446 0068 04E0     		b	.L27
 447              	.LVL53:
 448              	.L37:
1050:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 449              		.loc 1 1050 27 is_stmt 0 view .LVU158
 450 006a 0023     		movs	r3, #0
 451 006c E5E7     		b	.L31
 452              	.LVL54:
 453              	.L39:
1052:rtos/uC-FS/Source/fs_entry.c ****         return;
 454              		.loc 1 1052 8 is_stmt 1 view .LVU159
1052:rtos/uC-FS/Source/fs_entry.c ****         return;
 455              		.loc 1 1052 15 is_stmt 0 view .LVU160
 456 006e 40F2CB23 		movw	r3, #715
ARM GAS  /tmp/cc8IPqmX.s 			page 44


 457              	.LVL55:
1052:rtos/uC-FS/Source/fs_entry.c ****         return;
 458              		.loc 1 1052 15 view .LVU161
 459 0072 2380     		strh	r3, [r4]	@ movhi
1053:rtos/uC-FS/Source/fs_entry.c ****     }
 460              		.loc 1 1053 9 is_stmt 1 view .LVU162
 461              	.LVL56:
 462              	.L27:
1090:rtos/uC-FS/Source/fs_entry.c **** #endif
 463              		.loc 1 1090 1 is_stmt 0 view .LVU163
 464 0074 03B0     		add	sp, sp, #12
 465              	.LCFI6:
 466              		.cfi_remember_state
 467              		.cfi_def_cfa_offset 20
 468              		@ sp needed
 469 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 470              	.LVL57:
 471              	.L40:
 472              	.LCFI7:
 473              		.cfi_restore_state
1068:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 474              		.loc 1 1068 5 is_stmt 1 view .LVU164
1069:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
 475              		.loc 1 1069 9 view .LVU165
 476 0078 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 477              	.LVL58:
1070:rtos/uC-FS/Source/fs_entry.c ****         return;
 478              		.loc 1 1070 8 view .LVU166
1070:rtos/uC-FS/Source/fs_entry.c ****         return;
 479              		.loc 1 1070 15 is_stmt 0 view .LVU167
 480 007c 40F27D53 		movw	r3, #1405
 481 0080 2380     		strh	r3, [r4]	@ movhi
1071:rtos/uC-FS/Source/fs_entry.c ****     }
 482              		.loc 1 1071 9 is_stmt 1 view .LVU168
 483 0082 F7E7     		b	.L27
 484              	.LVL59:
 485              	.L41:
1077:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
 486              		.loc 1 1077 9 view .LVU169
 487 0084 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 488              	.LVL60:
1078:rtos/uC-FS/Source/fs_entry.c ****         return;
 489              		.loc 1 1078 8 view .LVU170
1078:rtos/uC-FS/Source/fs_entry.c ****         return;
 490              		.loc 1 1078 15 is_stmt 0 view .LVU171
 491 0088 40F2C923 		movw	r3, #713
 492 008c 2380     		strh	r3, [r4]	@ movhi
1079:rtos/uC-FS/Source/fs_entry.c ****     }
 493              		.loc 1 1079 9 is_stmt 1 view .LVU172
 494 008e F1E7     		b	.L27
 495              		.cfi_endproc
 496              	.LFE7:
 498              		.section	.text.FSEntry_CreateHandler,"ax",%progbits
 499              		.align	1
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
ARM GAS  /tmp/cc8IPqmX.s 			page 45


 503              		.fpu fpv4-sp-d16
 505              	FSEntry_CreateHandler:
 506              	.LVL61:
 507              	.LFB8:
1130:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_entry;
 508              		.loc 1 1130 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 8
 511              		@ frame_needed = 0, uses_anonymous_args = 0
1130:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_entry;
 512              		.loc 1 1130 1 is_stmt 0 view .LVU174
 513 0000 70B5     		push	{r4, r5, r6, lr}
 514              	.LCFI8:
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 4, -16
 517              		.cfi_offset 5, -12
 518              		.cfi_offset 6, -8
 519              		.cfi_offset 14, -4
 520 0002 84B0     		sub	sp, sp, #16
 521              	.LCFI9:
 522              		.cfi_def_cfa_offset 32
 523 0004 0E46     		mov	r6, r1
 524 0006 1546     		mov	r5, r2
 525 0008 1C46     		mov	r4, r3
1131:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL    *p_vol;
 526              		.loc 1 1131 5 is_stmt 1 view .LVU175
1132:rtos/uC-FS/Source/fs_entry.c **** 
 527              		.loc 1 1132 5 view .LVU176
1136:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 528              		.loc 1 1136 5 view .LVU177
1136:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 529              		.loc 1 1136 18 is_stmt 0 view .LVU178
 530 000a 1A46     		mov	r2, r3
 531              	.LVL62:
1136:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 532              		.loc 1 1136 18 view .LVU179
 533 000c 03A9     		add	r1, sp, #12
 534              	.LVL63:
1136:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 535              		.loc 1 1136 18 view .LVU180
 536 000e FFF7FEFF 		bl	FSEntry_NameParseChk
 537              	.LVL64:
1136:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 538              		.loc 1 1136 18 view .LVU181
 539 0012 0146     		mov	r1, r0
 540              	.LVL65:
1139:rtos/uC-FS/Source/fs_entry.c ****     if ((p_vol      == (FS_VOL   *)0) ||                        /* Rtn err if no vol found ...     
 541              		.loc 1 1139 5 is_stmt 1 view .LVU182
1140:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 542              		.loc 1 1140 5 view .LVU183
1140:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 543              		.loc 1 1140 21 is_stmt 0 view .LVU184
 544 0014 0398     		ldr	r0, [sp, #12]
 545              	.LVL66:
1140:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 546              		.loc 1 1140 8 view .LVU185
 547 0016 70B1     		cbz	r0, .L42
ARM GAS  /tmp/cc8IPqmX.s 			page 46


1140:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 548              		.loc 1 1140 39 discriminator 1 view .LVU186
 549 0018 69B1     		cbz	r1, .L42
1146:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 550              		.loc 1 1146 5 is_stmt 1 view .LVU187
1146:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 551              		.loc 1 1146 9 is_stmt 0 view .LVU188
 552 001a C368     		ldr	r3, [r0, #12]
1146:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 553              		.loc 1 1146 8 view .LVU189
 554 001c 13F0020F 		tst	r3, #2
 555 0020 0BD0     		beq	.L48
1154:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 556              		.loc 1 1154 5 is_stmt 1 view .LVU190
1154:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 557              		.loc 1 1154 19 is_stmt 0 view .LVU191
 558 0022 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
1154:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 559              		.loc 1 1154 8 view .LVU192
 560 0024 7BB1     		cbz	r3, .L49
1160:rtos/uC-FS/Source/fs_entry.c ****                       name_entry,
 561              		.loc 1 1160 5 is_stmt 1 view .LVU193
 562 0026 0094     		str	r4, [sp]
 563 0028 2B46     		mov	r3, r5
 564 002a 3246     		mov	r2, r6
 565 002c FFF7FEFF 		bl	FSSys_EntryCreate
 566              	.LVL67:
1168:rtos/uC-FS/Source/fs_entry.c **** }
 567              		.loc 1 1168 5 view .LVU194
 568 0030 0398     		ldr	r0, [sp, #12]
 569 0032 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 570              	.LVL68:
 571              	.L42:
1169:rtos/uC-FS/Source/fs_entry.c **** #endif
 572              		.loc 1 1169 1 is_stmt 0 view .LVU195
 573 0036 04B0     		add	sp, sp, #16
 574              	.LCFI10:
 575              		.cfi_remember_state
 576              		.cfi_def_cfa_offset 16
 577              		@ sp needed
 578 0038 70BD     		pop	{r4, r5, r6, pc}
 579              	.LVL69:
 580              	.L48:
 581              	.LCFI11:
 582              		.cfi_restore_state
1147:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
 583              		.loc 1 1147 9 is_stmt 1 view .LVU196
 584 003a FFF7FEFF 		bl	FSVol_ReleaseUnlock
 585              	.LVL70:
1148:rtos/uC-FS/Source/fs_entry.c ****         return;
 586              		.loc 1 1148 8 view .LVU197
1148:rtos/uC-FS/Source/fs_entry.c ****         return;
 587              		.loc 1 1148 15 is_stmt 0 view .LVU198
 588 003e 40F27D53 		movw	r3, #1405
 589 0042 2380     		strh	r3, [r4]	@ movhi
1149:rtos/uC-FS/Source/fs_entry.c ****     }
 590              		.loc 1 1149 9 is_stmt 1 view .LVU199
ARM GAS  /tmp/cc8IPqmX.s 			page 47


 591 0044 F7E7     		b	.L42
 592              	.LVL71:
 593              	.L49:
1155:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
 594              		.loc 1 1155 9 view .LVU200
 595 0046 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 596              	.LVL72:
1156:rtos/uC-FS/Source/fs_entry.c ****         return;
 597              		.loc 1 1156 8 view .LVU201
1156:rtos/uC-FS/Source/fs_entry.c ****         return;
 598              		.loc 1 1156 15 is_stmt 0 view .LVU202
 599 004a 40F2C923 		movw	r3, #713
 600 004e 2380     		strh	r3, [r4]	@ movhi
1157:rtos/uC-FS/Source/fs_entry.c ****     }
 601              		.loc 1 1157 9 is_stmt 1 view .LVU203
 602 0050 F1E7     		b	.L42
 603              		.cfi_endproc
 604              	.LFE8:
 606              		.section	.text.FSEntry_DelHandler,"ax",%progbits
 607              		.align	1
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv4-sp-d16
 613              	FSEntry_DelHandler:
 614              	.LVL73:
 615              	.LFB9:
1237:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     *name_entry;
 616              		.loc 1 1237 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 0, uses_anonymous_args = 0
1237:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     *name_entry;
 620              		.loc 1 1237 1 is_stmt 0 view .LVU205
 621 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 622              	.LCFI12:
 623              		.cfi_def_cfa_offset 24
 624              		.cfi_offset 4, -24
 625              		.cfi_offset 5, -20
 626              		.cfi_offset 6, -16
 627              		.cfi_offset 7, -12
 628              		.cfi_offset 8, -8
 629              		.cfi_offset 14, -4
 630 0004 82B0     		sub	sp, sp, #8
 631              	.LCFI13:
 632              		.cfi_def_cfa_offset 32
 633 0006 0746     		mov	r7, r0
 634 0008 0C46     		mov	r4, r1
 635 000a 1546     		mov	r5, r2
1238:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL       *p_vol;
 636              		.loc 1 1238 5 is_stmt 1 view .LVU206
1239:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS      mode;
 637              		.loc 1 1239 5 view .LVU207
1240:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS      del_entry_type;
 638              		.loc 1 1240 5 view .LVU208
1241:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   file_open;
 639              		.loc 1 1241 5 view .LVU209
ARM GAS  /tmp/cc8IPqmX.s 			page 48


1242:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   dir_open;
 640              		.loc 1 1242 5 view .LVU210
1243:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   entry_open;
 641              		.loc 1 1243 5 view .LVU211
1244:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   is_file;
 642              		.loc 1 1244 5 view .LVU212
1245:rtos/uC-FS/Source/fs_entry.c **** #ifdef   FS_DIR_MODULE_PRESENT
 643              		.loc 1 1245 5 view .LVU213
1247:rtos/uC-FS/Source/fs_entry.c **** #endif
 644              		.loc 1 1247 5 view .LVU214
1252:rtos/uC-FS/Source/fs_entry.c ****     file_open = DEF_NO;
 645              		.loc 1 1252 5 view .LVU215
 646              	.LVL74:
1253:rtos/uC-FS/Source/fs_entry.c **** 
 647              		.loc 1 1253 5 view .LVU216
1255:rtos/uC-FS/Source/fs_entry.c ****     if (is_file == DEF_YES) {
 648              		.loc 1 1255 5 view .LVU217
1255:rtos/uC-FS/Source/fs_entry.c ****     if (is_file == DEF_YES) {
 649              		.loc 1 1255 13 is_stmt 0 view .LVU218
 650 000c C1F34006 		ubfx	r6, r1, #1, #1
 651              	.LVL75:
1256:rtos/uC-FS/Source/fs_entry.c ****         file_open = FSFile_IsOpen(name_full, &mode, p_err);
 652              		.loc 1 1256 5 is_stmt 1 view .LVU219
1256:rtos/uC-FS/Source/fs_entry.c ****         file_open = FSFile_IsOpen(name_full, &mode, p_err);
 653              		.loc 1 1256 8 is_stmt 0 view .LVU220
 654 0010 11F0020F 		tst	r1, #2
 655 0014 11D1     		bne	.L66
 656              	.LVL76:
 657              	.L51:
1264:rtos/uC-FS/Source/fs_entry.c ****     if (is_dir == DEF_YES) {
 658              		.loc 1 1264 5 is_stmt 1 view .LVU221
1264:rtos/uC-FS/Source/fs_entry.c ****     if (is_dir == DEF_YES) {
 659              		.loc 1 1264 12 is_stmt 0 view .LVU222
 660 0016 C4F38000 		ubfx	r0, r4, #2, #1
 661              	.LVL77:
1265:rtos/uC-FS/Source/fs_entry.c ****         dir_open  = FSDir_IsOpen(name_full, p_err);
 662              		.loc 1 1265 5 is_stmt 1 view .LVU223
1265:rtos/uC-FS/Source/fs_entry.c ****         dir_open  = FSDir_IsOpen(name_full, p_err);
 663              		.loc 1 1265 8 is_stmt 0 view .LVU224
 664 001a 14F0040F 		tst	r4, #4
 665 001e 17D1     		bne	.L67
 666              	.LVL78:
 667              	.L53:
1269:rtos/uC-FS/Source/fs_entry.c ****         return;
 668              		.loc 1 1269 5 is_stmt 1 view .LVU225
1269:rtos/uC-FS/Source/fs_entry.c ****         return;
 669              		.loc 1 1269 9 is_stmt 0 view .LVU226
 670 0020 2A88     		ldrh	r2, [r5]
1269:rtos/uC-FS/Source/fs_entry.c ****         return;
 671              		.loc 1 1269 8 view .LVU227
 672 0022 002A     		cmp	r2, #0
 673 0024 40D1     		bne	.L50
1273:rtos/uC-FS/Source/fs_entry.c **** 
 674              		.loc 1 1273 5 is_stmt 1 view .LVU228
 675              	.LVL79:
1275:rtos/uC-FS/Source/fs_entry.c ****         if (dir_open  == DEF_YES) {                             /* Clr dir  bit if dir  is open.   
 676              		.loc 1 1275 5 view .LVU229
ARM GAS  /tmp/cc8IPqmX.s 			page 49


1275:rtos/uC-FS/Source/fs_entry.c ****         if (dir_open  == DEF_YES) {                             /* Clr dir  bit if dir  is open.   
 677              		.loc 1 1275 9 is_stmt 0 view .LVU230
 678 0026 04F00608 		and	r8, r4, #6
1275:rtos/uC-FS/Source/fs_entry.c ****         if (dir_open  == DEF_YES) {                             /* Clr dir  bit if dir  is open.   
 679              		.loc 1 1275 8 view .LVU231
 680 002a B8F1060F 		cmp	r8, #6
 681 002e 14D0     		beq	.L68
1284:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 682              		.loc 1 1284 9 is_stmt 1 view .LVU232
1284:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 683              		.loc 1 1284 31 is_stmt 0 view .LVU233
 684 0030 E8B9     		cbnz	r0, .L63
1284:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 685              		.loc 1 1284 31 discriminator 2 view .LVU234
 686 0032 002E     		cmp	r6, #0
 687 0034 3BD0     		beq	.L64
1284:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 688              		.loc 1 1284 31 view .LVU235
 689 0036 0123     		movs	r3, #1
 690 0038 1AE0     		b	.L57
 691              	.LVL80:
 692              	.L66:
1257:rtos/uC-FS/Source/fs_entry.c ****         if ((*p_err != FS_ERR_NONE) &&
 693              		.loc 1 1257 9 is_stmt 1 view .LVU236
1257:rtos/uC-FS/Source/fs_entry.c ****         if ((*p_err != FS_ERR_NONE) &&
 694              		.loc 1 1257 21 is_stmt 0 view .LVU237
 695 003a 6946     		mov	r1, sp
 696              	.LVL81:
1257:rtos/uC-FS/Source/fs_entry.c ****         if ((*p_err != FS_ERR_NONE) &&
 697              		.loc 1 1257 21 view .LVU238
 698 003c FFF7FEFF 		bl	FSFile_IsOpen
 699              	.LVL82:
1257:rtos/uC-FS/Source/fs_entry.c ****         if ((*p_err != FS_ERR_NONE) &&
 700              		.loc 1 1257 21 view .LVU239
 701 0040 0646     		mov	r6, r0
 702              	.LVL83:
1258:rtos/uC-FS/Source/fs_entry.c ****             (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 703              		.loc 1 1258 9 is_stmt 1 view .LVU240
1258:rtos/uC-FS/Source/fs_entry.c ****             (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 704              		.loc 1 1258 14 is_stmt 0 view .LVU241
 705 0042 2B88     		ldrh	r3, [r5]
1258:rtos/uC-FS/Source/fs_entry.c ****             (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 706              		.loc 1 1258 12 view .LVU242
 707 0044 002B     		cmp	r3, #0
 708 0046 E6D0     		beq	.L51
1258:rtos/uC-FS/Source/fs_entry.c ****             (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 709              		.loc 1 1258 37 discriminator 1 view .LVU243
 710 0048 B3F5317F 		cmp	r3, #708
 711 004c 2CD1     		bne	.L50
 712 004e E2E7     		b	.L51
 713              	.LVL84:
 714              	.L67:
1266:rtos/uC-FS/Source/fs_entry.c ****     }
 715              		.loc 1 1266 9 is_stmt 1 view .LVU244
1266:rtos/uC-FS/Source/fs_entry.c ****     }
 716              		.loc 1 1266 21 is_stmt 0 view .LVU245
 717 0050 2946     		mov	r1, r5
ARM GAS  /tmp/cc8IPqmX.s 			page 50


 718 0052 3846     		mov	r0, r7
 719              	.LVL85:
1266:rtos/uC-FS/Source/fs_entry.c ****     }
 720              		.loc 1 1266 21 view .LVU246
 721 0054 FFF7FEFF 		bl	FSDir_IsOpen
 722              	.LVL86:
1266:rtos/uC-FS/Source/fs_entry.c ****     }
 723              		.loc 1 1266 21 view .LVU247
 724 0058 E2E7     		b	.L53
 725              	.LVL87:
 726              	.L68:
1276:rtos/uC-FS/Source/fs_entry.c ****             DEF_BIT_CLR(del_entry_type, FS_ENTRY_TYPE_DIR);
 727              		.loc 1 1276 9 is_stmt 1 view .LVU248
1276:rtos/uC-FS/Source/fs_entry.c ****             DEF_BIT_CLR(del_entry_type, FS_ENTRY_TYPE_DIR);
 728              		.loc 1 1276 12 is_stmt 0 view .LVU249
 729 005a 0128     		cmp	r0, #1
 730 005c 04D0     		beq	.L69
 731              	.LVL88:
 732              	.L55:
1279:rtos/uC-FS/Source/fs_entry.c ****             DEF_BIT_CLR(del_entry_type, FS_ENTRY_TYPE_FILE);
 733              		.loc 1 1279 9 is_stmt 1 view .LVU250
1279:rtos/uC-FS/Source/fs_entry.c ****             DEF_BIT_CLR(del_entry_type, FS_ENTRY_TYPE_FILE);
 734              		.loc 1 1279 12 is_stmt 0 view .LVU251
 735 005e 012E     		cmp	r6, #1
 736 0060 07D1     		bne	.L56
1280:rtos/uC-FS/Source/fs_entry.c ****         }
 737              		.loc 1 1280 13 is_stmt 1 view .LVU252
 738 0062 24F00204 		bic	r4, r4, #2
 739              	.LVL89:
1280:rtos/uC-FS/Source/fs_entry.c ****         }
 740              		.loc 1 1280 13 is_stmt 0 view .LVU253
 741 0066 04E0     		b	.L56
 742              	.LVL90:
 743              	.L69:
1277:rtos/uC-FS/Source/fs_entry.c ****         }
 744              		.loc 1 1277 13 is_stmt 1 view .LVU254
 745 0068 24F00404 		bic	r4, r4, #4
 746              	.LVL91:
1277:rtos/uC-FS/Source/fs_entry.c ****         }
 747              		.loc 1 1277 13 is_stmt 0 view .LVU255
 748 006c F7E7     		b	.L55
 749              	.LVL92:
 750              	.L63:
1284:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 751              		.loc 1 1284 31 view .LVU256
 752 006e 0123     		movs	r3, #1
 753              	.L57:
 754              	.LVL93:
1285:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_ENTRY_OPEN;
 755              		.loc 1 1285 9 is_stmt 1 discriminator 6 view .LVU257
1285:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_ENTRY_OPEN;
 756              		.loc 1 1285 12 is_stmt 0 discriminator 6 view .LVU258
 757 0070 FBB9     		cbnz	r3, .L70
 758              	.LVL94:
 759              	.L56:
1292:rtos/uC-FS/Source/fs_entry.c ****                                      &p_vol,
 760              		.loc 1 1292 5 is_stmt 1 view .LVU259
ARM GAS  /tmp/cc8IPqmX.s 			page 51


1292:rtos/uC-FS/Source/fs_entry.c ****                                      &p_vol,
 761              		.loc 1 1292 18 is_stmt 0 view .LVU260
 762 0072 2A46     		mov	r2, r5
 763 0074 01A9     		add	r1, sp, #4
 764 0076 3846     		mov	r0, r7
 765              	.LVL95:
1292:rtos/uC-FS/Source/fs_entry.c ****                                      &p_vol,
 766              		.loc 1 1292 18 view .LVU261
 767 0078 FFF7FEFF 		bl	FSEntry_NameParseChk
 768              	.LVL96:
 769 007c 0146     		mov	r1, r0
 770              	.LVL97:
1295:rtos/uC-FS/Source/fs_entry.c ****     if (( p_vol      == (FS_VOL   *)0) ||                       /* Rtn err if no vol found ...     
 771              		.loc 1 1295 5 is_stmt 1 view .LVU262
1296:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
 772              		.loc 1 1296 5 view .LVU263
1296:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
 773              		.loc 1 1296 22 is_stmt 0 view .LVU264
 774 007e 0198     		ldr	r0, [sp, #4]
 775              	.LVL98:
1296:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
 776              		.loc 1 1296 8 view .LVU265
 777 0080 90B1     		cbz	r0, .L50
1296:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
 778              		.loc 1 1296 40 discriminator 1 view .LVU266
 779 0082 89B1     		cbz	r1, .L50
1298:rtos/uC-FS/Source/fs_entry.c ****         return;
 780              		.loc 1 1298 10 view .LVU267
 781 0084 2B88     		ldrh	r3, [r5]
1297:rtos/uC-FS/Source/fs_entry.c ****         (*p_err      !=  FS_ERR_NONE)) {                        /*                         ... or i
 782              		.loc 1 1297 40 view .LVU268
 783 0086 7BB9     		cbnz	r3, .L50
1303:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 784              		.loc 1 1303 5 is_stmt 1 view .LVU269
1303:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 785              		.loc 1 1303 9 is_stmt 0 view .LVU270
 786 0088 C368     		ldr	r3, [r0, #12]
1303:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 787              		.loc 1 1303 8 view .LVU271
 788 008a 13F0020F 		tst	r3, #2
 789 008e 14D0     		beq	.L71
1312:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 790              		.loc 1 1312 5 is_stmt 1 view .LVU272
1312:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 791              		.loc 1 1312 19 is_stmt 0 view .LVU273
 792 0090 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
1312:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 793              		.loc 1 1312 8 view .LVU274
 794 0092 C3B1     		cbz	r3, .L72
1318:rtos/uC-FS/Source/fs_entry.c ****                    name_entry,
 795              		.loc 1 1318 5 is_stmt 1 view .LVU275
 796 0094 2B46     		mov	r3, r5
 797 0096 2246     		mov	r2, r4
 798 0098 FFF7FEFF 		bl	FSSys_EntryDel
 799              	.LVL99:
1323:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err == FS_ERR_ENTRY_NOT_DIR) {
 800              		.loc 1 1323 5 view .LVU276
ARM GAS  /tmp/cc8IPqmX.s 			page 52


1323:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err == FS_ERR_ENTRY_NOT_DIR) {
 801              		.loc 1 1323 8 is_stmt 0 view .LVU277
 802 009c B8F1060F 		cmp	r8, #6
 803 00a0 17D0     		beq	.L73
 804              	.L60:
1334:rtos/uC-FS/Source/fs_entry.c **** }
 805              		.loc 1 1334 5 is_stmt 1 view .LVU278
 806 00a2 0198     		ldr	r0, [sp, #4]
 807 00a4 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 808              	.LVL100:
 809              	.L50:
1335:rtos/uC-FS/Source/fs_entry.c **** #endif
 810              		.loc 1 1335 1 is_stmt 0 view .LVU279
 811 00a8 02B0     		add	sp, sp, #8
 812              	.LCFI14:
 813              		.cfi_remember_state
 814              		.cfi_def_cfa_offset 24
 815              		@ sp needed
 816 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 817              	.LVL101:
 818              	.L64:
 819              	.LCFI15:
 820              		.cfi_restore_state
1284:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 821              		.loc 1 1284 31 view .LVU280
 822 00ae 0023     		movs	r3, #0
 823 00b0 DEE7     		b	.L57
 824              	.LVL102:
 825              	.L70:
1286:rtos/uC-FS/Source/fs_entry.c ****             return;
 826              		.loc 1 1286 12 is_stmt 1 view .LVU281
1286:rtos/uC-FS/Source/fs_entry.c ****             return;
 827              		.loc 1 1286 19 is_stmt 0 view .LVU282
 828 00b2 40F2CB23 		movw	r3, #715
 829              	.LVL103:
1286:rtos/uC-FS/Source/fs_entry.c ****             return;
 830              		.loc 1 1286 19 view .LVU283
 831 00b6 2B80     		strh	r3, [r5]	@ movhi
1287:rtos/uC-FS/Source/fs_entry.c ****         }
 832              		.loc 1 1287 13 is_stmt 1 view .LVU284
 833 00b8 F6E7     		b	.L50
 834              	.LVL104:
 835              	.L71:
1304:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
 836              		.loc 1 1304 9 view .LVU285
 837 00ba FFF7FEFF 		bl	FSVol_ReleaseUnlock
 838              	.LVL105:
1305:rtos/uC-FS/Source/fs_entry.c ****         return;
 839              		.loc 1 1305 8 view .LVU286
1305:rtos/uC-FS/Source/fs_entry.c ****         return;
 840              		.loc 1 1305 15 is_stmt 0 view .LVU287
 841 00be 40F27D53 		movw	r3, #1405
 842 00c2 2B80     		strh	r3, [r5]	@ movhi
1306:rtos/uC-FS/Source/fs_entry.c ****     }
 843              		.loc 1 1306 9 is_stmt 1 view .LVU288
 844 00c4 F0E7     		b	.L50
 845              	.LVL106:
ARM GAS  /tmp/cc8IPqmX.s 			page 53


 846              	.L72:
1313:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
 847              		.loc 1 1313 9 view .LVU289
 848 00c6 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 849              	.LVL107:
1314:rtos/uC-FS/Source/fs_entry.c ****         return;
 850              		.loc 1 1314 8 view .LVU290
1314:rtos/uC-FS/Source/fs_entry.c ****         return;
 851              		.loc 1 1314 15 is_stmt 0 view .LVU291
 852 00ca 40F2C923 		movw	r3, #713
 853 00ce 2B80     		strh	r3, [r5]	@ movhi
1315:rtos/uC-FS/Source/fs_entry.c ****     }
 854              		.loc 1 1315 9 is_stmt 1 view .LVU292
 855 00d0 EAE7     		b	.L50
 856              	.L73:
1324:rtos/uC-FS/Source/fs_entry.c ****             *p_err  = FS_ERR_ENTRY_OPEN;
 857              		.loc 1 1324 9 view .LVU293
1324:rtos/uC-FS/Source/fs_entry.c ****             *p_err  = FS_ERR_ENTRY_OPEN;
 858              		.loc 1 1324 13 is_stmt 0 view .LVU294
 859 00d2 2A88     		ldrh	r2, [r5]
1324:rtos/uC-FS/Source/fs_entry.c ****             *p_err  = FS_ERR_ENTRY_OPEN;
 860              		.loc 1 1324 12 view .LVU295
 861 00d4 40F2C223 		movw	r3, #706
 862 00d8 9A42     		cmp	r2, r3
 863 00da 07D0     		beq	.L74
 864              	.L61:
1327:rtos/uC-FS/Source/fs_entry.c ****             *p_err  = FS_ERR_ENTRY_OPEN;
 865              		.loc 1 1327 9 is_stmt 1 view .LVU296
1327:rtos/uC-FS/Source/fs_entry.c ****             *p_err  = FS_ERR_ENTRY_OPEN;
 866              		.loc 1 1327 13 is_stmt 0 view .LVU297
 867 00dc 2B88     		ldrh	r3, [r5]
1327:rtos/uC-FS/Source/fs_entry.c ****             *p_err  = FS_ERR_ENTRY_OPEN;
 868              		.loc 1 1327 12 view .LVU298
 869 00de B3F5317F 		cmp	r3, #708
 870 00e2 DED1     		bne	.L60
1328:rtos/uC-FS/Source/fs_entry.c ****         }
 871              		.loc 1 1328 13 is_stmt 1 view .LVU299
1328:rtos/uC-FS/Source/fs_entry.c ****         }
 872              		.loc 1 1328 21 is_stmt 0 view .LVU300
 873 00e4 40F2CB23 		movw	r3, #715
 874 00e8 2B80     		strh	r3, [r5]	@ movhi
 875 00ea DAE7     		b	.L60
 876              	.L74:
1325:rtos/uC-FS/Source/fs_entry.c ****         }
 877              		.loc 1 1325 13 is_stmt 1 view .LVU301
1325:rtos/uC-FS/Source/fs_entry.c ****         }
 878              		.loc 1 1325 21 is_stmt 0 view .LVU302
 879 00ec 40F2CB23 		movw	r3, #715
 880 00f0 2B80     		strh	r3, [r5]	@ movhi
 881 00f2 F3E7     		b	.L61
 882              		.cfi_endproc
 883              	.LFE9:
 885              		.section	.text.FSEntry_QueryHandler,"ax",%progbits
 886              		.align	1
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
ARM GAS  /tmp/cc8IPqmX.s 			page 54


 890              		.fpu fpv4-sp-d16
 892              	FSEntry_QueryHandler:
 893              	.LVL108:
 894              	.LFB10:
1367:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_entry;
 895              		.loc 1 1367 1 is_stmt 1 view -0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 8
 898              		@ frame_needed = 0, uses_anonymous_args = 0
1367:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_entry;
 899              		.loc 1 1367 1 is_stmt 0 view .LVU304
 900 0000 30B5     		push	{r4, r5, lr}
 901              	.LCFI16:
 902              		.cfi_def_cfa_offset 12
 903              		.cfi_offset 4, -12
 904              		.cfi_offset 5, -8
 905              		.cfi_offset 14, -4
 906 0002 83B0     		sub	sp, sp, #12
 907              	.LCFI17:
 908              		.cfi_def_cfa_offset 24
 909 0004 0C46     		mov	r4, r1
 910 0006 1546     		mov	r5, r2
1368:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL    *p_vol;
 911              		.loc 1 1368 5 is_stmt 1 view .LVU305
1369:rtos/uC-FS/Source/fs_entry.c **** 
 912              		.loc 1 1369 5 view .LVU306
1373:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 913              		.loc 1 1373 5 view .LVU307
1373:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 914              		.loc 1 1373 18 is_stmt 0 view .LVU308
 915 0008 01A9     		add	r1, sp, #4
 916              	.LVL109:
1373:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 917              		.loc 1 1373 18 view .LVU309
 918 000a FFF7FEFF 		bl	FSEntry_NameParseChk
 919              	.LVL110:
1373:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 920              		.loc 1 1373 18 view .LVU310
 921 000e 0146     		mov	r1, r0
 922              	.LVL111:
1376:rtos/uC-FS/Source/fs_entry.c ****     if (( p_vol      == (FS_VOL   *)0) ||                       /* Rtn err if no vol found ...     
 923              		.loc 1 1376 5 is_stmt 1 view .LVU311
1377:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
 924              		.loc 1 1377 5 view .LVU312
1377:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
 925              		.loc 1 1377 22 is_stmt 0 view .LVU313
 926 0010 0198     		ldr	r0, [sp, #4]
 927              	.LVL112:
1377:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
 928              		.loc 1 1377 8 view .LVU314
 929 0012 58B1     		cbz	r0, .L75
1377:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry == (CPU_CHAR *)0) ||                       /*                         ... or i
 930              		.loc 1 1377 40 discriminator 1 view .LVU315
 931 0014 51B1     		cbz	r1, .L75
1379:rtos/uC-FS/Source/fs_entry.c ****         return;
 932              		.loc 1 1379 10 view .LVU316
 933 0016 2B88     		ldrh	r3, [r5]
ARM GAS  /tmp/cc8IPqmX.s 			page 55


1378:rtos/uC-FS/Source/fs_entry.c ****         (*p_err      !=  FS_ERR_NONE)) {                        /*                         ... or i
 934              		.loc 1 1378 40 view .LVU317
 935 0018 43B9     		cbnz	r3, .L75
1386:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 936              		.loc 1 1386 5 is_stmt 1 view .LVU318
1386:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 937              		.loc 1 1386 19 is_stmt 0 view .LVU319
 938 001a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
1386:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 939              		.loc 1 1386 8 view .LVU320
 940 001c 43B1     		cbz	r3, .L80
1399:rtos/uC-FS/Source/fs_entry.c ****                      name_entry,
 941              		.loc 1 1399 5 is_stmt 1 view .LVU321
 942 001e 2B46     		mov	r3, r5
 943 0020 2246     		mov	r2, r4
 944 0022 FFF7FEFF 		bl	FSSys_EntryQuery
 945              	.LVL113:
1407:rtos/uC-FS/Source/fs_entry.c **** }
 946              		.loc 1 1407 5 view .LVU322
 947 0026 0198     		ldr	r0, [sp, #4]
 948 0028 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 949              	.LVL114:
 950              	.L75:
1408:rtos/uC-FS/Source/fs_entry.c **** 
 951              		.loc 1 1408 1 is_stmt 0 view .LVU323
 952 002c 03B0     		add	sp, sp, #12
 953              	.LCFI18:
 954              		.cfi_remember_state
 955              		.cfi_def_cfa_offset 12
 956              		@ sp needed
 957 002e 30BD     		pop	{r4, r5, pc}
 958              	.LVL115:
 959              	.L80:
 960              	.LCFI19:
 961              		.cfi_restore_state
1387:rtos/uC-FS/Source/fs_entry.c ****         p_info->Attrib         = FS_ENTRY_ATTRIB_DIR | FS_ENTRY_ATTRIB_DIR_ROOT;
 962              		.loc 1 1387 9 is_stmt 1 view .LVU324
 963 0030 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 964              	.LVL116:
1388:rtos/uC-FS/Source/fs_entry.c ****         p_info->Size           = 0u;
 965              		.loc 1 1388 9 view .LVU325
1388:rtos/uC-FS/Source/fs_entry.c ****         p_info->Size           = 0u;
 966              		.loc 1 1388 32 is_stmt 0 view .LVU326
 967 0034 C023     		movs	r3, #192
 968 0036 2360     		str	r3, [r4]
1389:rtos/uC-FS/Source/fs_entry.c ****         p_info->DateTimeCreate = FS_TIME_TS_INVALID;
 969              		.loc 1 1389 9 is_stmt 1 view .LVU327
1389:rtos/uC-FS/Source/fs_entry.c ****         p_info->DateTimeCreate = FS_TIME_TS_INVALID;
 970              		.loc 1 1389 32 is_stmt 0 view .LVU328
 971 0038 0023     		movs	r3, #0
 972 003a 6360     		str	r3, [r4, #4]
1390:rtos/uC-FS/Source/fs_entry.c ****         p_info->DateAccess     = FS_TIME_TS_INVALID;
 973              		.loc 1 1390 9 is_stmt 1 view .LVU329
1390:rtos/uC-FS/Source/fs_entry.c ****         p_info->DateAccess     = FS_TIME_TS_INVALID;
 974              		.loc 1 1390 32 is_stmt 0 view .LVU330
 975 003c 4FF0FF32 		mov	r2, #-1
 976 0040 A260     		str	r2, [r4, #8]
ARM GAS  /tmp/cc8IPqmX.s 			page 56


1391:rtos/uC-FS/Source/fs_entry.c ****         p_info->DateTimeWr     = FS_TIME_TS_INVALID;
 977              		.loc 1 1391 9 is_stmt 1 view .LVU331
1391:rtos/uC-FS/Source/fs_entry.c ****         p_info->DateTimeWr     = FS_TIME_TS_INVALID;
 978              		.loc 1 1391 32 is_stmt 0 view .LVU332
 979 0042 E260     		str	r2, [r4, #12]
1392:rtos/uC-FS/Source/fs_entry.c ****         p_info->BlkCnt         = 0u;
 980              		.loc 1 1392 9 is_stmt 1 view .LVU333
1392:rtos/uC-FS/Source/fs_entry.c ****         p_info->BlkCnt         = 0u;
 981              		.loc 1 1392 32 is_stmt 0 view .LVU334
 982 0044 2261     		str	r2, [r4, #16]
1393:rtos/uC-FS/Source/fs_entry.c ****         p_info->BlkSize        = 0u;
 983              		.loc 1 1393 9 is_stmt 1 view .LVU335
1393:rtos/uC-FS/Source/fs_entry.c ****         p_info->BlkSize        = 0u;
 984              		.loc 1 1393 32 is_stmt 0 view .LVU336
 985 0046 6361     		str	r3, [r4, #20]
1394:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NONE;
 986              		.loc 1 1394 9 is_stmt 1 view .LVU337
1394:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NONE;
 987              		.loc 1 1394 32 is_stmt 0 view .LVU338
 988 0048 A361     		str	r3, [r4, #24]
1395:rtos/uC-FS/Source/fs_entry.c ****         return;
 989              		.loc 1 1395 8 is_stmt 1 view .LVU339
1395:rtos/uC-FS/Source/fs_entry.c ****         return;
 990              		.loc 1 1395 15 is_stmt 0 view .LVU340
 991 004a 2B80     		strh	r3, [r5]	@ movhi
1396:rtos/uC-FS/Source/fs_entry.c ****     }
 992              		.loc 1 1396 9 is_stmt 1 view .LVU341
 993 004c EEE7     		b	.L75
 994              		.cfi_endproc
 995              	.LFE10:
 997              		.section	.text.FSEntry_NameParseChkEx,"ax",%progbits
 998              		.align	1
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv4-sp-d16
 1004              	FSEntry_NameParseChkEx:
 1005              	.LVL117:
 1006              	.LFB14:
1901:rtos/uC-FS/Source/fs_entry.c **** 
1902:rtos/uC-FS/Source/fs_entry.c **** 
1903:rtos/uC-FS/Source/fs_entry.c **** /*
1904:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1905:rtos/uC-FS/Source/fs_entry.c **** *                                      FSEntry_NameParseChkEx()
1906:rtos/uC-FS/Source/fs_entry.c **** *
1907:rtos/uC-FS/Source/fs_entry.c **** * Description : Parse full entry name & get volume pointer & pointer to entry name.
1908:rtos/uC-FS/Source/fs_entry.c **** *
1909:rtos/uC-FS/Source/fs_entry.c **** * Argument(s) : name_full   Name of the entry.
1910:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1911:rtos/uC-FS/Source/fs_entry.c **** *
1912:rtos/uC-FS/Source/fs_entry.c **** *               name_vol    String that will receive the name of the volume.
1913:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1914:rtos/uC-FS/Source/fs_entry.c **** *
1915:rtos/uC-FS/Source/fs_entry.c **** *               p_dflt      Pointer to variable that will receive default volume indicator :
1916:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1917:rtos/uC-FS/Source/fs_entry.c **** *
1918:rtos/uC-FS/Source/fs_entry.c **** *                               DEF_YES, volume is default.
ARM GAS  /tmp/cc8IPqmX.s 			page 57


1919:rtos/uC-FS/Source/fs_entry.c **** *                               DEF_NO,  volume is not default.
1920:rtos/uC-FS/Source/fs_entry.c **** *
1921:rtos/uC-FS/Source/fs_entry.c **** *               pp_vol      Pointer to volume pointer which will hold pointer to volume.
1922:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1923:rtos/uC-FS/Source/fs_entry.c **** *
1924:rtos/uC-FS/Source/fs_entry.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1925:rtos/uC-FS/Source/fs_entry.c **** *               ----------  Argument validated by caller.
1926:rtos/uC-FS/Source/fs_entry.c **** *
1927:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_INVALID          Entry name could not be parsed, lacks 
1928:rtos/uC-FS/Source/fs_entry.c **** *                                                                initial path separator character o
1929:rtos/uC-FS/Source/fs_entry.c **** *                                                                includes an invalid volume name.
1930:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_NAME_PATH_TOO_LONG    Entry name is too long.
1931:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_OPEN          Volume not opened.
1932:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_VOL_NOT_MOUNTED       Volume not mounted.
1933:rtos/uC-FS/Source/fs_entry.c **** *                               FS_ERR_OS_LOCK               OS Lock NOT acquired.
1934:rtos/uC-FS/Source/fs_entry.c **** *
1935:rtos/uC-FS/Source/fs_entry.c **** * Return(s)   : Pointer to start of entry name.
1936:rtos/uC-FS/Source/fs_entry.c **** *
1937:rtos/uC-FS/Source/fs_entry.c **** * Note(s)     : (1) If the volume name could not be parsed, the volume does not exist, or no entry 
1938:rtos/uC-FS/Source/fs_entry.c **** *                   is specified, then NULL pointers are returned for BOTH the entry name & the vol
1939:rtos/uC-FS/Source/fs_entry.c **** *                   Otherwise, both the entry name & volume should be valid pointers.
1940:rtos/uC-FS/Source/fs_entry.c **** ***************************************************************************************************
1941:rtos/uC-FS/Source/fs_entry.c **** */
1942:rtos/uC-FS/Source/fs_entry.c **** 
1943:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1944:rtos/uC-FS/Source/fs_entry.c **** static  CPU_CHAR  *FSEntry_NameParseChkEx (CPU_CHAR      *name_full,
1945:rtos/uC-FS/Source/fs_entry.c ****                                            CPU_CHAR      *name_vol,
1946:rtos/uC-FS/Source/fs_entry.c ****                                            CPU_BOOLEAN   *p_dflt,
1947:rtos/uC-FS/Source/fs_entry.c ****                                            FS_VOL       **pp_vol,
1948:rtos/uC-FS/Source/fs_entry.c ****                                            FS_ERR        *p_err)
1949:rtos/uC-FS/Source/fs_entry.c **** {
 1007              		.loc 1 1949 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 4, pretend = 0, frame = 16
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011              		.loc 1 1949 1 is_stmt 0 view .LVU343
 1012 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1013              	.LCFI20:
 1014              		.cfi_def_cfa_offset 28
 1015              		.cfi_offset 4, -28
 1016              		.cfi_offset 5, -24
 1017              		.cfi_offset 6, -20
 1018              		.cfi_offset 7, -16
 1019              		.cfi_offset 8, -12
 1020              		.cfi_offset 9, -8
 1021              		.cfi_offset 14, -4
 1022 0004 85B0     		sub	sp, sp, #20
 1023              	.LCFI21:
 1024              		.cfi_def_cfa_offset 48
 1025 0006 8846     		mov	r8, r1
 1026 0008 1546     		mov	r5, r2
 1027 000a 1F46     		mov	r7, r3
 1028 000c 0C9E     		ldr	r6, [sp, #48]
1950:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T   name_entry_len;
 1029              		.loc 1 1950 5 is_stmt 1 view .LVU344
1951:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T   file_name_len;
 1030              		.loc 1 1951 5 view .LVU345
ARM GAS  /tmp/cc8IPqmX.s 			page 58


1952:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *name_entry;
 1031              		.loc 1 1952 5 view .LVU346
1953:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *file_name;
 1032              		.loc 1 1953 5 view .LVU347
1954:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL      *p_vol_temp;
 1033              		.loc 1 1954 5 view .LVU348
1955:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     name_vol_temp[FS_CFG_MAX_VOL_NAME_LEN + 1u];
 1034              		.loc 1 1955 5 view .LVU349
1956:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  vol_lock_ok;
 1035              		.loc 1 1956 5 view .LVU350
1957:rtos/uC-FS/Source/fs_entry.c **** 
1958:rtos/uC-FS/Source/fs_entry.c **** 
1959:rtos/uC-FS/Source/fs_entry.c ****    *pp_vol     = (FS_VOL *)0;
 1036              		.loc 1 1959 4 view .LVU351
 1037              		.loc 1 1959 16 is_stmt 0 view .LVU352
 1038 000e 0023     		movs	r3, #0
 1039              	.LVL118:
 1040              		.loc 1 1959 16 view .LVU353
 1041 0010 3B60     		str	r3, [r7]
1960:rtos/uC-FS/Source/fs_entry.c ****    *p_dflt     =  DEF_NO;
 1042              		.loc 1 1960 4 is_stmt 1 view .LVU354
 1043              		.loc 1 1960 16 is_stmt 0 view .LVU355
 1044 0012 1370     		strb	r3, [r2]
1961:rtos/uC-FS/Source/fs_entry.c ****     name_entry =  FS_PathParse(name_full,
 1045              		.loc 1 1961 5 is_stmt 1 view .LVU356
 1046              		.loc 1 1961 19 is_stmt 0 view .LVU357
 1047 0014 3246     		mov	r2, r6
 1048              	.LVL119:
 1049              		.loc 1 1961 19 view .LVU358
 1050 0016 01A9     		add	r1, sp, #4
 1051              	.LVL120:
 1052              		.loc 1 1961 19 view .LVU359
 1053 0018 FFF7FEFF 		bl	FS_PathParse
 1054              	.LVL121:
1962:rtos/uC-FS/Source/fs_entry.c ****                                name_vol_temp,
1963:rtos/uC-FS/Source/fs_entry.c ****                                p_err);
1964:rtos/uC-FS/Source/fs_entry.c ****     if (*p_err != FS_ERR_NONE) {
 1055              		.loc 1 1964 5 is_stmt 1 view .LVU360
 1056              		.loc 1 1964 9 is_stmt 0 view .LVU361
 1057 001c 3388     		ldrh	r3, [r6]
 1058              		.loc 1 1964 8 view .LVU362
 1059 001e 002B     		cmp	r3, #0
 1060 0020 40F08E80 		bne	.L99
 1061 0024 0446     		mov	r4, r0
1965:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
1966:rtos/uC-FS/Source/fs_entry.c ****     }
1967:rtos/uC-FS/Source/fs_entry.c **** 
1968:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry == (CPU_CHAR *)0) {                          /* If name could not be parsed ... 
 1062              		.loc 1 1968 5 is_stmt 1 view .LVU363
 1063              		.loc 1 1968 8 is_stmt 0 view .LVU364
 1064 0026 0028     		cmp	r0, #0
 1065 0028 46D0     		beq	.L104
1969:rtos/uC-FS/Source/fs_entry.c ****         *p_err  = FS_ERR_NAME_INVALID;
1970:rtos/uC-FS/Source/fs_entry.c ****          return ((CPU_CHAR *)0);                                /* ... rtn NULL vol & file name.   
1971:rtos/uC-FS/Source/fs_entry.c ****     }
1972:rtos/uC-FS/Source/fs_entry.c **** 
1973:rtos/uC-FS/Source/fs_entry.c ****     if (*name_entry != FS_CHAR_PATH_SEP) {                      /* Require init path sep char.     
ARM GAS  /tmp/cc8IPqmX.s 			page 59


 1066              		.loc 1 1973 5 is_stmt 1 view .LVU365
 1067              		.loc 1 1973 9 is_stmt 0 view .LVU366
 1068 002a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1069              		.loc 1 1973 8 view .LVU367
 1070 002c 5C2B     		cmp	r3, #92
 1071 002e 47D1     		bne	.L105
1974:rtos/uC-FS/Source/fs_entry.c ****         *p_err =  FS_ERR_NAME_INVALID;
1975:rtos/uC-FS/Source/fs_entry.c ****          return ((CPU_CHAR *)0);
1976:rtos/uC-FS/Source/fs_entry.c ****     }
1977:rtos/uC-FS/Source/fs_entry.c ****     name_entry++;                                               /* Ignore  init path sep char.     
 1072              		.loc 1 1977 5 is_stmt 1 view .LVU368
 1073              		.loc 1 1977 15 is_stmt 0 view .LVU369
 1074 0030 0134     		adds	r4, r4, #1
 1075              	.LVL122:
1978:rtos/uC-FS/Source/fs_entry.c **** 
1979:rtos/uC-FS/Source/fs_entry.c ****     name_entry_len = Str_Len_N(name_entry, FS_CFG_MAX_PATH_NAME_LEN + 1u);
 1076              		.loc 1 1979 5 is_stmt 1 view .LVU370
 1077              		.loc 1 1979 22 is_stmt 0 view .LVU371
 1078 0032 40F20511 		movw	r1, #261
 1079 0036 2046     		mov	r0, r4
 1080 0038 FFF7FEFF 		bl	Str_Len_N
 1081              	.LVL123:
 1082 003c 8146     		mov	r9, r0
 1083              	.LVL124:
1980:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry_len > FS_CFG_MAX_PATH_NAME_LEN) {            /* Rtn err if file name is too long
 1084              		.loc 1 1980 5 is_stmt 1 view .LVU372
 1085              		.loc 1 1980 8 is_stmt 0 view .LVU373
 1086 003e B0F5827F 		cmp	r0, #260
 1087 0042 45D8     		bhi	.L106
1981:rtos/uC-FS/Source/fs_entry.c ****        *p_err =  FS_ERR_NAME_PATH_TOO_LONG;
1982:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
1983:rtos/uC-FS/Source/fs_entry.c ****     }
1984:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Parse name to evaluate length of
1985:rtos/uC-FS/Source/fs_entry.c ****     file_name     = Str_Char_Last_N(name_entry, FS_CFG_MAX_PATH_NAME_LEN,      (CPU_CHAR)ASCII_CHAR
 1088              		.loc 1 1985 5 is_stmt 1 view .LVU374
 1089              		.loc 1 1985 21 is_stmt 0 view .LVU375
 1090 0044 5C22     		movs	r2, #92
 1091 0046 4FF48271 		mov	r1, #260
 1092 004a 2046     		mov	r0, r4
 1093              	.LVL125:
 1094              		.loc 1 1985 21 view .LVU376
 1095 004c FFF7FEFF 		bl	Str_Char_Last_N
 1096              	.LVL126:
1986:rtos/uC-FS/Source/fs_entry.c ****     file_name_len = Str_Len_N(      file_name,  FS_CFG_MAX_FILE_NAME_LEN + 1u);
 1097              		.loc 1 1986 5 is_stmt 1 view .LVU377
 1098              		.loc 1 1986 21 is_stmt 0 view .LVU378
 1099 0050 4FF48071 		mov	r1, #256
 1100 0054 FFF7FEFF 		bl	Str_Len_N
 1101              	.LVL127:
1987:rtos/uC-FS/Source/fs_entry.c ****     if (file_name_len == 0u) {
 1102              		.loc 1 1987 5 is_stmt 1 view .LVU379
 1103              		.loc 1 1987 8 is_stmt 0 view .LVU380
 1104 0058 00B1     		cbz	r0, .L86
1986:rtos/uC-FS/Source/fs_entry.c ****     file_name_len = Str_Len_N(      file_name,  FS_CFG_MAX_FILE_NAME_LEN + 1u);
 1105              		.loc 1 1986 21 view .LVU381
 1106 005a 8146     		mov	r9, r0
 1107              	.LVL128:
ARM GAS  /tmp/cc8IPqmX.s 			page 60


 1108              	.L86:
1988:rtos/uC-FS/Source/fs_entry.c ****         file_name_len = name_entry_len;
1989:rtos/uC-FS/Source/fs_entry.c ****     }
1990:rtos/uC-FS/Source/fs_entry.c **** 
1991:rtos/uC-FS/Source/fs_entry.c ****     if (file_name_len > FS_CFG_MAX_FILE_NAME_LEN) {
 1109              		.loc 1 1991 5 is_stmt 1 view .LVU382
 1110              		.loc 1 1991 8 is_stmt 0 view .LVU383
 1111 005c B9F1FF0F 		cmp	r9, #255
 1112 0060 3BD8     		bhi	.L107
1992:rtos/uC-FS/Source/fs_entry.c ****         *p_err = FS_ERR_NAME_BASE_TOO_LONG;                     /* Rtn err if base name is too long
1993:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
1994:rtos/uC-FS/Source/fs_entry.c ****     }
1995:rtos/uC-FS/Source/fs_entry.c **** 
1996:rtos/uC-FS/Source/fs_entry.c ****                                                                 /* Acquire ref to vol.             
1997:rtos/uC-FS/Source/fs_entry.c ****     p_vol_temp = (name_vol_temp[0] == (CPU_CHAR)ASCII_CHAR_NULL) ? FSVol_AcquireDflt()
 1113              		.loc 1 1997 5 is_stmt 1 view .LVU384
 1114              		.loc 1 1997 32 is_stmt 0 view .LVU385
 1115 0062 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1998:rtos/uC-FS/Source/fs_entry.c ****                                                                  : FSVol_Acquire(name_vol_temp, p_e
 1116              		.loc 1 1998 66 view .LVU386
 1117 0066 002B     		cmp	r3, #0
 1118 0068 3CD1     		bne	.L88
1997:rtos/uC-FS/Source/fs_entry.c ****                                                                  : FSVol_Acquire(name_vol_temp, p_e
 1119              		.loc 1 1997 68 view .LVU387
 1120 006a FFF7FEFF 		bl	FSVol_AcquireDflt
 1121              	.LVL129:
 1122 006e 8146     		mov	r9, r0
 1123              	.LVL130:
 1124              	.L89:
1999:rtos/uC-FS/Source/fs_entry.c **** 
2000:rtos/uC-FS/Source/fs_entry.c ****     if (p_vol_temp == (FS_VOL *)0) {
 1125              		.loc 1 2000 5 is_stmt 1 discriminator 1 view .LVU388
 1126              		.loc 1 2000 8 is_stmt 0 discriminator 1 view .LVU389
 1127 0070 B9F1000F 		cmp	r9, #0
 1128 0074 3CD0     		beq	.L108
2001:rtos/uC-FS/Source/fs_entry.c ****        *p_err =  FS_ERR_NAME_INVALID;
2002:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
2003:rtos/uC-FS/Source/fs_entry.c ****     }
2004:rtos/uC-FS/Source/fs_entry.c **** 
2005:rtos/uC-FS/Source/fs_entry.c ****     vol_lock_ok = FSVol_Lock(p_vol_temp);                       /* Lock vol.                       
 1129              		.loc 1 2005 5 is_stmt 1 view .LVU390
 1130              		.loc 1 2005 19 is_stmt 0 view .LVU391
 1131 0076 4846     		mov	r0, r9
 1132 0078 FFF7FEFF 		bl	FSVol_Lock
 1133              	.LVL131:
2006:rtos/uC-FS/Source/fs_entry.c ****     if (vol_lock_ok == DEF_NO) {
 1134              		.loc 1 2006 5 is_stmt 1 view .LVU392
 1135              		.loc 1 2006 8 is_stmt 0 view .LVU393
 1136 007c 0028     		cmp	r0, #0
 1137 007e 3CD0     		beq	.L109
2007:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_OS_LOCK;
2008:rtos/uC-FS/Source/fs_entry.c ****         FSVol_Release(p_vol_temp);
2009:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
2010:rtos/uC-FS/Source/fs_entry.c ****     }
2011:rtos/uC-FS/Source/fs_entry.c **** 
2012:rtos/uC-FS/Source/fs_entry.c ****     (void)FSVol_RefreshLocked(p_vol_temp, p_err);               /* Refresh vol.                    
 1138              		.loc 1 2012 5 is_stmt 1 view .LVU394
ARM GAS  /tmp/cc8IPqmX.s 			page 61


 1139              		.loc 1 2012 11 is_stmt 0 view .LVU395
 1140 0080 3146     		mov	r1, r6
 1141 0082 4846     		mov	r0, r9
 1142              	.LVL132:
 1143              		.loc 1 2012 11 view .LVU396
 1144 0084 FFF7FEFF 		bl	FSVol_RefreshLocked
 1145              	.LVL133:
2013:rtos/uC-FS/Source/fs_entry.c **** 
2014:rtos/uC-FS/Source/fs_entry.c ****     switch (p_vol_temp->State) {
 1146              		.loc 1 2014 5 is_stmt 1 view .LVU397
 1147              		.loc 1 2014 23 is_stmt 0 view .LVU398
 1148 0088 B9F80030 		ldrh	r3, [r9]
 1149              		.loc 1 2014 5 view .LVU399
 1150 008c 042B     		cmp	r3, #4
 1151 008e 3CD9     		bls	.L110
 1152 0090 052B     		cmp	r3, #5
 1153 0092 3CD1     		bne	.L94
2015:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_OPEN:                                 /* Rtn err if vol is not mounted.  
2016:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_PRESENT:
2017:rtos/uC-FS/Source/fs_entry.c ****              FSVol_ReleaseUnlock(p_vol_temp);
2018:rtos/uC-FS/Source/fs_entry.c ****              return ((CPU_CHAR *)0);
2019:rtos/uC-FS/Source/fs_entry.c **** 
2020:rtos/uC-FS/Source/fs_entry.c **** 
2021:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_MOUNTED:
2022:rtos/uC-FS/Source/fs_entry.c ****              if (*p_err != FS_ERR_NONE) {
 1154              		.loc 1 2022 14 is_stmt 1 view .LVU400
 1155              		.loc 1 2022 18 is_stmt 0 view .LVU401
 1156 0094 3388     		ldrh	r3, [r6]
 1157              		.loc 1 2022 17 view .LVU402
 1158 0096 002B     		cmp	r3, #0
 1159 0098 54D1     		bne	.L111
2023:rtos/uC-FS/Source/fs_entry.c ****                  return (DEF_NULL);
2024:rtos/uC-FS/Source/fs_entry.c ****              }
2025:rtos/uC-FS/Source/fs_entry.c ****              break;
 1160              		.loc 1 2025 14 is_stmt 1 view .LVU403
2026:rtos/uC-FS/Source/fs_entry.c **** 
2027:rtos/uC-FS/Source/fs_entry.c **** 
2028:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_CLOSED:
2029:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_CLOSING:
2030:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_OPENING:                              /* Rtn err if vol is not open.     
2031:rtos/uC-FS/Source/fs_entry.c ****         default:
2032:rtos/uC-FS/Source/fs_entry.c ****              FSVol_ReleaseUnlock(p_vol_temp);
2033:rtos/uC-FS/Source/fs_entry.c ****              return ((CPU_CHAR *)0);
2034:rtos/uC-FS/Source/fs_entry.c ****     }
2035:rtos/uC-FS/Source/fs_entry.c **** 
2036:rtos/uC-FS/Source/fs_entry.c **** 
2037:rtos/uC-FS/Source/fs_entry.c ****     if (name_vol_temp[0] == (CPU_CHAR)ASCII_CHAR_NULL) {        /* Get vol name.                   
 1161              		.loc 1 2037 5 view .LVU404
 1162              		.loc 1 2037 22 is_stmt 0 view .LVU405
 1163 009a 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1164              		.loc 1 2037 8 view .LVU406
 1165 009e 002B     		cmp	r3, #0
 1166 00a0 3FD1     		bne	.L97
2038:rtos/uC-FS/Source/fs_entry.c ****         (void)Str_Copy_N(name_vol, p_vol_temp->Name, FS_CFG_MAX_VOL_NAME_LEN);
 1167              		.loc 1 2038 9 is_stmt 1 view .LVU407
 1168              		.loc 1 2038 15 is_stmt 0 view .LVU408
 1169 00a2 0A22     		movs	r2, #10
ARM GAS  /tmp/cc8IPqmX.s 			page 62


 1170 00a4 09F11001 		add	r1, r9, #16
 1171 00a8 4046     		mov	r0, r8
 1172 00aa FFF7FEFF 		bl	Str_Copy_N
 1173              	.LVL134:
2039:rtos/uC-FS/Source/fs_entry.c ****        *p_dflt = DEF_YES;
 1174              		.loc 1 2039 8 is_stmt 1 view .LVU409
 1175              		.loc 1 2039 16 is_stmt 0 view .LVU410
 1176 00ae 0123     		movs	r3, #1
 1177 00b0 2B70     		strb	r3, [r5]
 1178              	.L98:
2040:rtos/uC-FS/Source/fs_entry.c ****     } else {
2041:rtos/uC-FS/Source/fs_entry.c ****         (void)Str_Copy_N(name_vol, name_vol_temp, FS_CFG_MAX_VOL_NAME_LEN);
2042:rtos/uC-FS/Source/fs_entry.c ****        *p_dflt = FSVol_IsDflt(name_vol, p_err);
2043:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err != FS_ERR_NONE) {
2044:rtos/uC-FS/Source/fs_entry.c ****             return ((CPU_CHAR *)0);
2045:rtos/uC-FS/Source/fs_entry.c ****         }
2046:rtos/uC-FS/Source/fs_entry.c ****     }
2047:rtos/uC-FS/Source/fs_entry.c **** 
2048:rtos/uC-FS/Source/fs_entry.c ****    *pp_vol = p_vol_temp;
 1179              		.loc 1 2048 4 is_stmt 1 view .LVU411
 1180              		.loc 1 2048 12 is_stmt 0 view .LVU412
 1181 00b2 C7F80090 		str	r9, [r7]
2049:rtos/uC-FS/Source/fs_entry.c ****     return (name_entry);
 1182              		.loc 1 2049 5 is_stmt 1 view .LVU413
 1183              		.loc 1 2049 12 is_stmt 0 view .LVU414
 1184 00b6 07E0     		b	.L81
 1185              	.LVL135:
 1186              	.L104:
1969:rtos/uC-FS/Source/fs_entry.c ****          return ((CPU_CHAR *)0);                                /* ... rtn NULL vol & file name.   
 1187              		.loc 1 1969 9 is_stmt 1 view .LVU415
1969:rtos/uC-FS/Source/fs_entry.c ****          return ((CPU_CHAR *)0);                                /* ... rtn NULL vol & file name.   
 1188              		.loc 1 1969 17 is_stmt 0 view .LVU416
 1189 00b8 40F28733 		movw	r3, #903
 1190 00bc 3380     		strh	r3, [r6]	@ movhi
1970:rtos/uC-FS/Source/fs_entry.c ****     }
 1191              		.loc 1 1970 10 is_stmt 1 view .LVU417
1970:rtos/uC-FS/Source/fs_entry.c ****     }
 1192              		.loc 1 1970 17 is_stmt 0 view .LVU418
 1193 00be 03E0     		b	.L81
 1194              	.L105:
1974:rtos/uC-FS/Source/fs_entry.c ****          return ((CPU_CHAR *)0);
 1195              		.loc 1 1974 9 is_stmt 1 view .LVU419
1974:rtos/uC-FS/Source/fs_entry.c ****          return ((CPU_CHAR *)0);
 1196              		.loc 1 1974 16 is_stmt 0 view .LVU420
 1197 00c0 40F28733 		movw	r3, #903
 1198 00c4 3380     		strh	r3, [r6]	@ movhi
1975:rtos/uC-FS/Source/fs_entry.c ****     }
 1199              		.loc 1 1975 10 is_stmt 1 view .LVU421
1975:rtos/uC-FS/Source/fs_entry.c ****     }
 1200              		.loc 1 1975 17 is_stmt 0 view .LVU422
 1201 00c6 0024     		movs	r4, #0
 1202              	.LVL136:
 1203              	.L81:
2050:rtos/uC-FS/Source/fs_entry.c **** }
 1204              		.loc 1 2050 1 view .LVU423
 1205 00c8 2046     		mov	r0, r4
 1206 00ca 05B0     		add	sp, sp, #20
ARM GAS  /tmp/cc8IPqmX.s 			page 63


 1207              	.LCFI22:
 1208              		.cfi_remember_state
 1209              		.cfi_def_cfa_offset 28
 1210              		@ sp needed
 1211 00cc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1212              	.LVL137:
 1213              	.L106:
 1214              	.LCFI23:
 1215              		.cfi_restore_state
1981:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 1216              		.loc 1 1981 8 is_stmt 1 view .LVU424
1981:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 1217              		.loc 1 1981 15 is_stmt 0 view .LVU425
 1218 00d0 40F28A33 		movw	r3, #906
 1219 00d4 3380     		strh	r3, [r6]	@ movhi
1982:rtos/uC-FS/Source/fs_entry.c ****     }
 1220              		.loc 1 1982 9 is_stmt 1 view .LVU426
1982:rtos/uC-FS/Source/fs_entry.c ****     }
 1221              		.loc 1 1982 16 is_stmt 0 view .LVU427
 1222 00d6 0024     		movs	r4, #0
 1223              	.LVL138:
1982:rtos/uC-FS/Source/fs_entry.c ****     }
 1224              		.loc 1 1982 16 view .LVU428
 1225 00d8 F6E7     		b	.L81
 1226              	.LVL139:
 1227              	.L107:
1992:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 1228              		.loc 1 1992 9 is_stmt 1 view .LVU429
1992:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 1229              		.loc 1 1992 16 is_stmt 0 view .LVU430
 1230 00da 4FF46173 		mov	r3, #900
 1231 00de 3380     		strh	r3, [r6]	@ movhi
1993:rtos/uC-FS/Source/fs_entry.c ****     }
 1232              		.loc 1 1993 9 is_stmt 1 view .LVU431
1993:rtos/uC-FS/Source/fs_entry.c ****     }
 1233              		.loc 1 1993 16 is_stmt 0 view .LVU432
 1234 00e0 0024     		movs	r4, #0
 1235              	.LVL140:
1993:rtos/uC-FS/Source/fs_entry.c ****     }
 1236              		.loc 1 1993 16 view .LVU433
 1237 00e2 F1E7     		b	.L81
 1238              	.LVL141:
 1239              	.L88:
1998:rtos/uC-FS/Source/fs_entry.c **** 
 1240              		.loc 1 1998 68 discriminator 1 view .LVU434
 1241 00e4 3146     		mov	r1, r6
 1242 00e6 01A8     		add	r0, sp, #4
 1243 00e8 FFF7FEFF 		bl	FSVol_Acquire
 1244              	.LVL142:
 1245 00ec 8146     		mov	r9, r0
 1246              	.LVL143:
1998:rtos/uC-FS/Source/fs_entry.c **** 
 1247              		.loc 1 1998 68 discriminator 1 view .LVU435
 1248 00ee BFE7     		b	.L89
 1249              	.LVL144:
 1250              	.L108:
2001:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
ARM GAS  /tmp/cc8IPqmX.s 			page 64


 1251              		.loc 1 2001 8 is_stmt 1 view .LVU436
2001:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 1252              		.loc 1 2001 15 is_stmt 0 view .LVU437
 1253 00f0 40F28733 		movw	r3, #903
 1254 00f4 3380     		strh	r3, [r6]	@ movhi
2002:rtos/uC-FS/Source/fs_entry.c ****     }
 1255              		.loc 1 2002 9 is_stmt 1 view .LVU438
2002:rtos/uC-FS/Source/fs_entry.c ****     }
 1256              		.loc 1 2002 16 is_stmt 0 view .LVU439
 1257 00f6 4C46     		mov	r4, r9
 1258              	.LVL145:
2002:rtos/uC-FS/Source/fs_entry.c ****     }
 1259              		.loc 1 2002 16 view .LVU440
 1260 00f8 E6E7     		b	.L81
 1261              	.LVL146:
 1262              	.L109:
2007:rtos/uC-FS/Source/fs_entry.c ****         FSVol_Release(p_vol_temp);
 1263              		.loc 1 2007 8 is_stmt 1 view .LVU441
2007:rtos/uC-FS/Source/fs_entry.c ****         FSVol_Release(p_vol_temp);
 1264              		.loc 1 2007 15 is_stmt 0 view .LVU442
 1265 00fa 40F2DD53 		movw	r3, #1501
 1266 00fe 3380     		strh	r3, [r6]	@ movhi
2008:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 1267              		.loc 1 2008 9 is_stmt 1 view .LVU443
 1268 0100 4846     		mov	r0, r9
 1269              	.LVL147:
2008:rtos/uC-FS/Source/fs_entry.c ****         return ((CPU_CHAR *)0);
 1270              		.loc 1 2008 9 is_stmt 0 view .LVU444
 1271 0102 FFF7FEFF 		bl	FSVol_Release
 1272              	.LVL148:
2009:rtos/uC-FS/Source/fs_entry.c ****     }
 1273              		.loc 1 2009 9 is_stmt 1 view .LVU445
2009:rtos/uC-FS/Source/fs_entry.c ****     }
 1274              		.loc 1 2009 16 is_stmt 0 view .LVU446
 1275 0106 0024     		movs	r4, #0
 1276              	.LVL149:
2009:rtos/uC-FS/Source/fs_entry.c ****     }
 1277              		.loc 1 2009 16 view .LVU447
 1278 0108 DEE7     		b	.L81
 1279              	.LVL150:
 1280              	.L110:
2014:rtos/uC-FS/Source/fs_entry.c ****         case FS_VOL_STATE_OPEN:                                 /* Rtn err if vol is not mounted.  
 1281              		.loc 1 2014 5 view .LVU448
 1282 010a 032B     		cmp	r3, #3
 1283 010c 04D2     		bcs	.L112
 1284              	.L94:
2032:rtos/uC-FS/Source/fs_entry.c ****              return ((CPU_CHAR *)0);
 1285              		.loc 1 2032 14 is_stmt 1 view .LVU449
 1286 010e 4846     		mov	r0, r9
 1287 0110 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 1288              	.LVL151:
2033:rtos/uC-FS/Source/fs_entry.c ****     }
 1289              		.loc 1 2033 14 view .LVU450
2033:rtos/uC-FS/Source/fs_entry.c ****     }
 1290              		.loc 1 2033 21 is_stmt 0 view .LVU451
 1291 0114 0024     		movs	r4, #0
 1292              	.LVL152:
ARM GAS  /tmp/cc8IPqmX.s 			page 65


2033:rtos/uC-FS/Source/fs_entry.c ****     }
 1293              		.loc 1 2033 21 view .LVU452
 1294 0116 D7E7     		b	.L81
 1295              	.LVL153:
 1296              	.L112:
2017:rtos/uC-FS/Source/fs_entry.c ****              return ((CPU_CHAR *)0);
 1297              		.loc 1 2017 14 is_stmt 1 view .LVU453
 1298 0118 4846     		mov	r0, r9
 1299 011a FFF7FEFF 		bl	FSVol_ReleaseUnlock
 1300              	.LVL154:
2018:rtos/uC-FS/Source/fs_entry.c **** 
 1301              		.loc 1 2018 14 view .LVU454
2018:rtos/uC-FS/Source/fs_entry.c **** 
 1302              		.loc 1 2018 21 is_stmt 0 view .LVU455
 1303 011e 0024     		movs	r4, #0
 1304              	.LVL155:
2018:rtos/uC-FS/Source/fs_entry.c **** 
 1305              		.loc 1 2018 21 view .LVU456
 1306 0120 D2E7     		b	.L81
 1307              	.LVL156:
 1308              	.L97:
2041:rtos/uC-FS/Source/fs_entry.c ****        *p_dflt = FSVol_IsDflt(name_vol, p_err);
 1309              		.loc 1 2041 9 is_stmt 1 view .LVU457
2041:rtos/uC-FS/Source/fs_entry.c ****        *p_dflt = FSVol_IsDflt(name_vol, p_err);
 1310              		.loc 1 2041 15 is_stmt 0 view .LVU458
 1311 0122 0A22     		movs	r2, #10
 1312 0124 01A9     		add	r1, sp, #4
 1313 0126 4046     		mov	r0, r8
 1314 0128 FFF7FEFF 		bl	Str_Copy_N
 1315              	.LVL157:
2042:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err != FS_ERR_NONE) {
 1316              		.loc 1 2042 8 is_stmt 1 view .LVU459
2042:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err != FS_ERR_NONE) {
 1317              		.loc 1 2042 18 is_stmt 0 view .LVU460
 1318 012c 3146     		mov	r1, r6
 1319 012e 4046     		mov	r0, r8
 1320 0130 FFF7FEFF 		bl	FSVol_IsDflt
 1321              	.LVL158:
2042:rtos/uC-FS/Source/fs_entry.c ****         if (*p_err != FS_ERR_NONE) {
 1322              		.loc 1 2042 16 view .LVU461
 1323 0134 2870     		strb	r0, [r5]
2043:rtos/uC-FS/Source/fs_entry.c ****             return ((CPU_CHAR *)0);
 1324              		.loc 1 2043 9 is_stmt 1 view .LVU462
2043:rtos/uC-FS/Source/fs_entry.c ****             return ((CPU_CHAR *)0);
 1325              		.loc 1 2043 13 is_stmt 0 view .LVU463
 1326 0136 3388     		ldrh	r3, [r6]
2043:rtos/uC-FS/Source/fs_entry.c ****             return ((CPU_CHAR *)0);
 1327              		.loc 1 2043 12 view .LVU464
 1328 0138 002B     		cmp	r3, #0
 1329 013a BAD0     		beq	.L98
2044:rtos/uC-FS/Source/fs_entry.c ****         }
 1330              		.loc 1 2044 20 view .LVU465
 1331 013c 0024     		movs	r4, #0
 1332              	.LVL159:
2044:rtos/uC-FS/Source/fs_entry.c ****         }
 1333              		.loc 1 2044 20 view .LVU466
 1334 013e C3E7     		b	.L81
ARM GAS  /tmp/cc8IPqmX.s 			page 66


 1335              	.LVL160:
 1336              	.L99:
1965:rtos/uC-FS/Source/fs_entry.c ****     }
 1337              		.loc 1 1965 16 view .LVU467
 1338 0140 0024     		movs	r4, #0
 1339 0142 C1E7     		b	.L81
 1340              	.LVL161:
 1341              	.L111:
2023:rtos/uC-FS/Source/fs_entry.c ****              }
 1342              		.loc 1 2023 25 view .LVU468
 1343 0144 0024     		movs	r4, #0
 1344              	.LVL162:
2023:rtos/uC-FS/Source/fs_entry.c ****              }
 1345              		.loc 1 2023 25 view .LVU469
 1346 0146 BFE7     		b	.L81
 1347              		.cfi_endproc
 1348              	.LFE14:
 1350              		.section	.text.FSEntry_TimeSetHandler,"ax",%progbits
 1351              		.align	1
 1352              		.syntax unified
 1353              		.thumb
 1354              		.thumb_func
 1355              		.fpu fpv4-sp-d16
 1357              	FSEntry_TimeSetHandler:
 1358              	.LVL163:
 1359              	.LFB12:
1731:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_entry;
 1360              		.loc 1 1731 1 is_stmt 1 view -0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 8
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
1731:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_entry;
 1364              		.loc 1 1731 1 is_stmt 0 view .LVU471
 1365 0000 70B5     		push	{r4, r5, r6, lr}
 1366              	.LCFI24:
 1367              		.cfi_def_cfa_offset 16
 1368              		.cfi_offset 4, -16
 1369              		.cfi_offset 5, -12
 1370              		.cfi_offset 6, -8
 1371              		.cfi_offset 14, -4
 1372 0002 84B0     		sub	sp, sp, #16
 1373              	.LCFI25:
 1374              		.cfi_def_cfa_offset 32
 1375 0004 0E46     		mov	r6, r1
 1376 0006 1546     		mov	r5, r2
 1377 0008 1C46     		mov	r4, r3
1732:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL    *p_vol;
 1378              		.loc 1 1732 5 is_stmt 1 view .LVU472
1733:rtos/uC-FS/Source/fs_entry.c **** 
 1379              		.loc 1 1733 5 view .LVU473
1737:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 1380              		.loc 1 1737 5 view .LVU474
1737:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 1381              		.loc 1 1737 18 is_stmt 0 view .LVU475
 1382 000a 1A46     		mov	r2, r3
 1383              	.LVL164:
1737:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
ARM GAS  /tmp/cc8IPqmX.s 			page 67


 1384              		.loc 1 1737 18 view .LVU476
 1385 000c 03A9     		add	r1, sp, #12
 1386              	.LVL165:
1737:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 1387              		.loc 1 1737 18 view .LVU477
 1388 000e FFF7FEFF 		bl	FSEntry_NameParseChk
 1389              	.LVL166:
1737:rtos/uC-FS/Source/fs_entry.c ****                                       &p_vol,
 1390              		.loc 1 1737 18 view .LVU478
 1391 0012 0146     		mov	r1, r0
 1392              	.LVL167:
1740:rtos/uC-FS/Source/fs_entry.c ****     if ((p_vol      == (FS_VOL   *)0) ||                        /* Rtn err if no vol found ...     
 1393              		.loc 1 1740 5 is_stmt 1 view .LVU479
1741:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 1394              		.loc 1 1741 5 view .LVU480
1741:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 1395              		.loc 1 1741 21 is_stmt 0 view .LVU481
 1396 0014 0398     		ldr	r0, [sp, #12]
 1397              	.LVL168:
1741:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 1398              		.loc 1 1741 8 view .LVU482
 1399 0016 70B1     		cbz	r0, .L113
1741:rtos/uC-FS/Source/fs_entry.c ****         (name_entry == (CPU_CHAR *)0)) {                        /*                         ... or i
 1400              		.loc 1 1741 39 discriminator 1 view .LVU483
 1401 0018 69B1     		cbz	r1, .L113
1747:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 1402              		.loc 1 1747 5 is_stmt 1 view .LVU484
1747:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 1403              		.loc 1 1747 9 is_stmt 0 view .LVU485
 1404 001a C368     		ldr	r3, [r0, #12]
1747:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 1405              		.loc 1 1747 8 view .LVU486
 1406 001c 13F0020F 		tst	r3, #2
 1407 0020 0BD0     		beq	.L119
1756:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 1408              		.loc 1 1756 5 is_stmt 1 view .LVU487
1756:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 1409              		.loc 1 1756 19 is_stmt 0 view .LVU488
 1410 0022 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
1756:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 1411              		.loc 1 1756 8 view .LVU489
 1412 0024 7BB1     		cbz	r3, .L120
1762:rtos/uC-FS/Source/fs_entry.c ****                        name_entry,
 1413              		.loc 1 1762 5 is_stmt 1 view .LVU490
 1414 0026 0094     		str	r4, [sp]
 1415 0028 2B46     		mov	r3, r5
 1416 002a 3246     		mov	r2, r6
 1417 002c FFF7FEFF 		bl	FSSys_EntryTimeSet
 1418              	.LVL169:
1771:rtos/uC-FS/Source/fs_entry.c **** }
 1419              		.loc 1 1771 5 view .LVU491
 1420 0030 0398     		ldr	r0, [sp, #12]
 1421 0032 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 1422              	.LVL170:
 1423              	.L113:
1772:rtos/uC-FS/Source/fs_entry.c **** #endif
 1424              		.loc 1 1772 1 is_stmt 0 view .LVU492
ARM GAS  /tmp/cc8IPqmX.s 			page 68


 1425 0036 04B0     		add	sp, sp, #16
 1426              	.LCFI26:
 1427              		.cfi_remember_state
 1428              		.cfi_def_cfa_offset 16
 1429              		@ sp needed
 1430 0038 70BD     		pop	{r4, r5, r6, pc}
 1431              	.LVL171:
 1432              	.L119:
 1433              	.LCFI27:
 1434              		.cfi_restore_state
1748:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_VOL_INVALID_OP;
 1435              		.loc 1 1748 9 is_stmt 1 view .LVU493
 1436 003a FFF7FEFF 		bl	FSVol_ReleaseUnlock
 1437              	.LVL172:
1749:rtos/uC-FS/Source/fs_entry.c ****         return;
 1438              		.loc 1 1749 8 view .LVU494
1749:rtos/uC-FS/Source/fs_entry.c ****         return;
 1439              		.loc 1 1749 15 is_stmt 0 view .LVU495
 1440 003e 40F27D53 		movw	r3, #1405
 1441 0042 2380     		strh	r3, [r4]	@ movhi
1750:rtos/uC-FS/Source/fs_entry.c ****     }
 1442              		.loc 1 1750 9 is_stmt 1 view .LVU496
 1443 0044 F7E7     		b	.L113
 1444              	.LVL173:
 1445              	.L120:
1757:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
 1446              		.loc 1 1757 9 view .LVU497
 1447 0046 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 1448              	.LVL174:
1758:rtos/uC-FS/Source/fs_entry.c ****         return;
 1449              		.loc 1 1758 8 view .LVU498
1758:rtos/uC-FS/Source/fs_entry.c ****         return;
 1450              		.loc 1 1758 15 is_stmt 0 view .LVU499
 1451 004a 40F2C923 		movw	r3, #713
 1452 004e 2380     		strh	r3, [r4]	@ movhi
1759:rtos/uC-FS/Source/fs_entry.c ****     }
 1453              		.loc 1 1759 9 is_stmt 1 view .LVU500
 1454 0050 F1E7     		b	.L113
 1455              		.cfi_endproc
 1456              	.LFE12:
 1458              		.section	.text.FSEntry_AttribSet,"ax",%progbits
 1459              		.align	1
 1460              		.global	FSEntry_AttribSet
 1461              		.syntax unified
 1462              		.thumb
 1463              		.thumb_func
 1464              		.fpu fpv4-sp-d16
 1466              	FSEntry_AttribSet:
 1467              	.LVL175:
 1468              	.LFB0:
 219:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 1469              		.loc 1 219 1 view -0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 0
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 219:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 1473              		.loc 1 219 1 is_stmt 0 view .LVU502
ARM GAS  /tmp/cc8IPqmX.s 			page 69


 1474 0000 70B5     		push	{r4, r5, r6, lr}
 1475              	.LCFI28:
 1476              		.cfi_def_cfa_offset 16
 1477              		.cfi_offset 4, -16
 1478              		.cfi_offset 5, -12
 1479              		.cfi_offset 6, -8
 1480              		.cfi_offset 14, -4
 1481 0002 0446     		mov	r4, r0
 1482 0004 0D46     		mov	r5, r1
 220:rtos/uC-FS/Source/fs_entry.c **** 
 1483              		.loc 1 220 5 is_stmt 1 view .LVU503
 224:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 1484              		.loc 1 224 5 view .LVU504
 224:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 1485              		.loc 1 224 8 is_stmt 0 view .LVU505
 1486 0006 1646     		mov	r6, r2
 1487 0008 3AB1     		cbz	r2, .L127
 1488              	.LVL176:
 1489              	.L122:
 225:rtos/uC-FS/Source/fs_entry.c ****     }
 1490              		.loc 1 225 9 is_stmt 1 discriminator 1 view .LVU506
 227:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1491              		.loc 1 227 5 discriminator 1 view .LVU507
 227:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1492              		.loc 1 227 8 is_stmt 0 discriminator 1 view .LVU508
 1493 000a 4CB1     		cbz	r4, .L128
 232:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_FILE_INVALID_ATTRIB;
 1494              		.loc 1 232 5 is_stmt 1 view .LVU509
 232:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_FILE_INVALID_ATTRIB;
 1495              		.loc 1 232 8 is_stmt 0 view .LVU510
 1496 000c 35F00703 		bics	r3, r5, #7
 1497 0010 0AD0     		beq	.L125
 233:rtos/uC-FS/Source/fs_entry.c ****         return;
 1498              		.loc 1 233 8 is_stmt 1 view .LVU511
 233:rtos/uC-FS/Source/fs_entry.c ****         return;
 1499              		.loc 1 233 15 is_stmt 0 view .LVU512
 1500 0012 4FF44973 		mov	r3, #804
 1501 0016 3380     		strh	r3, [r6]	@ movhi
 234:rtos/uC-FS/Source/fs_entry.c ****     }
 1502              		.loc 1 234 9 is_stmt 1 view .LVU513
 1503              	.L121:
 262:rtos/uC-FS/Source/fs_entry.c **** #endif
 1504              		.loc 1 262 1 is_stmt 0 view .LVU514
 1505 0018 70BD     		pop	{r4, r5, r6, pc}
 1506              	.LVL177:
 1507              	.L127:
 225:rtos/uC-FS/Source/fs_entry.c ****     }
 1508              		.loc 1 225 9 is_stmt 1 view .LVU515
 225:rtos/uC-FS/Source/fs_entry.c ****     }
 1509              		.loc 1 225 9 view .LVU516
 1510 001a FFF7FEFF 		bl	CPU_SW_Exception
 1511              	.LVL178:
 225:rtos/uC-FS/Source/fs_entry.c ****     }
 1512              		.loc 1 225 9 is_stmt 0 view .LVU517
 1513 001e F4E7     		b	.L122
 1514              	.L128:
 228:rtos/uC-FS/Source/fs_entry.c ****         return;
ARM GAS  /tmp/cc8IPqmX.s 			page 70


 1515              		.loc 1 228 8 is_stmt 1 view .LVU518
 228:rtos/uC-FS/Source/fs_entry.c ****         return;
 1516              		.loc 1 228 15 is_stmt 0 view .LVU519
 1517 0020 40F28933 		movw	r3, #905
 1518 0024 3380     		strh	r3, [r6]	@ movhi
 229:rtos/uC-FS/Source/fs_entry.c ****     }
 1519              		.loc 1 229 9 is_stmt 1 view .LVU520
 1520 0026 F7E7     		b	.L121
 1521              	.L125:
 247:rtos/uC-FS/Source/fs_entry.c **** #endif
 1522              		.loc 1 247 5 view .LVU521
 1523              	.LVL179:
 253:rtos/uC-FS/Source/fs_entry.c ****                              attrib,
 1524              		.loc 1 253 5 view .LVU522
 1525 0028 3246     		mov	r2, r6
 1526 002a 2946     		mov	r1, r5
 1527 002c 2046     		mov	r0, r4
 1528 002e FFF7FEFF 		bl	FSEntry_AttribSetHandler
 1529              	.LVL180:
 1530 0032 F1E7     		b	.L121
 1531              		.cfi_endproc
 1532              	.LFE0:
 1534              		.section	.text.FSEntry_Copy,"ax",%progbits
 1535              		.align	1
 1536              		.global	FSEntry_Copy
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1540              		.fpu fpv4-sp-d16
 1542              	FSEntry_Copy:
 1543              	.LVL181:
 1544              	.LFB1:
 328:rtos/uC-FS/Source/fs_entry.c ****     FS_BUF       *p_buf;
 1545              		.loc 1 328 1 view -0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 8
 1548              		@ frame_needed = 0, uses_anonymous_args = 0
 328:rtos/uC-FS/Source/fs_entry.c ****     FS_BUF       *p_buf;
 1549              		.loc 1 328 1 is_stmt 0 view .LVU524
 1550 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1551              	.LCFI29:
 1552              		.cfi_def_cfa_offset 24
 1553              		.cfi_offset 4, -24
 1554              		.cfi_offset 5, -20
 1555              		.cfi_offset 6, -16
 1556              		.cfi_offset 7, -12
 1557              		.cfi_offset 8, -8
 1558              		.cfi_offset 14, -4
 1559 0004 82B0     		sub	sp, sp, #8
 1560              	.LCFI30:
 1561              		.cfi_def_cfa_offset 32
 1562 0006 0546     		mov	r5, r0
 1563 0008 0E46     		mov	r6, r1
 1564 000a 9046     		mov	r8, r2
 329:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   done;
 1565              		.loc 1 329 5 is_stmt 1 view .LVU525
 330:rtos/uC-FS/Source/fs_entry.c ****     FS_ERR        err;
ARM GAS  /tmp/cc8IPqmX.s 			page 71


 1566              		.loc 1 330 5 view .LVU526
 331:rtos/uC-FS/Source/fs_entry.c ****     FS_FILE      *p_file_dest;
 1567              		.loc 1 331 5 view .LVU527
 332:rtos/uC-FS/Source/fs_entry.c ****     FS_FILE      *p_file_src;
 1568              		.loc 1 332 5 view .LVU528
 333:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T    file_rd_len;
 1569              		.loc 1 333 5 view .LVU529
 334:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS      mode;
 1570              		.loc 1 334 5 view .LVU530
 335:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN   no_err;
 1571              		.loc 1 335 5 view .LVU531
 336:rtos/uC-FS/Source/fs_entry.c **** 
 1572              		.loc 1 336 5 view .LVU532
 340:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 1573              		.loc 1 340 5 view .LVU533
 340:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 1574              		.loc 1 340 8 is_stmt 0 view .LVU534
 1575 000c 1C46     		mov	r4, r3
 1576 000e 002B     		cmp	r3, #0
 1577 0010 43D0     		beq	.L141
 1578              	.LVL182:
 1579              	.L130:
 341:rtos/uC-FS/Source/fs_entry.c ****     }
 1580              		.loc 1 341 9 is_stmt 1 discriminator 1 view .LVU535
 343:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1581              		.loc 1 343 5 discriminator 1 view .LVU536
 343:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1582              		.loc 1 343 8 is_stmt 0 discriminator 1 view .LVU537
 1583 0012 002D     		cmp	r5, #0
 1584 0014 44D0     		beq	.L142
 347:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1585              		.loc 1 347 5 is_stmt 1 view .LVU538
 347:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1586              		.loc 1 347 8 is_stmt 0 view .LVU539
 1587 0016 002E     		cmp	r6, #0
 1588 0018 46D0     		beq	.L143
 356:rtos/uC-FS/Source/fs_entry.c ****     if (p_file_src == DEF_NULL) {
 1589              		.loc 1 356 5 is_stmt 1 view .LVU540
 356:rtos/uC-FS/Source/fs_entry.c ****     if (p_file_src == DEF_NULL) {
 1590              		.loc 1 356 18 is_stmt 0 view .LVU541
 1591 001a 2246     		mov	r2, r4
 1592 001c 0121     		movs	r1, #1
 1593 001e 2846     		mov	r0, r5
 1594 0020 FFF7FEFF 		bl	FSFile_Open
 1595              	.LVL183:
 357:rtos/uC-FS/Source/fs_entry.c ****         return;
 1596              		.loc 1 357 5 is_stmt 1 view .LVU542
 357:rtos/uC-FS/Source/fs_entry.c ****         return;
 1597              		.loc 1 357 8 is_stmt 0 view .LVU543
 1598 0024 0746     		mov	r7, r0
 1599 0026 0028     		cmp	r0, #0
 1600 0028 41D0     		beq	.L129
 360:rtos/uC-FS/Source/fs_entry.c ****             return;
 1601              		.loc 1 360 9 is_stmt 1 view .LVU544
 360:rtos/uC-FS/Source/fs_entry.c ****             return;
 1602              		.loc 1 360 13 is_stmt 0 view .LVU545
 1603 002a 2388     		ldrh	r3, [r4]
ARM GAS  /tmp/cc8IPqmX.s 			page 72


 360:rtos/uC-FS/Source/fs_entry.c ****             return;
 1604              		.loc 1 360 12 view .LVU546
 1605 002c 002B     		cmp	r3, #0
 1606 002e 3ED1     		bne	.L129
 365:rtos/uC-FS/Source/fs_entry.c ****         mode =  FS_FILE_ACCESS_MODE_WR | FS_FILE_ACCESS_MODE_CREATE | FS_FILE_ACCESS_MODE_EXCL;
 1607              		.loc 1 365 5 is_stmt 1 view .LVU547
 365:rtos/uC-FS/Source/fs_entry.c ****         mode =  FS_FILE_ACCESS_MODE_WR | FS_FILE_ACCESS_MODE_CREATE | FS_FILE_ACCESS_MODE_EXCL;
 1608              		.loc 1 365 8 is_stmt 0 view .LVU548
 1609 0030 B8F1010F 		cmp	r8, #1
 1610 0034 3ED0     		beq	.L144
 368:rtos/uC-FS/Source/fs_entry.c ****     }
 1611              		.loc 1 368 14 view .LVU549
 1612 0036 0E21     		movs	r1, #14
 1613              	.L134:
 1614              	.LVL184:
 370:rtos/uC-FS/Source/fs_entry.c ****     if (p_file_dest == DEF_NULL) {
 1615              		.loc 1 370 5 is_stmt 1 view .LVU550
 370:rtos/uC-FS/Source/fs_entry.c ****     if (p_file_dest == DEF_NULL) {
 1616              		.loc 1 370 19 is_stmt 0 view .LVU551
 1617 0038 2246     		mov	r2, r4
 1618 003a 3046     		mov	r0, r6
 1619              	.LVL185:
 370:rtos/uC-FS/Source/fs_entry.c ****     if (p_file_dest == DEF_NULL) {
 1620              		.loc 1 370 19 view .LVU552
 1621 003c FFF7FEFF 		bl	FSFile_Open
 1622              	.LVL186:
 371:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_src, &err);
 1623              		.loc 1 371 5 is_stmt 1 view .LVU553
 371:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_src, &err);
 1624              		.loc 1 371 8 is_stmt 0 view .LVU554
 1625 0040 8046     		mov	r8, r0
 1626 0042 0028     		cmp	r0, #0
 1627 0044 38D0     		beq	.L145
 376:rtos/uC-FS/Source/fs_entry.c ****     if (p_buf == DEF_NULL) {
 1628              		.loc 1 376 5 is_stmt 1 view .LVU555
 376:rtos/uC-FS/Source/fs_entry.c ****     if (p_buf == DEF_NULL) {
 1629              		.loc 1 376 13 is_stmt 0 view .LVU556
 1630 0046 0020     		movs	r0, #0
 1631              	.LVL187:
 376:rtos/uC-FS/Source/fs_entry.c ****     if (p_buf == DEF_NULL) {
 1632              		.loc 1 376 13 view .LVU557
 1633 0048 FFF7FEFF 		bl	FSBuf_Get
 1634              	.LVL188:
 377:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_src, &err);
 1635              		.loc 1 377 5 is_stmt 1 view .LVU558
 377:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_src, &err);
 1636              		.loc 1 377 8 is_stmt 0 view .LVU559
 1637 004c 0546     		mov	r5, r0
 1638              	.LVL189:
 377:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_src, &err);
 1639              		.loc 1 377 8 view .LVU560
 1640 004e 0028     		cmp	r0, #0
 1641 0050 38D0     		beq	.L146
 1642              	.LVL190:
 1643              	.L136:
 386:rtos/uC-FS/Source/fs_entry.c ****         file_rd_len = FSFile_Rd(p_file_src,
 1644              		.loc 1 386 5 is_stmt 1 view .LVU561
ARM GAS  /tmp/cc8IPqmX.s 			page 73


 387:rtos/uC-FS/Source/fs_entry.c ****                                 p_buf->DataPtr,
 1645              		.loc 1 387 9 view .LVU562
 387:rtos/uC-FS/Source/fs_entry.c ****                                 p_buf->DataPtr,
 1646              		.loc 1 387 23 is_stmt 0 view .LVU563
 1647 0052 2346     		mov	r3, r4
 1648 0054 2A68     		ldr	r2, [r5]
 1649 0056 2969     		ldr	r1, [r5, #16]
 1650 0058 3846     		mov	r0, r7
 1651 005a FFF7FEFF 		bl	FSFile_Rd
 1652              	.LVL191:
 392:rtos/uC-FS/Source/fs_entry.c **** 
 1653              		.loc 1 392 9 is_stmt 1 view .LVU564
 392:rtos/uC-FS/Source/fs_entry.c **** 
 1654              		.loc 1 392 19 is_stmt 0 view .LVU565
 1655 005e 2388     		ldrh	r3, [r4]
 1656              	.LVL192:
 394:rtos/uC-FS/Source/fs_entry.c ****            (void)FSFile_Wr(p_file_dest,
 1657              		.loc 1 394 9 is_stmt 1 view .LVU566
 394:rtos/uC-FS/Source/fs_entry.c ****            (void)FSFile_Wr(p_file_dest,
 1658              		.loc 1 394 12 is_stmt 0 view .LVU567
 1659 0060 0646     		mov	r6, r0
 1660 0062 60B1     		cbz	r0, .L137
 394:rtos/uC-FS/Source/fs_entry.c ****            (void)FSFile_Wr(p_file_dest,
 1661              		.loc 1 394 32 discriminator 1 view .LVU568
 1662 0064 5BB9     		cbnz	r3, .L137
 395:rtos/uC-FS/Source/fs_entry.c ****                            p_buf->DataPtr,
 1663              		.loc 1 395 12 is_stmt 1 view .LVU569
 395:rtos/uC-FS/Source/fs_entry.c ****                            p_buf->DataPtr,
 1664              		.loc 1 395 18 is_stmt 0 view .LVU570
 1665 0066 2346     		mov	r3, r4
 1666              	.LVL193:
 395:rtos/uC-FS/Source/fs_entry.c ****                            p_buf->DataPtr,
 1667              		.loc 1 395 18 view .LVU571
 1668 0068 0246     		mov	r2, r0
 1669 006a 2969     		ldr	r1, [r5, #16]
 1670 006c 4046     		mov	r0, r8
 1671              	.LVL194:
 395:rtos/uC-FS/Source/fs_entry.c ****                            p_buf->DataPtr,
 1672              		.loc 1 395 18 view .LVU572
 1673 006e FFF7FEFF 		bl	FSFile_Wr
 1674              	.LVL195:
 400:rtos/uC-FS/Source/fs_entry.c ****                 done = DEF_YES;
 1675              		.loc 1 400 13 is_stmt 1 view .LVU573
 400:rtos/uC-FS/Source/fs_entry.c ****                 done = DEF_YES;
 1676              		.loc 1 400 38 is_stmt 0 view .LVU574
 1677 0072 2B68     		ldr	r3, [r5]
 400:rtos/uC-FS/Source/fs_entry.c ****                 done = DEF_YES;
 1678              		.loc 1 400 16 view .LVU575
 1679 0074 B342     		cmp	r3, r6
 1680 0076 02D1     		bne	.L137
 400:rtos/uC-FS/Source/fs_entry.c ****                 done = DEF_YES;
 1681              		.loc 1 400 50 discriminator 1 view .LVU576
 1682 0078 2388     		ldrh	r3, [r4]
 400:rtos/uC-FS/Source/fs_entry.c ****                 done = DEF_YES;
 1683              		.loc 1 400 46 discriminator 1 view .LVU577
 1684 007a 002B     		cmp	r3, #0
 1685 007c E9D0     		beq	.L136
ARM GAS  /tmp/cc8IPqmX.s 			page 74


 1686              	.L137:
 1687              	.LVL196:
 409:rtos/uC-FS/Source/fs_entry.c ****     FSFile_Close(p_file_dest, &err);
 1688              		.loc 1 409 5 is_stmt 1 view .LVU578
 1689 007e 0DF10601 		add	r1, sp, #6
 1690 0082 3846     		mov	r0, r7
 1691 0084 FFF7FEFF 		bl	FSFile_Close
 1692              	.LVL197:
 410:rtos/uC-FS/Source/fs_entry.c ****     FSBuf_Free  (p_buf);
 1693              		.loc 1 410 5 view .LVU579
 1694 0088 0DF10601 		add	r1, sp, #6
 1695 008c 4046     		mov	r0, r8
 1696 008e FFF7FEFF 		bl	FSFile_Close
 1697              	.LVL198:
 411:rtos/uC-FS/Source/fs_entry.c **** }
 1698              		.loc 1 411 5 view .LVU580
 1699 0092 2846     		mov	r0, r5
 1700 0094 FFF7FEFF 		bl	FSBuf_Free
 1701              	.LVL199:
 1702 0098 09E0     		b	.L129
 1703              	.LVL200:
 1704              	.L141:
 341:rtos/uC-FS/Source/fs_entry.c ****     }
 1705              		.loc 1 341 9 view .LVU581
 341:rtos/uC-FS/Source/fs_entry.c ****     }
 1706              		.loc 1 341 9 view .LVU582
 1707 009a FFF7FEFF 		bl	CPU_SW_Exception
 1708              	.LVL201:
 341:rtos/uC-FS/Source/fs_entry.c ****     }
 1709              		.loc 1 341 9 is_stmt 0 view .LVU583
 1710 009e B8E7     		b	.L130
 1711              	.L142:
 344:rtos/uC-FS/Source/fs_entry.c ****         return;
 1712              		.loc 1 344 8 is_stmt 1 view .LVU584
 344:rtos/uC-FS/Source/fs_entry.c ****         return;
 1713              		.loc 1 344 15 is_stmt 0 view .LVU585
 1714 00a0 40F28933 		movw	r3, #905
 1715 00a4 2380     		strh	r3, [r4]	@ movhi
 345:rtos/uC-FS/Source/fs_entry.c ****     }
 1716              		.loc 1 345 9 is_stmt 1 view .LVU586
 1717 00a6 02E0     		b	.L129
 1718              	.L143:
 348:rtos/uC-FS/Source/fs_entry.c ****         return;
 1719              		.loc 1 348 8 view .LVU587
 348:rtos/uC-FS/Source/fs_entry.c ****         return;
 1720              		.loc 1 348 15 is_stmt 0 view .LVU588
 1721 00a8 40F28933 		movw	r3, #905
 1722 00ac 2380     		strh	r3, [r4]	@ movhi
 349:rtos/uC-FS/Source/fs_entry.c ****     }
 1723              		.loc 1 349 9 is_stmt 1 view .LVU589
 1724              	.LVL202:
 1725              	.L129:
 412:rtos/uC-FS/Source/fs_entry.c **** #endif
 1726              		.loc 1 412 1 is_stmt 0 view .LVU590
 1727 00ae 02B0     		add	sp, sp, #8
 1728              	.LCFI31:
 1729              		.cfi_remember_state
ARM GAS  /tmp/cc8IPqmX.s 			page 75


 1730              		.cfi_def_cfa_offset 24
 1731              		@ sp needed
 1732 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1733              	.LVL203:
 1734              	.L144:
 1735              	.LCFI32:
 1736              		.cfi_restore_state
 366:rtos/uC-FS/Source/fs_entry.c ****     } else {
 1737              		.loc 1 366 14 view .LVU591
 1738 00b4 2621     		movs	r1, #38
 1739 00b6 BFE7     		b	.L134
 1740              	.LVL204:
 1741              	.L145:
 372:rtos/uC-FS/Source/fs_entry.c ****         return;
 1742              		.loc 1 372 9 is_stmt 1 view .LVU592
 1743 00b8 0DF10601 		add	r1, sp, #6
 1744 00bc 3846     		mov	r0, r7
 1745              	.LVL205:
 372:rtos/uC-FS/Source/fs_entry.c ****         return;
 1746              		.loc 1 372 9 is_stmt 0 view .LVU593
 1747 00be FFF7FEFF 		bl	FSFile_Close
 1748              	.LVL206:
 373:rtos/uC-FS/Source/fs_entry.c ****     }
 1749              		.loc 1 373 9 is_stmt 1 view .LVU594
 1750 00c2 F4E7     		b	.L129
 1751              	.LVL207:
 1752              	.L146:
 378:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_dest, &err);
 1753              		.loc 1 378 9 view .LVU595
 1754 00c4 0DF10601 		add	r1, sp, #6
 1755 00c8 3846     		mov	r0, r7
 1756              	.LVL208:
 378:rtos/uC-FS/Source/fs_entry.c ****         FSFile_Close(p_file_dest, &err);
 1757              		.loc 1 378 9 is_stmt 0 view .LVU596
 1758 00ca FFF7FEFF 		bl	FSFile_Close
 1759              	.LVL209:
 379:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 1760              		.loc 1 379 9 is_stmt 1 view .LVU597
 1761 00ce 0DF10601 		add	r1, sp, #6
 1762 00d2 4046     		mov	r0, r8
 1763 00d4 FFF7FEFF 		bl	FSFile_Close
 1764              	.LVL210:
 380:rtos/uC-FS/Source/fs_entry.c ****         return;
 1765              		.loc 1 380 8 view .LVU598
 380:rtos/uC-FS/Source/fs_entry.c ****         return;
 1766              		.loc 1 380 15 is_stmt 0 view .LVU599
 1767 00d8 6423     		movs	r3, #100
 1768 00da 2380     		strh	r3, [r4]	@ movhi
 381:rtos/uC-FS/Source/fs_entry.c ****     }
 1769              		.loc 1 381 9 is_stmt 1 view .LVU600
 1770 00dc E7E7     		b	.L129
 1771              		.cfi_endproc
 1772              	.LFE1:
 1774              		.section	.text.FSEntry_Create,"ax",%progbits
 1775              		.align	1
 1776              		.global	FSEntry_Create
 1777              		.syntax unified
ARM GAS  /tmp/cc8IPqmX.s 			page 76


 1778              		.thumb
 1779              		.thumb_func
 1780              		.fpu fpv4-sp-d16
 1782              	FSEntry_Create:
 1783              	.LVL211:
 1784              	.LFB2:
 480:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 1785              		.loc 1 480 1 view -0
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 0
 1788              		@ frame_needed = 0, uses_anonymous_args = 0
 480:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 1789              		.loc 1 480 1 is_stmt 0 view .LVU602
 1790 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1791              	.LCFI33:
 1792              		.cfi_def_cfa_offset 24
 1793              		.cfi_offset 3, -24
 1794              		.cfi_offset 4, -20
 1795              		.cfi_offset 5, -16
 1796              		.cfi_offset 6, -12
 1797              		.cfi_offset 7, -8
 1798              		.cfi_offset 14, -4
 1799 0002 0546     		mov	r5, r0
 1800 0004 0C46     		mov	r4, r1
 1801 0006 1646     		mov	r6, r2
 481:rtos/uC-FS/Source/fs_entry.c **** 
 1802              		.loc 1 481 5 is_stmt 1 view .LVU603
 485:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 1803              		.loc 1 485 5 view .LVU604
 485:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 1804              		.loc 1 485 8 is_stmt 0 view .LVU605
 1805 0008 1F46     		mov	r7, r3
 1806 000a 73B1     		cbz	r3, .L153
 1807              	.LVL212:
 1808              	.L148:
 486:rtos/uC-FS/Source/fs_entry.c ****     }
 1809              		.loc 1 486 9 is_stmt 1 discriminator 1 view .LVU606
 488:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1810              		.loc 1 488 5 discriminator 1 view .LVU607
 488:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1811              		.loc 1 488 8 is_stmt 0 discriminator 1 view .LVU608
 1812 000c 85B1     		cbz	r5, .L154
 492:rtos/uC-FS/Source/fs_entry.c ****         if (entry_type != FS_ENTRY_TYPE_DIR) {
 1813              		.loc 1 492 5 is_stmt 1 view .LVU609
 492:rtos/uC-FS/Source/fs_entry.c ****         if (entry_type != FS_ENTRY_TYPE_DIR) {
 1814              		.loc 1 492 8 is_stmt 0 view .LVU610
 1815 000e 022C     		cmp	r4, #2
 1816 0010 04D0     		beq	.L151
 493:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_ENTRY_TYPE_INVALID;
 1817              		.loc 1 493 9 is_stmt 1 view .LVU611
 493:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_ENTRY_TYPE_INVALID;
 1818              		.loc 1 493 12 is_stmt 0 view .LVU612
 1819 0012 042C     		cmp	r4, #4
 1820 0014 02D0     		beq	.L151
 494:rtos/uC-FS/Source/fs_entry.c ****         }
 1821              		.loc 1 494 12 is_stmt 1 view .LVU613
 494:rtos/uC-FS/Source/fs_entry.c ****         }
ARM GAS  /tmp/cc8IPqmX.s 			page 77


 1822              		.loc 1 494 19 is_stmt 0 view .LVU614
 1823 0016 40F2CA23 		movw	r3, #714
 1824 001a 3B80     		strh	r3, [r7]	@ movhi
 1825              	.L151:
 508:rtos/uC-FS/Source/fs_entry.c **** #endif
 1826              		.loc 1 508 5 is_stmt 1 view .LVU615
 1827              	.LVL213:
 514:rtos/uC-FS/Source/fs_entry.c ****                           entry_type,
 1828              		.loc 1 514 5 view .LVU616
 1829 001c 3B46     		mov	r3, r7
 1830 001e 3246     		mov	r2, r6
 1831 0020 2146     		mov	r1, r4
 1832 0022 2846     		mov	r0, r5
 1833 0024 FFF7FEFF 		bl	FSEntry_CreateHandler
 1834              	.LVL214:
 1835              	.L147:
 524:rtos/uC-FS/Source/fs_entry.c **** #endif
 1836              		.loc 1 524 1 is_stmt 0 view .LVU617
 1837 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1838              	.LVL215:
 1839              	.L153:
 486:rtos/uC-FS/Source/fs_entry.c ****     }
 1840              		.loc 1 486 9 is_stmt 1 view .LVU618
 486:rtos/uC-FS/Source/fs_entry.c ****     }
 1841              		.loc 1 486 9 view .LVU619
 1842 002a FFF7FEFF 		bl	CPU_SW_Exception
 1843              	.LVL216:
 486:rtos/uC-FS/Source/fs_entry.c ****     }
 1844              		.loc 1 486 9 is_stmt 0 view .LVU620
 1845 002e EDE7     		b	.L148
 1846              	.L154:
 489:rtos/uC-FS/Source/fs_entry.c ****         return;
 1847              		.loc 1 489 8 is_stmt 1 view .LVU621
 489:rtos/uC-FS/Source/fs_entry.c ****         return;
 1848              		.loc 1 489 15 is_stmt 0 view .LVU622
 1849 0030 40F28933 		movw	r3, #905
 1850 0034 3B80     		strh	r3, [r7]	@ movhi
 490:rtos/uC-FS/Source/fs_entry.c ****     }
 1851              		.loc 1 490 9 is_stmt 1 view .LVU623
 1852 0036 F7E7     		b	.L147
 1853              		.cfi_endproc
 1854              	.LFE2:
 1856              		.section	.text.FSEntry_Del,"ax",%progbits
 1857              		.align	1
 1858              		.global	FSEntry_Del
 1859              		.syntax unified
 1860              		.thumb
 1861              		.thumb_func
 1862              		.fpu fpv4-sp-d16
 1864              	FSEntry_Del:
 1865              	.LVL217:
 1866              	.LFB3:
 596:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 1867              		.loc 1 596 1 view -0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 0
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc8IPqmX.s 			page 78


 596:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 1871              		.loc 1 596 1 is_stmt 0 view .LVU625
 1872 0000 70B5     		push	{r4, r5, r6, lr}
 1873              	.LCFI34:
 1874              		.cfi_def_cfa_offset 16
 1875              		.cfi_offset 4, -16
 1876              		.cfi_offset 5, -12
 1877              		.cfi_offset 6, -8
 1878              		.cfi_offset 14, -4
 1879 0002 0546     		mov	r5, r0
 1880 0004 0C46     		mov	r4, r1
 597:rtos/uC-FS/Source/fs_entry.c **** 
 1881              		.loc 1 597 5 is_stmt 1 view .LVU626
 601:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 1882              		.loc 1 601 5 view .LVU627
 601:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 1883              		.loc 1 601 8 is_stmt 0 view .LVU628
 1884 0006 1646     		mov	r6, r2
 1885 0008 52B1     		cbz	r2, .L162
 1886              	.LVL218:
 1887              	.L156:
 602:rtos/uC-FS/Source/fs_entry.c ****     }
 1888              		.loc 1 602 9 is_stmt 1 discriminator 1 view .LVU629
 604:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1889              		.loc 1 604 5 discriminator 1 view .LVU630
 604:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 1890              		.loc 1 604 8 is_stmt 0 discriminator 1 view .LVU631
 1891 000a 65B1     		cbz	r5, .L163
 608:rtos/uC-FS/Source/fs_entry.c ****         ((entry_type & ~FS_ENTRY_TYPE_ANY) != 0)) {
 1892              		.loc 1 608 5 is_stmt 1 view .LVU632
 608:rtos/uC-FS/Source/fs_entry.c ****         ((entry_type & ~FS_ENTRY_TYPE_ANY) != 0)) {
 1893              		.loc 1 608 8 is_stmt 0 view .LVU633
 1894 000c 14F0060F 		tst	r4, #6
 1895 0010 02D0     		beq	.L159
 608:rtos/uC-FS/Source/fs_entry.c ****         ((entry_type & ~FS_ENTRY_TYPE_ANY) != 0)) {
 1896              		.loc 1 608 50 discriminator 1 view .LVU634
 1897 0012 34F00603 		bics	r3, r4, #6
 1898 0016 0AD0     		beq	.L160
 1899              	.L159:
 610:rtos/uC-FS/Source/fs_entry.c ****         return;
 1900              		.loc 1 610 8 is_stmt 1 view .LVU635
 610:rtos/uC-FS/Source/fs_entry.c ****         return;
 1901              		.loc 1 610 15 is_stmt 0 view .LVU636
 1902 0018 40F2CA23 		movw	r3, #714
 1903 001c 3380     		strh	r3, [r6]	@ movhi
 611:rtos/uC-FS/Source/fs_entry.c ****     }
 1904              		.loc 1 611 9 is_stmt 1 view .LVU637
 1905              	.L155:
 639:rtos/uC-FS/Source/fs_entry.c **** #endif
 1906              		.loc 1 639 1 is_stmt 0 view .LVU638
 1907 001e 70BD     		pop	{r4, r5, r6, pc}
 1908              	.LVL219:
 1909              	.L162:
 602:rtos/uC-FS/Source/fs_entry.c ****     }
 1910              		.loc 1 602 9 is_stmt 1 view .LVU639
 602:rtos/uC-FS/Source/fs_entry.c ****     }
 1911              		.loc 1 602 9 view .LVU640
ARM GAS  /tmp/cc8IPqmX.s 			page 79


 1912 0020 FFF7FEFF 		bl	CPU_SW_Exception
 1913              	.LVL220:
 602:rtos/uC-FS/Source/fs_entry.c ****     }
 1914              		.loc 1 602 9 is_stmt 0 view .LVU641
 1915 0024 F1E7     		b	.L156
 1916              	.L163:
 605:rtos/uC-FS/Source/fs_entry.c ****         return;
 1917              		.loc 1 605 8 is_stmt 1 view .LVU642
 605:rtos/uC-FS/Source/fs_entry.c ****         return;
 1918              		.loc 1 605 15 is_stmt 0 view .LVU643
 1919 0026 40F28933 		movw	r3, #905
 1920 002a 3380     		strh	r3, [r6]	@ movhi
 606:rtos/uC-FS/Source/fs_entry.c ****     }
 1921              		.loc 1 606 9 is_stmt 1 view .LVU644
 1922 002c F7E7     		b	.L155
 1923              	.L160:
 624:rtos/uC-FS/Source/fs_entry.c **** #endif
 1924              		.loc 1 624 5 view .LVU645
 1925              	.LVL221:
 630:rtos/uC-FS/Source/fs_entry.c ****                        entry_type,
 1926              		.loc 1 630 5 view .LVU646
 1927 002e 3246     		mov	r2, r6
 1928 0030 2146     		mov	r1, r4
 1929 0032 2846     		mov	r0, r5
 1930 0034 FFF7FEFF 		bl	FSEntry_DelHandler
 1931              	.LVL222:
 1932 0038 F1E7     		b	.L155
 1933              		.cfi_endproc
 1934              	.LFE3:
 1936              		.section	.text.FSEntry_RenameHandler,"ax",%progbits
 1937              		.align	1
 1938              		.syntax unified
 1939              		.thumb
 1940              		.thumb_func
 1941              		.fpu fpv4-sp-d16
 1943              	FSEntry_RenameHandler:
 1944              	.LVL223:
 1945              	.LFB11:
1482:rtos/uC-FS/Source/fs_entry.c ****     CPU_INT16S   cmp_val;
 1946              		.loc 1 1482 1 view -0
 1947              		.cfi_startproc
 1948              		@ args = 0, pretend = 0, frame = 40
 1949              		@ frame_needed = 0, uses_anonymous_args = 0
1482:rtos/uC-FS/Source/fs_entry.c ****     CPU_INT16S   cmp_val;
 1950              		.loc 1 1482 1 is_stmt 0 view .LVU648
 1951 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1952              	.LCFI35:
 1953              		.cfi_def_cfa_offset 28
 1954              		.cfi_offset 4, -28
 1955              		.cfi_offset 5, -24
 1956              		.cfi_offset 6, -20
 1957              		.cfi_offset 7, -16
 1958              		.cfi_offset 8, -12
 1959              		.cfi_offset 9, -8
 1960              		.cfi_offset 14, -4
 1961 0004 8DB0     		sub	sp, sp, #52
 1962              	.LCFI36:
ARM GAS  /tmp/cc8IPqmX.s 			page 80


 1963              		.cfi_def_cfa_offset 80
 1964 0006 0546     		mov	r5, r0
 1965 0008 0E46     		mov	r6, r1
 1966 000a 1746     		mov	r7, r2
 1967 000c 1C46     		mov	r4, r3
1483:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  dflt;
 1968              		.loc 1 1483 5 is_stmt 1 view .LVU649
1484:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  diff;
 1969              		.loc 1 1484 5 view .LVU650
1485:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  dir_open;
 1970              		.loc 1 1485 5 view .LVU651
1486:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  file_open;
 1971              		.loc 1 1486 5 view .LVU652
1487:rtos/uC-FS/Source/fs_entry.c ****     CPU_BOOLEAN  entry_open;
 1972              		.loc 1 1487 5 view .LVU653
1488:rtos/uC-FS/Source/fs_entry.c ****     FS_FLAGS     mode;
 1973              		.loc 1 1488 5 view .LVU654
1489:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T   name_entry_len;
 1974              		.loc 1 1489 5 view .LVU655
1490:rtos/uC-FS/Source/fs_entry.c ****     CPU_SIZE_T   file_name_len;
 1975              		.loc 1 1490 5 view .LVU656
1491:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     name_vol_old[FS_CFG_MAX_VOL_NAME_LEN + 1u];
 1976              		.loc 1 1491 5 view .LVU657
1492:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     name_vol_new[FS_CFG_MAX_VOL_NAME_LEN + 1u];
 1977              		.loc 1 1492 5 view .LVU658
1493:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *name_entry_old;
 1978              		.loc 1 1493 5 view .LVU659
1494:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *name_entry_new;
 1979              		.loc 1 1494 5 view .LVU660
1495:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR    *file_name;
 1980              		.loc 1 1495 5 view .LVU661
1496:rtos/uC-FS/Source/fs_entry.c ****     FS_VOL      *p_vol;
 1981              		.loc 1 1496 5 view .LVU662
1497:rtos/uC-FS/Source/fs_entry.c **** 
 1982              		.loc 1 1497 5 view .LVU663
1501:rtos/uC-FS/Source/fs_entry.c ****     file_open = DEF_NO;
 1983              		.loc 1 1501 5 view .LVU664
 1984              	.LVL224:
1502:rtos/uC-FS/Source/fs_entry.c **** 
 1985              		.loc 1 1502 5 view .LVU665
1504:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 1986              		.loc 1 1504 5 view .LVU666
1504:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 1987              		.loc 1 1504 17 is_stmt 0 view .LVU667
 1988 000e 1A46     		mov	r2, r3
 1989              	.LVL225:
1504:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 1990              		.loc 1 1504 17 view .LVU668
 1991 0010 0AA9     		add	r1, sp, #40
 1992              	.LVL226:
1504:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 1993              		.loc 1 1504 17 view .LVU669
 1994 0012 FFF7FEFF 		bl	FSFile_IsOpen
 1995              	.LVL227:
1504:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 1996              		.loc 1 1504 17 view .LVU670
 1997 0016 8046     		mov	r8, r0
ARM GAS  /tmp/cc8IPqmX.s 			page 81


 1998              	.LVL228:
1505:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 1999              		.loc 1 1505 5 is_stmt 1 view .LVU671
1505:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 2000              		.loc 1 1505 10 is_stmt 0 view .LVU672
 2001 0018 2388     		ldrh	r3, [r4]
1505:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 2002              		.loc 1 1505 8 view .LVU673
 2003 001a 13B1     		cbz	r3, .L165
1505:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_FILE)) {
 2004              		.loc 1 1505 33 discriminator 1 view .LVU674
 2005 001c B3F5317F 		cmp	r3, #708
 2006 0020 3AD1     		bne	.L164
 2007              	.L165:
1511:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 2008              		.loc 1 1511 5 is_stmt 1 view .LVU675
1511:rtos/uC-FS/Source/fs_entry.c ****     if ((*p_err != FS_ERR_NONE) &&
 2009              		.loc 1 1511 17 is_stmt 0 view .LVU676
 2010 0022 2146     		mov	r1, r4
 2011 0024 2846     		mov	r0, r5
 2012 0026 FFF7FEFF 		bl	FSDir_IsOpen
 2013              	.LVL229:
1512:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
 2014              		.loc 1 1512 5 is_stmt 1 view .LVU677
1512:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
 2015              		.loc 1 1512 10 is_stmt 0 view .LVU678
 2016 002a 2388     		ldrh	r3, [r4]
1512:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
 2017              		.loc 1 1512 8 view .LVU679
 2018 002c 1BB1     		cbz	r3, .L167
1512:rtos/uC-FS/Source/fs_entry.c ****         (*p_err != FS_ERR_ENTRY_NOT_DIR)) {
 2019              		.loc 1 1512 33 discriminator 1 view .LVU680
 2020 002e 40F2C222 		movw	r2, #706
 2021 0032 9342     		cmp	r3, r2
 2022 0034 30D1     		bne	.L164
 2023              	.L167:
1518:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 2024              		.loc 1 1518 5 is_stmt 1 view .LVU681
1518:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 2025              		.loc 1 1518 27 is_stmt 0 view .LVU682
 2026 0036 20B9     		cbnz	r0, .L191
1518:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 2027              		.loc 1 1518 27 discriminator 2 view .LVU683
 2028 0038 B8F1000F 		cmp	r8, #0
 2029 003c 27D0     		beq	.L192
1518:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 2030              		.loc 1 1518 27 view .LVU684
 2031 003e 0123     		movs	r3, #1
 2032 0040 00E0     		b	.L168
 2033              	.L191:
 2034 0042 0123     		movs	r3, #1
 2035              	.L168:
 2036              	.LVL230:
1519:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_OPEN;
 2037              		.loc 1 1519 5 is_stmt 1 discriminator 6 view .LVU685
1519:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_OPEN;
 2038              		.loc 1 1519 8 is_stmt 0 discriminator 6 view .LVU686
ARM GAS  /tmp/cc8IPqmX.s 			page 82


 2039 0044 2BBB     		cbnz	r3, .L196
1525:rtos/uC-FS/Source/fs_entry.c ****         dir_open  = DEF_NO;
 2040              		.loc 1 1525 5 is_stmt 1 view .LVU687
1525:rtos/uC-FS/Source/fs_entry.c ****         dir_open  = DEF_NO;
 2041              		.loc 1 1525 8 is_stmt 0 view .LVU688
 2042 0046 7FBB     		cbnz	r7, .L170
1526:rtos/uC-FS/Source/fs_entry.c ****         file_open = DEF_NO;
 2043              		.loc 1 1526 9 is_stmt 1 view .LVU689
 2044              	.LVL231:
1527:rtos/uC-FS/Source/fs_entry.c **** 
 2045              		.loc 1 1527 9 view .LVU690
1529:rtos/uC-FS/Source/fs_entry.c ****         switch (*p_err) {
 2046              		.loc 1 1529 9 view .LVU691
1529:rtos/uC-FS/Source/fs_entry.c ****         switch (*p_err) {
 2047              		.loc 1 1529 21 is_stmt 0 view .LVU692
 2048 0048 2246     		mov	r2, r4
 2049 004a 0AA9     		add	r1, sp, #40
 2050 004c 3046     		mov	r0, r6
 2051 004e FFF7FEFF 		bl	FSFile_IsOpen
 2052              	.LVL232:
1529:rtos/uC-FS/Source/fs_entry.c ****         switch (*p_err) {
 2053              		.loc 1 1529 21 view .LVU693
 2054 0052 8046     		mov	r8, r0
 2055              	.LVL233:
1530:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_NONE:
 2056              		.loc 1 1530 9 is_stmt 1 view .LVU694
1530:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_NONE:
 2057              		.loc 1 1530 17 is_stmt 0 view .LVU695
 2058 0054 2388     		ldrh	r3, [r4]
1530:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_NONE:
 2059              		.loc 1 1530 9 view .LVU696
 2060 0056 33B1     		cbz	r3, .L171
 2061 0058 A3F53173 		sub	r3, r3, #708
 2062 005c 9BB2     		uxth	r3, r3
 2063 005e 012B     		cmp	r3, #1
 2064 0060 1AD8     		bhi	.L164
1537:rtos/uC-FS/Source/fs_entry.c ****                  break;
 2065              		.loc 1 1537 17 is_stmt 1 view .LVU697
1537:rtos/uC-FS/Source/fs_entry.c ****                  break;
 2066              		.loc 1 1537 24 is_stmt 0 view .LVU698
 2067 0062 0023     		movs	r3, #0
 2068 0064 2380     		strh	r3, [r4]	@ movhi
1538:rtos/uC-FS/Source/fs_entry.c **** 
 2069              		.loc 1 1538 18 is_stmt 1 view .LVU699
 2070              	.L171:
1546:rtos/uC-FS/Source/fs_entry.c ****         switch (*p_err) {
 2071              		.loc 1 1546 9 view .LVU700
1546:rtos/uC-FS/Source/fs_entry.c ****         switch (*p_err) {
 2072              		.loc 1 1546 21 is_stmt 0 view .LVU701
 2073 0066 2146     		mov	r1, r4
 2074 0068 3046     		mov	r0, r6
 2075 006a FFF7FEFF 		bl	FSDir_IsOpen
 2076              	.LVL234:
1547:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_NONE:
 2077              		.loc 1 1547 9 is_stmt 1 view .LVU702
1547:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_NONE:
 2078              		.loc 1 1547 17 is_stmt 0 view .LVU703
ARM GAS  /tmp/cc8IPqmX.s 			page 83


 2079 006e 2388     		ldrh	r3, [r4]
1547:rtos/uC-FS/Source/fs_entry.c ****             case FS_ERR_NONE:
 2080              		.loc 1 1547 9 view .LVU704
 2081 0070 40F2C222 		movw	r2, #706
 2082 0074 9342     		cmp	r3, r2
 2083 0076 12D0     		beq	.L172
 2084 0078 40F2C522 		movw	r2, #709
 2085 007c 9342     		cmp	r3, r2
 2086 007e 0ED0     		beq	.L172
 2087 0080 53B9     		cbnz	r3, .L164
 2088              	.L173:
1563:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 2089              		.loc 1 1563 9 is_stmt 1 view .LVU705
1563:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 2090              		.loc 1 1563 31 is_stmt 0 view .LVU706
 2091 0082 78B9     		cbnz	r0, .L193
1563:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 2092              		.loc 1 1563 31 discriminator 2 view .LVU707
 2093 0084 B8F1000F 		cmp	r8, #0
 2094 0088 1ED0     		beq	.L194
1563:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 2095              		.loc 1 1563 31 view .LVU708
 2096 008a 0123     		movs	r3, #1
 2097 008c 0BE0     		b	.L174
 2098              	.L192:
1518:rtos/uC-FS/Source/fs_entry.c ****     if (entry_open == DEF_YES) {
 2099              		.loc 1 1518 27 view .LVU709
 2100 008e 0023     		movs	r3, #0
 2101 0090 D8E7     		b	.L168
 2102              	.LVL235:
 2103              	.L196:
1520:rtos/uC-FS/Source/fs_entry.c ****         return;
 2104              		.loc 1 1520 8 is_stmt 1 view .LVU710
1520:rtos/uC-FS/Source/fs_entry.c ****         return;
 2105              		.loc 1 1520 15 is_stmt 0 view .LVU711
 2106 0092 40F2CB23 		movw	r3, #715
 2107              	.LVL236:
1520:rtos/uC-FS/Source/fs_entry.c ****         return;
 2108              		.loc 1 1520 15 view .LVU712
 2109 0096 2380     		strh	r3, [r4]	@ movhi
1521:rtos/uC-FS/Source/fs_entry.c ****     }
 2110              		.loc 1 1521 9 is_stmt 1 view .LVU713
 2111              	.LVL237:
 2112              	.L164:
1691:rtos/uC-FS/Source/fs_entry.c **** #endif
 2113              		.loc 1 1691 1 is_stmt 0 view .LVU714
 2114 0098 0DB0     		add	sp, sp, #52
 2115              	.LCFI37:
 2116              		.cfi_remember_state
 2117              		.cfi_def_cfa_offset 28
 2118              		@ sp needed
 2119 009a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2120              	.LVL238:
 2121              	.L172:
 2122              	.LCFI38:
 2123              		.cfi_restore_state
1554:rtos/uC-FS/Source/fs_entry.c ****                  break;
ARM GAS  /tmp/cc8IPqmX.s 			page 84


 2124              		.loc 1 1554 17 is_stmt 1 view .LVU715
1554:rtos/uC-FS/Source/fs_entry.c ****                  break;
 2125              		.loc 1 1554 24 is_stmt 0 view .LVU716
 2126 009e 0023     		movs	r3, #0
 2127 00a0 2380     		strh	r3, [r4]	@ movhi
1555:rtos/uC-FS/Source/fs_entry.c **** 
 2128              		.loc 1 1555 18 is_stmt 1 view .LVU717
 2129 00a2 EEE7     		b	.L173
 2130              	.L193:
1563:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 2131              		.loc 1 1563 31 is_stmt 0 view .LVU718
 2132 00a4 0123     		movs	r3, #1
 2133              	.L174:
 2134              	.LVL239:
1564:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_ENTRY_OPEN;
 2135              		.loc 1 1564 9 is_stmt 1 discriminator 6 view .LVU719
1564:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_ENTRY_OPEN;
 2136              		.loc 1 1564 12 is_stmt 0 discriminator 6 view .LVU720
 2137 00a6 8BB9     		cbnz	r3, .L197
 2138              	.L170:
1574:rtos/uC-FS/Source/fs_entry.c ****                                   name_vol_new,
 2139              		.loc 1 1574 5 is_stmt 1 view .LVU721
1574:rtos/uC-FS/Source/fs_entry.c ****                                   name_vol_new,
 2140              		.loc 1 1574 22 is_stmt 0 view .LVU722
 2141 00a8 2246     		mov	r2, r4
 2142 00aa 04A9     		add	r1, sp, #16
 2143 00ac 3046     		mov	r0, r6
 2144              	.LVL240:
1574:rtos/uC-FS/Source/fs_entry.c ****                                   name_vol_new,
 2145              		.loc 1 1574 22 view .LVU723
 2146 00ae FFF7FEFF 		bl	FS_PathParse
 2147              	.LVL241:
1577:rtos/uC-FS/Source/fs_entry.c ****         return;
 2148              		.loc 1 1577 5 is_stmt 1 view .LVU724
1577:rtos/uC-FS/Source/fs_entry.c ****         return;
 2149              		.loc 1 1577 9 is_stmt 0 view .LVU725
 2150 00b2 2388     		ldrh	r3, [r4]
1577:rtos/uC-FS/Source/fs_entry.c ****         return;
 2151              		.loc 1 1577 8 view .LVU726
 2152 00b4 002B     		cmp	r3, #0
 2153 00b6 EFD1     		bne	.L164
1581:rtos/uC-FS/Source/fs_entry.c ****        *p_err =  FS_ERR_NAME_INVALID;
 2154              		.loc 1 1581 5 is_stmt 1 view .LVU727
1581:rtos/uC-FS/Source/fs_entry.c ****        *p_err =  FS_ERR_NAME_INVALID;
 2155              		.loc 1 1581 8 is_stmt 0 view .LVU728
 2156 00b8 60B1     		cbz	r0, .L198
1586:rtos/uC-FS/Source/fs_entry.c ****         *p_err = FS_ERR_NAME_INVALID;
 2157              		.loc 1 1586 5 is_stmt 1 view .LVU729
1586:rtos/uC-FS/Source/fs_entry.c ****         *p_err = FS_ERR_NAME_INVALID;
 2158              		.loc 1 1586 9 is_stmt 0 view .LVU730
 2159 00ba 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1586:rtos/uC-FS/Source/fs_entry.c ****         *p_err = FS_ERR_NAME_INVALID;
 2160              		.loc 1 1586 8 view .LVU731
 2161 00bc 5C2B     		cmp	r3, #92
 2162 00be 0DD0     		beq	.L176
1587:rtos/uC-FS/Source/fs_entry.c ****          return;
 2163              		.loc 1 1587 9 is_stmt 1 view .LVU732
ARM GAS  /tmp/cc8IPqmX.s 			page 85


1587:rtos/uC-FS/Source/fs_entry.c ****          return;
 2164              		.loc 1 1587 16 is_stmt 0 view .LVU733
 2165 00c0 40F28733 		movw	r3, #903
 2166 00c4 2380     		strh	r3, [r4]	@ movhi
1588:rtos/uC-FS/Source/fs_entry.c ****     }
 2167              		.loc 1 1588 10 is_stmt 1 view .LVU734
 2168 00c6 E7E7     		b	.L164
 2169              	.LVL242:
 2170              	.L194:
1563:rtos/uC-FS/Source/fs_entry.c ****         if (entry_open == DEF_YES) {
 2171              		.loc 1 1563 31 is_stmt 0 view .LVU735
 2172 00c8 0023     		movs	r3, #0
 2173 00ca ECE7     		b	.L174
 2174              	.LVL243:
 2175              	.L197:
1565:rtos/uC-FS/Source/fs_entry.c ****             return;
 2176              		.loc 1 1565 12 is_stmt 1 view .LVU736
1565:rtos/uC-FS/Source/fs_entry.c ****             return;
 2177              		.loc 1 1565 19 is_stmt 0 view .LVU737
 2178 00cc 40F2CB23 		movw	r3, #715
 2179              	.LVL244:
1565:rtos/uC-FS/Source/fs_entry.c ****             return;
 2180              		.loc 1 1565 19 view .LVU738
 2181 00d0 2380     		strh	r3, [r4]	@ movhi
1566:rtos/uC-FS/Source/fs_entry.c ****         }
 2182              		.loc 1 1566 13 is_stmt 1 view .LVU739
 2183 00d2 E1E7     		b	.L164
 2184              	.LVL245:
 2185              	.L198:
1582:rtos/uC-FS/Source/fs_entry.c ****         return;
 2186              		.loc 1 1582 8 view .LVU740
1582:rtos/uC-FS/Source/fs_entry.c ****         return;
 2187              		.loc 1 1582 15 is_stmt 0 view .LVU741
 2188 00d4 40F28733 		movw	r3, #903
 2189 00d8 2380     		strh	r3, [r4]	@ movhi
1583:rtos/uC-FS/Source/fs_entry.c ****     }
 2190              		.loc 1 1583 9 is_stmt 1 view .LVU742
 2191 00da DDE7     		b	.L164
 2192              	.L176:
1590:rtos/uC-FS/Source/fs_entry.c **** 
 2193              		.loc 1 1590 5 view .LVU743
1590:rtos/uC-FS/Source/fs_entry.c **** 
 2194              		.loc 1 1590 19 is_stmt 0 view .LVU744
 2195 00dc 00F10109 		add	r9, r0, #1
 2196              	.LVL246:
1592:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
 2197              		.loc 1 1592 5 is_stmt 1 view .LVU745
1592:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
 2198              		.loc 1 1592 23 is_stmt 0 view .LVU746
 2199 00e0 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
1592:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
 2200              		.loc 1 1592 8 view .LVU747
 2201 00e2 1BB9     		cbnz	r3, .L177
1593:rtos/uC-FS/Source/fs_entry.c ****         return;
 2202              		.loc 1 1593 8 is_stmt 1 view .LVU748
1593:rtos/uC-FS/Source/fs_entry.c ****         return;
 2203              		.loc 1 1593 15 is_stmt 0 view .LVU749
ARM GAS  /tmp/cc8IPqmX.s 			page 86


 2204 00e4 40F2C923 		movw	r3, #713
 2205 00e8 2380     		strh	r3, [r4]	@ movhi
1594:rtos/uC-FS/Source/fs_entry.c ****     }
 2206              		.loc 1 1594 9 is_stmt 1 view .LVU750
 2207 00ea D5E7     		b	.L164
 2208              	.L177:
1597:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry_len > FS_CFG_MAX_PATH_NAME_LEN) {            /* Rtn err if file name is too long
 2209              		.loc 1 1597 5 view .LVU751
1597:rtos/uC-FS/Source/fs_entry.c ****     if (name_entry_len > FS_CFG_MAX_PATH_NAME_LEN) {            /* Rtn err if file name is too long
 2210              		.loc 1 1597 22 is_stmt 0 view .LVU752
 2211 00ec 40F20511 		movw	r1, #261
 2212 00f0 4846     		mov	r0, r9
 2213 00f2 FFF7FEFF 		bl	Str_Len_N
 2214              	.LVL247:
 2215 00f6 8046     		mov	r8, r0
 2216              	.LVL248:
1598:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_PATH_TOO_LONG;
 2217              		.loc 1 1598 5 is_stmt 1 view .LVU753
1598:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_PATH_TOO_LONG;
 2218              		.loc 1 1598 8 is_stmt 0 view .LVU754
 2219 00f8 B0F5827F 		cmp	r0, #260
 2220 00fc 03D9     		bls	.L178
1599:rtos/uC-FS/Source/fs_entry.c ****         return;
 2221              		.loc 1 1599 8 is_stmt 1 view .LVU755
1599:rtos/uC-FS/Source/fs_entry.c ****         return;
 2222              		.loc 1 1599 15 is_stmt 0 view .LVU756
 2223 00fe 40F28A33 		movw	r3, #906
 2224 0102 2380     		strh	r3, [r4]	@ movhi
1600:rtos/uC-FS/Source/fs_entry.c ****     }
 2225              		.loc 1 1600 9 is_stmt 1 view .LVU757
 2226 0104 C8E7     		b	.L164
 2227              	.L178:
1603:rtos/uC-FS/Source/fs_entry.c ****     file_name_len = Str_Len_N(      file_name,  FS_CFG_MAX_FILE_NAME_LEN + 1u);
 2228              		.loc 1 1603 5 view .LVU758
1603:rtos/uC-FS/Source/fs_entry.c ****     file_name_len = Str_Len_N(      file_name,  FS_CFG_MAX_FILE_NAME_LEN + 1u);
 2229              		.loc 1 1603 21 is_stmt 0 view .LVU759
 2230 0106 5C22     		movs	r2, #92
 2231 0108 4FF48271 		mov	r1, #260
 2232 010c 4846     		mov	r0, r9
 2233              	.LVL249:
1603:rtos/uC-FS/Source/fs_entry.c ****     file_name_len = Str_Len_N(      file_name,  FS_CFG_MAX_FILE_NAME_LEN + 1u);
 2234              		.loc 1 1603 21 view .LVU760
 2235 010e FFF7FEFF 		bl	Str_Char_Last_N
 2236              	.LVL250:
1604:rtos/uC-FS/Source/fs_entry.c ****     if (file_name_len == 0u) {
 2237              		.loc 1 1604 5 is_stmt 1 view .LVU761
1604:rtos/uC-FS/Source/fs_entry.c ****     if (file_name_len == 0u) {
 2238              		.loc 1 1604 21 is_stmt 0 view .LVU762
 2239 0112 4FF48071 		mov	r1, #256
 2240 0116 FFF7FEFF 		bl	Str_Len_N
 2241              	.LVL251:
1605:rtos/uC-FS/Source/fs_entry.c ****         file_name_len = name_entry_len;
 2242              		.loc 1 1605 5 is_stmt 1 view .LVU763
1605:rtos/uC-FS/Source/fs_entry.c ****         file_name_len = name_entry_len;
 2243              		.loc 1 1605 8 is_stmt 0 view .LVU764
 2244 011a 00B1     		cbz	r0, .L179
1604:rtos/uC-FS/Source/fs_entry.c ****     if (file_name_len == 0u) {
ARM GAS  /tmp/cc8IPqmX.s 			page 87


 2245              		.loc 1 1604 21 view .LVU765
 2246 011c 8046     		mov	r8, r0
 2247              	.LVL252:
 2248              	.L179:
1609:rtos/uC-FS/Source/fs_entry.c ****         *p_err = FS_ERR_NAME_BASE_TOO_LONG;                     /* Rtn err if base name is too long
 2249              		.loc 1 1609 5 is_stmt 1 view .LVU766
1609:rtos/uC-FS/Source/fs_entry.c ****         *p_err = FS_ERR_NAME_BASE_TOO_LONG;                     /* Rtn err if base name is too long
 2250              		.loc 1 1609 8 is_stmt 0 view .LVU767
 2251 011e B8F1FF0F 		cmp	r8, #255
 2252 0122 03D9     		bls	.L180
1610:rtos/uC-FS/Source/fs_entry.c ****         return;
 2253              		.loc 1 1610 9 is_stmt 1 view .LVU768
1610:rtos/uC-FS/Source/fs_entry.c ****         return;
 2254              		.loc 1 1610 16 is_stmt 0 view .LVU769
 2255 0124 4FF46173 		mov	r3, #900
 2256 0128 2380     		strh	r3, [r4]	@ movhi
1611:rtos/uC-FS/Source/fs_entry.c ****     }
 2257              		.loc 1 1611 9 is_stmt 1 view .LVU770
 2258 012a B5E7     		b	.L164
 2259              	.L180:
1615:rtos/uC-FS/Source/fs_entry.c ****                                              name_vol_old,
 2260              		.loc 1 1615 5 view .LVU771
1615:rtos/uC-FS/Source/fs_entry.c ****                                              name_vol_old,
 2261              		.loc 1 1615 22 is_stmt 0 view .LVU772
 2262 012c 0094     		str	r4, [sp]
 2263 012e 03AB     		add	r3, sp, #12
 2264 0130 0DF12F02 		add	r2, sp, #47
 2265 0134 07A9     		add	r1, sp, #28
 2266 0136 2846     		mov	r0, r5
 2267 0138 FFF7FEFF 		bl	FSEntry_NameParseChkEx
 2268              	.LVL253:
 2269 013c 8046     		mov	r8, r0
 2270              	.LVL254:
1620:rtos/uC-FS/Source/fs_entry.c ****     if (( p_vol          == (FS_VOL   *)0) ||                   /* Rtn err if no vol found ...     
 2271              		.loc 1 1620 5 is_stmt 1 view .LVU773
1621:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry_old == (CPU_CHAR *)0) ||                   /*                         ... or i
 2272              		.loc 1 1621 5 view .LVU774
1621:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry_old == (CPU_CHAR *)0) ||                   /*                         ... or i
 2273              		.loc 1 1621 26 is_stmt 0 view .LVU775
 2274 013e 0398     		ldr	r0, [sp, #12]
 2275              	.LVL255:
1621:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry_old == (CPU_CHAR *)0) ||                   /*                         ... or i
 2276              		.loc 1 1621 8 view .LVU776
 2277 0140 0028     		cmp	r0, #0
 2278 0142 A9D0     		beq	.L164
1621:rtos/uC-FS/Source/fs_entry.c ****         ( name_entry_old == (CPU_CHAR *)0) ||                   /*                         ... or i
 2279              		.loc 1 1621 44 discriminator 1 view .LVU777
 2280 0144 B8F1000F 		cmp	r8, #0
 2281 0148 A6D0     		beq	.L164
1623:rtos/uC-FS/Source/fs_entry.c ****         return;
 2282              		.loc 1 1623 10 view .LVU778
 2283 014a 2388     		ldrh	r3, [r4]
1622:rtos/uC-FS/Source/fs_entry.c ****         (*p_err         !=  FS_ERR_NONE)) {                     /*                         ... or i
 2284              		.loc 1 1622 44 view .LVU779
 2285 014c 002B     		cmp	r3, #0
 2286 014e A3D1     		bne	.L164
1627:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
ARM GAS  /tmp/cc8IPqmX.s 			page 88


 2287              		.loc 1 1627 5 is_stmt 1 view .LVU780
1627:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 2288              		.loc 1 1627 23 is_stmt 0 view .LVU781
 2289 0150 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
1627:rtos/uC-FS/Source/fs_entry.c ****         FSVol_ReleaseUnlock(p_vol);
 2290              		.loc 1 1627 8 view .LVU782
 2291 0154 C3B1     		cbz	r3, .L199
1636:rtos/uC-FS/Source/fs_entry.c ****     if (name_vol_new[0] == (CPU_CHAR)ASCII_CHAR_NULL) {         /* Vols diff if new is dflt ...    
 2292              		.loc 1 1636 5 is_stmt 1 view .LVU783
 2293              	.LVL256:
1637:rtos/uC-FS/Source/fs_entry.c ****         if (dflt == DEF_NO) {                                   /*                          ... but
 2294              		.loc 1 1637 5 view .LVU784
1637:rtos/uC-FS/Source/fs_entry.c ****         if (dflt == DEF_NO) {                                   /*                          ... but
 2295              		.loc 1 1637 21 is_stmt 0 view .LVU785
 2296 0156 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
1637:rtos/uC-FS/Source/fs_entry.c ****         if (dflt == DEF_NO) {                                   /*                          ... but
 2297              		.loc 1 1637 8 view .LVU786
 2298 015a DBB9     		cbnz	r3, .L182
1638:rtos/uC-FS/Source/fs_entry.c ****             diff = DEF_YES;
 2299              		.loc 1 1638 9 is_stmt 1 view .LVU787
1638:rtos/uC-FS/Source/fs_entry.c ****             diff = DEF_YES;
 2300              		.loc 1 1638 18 is_stmt 0 view .LVU788
 2301 015c 9DF82F30 		ldrb	r3, [sp, #47]	@ zero_extendqisi2
1638:rtos/uC-FS/Source/fs_entry.c ****             diff = DEF_YES;
 2302              		.loc 1 1638 12 view .LVU789
 2303 0160 FBB1     		cbz	r3, .L183
 2304              	.L184:
 2305              	.LVL257:
1674:rtos/uC-FS/Source/fs_entry.c ****             FSVol_ReleaseUnlock(p_vol);
 2306              		.loc 1 1674 9 is_stmt 1 view .LVU790
1674:rtos/uC-FS/Source/fs_entry.c ****             FSVol_ReleaseUnlock(p_vol);
 2307              		.loc 1 1674 13 is_stmt 0 view .LVU791
 2308 0162 0398     		ldr	r0, [sp, #12]
 2309 0164 C368     		ldr	r3, [r0, #12]
1674:rtos/uC-FS/Source/fs_entry.c ****             FSVol_ReleaseUnlock(p_vol);
 2310              		.loc 1 1674 12 view .LVU792
 2311 0166 13F0020F 		tst	r3, #2
 2312 016a 33D0     		beq	.L200
1680:rtos/uC-FS/Source/fs_entry.c ****                           name_entry_old,
 2313              		.loc 1 1680 9 is_stmt 1 view .LVU793
 2314 016c 0094     		str	r4, [sp]
 2315 016e 3B46     		mov	r3, r7
 2316 0170 4A46     		mov	r2, r9
 2317 0172 4146     		mov	r1, r8
 2318 0174 FFF7FEFF 		bl	FSSys_EntryRename
 2319              	.LVL258:
1685:rtos/uC-FS/Source/fs_entry.c ****             *p_err =  FS_ERR_NONE;
 2320              		.loc 1 1685 9 view .LVU794
1685:rtos/uC-FS/Source/fs_entry.c ****             *p_err =  FS_ERR_NONE;
 2321              		.loc 1 1685 13 is_stmt 0 view .LVU795
 2322 0178 2388     		ldrh	r3, [r4]
1685:rtos/uC-FS/Source/fs_entry.c ****             *p_err =  FS_ERR_NONE;
 2323              		.loc 1 1685 12 view .LVU796
 2324 017a B3F52F7F 		cmp	r3, #700
 2325 017e 2FD0     		beq	.L201
 2326              	.L189:
1689:rtos/uC-FS/Source/fs_entry.c ****     }
ARM GAS  /tmp/cc8IPqmX.s 			page 89


 2327              		.loc 1 1689 9 is_stmt 1 view .LVU797
 2328 0180 0398     		ldr	r0, [sp, #12]
 2329 0182 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 2330              	.LVL259:
 2331 0186 87E7     		b	.L164
 2332              	.L199:
1628:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_ENTRY_ROOT_DIR;
 2333              		.loc 1 1628 9 view .LVU798
 2334 0188 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 2335              	.LVL260:
1629:rtos/uC-FS/Source/fs_entry.c ****         return;
 2336              		.loc 1 1629 8 view .LVU799
1629:rtos/uC-FS/Source/fs_entry.c ****         return;
 2337              		.loc 1 1629 15 is_stmt 0 view .LVU800
 2338 018c 40F2C923 		movw	r3, #713
 2339 0190 2380     		strh	r3, [r4]	@ movhi
1630:rtos/uC-FS/Source/fs_entry.c ****     }
 2340              		.loc 1 1630 9 is_stmt 1 view .LVU801
 2341 0192 81E7     		b	.L164
 2342              	.LVL261:
 2343              	.L182:
1642:rtos/uC-FS/Source/fs_entry.c ****         if (cmp_val != 0) {                                     /* Old & new vol names are diff.   
 2344              		.loc 1 1642 9 view .LVU802
1642:rtos/uC-FS/Source/fs_entry.c ****         if (cmp_val != 0) {                                     /* Old & new vol names are diff.   
 2345              		.loc 1 1642 19 is_stmt 0 view .LVU803
 2346 0194 0A22     		movs	r2, #10
 2347 0196 04A9     		add	r1, sp, #16
 2348 0198 07A8     		add	r0, sp, #28
 2349 019a FFF7FEFF 		bl	Str_Cmp_N
 2350              	.LVL262:
1643:rtos/uC-FS/Source/fs_entry.c ****             diff = DEF_YES;
 2351              		.loc 1 1643 9 is_stmt 1 view .LVU804
1643:rtos/uC-FS/Source/fs_entry.c ****             diff = DEF_YES;
 2352              		.loc 1 1643 12 is_stmt 0 view .LVU805
 2353 019e 0028     		cmp	r0, #0
 2354 01a0 DFD0     		beq	.L184
 2355              	.LVL263:
 2356              	.L183:
1649:rtos/uC-FS/Source/fs_entry.c **** 
 2357              		.loc 1 1649 9 is_stmt 1 view .LVU806
 2358 01a2 0398     		ldr	r0, [sp, #12]
 2359 01a4 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 2360              	.LVL264:
1651:rtos/uC-FS/Source/fs_entry.c ****                      name_full_new,
 2361              		.loc 1 1651 9 view .LVU807
 2362 01a8 2346     		mov	r3, r4
 2363 01aa 3A46     		mov	r2, r7
 2364 01ac 3146     		mov	r1, r6
 2365 01ae 2846     		mov	r0, r5
 2366 01b0 FFF7FEFF 		bl	FSEntry_Copy
 2367              	.LVL265:
1656:rtos/uC-FS/Source/fs_entry.c ****             if (*p_err == FS_ERR_ENTRY_NOT_FILE) {
 2368              		.loc 1 1656 9 view .LVU808
1656:rtos/uC-FS/Source/fs_entry.c ****             if (*p_err == FS_ERR_ENTRY_NOT_FILE) {
 2369              		.loc 1 1656 13 is_stmt 0 view .LVU809
 2370 01b4 2388     		ldrh	r3, [r4]
1656:rtos/uC-FS/Source/fs_entry.c ****             if (*p_err == FS_ERR_ENTRY_NOT_FILE) {
ARM GAS  /tmp/cc8IPqmX.s 			page 90


 2371              		.loc 1 1656 12 view .LVU810
 2372 01b6 3BB1     		cbz	r3, .L185
1657:rtos/uC-FS/Source/fs_entry.c ****                 *p_err =  FS_ERR_ENTRIES_VOLS_DIFF;
 2373              		.loc 1 1657 13 is_stmt 1 view .LVU811
1657:rtos/uC-FS/Source/fs_entry.c ****                 *p_err =  FS_ERR_ENTRIES_VOLS_DIFF;
 2374              		.loc 1 1657 16 is_stmt 0 view .LVU812
 2375 01b8 B3F5317F 		cmp	r3, #708
 2376 01bc 7FF46CAF 		bne	.L164
1658:rtos/uC-FS/Source/fs_entry.c ****             }
 2377              		.loc 1 1658 17 is_stmt 1 view .LVU813
1658:rtos/uC-FS/Source/fs_entry.c ****             }
 2378              		.loc 1 1658 24 is_stmt 0 view .LVU814
 2379 01c0 40F2BE23 		movw	r3, #702
 2380 01c4 2380     		strh	r3, [r4]	@ movhi
1660:rtos/uC-FS/Source/fs_entry.c ****         }
 2381              		.loc 1 1660 13 is_stmt 1 view .LVU815
 2382 01c6 67E7     		b	.L164
 2383              	.L185:
1663:rtos/uC-FS/Source/fs_entry.c ****                     FS_ENTRY_TYPE_FILE,
 2384              		.loc 1 1663 9 view .LVU816
 2385 01c8 2246     		mov	r2, r4
 2386 01ca 0221     		movs	r1, #2
 2387 01cc 2846     		mov	r0, r5
 2388 01ce FFF7FEFF 		bl	FSEntry_Del
 2389              	.LVL266:
1666:rtos/uC-FS/Source/fs_entry.c ****             return;
 2390              		.loc 1 1666 9 view .LVU817
 2391 01d2 61E7     		b	.L164
 2392              	.L200:
1675:rtos/uC-FS/Source/fs_entry.c ****            *p_err = FS_ERR_VOL_INVALID_OP;
 2393              		.loc 1 1675 13 view .LVU818
 2394 01d4 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 2395              	.LVL267:
1676:rtos/uC-FS/Source/fs_entry.c ****             return;
 2396              		.loc 1 1676 12 view .LVU819
1676:rtos/uC-FS/Source/fs_entry.c ****             return;
 2397              		.loc 1 1676 19 is_stmt 0 view .LVU820
 2398 01d8 40F27D53 		movw	r3, #1405
 2399 01dc 2380     		strh	r3, [r4]	@ movhi
1677:rtos/uC-FS/Source/fs_entry.c ****         }
 2400              		.loc 1 1677 13 is_stmt 1 view .LVU821
 2401 01de 5BE7     		b	.L164
 2402              	.L201:
1686:rtos/uC-FS/Source/fs_entry.c ****         }
 2403              		.loc 1 1686 13 view .LVU822
1686:rtos/uC-FS/Source/fs_entry.c ****         }
 2404              		.loc 1 1686 20 is_stmt 0 view .LVU823
 2405 01e0 0023     		movs	r3, #0
 2406 01e2 2380     		strh	r3, [r4]	@ movhi
 2407 01e4 CCE7     		b	.L189
 2408              		.cfi_endproc
 2409              	.LFE11:
 2411              		.section	.text.FSEntry_Query,"ax",%progbits
 2412              		.align	1
 2413              		.global	FSEntry_Query
 2414              		.syntax unified
 2415              		.thumb
ARM GAS  /tmp/cc8IPqmX.s 			page 91


 2416              		.thumb_func
 2417              		.fpu fpv4-sp-d16
 2419              	FSEntry_Query:
 2420              	.LVL268:
 2421              	.LFB4:
 684:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 2422              		.loc 1 684 1 is_stmt 1 view -0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 0, uses_anonymous_args = 0
 684:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp;
 2426              		.loc 1 684 1 is_stmt 0 view .LVU825
 2427 0000 70B5     		push	{r4, r5, r6, lr}
 2428              	.LCFI39:
 2429              		.cfi_def_cfa_offset 16
 2430              		.cfi_offset 4, -16
 2431              		.cfi_offset 5, -12
 2432              		.cfi_offset 6, -8
 2433              		.cfi_offset 14, -4
 2434 0002 0446     		mov	r4, r0
 2435 0004 0D46     		mov	r5, r1
 685:rtos/uC-FS/Source/fs_entry.c **** 
 2436              		.loc 1 685 5 is_stmt 1 view .LVU826
 689:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 2437              		.loc 1 689 5 view .LVU827
 689:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 2438              		.loc 1 689 8 is_stmt 0 view .LVU828
 2439 0006 1646     		mov	r6, r2
 2440 0008 3AB1     		cbz	r2, .L208
 2441              	.LVL269:
 2442              	.L203:
 690:rtos/uC-FS/Source/fs_entry.c ****     }
 2443              		.loc 1 690 9 is_stmt 1 discriminator 1 view .LVU829
 692:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 2444              		.loc 1 692 5 discriminator 1 view .LVU830
 692:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 2445              		.loc 1 692 8 is_stmt 0 discriminator 1 view .LVU831
 2446 000a 4CB1     		cbz	r4, .L209
 696:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NULL_PTR;
 2447              		.loc 1 696 5 is_stmt 1 view .LVU832
 696:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NULL_PTR;
 2448              		.loc 1 696 8 is_stmt 0 view .LVU833
 2449 000c 65B1     		cbz	r5, .L210
 711:rtos/uC-FS/Source/fs_entry.c **** #endif
 2450              		.loc 1 711 5 is_stmt 1 view .LVU834
 2451              	.LVL270:
 716:rtos/uC-FS/Source/fs_entry.c ****                          p_info,
 2452              		.loc 1 716 5 view .LVU835
 2453 000e 3246     		mov	r2, r6
 2454 0010 2946     		mov	r1, r5
 2455 0012 2046     		mov	r0, r4
 2456 0014 FFF7FEFF 		bl	FSEntry_QueryHandler
 2457              	.LVL271:
 2458              	.L202:
 725:rtos/uC-FS/Source/fs_entry.c **** 
 2459              		.loc 1 725 1 is_stmt 0 view .LVU836
 2460 0018 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cc8IPqmX.s 			page 92


 2461              	.LVL272:
 2462              	.L208:
 690:rtos/uC-FS/Source/fs_entry.c ****     }
 2463              		.loc 1 690 9 is_stmt 1 view .LVU837
 690:rtos/uC-FS/Source/fs_entry.c ****     }
 2464              		.loc 1 690 9 view .LVU838
 2465 001a FFF7FEFF 		bl	CPU_SW_Exception
 2466              	.LVL273:
 690:rtos/uC-FS/Source/fs_entry.c ****     }
 2467              		.loc 1 690 9 is_stmt 0 view .LVU839
 2468 001e F4E7     		b	.L203
 2469              	.L209:
 693:rtos/uC-FS/Source/fs_entry.c ****         return;
 2470              		.loc 1 693 8 is_stmt 1 view .LVU840
 693:rtos/uC-FS/Source/fs_entry.c ****         return;
 2471              		.loc 1 693 15 is_stmt 0 view .LVU841
 2472 0020 40F28933 		movw	r3, #905
 2473 0024 3380     		strh	r3, [r6]	@ movhi
 694:rtos/uC-FS/Source/fs_entry.c ****     }
 2474              		.loc 1 694 9 is_stmt 1 view .LVU842
 2475 0026 F7E7     		b	.L202
 2476              	.L210:
 697:rtos/uC-FS/Source/fs_entry.c ****         return;
 2477              		.loc 1 697 8 view .LVU843
 697:rtos/uC-FS/Source/fs_entry.c ****         return;
 2478              		.loc 1 697 15 is_stmt 0 view .LVU844
 2479 0028 1323     		movs	r3, #19
 2480 002a 3380     		strh	r3, [r6]	@ movhi
 698:rtos/uC-FS/Source/fs_entry.c ****     }
 2481              		.loc 1 698 9 is_stmt 1 view .LVU845
 2482 002c F4E7     		b	.L202
 2483              		.cfi_endproc
 2484              	.LFE4:
 2486              		.section	.text.FSEntry_Rename,"ax",%progbits
 2487              		.align	1
 2488              		.global	FSEntry_Rename
 2489              		.syntax unified
 2490              		.thumb
 2491              		.thumb_func
 2492              		.fpu fpv4-sp-d16
 2494              	FSEntry_Rename:
 2495              	.LVL274:
 2496              	.LFB5:
 811:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp_old;
 2497              		.loc 1 811 1 view -0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 0
 2500              		@ frame_needed = 0, uses_anonymous_args = 0
 811:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp_old;
 2501              		.loc 1 811 1 is_stmt 0 view .LVU847
 2502 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2503              	.LCFI40:
 2504              		.cfi_def_cfa_offset 24
 2505              		.cfi_offset 3, -24
 2506              		.cfi_offset 4, -20
 2507              		.cfi_offset 5, -16
 2508              		.cfi_offset 6, -12
ARM GAS  /tmp/cc8IPqmX.s 			page 93


 2509              		.cfi_offset 7, -8
 2510              		.cfi_offset 14, -4
 2511 0002 0446     		mov	r4, r0
 2512 0004 0D46     		mov	r5, r1
 2513 0006 1646     		mov	r6, r2
 812:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR  *name_full_temp_new;
 2514              		.loc 1 812 5 is_stmt 1 view .LVU848
 813:rtos/uC-FS/Source/fs_entry.c **** 
 2515              		.loc 1 813 5 view .LVU849
 817:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 2516              		.loc 1 817 5 view .LVU850
 817:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 2517              		.loc 1 817 8 is_stmt 0 view .LVU851
 2518 0008 1F46     		mov	r7, r3
 2519 000a 43B1     		cbz	r3, .L217
 2520              	.LVL275:
 2521              	.L212:
 818:rtos/uC-FS/Source/fs_entry.c ****     }
 2522              		.loc 1 818 9 is_stmt 1 discriminator 1 view .LVU852
 820:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 2523              		.loc 1 820 5 discriminator 1 view .LVU853
 820:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 2524              		.loc 1 820 8 is_stmt 0 discriminator 1 view .LVU854
 2525 000c 54B1     		cbz	r4, .L218
 824:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 2526              		.loc 1 824 5 is_stmt 1 view .LVU855
 824:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 2527              		.loc 1 824 8 is_stmt 0 view .LVU856
 2528 000e 6DB1     		cbz	r5, .L219
 850:rtos/uC-FS/Source/fs_entry.c ****     name_full_temp_new = name_full_new;
 2529              		.loc 1 850 5 is_stmt 1 view .LVU857
 2530              	.LVL276:
 851:rtos/uC-FS/Source/fs_entry.c **** #endif
 2531              		.loc 1 851 5 view .LVU858
 855:rtos/uC-FS/Source/fs_entry.c ****                           name_full_temp_new,
 2532              		.loc 1 855 5 view .LVU859
 2533 0010 3B46     		mov	r3, r7
 2534 0012 3246     		mov	r2, r6
 2535 0014 2946     		mov	r1, r5
 2536 0016 2046     		mov	r0, r4
 2537 0018 FFF7FEFF 		bl	FSEntry_RenameHandler
 2538              	.LVL277:
 2539              	.L211:
 868:rtos/uC-FS/Source/fs_entry.c **** #endif
 2540              		.loc 1 868 1 is_stmt 0 view .LVU860
 2541 001c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2542              	.LVL278:
 2543              	.L217:
 818:rtos/uC-FS/Source/fs_entry.c ****     }
 2544              		.loc 1 818 9 is_stmt 1 view .LVU861
 818:rtos/uC-FS/Source/fs_entry.c ****     }
 2545              		.loc 1 818 9 view .LVU862
 2546 001e FFF7FEFF 		bl	CPU_SW_Exception
 2547              	.LVL279:
 818:rtos/uC-FS/Source/fs_entry.c ****     }
 2548              		.loc 1 818 9 is_stmt 0 view .LVU863
 2549 0022 F3E7     		b	.L212
ARM GAS  /tmp/cc8IPqmX.s 			page 94


 2550              	.L218:
 821:rtos/uC-FS/Source/fs_entry.c ****         return;
 2551              		.loc 1 821 8 is_stmt 1 view .LVU864
 821:rtos/uC-FS/Source/fs_entry.c ****         return;
 2552              		.loc 1 821 15 is_stmt 0 view .LVU865
 2553 0024 40F28933 		movw	r3, #905
 2554 0028 3B80     		strh	r3, [r7]	@ movhi
 822:rtos/uC-FS/Source/fs_entry.c ****     }
 2555              		.loc 1 822 9 is_stmt 1 view .LVU866
 2556 002a F7E7     		b	.L211
 2557              	.L219:
 825:rtos/uC-FS/Source/fs_entry.c ****         return;
 2558              		.loc 1 825 8 view .LVU867
 825:rtos/uC-FS/Source/fs_entry.c ****         return;
 2559              		.loc 1 825 15 is_stmt 0 view .LVU868
 2560 002c 40F28933 		movw	r3, #905
 2561 0030 3B80     		strh	r3, [r7]	@ movhi
 826:rtos/uC-FS/Source/fs_entry.c ****     }
 2562              		.loc 1 826 9 is_stmt 1 view .LVU869
 2563 0032 F3E7     		b	.L211
 2564              		.cfi_endproc
 2565              	.LFE5:
 2567              		.section	.text.FSEntry_TimeSet,"ax",%progbits
 2568              		.align	1
 2569              		.global	FSEntry_TimeSet
 2570              		.syntax unified
 2571              		.thumb
 2572              		.thumb_func
 2573              		.fpu fpv4-sp-d16
 2575              	FSEntry_TimeSet:
 2576              	.LVL280:
 2577              	.LFB6:
 926:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     *name_full_temp;
 2578              		.loc 1 926 1 view -0
 2579              		.cfi_startproc
 2580              		@ args = 0, pretend = 0, frame = 0
 2581              		@ frame_needed = 0, uses_anonymous_args = 0
 926:rtos/uC-FS/Source/fs_entry.c ****     CPU_CHAR     *name_full_temp;
 2582              		.loc 1 926 1 is_stmt 0 view .LVU871
 2583 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2584              	.LCFI41:
 2585              		.cfi_def_cfa_offset 24
 2586              		.cfi_offset 3, -24
 2587              		.cfi_offset 4, -20
 2588              		.cfi_offset 5, -16
 2589              		.cfi_offset 6, -12
 2590              		.cfi_offset 7, -8
 2591              		.cfi_offset 14, -4
 2592 0002 0646     		mov	r6, r0
 2593 0004 0C46     		mov	r4, r1
 2594 0006 1546     		mov	r5, r2
 927:rtos/uC-FS/Source/fs_entry.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)
 2595              		.loc 1 927 5 is_stmt 1 view .LVU872
 929:rtos/uC-FS/Source/fs_entry.c **** #endif
 2596              		.loc 1 929 5 view .LVU873
 935:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 2597              		.loc 1 935 5 view .LVU874
ARM GAS  /tmp/cc8IPqmX.s 			page 95


 935:rtos/uC-FS/Source/fs_entry.c ****         CPU_SW_EXCEPTION(;);
 2598              		.loc 1 935 8 is_stmt 0 view .LVU875
 2599 0008 1F46     		mov	r7, r3
 2600 000a 6BB1     		cbz	r3, .L228
 2601              	.LVL281:
 2602              	.L221:
 936:rtos/uC-FS/Source/fs_entry.c ****     }
 2603              		.loc 1 936 9 is_stmt 1 discriminator 1 view .LVU876
 938:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 2604              		.loc 1 938 5 discriminator 1 view .LVU877
 938:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NAME_NULL;
 2605              		.loc 1 938 8 is_stmt 0 discriminator 1 view .LVU878
 2606 000c 7EB1     		cbz	r6, .L229
 943:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NULL_PTR;
 2607              		.loc 1 943 5 is_stmt 1 view .LVU879
 943:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_NULL_PTR;
 2608              		.loc 1 943 8 is_stmt 0 view .LVU880
 2609 000e 94B1     		cbz	r4, .L230
 948:rtos/uC-FS/Source/fs_entry.c ****     if (valid == DEF_NO) {
 2610              		.loc 1 948 5 is_stmt 1 view .LVU881
 948:rtos/uC-FS/Source/fs_entry.c ****     if (valid == DEF_NO) {
 2611              		.loc 1 948 13 is_stmt 0 view .LVU882
 2612 0010 2046     		mov	r0, r4
 2613 0012 FFF7FEFF 		bl	Clk_IsUnixDateTimeValid
 2614              	.LVL282:
 949:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_FILE_INVALID_DATE_TIME;
 2615              		.loc 1 949 5 is_stmt 1 view .LVU883
 949:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_FILE_INVALID_DATE_TIME;
 2616              		.loc 1 949 8 is_stmt 0 view .LVU884
 2617 0016 88B1     		cbz	r0, .L231
 954:rtos/uC-FS/Source/fs_entry.c ****     if (valid == DEF_NO) {
 2618              		.loc 1 954 5 is_stmt 1 view .LVU885
 954:rtos/uC-FS/Source/fs_entry.c ****     if (valid == DEF_NO) {
 2619              		.loc 1 954 13 is_stmt 0 view .LVU886
 2620 0018 6B1E     		subs	r3, r5, #1
 2621 001a DBB2     		uxtb	r3, r3
 954:rtos/uC-FS/Source/fs_entry.c ****     if (valid == DEF_NO) {
 2622              		.loc 1 954 11 view .LVU887
 2623 001c 072B     		cmp	r3, #7
 2624 001e 11D9     		bls	.L232
 2625              	.LVL283:
 955:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_FILE_INVALID_DATE_TIME_TYPE;
 2626              		.loc 1 955 5 is_stmt 1 view .LVU888
 956:rtos/uC-FS/Source/fs_entry.c ****         return;
 2627              		.loc 1 956 8 view .LVU889
 956:rtos/uC-FS/Source/fs_entry.c ****         return;
 2628              		.loc 1 956 15 is_stmt 0 view .LVU890
 2629 0020 4FF44A73 		mov	r3, #808
 2630 0024 3B80     		strh	r3, [r7]	@ movhi
 957:rtos/uC-FS/Source/fs_entry.c ****     }
 2631              		.loc 1 957 9 is_stmt 1 view .LVU891
 2632 0026 08E0     		b	.L220
 2633              	.LVL284:
 2634              	.L228:
 936:rtos/uC-FS/Source/fs_entry.c ****     }
 2635              		.loc 1 936 9 view .LVU892
 936:rtos/uC-FS/Source/fs_entry.c ****     }
ARM GAS  /tmp/cc8IPqmX.s 			page 96


 2636              		.loc 1 936 9 view .LVU893
 2637 0028 FFF7FEFF 		bl	CPU_SW_Exception
 2638              	.LVL285:
 936:rtos/uC-FS/Source/fs_entry.c ****     }
 2639              		.loc 1 936 9 is_stmt 0 view .LVU894
 2640 002c EEE7     		b	.L221
 2641              	.L229:
 939:rtos/uC-FS/Source/fs_entry.c ****         return;
 2642              		.loc 1 939 8 is_stmt 1 view .LVU895
 939:rtos/uC-FS/Source/fs_entry.c ****         return;
 2643              		.loc 1 939 15 is_stmt 0 view .LVU896
 2644 002e 40F28933 		movw	r3, #905
 2645 0032 3B80     		strh	r3, [r7]	@ movhi
 940:rtos/uC-FS/Source/fs_entry.c ****     }
 2646              		.loc 1 940 9 is_stmt 1 view .LVU897
 2647 0034 01E0     		b	.L220
 2648              	.L230:
 944:rtos/uC-FS/Source/fs_entry.c ****         return;
 2649              		.loc 1 944 8 view .LVU898
 944:rtos/uC-FS/Source/fs_entry.c ****         return;
 2650              		.loc 1 944 15 is_stmt 0 view .LVU899
 2651 0036 1323     		movs	r3, #19
 2652 0038 3B80     		strh	r3, [r7]	@ movhi
 945:rtos/uC-FS/Source/fs_entry.c ****     }
 2653              		.loc 1 945 9 is_stmt 1 view .LVU900
 2654              	.L220:
 983:rtos/uC-FS/Source/fs_entry.c **** #endif
 2655              		.loc 1 983 1 is_stmt 0 view .LVU901
 2656 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2657              	.LVL286:
 2658              	.L231:
 950:rtos/uC-FS/Source/fs_entry.c ****         return;
 2659              		.loc 1 950 8 is_stmt 1 view .LVU902
 950:rtos/uC-FS/Source/fs_entry.c ****         return;
 2660              		.loc 1 950 15 is_stmt 0 view .LVU903
 2661 003c 40F22733 		movw	r3, #807
 2662 0040 3B80     		strh	r3, [r7]	@ movhi
 951:rtos/uC-FS/Source/fs_entry.c ****     }
 2663              		.loc 1 951 9 is_stmt 1 view .LVU904
 2664 0042 FAE7     		b	.L220
 2665              	.L232:
 2666              	.LVL287:
 955:rtos/uC-FS/Source/fs_entry.c ****        *p_err = FS_ERR_FILE_INVALID_DATE_TIME_TYPE;
 2667              		.loc 1 955 5 view .LVU905
 968:rtos/uC-FS/Source/fs_entry.c **** #endif
 2668              		.loc 1 968 5 view .LVU906
 973:rtos/uC-FS/Source/fs_entry.c ****                            p_time,
 2669              		.loc 1 973 5 view .LVU907
 2670 0044 3B46     		mov	r3, r7
 2671 0046 2A46     		mov	r2, r5
 2672 0048 2146     		mov	r1, r4
 2673 004a 3046     		mov	r0, r6
 2674 004c FFF7FEFF 		bl	FSEntry_TimeSetHandler
 2675              	.LVL288:
 2676 0050 F3E7     		b	.L220
 2677              		.cfi_endproc
 2678              	.LFE6:
ARM GAS  /tmp/cc8IPqmX.s 			page 97


 2680              		.text
 2681              	.Letext0:
 2682              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 2683              		.file 3 "rtos/uC-Clk/Source/clk.h"
 2684              		.file 4 "rtos/uC-LIB/lib_mem.h"
 2685              		.file 5 "rtos/uC-FS/Source/fs_type.h"
 2686              		.file 6 "rtos/uC-FS/Source/fs_buf.h"
 2687              		.file 7 "rtos/uC-FS/Source/fs_dev.h"
 2688              		.file 8 "rtos/uC-FS/Source/fs_entry.h"
 2689              		.file 9 "rtos/uC-FS/Source/fs_file.h"
 2690              		.file 10 "rtos/uC-FS/Source/fs_vol.h"
 2691              		.file 11 "rtos/uC-FS/Source/fs_err.h"
 2692              		.file 12 "rtos/uC-FS/Source/fs_ctr.h"
 2693              		.file 13 "rtos/uC-FS/Source/fs.h"
 2694              		.file 14 "rtos/uC-LIB/lib_str.h"
 2695              		.file 15 "rtos/uC-FS/Source/fs_sys.h"
 2696              		.file 16 "rtos/uC-FS/Source/fs_dir.h"
 2697              		.file 17 "rtos/uC-CPU/cpu_core.h"
ARM GAS  /tmp/cc8IPqmX.s 			page 98


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fs_entry.c
     /tmp/cc8IPqmX.s:18     .text.FSEntry_NameParseChk:0000000000000000 $t
     /tmp/cc8IPqmX.s:25     .text.FSEntry_NameParseChk:0000000000000000 FSEntry_NameParseChk
     /tmp/cc8IPqmX.s:315    .text.FSEntry_AttribSetHandler:0000000000000000 $t
     /tmp/cc8IPqmX.s:321    .text.FSEntry_AttribSetHandler:0000000000000000 FSEntry_AttribSetHandler
     /tmp/cc8IPqmX.s:499    .text.FSEntry_CreateHandler:0000000000000000 $t
     /tmp/cc8IPqmX.s:505    .text.FSEntry_CreateHandler:0000000000000000 FSEntry_CreateHandler
     /tmp/cc8IPqmX.s:607    .text.FSEntry_DelHandler:0000000000000000 $t
     /tmp/cc8IPqmX.s:613    .text.FSEntry_DelHandler:0000000000000000 FSEntry_DelHandler
     /tmp/cc8IPqmX.s:886    .text.FSEntry_QueryHandler:0000000000000000 $t
     /tmp/cc8IPqmX.s:892    .text.FSEntry_QueryHandler:0000000000000000 FSEntry_QueryHandler
     /tmp/cc8IPqmX.s:998    .text.FSEntry_NameParseChkEx:0000000000000000 $t
     /tmp/cc8IPqmX.s:1004   .text.FSEntry_NameParseChkEx:0000000000000000 FSEntry_NameParseChkEx
     /tmp/cc8IPqmX.s:1351   .text.FSEntry_TimeSetHandler:0000000000000000 $t
     /tmp/cc8IPqmX.s:1357   .text.FSEntry_TimeSetHandler:0000000000000000 FSEntry_TimeSetHandler
     /tmp/cc8IPqmX.s:1459   .text.FSEntry_AttribSet:0000000000000000 $t
     /tmp/cc8IPqmX.s:1466   .text.FSEntry_AttribSet:0000000000000000 FSEntry_AttribSet
     /tmp/cc8IPqmX.s:1535   .text.FSEntry_Copy:0000000000000000 $t
     /tmp/cc8IPqmX.s:1542   .text.FSEntry_Copy:0000000000000000 FSEntry_Copy
     /tmp/cc8IPqmX.s:1775   .text.FSEntry_Create:0000000000000000 $t
     /tmp/cc8IPqmX.s:1782   .text.FSEntry_Create:0000000000000000 FSEntry_Create
     /tmp/cc8IPqmX.s:1857   .text.FSEntry_Del:0000000000000000 $t
     /tmp/cc8IPqmX.s:1864   .text.FSEntry_Del:0000000000000000 FSEntry_Del
     /tmp/cc8IPqmX.s:1937   .text.FSEntry_RenameHandler:0000000000000000 $t
     /tmp/cc8IPqmX.s:1943   .text.FSEntry_RenameHandler:0000000000000000 FSEntry_RenameHandler
     /tmp/cc8IPqmX.s:2412   .text.FSEntry_Query:0000000000000000 $t
     /tmp/cc8IPqmX.s:2419   .text.FSEntry_Query:0000000000000000 FSEntry_Query
     /tmp/cc8IPqmX.s:2487   .text.FSEntry_Rename:0000000000000000 $t
     /tmp/cc8IPqmX.s:2494   .text.FSEntry_Rename:0000000000000000 FSEntry_Rename
     /tmp/cc8IPqmX.s:2568   .text.FSEntry_TimeSet:0000000000000000 $t
     /tmp/cc8IPqmX.s:2575   .text.FSEntry_TimeSet:0000000000000000 FSEntry_TimeSet
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.clk.h.99.39403db6a27321e53b261bbe20b56e1d
                           .group:0000000000000000 wm4.lib_str.h.60.32f6cabaf9bf142bd5051c414a220578
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_str.h.174.5879a17e9fe25aed81d2c99c1603a671
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366
                           .group:0000000000000000 wm4.fs.h.42.4f6311a594ee5619f1ee7a9392eb7faa
                           .group:0000000000000000 wm4.fs_def.h.42.653ad677c23ef93c522ec84af681385d
                           .group:0000000000000000 wm4.fs_cfg.h.116.da4f8e9d0b9040a97ef3bf26c61e90fd
                           .group:0000000000000000 wm4.fs_cfg_fs.h.42.e13f500e2fc14f5d0bdda5cfe236732a
                           .group:0000000000000000 wm4.fs_type.h.42.0906d0337a2df5da9e27cec176b255f1
                           .group:0000000000000000 wm4.lib_mem.h.65.5ae3d762676d2043783018a38f269058
                           .group:0000000000000000 wm4.fs_type.h.139.acab71eb554f7e54c56a7894094211e6
                           .group:0000000000000000 wm4.fs_err.h.42.d52bfed31dff3d1419c5cf09952dee67
                           .group:0000000000000000 wm4.fs.h.97.1d629f0ba32b5622ab4e01a254bd98e8
                           .group:0000000000000000 wm4.fs_entry.h.42.74079b45a894952b84c2d075d05f4d4a
                           .group:0000000000000000 wm4.fs_file.h.42.f7d55bbd535c4e6a60fafdc6ebaa8edb
ARM GAS  /tmp/cc8IPqmX.s 			page 99


                           .group:0000000000000000 wm4.fs_ctr.h.42.9d1398cac157503ac8af114819f7782b
                           .group:0000000000000000 wm4.fs_file.h.84.fedb5cc95e0d5755b63f4511370393bc
                           .group:0000000000000000 wm4.fs_dir.h.42.1cb5900fa17de81a010accfb8286938b
                           .group:0000000000000000 wm4.fs_vol.h.42.b307128eec61fcaf68a96ce7f965d41e
                           .group:0000000000000000 wm4.fs_buf.h.42.0c8ba10968f085926266a27b71b3972d
                           .group:0000000000000000 wm4.fs_dev.h.42.010e15055e38efd3492ae3a9a504ffd0
                           .group:0000000000000000 wm4.fs_sys.h.42.da0b5c58e9e16ea2196969200cbb6990

UNDEFINED SYMBOLS
FS_PathParse
Str_Len_N
Str_Char_Last_N
FSVol_AcquireDflt
FSVol_Lock
FSVol_RefreshLocked
FSVol_Acquire
FSVol_Release
FSVol_ReleaseUnlock
FSFile_IsOpen
FSDir_IsOpen
FSSys_EntryAttribSet
FSSys_EntryCreate
FSSys_EntryDel
FSSys_EntryQuery
Str_Copy_N
FSVol_IsDflt
FSSys_EntryTimeSet
CPU_SW_Exception
FSFile_Open
FSBuf_Get
FSFile_Rd
FSFile_Wr
FSFile_Close
FSBuf_Free
FSSys_EntryRename
Str_Cmp_N
Clk_IsUnixDateTimeValid

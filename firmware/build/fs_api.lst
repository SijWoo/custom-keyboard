ARM GAS  /tmp/ccYe7so7.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fs_api.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.fs_closedir,"ax",%progbits
  18              		.align	1
  19              		.global	fs_closedir
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	fs_closedir:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "rtos/uC-FS/Source/fs_api.c"
   1:rtos/uC-FS/Source/fs_api.c **** /*
   2:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
   3:rtos/uC-FS/Source/fs_api.c **** *                                                uC/FS
   4:rtos/uC-FS/Source/fs_api.c **** *                                      The Embedded File System
   5:rtos/uC-FS/Source/fs_api.c **** *
   6:rtos/uC-FS/Source/fs_api.c **** *                         (c) Copyright 2008-2019; Silicon Laboratories Inc.,
   7:rtos/uC-FS/Source/fs_api.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-FS/Source/fs_api.c **** *
   9:rtos/uC-FS/Source/fs_api.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-FS/Source/fs_api.c **** *
  11:rtos/uC-FS/Source/fs_api.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-FS/Source/fs_api.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-FS/Source/fs_api.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-FS/Source/fs_api.c **** *                  license, you may not use this software.
  15:rtos/uC-FS/Source/fs_api.c **** *
  16:rtos/uC-FS/Source/fs_api.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-FS/Source/fs_api.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-FS/Source/fs_api.c **** *
  19:rtos/uC-FS/Source/fs_api.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-FS/Source/fs_api.c **** *
  21:rtos/uC-FS/Source/fs_api.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  23:rtos/uC-FS/Source/fs_api.c **** */
  24:rtos/uC-FS/Source/fs_api.c **** 
  25:rtos/uC-FS/Source/fs_api.c **** /*
  26:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  27:rtos/uC-FS/Source/fs_api.c **** *
  28:rtos/uC-FS/Source/fs_api.c **** *                                     FILE SYSTEM SUITE API LAYER
  29:rtos/uC-FS/Source/fs_api.c **** *
ARM GAS  /tmp/ccYe7so7.s 			page 2


  30:rtos/uC-FS/Source/fs_api.c **** *                                         POSIX API FUNCTIONS
  31:rtos/uC-FS/Source/fs_api.c **** *
  32:rtos/uC-FS/Source/fs_api.c **** * Filename  : fs_api.c
  33:rtos/uC-FS/Source/fs_api.c **** * Version   : v4.07.06
  34:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  35:rtos/uC-FS/Source/fs_api.c **** * Notice(s) : (1) The Institute of Electrical and Electronics Engineers and The Open Group, have gi
  36:rtos/uC-FS/Source/fs_api.c **** *                 us permission to reprint portions of their documentation.  Portions of this text 
  37:rtos/uC-FS/Source/fs_api.c **** *                 reprinted and reproduced in electronic form from the IEEE Std 1003.1, 2004 Editio
  38:rtos/uC-FS/Source/fs_api.c **** *                 Standard for Information Technology -- Portable Operating System Interface (POSIX
  39:rtos/uC-FS/Source/fs_api.c **** *                 The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Instit
  40:rtos/uC-FS/Source/fs_api.c **** *                 of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of
  41:rtos/uC-FS/Source/fs_api.c **** *                 discrepancy between these versions and the original IEEE and The Open Group Stand
  42:rtos/uC-FS/Source/fs_api.c **** *                 the original IEEE and The Open Group Standard is the referee document.  The origi
  43:rtos/uC-FS/Source/fs_api.c **** *                 Standard can be obtained online at http://www.opengroup.org/unix/online.html.
  44:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  45:rtos/uC-FS/Source/fs_api.c **** */
  46:rtos/uC-FS/Source/fs_api.c **** 
  47:rtos/uC-FS/Source/fs_api.c **** /*
  48:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  49:rtos/uC-FS/Source/fs_api.c **** *                                               MODULE
  50:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  51:rtos/uC-FS/Source/fs_api.c **** */
  52:rtos/uC-FS/Source/fs_api.c **** 
  53:rtos/uC-FS/Source/fs_api.c **** #define  MICRIUM_SOURCE
  54:rtos/uC-FS/Source/fs_api.c **** #define  FS_API_MODULE
  55:rtos/uC-FS/Source/fs_api.c **** 
  56:rtos/uC-FS/Source/fs_api.c **** 
  57:rtos/uC-FS/Source/fs_api.c **** /*
  58:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  59:rtos/uC-FS/Source/fs_api.c **** *                                            INCLUDE FILES
  60:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  61:rtos/uC-FS/Source/fs_api.c **** */
  62:rtos/uC-FS/Source/fs_api.c **** 
  63:rtos/uC-FS/Source/fs_api.c **** #include  <clk.h>
  64:rtos/uC-FS/Source/fs_api.c **** #include  "fs.h"
  65:rtos/uC-FS/Source/fs_api.c **** #include  "fs_api.h"
  66:rtos/uC-FS/Source/fs_api.c **** #include  "fs_cfg_fs.h"
  67:rtos/uC-FS/Source/fs_api.c **** #include  "fs_def.h"
  68:rtos/uC-FS/Source/fs_api.c **** #include  "fs_dir.h"
  69:rtos/uC-FS/Source/fs_api.c **** #include  "fs_file.h"
  70:rtos/uC-FS/Source/fs_api.c **** #include  "fs_type.h"
  71:rtos/uC-FS/Source/fs_api.c **** 
  72:rtos/uC-FS/Source/fs_api.c **** 
  73:rtos/uC-FS/Source/fs_api.c **** /*
  74:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  75:rtos/uC-FS/Source/fs_api.c **** *                                               MODULE
  76:rtos/uC-FS/Source/fs_api.c **** *
  77:rtos/uC-FS/Source/fs_api.c **** * Note(s) : (1) See 'fs_api.h  MODULE'.
  78:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  79:rtos/uC-FS/Source/fs_api.c **** */
  80:rtos/uC-FS/Source/fs_api.c **** 
  81:rtos/uC-FS/Source/fs_api.c **** #ifdef   FS_API_MODULE_PRESENT                                  /* See Note #1.                    
  82:rtos/uC-FS/Source/fs_api.c **** 
  83:rtos/uC-FS/Source/fs_api.c **** 
  84:rtos/uC-FS/Source/fs_api.c **** /*
  85:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  86:rtos/uC-FS/Source/fs_api.c **** *                                           LINT INHIBITION
ARM GAS  /tmp/ccYe7so7.s 			page 3


  87:rtos/uC-FS/Source/fs_api.c **** *
  88:rtos/uC-FS/Source/fs_api.c **** * Note(s) : (1) The functions prototyped in this file conform to the POSIX standard, with the same
  89:rtos/uC-FS/Source/fs_api.c **** *               parameter types & return values.  Certain MISRA guidelines are thereby violated.
  90:rtos/uC-FS/Source/fs_api.c **** *
  91:rtos/uC-FS/Source/fs_api.c **** *                   "Note 970: Use of modifier or type 'int' outside of a typedef [MISRA 2004 Rule 
  92:rtos/uC-FS/Source/fs_api.c **** *                   "Note 970: Use of modifier or type 'char' outside of a typedef [MISRA 2004 Rule
  93:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
  94:rtos/uC-FS/Source/fs_api.c **** */
  95:rtos/uC-FS/Source/fs_api.c **** 
  96:rtos/uC-FS/Source/fs_api.c **** /*lint -e970*/
  97:rtos/uC-FS/Source/fs_api.c **** 
  98:rtos/uC-FS/Source/fs_api.c **** 
  99:rtos/uC-FS/Source/fs_api.c **** /*
 100:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 101:rtos/uC-FS/Source/fs_api.c **** *                                            LOCAL DEFINES
 102:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 103:rtos/uC-FS/Source/fs_api.c **** */
 104:rtos/uC-FS/Source/fs_api.c **** 
 105:rtos/uC-FS/Source/fs_api.c **** 
 106:rtos/uC-FS/Source/fs_api.c **** /*
 107:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 108:rtos/uC-FS/Source/fs_api.c **** *                                           LOCAL CONSTANTS
 109:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 110:rtos/uC-FS/Source/fs_api.c **** */
 111:rtos/uC-FS/Source/fs_api.c **** 
 112:rtos/uC-FS/Source/fs_api.c **** 
 113:rtos/uC-FS/Source/fs_api.c **** /*
 114:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 115:rtos/uC-FS/Source/fs_api.c **** *                                          LOCAL DATA TYPES
 116:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 117:rtos/uC-FS/Source/fs_api.c **** */
 118:rtos/uC-FS/Source/fs_api.c **** 
 119:rtos/uC-FS/Source/fs_api.c **** 
 120:rtos/uC-FS/Source/fs_api.c **** /*
 121:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 122:rtos/uC-FS/Source/fs_api.c **** *                                            LOCAL TABLES
 123:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 124:rtos/uC-FS/Source/fs_api.c **** */
 125:rtos/uC-FS/Source/fs_api.c **** 
 126:rtos/uC-FS/Source/fs_api.c **** 
 127:rtos/uC-FS/Source/fs_api.c **** /*
 128:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 129:rtos/uC-FS/Source/fs_api.c **** *                                       LOCAL GLOBAL VARIABLES
 130:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 131:rtos/uC-FS/Source/fs_api.c **** */
 132:rtos/uC-FS/Source/fs_api.c **** 
 133:rtos/uC-FS/Source/fs_api.c **** 
 134:rtos/uC-FS/Source/fs_api.c **** /*
 135:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 136:rtos/uC-FS/Source/fs_api.c **** *                                      LOCAL FUNCTION PROTOTYPES
 137:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 138:rtos/uC-FS/Source/fs_api.c **** */
 139:rtos/uC-FS/Source/fs_api.c **** 
 140:rtos/uC-FS/Source/fs_api.c **** 
 141:rtos/uC-FS/Source/fs_api.c **** /*
 142:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 143:rtos/uC-FS/Source/fs_api.c **** *                                     LOCAL CONFIGURATION ERRORS
ARM GAS  /tmp/ccYe7so7.s 			page 4


 144:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 145:rtos/uC-FS/Source/fs_api.c **** */
 146:rtos/uC-FS/Source/fs_api.c **** 
 147:rtos/uC-FS/Source/fs_api.c **** 
 148:rtos/uC-FS/Source/fs_api.c **** /*
 149:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 150:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 151:rtos/uC-FS/Source/fs_api.c **** *                                     WORKING DIRECTORY FUNCTIONS
 152:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 153:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 154:rtos/uC-FS/Source/fs_api.c **** */
 155:rtos/uC-FS/Source/fs_api.c **** 
 156:rtos/uC-FS/Source/fs_api.c **** /*
 157:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 158:rtos/uC-FS/Source/fs_api.c **** *                                             fs_chdir()
 159:rtos/uC-FS/Source/fs_api.c **** *
 160:rtos/uC-FS/Source/fs_api.c **** * Description : Set the working directory for the current task.
 161:rtos/uC-FS/Source/fs_api.c **** *
 162:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : path_dir    String that specifies EITHER...
 163:rtos/uC-FS/Source/fs_api.c **** *                               (a) the absolute working directory path to set;
 164:rtos/uC-FS/Source/fs_api.c **** *                               (b) a relative path that will be applied to the current working dir
 165:rtos/uC-FS/Source/fs_api.c **** *
 166:rtos/uC-FS/Source/fs_api.c **** * Return(s)   :  0, if no error occurs.
 167:rtos/uC-FS/Source/fs_api.c **** *               -1, otherwise.
 168:rtos/uC-FS/Source/fs_api.c **** *
 169:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : none.
 170:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 171:rtos/uC-FS/Source/fs_api.c **** */
 172:rtos/uC-FS/Source/fs_api.c **** 
 173:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 174:rtos/uC-FS/Source/fs_api.c **** int  fs_chdir (const  char  *path_dir)
 175:rtos/uC-FS/Source/fs_api.c **** {
 176:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 177:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 178:rtos/uC-FS/Source/fs_api.c **** 
 179:rtos/uC-FS/Source/fs_api.c **** 
 180:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 181:rtos/uC-FS/Source/fs_api.c ****     if (path_dir == (const char *)0) {                          /* Validate pointer to path        
 182:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 183:rtos/uC-FS/Source/fs_api.c ****     }
 184:rtos/uC-FS/Source/fs_api.c **** #endif
 185:rtos/uC-FS/Source/fs_api.c **** 
 186:rtos/uC-FS/Source/fs_api.c ****     FS_WorkingDirSet((CPU_CHAR *) path_dir,
 187:rtos/uC-FS/Source/fs_api.c ****                                  &err);
 188:rtos/uC-FS/Source/fs_api.c **** 
 189:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? (int)0 : (int)-1;
 190:rtos/uC-FS/Source/fs_api.c **** 
 191:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 192:rtos/uC-FS/Source/fs_api.c **** }
 193:rtos/uC-FS/Source/fs_api.c **** #endif
 194:rtos/uC-FS/Source/fs_api.c **** 
 195:rtos/uC-FS/Source/fs_api.c **** 
 196:rtos/uC-FS/Source/fs_api.c **** /*
 197:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 198:rtos/uC-FS/Source/fs_api.c **** *                                             fs_getcwd()
 199:rtos/uC-FS/Source/fs_api.c **** *
 200:rtos/uC-FS/Source/fs_api.c **** * Description : Get the working directory for the current task.
ARM GAS  /tmp/ccYe7so7.s 			page 5


 201:rtos/uC-FS/Source/fs_api.c **** *
 202:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : path_dir    String buffer that will receive the working directory path.
 203:rtos/uC-FS/Source/fs_api.c **** *
 204:rtos/uC-FS/Source/fs_api.c **** *               size        Size of string buffer.
 205:rtos/uC-FS/Source/fs_api.c **** *
 206:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : Pointer to 'path_dir', if no error occurs.
 207:rtos/uC-FS/Source/fs_api.c **** *               Pointer to NULL,       otherwise.
 208:rtos/uC-FS/Source/fs_api.c **** *
 209:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : none.
 210:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 211:rtos/uC-FS/Source/fs_api.c **** */
 212:rtos/uC-FS/Source/fs_api.c **** 
 213:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 214:rtos/uC-FS/Source/fs_api.c **** char  *fs_getcwd (char       *path_dir,
 215:rtos/uC-FS/Source/fs_api.c ****                   fs_size_t   size)
 216:rtos/uC-FS/Source/fs_api.c **** {
 217:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 218:rtos/uC-FS/Source/fs_api.c **** 
 219:rtos/uC-FS/Source/fs_api.c **** 
 220:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 221:rtos/uC-FS/Source/fs_api.c ****     if (path_dir == (char *)0) {                                /* Validate pointer to path        
 222:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
 223:rtos/uC-FS/Source/fs_api.c ****     }
 224:rtos/uC-FS/Source/fs_api.c **** #endif
 225:rtos/uC-FS/Source/fs_api.c **** 
 226:rtos/uC-FS/Source/fs_api.c ****     FS_WorkingDirGet((CPU_CHAR   *) path_dir,
 227:rtos/uC-FS/Source/fs_api.c ****                      (CPU_SIZE_T  ) size,
 228:rtos/uC-FS/Source/fs_api.c ****                                    &err);
 229:rtos/uC-FS/Source/fs_api.c **** 
 230:rtos/uC-FS/Source/fs_api.c ****     if (err == FS_ERR_NONE) {
 231:rtos/uC-FS/Source/fs_api.c ****         return ((char *)path_dir);
 232:rtos/uC-FS/Source/fs_api.c ****     }
 233:rtos/uC-FS/Source/fs_api.c **** 
 234:rtos/uC-FS/Source/fs_api.c ****     return ((char *)0);
 235:rtos/uC-FS/Source/fs_api.c **** }
 236:rtos/uC-FS/Source/fs_api.c **** #endif
 237:rtos/uC-FS/Source/fs_api.c **** 
 238:rtos/uC-FS/Source/fs_api.c **** 
 239:rtos/uC-FS/Source/fs_api.c **** /*
 240:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 241:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 242:rtos/uC-FS/Source/fs_api.c **** *                                         DIRECTORY FUNCTIONS
 243:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 244:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 245:rtos/uC-FS/Source/fs_api.c **** */
 246:rtos/uC-FS/Source/fs_api.c **** 
 247:rtos/uC-FS/Source/fs_api.c **** /*
 248:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 249:rtos/uC-FS/Source/fs_api.c **** *                                            fs_closedir()
 250:rtos/uC-FS/Source/fs_api.c **** *
 251:rtos/uC-FS/Source/fs_api.c **** * Description : Close & free a directory.
 252:rtos/uC-FS/Source/fs_api.c **** *
 253:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_dir       Pointer to a directory.
 254:rtos/uC-FS/Source/fs_api.c **** *
 255:rtos/uC-FS/Source/fs_api.c **** * Return(s)   :  0, if directory is successfully closed.
 256:rtos/uC-FS/Source/fs_api.c **** *               -1, if any error was encountered.
 257:rtos/uC-FS/Source/fs_api.c **** *
ARM GAS  /tmp/ccYe7so7.s 			page 6


 258:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) After a directory is closed, the application MUST desist from accessing its dir
 259:rtos/uC-FS/Source/fs_api.c **** *                   pointer.  This could cause file system corruption, since this handle may be re-
 260:rtos/uC-FS/Source/fs_api.c **** *                   for a different directory.
 261:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 262:rtos/uC-FS/Source/fs_api.c **** */
 263:rtos/uC-FS/Source/fs_api.c **** #ifdef FS_DIR_MODULE_PRESENT
 264:rtos/uC-FS/Source/fs_api.c **** int  fs_closedir (FS_DIR  *p_dir)
 265:rtos/uC-FS/Source/fs_api.c **** {
  30              		.loc 1 265 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 266:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
  34              		.loc 1 266 5 view .LVU1
 267:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
  35              		.loc 1 267 5 view .LVU2
 268:rtos/uC-FS/Source/fs_api.c **** 
 269:rtos/uC-FS/Source/fs_api.c **** 
 270:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 271:rtos/uC-FS/Source/fs_api.c ****     if (p_dir == (FS_DIR *)0) {                                 /* Validate pointer to dir         
  36              		.loc 1 271 5 view .LVU3
  37              		.loc 1 271 8 is_stmt 0 view .LVU4
  38 0000 60B1     		cbz	r0, .L3
 265:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
  39              		.loc 1 265 1 view .LVU5
  40 0002 00B5     		push	{lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 4
  43              		.cfi_offset 14, -4
  44 0004 83B0     		sub	sp, sp, #12
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 16
 272:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 273:rtos/uC-FS/Source/fs_api.c ****     }
 274:rtos/uC-FS/Source/fs_api.c **** #endif
 275:rtos/uC-FS/Source/fs_api.c **** 
 276:rtos/uC-FS/Source/fs_api.c ****     FSDir_Close(p_dir, &err);
  47              		.loc 1 276 5 is_stmt 1 view .LVU6
  48 0006 0DF10601 		add	r1, sp, #6
  49 000a FFF7FEFF 		bl	FSDir_Close
  50              	.LVL1:
 277:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? ((int)0) : ((int)-1);
  51              		.loc 1 277 5 view .LVU7
  52              		.loc 1 277 16 is_stmt 0 view .LVU8
  53 000e BDF80630 		ldrh	r3, [sp, #6]
  54              		.loc 1 277 43 view .LVU9
  55 0012 33B9     		cbnz	r3, .L4
  56 0014 0020     		movs	r0, #0
  57              	.L1:
 278:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 279:rtos/uC-FS/Source/fs_api.c **** }
  58              		.loc 1 279 1 view .LVU10
  59 0016 03B0     		add	sp, sp, #12
  60              	.LCFI2:
  61              		.cfi_def_cfa_offset 4
  62              		@ sp needed
  63 0018 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/ccYe7so7.s 			page 7


  64              	.LVL2:
  65              	.L3:
  66              	.LCFI3:
  67              		.cfi_def_cfa_offset 0
  68              		.cfi_restore 14
 272:rtos/uC-FS/Source/fs_api.c ****     }
  69              		.loc 1 272 16 view .LVU11
  70 001c 4FF0FF30 		mov	r0, #-1
  71              	.LVL3:
  72              		.loc 1 279 1 view .LVU12
  73 0020 7047     		bx	lr
  74              	.L4:
  75              	.LCFI4:
  76              		.cfi_def_cfa_offset 16
  77              		.cfi_offset 14, -4
 277:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? ((int)0) : ((int)-1);
  78              		.loc 1 277 43 view .LVU13
  79 0022 4FF0FF30 		mov	r0, #-1
  80 0026 F6E7     		b	.L1
  81              		.cfi_endproc
  82              	.LFE0:
  84              		.section	.text.fs_opendir,"ax",%progbits
  85              		.align	1
  86              		.global	fs_opendir
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	fs_opendir:
  93              	.LVL4:
  94              	.LFB1:
 280:rtos/uC-FS/Source/fs_api.c **** #endif
 281:rtos/uC-FS/Source/fs_api.c **** 
 282:rtos/uC-FS/Source/fs_api.c **** /*
 283:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 284:rtos/uC-FS/Source/fs_api.c **** *                                            fs_opendir()
 285:rtos/uC-FS/Source/fs_api.c **** *
 286:rtos/uC-FS/Source/fs_api.c **** * Description : Open a directory.
 287:rtos/uC-FS/Source/fs_api.c **** *
 288:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : name_full   Name of the directory.
 289:rtos/uC-FS/Source/fs_api.c **** *
 290:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : Pointer to a directory, if NO errors.
 291:rtos/uC-FS/Source/fs_api.c **** *               Pointer to NULL,        otherwise.
 292:rtos/uC-FS/Source/fs_api.c **** *
 293:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : none.
 294:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 295:rtos/uC-FS/Source/fs_api.c **** */
 296:rtos/uC-FS/Source/fs_api.c **** #ifdef FS_DIR_MODULE_PRESENT
 297:rtos/uC-FS/Source/fs_api.c **** FS_DIR  *fs_opendir (const  char  *name_full)
 298:rtos/uC-FS/Source/fs_api.c **** {
  95              		.loc 1 298 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 8
  98              		@ frame_needed = 0, uses_anonymous_args = 0
 299:rtos/uC-FS/Source/fs_api.c ****     FS_ERR   err;
  99              		.loc 1 299 5 view .LVU15
 300:rtos/uC-FS/Source/fs_api.c ****     FS_DIR  *dirp;
ARM GAS  /tmp/ccYe7so7.s 			page 8


 100              		.loc 1 300 5 view .LVU16
 301:rtos/uC-FS/Source/fs_api.c **** 
 302:rtos/uC-FS/Source/fs_api.c **** 
 303:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 304:rtos/uC-FS/Source/fs_api.c ****     if (name_full == (const char *)0) {                         /* Validate pointer to name        
 101              		.loc 1 304 5 view .LVU17
 102              		.loc 1 304 8 is_stmt 0 view .LVU18
 103 0000 40B1     		cbz	r0, .L11
 298:rtos/uC-FS/Source/fs_api.c ****     FS_ERR   err;
 104              		.loc 1 298 1 view .LVU19
 105 0002 00B5     		push	{lr}
 106              	.LCFI5:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 14, -4
 109 0004 83B0     		sub	sp, sp, #12
 110              	.LCFI6:
 111              		.cfi_def_cfa_offset 16
 305:rtos/uC-FS/Source/fs_api.c ****         return ((FS_DIR *)0);
 306:rtos/uC-FS/Source/fs_api.c ****     }
 307:rtos/uC-FS/Source/fs_api.c **** #endif
 308:rtos/uC-FS/Source/fs_api.c **** 
 309:rtos/uC-FS/Source/fs_api.c ****     dirp = FSDir_Open((CPU_CHAR *)name_full, &err);
 112              		.loc 1 309 5 is_stmt 1 view .LVU20
 113              		.loc 1 309 12 is_stmt 0 view .LVU21
 114 0006 0DF10601 		add	r1, sp, #6
 115 000a FFF7FEFF 		bl	FSDir_Open
 116              	.LVL5:
 310:rtos/uC-FS/Source/fs_api.c ****     (void)err;
 117              		.loc 1 310 5 is_stmt 1 view .LVU22
 311:rtos/uC-FS/Source/fs_api.c **** 
 312:rtos/uC-FS/Source/fs_api.c ****     return (dirp);
 118              		.loc 1 312 5 view .LVU23
 313:rtos/uC-FS/Source/fs_api.c **** }
 119              		.loc 1 313 1 is_stmt 0 view .LVU24
 120 000e 03B0     		add	sp, sp, #12
 121              	.LCFI7:
 122              		.cfi_def_cfa_offset 4
 123              		@ sp needed
 124 0010 5DF804FB 		ldr	pc, [sp], #4
 125              	.LVL6:
 126              	.L11:
 127              	.LCFI8:
 128              		.cfi_def_cfa_offset 0
 129              		.cfi_restore 14
 130              		.loc 1 313 1 view .LVU25
 131 0014 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE1:
 135              		.section	.text.fs_readdir_r,"ax",%progbits
 136              		.align	1
 137              		.global	fs_readdir_r
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	fs_readdir_r:
 144              	.LVL7:
ARM GAS  /tmp/ccYe7so7.s 			page 9


 145              	.LFB2:
 314:rtos/uC-FS/Source/fs_api.c **** #endif
 315:rtos/uC-FS/Source/fs_api.c **** 
 316:rtos/uC-FS/Source/fs_api.c **** /*
 317:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 318:rtos/uC-FS/Source/fs_api.c **** *                                           fs_readdir_r()
 319:rtos/uC-FS/Source/fs_api.c **** *
 320:rtos/uC-FS/Source/fs_api.c **** * Description : Read a directory entry from a directory.
 321:rtos/uC-FS/Source/fs_api.c **** *
 322:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_dir           Pointer to a directory.
 323:rtos/uC-FS/Source/fs_api.c **** *
 324:rtos/uC-FS/Source/fs_api.c **** *               p_dir_entry     Pointer to variable that will receive directory entry information.
 325:rtos/uC-FS/Source/fs_api.c **** *
 326:rtos/uC-FS/Source/fs_api.c **** *               pp_result       Pointer to variable that will receive :
 327:rtos/uC-FS/Source/fs_api.c **** *
 328:rtos/uC-FS/Source/fs_api.c **** *                                   (a) ... 'p_dir_entry'    if NO error occurs AND directory does 
 329:rtos/uC-FS/Source/fs_api.c **** *                                   (b) ...  pointer to NULL if an error occurs OR  directory      
 330:rtos/uC-FS/Source/fs_api.c **** *
 331:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : 1, if an error occurs.
 332:rtos/uC-FS/Source/fs_api.c **** *               0, if no error occurs.
 333:rtos/uC-FS/Source/fs_api.c **** *
 334:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'readdir() : DESCRIPTION' states that :
 335:rtos/uC-FS/Source/fs_api.c **** *
 336:rtos/uC-FS/Source/fs_api.c **** *                   (a) "The 'readdir()' function shall not return directory entries containing emp
 337:rtos/uC-FS/Source/fs_api.c **** *                        If entries for dot or dot-dot exist, one entry shall be returned for dot a
 338:rtos/uC-FS/Source/fs_api.c **** *                        entry shall be returned for dot-dot; otherwise, they shall not be returned
 339:rtos/uC-FS/Source/fs_api.c **** *
 340:rtos/uC-FS/Source/fs_api.c **** *                   (b) "If a file is removed from or added to the directory after the most recent 
 341:rtos/uC-FS/Source/fs_api.c **** *                        to 'opendir()' or 'rewinddir()', whether a subsequent call to 'readdir()' 
 342:rtos/uC-FS/Source/fs_api.c **** *                        an entry for that file is unspecified."
 343:rtos/uC-FS/Source/fs_api.c **** *
 344:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'readdir() : RETURN VALUE' states that "
 345:rtos/uC-FS/Source/fs_api.c **** *                   successful, the 'readdir_r()' function shall return zero; otherwise, an error s
 346:rtos/uC-FS/Source/fs_api.c **** *                   be returned to indicate the error".
 347:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 348:rtos/uC-FS/Source/fs_api.c **** */
 349:rtos/uC-FS/Source/fs_api.c **** #ifdef FS_DIR_MODULE_PRESENT
 350:rtos/uC-FS/Source/fs_api.c **** int  fs_readdir_r (FS_DIR              *p_dir,
 351:rtos/uC-FS/Source/fs_api.c ****                    struct  fs_dirent   *p_dir_entry,
 352:rtos/uC-FS/Source/fs_api.c ****                    struct  fs_dirent  **pp_result)
 353:rtos/uC-FS/Source/fs_api.c **** {
 146              		.loc 1 353 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 354:rtos/uC-FS/Source/fs_api.c ****     FS_ERR       err;
 150              		.loc 1 354 5 view .LVU27
 355:rtos/uC-FS/Source/fs_api.c **** 
 356:rtos/uC-FS/Source/fs_api.c **** 
 357:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 358:rtos/uC-FS/Source/fs_api.c ****     if (p_dir == (FS_DIR *)0) {                                 /* Validate pointer to dir         
 151              		.loc 1 358 5 view .LVU28
 152              		.loc 1 358 8 is_stmt 0 view .LVU29
 153 0000 C0B1     		cbz	r0, .L20
 353:rtos/uC-FS/Source/fs_api.c ****     FS_ERR       err;
 154              		.loc 1 353 1 view .LVU30
 155 0002 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccYe7so7.s 			page 10


 156              	.LCFI9:
 157              		.cfi_def_cfa_offset 12
 158              		.cfi_offset 4, -12
 159              		.cfi_offset 5, -8
 160              		.cfi_offset 14, -4
 161 0004 83B0     		sub	sp, sp, #12
 162              	.LCFI10:
 163              		.cfi_def_cfa_offset 24
 164 0006 0C46     		mov	r4, r1
 165 0008 1546     		mov	r5, r2
 359:rtos/uC-FS/Source/fs_api.c ****         return ((int)1);
 360:rtos/uC-FS/Source/fs_api.c ****     }
 361:rtos/uC-FS/Source/fs_api.c ****     if (p_dir_entry == (struct  fs_dirent *)0) {                /* Validate pointer to dir entry   
 166              		.loc 1 361 5 is_stmt 1 view .LVU31
 167              		.loc 1 361 8 is_stmt 0 view .LVU32
 168 000a A9B1     		cbz	r1, .L21
 362:rtos/uC-FS/Source/fs_api.c ****         return ((int)1);
 363:rtos/uC-FS/Source/fs_api.c ****     }
 364:rtos/uC-FS/Source/fs_api.c ****     if (pp_result == (struct  fs_dirent **)0) {                 /* Validate pointer to result      
 169              		.loc 1 364 5 is_stmt 1 view .LVU33
 170              		.loc 1 364 8 is_stmt 0 view .LVU34
 171 000c B2B1     		cbz	r2, .L22
 365:rtos/uC-FS/Source/fs_api.c ****         return ((int)1);
 366:rtos/uC-FS/Source/fs_api.c ****     }
 367:rtos/uC-FS/Source/fs_api.c **** #endif
 368:rtos/uC-FS/Source/fs_api.c **** 
 369:rtos/uC-FS/Source/fs_api.c ****     FSDir_Rd(p_dir, p_dir_entry,&err);
 172              		.loc 1 369 5 is_stmt 1 view .LVU35
 173 000e 0DF10602 		add	r2, sp, #6
 174              	.LVL8:
 175              		.loc 1 369 5 is_stmt 0 view .LVU36
 176 0012 FFF7FEFF 		bl	FSDir_Rd
 177              	.LVL9:
 370:rtos/uC-FS/Source/fs_api.c **** 
 371:rtos/uC-FS/Source/fs_api.c ****     if (err == FS_ERR_NONE) {
 178              		.loc 1 371 5 is_stmt 1 view .LVU37
 179              		.loc 1 371 13 is_stmt 0 view .LVU38
 180 0016 BDF80630 		ldrh	r3, [sp, #6]
 181              		.loc 1 371 8 view .LVU39
 182 001a 2BB1     		cbz	r3, .L27
 372:rtos/uC-FS/Source/fs_api.c **** 
 373:rtos/uC-FS/Source/fs_api.c ****        *pp_result =  p_dir_entry;
 374:rtos/uC-FS/Source/fs_api.c ****         return ((int)0);
 375:rtos/uC-FS/Source/fs_api.c **** 
 376:rtos/uC-FS/Source/fs_api.c ****     } else {
 377:rtos/uC-FS/Source/fs_api.c **** 
 378:rtos/uC-FS/Source/fs_api.c ****         if (err == FS_ERR_EOF) {
 183              		.loc 1 378 9 is_stmt 1 view .LVU40
 184              		.loc 1 378 12 is_stmt 0 view .LVU41
 185 001c 162B     		cmp	r3, #22
 186 001e 06D0     		beq	.L28
 379:rtos/uC-FS/Source/fs_api.c ****            *pp_result = (struct fs_dirent *)0;
 380:rtos/uC-FS/Source/fs_api.c ****             return ((int)0);
 381:rtos/uC-FS/Source/fs_api.c ****         }
 382:rtos/uC-FS/Source/fs_api.c ****        *pp_result = (struct fs_dirent *)0;
 187              		.loc 1 382 8 is_stmt 1 view .LVU42
 188              		.loc 1 382 19 is_stmt 0 view .LVU43
ARM GAS  /tmp/ccYe7so7.s 			page 11


 189 0020 0023     		movs	r3, #0
 190 0022 2B60     		str	r3, [r5]
 383:rtos/uC-FS/Source/fs_api.c ****         return ((int)1);
 191              		.loc 1 383 9 is_stmt 1 view .LVU44
 192              		.loc 1 383 16 is_stmt 0 view .LVU45
 193 0024 0120     		movs	r0, #1
 194 0026 0AE0     		b	.L16
 195              	.L27:
 373:rtos/uC-FS/Source/fs_api.c ****         return ((int)0);
 196              		.loc 1 373 8 is_stmt 1 view .LVU46
 373:rtos/uC-FS/Source/fs_api.c ****         return ((int)0);
 197              		.loc 1 373 19 is_stmt 0 view .LVU47
 198 0028 2C60     		str	r4, [r5]
 374:rtos/uC-FS/Source/fs_api.c **** 
 199              		.loc 1 374 9 is_stmt 1 view .LVU48
 374:rtos/uC-FS/Source/fs_api.c **** 
 200              		.loc 1 374 16 is_stmt 0 view .LVU49
 201 002a 0020     		movs	r0, #0
 202 002c 07E0     		b	.L16
 203              	.L28:
 379:rtos/uC-FS/Source/fs_api.c ****             return ((int)0);
 204              		.loc 1 379 12 is_stmt 1 view .LVU50
 379:rtos/uC-FS/Source/fs_api.c ****             return ((int)0);
 205              		.loc 1 379 23 is_stmt 0 view .LVU51
 206 002e 0020     		movs	r0, #0
 207 0030 2860     		str	r0, [r5]
 380:rtos/uC-FS/Source/fs_api.c ****         }
 208              		.loc 1 380 13 is_stmt 1 view .LVU52
 380:rtos/uC-FS/Source/fs_api.c ****         }
 209              		.loc 1 380 20 is_stmt 0 view .LVU53
 210 0032 04E0     		b	.L16
 211              	.LVL10:
 212              	.L20:
 213              	.LCFI11:
 214              		.cfi_def_cfa_offset 0
 215              		.cfi_restore 4
 216              		.cfi_restore 5
 217              		.cfi_restore 14
 359:rtos/uC-FS/Source/fs_api.c ****     }
 218              		.loc 1 359 16 view .LVU54
 219 0034 0120     		movs	r0, #1
 220              	.LVL11:
 384:rtos/uC-FS/Source/fs_api.c **** 
 385:rtos/uC-FS/Source/fs_api.c ****     }
 386:rtos/uC-FS/Source/fs_api.c **** 
 387:rtos/uC-FS/Source/fs_api.c **** 
 388:rtos/uC-FS/Source/fs_api.c **** 
 389:rtos/uC-FS/Source/fs_api.c **** 
 390:rtos/uC-FS/Source/fs_api.c **** }
 221              		.loc 1 390 1 view .LVU55
 222 0036 7047     		bx	lr
 223              	.LVL12:
 224              	.L21:
 225              	.LCFI12:
 226              		.cfi_def_cfa_offset 24
 227              		.cfi_offset 4, -12
 228              		.cfi_offset 5, -8
ARM GAS  /tmp/ccYe7so7.s 			page 12


 229              		.cfi_offset 14, -4
 362:rtos/uC-FS/Source/fs_api.c ****     }
 230              		.loc 1 362 16 view .LVU56
 231 0038 0120     		movs	r0, #1
 232              	.LVL13:
 362:rtos/uC-FS/Source/fs_api.c ****     }
 233              		.loc 1 362 16 view .LVU57
 234 003a 00E0     		b	.L16
 235              	.LVL14:
 236              	.L22:
 365:rtos/uC-FS/Source/fs_api.c ****     }
 237              		.loc 1 365 16 view .LVU58
 238 003c 0120     		movs	r0, #1
 239              	.LVL15:
 240              	.L16:
 241              		.loc 1 390 1 view .LVU59
 242 003e 03B0     		add	sp, sp, #12
 243              	.LCFI13:
 244              		.cfi_def_cfa_offset 12
 245              		@ sp needed
 246 0040 30BD     		pop	{r4, r5, pc}
 247              		.loc 1 390 1 view .LVU60
 248              		.cfi_endproc
 249              	.LFE2:
 251              		.section	.text.fs_mkdir,"ax",%progbits
 252              		.align	1
 253              		.global	fs_mkdir
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	fs_mkdir:
 260              	.LVL16:
 261              	.LFB3:
 391:rtos/uC-FS/Source/fs_api.c **** #endif
 392:rtos/uC-FS/Source/fs_api.c **** 
 393:rtos/uC-FS/Source/fs_api.c **** /*
 394:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 395:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 396:rtos/uC-FS/Source/fs_api.c **** *                                           ENTRY FUNCTIONS
 397:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 398:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 399:rtos/uC-FS/Source/fs_api.c **** */
 400:rtos/uC-FS/Source/fs_api.c **** 
 401:rtos/uC-FS/Source/fs_api.c **** /*
 402:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 403:rtos/uC-FS/Source/fs_api.c **** *                                             fs_mkdir()
 404:rtos/uC-FS/Source/fs_api.c **** *
 405:rtos/uC-FS/Source/fs_api.c **** * Description : Create a directory.
 406:rtos/uC-FS/Source/fs_api.c **** *
 407:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : name_full   Name of the directory.
 408:rtos/uC-FS/Source/fs_api.c **** *
 409:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : -1, if an error occurs.
 410:rtos/uC-FS/Source/fs_api.c **** *                0, if no error occurs.
 411:rtos/uC-FS/Source/fs_api.c **** *
 412:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : none.
 413:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
ARM GAS  /tmp/ccYe7so7.s 			page 13


 414:rtos/uC-FS/Source/fs_api.c **** */
 415:rtos/uC-FS/Source/fs_api.c **** 
 416:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 417:rtos/uC-FS/Source/fs_api.c **** int  fs_mkdir (const  char  *name_full)
 418:rtos/uC-FS/Source/fs_api.c **** {
 262              		.loc 1 418 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 419:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 266              		.loc 1 419 5 view .LVU62
 420:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 267              		.loc 1 420 5 view .LVU63
 421:rtos/uC-FS/Source/fs_api.c **** 
 422:rtos/uC-FS/Source/fs_api.c **** 
 423:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 424:rtos/uC-FS/Source/fs_api.c ****     if (name_full == (const char *)0) {                         /* Validate pointer to name        
 268              		.loc 1 424 5 view .LVU64
 269              		.loc 1 424 8 is_stmt 0 view .LVU65
 270 0000 68B1     		cbz	r0, .L31
 418:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 271              		.loc 1 418 1 view .LVU66
 272 0002 10B5     		push	{r4, lr}
 273              	.LCFI14:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 4, -8
 276              		.cfi_offset 14, -4
 277 0004 82B0     		sub	sp, sp, #8
 278              	.LCFI15:
 279              		.cfi_def_cfa_offset 16
 425:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 426:rtos/uC-FS/Source/fs_api.c ****     }
 427:rtos/uC-FS/Source/fs_api.c **** #endif
 428:rtos/uC-FS/Source/fs_api.c **** 
 429:rtos/uC-FS/Source/fs_api.c ****     FSEntry_Create((CPU_CHAR *) name_full,
 280              		.loc 1 429 5 is_stmt 1 view .LVU67
 281 0006 0DF10603 		add	r3, sp, #6
 282 000a 0122     		movs	r2, #1
 283 000c 0421     		movs	r1, #4
 284 000e FFF7FEFF 		bl	FSEntry_Create
 285              	.LVL17:
 430:rtos/uC-FS/Source/fs_api.c ****                                 FS_ENTRY_TYPE_DIR,
 431:rtos/uC-FS/Source/fs_api.c ****                                 DEF_YES,
 432:rtos/uC-FS/Source/fs_api.c ****                                &err);
 433:rtos/uC-FS/Source/fs_api.c **** 
 434:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? (0) : (-1);
 286              		.loc 1 434 5 view .LVU68
 287              		.loc 1 434 16 is_stmt 0 view .LVU69
 288 0012 BDF80630 		ldrh	r3, [sp, #6]
 289              		.loc 1 434 38 view .LVU70
 290 0016 2BB9     		cbnz	r3, .L32
 291 0018 0020     		movs	r0, #0
 292              	.L29:
 435:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 436:rtos/uC-FS/Source/fs_api.c **** }
 293              		.loc 1 436 1 view .LVU71
 294 001a 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccYe7so7.s 			page 14


 295              	.LCFI16:
 296              		.cfi_def_cfa_offset 8
 297              		@ sp needed
 298 001c 10BD     		pop	{r4, pc}
 299              	.LVL18:
 300              	.L31:
 301              	.LCFI17:
 302              		.cfi_def_cfa_offset 0
 303              		.cfi_restore 4
 304              		.cfi_restore 14
 425:rtos/uC-FS/Source/fs_api.c ****     }
 305              		.loc 1 425 16 view .LVU72
 306 001e 4FF0FF30 		mov	r0, #-1
 307              	.LVL19:
 308              		.loc 1 436 1 view .LVU73
 309 0022 7047     		bx	lr
 310              	.L32:
 311              	.LCFI18:
 312              		.cfi_def_cfa_offset 16
 313              		.cfi_offset 4, -8
 314              		.cfi_offset 14, -4
 434:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 315              		.loc 1 434 38 view .LVU74
 316 0024 4FF0FF30 		mov	r0, #-1
 317 0028 F7E7     		b	.L29
 318              		.cfi_endproc
 319              	.LFE3:
 321              		.section	.text.fs_remove,"ax",%progbits
 322              		.align	1
 323              		.global	fs_remove
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu fpv4-sp-d16
 329              	fs_remove:
 330              	.LVL20:
 331              	.LFB4:
 437:rtos/uC-FS/Source/fs_api.c **** #endif
 438:rtos/uC-FS/Source/fs_api.c **** 
 439:rtos/uC-FS/Source/fs_api.c **** 
 440:rtos/uC-FS/Source/fs_api.c **** /*
 441:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 442:rtos/uC-FS/Source/fs_api.c **** *                                             fs_remove()
 443:rtos/uC-FS/Source/fs_api.c **** *
 444:rtos/uC-FS/Source/fs_api.c **** * Description : Delete a file or directory.
 445:rtos/uC-FS/Source/fs_api.c **** *
 446:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : name_full   Name of the entry.
 447:rtos/uC-FS/Source/fs_api.c **** *
 448:rtos/uC-FS/Source/fs_api.c **** * Return(s)   :  0, if the entry is     removed.
 449:rtos/uC-FS/Source/fs_api.c **** *               -1, if the entry is NOT removed.
 450:rtos/uC-FS/Source/fs_api.c **** *
 451:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'remove() : DESCRIPTION' states that :
 452:rtos/uC-FS/Source/fs_api.c **** *
 453:rtos/uC-FS/Source/fs_api.c **** *                   (a) "If 'path' does not name a directory, 'remove(path)' shall be equivalent to
 454:rtos/uC-FS/Source/fs_api.c **** *                       'unlink(path)'."
 455:rtos/uC-FS/Source/fs_api.c **** *
 456:rtos/uC-FS/Source/fs_api.c **** *                   (b) "If path names a directory, remove(path) shall be equivalent to rmdir(path)
ARM GAS  /tmp/ccYe7so7.s 			page 15


 457:rtos/uC-FS/Source/fs_api.c **** *
 458:rtos/uC-FS/Source/fs_api.c **** *                       (1) See 'fs_rmdir()  Note(s)'.
 459:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 460:rtos/uC-FS/Source/fs_api.c **** */
 461:rtos/uC-FS/Source/fs_api.c **** 
 462:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 463:rtos/uC-FS/Source/fs_api.c **** int  fs_remove (const  char  *name_full)
 464:rtos/uC-FS/Source/fs_api.c **** {
 332              		.loc 1 464 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 465:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 336              		.loc 1 465 5 view .LVU76
 466:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 337              		.loc 1 466 5 view .LVU77
 467:rtos/uC-FS/Source/fs_api.c **** 
 468:rtos/uC-FS/Source/fs_api.c **** 
 469:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 470:rtos/uC-FS/Source/fs_api.c ****     if (name_full == (const char *)0) {                         /* Validate pointer to name        
 338              		.loc 1 470 5 view .LVU78
 339              		.loc 1 470 8 is_stmt 0 view .LVU79
 340 0000 68B1     		cbz	r0, .L39
 464:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 341              		.loc 1 464 1 view .LVU80
 342 0002 00B5     		push	{lr}
 343              	.LCFI19:
 344              		.cfi_def_cfa_offset 4
 345              		.cfi_offset 14, -4
 346 0004 83B0     		sub	sp, sp, #12
 347              	.LCFI20:
 348              		.cfi_def_cfa_offset 16
 471:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 472:rtos/uC-FS/Source/fs_api.c ****     }
 473:rtos/uC-FS/Source/fs_api.c **** #endif
 474:rtos/uC-FS/Source/fs_api.c **** 
 475:rtos/uC-FS/Source/fs_api.c ****     FSEntry_Del((CPU_CHAR *) name_full,
 349              		.loc 1 475 5 is_stmt 1 view .LVU81
 350 0006 0DF10602 		add	r2, sp, #6
 351 000a 0621     		movs	r1, #6
 352 000c FFF7FEFF 		bl	FSEntry_Del
 353              	.LVL21:
 476:rtos/uC-FS/Source/fs_api.c ****                              FS_ENTRY_TYPE_ANY,
 477:rtos/uC-FS/Source/fs_api.c ****                             &err);
 478:rtos/uC-FS/Source/fs_api.c **** 
 479:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? ((int)0) : ((int)-1);
 354              		.loc 1 479 5 view .LVU82
 355              		.loc 1 479 16 is_stmt 0 view .LVU83
 356 0010 BDF80630 		ldrh	r3, [sp, #6]
 357              		.loc 1 479 43 view .LVU84
 358 0014 33B9     		cbnz	r3, .L40
 359 0016 0020     		movs	r0, #0
 360              	.L37:
 480:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 481:rtos/uC-FS/Source/fs_api.c **** }
 361              		.loc 1 481 1 view .LVU85
 362 0018 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccYe7so7.s 			page 16


 363              	.LCFI21:
 364              		.cfi_def_cfa_offset 4
 365              		@ sp needed
 366 001a 5DF804FB 		ldr	pc, [sp], #4
 367              	.LVL22:
 368              	.L39:
 369              	.LCFI22:
 370              		.cfi_def_cfa_offset 0
 371              		.cfi_restore 14
 471:rtos/uC-FS/Source/fs_api.c ****     }
 372              		.loc 1 471 16 view .LVU86
 373 001e 4FF0FF30 		mov	r0, #-1
 374              	.LVL23:
 375              		.loc 1 481 1 view .LVU87
 376 0022 7047     		bx	lr
 377              	.L40:
 378              	.LCFI23:
 379              		.cfi_def_cfa_offset 16
 380              		.cfi_offset 14, -4
 479:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 381              		.loc 1 479 43 view .LVU88
 382 0024 4FF0FF30 		mov	r0, #-1
 383 0028 F6E7     		b	.L37
 384              		.cfi_endproc
 385              	.LFE4:
 387              		.section	.text.fs_rename,"ax",%progbits
 388              		.align	1
 389              		.global	fs_rename
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv4-sp-d16
 395              	fs_rename:
 396              	.LVL24:
 397              	.LFB5:
 482:rtos/uC-FS/Source/fs_api.c **** #endif
 483:rtos/uC-FS/Source/fs_api.c **** 
 484:rtos/uC-FS/Source/fs_api.c **** 
 485:rtos/uC-FS/Source/fs_api.c **** /*
 486:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 487:rtos/uC-FS/Source/fs_api.c **** *                                             fs_rename()
 488:rtos/uC-FS/Source/fs_api.c **** *
 489:rtos/uC-FS/Source/fs_api.c **** * Description : Rename a file or directory.
 490:rtos/uC-FS/Source/fs_api.c **** *
 491:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : name_full_old   Old path of the entry.
 492:rtos/uC-FS/Source/fs_api.c **** *
 493:rtos/uC-FS/Source/fs_api.c **** *               name_full_new   New path of the entry.
 494:rtos/uC-FS/Source/fs_api.c **** *
 495:rtos/uC-FS/Source/fs_api.c **** * Return(s)   :  0, if the entry is     renamed.
 496:rtos/uC-FS/Source/fs_api.c **** *               -1, if the entry is NOT renamed.
 497:rtos/uC-FS/Source/fs_api.c **** *
 498:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'rename() : DESCRIPTION' states that :
 499:rtos/uC-FS/Source/fs_api.c **** *
 500:rtos/uC-FS/Source/fs_api.c **** *                   (a) "If the 'old' argument and the 'new' argument resolve to the same existing 
 501:rtos/uC-FS/Source/fs_api.c **** *                        'rename()' shall return successfully and perform no other action."
 502:rtos/uC-FS/Source/fs_api.c **** *
 503:rtos/uC-FS/Source/fs_api.c **** *                   (b) "If the 'old' argument points to the pathname of a file that is not a direc
ARM GAS  /tmp/ccYe7so7.s 			page 17


 504:rtos/uC-FS/Source/fs_api.c **** *                        the 'new' argument shall not point to the pathname of a directory.  If the
 505:rtos/uC-FS/Source/fs_api.c **** *                        named by the 'new' argument exists, it shall be removed and 'old' renamed 
 506:rtos/uC-FS/Source/fs_api.c **** *                        'new'."
 507:rtos/uC-FS/Source/fs_api.c **** *
 508:rtos/uC-FS/Source/fs_api.c **** *                   (c) "If the 'old' argument points to the pathname of a directory, the 'new' arg
 509:rtos/uC-FS/Source/fs_api.c **** *                        shall not point to the pathname of a file that is not a directory.  If the
 510:rtos/uC-FS/Source/fs_api.c **** *                       directory named by the 'new' argument exists, it shall be removed and 'old'
 511:rtos/uC-FS/Source/fs_api.c **** *                       renamed to 'new'."
 512:rtos/uC-FS/Source/fs_api.c **** *
 513:rtos/uC-FS/Source/fs_api.c **** *                       (1) "If 'new' names an existing directory, it shall be required to be an em
 514:rtos/uC-FS/Source/fs_api.c **** *                            directory."
 515:rtos/uC-FS/Source/fs_api.c **** *
 516:rtos/uC-FS/Source/fs_api.c **** *                   (d) "The 'new' pathname shall not contain a path prefix that names 'old'."
 517:rtos/uC-FS/Source/fs_api.c **** *
 518:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'rename() : RETURN VALUE' states that "[
 519:rtos/uC-FS/Source/fs_api.c **** *                   successful completion, 'rename()' shall return 0; otherwise, -1 shall be return
 520:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 521:rtos/uC-FS/Source/fs_api.c **** */
 522:rtos/uC-FS/Source/fs_api.c **** 
 523:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 524:rtos/uC-FS/Source/fs_api.c **** int  fs_rename (const  char  *name_full_old,
 525:rtos/uC-FS/Source/fs_api.c ****                 const  char  *name_full_new)
 526:rtos/uC-FS/Source/fs_api.c **** {
 398              		.loc 1 526 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 8
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 527:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 402              		.loc 1 527 5 view .LVU90
 528:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 403              		.loc 1 528 5 view .LVU91
 529:rtos/uC-FS/Source/fs_api.c **** 
 530:rtos/uC-FS/Source/fs_api.c **** 
 531:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 532:rtos/uC-FS/Source/fs_api.c ****     if (name_full_old == (const char *)0) {                     /* Validate pointer to name        
 404              		.loc 1 532 5 view .LVU92
 405              		.loc 1 532 8 is_stmt 0 view .LVU93
 406 0000 68B1     		cbz	r0, .L47
 526:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 407              		.loc 1 526 1 view .LVU94
 408 0002 10B5     		push	{r4, lr}
 409              	.LCFI24:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0004 82B0     		sub	sp, sp, #8
 414              	.LCFI25:
 415              		.cfi_def_cfa_offset 16
 533:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 534:rtos/uC-FS/Source/fs_api.c ****     }
 535:rtos/uC-FS/Source/fs_api.c ****     if (name_full_new == (const char *)0) {                     /* Validate pointer to name        
 416              		.loc 1 535 5 is_stmt 1 view .LVU95
 417              		.loc 1 535 8 is_stmt 0 view .LVU96
 418 0006 69B1     		cbz	r1, .L48
 536:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 537:rtos/uC-FS/Source/fs_api.c ****     }
 538:rtos/uC-FS/Source/fs_api.c **** #endif
ARM GAS  /tmp/ccYe7so7.s 			page 18


 539:rtos/uC-FS/Source/fs_api.c **** 
 540:rtos/uC-FS/Source/fs_api.c ****     FSEntry_Rename((CPU_CHAR *) name_full_old,
 419              		.loc 1 540 5 is_stmt 1 view .LVU97
 420 0008 0DF10603 		add	r3, sp, #6
 421 000c 0022     		movs	r2, #0
 422 000e FFF7FEFF 		bl	FSEntry_Rename
 423              	.LVL25:
 541:rtos/uC-FS/Source/fs_api.c ****                    (CPU_CHAR *) name_full_new,
 542:rtos/uC-FS/Source/fs_api.c ****                                 DEF_NO,
 543:rtos/uC-FS/Source/fs_api.c ****                                &err);
 544:rtos/uC-FS/Source/fs_api.c **** 
 545:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? ((int)0) : ((int)-1);
 424              		.loc 1 545 5 view .LVU98
 425              		.loc 1 545 16 is_stmt 0 view .LVU99
 426 0012 BDF80630 		ldrh	r3, [sp, #6]
 427              		.loc 1 545 43 view .LVU100
 428 0016 43B9     		cbnz	r3, .L49
 429 0018 0020     		movs	r0, #0
 430              	.L45:
 546:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 547:rtos/uC-FS/Source/fs_api.c **** }
 431              		.loc 1 547 1 view .LVU101
 432 001a 02B0     		add	sp, sp, #8
 433              	.LCFI26:
 434              		.cfi_def_cfa_offset 8
 435              		@ sp needed
 436 001c 10BD     		pop	{r4, pc}
 437              	.LVL26:
 438              	.L47:
 439              	.LCFI27:
 440              		.cfi_def_cfa_offset 0
 441              		.cfi_restore 4
 442              		.cfi_restore 14
 533:rtos/uC-FS/Source/fs_api.c ****     }
 443              		.loc 1 533 16 view .LVU102
 444 001e 4FF0FF30 		mov	r0, #-1
 445              	.LVL27:
 446              		.loc 1 547 1 view .LVU103
 447 0022 7047     		bx	lr
 448              	.LVL28:
 449              	.L48:
 450              	.LCFI28:
 451              		.cfi_def_cfa_offset 16
 452              		.cfi_offset 4, -8
 453              		.cfi_offset 14, -4
 536:rtos/uC-FS/Source/fs_api.c ****     }
 454              		.loc 1 536 16 view .LVU104
 455 0024 4FF0FF30 		mov	r0, #-1
 456              	.LVL29:
 536:rtos/uC-FS/Source/fs_api.c ****     }
 457              		.loc 1 536 16 view .LVU105
 458 0028 F7E7     		b	.L45
 459              	.LVL30:
 460              	.L49:
 545:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 461              		.loc 1 545 43 view .LVU106
 462 002a 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccYe7so7.s 			page 19


 463 002e F4E7     		b	.L45
 464              		.cfi_endproc
 465              	.LFE5:
 467              		.section	.text.fs_rmdir,"ax",%progbits
 468              		.align	1
 469              		.global	fs_rmdir
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 473              		.fpu fpv4-sp-d16
 475              	fs_rmdir:
 476              	.LVL31:
 477              	.LFB6:
 548:rtos/uC-FS/Source/fs_api.c **** #endif
 549:rtos/uC-FS/Source/fs_api.c **** 
 550:rtos/uC-FS/Source/fs_api.c **** 
 551:rtos/uC-FS/Source/fs_api.c **** /*
 552:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 553:rtos/uC-FS/Source/fs_api.c **** *                                             fs_rmdir()
 554:rtos/uC-FS/Source/fs_api.c **** *
 555:rtos/uC-FS/Source/fs_api.c **** * Description : Delete a directory.
 556:rtos/uC-FS/Source/fs_api.c **** *
 557:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : name_full   Name of the directory.
 558:rtos/uC-FS/Source/fs_api.c **** *
 559:rtos/uC-FS/Source/fs_api.c **** * Return(s)   :  0, if the directory is     removed.
 560:rtos/uC-FS/Source/fs_api.c **** *               -1, if the directory is NOT removed.
 561:rtos/uC-FS/Source/fs_api.c **** *
 562:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'rmdir() : DESCRIPTION' states that :
 563:rtos/uC-FS/Source/fs_api.c **** *
 564:rtos/uC-FS/Source/fs_api.c **** *                   (a) "The 'rmdir()' function shall remove a directory whose name is given by pat
 565:rtos/uC-FS/Source/fs_api.c **** *                        directory shall be removed only if it is an empty directory."
 566:rtos/uC-FS/Source/fs_api.c **** *
 567:rtos/uC-FS/Source/fs_api.c **** *                   (b) "If the directory is the root directory or the current working directory of
 568:rtos/uC-FS/Source/fs_api.c **** *                        process, it is unspecified whether the function succeeds, or whether it sh
 569:rtos/uC-FS/Source/fs_api.c **** *
 570:rtos/uC-FS/Source/fs_api.c **** *               (1) IEEE Std 1003.1, 2004 Edition, Section 'rmdir() : RETURN VALUE' states that "[u
 571:rtos/uC-FS/Source/fs_api.c **** *                   successful completion, the function 'rmdir()' shall return 0.  Otherwise, -1 sh
 572:rtos/uC-FS/Source/fs_api.c **** *                   be returned".
 573:rtos/uC-FS/Source/fs_api.c **** *
 574:rtos/uC-FS/Source/fs_api.c **** *               (2) The root directory CANNOT be removed.
 575:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 576:rtos/uC-FS/Source/fs_api.c **** */
 577:rtos/uC-FS/Source/fs_api.c **** 
 578:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 579:rtos/uC-FS/Source/fs_api.c **** int  fs_rmdir (const  char  *name_full)
 580:rtos/uC-FS/Source/fs_api.c **** {
 478              		.loc 1 580 1 is_stmt 1 view -0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 8
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 581:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 482              		.loc 1 581 5 view .LVU108
 582:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 483              		.loc 1 582 5 view .LVU109
 583:rtos/uC-FS/Source/fs_api.c **** 
 584:rtos/uC-FS/Source/fs_api.c **** 
 585:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
ARM GAS  /tmp/ccYe7so7.s 			page 20


 586:rtos/uC-FS/Source/fs_api.c ****     if (name_full == (const char *)0) {                         /* Validate pointer to name        
 484              		.loc 1 586 5 view .LVU110
 485              		.loc 1 586 8 is_stmt 0 view .LVU111
 486 0000 68B1     		cbz	r0, .L56
 580:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 487              		.loc 1 580 1 view .LVU112
 488 0002 00B5     		push	{lr}
 489              	.LCFI29:
 490              		.cfi_def_cfa_offset 4
 491              		.cfi_offset 14, -4
 492 0004 83B0     		sub	sp, sp, #12
 493              	.LCFI30:
 494              		.cfi_def_cfa_offset 16
 587:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 588:rtos/uC-FS/Source/fs_api.c ****     }
 589:rtos/uC-FS/Source/fs_api.c **** #endif
 590:rtos/uC-FS/Source/fs_api.c **** 
 591:rtos/uC-FS/Source/fs_api.c ****     FSEntry_Del((CPU_CHAR *) name_full,
 495              		.loc 1 591 5 is_stmt 1 view .LVU113
 496 0006 0DF10602 		add	r2, sp, #6
 497 000a 0421     		movs	r1, #4
 498 000c FFF7FEFF 		bl	FSEntry_Del
 499              	.LVL32:
 592:rtos/uC-FS/Source/fs_api.c ****                              FS_ENTRY_TYPE_DIR,
 593:rtos/uC-FS/Source/fs_api.c ****                             &err);
 594:rtos/uC-FS/Source/fs_api.c **** 
 595:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? (0) : (-1);
 500              		.loc 1 595 5 view .LVU114
 501              		.loc 1 595 16 is_stmt 0 view .LVU115
 502 0010 BDF80630 		ldrh	r3, [sp, #6]
 503              		.loc 1 595 38 view .LVU116
 504 0014 33B9     		cbnz	r3, .L57
 505 0016 0020     		movs	r0, #0
 506              	.L54:
 596:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 597:rtos/uC-FS/Source/fs_api.c **** }
 507              		.loc 1 597 1 view .LVU117
 508 0018 03B0     		add	sp, sp, #12
 509              	.LCFI31:
 510              		.cfi_def_cfa_offset 4
 511              		@ sp needed
 512 001a 5DF804FB 		ldr	pc, [sp], #4
 513              	.LVL33:
 514              	.L56:
 515              	.LCFI32:
 516              		.cfi_def_cfa_offset 0
 517              		.cfi_restore 14
 587:rtos/uC-FS/Source/fs_api.c ****     }
 518              		.loc 1 587 16 view .LVU118
 519 001e 4FF0FF30 		mov	r0, #-1
 520              	.LVL34:
 521              		.loc 1 597 1 view .LVU119
 522 0022 7047     		bx	lr
 523              	.L57:
 524              	.LCFI33:
 525              		.cfi_def_cfa_offset 16
 526              		.cfi_offset 14, -4
ARM GAS  /tmp/ccYe7so7.s 			page 21


 595:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 527              		.loc 1 595 38 view .LVU120
 528 0024 4FF0FF30 		mov	r0, #-1
 529 0028 F6E7     		b	.L54
 530              		.cfi_endproc
 531              	.LFE6:
 533              		.section	.text.fs_stat,"ax",%progbits
 534              		.align	1
 535              		.global	fs_stat
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 539              		.fpu fpv4-sp-d16
 541              	fs_stat:
 542              	.LVL35:
 543              	.LFB7:
 598:rtos/uC-FS/Source/fs_api.c **** #endif
 599:rtos/uC-FS/Source/fs_api.c **** 
 600:rtos/uC-FS/Source/fs_api.c **** 
 601:rtos/uC-FS/Source/fs_api.c **** /*
 602:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 603:rtos/uC-FS/Source/fs_api.c **** *                                              fs_stat()
 604:rtos/uC-FS/Source/fs_api.c **** *
 605:rtos/uC-FS/Source/fs_api.c **** * Description : Get information about a file or directory.
 606:rtos/uC-FS/Source/fs_api.c **** *
 607:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : name_full   Name of the entry.
 608:rtos/uC-FS/Source/fs_api.c **** *
 609:rtos/uC-FS/Source/fs_api.c **** *               p_info      Pointer to structure that will receive the entry information.
 610:rtos/uC-FS/Source/fs_api.c **** *
 611:rtos/uC-FS/Source/fs_api.c **** * Return(s)   :  0, if the function succeeds.
 612:rtos/uC-FS/Source/fs_api.c **** *               -1, otherwise.
 613:rtos/uC-FS/Source/fs_api.c **** *
 614:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : none.
 615:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 616:rtos/uC-FS/Source/fs_api.c **** */
 617:rtos/uC-FS/Source/fs_api.c **** 
 618:rtos/uC-FS/Source/fs_api.c **** int  fs_stat (const  char             *name_full,
 619:rtos/uC-FS/Source/fs_api.c ****                      struct  fs_stat  *p_info)
 620:rtos/uC-FS/Source/fs_api.c **** {
 544              		.loc 1 620 1 is_stmt 1 view -0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 32
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 621:rtos/uC-FS/Source/fs_api.c ****     FS_ENTRY_INFO  info;
 548              		.loc 1 621 5 view .LVU122
 622:rtos/uC-FS/Source/fs_api.c ****     FS_ERR         err;
 549              		.loc 1 622 5 view .LVU123
 623:rtos/uC-FS/Source/fs_api.c ****     fs_mode_t      mode;
 550              		.loc 1 623 5 view .LVU124
 624:rtos/uC-FS/Source/fs_api.c **** 
 625:rtos/uC-FS/Source/fs_api.c **** 
 626:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 627:rtos/uC-FS/Source/fs_api.c ****     if (name_full == (const char *)0) {                         /* Validate pointer to name        
 551              		.loc 1 627 5 view .LVU125
 552              		.loc 1 627 8 is_stmt 0 view .LVU126
 553 0000 0028     		cmp	r0, #0
 554 0002 3BD0     		beq	.L67
ARM GAS  /tmp/ccYe7so7.s 			page 22


 620:rtos/uC-FS/Source/fs_api.c ****     FS_ENTRY_INFO  info;
 555              		.loc 1 620 1 view .LVU127
 556 0004 10B5     		push	{r4, lr}
 557              	.LCFI34:
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 4, -8
 560              		.cfi_offset 14, -4
 561 0006 88B0     		sub	sp, sp, #32
 562              	.LCFI35:
 563              		.cfi_def_cfa_offset 40
 564 0008 0C46     		mov	r4, r1
 628:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 629:rtos/uC-FS/Source/fs_api.c ****     }
 630:rtos/uC-FS/Source/fs_api.c ****     if (p_info == (struct  fs_stat *)0) {                       /* Validate pointer to result      
 565              		.loc 1 630 5 is_stmt 1 view .LVU128
 566              		.loc 1 630 8 is_stmt 0 view .LVU129
 567 000a 0029     		cmp	r1, #0
 568 000c 39D0     		beq	.L68
 631:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 632:rtos/uC-FS/Source/fs_api.c ****     }
 633:rtos/uC-FS/Source/fs_api.c **** #endif
 634:rtos/uC-FS/Source/fs_api.c **** 
 635:rtos/uC-FS/Source/fs_api.c ****     FSEntry_Query((CPU_CHAR *) name_full,
 569              		.loc 1 635 5 is_stmt 1 view .LVU130
 570 000e 0DF10202 		add	r2, sp, #2
 571 0012 01A9     		add	r1, sp, #4
 572              	.LVL36:
 573              		.loc 1 635 5 is_stmt 0 view .LVU131
 574 0014 FFF7FEFF 		bl	FSEntry_Query
 575              	.LVL37:
 636:rtos/uC-FS/Source/fs_api.c ****                               &info,
 637:rtos/uC-FS/Source/fs_api.c ****                               &err);
 638:rtos/uC-FS/Source/fs_api.c **** 
 639:rtos/uC-FS/Source/fs_api.c ****     if (err != FS_ERR_NONE) {
 576              		.loc 1 639 5 is_stmt 1 view .LVU132
 577              		.loc 1 639 13 is_stmt 0 view .LVU133
 578 0018 BDF80230 		ldrh	r3, [sp, #2]
 579              		.loc 1 639 8 view .LVU134
 580 001c 002B     		cmp	r3, #0
 581 001e 33D1     		bne	.L69
 640:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
 641:rtos/uC-FS/Source/fs_api.c ****     }
 642:rtos/uC-FS/Source/fs_api.c **** 
 643:rtos/uC-FS/Source/fs_api.c ****     mode = (DEF_BIT_IS_SET(info.Attrib, FS_ENTRY_ATTRIB_DIR) == DEF_YES) ? FS_S_IFDIR
 582              		.loc 1 643 5 is_stmt 1 view .LVU135
 583              		.loc 1 643 13 is_stmt 0 view .LVU136
 584 0020 019A     		ldr	r2, [sp, #4]
 644:rtos/uC-FS/Source/fs_api.c ****                                                                          : FS_S_IFREG;
 585              		.loc 1 644 74 view .LVU137
 586 0022 12F0400F 		tst	r2, #64
 587 0026 26D0     		beq	.L70
 588 0028 4FF4A043 		mov	r3, #20480
 589              	.L64:
 590              	.LVL38:
 645:rtos/uC-FS/Source/fs_api.c **** 
 646:rtos/uC-FS/Source/fs_api.c ****     if (DEF_BIT_IS_SET(info.Attrib, FS_ENTRY_ATTRIB_RD) == DEF_YES) {
 591              		.loc 1 646 5 is_stmt 1 view .LVU138
ARM GAS  /tmp/ccYe7so7.s 			page 23


 592              		.loc 1 646 8 is_stmt 0 view .LVU139
 593 002c 12F0010F 		tst	r2, #1
 594 0030 03D0     		beq	.L65
 647:rtos/uC-FS/Source/fs_api.c ****         mode |= FS_S_IRUSR | FS_S_IRGRP | FS_S_IROTH;
 595              		.loc 1 647 9 is_stmt 1 view .LVU140
 596              		.loc 1 647 14 is_stmt 0 view .LVU141
 597 0032 43F48863 		orr	r3, r3, #1088
 598              	.LVL39:
 599              		.loc 1 647 14 view .LVU142
 600 0036 43F00403 		orr	r3, r3, #4
 601              	.LVL40:
 602              	.L65:
 648:rtos/uC-FS/Source/fs_api.c ****     }
 649:rtos/uC-FS/Source/fs_api.c **** 
 650:rtos/uC-FS/Source/fs_api.c ****     if (DEF_BIT_IS_SET(info.Attrib, FS_ENTRY_ATTRIB_WR) == DEF_YES) {
 603              		.loc 1 650 5 is_stmt 1 view .LVU143
 604              		.loc 1 650 8 is_stmt 0 view .LVU144
 605 003a 12F0020F 		tst	r2, #2
 606 003e 03D0     		beq	.L66
 651:rtos/uC-FS/Source/fs_api.c ****         mode |= FS_S_IWUSR | FS_S_IWGRP | FS_S_IWOTH;
 607              		.loc 1 651 9 is_stmt 1 view .LVU145
 608              		.loc 1 651 14 is_stmt 0 view .LVU146
 609 0040 43F40873 		orr	r3, r3, #544
 610              	.LVL41:
 611              		.loc 1 651 14 view .LVU147
 612 0044 43F00203 		orr	r3, r3, #2
 613              	.LVL42:
 614              	.L66:
 652:rtos/uC-FS/Source/fs_api.c ****     }
 653:rtos/uC-FS/Source/fs_api.c **** 
 654:rtos/uC-FS/Source/fs_api.c ****     p_info->st_dev     =  0u;
 615              		.loc 1 654 5 is_stmt 1 view .LVU148
 616              		.loc 1 654 24 is_stmt 0 view .LVU149
 617 0048 0020     		movs	r0, #0
 618 004a 2060     		str	r0, [r4]
 655:rtos/uC-FS/Source/fs_api.c ****     p_info->st_ino     =  0u;
 619              		.loc 1 655 5 is_stmt 1 view .LVU150
 620              		.loc 1 655 24 is_stmt 0 view .LVU151
 621 004c 6060     		str	r0, [r4, #4]
 656:rtos/uC-FS/Source/fs_api.c ****     p_info->st_mode    =  mode;
 622              		.loc 1 656 5 is_stmt 1 view .LVU152
 623              		.loc 1 656 24 is_stmt 0 view .LVU153
 624 004e A360     		str	r3, [r4, #8]
 657:rtos/uC-FS/Source/fs_api.c ****     p_info->st_nlink   =  1u;
 625              		.loc 1 657 5 is_stmt 1 view .LVU154
 626              		.loc 1 657 24 is_stmt 0 view .LVU155
 627 0050 0123     		movs	r3, #1
 628              	.LVL43:
 629              		.loc 1 657 24 view .LVU156
 630 0052 E360     		str	r3, [r4, #12]
 658:rtos/uC-FS/Source/fs_api.c ****     p_info->st_uid     =  0u;
 631              		.loc 1 658 5 is_stmt 1 view .LVU157
 632              		.loc 1 658 24 is_stmt 0 view .LVU158
 633 0054 2061     		str	r0, [r4, #16]
 659:rtos/uC-FS/Source/fs_api.c ****     p_info->st_gid     =  0u;
 634              		.loc 1 659 5 is_stmt 1 view .LVU159
 635              		.loc 1 659 24 is_stmt 0 view .LVU160
ARM GAS  /tmp/ccYe7so7.s 			page 24


 636 0056 6061     		str	r0, [r4, #20]
 660:rtos/uC-FS/Source/fs_api.c ****     p_info->st_size    = (fs_off_t    ) info.Size;
 637              		.loc 1 660 5 is_stmt 1 view .LVU161
 638              		.loc 1 660 45 is_stmt 0 view .LVU162
 639 0058 029B     		ldr	r3, [sp, #8]
 640              		.loc 1 660 24 view .LVU163
 641 005a A361     		str	r3, [r4, #24]
 661:rtos/uC-FS/Source/fs_api.c ****     p_info->st_atime   = (fs_time_t   )-1;
 642              		.loc 1 661 5 is_stmt 1 view .LVU164
 643              		.loc 1 661 24 is_stmt 0 view .LVU165
 644 005c 4FF0FF33 		mov	r3, #-1
 645 0060 E361     		str	r3, [r4, #28]
 662:rtos/uC-FS/Source/fs_api.c ****     p_info->st_ctime   = (fs_time_t   ) info.DateTimeCreate;
 646              		.loc 1 662 5 is_stmt 1 view .LVU166
 647              		.loc 1 662 45 is_stmt 0 view .LVU167
 648 0062 039B     		ldr	r3, [sp, #12]
 649              		.loc 1 662 24 view .LVU168
 650 0064 6362     		str	r3, [r4, #36]
 663:rtos/uC-FS/Source/fs_api.c ****     p_info->st_mtime   = (fs_time_t   ) info.DateTimeWr;
 651              		.loc 1 663 5 is_stmt 1 view .LVU169
 652              		.loc 1 663 45 is_stmt 0 view .LVU170
 653 0066 059B     		ldr	r3, [sp, #20]
 654              		.loc 1 663 24 view .LVU171
 655 0068 2362     		str	r3, [r4, #32]
 664:rtos/uC-FS/Source/fs_api.c ****     p_info->st_blksize = (fs_blksize_t) info.BlkSize;
 656              		.loc 1 664 5 is_stmt 1 view .LVU172
 657              		.loc 1 664 45 is_stmt 0 view .LVU173
 658 006a 079B     		ldr	r3, [sp, #28]
 659              		.loc 1 664 24 view .LVU174
 660 006c A362     		str	r3, [r4, #40]
 665:rtos/uC-FS/Source/fs_api.c ****     p_info->st_blocks  = (fs_blkcnt_t ) info.BlkCnt;
 661              		.loc 1 665 5 is_stmt 1 view .LVU175
 662              		.loc 1 665 45 is_stmt 0 view .LVU176
 663 006e 069B     		ldr	r3, [sp, #24]
 664              		.loc 1 665 24 view .LVU177
 665 0070 E362     		str	r3, [r4, #44]
 666:rtos/uC-FS/Source/fs_api.c **** 
 667:rtos/uC-FS/Source/fs_api.c ****     return ((int)0);
 666              		.loc 1 667 5 is_stmt 1 view .LVU178
 667              	.LVL44:
 668              	.L62:
 668:rtos/uC-FS/Source/fs_api.c **** }
 669              		.loc 1 668 1 is_stmt 0 view .LVU179
 670 0072 08B0     		add	sp, sp, #32
 671              	.LCFI36:
 672              		.cfi_remember_state
 673              		.cfi_def_cfa_offset 8
 674              		@ sp needed
 675 0074 10BD     		pop	{r4, pc}
 676              	.LVL45:
 677              	.L70:
 678              	.LCFI37:
 679              		.cfi_restore_state
 644:rtos/uC-FS/Source/fs_api.c **** 
 680              		.loc 1 644 74 view .LVU180
 681 0076 4FF48043 		mov	r3, #16384
 682 007a D7E7     		b	.L64
ARM GAS  /tmp/ccYe7so7.s 			page 25


 683              	.LVL46:
 684              	.L67:
 685              	.LCFI38:
 686              		.cfi_def_cfa_offset 0
 687              		.cfi_restore 4
 688              		.cfi_restore 14
 628:rtos/uC-FS/Source/fs_api.c ****     }
 689              		.loc 1 628 16 view .LVU181
 690 007c 4FF0FF30 		mov	r0, #-1
 691              	.LVL47:
 692              		.loc 1 668 1 view .LVU182
 693 0080 7047     		bx	lr
 694              	.LVL48:
 695              	.L68:
 696              	.LCFI39:
 697              		.cfi_def_cfa_offset 40
 698              		.cfi_offset 4, -8
 699              		.cfi_offset 14, -4
 631:rtos/uC-FS/Source/fs_api.c ****     }
 700              		.loc 1 631 16 view .LVU183
 701 0082 4FF0FF30 		mov	r0, #-1
 702              	.LVL49:
 631:rtos/uC-FS/Source/fs_api.c ****     }
 703              		.loc 1 631 16 view .LVU184
 704 0086 F4E7     		b	.L62
 705              	.LVL50:
 706              	.L69:
 640:rtos/uC-FS/Source/fs_api.c ****     }
 707              		.loc 1 640 16 view .LVU185
 708 0088 4FF0FF30 		mov	r0, #-1
 709 008c F1E7     		b	.L62
 710              		.cfi_endproc
 711              	.LFE7:
 713              		.section	.text.fs_clearerr,"ax",%progbits
 714              		.align	1
 715              		.global	fs_clearerr
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	fs_clearerr:
 722              	.LVL51:
 723              	.LFB8:
 669:rtos/uC-FS/Source/fs_api.c **** 
 670:rtos/uC-FS/Source/fs_api.c **** 
 671:rtos/uC-FS/Source/fs_api.c **** /*
 672:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 673:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 674:rtos/uC-FS/Source/fs_api.c **** *                                           FILE FUNCTIONS
 675:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 676:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 677:rtos/uC-FS/Source/fs_api.c **** */
 678:rtos/uC-FS/Source/fs_api.c **** 
 679:rtos/uC-FS/Source/fs_api.c **** /*
 680:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 681:rtos/uC-FS/Source/fs_api.c **** *                                            fs_clearerr()
 682:rtos/uC-FS/Source/fs_api.c **** *
ARM GAS  /tmp/ccYe7so7.s 			page 26


 683:rtos/uC-FS/Source/fs_api.c **** * Description : Clear EOF & error indicators on a file.
 684:rtos/uC-FS/Source/fs_api.c **** *
 685:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
 686:rtos/uC-FS/Source/fs_api.c **** *
 687:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : none.
 688:rtos/uC-FS/Source/fs_api.c **** *
 689:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : none.
 690:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 691:rtos/uC-FS/Source/fs_api.c **** */
 692:rtos/uC-FS/Source/fs_api.c **** 
 693:rtos/uC-FS/Source/fs_api.c **** void  fs_clearerr (FS_FILE *p_file)
 694:rtos/uC-FS/Source/fs_api.c **** {
 724              		.loc 1 694 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 8
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 695:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 728              		.loc 1 695 5 view .LVU187
 696:rtos/uC-FS/Source/fs_api.c **** 
 697:rtos/uC-FS/Source/fs_api.c **** 
 698:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 699:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 729              		.loc 1 699 5 view .LVU188
 730              		.loc 1 699 8 is_stmt 0 view .LVU189
 731 0000 40B1     		cbz	r0, .L79
 694:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 732              		.loc 1 694 1 view .LVU190
 733 0002 00B5     		push	{lr}
 734              	.LCFI40:
 735              		.cfi_def_cfa_offset 4
 736              		.cfi_offset 14, -4
 737 0004 83B0     		sub	sp, sp, #12
 738              	.LCFI41:
 739              		.cfi_def_cfa_offset 16
 700:rtos/uC-FS/Source/fs_api.c ****         return;
 701:rtos/uC-FS/Source/fs_api.c ****     }
 702:rtos/uC-FS/Source/fs_api.c **** #endif
 703:rtos/uC-FS/Source/fs_api.c **** 
 704:rtos/uC-FS/Source/fs_api.c ****     FSFile_ClrErr(p_file, &err);
 740              		.loc 1 704 5 is_stmt 1 view .LVU191
 741 0006 0DF10601 		add	r1, sp, #6
 742 000a FFF7FEFF 		bl	FSFile_ClrErr
 743              	.LVL52:
 705:rtos/uC-FS/Source/fs_api.c **** }
 744              		.loc 1 705 1 is_stmt 0 view .LVU192
 745 000e 03B0     		add	sp, sp, #12
 746              	.LCFI42:
 747              		.cfi_def_cfa_offset 4
 748              		@ sp needed
 749 0010 5DF804FB 		ldr	pc, [sp], #4
 750              	.LVL53:
 751              	.L79:
 752              	.LCFI43:
 753              		.cfi_def_cfa_offset 0
 754              		.cfi_restore 14
 755              		.loc 1 705 1 view .LVU193
 756 0014 7047     		bx	lr
ARM GAS  /tmp/ccYe7so7.s 			page 27


 757              		.cfi_endproc
 758              	.LFE8:
 760              		.section	.text.fs_fclose,"ax",%progbits
 761              		.align	1
 762              		.global	fs_fclose
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu fpv4-sp-d16
 768              	fs_fclose:
 769              	.LVL54:
 770              	.LFB9:
 706:rtos/uC-FS/Source/fs_api.c **** 
 707:rtos/uC-FS/Source/fs_api.c **** 
 708:rtos/uC-FS/Source/fs_api.c **** /*
 709:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 710:rtos/uC-FS/Source/fs_api.c **** *                                             fs_fclose()
 711:rtos/uC-FS/Source/fs_api.c **** *
 712:rtos/uC-FS/Source/fs_api.c **** * Description : Close & free a file.
 713:rtos/uC-FS/Source/fs_api.c **** *
 714:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
 715:rtos/uC-FS/Source/fs_api.c **** *
 716:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : 0,      if the file was successfully closed.
 717:rtos/uC-FS/Source/fs_api.c **** *               FS_EOF, otherwise.
 718:rtos/uC-FS/Source/fs_api.c **** *
 719:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) After a file is closed, the application MUST desist from accessing its file poi
 720:rtos/uC-FS/Source/fs_api.c **** *                   This could cause file system corruption, since this handle may be re-used for a
 721:rtos/uC-FS/Source/fs_api.c **** *                   different file.
 722:rtos/uC-FS/Source/fs_api.c **** *
 723:rtos/uC-FS/Source/fs_api.c **** *               (2) (a) If the most recent operation is output (write), all unwritten data is writt
 724:rtos/uC-FS/Source/fs_api.c **** *                       to the file.
 725:rtos/uC-FS/Source/fs_api.c **** *
 726:rtos/uC-FS/Source/fs_api.c **** *                   (b) Any buffer assigned with 'fs_setbuf()' or 'fs_setvbuf()' shall no longer be
 727:rtos/uC-FS/Source/fs_api.c **** *                       accessed by the file system & may be re-used by the application.
 728:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 729:rtos/uC-FS/Source/fs_api.c **** */
 730:rtos/uC-FS/Source/fs_api.c **** 
 731:rtos/uC-FS/Source/fs_api.c **** int  fs_fclose (FS_FILE  *p_file)
 732:rtos/uC-FS/Source/fs_api.c **** {
 771              		.loc 1 732 1 is_stmt 1 view -0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 8
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 733:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 775              		.loc 1 733 5 view .LVU195
 734:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 776              		.loc 1 734 5 view .LVU196
 735:rtos/uC-FS/Source/fs_api.c **** 
 736:rtos/uC-FS/Source/fs_api.c **** 
 737:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 738:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 777              		.loc 1 738 5 view .LVU197
 778              		.loc 1 738 8 is_stmt 0 view .LVU198
 779 0000 60B1     		cbz	r0, .L84
 732:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 780              		.loc 1 732 1 view .LVU199
 781 0002 00B5     		push	{lr}
ARM GAS  /tmp/ccYe7so7.s 			page 28


 782              	.LCFI44:
 783              		.cfi_def_cfa_offset 4
 784              		.cfi_offset 14, -4
 785 0004 83B0     		sub	sp, sp, #12
 786              	.LCFI45:
 787              		.cfi_def_cfa_offset 16
 739:rtos/uC-FS/Source/fs_api.c ****         return ((int)FS_EOF);
 740:rtos/uC-FS/Source/fs_api.c ****     }
 741:rtos/uC-FS/Source/fs_api.c **** #endif
 742:rtos/uC-FS/Source/fs_api.c **** 
 743:rtos/uC-FS/Source/fs_api.c ****     FSFile_Close(p_file, &err);
 788              		.loc 1 743 5 is_stmt 1 view .LVU200
 789 0006 0DF10601 		add	r1, sp, #6
 790 000a FFF7FEFF 		bl	FSFile_Close
 791              	.LVL55:
 744:rtos/uC-FS/Source/fs_api.c **** 
 745:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? (int)0 : (int)FS_EOF;
 792              		.loc 1 745 5 view .LVU201
 793              		.loc 1 745 16 is_stmt 0 view .LVU202
 794 000e BDF80630 		ldrh	r3, [sp, #6]
 795              		.loc 1 745 41 view .LVU203
 796 0012 33B9     		cbnz	r3, .L85
 797 0014 0020     		movs	r0, #0
 798              	.L82:
 746:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 747:rtos/uC-FS/Source/fs_api.c **** }
 799              		.loc 1 747 1 view .LVU204
 800 0016 03B0     		add	sp, sp, #12
 801              	.LCFI46:
 802              		.cfi_def_cfa_offset 4
 803              		@ sp needed
 804 0018 5DF804FB 		ldr	pc, [sp], #4
 805              	.LVL56:
 806              	.L84:
 807              	.LCFI47:
 808              		.cfi_def_cfa_offset 0
 809              		.cfi_restore 14
 739:rtos/uC-FS/Source/fs_api.c ****     }
 810              		.loc 1 739 16 view .LVU205
 811 001c 4FF0FF30 		mov	r0, #-1
 812              	.LVL57:
 813              		.loc 1 747 1 view .LVU206
 814 0020 7047     		bx	lr
 815              	.L85:
 816              	.LCFI48:
 817              		.cfi_def_cfa_offset 16
 818              		.cfi_offset 14, -4
 745:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 819              		.loc 1 745 41 view .LVU207
 820 0022 4FF0FF30 		mov	r0, #-1
 821 0026 F6E7     		b	.L82
 822              		.cfi_endproc
 823              	.LFE9:
 825              		.section	.text.fs_feof,"ax",%progbits
 826              		.align	1
 827              		.global	fs_feof
 828              		.syntax unified
ARM GAS  /tmp/ccYe7so7.s 			page 29


 829              		.thumb
 830              		.thumb_func
 831              		.fpu fpv4-sp-d16
 833              	fs_feof:
 834              	.LVL58:
 835              	.LFB10:
 748:rtos/uC-FS/Source/fs_api.c **** 
 749:rtos/uC-FS/Source/fs_api.c **** 
 750:rtos/uC-FS/Source/fs_api.c **** /*
 751:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 752:rtos/uC-FS/Source/fs_api.c **** *                                              fs_feof()
 753:rtos/uC-FS/Source/fs_api.c **** *
 754:rtos/uC-FS/Source/fs_api.c **** * Description : Test EOF indicator on a file.
 755:rtos/uC-FS/Source/fs_api.c **** *
 756:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
 757:rtos/uC-FS/Source/fs_api.c **** *
 758:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : 0,              if EOF indicator is NOT set or if an error occurred.
 759:rtos/uC-FS/Source/fs_api.c **** *               Non-zero value, if EOF indicator is     set.
 760:rtos/uC-FS/Source/fs_api.c **** *
 761:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) The return value from this function should ALWAYS be tested against 0 :
 762:rtos/uC-FS/Source/fs_api.c **** *
 763:rtos/uC-FS/Source/fs_api.c **** *                       rtn = fs_feof(pfile);
 764:rtos/uC-FS/Source/fs_api.c **** *                       if (rtn == 0) {
 765:rtos/uC-FS/Source/fs_api.c **** *                           // EOF indicator is NOT set
 766:rtos/uC-FS/Source/fs_api.c **** *                       } else {
 767:rtos/uC-FS/Source/fs_api.c **** *                           // EOF indicator is     set
 768:rtos/uC-FS/Source/fs_api.c **** *                       }
 769:rtos/uC-FS/Source/fs_api.c **** *
 770:rtos/uC-FS/Source/fs_api.c **** *               (2) If the end-of-file indicator is set (i.e., 'fs_feof()' returns a non-zero value
 771:rtos/uC-FS/Source/fs_api.c **** *                   'fs_clrerror()' can be used to clear that indicator.
 772:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 773:rtos/uC-FS/Source/fs_api.c **** */
 774:rtos/uC-FS/Source/fs_api.c **** 
 775:rtos/uC-FS/Source/fs_api.c **** int  fs_feof (FS_FILE  *p_file)
 776:rtos/uC-FS/Source/fs_api.c **** {
 836              		.loc 1 776 1 is_stmt 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 8
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 777:rtos/uC-FS/Source/fs_api.c ****     CPU_BOOLEAN  is_eof;
 840              		.loc 1 777 5 view .LVU209
 778:rtos/uC-FS/Source/fs_api.c ****     int          rtn;
 841              		.loc 1 778 5 view .LVU210
 779:rtos/uC-FS/Source/fs_api.c ****     FS_ERR       err;
 842              		.loc 1 779 5 view .LVU211
 780:rtos/uC-FS/Source/fs_api.c **** 
 781:rtos/uC-FS/Source/fs_api.c **** 
 782:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 783:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 843              		.loc 1 783 5 view .LVU212
 844              		.loc 1 783 8 is_stmt 0 view .LVU213
 845 0000 70B1     		cbz	r0, .L92
 776:rtos/uC-FS/Source/fs_api.c ****     CPU_BOOLEAN  is_eof;
 846              		.loc 1 776 1 view .LVU214
 847 0002 00B5     		push	{lr}
 848              	.LCFI49:
 849              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccYe7so7.s 			page 30


 850              		.cfi_offset 14, -4
 851 0004 83B0     		sub	sp, sp, #12
 852              	.LCFI50:
 853              		.cfi_def_cfa_offset 16
 784:rtos/uC-FS/Source/fs_api.c ****         return ((int)FS_EBADF);
 785:rtos/uC-FS/Source/fs_api.c ****     }
 786:rtos/uC-FS/Source/fs_api.c **** #endif
 787:rtos/uC-FS/Source/fs_api.c **** 
 788:rtos/uC-FS/Source/fs_api.c ****     is_eof = FSFile_IsEOF(p_file, &err);
 854              		.loc 1 788 5 is_stmt 1 view .LVU215
 855              		.loc 1 788 14 is_stmt 0 view .LVU216
 856 0006 0DF10601 		add	r1, sp, #6
 857 000a FFF7FEFF 		bl	FSFile_IsEOF
 858              	.LVL59:
 789:rtos/uC-FS/Source/fs_api.c ****     rtn    = (is_eof == DEF_YES) ? (int)FS_STDIO_ERR : (int)0;
 859              		.loc 1 789 5 is_stmt 1 view .LVU217
 860              		.loc 1 789 54 is_stmt 0 view .LVU218
 861 000e 0128     		cmp	r0, #1
 862 0010 03D0     		beq	.L98
 863 0012 0020     		movs	r0, #0
 864              	.LVL60:
 865              	.L90:
 790:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 791:rtos/uC-FS/Source/fs_api.c **** }
 866              		.loc 1 791 1 view .LVU219
 867 0014 03B0     		add	sp, sp, #12
 868              	.LCFI51:
 869              		.cfi_remember_state
 870              		.cfi_def_cfa_offset 4
 871              		@ sp needed
 872 0016 5DF804FB 		ldr	pc, [sp], #4
 873              	.LVL61:
 874              	.L98:
 875              	.LCFI52:
 876              		.cfi_restore_state
 789:rtos/uC-FS/Source/fs_api.c ****     rtn    = (is_eof == DEF_YES) ? (int)FS_STDIO_ERR : (int)0;
 877              		.loc 1 789 54 view .LVU220
 878 001a 4FF0FF30 		mov	r0, #-1
 879              	.LVL62:
 789:rtos/uC-FS/Source/fs_api.c ****     rtn    = (is_eof == DEF_YES) ? (int)FS_STDIO_ERR : (int)0;
 880              		.loc 1 789 54 view .LVU221
 881 001e F9E7     		b	.L90
 882              	.LVL63:
 883              	.L92:
 884              	.LCFI53:
 885              		.cfi_def_cfa_offset 0
 886              		.cfi_restore 14
 784:rtos/uC-FS/Source/fs_api.c ****     }
 887              		.loc 1 784 16 view .LVU222
 888 0020 0320     		movs	r0, #3
 889              	.LVL64:
 890              		.loc 1 791 1 view .LVU223
 891 0022 7047     		bx	lr
 892              		.cfi_endproc
 893              	.LFE10:
 895              		.section	.text.fs_ferror,"ax",%progbits
 896              		.align	1
ARM GAS  /tmp/ccYe7so7.s 			page 31


 897              		.global	fs_ferror
 898              		.syntax unified
 899              		.thumb
 900              		.thumb_func
 901              		.fpu fpv4-sp-d16
 903              	fs_ferror:
 904              	.LVL65:
 905              	.LFB11:
 792:rtos/uC-FS/Source/fs_api.c **** 
 793:rtos/uC-FS/Source/fs_api.c **** 
 794:rtos/uC-FS/Source/fs_api.c **** /*
 795:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 796:rtos/uC-FS/Source/fs_api.c **** *                                             fs_ferror()
 797:rtos/uC-FS/Source/fs_api.c **** *
 798:rtos/uC-FS/Source/fs_api.c **** * Description : Test error indicator on a file.
 799:rtos/uC-FS/Source/fs_api.c **** *
 800:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
 801:rtos/uC-FS/Source/fs_api.c **** *
 802:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : 0,              if error indicator is NOT set or if an error occurred.
 803:rtos/uC-FS/Source/fs_api.c **** *               Non-zero value, if error indicator is     set.
 804:rtos/uC-FS/Source/fs_api.c **** *
 805:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) The return value from this function should ALWAYS be tested against 0 :
 806:rtos/uC-FS/Source/fs_api.c **** *
 807:rtos/uC-FS/Source/fs_api.c **** *                       rtn = fs_ferror(pfile);
 808:rtos/uC-FS/Source/fs_api.c **** *                       if (rtn == 0) {
 809:rtos/uC-FS/Source/fs_api.c **** *                           // Error indicator is NOT set
 810:rtos/uC-FS/Source/fs_api.c **** *                       } else {
 811:rtos/uC-FS/Source/fs_api.c **** *                           // Error indicator is     set
 812:rtos/uC-FS/Source/fs_api.c **** *                       }
 813:rtos/uC-FS/Source/fs_api.c **** *
 814:rtos/uC-FS/Source/fs_api.c **** *               (2) If the error indicator is set (i.e., 'fs_ferror() returns a non-zero value),
 815:rtos/uC-FS/Source/fs_api.c **** *                   'fs_clearerr()' can be used to clear that indicator.
 816:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 817:rtos/uC-FS/Source/fs_api.c **** */
 818:rtos/uC-FS/Source/fs_api.c **** 
 819:rtos/uC-FS/Source/fs_api.c **** int  fs_ferror (FS_FILE  *p_file)
 820:rtos/uC-FS/Source/fs_api.c **** {
 906              		.loc 1 820 1 is_stmt 1 view -0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 8
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 821:rtos/uC-FS/Source/fs_api.c ****     CPU_BOOLEAN  is_err;
 910              		.loc 1 821 5 view .LVU225
 822:rtos/uC-FS/Source/fs_api.c ****     int          rtn;
 911              		.loc 1 822 5 view .LVU226
 823:rtos/uC-FS/Source/fs_api.c ****     FS_ERR       err;
 912              		.loc 1 823 5 view .LVU227
 824:rtos/uC-FS/Source/fs_api.c **** 
 825:rtos/uC-FS/Source/fs_api.c **** 
 826:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 827:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 913              		.loc 1 827 5 view .LVU228
 914              		.loc 1 827 8 is_stmt 0 view .LVU229
 915 0000 70B1     		cbz	r0, .L101
 820:rtos/uC-FS/Source/fs_api.c ****     CPU_BOOLEAN  is_err;
 916              		.loc 1 820 1 view .LVU230
 917 0002 00B5     		push	{lr}
ARM GAS  /tmp/ccYe7so7.s 			page 32


 918              	.LCFI54:
 919              		.cfi_def_cfa_offset 4
 920              		.cfi_offset 14, -4
 921 0004 83B0     		sub	sp, sp, #12
 922              	.LCFI55:
 923              		.cfi_def_cfa_offset 16
 828:rtos/uC-FS/Source/fs_api.c ****         return ((int)FS_EBADF);
 829:rtos/uC-FS/Source/fs_api.c ****     }
 830:rtos/uC-FS/Source/fs_api.c **** #endif
 831:rtos/uC-FS/Source/fs_api.c **** 
 832:rtos/uC-FS/Source/fs_api.c ****     is_err = FSFile_IsErr(p_file, &err);
 924              		.loc 1 832 5 is_stmt 1 view .LVU231
 925              		.loc 1 832 14 is_stmt 0 view .LVU232
 926 0006 0DF10601 		add	r1, sp, #6
 927 000a FFF7FEFF 		bl	FSFile_IsErr
 928              	.LVL66:
 833:rtos/uC-FS/Source/fs_api.c ****     rtn    = (is_err == DEF_YES) ? (int)FS_STDIO_ERR : (int)0;
 929              		.loc 1 833 5 is_stmt 1 view .LVU233
 930              		.loc 1 833 54 is_stmt 0 view .LVU234
 931 000e 0128     		cmp	r0, #1
 932 0010 03D0     		beq	.L107
 933 0012 0020     		movs	r0, #0
 934              	.LVL67:
 935              	.L99:
 834:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 835:rtos/uC-FS/Source/fs_api.c **** }
 936              		.loc 1 835 1 view .LVU235
 937 0014 03B0     		add	sp, sp, #12
 938              	.LCFI56:
 939              		.cfi_remember_state
 940              		.cfi_def_cfa_offset 4
 941              		@ sp needed
 942 0016 5DF804FB 		ldr	pc, [sp], #4
 943              	.LVL68:
 944              	.L107:
 945              	.LCFI57:
 946              		.cfi_restore_state
 833:rtos/uC-FS/Source/fs_api.c ****     rtn    = (is_err == DEF_YES) ? (int)FS_STDIO_ERR : (int)0;
 947              		.loc 1 833 54 view .LVU236
 948 001a 4FF0FF30 		mov	r0, #-1
 949              	.LVL69:
 833:rtos/uC-FS/Source/fs_api.c ****     rtn    = (is_err == DEF_YES) ? (int)FS_STDIO_ERR : (int)0;
 950              		.loc 1 833 54 view .LVU237
 951 001e F9E7     		b	.L99
 952              	.LVL70:
 953              	.L101:
 954              	.LCFI58:
 955              		.cfi_def_cfa_offset 0
 956              		.cfi_restore 14
 828:rtos/uC-FS/Source/fs_api.c ****     }
 957              		.loc 1 828 16 view .LVU238
 958 0020 0320     		movs	r0, #3
 959              	.LVL71:
 960              		.loc 1 835 1 view .LVU239
 961 0022 7047     		bx	lr
 962              		.cfi_endproc
 963              	.LFE11:
ARM GAS  /tmp/ccYe7so7.s 			page 33


 965              		.section	.text.fs_fflush,"ax",%progbits
 966              		.align	1
 967              		.global	fs_fflush
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu fpv4-sp-d16
 973              	fs_fflush:
 974              	.LVL72:
 975              	.LFB12:
 836:rtos/uC-FS/Source/fs_api.c **** 
 837:rtos/uC-FS/Source/fs_api.c **** 
 838:rtos/uC-FS/Source/fs_api.c **** /*
 839:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 840:rtos/uC-FS/Source/fs_api.c **** *                                             fs_fflush()
 841:rtos/uC-FS/Source/fs_api.c **** *
 842:rtos/uC-FS/Source/fs_api.c **** * Description : Flush buffer contents to file.
 843:rtos/uC-FS/Source/fs_api.c **** *
 844:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
 845:rtos/uC-FS/Source/fs_api.c **** *
 846:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : 0,      if flushing succeeds.
 847:rtos/uC-FS/Source/fs_api.c **** *               FS_EOF, otherwise.
 848:rtos/uC-FS/Source/fs_api.c **** *
 849:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'fflush() : DESCRIPTION' states that :
 850:rtos/uC-FS/Source/fs_api.c **** *
 851:rtos/uC-FS/Source/fs_api.c **** *                   (a) "If 'stream' points to an output stream or an update stream in which the mo
 852:rtos/uC-FS/Source/fs_api.c **** *                        recent operation was not input, 'fflush()' shall cause any unwritten data 
 853:rtos/uC-FS/Source/fs_api.c **** *                        that stream to be written to the file."
 854:rtos/uC-FS/Source/fs_api.c **** *
 855:rtos/uC-FS/Source/fs_api.c **** *                   (b) "If 'stream' is a null pointer, the 'fflush' function performs this flushin
 856:rtos/uC-FS/Source/fs_api.c **** *                        action on all streams ...."  #### Currently unimplemented.
 857:rtos/uC-FS/Source/fs_api.c **** *
 858:rtos/uC-FS/Source/fs_api.c **** *                   (c) "Upon successful completion, fflush() shall return 0; otherwise, it shall s
 859:rtos/uC-FS/Source/fs_api.c **** *                        error indicator for the stream, return EOF."
 860:rtos/uC-FS/Source/fs_api.c **** *
 861:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'fflush()' defines no behavior for an in
 862:rtos/uC-FS/Source/fs_api.c **** *                   stream or update stream in which the most recent operation was input.
 863:rtos/uC-FS/Source/fs_api.c **** *
 864:rtos/uC-FS/Source/fs_api.c **** *                   (a) In this implementation, if the most recent operation is input, 'fs_fflush()
 865:rtos/uC-FS/Source/fs_api.c **** *                       clears all buffered input data.
 866:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 867:rtos/uC-FS/Source/fs_api.c **** */
 868:rtos/uC-FS/Source/fs_api.c **** 
 869:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_FILE_BUF_EN == DEF_ENABLED)
 870:rtos/uC-FS/Source/fs_api.c **** int  fs_fflush (FS_FILE  *p_file)
 871:rtos/uC-FS/Source/fs_api.c **** {
 976              		.loc 1 871 1 is_stmt 1 view -0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 8
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 872:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 980              		.loc 1 872 5 view .LVU241
 873:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 981              		.loc 1 873 5 view .LVU242
 874:rtos/uC-FS/Source/fs_api.c **** 
 875:rtos/uC-FS/Source/fs_api.c **** 
 876:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
ARM GAS  /tmp/ccYe7so7.s 			page 34


 877:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 982              		.loc 1 877 5 view .LVU243
 983              		.loc 1 877 8 is_stmt 0 view .LVU244
 984 0000 60B1     		cbz	r0, .L110
 871:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 985              		.loc 1 871 1 view .LVU245
 986 0002 00B5     		push	{lr}
 987              	.LCFI59:
 988              		.cfi_def_cfa_offset 4
 989              		.cfi_offset 14, -4
 990 0004 83B0     		sub	sp, sp, #12
 991              	.LCFI60:
 992              		.cfi_def_cfa_offset 16
 878:rtos/uC-FS/Source/fs_api.c ****         return ((int)FS_EOF);
 879:rtos/uC-FS/Source/fs_api.c ****     }
 880:rtos/uC-FS/Source/fs_api.c **** #endif
 881:rtos/uC-FS/Source/fs_api.c **** 
 882:rtos/uC-FS/Source/fs_api.c ****     FSFile_BufFlush(p_file, &err);
 993              		.loc 1 882 5 is_stmt 1 view .LVU246
 994 0006 0DF10601 		add	r1, sp, #6
 995 000a FFF7FEFF 		bl	FSFile_BufFlush
 996              	.LVL73:
 883:rtos/uC-FS/Source/fs_api.c **** 
 884:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? (int)0 : (int)FS_EOF;
 997              		.loc 1 884 5 view .LVU247
 998              		.loc 1 884 16 is_stmt 0 view .LVU248
 999 000e BDF80630 		ldrh	r3, [sp, #6]
 1000              		.loc 1 884 41 view .LVU249
 1001 0012 33B9     		cbnz	r3, .L111
 1002 0014 0020     		movs	r0, #0
 1003              	.L108:
 885:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 886:rtos/uC-FS/Source/fs_api.c **** }
 1004              		.loc 1 886 1 view .LVU250
 1005 0016 03B0     		add	sp, sp, #12
 1006              	.LCFI61:
 1007              		.cfi_def_cfa_offset 4
 1008              		@ sp needed
 1009 0018 5DF804FB 		ldr	pc, [sp], #4
 1010              	.LVL74:
 1011              	.L110:
 1012              	.LCFI62:
 1013              		.cfi_def_cfa_offset 0
 1014              		.cfi_restore 14
 878:rtos/uC-FS/Source/fs_api.c ****     }
 1015              		.loc 1 878 16 view .LVU251
 1016 001c 4FF0FF30 		mov	r0, #-1
 1017              	.LVL75:
 1018              		.loc 1 886 1 view .LVU252
 1019 0020 7047     		bx	lr
 1020              	.L111:
 1021              	.LCFI63:
 1022              		.cfi_def_cfa_offset 16
 1023              		.cfi_offset 14, -4
 884:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 1024              		.loc 1 884 41 view .LVU253
 1025 0022 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccYe7so7.s 			page 35


 1026 0026 F6E7     		b	.L108
 1027              		.cfi_endproc
 1028              	.LFE12:
 1030              		.section	.text.fs_fgetpos,"ax",%progbits
 1031              		.align	1
 1032              		.global	fs_fgetpos
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1036              		.fpu fpv4-sp-d16
 1038              	fs_fgetpos:
 1039              	.LVL76:
 1040              	.LFB13:
 887:rtos/uC-FS/Source/fs_api.c **** #endif
 888:rtos/uC-FS/Source/fs_api.c **** 
 889:rtos/uC-FS/Source/fs_api.c **** 
 890:rtos/uC-FS/Source/fs_api.c **** /*
 891:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 892:rtos/uC-FS/Source/fs_api.c **** *                                            fs_fgetpos()
 893:rtos/uC-FS/Source/fs_api.c **** *
 894:rtos/uC-FS/Source/fs_api.c **** * Description : Get file position indicator.
 895:rtos/uC-FS/Source/fs_api.c **** *
 896:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
 897:rtos/uC-FS/Source/fs_api.c **** *
 898:rtos/uC-FS/Source/fs_api.c **** *               p_pos      Pointer to variable that will receive the file position indicator.
 899:rtos/uC-FS/Source/fs_api.c **** *
 900:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : 0,              if no error occurs.
 901:rtos/uC-FS/Source/fs_api.c **** *               Non-zero value, otherwise.
 902:rtos/uC-FS/Source/fs_api.c **** *
 903:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) The return value should be tested against 0 :
 904:rtos/uC-FS/Source/fs_api.c **** *
 905:rtos/uC-FS/Source/fs_api.c **** *                       rtn = fs_fgetpos(pfile, &pos);
 906:rtos/uC-FS/Source/fs_api.c **** *                       if (rtn == 0) {
 907:rtos/uC-FS/Source/fs_api.c **** *                           // No error occurred.
 908:rtos/uC-FS/Source/fs_api.c **** *                       } else {
 909:rtos/uC-FS/Source/fs_api.c **** *                           // Handle error.
 910:rtos/uC-FS/Source/fs_api.c **** *                       }
 911:rtos/uC-FS/Source/fs_api.c **** *
 912:rtos/uC-FS/Source/fs_api.c **** *               (2) The value placed in 'pos' should be passed to 'fs_fsetpos()' to reposition the 
 913:rtos/uC-FS/Source/fs_api.c **** *                   to its position at the time when this function was called.
 914:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 915:rtos/uC-FS/Source/fs_api.c **** */
 916:rtos/uC-FS/Source/fs_api.c **** 
 917:rtos/uC-FS/Source/fs_api.c **** int  fs_fgetpos (FS_FILE    *p_file,
 918:rtos/uC-FS/Source/fs_api.c ****                  fs_fpos_t  *p_pos)
 919:rtos/uC-FS/Source/fs_api.c **** {
 1041              		.loc 1 919 1 is_stmt 1 view -0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 8
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 920:rtos/uC-FS/Source/fs_api.c ****     FS_FILE_SIZE  pos_fs;
 1045              		.loc 1 920 5 view .LVU255
 921:rtos/uC-FS/Source/fs_api.c ****     FS_ERR        err;
 1046              		.loc 1 921 5 view .LVU256
 922:rtos/uC-FS/Source/fs_api.c **** 
 923:rtos/uC-FS/Source/fs_api.c **** 
 924:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
ARM GAS  /tmp/ccYe7so7.s 			page 36


 925:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 1047              		.loc 1 925 5 view .LVU257
 1048              		.loc 1 925 8 is_stmt 0 view .LVU258
 1049 0000 98B1     		cbz	r0, .L119
 919:rtos/uC-FS/Source/fs_api.c ****     FS_FILE_SIZE  pos_fs;
 1050              		.loc 1 919 1 view .LVU259
 1051 0002 10B5     		push	{r4, lr}
 1052              	.LCFI64:
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 4, -8
 1055              		.cfi_offset 14, -4
 1056 0004 82B0     		sub	sp, sp, #8
 1057              	.LCFI65:
 1058              		.cfi_def_cfa_offset 16
 1059 0006 0C46     		mov	r4, r1
 926:rtos/uC-FS/Source/fs_api.c ****         return ((int)FS_EBADF);
 927:rtos/uC-FS/Source/fs_api.c ****     }
 928:rtos/uC-FS/Source/fs_api.c ****     if (p_pos == (fs_fpos_t *)0) {                              /* Validate pointer to pos         
 1060              		.loc 1 928 5 is_stmt 1 view .LVU260
 1061              		.loc 1 928 8 is_stmt 0 view .LVU261
 1062 0008 89B1     		cbz	r1, .L120
 929:rtos/uC-FS/Source/fs_api.c ****         return ((int)FS_EINVAL);
 930:rtos/uC-FS/Source/fs_api.c ****     }
 931:rtos/uC-FS/Source/fs_api.c **** #endif
 932:rtos/uC-FS/Source/fs_api.c **** 
 933:rtos/uC-FS/Source/fs_api.c **** 
 934:rtos/uC-FS/Source/fs_api.c ****     pos_fs = FSFile_PosGet( p_file,
 1063              		.loc 1 934 5 is_stmt 1 view .LVU262
 1064              		.loc 1 934 14 is_stmt 0 view .LVU263
 1065 000a 0DF10601 		add	r1, sp, #6
 1066              	.LVL77:
 1067              		.loc 1 934 14 view .LVU264
 1068 000e FFF7FEFF 		bl	FSFile_PosGet
 1069              	.LVL78:
 935:rtos/uC-FS/Source/fs_api.c ****                            &err);
 936:rtos/uC-FS/Source/fs_api.c **** 
 937:rtos/uC-FS/Source/fs_api.c ****     if (err != FS_ERR_NONE) {
 1070              		.loc 1 937 5 is_stmt 1 view .LVU265
 1071              		.loc 1 937 13 is_stmt 0 view .LVU266
 1072 0012 BDF80630 		ldrh	r3, [sp, #6]
 1073              		.loc 1 937 8 view .LVU267
 1074 0016 1BB9     		cbnz	r3, .L125
 938:rtos/uC-FS/Source/fs_api.c ****        *p_pos = (fs_fpos_t)0;
 939:rtos/uC-FS/Source/fs_api.c ****         return (FS_STDIO_ERR);
 940:rtos/uC-FS/Source/fs_api.c ****     }
 941:rtos/uC-FS/Source/fs_api.c **** 
 942:rtos/uC-FS/Source/fs_api.c ****    *p_pos = (fs_fpos_t)pos_fs;
 1075              		.loc 1 942 4 is_stmt 1 view .LVU268
 1076              		.loc 1 942 11 is_stmt 0 view .LVU269
 1077 0018 2060     		str	r0, [r4]
 943:rtos/uC-FS/Source/fs_api.c ****     return (0);
 1078              		.loc 1 943 5 is_stmt 1 view .LVU270
 1079              		.loc 1 943 12 is_stmt 0 view .LVU271
 1080 001a 0020     		movs	r0, #0
 1081              	.LVL79:
 1082              	.L116:
 944:rtos/uC-FS/Source/fs_api.c **** }
ARM GAS  /tmp/ccYe7so7.s 			page 37


 1083              		.loc 1 944 1 view .LVU272
 1084 001c 02B0     		add	sp, sp, #8
 1085              	.LCFI66:
 1086              		.cfi_remember_state
 1087              		.cfi_def_cfa_offset 8
 1088              		@ sp needed
 1089 001e 10BD     		pop	{r4, pc}
 1090              	.LVL80:
 1091              	.L125:
 1092              	.LCFI67:
 1093              		.cfi_restore_state
 938:rtos/uC-FS/Source/fs_api.c ****        *p_pos = (fs_fpos_t)0;
 1094              		.loc 1 938 8 is_stmt 1 view .LVU273
 938:rtos/uC-FS/Source/fs_api.c ****        *p_pos = (fs_fpos_t)0;
 1095              		.loc 1 938 15 is_stmt 0 view .LVU274
 1096 0020 0023     		movs	r3, #0
 1097 0022 2360     		str	r3, [r4]
 939:rtos/uC-FS/Source/fs_api.c ****     }
 1098              		.loc 1 939 9 is_stmt 1 view .LVU275
 939:rtos/uC-FS/Source/fs_api.c ****     }
 1099              		.loc 1 939 16 is_stmt 0 view .LVU276
 1100 0024 4FF0FF30 		mov	r0, #-1
 1101              	.LVL81:
 939:rtos/uC-FS/Source/fs_api.c ****     }
 1102              		.loc 1 939 16 view .LVU277
 1103 0028 F8E7     		b	.L116
 1104              	.LVL82:
 1105              	.L119:
 1106              	.LCFI68:
 1107              		.cfi_def_cfa_offset 0
 1108              		.cfi_restore 4
 1109              		.cfi_restore 14
 926:rtos/uC-FS/Source/fs_api.c ****     }
 1110              		.loc 1 926 16 view .LVU278
 1111 002a 0320     		movs	r0, #3
 1112              	.LVL83:
 1113              		.loc 1 944 1 view .LVU279
 1114 002c 7047     		bx	lr
 1115              	.LVL84:
 1116              	.L120:
 1117              	.LCFI69:
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 4, -8
 1120              		.cfi_offset 14, -4
 929:rtos/uC-FS/Source/fs_api.c ****     }
 1121              		.loc 1 929 16 view .LVU280
 1122 002e 0720     		movs	r0, #7
 1123              	.LVL85:
 929:rtos/uC-FS/Source/fs_api.c ****     }
 1124              		.loc 1 929 16 view .LVU281
 1125 0030 F4E7     		b	.L116
 1126              		.cfi_endproc
 1127              	.LFE13:
 1129              		.section	.text.fs_fopen,"ax",%progbits
 1130              		.align	1
 1131              		.global	fs_fopen
 1132              		.syntax unified
ARM GAS  /tmp/ccYe7so7.s 			page 38


 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu fpv4-sp-d16
 1137              	fs_fopen:
 1138              	.LVL86:
 1139              	.LFB14:
 945:rtos/uC-FS/Source/fs_api.c **** 
 946:rtos/uC-FS/Source/fs_api.c **** 
 947:rtos/uC-FS/Source/fs_api.c **** /*
 948:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 949:rtos/uC-FS/Source/fs_api.c **** *                                           fs_flockfile()
 950:rtos/uC-FS/Source/fs_api.c **** *
 951:rtos/uC-FS/Source/fs_api.c **** * Description : Acquire task ownership of a file.
 952:rtos/uC-FS/Source/fs_api.c **** *
 953:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
 954:rtos/uC-FS/Source/fs_api.c **** *
 955:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : none.
 956:rtos/uC-FS/Source/fs_api.c **** *
 957:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'flockfile(), ftrylockfile(), funlockfil
 958:rtos/uC-FS/Source/fs_api.c **** *                   DESCRIPTION' states that :
 959:rtos/uC-FS/Source/fs_api.c **** *
 960:rtos/uC-FS/Source/fs_api.c **** *                   (a) "The 'flockfile()' function shall acquire thread ownership of a (FILE *) ob
 961:rtos/uC-FS/Source/fs_api.c **** *
 962:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The functions shall behave as if there is a lock count associated with eac
 963:rtos/uC-FS/Source/fs_api.c **** *                        (FILE *) object."
 964:rtos/uC-FS/Source/fs_api.c **** *
 965:rtos/uC-FS/Source/fs_api.c **** *                       (1) "The (FILE *) object is unlocked when the count is zero."
 966:rtos/uC-FS/Source/fs_api.c **** *
 967:rtos/uC-FS/Source/fs_api.c **** *                       (2) "When the count is positive, a single thread owns the (FILE *) object."
 968:rtos/uC-FS/Source/fs_api.c **** *
 969:rtos/uC-FS/Source/fs_api.c **** *                       (3) "When the 'flockfile()' function is called, if the count is zero or if 
 970:rtos/uC-FS/Source/fs_api.c **** *                            count is positive and the caller owns the (FILE *), the count shall be
 971:rtos/uC-FS/Source/fs_api.c **** *                            incremented.  Otherwise, the calling thread shall be suspended, waitin
 972:rtos/uC-FS/Source/fs_api.c **** *                            the count to return to zero."
 973:rtos/uC-FS/Source/fs_api.c **** *
 974:rtos/uC-FS/Source/fs_api.c **** *                       (4) "Each call to 'funlockfile()' shall decrement the count."
 975:rtos/uC-FS/Source/fs_api.c **** *
 976:rtos/uC-FS/Source/fs_api.c **** *                       (5) "This allows matching calls to 'flockfile()' (or successful calls to 'f
 977:rtos/uC-FS/Source/fs_api.c **** *                            and 'funlockfile()' to be nested."
 978:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
 979:rtos/uC-FS/Source/fs_api.c **** */
 980:rtos/uC-FS/Source/fs_api.c **** 
 981:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_FILE_LOCK_EN == DEF_ENABLED)
 982:rtos/uC-FS/Source/fs_api.c **** void  fs_flockfile (FS_FILE  *p_file)
 983:rtos/uC-FS/Source/fs_api.c **** {
 984:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 985:rtos/uC-FS/Source/fs_api.c **** 
 986:rtos/uC-FS/Source/fs_api.c **** 
 987:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 988:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 989:rtos/uC-FS/Source/fs_api.c ****         return;
 990:rtos/uC-FS/Source/fs_api.c ****     }
 991:rtos/uC-FS/Source/fs_api.c **** #endif
 992:rtos/uC-FS/Source/fs_api.c **** 
 993:rtos/uC-FS/Source/fs_api.c ****     FSFile_LockGet(p_file, &err);
 994:rtos/uC-FS/Source/fs_api.c **** }
 995:rtos/uC-FS/Source/fs_api.c **** #endif
ARM GAS  /tmp/ccYe7so7.s 			page 39


 996:rtos/uC-FS/Source/fs_api.c **** 
 997:rtos/uC-FS/Source/fs_api.c **** 
 998:rtos/uC-FS/Source/fs_api.c **** /*
 999:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1000:rtos/uC-FS/Source/fs_api.c **** *                                             fs_fopen()
1001:rtos/uC-FS/Source/fs_api.c **** *
1002:rtos/uC-FS/Source/fs_api.c **** * Description : Open a file.
1003:rtos/uC-FS/Source/fs_api.c **** *
1004:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : name_full   Name of the file.
1005:rtos/uC-FS/Source/fs_api.c **** *
1006:rtos/uC-FS/Source/fs_api.c **** *               str_mode    Access mode of the file (see Note #1a).
1007:rtos/uC-FS/Source/fs_api.c **** *
1008:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : Pointer to a file, if NO errors.
1009:rtos/uC-FS/Source/fs_api.c **** *               Pointer to NULL,   otherwise.
1010:rtos/uC-FS/Source/fs_api.c **** *
1011:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'fopen() : DESCRIPTION' states that :
1012:rtos/uC-FS/Source/fs_api.c **** *
1013:rtos/uC-FS/Source/fs_api.c **** *                   (a) "If ['str_mode'] is one of the following, the file is open in the indicated
1014:rtos/uC-FS/Source/fs_api.c **** *
1015:rtos/uC-FS/Source/fs_api.c **** *                           "r or rb           Open file for reading."
1016:rtos/uC-FS/Source/fs_api.c **** *                           "w or wb           Truncate to zero length or create file for writing."
1017:rtos/uC-FS/Source/fs_api.c **** *                           "a or ab           Append; open and create file for writing at end-of-f
1018:rtos/uC-FS/Source/fs_api.c **** *                           "r+ or rb+ or r+b  Open file for update (reading and writing)."
1019:rtos/uC-FS/Source/fs_api.c **** *                           "w+ or wb+ or w+b  Truncate to zero length or create file for update."
1020:rtos/uC-FS/Source/fs_api.c **** *                           "a+ or ab+ or a+b  Append; open or create for update, writing at end-of
1021:rtos/uC-FS/Source/fs_api.c **** *
1022:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The character 'b' shall have no effect"
1023:rtos/uC-FS/Source/fs_api.c **** *
1024:rtos/uC-FS/Source/fs_api.c **** *                   (c) "Opening a file with read mode ... shall fail if the file does not exist or
1025:rtos/uC-FS/Source/fs_api.c **** *                        cannot be read"
1026:rtos/uC-FS/Source/fs_api.c **** *
1027:rtos/uC-FS/Source/fs_api.c **** *                   (d) "Opening a file with append mode ... shall cause all subsequent writes to t
1028:rtos/uC-FS/Source/fs_api.c **** *                        file to be forced to the then current end-of-file"
1029:rtos/uC-FS/Source/fs_api.c **** *
1030:rtos/uC-FS/Source/fs_api.c **** *                   (e) "When a file is opened with update mode ... both input and output may be pe
1031:rtos/uC-FS/Source/fs_api.c **** *                        However, the application shall ensure that output is not directly followed
1032:rtos/uC-FS/Source/fs_api.c **** *                        input without an intervening call to 'fflush()' or to a file positioning f
1033:rtos/uC-FS/Source/fs_api.c **** *                      ('fseek()', 'fsetpos()', or 'rewind()'), and input is not directly followed 
1034:rtos/uC-FS/Source/fs_api.c **** *                        without an intervening call to a file positioning function, unless the inp
1035:rtos/uC-FS/Source/fs_api.c **** *                        operation encounters end-of-file."
1036:rtos/uC-FS/Source/fs_api.c **** *
1037:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'fopen() : RETURN VALUE' states that "[u
1038:rtos/uC-FS/Source/fs_api.c **** *                   successful completion 'fopen()' shall return a pointer to the object controllin
1039:rtos/uC-FS/Source/fs_api.c **** *                   stream.  Otherwise a null pointer shall be returned'.
1040:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1041:rtos/uC-FS/Source/fs_api.c **** */
1042:rtos/uC-FS/Source/fs_api.c **** 
1043:rtos/uC-FS/Source/fs_api.c **** FS_FILE  *fs_fopen (const  char  *name_full,
1044:rtos/uC-FS/Source/fs_api.c ****                     const  char  *str_mode)
1045:rtos/uC-FS/Source/fs_api.c **** {
 1140              		.loc 1 1045 1 is_stmt 1 view -0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 8
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 1144              		.loc 1 1045 1 is_stmt 0 view .LVU283
 1145 0000 30B5     		push	{r4, r5, lr}
 1146              	.LCFI70:
ARM GAS  /tmp/ccYe7so7.s 			page 40


 1147              		.cfi_def_cfa_offset 12
 1148              		.cfi_offset 4, -12
 1149              		.cfi_offset 5, -8
 1150              		.cfi_offset 14, -4
 1151 0002 83B0     		sub	sp, sp, #12
 1152              	.LCFI71:
 1153              		.cfi_def_cfa_offset 24
1046:rtos/uC-FS/Source/fs_api.c ****     FS_ERR     err;
 1154              		.loc 1 1046 5 is_stmt 1 view .LVU284
1047:rtos/uC-FS/Source/fs_api.c ****     FS_FLAGS   mode_flags;
 1155              		.loc 1 1047 5 view .LVU285
1048:rtos/uC-FS/Source/fs_api.c ****     FS_FILE   *p_file;
 1156              		.loc 1 1048 5 view .LVU286
1049:rtos/uC-FS/Source/fs_api.c ****     CPU_SIZE_T len;
 1157              		.loc 1 1049 5 view .LVU287
1050:rtos/uC-FS/Source/fs_api.c **** 
1051:rtos/uC-FS/Source/fs_api.c **** 
1052:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1053:rtos/uC-FS/Source/fs_api.c ****     if (name_full == (const char *)0) {                         /* Validate pointer to name        
 1158              		.loc 1 1053 5 view .LVU288
 1159              		.loc 1 1053 8 is_stmt 0 view .LVU289
 1160 0004 0546     		mov	r5, r0
 1161 0006 98B1     		cbz	r0, .L126
 1162 0008 0C46     		mov	r4, r1
1054:rtos/uC-FS/Source/fs_api.c ****         return ((FS_FILE *)0);                                  /* ... rtn NULL.                   
1055:rtos/uC-FS/Source/fs_api.c ****     }
1056:rtos/uC-FS/Source/fs_api.c ****     if (str_mode == (const char *)0) {                          /* Validate pointer to mode        
 1163              		.loc 1 1056 5 is_stmt 1 view .LVU290
 1164              		.loc 1 1056 8 is_stmt 0 view .LVU291
 1165 000a 99B1     		cbz	r1, .L129
1057:rtos/uC-FS/Source/fs_api.c ****         return ((FS_FILE *)0);                                  /* ... rtn NULL.                   
1058:rtos/uC-FS/Source/fs_api.c ****     }
1059:rtos/uC-FS/Source/fs_api.c **** #endif
1060:rtos/uC-FS/Source/fs_api.c **** 
1061:rtos/uC-FS/Source/fs_api.c ****     len = Str_Len_N((char *)str_mode, 4u);
 1166              		.loc 1 1061 5 is_stmt 1 view .LVU292
 1167              		.loc 1 1061 11 is_stmt 0 view .LVU293
 1168 000c 0421     		movs	r1, #4
 1169              	.LVL87:
 1170              		.loc 1 1061 11 view .LVU294
 1171 000e 2046     		mov	r0, r4
 1172              	.LVL88:
 1173              		.loc 1 1061 11 view .LVU295
 1174 0010 FFF7FEFF 		bl	Str_Len_N
 1175              	.LVL89:
 1176 0014 0146     		mov	r1, r0
 1177              	.LVL90:
1062:rtos/uC-FS/Source/fs_api.c **** 
1063:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1064:rtos/uC-FS/Source/fs_api.c ****     if (len > 3u) {                                             /* Validate length of mode         
 1178              		.loc 1 1064 5 is_stmt 1 view .LVU296
 1179              		.loc 1 1064 8 is_stmt 0 view .LVU297
 1180 0016 0328     		cmp	r0, #3
 1181 0018 0ED8     		bhi	.L130
1065:rtos/uC-FS/Source/fs_api.c ****         return ((FS_FILE *)0);                                  /* ... rtn NULL.                   
1066:rtos/uC-FS/Source/fs_api.c ****     }
1067:rtos/uC-FS/Source/fs_api.c ****     if (len < 1u) {                                             /* Validate length of mode         
ARM GAS  /tmp/ccYe7so7.s 			page 41


 1182              		.loc 1 1067 5 is_stmt 1 view .LVU298
 1183              		.loc 1 1067 8 is_stmt 0 view .LVU299
 1184 001a 78B1     		cbz	r0, .L131
1068:rtos/uC-FS/Source/fs_api.c ****         return ((FS_FILE *)0);                                  /* ... rtn NULL.                   
1069:rtos/uC-FS/Source/fs_api.c ****     }
1070:rtos/uC-FS/Source/fs_api.c **** #endif
1071:rtos/uC-FS/Source/fs_api.c **** 
1072:rtos/uC-FS/Source/fs_api.c ****     mode_flags = FSFile_ModeParse((CPU_CHAR *)str_mode, len);
 1185              		.loc 1 1072 5 is_stmt 1 view .LVU300
 1186              		.loc 1 1072 18 is_stmt 0 view .LVU301
 1187 001c 2046     		mov	r0, r4
 1188              	.LVL91:
 1189              		.loc 1 1072 18 view .LVU302
 1190 001e FFF7FEFF 		bl	FSFile_ModeParse
 1191              	.LVL92:
1073:rtos/uC-FS/Source/fs_api.c **** 
1074:rtos/uC-FS/Source/fs_api.c ****     if (mode_flags == FS_FILE_ACCESS_MODE_NONE) {               /* If mode flags invalid ...       
 1192              		.loc 1 1074 5 is_stmt 1 view .LVU303
 1193              		.loc 1 1074 8 is_stmt 0 view .LVU304
 1194 0022 0146     		mov	r1, r0
 1195 0024 60B1     		cbz	r0, .L132
1075:rtos/uC-FS/Source/fs_api.c ****         return ((FS_FILE *)0);                                  /* ... rtn NULL.                   
1076:rtos/uC-FS/Source/fs_api.c ****     }
1077:rtos/uC-FS/Source/fs_api.c **** 
1078:rtos/uC-FS/Source/fs_api.c ****     p_file = FSFile_Open((CPU_CHAR *) name_full,
 1196              		.loc 1 1078 5 is_stmt 1 view .LVU305
 1197              		.loc 1 1078 14 is_stmt 0 view .LVU306
 1198 0026 0DF10602 		add	r2, sp, #6
 1199 002a 2846     		mov	r0, r5
 1200              	.LVL93:
 1201              		.loc 1 1078 14 view .LVU307
 1202 002c FFF7FEFF 		bl	FSFile_Open
 1203              	.LVL94:
1079:rtos/uC-FS/Source/fs_api.c ****                                       mode_flags,
1080:rtos/uC-FS/Source/fs_api.c ****                                      &err);
1081:rtos/uC-FS/Source/fs_api.c **** 
1082:rtos/uC-FS/Source/fs_api.c ****     return (p_file);
 1204              		.loc 1 1082 5 is_stmt 1 view .LVU308
 1205              	.L126:
1083:rtos/uC-FS/Source/fs_api.c **** }
 1206              		.loc 1 1083 1 is_stmt 0 view .LVU309
 1207 0030 03B0     		add	sp, sp, #12
 1208              	.LCFI72:
 1209              		.cfi_remember_state
 1210              		.cfi_def_cfa_offset 12
 1211              		@ sp needed
 1212 0032 30BD     		pop	{r4, r5, pc}
 1213              	.LVL95:
 1214              	.L129:
 1215              	.LCFI73:
 1216              		.cfi_restore_state
1057:rtos/uC-FS/Source/fs_api.c ****     }
 1217              		.loc 1 1057 16 view .LVU310
 1218 0034 0846     		mov	r0, r1
 1219              	.LVL96:
1057:rtos/uC-FS/Source/fs_api.c ****     }
 1220              		.loc 1 1057 16 view .LVU311
ARM GAS  /tmp/ccYe7so7.s 			page 42


 1221 0036 FBE7     		b	.L126
 1222              	.LVL97:
 1223              	.L130:
1065:rtos/uC-FS/Source/fs_api.c ****     }
 1224              		.loc 1 1065 16 view .LVU312
 1225 0038 0020     		movs	r0, #0
 1226              	.LVL98:
1065:rtos/uC-FS/Source/fs_api.c ****     }
 1227              		.loc 1 1065 16 view .LVU313
 1228 003a F9E7     		b	.L126
 1229              	.LVL99:
 1230              	.L131:
1068:rtos/uC-FS/Source/fs_api.c ****     }
 1231              		.loc 1 1068 16 view .LVU314
 1232 003c 0020     		movs	r0, #0
 1233              	.LVL100:
1068:rtos/uC-FS/Source/fs_api.c ****     }
 1234              		.loc 1 1068 16 view .LVU315
 1235 003e F7E7     		b	.L126
 1236              	.LVL101:
 1237              	.L132:
1075:rtos/uC-FS/Source/fs_api.c ****     }
 1238              		.loc 1 1075 16 view .LVU316
 1239 0040 0020     		movs	r0, #0
 1240              	.LVL102:
1075:rtos/uC-FS/Source/fs_api.c ****     }
 1241              		.loc 1 1075 16 view .LVU317
 1242 0042 F5E7     		b	.L126
 1243              		.cfi_endproc
 1244              	.LFE14:
 1246              		.section	.text.fs_fread,"ax",%progbits
 1247              		.align	1
 1248              		.global	fs_fread
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu fpv4-sp-d16
 1254              	fs_fread:
 1255              	.LVL103:
 1256              	.LFB15:
1084:rtos/uC-FS/Source/fs_api.c **** 
1085:rtos/uC-FS/Source/fs_api.c **** 
1086:rtos/uC-FS/Source/fs_api.c **** /*
1087:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1088:rtos/uC-FS/Source/fs_api.c **** *                                             fs_fread()
1089:rtos/uC-FS/Source/fs_api.c **** *
1090:rtos/uC-FS/Source/fs_api.c **** * Description : Read from a file.
1091:rtos/uC-FS/Source/fs_api.c **** *
1092:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_dest       Pointer to destination buffer.
1093:rtos/uC-FS/Source/fs_api.c **** *
1094:rtos/uC-FS/Source/fs_api.c **** *               size        Size of each item to read.
1095:rtos/uC-FS/Source/fs_api.c **** *
1096:rtos/uC-FS/Source/fs_api.c **** *               nitems      Number of items to read.
1097:rtos/uC-FS/Source/fs_api.c **** *
1098:rtos/uC-FS/Source/fs_api.c **** *               p_file      Pointer to a file.
1099:rtos/uC-FS/Source/fs_api.c **** *
1100:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : Number of items read.
ARM GAS  /tmp/ccYe7so7.s 			page 43


1101:rtos/uC-FS/Source/fs_api.c **** *
1102:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'fread() : DESCRIPTION' states that :
1103:rtos/uC-FS/Source/fs_api.c **** *
1104:rtos/uC-FS/Source/fs_api.c **** *                   (a) "The 'fread()' function shall read into the array pointed to by 'ptr' up to
1105:rtos/uC-FS/Source/fs_api.c **** *                        elements whose size is specified by 'size' in bytes"
1106:rtos/uC-FS/Source/fs_api.c **** *
1107:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The file position indicator for the stream ... shall be advanced by the nu
1108:rtos/uC-FS/Source/fs_api.c **** *                        bytes successfully read"
1109:rtos/uC-FS/Source/fs_api.c **** *
1110:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'fread() : RETURN VALUE' states that "[u
1111:rtos/uC-FS/Source/fs_api.c **** *                   completion, 'fread()' shall return the number of elements which is less than 'n
1112:rtos/uC-FS/Source/fs_api.c **** *                   only if a read error or end-of-file is encountered".
1113:rtos/uC-FS/Source/fs_api.c **** *
1114:rtos/uC-FS/Source/fs_api.c **** *               (3) See 'fs_fopen()  Note #1e'.
1115:rtos/uC-FS/Source/fs_api.c **** *
1116:rtos/uC-FS/Source/fs_api.c **** *               (4) The file MUST have been opened in read or update (read/write) mode.
1117:rtos/uC-FS/Source/fs_api.c **** *
1118:rtos/uC-FS/Source/fs_api.c **** *               (5) If an error occurs while reading from the file, a value less than 'nitems' will
1119:rtos/uC-FS/Source/fs_api.c **** *                   be returned.  To determine whether the premature return was caused by reaching 
1120:rtos/uC-FS/Source/fs_api.c **** *                   end-of-file, the 'fs_feof()' function should be used :
1121:rtos/uC-FS/Source/fs_api.c **** *
1122:rtos/uC-FS/Source/fs_api.c **** *                       rtn = fs_fread(pbuf, 1, 1000, pfile);
1123:rtos/uC-FS/Source/fs_api.c **** *                       if (rtn < 1000) {
1124:rtos/uC-FS/Source/fs_api.c **** *                           eof = fs_feof();
1125:rtos/uC-FS/Source/fs_api.c **** *                           if (eof != 0) {
1126:rtos/uC-FS/Source/fs_api.c **** *                               // File has reached EOF
1127:rtos/uC-FS/Source/fs_api.c **** *                           } else {
1128:rtos/uC-FS/Source/fs_api.c **** *                               // Error has occurred
1129:rtos/uC-FS/Source/fs_api.c **** *                           }
1130:rtos/uC-FS/Source/fs_api.c **** *                       }
1131:rtos/uC-FS/Source/fs_api.c **** *
1132:rtos/uC-FS/Source/fs_api.c **** *               (6) #### Check for multiplication overflow.
1133:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1134:rtos/uC-FS/Source/fs_api.c **** */
1135:rtos/uC-FS/Source/fs_api.c **** 
1136:rtos/uC-FS/Source/fs_api.c **** fs_size_t  fs_fread (void       *p_dest,
1137:rtos/uC-FS/Source/fs_api.c ****                      fs_size_t   size,
1138:rtos/uC-FS/Source/fs_api.c ****                      fs_size_t   nitems,
1139:rtos/uC-FS/Source/fs_api.c ****                      FS_FILE    *p_file)
1140:rtos/uC-FS/Source/fs_api.c **** {
 1257              		.loc 1 1140 1 is_stmt 1 view -0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 8
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
1141:rtos/uC-FS/Source/fs_api.c ****     CPU_SIZE_T  size_tot;
 1261              		.loc 1 1141 5 view .LVU319
1142:rtos/uC-FS/Source/fs_api.c ****     CPU_SIZE_T  size_rd;
 1262              		.loc 1 1142 5 view .LVU320
1143:rtos/uC-FS/Source/fs_api.c ****     fs_size_t   size_rd_items;
 1263              		.loc 1 1143 5 view .LVU321
1144:rtos/uC-FS/Source/fs_api.c ****     FS_ERR      err;
 1264              		.loc 1 1144 5 view .LVU322
1145:rtos/uC-FS/Source/fs_api.c **** 
1146:rtos/uC-FS/Source/fs_api.c **** 
1147:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1148:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 1265              		.loc 1 1148 5 view .LVU323
ARM GAS  /tmp/ccYe7so7.s 			page 44


 1266              		.loc 1 1148 8 is_stmt 0 view .LVU324
 1267 0000 A3B1     		cbz	r3, .L136
1140:rtos/uC-FS/Source/fs_api.c ****     CPU_SIZE_T  size_tot;
 1268              		.loc 1 1140 1 view .LVU325
 1269 0002 70B5     		push	{r4, r5, r6, lr}
 1270              	.LCFI74:
 1271              		.cfi_def_cfa_offset 16
 1272              		.cfi_offset 4, -16
 1273              		.cfi_offset 5, -12
 1274              		.cfi_offset 6, -8
 1275              		.cfi_offset 14, -4
 1276 0004 82B0     		sub	sp, sp, #8
 1277              	.LCFI75:
 1278              		.cfi_def_cfa_offset 24
 1279 0006 0446     		mov	r4, r0
 1280 0008 0D46     		mov	r5, r1
 1281 000a 1E46     		mov	r6, r3
1149:rtos/uC-FS/Source/fs_api.c ****         return ((fs_size_t)0u);
1150:rtos/uC-FS/Source/fs_api.c ****     }
1151:rtos/uC-FS/Source/fs_api.c ****     if (p_dest == (void *)0) {                                  /* Validate pointer to destination 
 1282              		.loc 1 1151 5 is_stmt 1 view .LVU326
 1283              		.loc 1 1151 8 is_stmt 0 view .LVU327
 1284 000c 80B1     		cbz	r0, .L137
1152:rtos/uC-FS/Source/fs_api.c ****         return ((fs_size_t)0u);
1153:rtos/uC-FS/Source/fs_api.c ****     }
1154:rtos/uC-FS/Source/fs_api.c **** #endif
1155:rtos/uC-FS/Source/fs_api.c **** 
1156:rtos/uC-FS/Source/fs_api.c ****     size_tot      = (CPU_SIZE_T)size * (CPU_SIZE_T)nitems;      /* See Note #6.                    
 1285              		.loc 1 1156 5 is_stmt 1 view .LVU328
 1286              		.loc 1 1156 19 is_stmt 0 view .LVU329
 1287 000e 02FB01F0 		mul	r0, r2, r1
 1288              	.LVL104:
1157:rtos/uC-FS/Source/fs_api.c ****     if (size_tot == 0u) {
 1289              		.loc 1 1157 5 is_stmt 1 view .LVU330
 1290              		.loc 1 1157 8 is_stmt 0 view .LVU331
 1291 0012 08B9     		cbnz	r0, .L142
 1292              	.LVL105:
 1293              	.L134:
1158:rtos/uC-FS/Source/fs_api.c ****         return ((fs_size_t)0u);
1159:rtos/uC-FS/Source/fs_api.c ****     }
1160:rtos/uC-FS/Source/fs_api.c **** 
1161:rtos/uC-FS/Source/fs_api.c ****     size_rd       = FSFile_Rd(             p_file,
1162:rtos/uC-FS/Source/fs_api.c ****                                            p_dest,
1163:rtos/uC-FS/Source/fs_api.c ****                               (CPU_SIZE_T) size_tot,
1164:rtos/uC-FS/Source/fs_api.c ****                                           &err);
1165:rtos/uC-FS/Source/fs_api.c **** 
1166:rtos/uC-FS/Source/fs_api.c ****     size_rd_items = (fs_size_t)size_rd / size;
1167:rtos/uC-FS/Source/fs_api.c **** 
1168:rtos/uC-FS/Source/fs_api.c ****     return (size_rd_items);
1169:rtos/uC-FS/Source/fs_api.c **** }
 1294              		.loc 1 1169 1 view .LVU332
 1295 0014 02B0     		add	sp, sp, #8
 1296              	.LCFI76:
 1297              		.cfi_remember_state
 1298              		.cfi_def_cfa_offset 16
 1299              		@ sp needed
 1300 0016 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccYe7so7.s 			page 45


 1301              	.LVL106:
 1302              	.L142:
 1303              	.LCFI77:
 1304              		.cfi_restore_state
1161:rtos/uC-FS/Source/fs_api.c ****                                            p_dest,
 1305              		.loc 1 1161 5 is_stmt 1 view .LVU333
1161:rtos/uC-FS/Source/fs_api.c ****                                            p_dest,
 1306              		.loc 1 1161 21 is_stmt 0 view .LVU334
 1307 0018 0DF10603 		add	r3, sp, #6
 1308              	.LVL107:
1161:rtos/uC-FS/Source/fs_api.c ****                                            p_dest,
 1309              		.loc 1 1161 21 view .LVU335
 1310 001c 0246     		mov	r2, r0
 1311              	.LVL108:
1161:rtos/uC-FS/Source/fs_api.c ****                                            p_dest,
 1312              		.loc 1 1161 21 view .LVU336
 1313 001e 2146     		mov	r1, r4
 1314              	.LVL109:
1161:rtos/uC-FS/Source/fs_api.c ****                                            p_dest,
 1315              		.loc 1 1161 21 view .LVU337
 1316 0020 3046     		mov	r0, r6
 1317              	.LVL110:
1161:rtos/uC-FS/Source/fs_api.c ****                                            p_dest,
 1318              		.loc 1 1161 21 view .LVU338
 1319 0022 FFF7FEFF 		bl	FSFile_Rd
 1320              	.LVL111:
1166:rtos/uC-FS/Source/fs_api.c **** 
 1321              		.loc 1 1166 5 is_stmt 1 view .LVU339
1166:rtos/uC-FS/Source/fs_api.c **** 
 1322              		.loc 1 1166 19 is_stmt 0 view .LVU340
 1323 0026 B0FBF5F0 		udiv	r0, r0, r5
 1324              	.LVL112:
1168:rtos/uC-FS/Source/fs_api.c **** }
 1325              		.loc 1 1168 5 is_stmt 1 view .LVU341
1168:rtos/uC-FS/Source/fs_api.c **** }
 1326              		.loc 1 1168 12 is_stmt 0 view .LVU342
 1327 002a F3E7     		b	.L134
 1328              	.LVL113:
 1329              	.L136:
 1330              	.LCFI78:
 1331              		.cfi_def_cfa_offset 0
 1332              		.cfi_restore 4
 1333              		.cfi_restore 5
 1334              		.cfi_restore 6
 1335              		.cfi_restore 14
1149:rtos/uC-FS/Source/fs_api.c ****     }
 1336              		.loc 1 1149 16 view .LVU343
 1337 002c 0020     		movs	r0, #0
 1338              	.LVL114:
 1339              		.loc 1 1169 1 view .LVU344
 1340 002e 7047     		bx	lr
 1341              	.LVL115:
 1342              	.L137:
 1343              	.LCFI79:
 1344              		.cfi_def_cfa_offset 24
 1345              		.cfi_offset 4, -16
 1346              		.cfi_offset 5, -12
ARM GAS  /tmp/ccYe7so7.s 			page 46


 1347              		.cfi_offset 6, -8
 1348              		.cfi_offset 14, -4
1152:rtos/uC-FS/Source/fs_api.c ****     }
 1349              		.loc 1 1152 16 view .LVU345
 1350 0030 0020     		movs	r0, #0
 1351              	.LVL116:
1152:rtos/uC-FS/Source/fs_api.c ****     }
 1352              		.loc 1 1152 16 view .LVU346
 1353 0032 EFE7     		b	.L134
 1354              		.cfi_endproc
 1355              	.LFE15:
 1357              		.section	.text.fs_fseek,"ax",%progbits
 1358              		.align	1
 1359              		.global	fs_fseek
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
 1363              		.fpu fpv4-sp-d16
 1365              	fs_fseek:
 1366              	.LVL117:
 1367              	.LFB16:
1170:rtos/uC-FS/Source/fs_api.c **** 
1171:rtos/uC-FS/Source/fs_api.c **** 
1172:rtos/uC-FS/Source/fs_api.c **** /*
1173:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1174:rtos/uC-FS/Source/fs_api.c **** *                                             fs_fseek()
1175:rtos/uC-FS/Source/fs_api.c **** *
1176:rtos/uC-FS/Source/fs_api.c **** * Description : Set file position indicator.
1177:rtos/uC-FS/Source/fs_api.c **** *
1178:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
1179:rtos/uC-FS/Source/fs_api.c **** *
1180:rtos/uC-FS/Source/fs_api.c **** *               offset      Offset from file position specified by 'whence'.
1181:rtos/uC-FS/Source/fs_api.c **** *
1182:rtos/uC-FS/Source/fs_api.c **** *               origin      Reference position for offset :
1183:rtos/uC-FS/Source/fs_api.c **** *
1184:rtos/uC-FS/Source/fs_api.c **** *                               SEEK_SET    Offset is from the beginning of the file.
1185:rtos/uC-FS/Source/fs_api.c **** *                               SEEK_CUR    Offset is from current file position.
1186:rtos/uC-FS/Source/fs_api.c **** *                               SEEK_END    Offset is from the end       of the file.
1187:rtos/uC-FS/Source/fs_api.c **** *
1188:rtos/uC-FS/Source/fs_api.c **** * Return(s)   :  0, if the function succeeds.
1189:rtos/uC-FS/Source/fs_api.c **** *               -1, otherwise.
1190:rtos/uC-FS/Source/fs_api.c **** *
1191:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'fread() : DESCRIPTION' states that :
1192:rtos/uC-FS/Source/fs_api.c **** *
1193:rtos/uC-FS/Source/fs_api.c **** *                   (a) "If a read or write error occurs, the error indicator for the stream shall 
1194:rtos/uC-FS/Source/fs_api.c **** *
1195:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The new position measured in bytes from the beginning of the file, shall b
1196:rtos/uC-FS/Source/fs_api.c **** *                        obtained by adding 'offset' to the position specified by 'whence'. The spe
1197:rtos/uC-FS/Source/fs_api.c **** *                        point is ..."
1198:rtos/uC-FS/Source/fs_api.c **** *
1199:rtos/uC-FS/Source/fs_api.c **** *                       (1) "... the beginning of the file                        for SEEK_SET"
1200:rtos/uC-FS/Source/fs_api.c **** *
1201:rtos/uC-FS/Source/fs_api.c **** *                       (2) "... the current value of the file-position indicator for SEEK_CUR"
1202:rtos/uC-FS/Source/fs_api.c **** *
1203:rtos/uC-FS/Source/fs_api.c **** *                       (3) "... end-of-file                                      for SEEK_END"
1204:rtos/uC-FS/Source/fs_api.c **** *
1205:rtos/uC-FS/Source/fs_api.c **** *                   (c) "A successful call to 'fseek()' shall clear the end-of-file indicator"
ARM GAS  /tmp/ccYe7so7.s 			page 47


1206:rtos/uC-FS/Source/fs_api.c **** *
1207:rtos/uC-FS/Source/fs_api.c **** *                   (d) "The 'fseek()' function shall allow the file-position indicator to be set b
1208:rtos/uC-FS/Source/fs_api.c **** *                        the end of existing data in the file.  If data is later written at this po
1209:rtos/uC-FS/Source/fs_api.c **** *                        subsequent reads of data in the gap shall return bytes with the value 0 un
1210:rtos/uC-FS/Source/fs_api.c **** *                        data is actually written into the gap."
1211:rtos/uC-FS/Source/fs_api.c **** *
1212:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'fread() : RETURN VALUE' states that "[t
1213:rtos/uC-FS/Source/fs_api.c **** *                   'fseek()' and 'fseeko()' functions shall return 0 if they succeeds.  Otherwise,
1214:rtos/uC-FS/Source/fs_api.c **** *                   shall return -1".
1215:rtos/uC-FS/Source/fs_api.c **** *
1216:rtos/uC-FS/Source/fs_api.c **** *               (3) If the file position indicator is set beyond the file's current data, the file 
1217:rtos/uC-FS/Source/fs_api.c **** *                   be opened in write or read/write mode.
1218:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1219:rtos/uC-FS/Source/fs_api.c **** */
1220:rtos/uC-FS/Source/fs_api.c **** 
1221:rtos/uC-FS/Source/fs_api.c **** int  fs_fseek (FS_FILE    *p_file,
1222:rtos/uC-FS/Source/fs_api.c ****                long  int   offset,
1223:rtos/uC-FS/Source/fs_api.c ****                int         origin)
1224:rtos/uC-FS/Source/fs_api.c **** {
 1368              		.loc 1 1224 1 is_stmt 1 view -0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 8
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
1225:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 1372              		.loc 1 1225 5 view .LVU348
1226:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 1373              		.loc 1 1226 5 view .LVU349
1227:rtos/uC-FS/Source/fs_api.c **** 
1228:rtos/uC-FS/Source/fs_api.c **** 
1229:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1230:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 1374              		.loc 1 1230 5 view .LVU350
 1375              		.loc 1 1230 8 is_stmt 0 view .LVU351
 1376 0000 60B1     		cbz	r0, .L145
1224:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 1377              		.loc 1 1224 1 view .LVU352
 1378 0002 10B5     		push	{r4, lr}
 1379              	.LCFI80:
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 4, -8
 1382              		.cfi_offset 14, -4
 1383 0004 82B0     		sub	sp, sp, #8
 1384              	.LCFI81:
 1385              		.cfi_def_cfa_offset 16
1231:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
1232:rtos/uC-FS/Source/fs_api.c ****     }
1233:rtos/uC-FS/Source/fs_api.c **** #endif
1234:rtos/uC-FS/Source/fs_api.c **** 
1235:rtos/uC-FS/Source/fs_api.c ****     FSFile_PosSet(                 p_file,
 1386              		.loc 1 1235 5 is_stmt 1 view .LVU353
 1387 0006 0DF10603 		add	r3, sp, #6
 1388 000a 92B2     		uxth	r2, r2
 1389              	.LVL118:
 1390              		.loc 1 1235 5 is_stmt 0 view .LVU354
 1391 000c FFF7FEFF 		bl	FSFile_PosSet
 1392              	.LVL119:
1236:rtos/uC-FS/Source/fs_api.c ****                   (FS_FILE_OFFSET) offset,
ARM GAS  /tmp/ccYe7so7.s 			page 48


1237:rtos/uC-FS/Source/fs_api.c ****                   (FS_STATE      ) origin,
1238:rtos/uC-FS/Source/fs_api.c ****                                   &err);
1239:rtos/uC-FS/Source/fs_api.c **** 
1240:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? ((int)0) : ((int)-1);
 1393              		.loc 1 1240 5 is_stmt 1 view .LVU355
 1394              		.loc 1 1240 16 is_stmt 0 view .LVU356
 1395 0010 BDF80630 		ldrh	r3, [sp, #6]
 1396              		.loc 1 1240 43 view .LVU357
 1397 0014 2BB9     		cbnz	r3, .L146
 1398 0016 0020     		movs	r0, #0
 1399              	.L143:
1241:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
1242:rtos/uC-FS/Source/fs_api.c **** }
 1400              		.loc 1 1242 1 view .LVU358
 1401 0018 02B0     		add	sp, sp, #8
 1402              	.LCFI82:
 1403              		.cfi_def_cfa_offset 8
 1404              		@ sp needed
 1405 001a 10BD     		pop	{r4, pc}
 1406              	.LVL120:
 1407              	.L145:
 1408              	.LCFI83:
 1409              		.cfi_def_cfa_offset 0
 1410              		.cfi_restore 4
 1411              		.cfi_restore 14
1231:rtos/uC-FS/Source/fs_api.c ****     }
 1412              		.loc 1 1231 16 view .LVU359
 1413 001c 4FF0FF30 		mov	r0, #-1
 1414              	.LVL121:
 1415              		.loc 1 1242 1 view .LVU360
 1416 0020 7047     		bx	lr
 1417              	.LVL122:
 1418              	.L146:
 1419              	.LCFI84:
 1420              		.cfi_def_cfa_offset 16
 1421              		.cfi_offset 4, -8
 1422              		.cfi_offset 14, -4
1240:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 1423              		.loc 1 1240 43 view .LVU361
 1424 0022 4FF0FF30 		mov	r0, #-1
 1425 0026 F7E7     		b	.L143
 1426              		.cfi_endproc
 1427              	.LFE16:
 1429              		.section	.text.fs_fsetpos,"ax",%progbits
 1430              		.align	1
 1431              		.global	fs_fsetpos
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1435              		.fpu fpv4-sp-d16
 1437              	fs_fsetpos:
 1438              	.LVL123:
 1439              	.LFB17:
1243:rtos/uC-FS/Source/fs_api.c **** 
1244:rtos/uC-FS/Source/fs_api.c **** 
1245:rtos/uC-FS/Source/fs_api.c **** /*
1246:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
ARM GAS  /tmp/ccYe7so7.s 			page 49


1247:rtos/uC-FS/Source/fs_api.c **** *                                            fs_fsetpos()
1248:rtos/uC-FS/Source/fs_api.c **** *
1249:rtos/uC-FS/Source/fs_api.c **** * Description : Set file position indicator.
1250:rtos/uC-FS/Source/fs_api.c **** *
1251:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
1252:rtos/uC-FS/Source/fs_api.c **** *
1253:rtos/uC-FS/Source/fs_api.c **** *               p_pos       Pointer to variable holding the file position.
1254:rtos/uC-FS/Source/fs_api.c **** *
1255:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : 0,              if the function succeeds.
1256:rtos/uC-FS/Source/fs_api.c **** *               Non-zero value, otherwise.
1257:rtos/uC-FS/Source/fs_api.c **** *
1258:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) The return value should be tested against 0 :
1259:rtos/uC-FS/Source/fs_api.c **** *
1260:rtos/uC-FS/Source/fs_api.c **** *                       rtn = fs_fsetpos(pfile, &pos);
1261:rtos/uC-FS/Source/fs_api.c **** *                       if (rtn == 0) {
1262:rtos/uC-FS/Source/fs_api.c **** *                           // No error occurred.
1263:rtos/uC-FS/Source/fs_api.c **** *                       } else {
1264:rtos/uC-FS/Source/fs_api.c **** *                           // Handle error.
1265:rtos/uC-FS/Source/fs_api.c **** *                       }
1266:rtos/uC-FS/Source/fs_api.c **** *
1267:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'fsetpos() : DESCRIPTION' states that :
1268:rtos/uC-FS/Source/fs_api.c **** *
1269:rtos/uC-FS/Source/fs_api.c **** *                   (a) "If a read or write error occurs, the error indicator for the stream is set
1270:rtos/uC-FS/Source/fs_api.c **** *
1271:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The 'fsetpos()' function shall set the file position and state indicators 
1272:rtos/uC-FS/Source/fs_api.c **** *                        the stream pointed to by stream according to the value of the object point
1273:rtos/uC-FS/Source/fs_api.c **** *                        by 'pos', which the application shall ensure is a value obtained from an e
1274:rtos/uC-FS/Source/fs_api.c **** *                        call to 'fgetpos()' on the same stream."
1275:rtos/uC-FS/Source/fs_api.c **** *
1276:rtos/uC-FS/Source/fs_api.c **** *               (3) IEEE Std 1003.1, 2004 Edition, Section 'fsetpos() : RETURN VALUE' states that "
1277:rtos/uC-FS/Source/fs_api.c **** *                   'fsetpos()' function shall return 0 if it succeeds; otherwise, it shall return 
1278:rtos/uC-FS/Source/fs_api.c **** *                   non-zero value".
1279:rtos/uC-FS/Source/fs_api.c **** *
1280:rtos/uC-FS/Source/fs_api.c **** *               (4) No attempt is made to verify that the value stored in 'pos' was returned from
1281:rtos/uC-FS/Source/fs_api.c **** *                   'fs_fgetpos()'.
1282:rtos/uC-FS/Source/fs_api.c **** *
1283:rtos/uC-FS/Source/fs_api.c **** *               (5) See also 'fs_fseek()  Note #1d'.
1284:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1285:rtos/uC-FS/Source/fs_api.c **** */
1286:rtos/uC-FS/Source/fs_api.c **** 
1287:rtos/uC-FS/Source/fs_api.c **** int  fs_fsetpos (FS_FILE           *p_file,
1288:rtos/uC-FS/Source/fs_api.c ****                  const  fs_fpos_t  *p_pos)
1289:rtos/uC-FS/Source/fs_api.c **** {
 1440              		.loc 1 1289 1 is_stmt 1 view -0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 8
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
1290:rtos/uC-FS/Source/fs_api.c ****     FS_FILE_OFFSET  pos_fs;
 1444              		.loc 1 1290 5 view .LVU363
1291:rtos/uC-FS/Source/fs_api.c ****     FS_ERR          err;
 1445              		.loc 1 1291 5 view .LVU364
1292:rtos/uC-FS/Source/fs_api.c ****     int             rtn;
 1446              		.loc 1 1292 5 view .LVU365
1293:rtos/uC-FS/Source/fs_api.c **** 
1294:rtos/uC-FS/Source/fs_api.c **** 
1295:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1296:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
ARM GAS  /tmp/ccYe7so7.s 			page 50


 1447              		.loc 1 1296 5 view .LVU366
 1448              		.loc 1 1296 8 is_stmt 0 view .LVU367
 1449 0000 70B1     		cbz	r0, .L153
1289:rtos/uC-FS/Source/fs_api.c ****     FS_FILE_OFFSET  pos_fs;
 1450              		.loc 1 1289 1 view .LVU368
 1451 0002 10B5     		push	{r4, lr}
 1452              	.LCFI85:
 1453              		.cfi_def_cfa_offset 8
 1454              		.cfi_offset 4, -8
 1455              		.cfi_offset 14, -4
 1456 0004 82B0     		sub	sp, sp, #8
 1457              	.LCFI86:
 1458              		.cfi_def_cfa_offset 16
1297:rtos/uC-FS/Source/fs_api.c ****         return ((int)FS_EBADF);
1298:rtos/uC-FS/Source/fs_api.c ****     }
1299:rtos/uC-FS/Source/fs_api.c ****     if (p_pos == (fs_fpos_t *)0) {
 1459              		.loc 1 1299 5 is_stmt 1 view .LVU369
 1460              		.loc 1 1299 8 is_stmt 0 view .LVU370
 1461 0006 69B1     		cbz	r1, .L154
1300:rtos/uC-FS/Source/fs_api.c ****         return ((int)FS_STDIO_ERR);
1301:rtos/uC-FS/Source/fs_api.c ****     }
1302:rtos/uC-FS/Source/fs_api.c **** #endif
1303:rtos/uC-FS/Source/fs_api.c **** 
1304:rtos/uC-FS/Source/fs_api.c ****     pos_fs = (FS_FILE_OFFSET)*p_pos;
 1462              		.loc 1 1304 5 is_stmt 1 view .LVU371
 1463              	.LVL124:
1305:rtos/uC-FS/Source/fs_api.c **** 
1306:rtos/uC-FS/Source/fs_api.c ****     FSFile_PosSet( p_file,
 1464              		.loc 1 1306 5 view .LVU372
 1465 0008 0DF10603 		add	r3, sp, #6
 1466 000c 0022     		movs	r2, #0
 1467 000e 0968     		ldr	r1, [r1]
 1468              	.LVL125:
 1469              		.loc 1 1306 5 is_stmt 0 view .LVU373
 1470 0010 FFF7FEFF 		bl	FSFile_PosSet
 1471              	.LVL126:
1307:rtos/uC-FS/Source/fs_api.c ****                    pos_fs,
1308:rtos/uC-FS/Source/fs_api.c ****                    FS_FILE_ORIGIN_START,
1309:rtos/uC-FS/Source/fs_api.c ****                   &err);
1310:rtos/uC-FS/Source/fs_api.c **** 
1311:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? ((int)0) : ((int)FS_STDIO_ERR);
 1472              		.loc 1 1311 5 is_stmt 1 view .LVU374
 1473              		.loc 1 1311 16 is_stmt 0 view .LVU375
 1474 0014 BDF80630 		ldrh	r3, [sp, #6]
 1475              		.loc 1 1311 43 view .LVU376
 1476 0018 3BB9     		cbnz	r3, .L155
 1477 001a 0020     		movs	r0, #0
 1478              	.L151:
1312:rtos/uC-FS/Source/fs_api.c **** 
1313:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
1314:rtos/uC-FS/Source/fs_api.c **** }
 1479              		.loc 1 1314 1 view .LVU377
 1480 001c 02B0     		add	sp, sp, #8
 1481              	.LCFI87:
 1482              		.cfi_def_cfa_offset 8
 1483              		@ sp needed
 1484 001e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccYe7so7.s 			page 51


 1485              	.LVL127:
 1486              	.L153:
 1487              	.LCFI88:
 1488              		.cfi_def_cfa_offset 0
 1489              		.cfi_restore 4
 1490              		.cfi_restore 14
1297:rtos/uC-FS/Source/fs_api.c ****     }
 1491              		.loc 1 1297 16 view .LVU378
 1492 0020 0320     		movs	r0, #3
 1493              	.LVL128:
 1494              		.loc 1 1314 1 view .LVU379
 1495 0022 7047     		bx	lr
 1496              	.LVL129:
 1497              	.L154:
 1498              	.LCFI89:
 1499              		.cfi_def_cfa_offset 16
 1500              		.cfi_offset 4, -8
 1501              		.cfi_offset 14, -4
1300:rtos/uC-FS/Source/fs_api.c ****     }
 1502              		.loc 1 1300 16 view .LVU380
 1503 0024 4FF0FF30 		mov	r0, #-1
 1504              	.LVL130:
1300:rtos/uC-FS/Source/fs_api.c ****     }
 1505              		.loc 1 1300 16 view .LVU381
 1506 0028 F8E7     		b	.L151
 1507              	.LVL131:
 1508              	.L155:
1311:rtos/uC-FS/Source/fs_api.c **** 
 1509              		.loc 1 1311 43 view .LVU382
 1510 002a 4FF0FF30 		mov	r0, #-1
 1511 002e F5E7     		b	.L151
 1512              		.cfi_endproc
 1513              	.LFE17:
 1515              		.section	.text.fs_fstat,"ax",%progbits
 1516              		.align	1
 1517              		.global	fs_fstat
 1518              		.syntax unified
 1519              		.thumb
 1520              		.thumb_func
 1521              		.fpu fpv4-sp-d16
 1523              	fs_fstat:
 1524              	.LVL132:
 1525              	.LFB18:
1315:rtos/uC-FS/Source/fs_api.c **** 
1316:rtos/uC-FS/Source/fs_api.c **** 
1317:rtos/uC-FS/Source/fs_api.c **** /*
1318:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1319:rtos/uC-FS/Source/fs_api.c **** *                                             fs_fstat()
1320:rtos/uC-FS/Source/fs_api.c **** *
1321:rtos/uC-FS/Source/fs_api.c **** * Description : Get information about a file.
1322:rtos/uC-FS/Source/fs_api.c **** *
1323:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file       Pointer to a file.
1324:rtos/uC-FS/Source/fs_api.c **** *
1325:rtos/uC-FS/Source/fs_api.c **** *               p_info       Pointer to structure that will receive the file information.
1326:rtos/uC-FS/Source/fs_api.c **** *
1327:rtos/uC-FS/Source/fs_api.c **** * Return(s)   :  0, if the function succeeds.
1328:rtos/uC-FS/Source/fs_api.c **** *               -1, otherwise.
ARM GAS  /tmp/ccYe7so7.s 			page 52


1329:rtos/uC-FS/Source/fs_api.c **** *
1330:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : none.
1331:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1332:rtos/uC-FS/Source/fs_api.c **** */
1333:rtos/uC-FS/Source/fs_api.c **** 
1334:rtos/uC-FS/Source/fs_api.c **** int  fs_fstat (FS_FILE          *p_file,
1335:rtos/uC-FS/Source/fs_api.c ****                struct  fs_stat  *p_info)
1336:rtos/uC-FS/Source/fs_api.c **** {
 1526              		.loc 1 1336 1 is_stmt 1 view -0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 32
 1529              		@ frame_needed = 0, uses_anonymous_args = 0
1337:rtos/uC-FS/Source/fs_api.c ****     FS_ENTRY_INFO  info;
 1530              		.loc 1 1337 5 view .LVU384
1338:rtos/uC-FS/Source/fs_api.c ****     FS_ERR         err;
 1531              		.loc 1 1338 5 view .LVU385
1339:rtos/uC-FS/Source/fs_api.c ****     fs_mode_t      mode;
 1532              		.loc 1 1339 5 view .LVU386
1340:rtos/uC-FS/Source/fs_api.c **** 
1341:rtos/uC-FS/Source/fs_api.c **** 
1342:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1343:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 1533              		.loc 1 1343 5 view .LVU387
 1534              		.loc 1 1343 8 is_stmt 0 view .LVU388
 1535 0000 0028     		cmp	r0, #0
 1536 0002 3BD0     		beq	.L165
1336:rtos/uC-FS/Source/fs_api.c ****     FS_ENTRY_INFO  info;
 1537              		.loc 1 1336 1 view .LVU389
 1538 0004 10B5     		push	{r4, lr}
 1539              	.LCFI90:
 1540              		.cfi_def_cfa_offset 8
 1541              		.cfi_offset 4, -8
 1542              		.cfi_offset 14, -4
 1543 0006 88B0     		sub	sp, sp, #32
 1544              	.LCFI91:
 1545              		.cfi_def_cfa_offset 40
 1546 0008 0C46     		mov	r4, r1
1344:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
1345:rtos/uC-FS/Source/fs_api.c ****     }
1346:rtos/uC-FS/Source/fs_api.c ****     if (p_info == (struct fs_stat *)0) {
 1547              		.loc 1 1346 5 is_stmt 1 view .LVU390
 1548              		.loc 1 1346 8 is_stmt 0 view .LVU391
 1549 000a 0029     		cmp	r1, #0
 1550 000c 39D0     		beq	.L166
1347:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
1348:rtos/uC-FS/Source/fs_api.c ****     }
1349:rtos/uC-FS/Source/fs_api.c **** #endif
1350:rtos/uC-FS/Source/fs_api.c **** 
1351:rtos/uC-FS/Source/fs_api.c ****     FSFile_Query( p_file,
 1551              		.loc 1 1351 5 is_stmt 1 view .LVU392
 1552 000e 0DF10202 		add	r2, sp, #2
 1553 0012 01A9     		add	r1, sp, #4
 1554              	.LVL133:
 1555              		.loc 1 1351 5 is_stmt 0 view .LVU393
 1556 0014 FFF7FEFF 		bl	FSFile_Query
 1557              	.LVL134:
1352:rtos/uC-FS/Source/fs_api.c ****                  &info,
ARM GAS  /tmp/ccYe7so7.s 			page 53


1353:rtos/uC-FS/Source/fs_api.c ****                  &err);
1354:rtos/uC-FS/Source/fs_api.c **** 
1355:rtos/uC-FS/Source/fs_api.c ****     if (err != FS_ERR_NONE) {
 1558              		.loc 1 1355 5 is_stmt 1 view .LVU394
 1559              		.loc 1 1355 13 is_stmt 0 view .LVU395
 1560 0018 BDF80230 		ldrh	r3, [sp, #2]
 1561              		.loc 1 1355 8 view .LVU396
 1562 001c 002B     		cmp	r3, #0
 1563 001e 33D1     		bne	.L167
1356:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
1357:rtos/uC-FS/Source/fs_api.c ****     }
1358:rtos/uC-FS/Source/fs_api.c **** 
1359:rtos/uC-FS/Source/fs_api.c ****     mode = (DEF_BIT_IS_SET(info.Attrib, FS_ENTRY_ATTRIB_DIR) == DEF_YES) ? FS_S_IFDIR
 1564              		.loc 1 1359 5 is_stmt 1 view .LVU397
 1565              		.loc 1 1359 13 is_stmt 0 view .LVU398
 1566 0020 019A     		ldr	r2, [sp, #4]
1360:rtos/uC-FS/Source/fs_api.c ****                                                                          : FS_S_IFREG;
 1567              		.loc 1 1360 74 view .LVU399
 1568 0022 12F0400F 		tst	r2, #64
 1569 0026 26D0     		beq	.L168
 1570 0028 4FF4A043 		mov	r3, #20480
 1571              	.L162:
 1572              	.LVL135:
1361:rtos/uC-FS/Source/fs_api.c **** 
1362:rtos/uC-FS/Source/fs_api.c ****     if (DEF_BIT_IS_SET(info.Attrib, FS_ENTRY_ATTRIB_RD) == DEF_YES) {
 1573              		.loc 1 1362 5 is_stmt 1 view .LVU400
 1574              		.loc 1 1362 8 is_stmt 0 view .LVU401
 1575 002c 12F0010F 		tst	r2, #1
 1576 0030 03D0     		beq	.L163
1363:rtos/uC-FS/Source/fs_api.c ****         mode |= FS_S_IRUSR | FS_S_IRGRP | FS_S_IROTH;
 1577              		.loc 1 1363 9 is_stmt 1 view .LVU402
 1578              		.loc 1 1363 14 is_stmt 0 view .LVU403
 1579 0032 43F48863 		orr	r3, r3, #1088
 1580              	.LVL136:
 1581              		.loc 1 1363 14 view .LVU404
 1582 0036 43F00403 		orr	r3, r3, #4
 1583              	.LVL137:
 1584              	.L163:
1364:rtos/uC-FS/Source/fs_api.c ****     }
1365:rtos/uC-FS/Source/fs_api.c **** 
1366:rtos/uC-FS/Source/fs_api.c ****     if (DEF_BIT_IS_SET(info.Attrib, FS_ENTRY_ATTRIB_WR) == DEF_YES) {
 1585              		.loc 1 1366 5 is_stmt 1 view .LVU405
 1586              		.loc 1 1366 8 is_stmt 0 view .LVU406
 1587 003a 12F0020F 		tst	r2, #2
 1588 003e 03D0     		beq	.L164
1367:rtos/uC-FS/Source/fs_api.c ****         mode |= FS_S_IWUSR | FS_S_IWGRP | FS_S_IWOTH;
 1589              		.loc 1 1367 9 is_stmt 1 view .LVU407
 1590              		.loc 1 1367 14 is_stmt 0 view .LVU408
 1591 0040 43F40873 		orr	r3, r3, #544
 1592              	.LVL138:
 1593              		.loc 1 1367 14 view .LVU409
 1594 0044 43F00203 		orr	r3, r3, #2
 1595              	.LVL139:
 1596              	.L164:
1368:rtos/uC-FS/Source/fs_api.c ****     }
1369:rtos/uC-FS/Source/fs_api.c **** 
1370:rtos/uC-FS/Source/fs_api.c ****     p_info->st_dev     =  0u;
ARM GAS  /tmp/ccYe7so7.s 			page 54


 1597              		.loc 1 1370 5 is_stmt 1 view .LVU410
 1598              		.loc 1 1370 24 is_stmt 0 view .LVU411
 1599 0048 0020     		movs	r0, #0
 1600 004a 2060     		str	r0, [r4]
1371:rtos/uC-FS/Source/fs_api.c ****     p_info->st_ino     =  0u;
 1601              		.loc 1 1371 5 is_stmt 1 view .LVU412
 1602              		.loc 1 1371 24 is_stmt 0 view .LVU413
 1603 004c 6060     		str	r0, [r4, #4]
1372:rtos/uC-FS/Source/fs_api.c ****     p_info->st_mode    =  mode;
 1604              		.loc 1 1372 5 is_stmt 1 view .LVU414
 1605              		.loc 1 1372 24 is_stmt 0 view .LVU415
 1606 004e A360     		str	r3, [r4, #8]
1373:rtos/uC-FS/Source/fs_api.c ****     p_info->st_nlink   =  1u;
 1607              		.loc 1 1373 5 is_stmt 1 view .LVU416
 1608              		.loc 1 1373 24 is_stmt 0 view .LVU417
 1609 0050 0123     		movs	r3, #1
 1610              	.LVL140:
 1611              		.loc 1 1373 24 view .LVU418
 1612 0052 E360     		str	r3, [r4, #12]
1374:rtos/uC-FS/Source/fs_api.c ****     p_info->st_uid     =  0u;
 1613              		.loc 1 1374 5 is_stmt 1 view .LVU419
 1614              		.loc 1 1374 24 is_stmt 0 view .LVU420
 1615 0054 2061     		str	r0, [r4, #16]
1375:rtos/uC-FS/Source/fs_api.c ****     p_info->st_gid     =  0u;
 1616              		.loc 1 1375 5 is_stmt 1 view .LVU421
 1617              		.loc 1 1375 24 is_stmt 0 view .LVU422
 1618 0056 6061     		str	r0, [r4, #20]
1376:rtos/uC-FS/Source/fs_api.c ****     p_info->st_size    = (fs_off_t    ) info.Size;
 1619              		.loc 1 1376 5 is_stmt 1 view .LVU423
 1620              		.loc 1 1376 45 is_stmt 0 view .LVU424
 1621 0058 029B     		ldr	r3, [sp, #8]
 1622              		.loc 1 1376 24 view .LVU425
 1623 005a A361     		str	r3, [r4, #24]
1377:rtos/uC-FS/Source/fs_api.c ****     p_info->st_atime   = (fs_time_t   )-1;
 1624              		.loc 1 1377 5 is_stmt 1 view .LVU426
 1625              		.loc 1 1377 24 is_stmt 0 view .LVU427
 1626 005c 4FF0FF33 		mov	r3, #-1
 1627 0060 E361     		str	r3, [r4, #28]
1378:rtos/uC-FS/Source/fs_api.c ****     p_info->st_mtime   = (fs_time_t   ) info.DateTimeWr;
 1628              		.loc 1 1378 5 is_stmt 1 view .LVU428
 1629              		.loc 1 1378 45 is_stmt 0 view .LVU429
 1630 0062 059B     		ldr	r3, [sp, #20]
 1631              		.loc 1 1378 24 view .LVU430
 1632 0064 2362     		str	r3, [r4, #32]
1379:rtos/uC-FS/Source/fs_api.c ****     p_info->st_ctime   = (fs_time_t   ) info.DateTimeCreate;
 1633              		.loc 1 1379 5 is_stmt 1 view .LVU431
 1634              		.loc 1 1379 45 is_stmt 0 view .LVU432
 1635 0066 039B     		ldr	r3, [sp, #12]
 1636              		.loc 1 1379 24 view .LVU433
 1637 0068 6362     		str	r3, [r4, #36]
1380:rtos/uC-FS/Source/fs_api.c ****     p_info->st_blksize = (fs_blksize_t) info.BlkSize;
 1638              		.loc 1 1380 5 is_stmt 1 view .LVU434
 1639              		.loc 1 1380 45 is_stmt 0 view .LVU435
 1640 006a 079B     		ldr	r3, [sp, #28]
 1641              		.loc 1 1380 24 view .LVU436
 1642 006c A362     		str	r3, [r4, #40]
1381:rtos/uC-FS/Source/fs_api.c ****     p_info->st_blocks  = (fs_blkcnt_t ) info.BlkCnt;
ARM GAS  /tmp/ccYe7so7.s 			page 55


 1643              		.loc 1 1381 5 is_stmt 1 view .LVU437
 1644              		.loc 1 1381 45 is_stmt 0 view .LVU438
 1645 006e 069B     		ldr	r3, [sp, #24]
 1646              		.loc 1 1381 24 view .LVU439
 1647 0070 E362     		str	r3, [r4, #44]
1382:rtos/uC-FS/Source/fs_api.c **** 
1383:rtos/uC-FS/Source/fs_api.c ****     return ((int)0);
 1648              		.loc 1 1383 5 is_stmt 1 view .LVU440
 1649              	.LVL141:
 1650              	.L160:
1384:rtos/uC-FS/Source/fs_api.c **** }
 1651              		.loc 1 1384 1 is_stmt 0 view .LVU441
 1652 0072 08B0     		add	sp, sp, #32
 1653              	.LCFI92:
 1654              		.cfi_remember_state
 1655              		.cfi_def_cfa_offset 8
 1656              		@ sp needed
 1657 0074 10BD     		pop	{r4, pc}
 1658              	.LVL142:
 1659              	.L168:
 1660              	.LCFI93:
 1661              		.cfi_restore_state
1360:rtos/uC-FS/Source/fs_api.c **** 
 1662              		.loc 1 1360 74 view .LVU442
 1663 0076 4FF48043 		mov	r3, #16384
 1664 007a D7E7     		b	.L162
 1665              	.LVL143:
 1666              	.L165:
 1667              	.LCFI94:
 1668              		.cfi_def_cfa_offset 0
 1669              		.cfi_restore 4
 1670              		.cfi_restore 14
1344:rtos/uC-FS/Source/fs_api.c ****     }
 1671              		.loc 1 1344 16 view .LVU443
 1672 007c 4FF0FF30 		mov	r0, #-1
 1673              	.LVL144:
 1674              		.loc 1 1384 1 view .LVU444
 1675 0080 7047     		bx	lr
 1676              	.LVL145:
 1677              	.L166:
 1678              	.LCFI95:
 1679              		.cfi_def_cfa_offset 40
 1680              		.cfi_offset 4, -8
 1681              		.cfi_offset 14, -4
1347:rtos/uC-FS/Source/fs_api.c ****     }
 1682              		.loc 1 1347 16 view .LVU445
 1683 0082 4FF0FF30 		mov	r0, #-1
 1684              	.LVL146:
1347:rtos/uC-FS/Source/fs_api.c ****     }
 1685              		.loc 1 1347 16 view .LVU446
 1686 0086 F4E7     		b	.L160
 1687              	.LVL147:
 1688              	.L167:
1356:rtos/uC-FS/Source/fs_api.c ****     }
 1689              		.loc 1 1356 16 view .LVU447
 1690 0088 4FF0FF30 		mov	r0, #-1
 1691 008c F1E7     		b	.L160
ARM GAS  /tmp/ccYe7so7.s 			page 56


 1692              		.cfi_endproc
 1693              	.LFE18:
 1695              		.section	.text.fs_ftell,"ax",%progbits
 1696              		.align	1
 1697              		.global	fs_ftell
 1698              		.syntax unified
 1699              		.thumb
 1700              		.thumb_func
 1701              		.fpu fpv4-sp-d16
 1703              	fs_ftell:
 1704              	.LVL148:
 1705              	.LFB19:
1385:rtos/uC-FS/Source/fs_api.c **** 
1386:rtos/uC-FS/Source/fs_api.c **** 
1387:rtos/uC-FS/Source/fs_api.c **** /*
1388:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1389:rtos/uC-FS/Source/fs_api.c **** *                                             fs_ftell()
1390:rtos/uC-FS/Source/fs_api.c **** *
1391:rtos/uC-FS/Source/fs_api.c **** * Description : Get file position indicator.
1392:rtos/uC-FS/Source/fs_api.c **** *
1393:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file     Pointer to a file.
1394:rtos/uC-FS/Source/fs_api.c **** *
1395:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : The current file system position, if the function succeeds.
1396:rtos/uC-FS/Source/fs_api.c **** *               -1,                               otherwise.
1397:rtos/uC-FS/Source/fs_api.c **** *
1398:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'ftell() : RETURN VALUE' states that :
1399:rtos/uC-FS/Source/fs_api.c **** *
1400:rtos/uC-FS/Source/fs_api.c **** *                   (a) "Upon successful completion, 'ftell()' and 'ftello()' shall return the curr
1401:rtos/uC-FS/Source/fs_api.c **** *                        value of the file-position indicator for the stream measured in bytes from
1402:rtos/uC-FS/Source/fs_api.c **** *                        beginning of the file."
1403:rtos/uC-FS/Source/fs_api.c **** *
1404:rtos/uC-FS/Source/fs_api.c **** *                   (b) "Otherwise, 'ftell()' and 'ftello()' shall return -1, cast to 'long' and 'o
1405:rtos/uC-FS/Source/fs_api.c **** *                        respectively, and set errno to indicate the error."
1406:rtos/uC-FS/Source/fs_api.c **** *
1407:rtos/uC-FS/Source/fs_api.c **** *               (2) #### Check for overflow in cast.
1408:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1409:rtos/uC-FS/Source/fs_api.c **** */
1410:rtos/uC-FS/Source/fs_api.c **** 
1411:rtos/uC-FS/Source/fs_api.c **** long  int  fs_ftell (FS_FILE  *p_file)
1412:rtos/uC-FS/Source/fs_api.c **** {
 1706              		.loc 1 1412 1 is_stmt 1 view -0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 8
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
1413:rtos/uC-FS/Source/fs_api.c ****     FS_FILE_SIZE  pos;
 1710              		.loc 1 1413 5 view .LVU449
1414:rtos/uC-FS/Source/fs_api.c ****     FS_ERR        err;
 1711              		.loc 1 1414 5 view .LVU450
1415:rtos/uC-FS/Source/fs_api.c **** 
1416:rtos/uC-FS/Source/fs_api.c **** 
1417:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1418:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 1712              		.loc 1 1418 5 view .LVU451
 1713              		.loc 1 1418 8 is_stmt 0 view .LVU452
 1714 0000 58B1     		cbz	r0, .L175
1412:rtos/uC-FS/Source/fs_api.c ****     FS_FILE_SIZE  pos;
 1715              		.loc 1 1412 1 view .LVU453
ARM GAS  /tmp/ccYe7so7.s 			page 57


 1716 0002 00B5     		push	{lr}
 1717              	.LCFI96:
 1718              		.cfi_def_cfa_offset 4
 1719              		.cfi_offset 14, -4
 1720 0004 83B0     		sub	sp, sp, #12
 1721              	.LCFI97:
 1722              		.cfi_def_cfa_offset 16
1419:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
1420:rtos/uC-FS/Source/fs_api.c ****     }
1421:rtos/uC-FS/Source/fs_api.c **** #endif
1422:rtos/uC-FS/Source/fs_api.c **** 
1423:rtos/uC-FS/Source/fs_api.c ****     pos = FSFile_PosGet( p_file,
 1723              		.loc 1 1423 5 is_stmt 1 view .LVU454
 1724              		.loc 1 1423 11 is_stmt 0 view .LVU455
 1725 0006 0DF10601 		add	r1, sp, #6
 1726 000a FFF7FEFF 		bl	FSFile_PosGet
 1727              	.LVL149:
1424:rtos/uC-FS/Source/fs_api.c ****                         &err);
1425:rtos/uC-FS/Source/fs_api.c **** 
1426:rtos/uC-FS/Source/fs_api.c ****     if (err != FS_ERR_NONE) {
 1728              		.loc 1 1426 5 is_stmt 1 view .LVU456
 1729              		.loc 1 1426 13 is_stmt 0 view .LVU457
 1730 000e BDF80630 		ldrh	r3, [sp, #6]
 1731              		.loc 1 1426 8 view .LVU458
 1732 0012 2BB9     		cbnz	r3, .L176
 1733              	.LVL150:
 1734              	.L173:
1427:rtos/uC-FS/Source/fs_api.c ****         return ((long int)-1);
1428:rtos/uC-FS/Source/fs_api.c ****     }
1429:rtos/uC-FS/Source/fs_api.c **** 
1430:rtos/uC-FS/Source/fs_api.c ****     return ((long int)pos);                                     /* See Note #2.                    
1431:rtos/uC-FS/Source/fs_api.c **** }
 1735              		.loc 1 1431 1 view .LVU459
 1736 0014 03B0     		add	sp, sp, #12
 1737              	.LCFI98:
 1738              		.cfi_def_cfa_offset 4
 1739              		@ sp needed
 1740 0016 5DF804FB 		ldr	pc, [sp], #4
 1741              	.LVL151:
 1742              	.L175:
 1743              	.LCFI99:
 1744              		.cfi_def_cfa_offset 0
 1745              		.cfi_restore 14
1419:rtos/uC-FS/Source/fs_api.c ****     }
 1746              		.loc 1 1419 16 view .LVU460
 1747 001a 4FF0FF30 		mov	r0, #-1
 1748              	.LVL152:
 1749              		.loc 1 1431 1 view .LVU461
 1750 001e 7047     		bx	lr
 1751              	.LVL153:
 1752              	.L176:
 1753              	.LCFI100:
 1754              		.cfi_def_cfa_offset 16
 1755              		.cfi_offset 14, -4
1427:rtos/uC-FS/Source/fs_api.c ****         return ((long int)-1);
 1756              		.loc 1 1427 16 view .LVU462
 1757 0020 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccYe7so7.s 			page 58


 1758              	.LVL154:
1427:rtos/uC-FS/Source/fs_api.c ****         return ((long int)-1);
 1759              		.loc 1 1427 16 view .LVU463
 1760 0024 F6E7     		b	.L173
 1761              		.cfi_endproc
 1762              	.LFE19:
 1764              		.section	.text.fs_ftruncate,"ax",%progbits
 1765              		.align	1
 1766              		.global	fs_ftruncate
 1767              		.syntax unified
 1768              		.thumb
 1769              		.thumb_func
 1770              		.fpu fpv4-sp-d16
 1772              	fs_ftruncate:
 1773              	.LVL155:
 1774              	.LFB20:
1432:rtos/uC-FS/Source/fs_api.c **** 
1433:rtos/uC-FS/Source/fs_api.c **** 
1434:rtos/uC-FS/Source/fs_api.c **** /*
1435:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1436:rtos/uC-FS/Source/fs_api.c **** *                                           fs_ftruncate()
1437:rtos/uC-FS/Source/fs_api.c **** *
1438:rtos/uC-FS/Source/fs_api.c **** * Description : Truncate a file.
1439:rtos/uC-FS/Source/fs_api.c **** *
1440:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
1441:rtos/uC-FS/Source/fs_api.c **** *
1442:rtos/uC-FS/Source/fs_api.c **** *               size       Length of file after truncation.
1443:rtos/uC-FS/Source/fs_api.c **** *
1444:rtos/uC-FS/Source/fs_api.c **** * Return(s)   :  0, if the function succeeds.
1445:rtos/uC-FS/Source/fs_api.c **** *               -1, otherwise.
1446:rtos/uC-FS/Source/fs_api.c **** *
1447:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'ftruncate() : DESCRIPTION' states that 
1448:rtos/uC-FS/Source/fs_api.c **** *
1449:rtos/uC-FS/Source/fs_api.c **** *                   (a) "If 'fildes' is not a valid file descriptor open for writing, the 'ftruncat
1450:rtos/uC-FS/Source/fs_api.c **** *                        function shall fail."
1451:rtos/uC-FS/Source/fs_api.c **** *
1452:rtos/uC-FS/Source/fs_api.c **** *                   (b) "[The] 'ftruncate()' function shall cause the size of the file to be trunca
1453:rtos/uC-FS/Source/fs_api.c **** *                        'length'."
1454:rtos/uC-FS/Source/fs_api.c **** *
1455:rtos/uC-FS/Source/fs_api.c **** *                       (1) "If the size of the file previously exceeded length, the extra data sha
1456:rtos/uC-FS/Source/fs_api.c **** *                            longer be available to reads on the file."
1457:rtos/uC-FS/Source/fs_api.c **** *
1458:rtos/uC-FS/Source/fs_api.c **** *                       (2) "If the file previously was smaller than this size, 'ftruncate' shall e
1459:rtos/uC-FS/Source/fs_api.c **** *                            increase the size of the file or fail."  This implementation increases
1460:rtos/uC-FS/Source/fs_api.c **** *                            size of the file.
1461:rtos/uC-FS/Source/fs_api.c **** *
1462:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'ftruncate() : DESCRIPTION' states that 
1463:rtos/uC-FS/Source/fs_api.c **** *                   successful completion, 'ftruncate()' shall return 0; otherwise -1 shall be retu
1464:rtos/uC-FS/Source/fs_api.c **** *                   and 'errno' set to indicate the error".
1465:rtos/uC-FS/Source/fs_api.c **** *
1466:rtos/uC-FS/Source/fs_api.c **** *               (3) If the file position indicator before the call to 'fs_ftruncate()' lay in the
1467:rtos/uC-FS/Source/fs_api.c **** *                   extra data destroyed by the function, then the file position will be set to the
1468:rtos/uC-FS/Source/fs_api.c **** *                   end-of-file.
1469:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1470:rtos/uC-FS/Source/fs_api.c **** */
1471:rtos/uC-FS/Source/fs_api.c **** 
1472:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
ARM GAS  /tmp/ccYe7so7.s 			page 59


1473:rtos/uC-FS/Source/fs_api.c **** int  fs_ftruncate (FS_FILE   *p_file,
1474:rtos/uC-FS/Source/fs_api.c ****                    fs_off_t   size)
1475:rtos/uC-FS/Source/fs_api.c **** {
 1775              		.loc 1 1475 1 is_stmt 1 view -0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 8
 1778              		@ frame_needed = 0, uses_anonymous_args = 0
1476:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 1779              		.loc 1 1476 5 view .LVU465
1477:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 1780              		.loc 1 1477 5 view .LVU466
1478:rtos/uC-FS/Source/fs_api.c **** 
1479:rtos/uC-FS/Source/fs_api.c **** 
1480:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1481:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 1781              		.loc 1 1481 5 view .LVU467
 1782              		.loc 1 1481 8 is_stmt 0 view .LVU468
 1783 0000 60B1     		cbz	r0, .L183
1475:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 1784              		.loc 1 1475 1 view .LVU469
 1785 0002 00B5     		push	{lr}
 1786              	.LCFI101:
 1787              		.cfi_def_cfa_offset 4
 1788              		.cfi_offset 14, -4
 1789 0004 83B0     		sub	sp, sp, #12
 1790              	.LCFI102:
 1791              		.cfi_def_cfa_offset 16
1482:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
1483:rtos/uC-FS/Source/fs_api.c ****     }
1484:rtos/uC-FS/Source/fs_api.c **** #endif
1485:rtos/uC-FS/Source/fs_api.c **** 
1486:rtos/uC-FS/Source/fs_api.c ****     FSFile_Truncate(               p_file,
 1792              		.loc 1 1486 5 is_stmt 1 view .LVU470
 1793 0006 0DF10602 		add	r2, sp, #6
 1794 000a FFF7FEFF 		bl	FSFile_Truncate
 1795              	.LVL156:
1487:rtos/uC-FS/Source/fs_api.c ****                     (FS_FILE_SIZE) size,
1488:rtos/uC-FS/Source/fs_api.c ****                                   &err);
1489:rtos/uC-FS/Source/fs_api.c **** 
1490:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? (0) : (-1);
 1796              		.loc 1 1490 5 view .LVU471
 1797              		.loc 1 1490 16 is_stmt 0 view .LVU472
 1798 000e BDF80630 		ldrh	r3, [sp, #6]
 1799              		.loc 1 1490 38 view .LVU473
 1800 0012 33B9     		cbnz	r3, .L184
 1801 0014 0020     		movs	r0, #0
 1802              	.L181:
1491:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
1492:rtos/uC-FS/Source/fs_api.c **** }
 1803              		.loc 1 1492 1 view .LVU474
 1804 0016 03B0     		add	sp, sp, #12
 1805              	.LCFI103:
 1806              		.cfi_def_cfa_offset 4
 1807              		@ sp needed
 1808 0018 5DF804FB 		ldr	pc, [sp], #4
 1809              	.LVL157:
 1810              	.L183:
ARM GAS  /tmp/ccYe7so7.s 			page 60


 1811              	.LCFI104:
 1812              		.cfi_def_cfa_offset 0
 1813              		.cfi_restore 14
1482:rtos/uC-FS/Source/fs_api.c ****     }
 1814              		.loc 1 1482 16 view .LVU475
 1815 001c 4FF0FF30 		mov	r0, #-1
 1816              	.LVL158:
 1817              		.loc 1 1492 1 view .LVU476
 1818 0020 7047     		bx	lr
 1819              	.LVL159:
 1820              	.L184:
 1821              	.LCFI105:
 1822              		.cfi_def_cfa_offset 16
 1823              		.cfi_offset 14, -4
1490:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 1824              		.loc 1 1490 38 view .LVU477
 1825 0022 4FF0FF30 		mov	r0, #-1
 1826 0026 F6E7     		b	.L181
 1827              		.cfi_endproc
 1828              	.LFE20:
 1830              		.section	.text.fs_fwrite,"ax",%progbits
 1831              		.align	1
 1832              		.global	fs_fwrite
 1833              		.syntax unified
 1834              		.thumb
 1835              		.thumb_func
 1836              		.fpu fpv4-sp-d16
 1838              	fs_fwrite:
 1839              	.LVL160:
 1840              	.LFB21:
1493:rtos/uC-FS/Source/fs_api.c **** #endif
1494:rtos/uC-FS/Source/fs_api.c **** 
1495:rtos/uC-FS/Source/fs_api.c **** 
1496:rtos/uC-FS/Source/fs_api.c **** /*
1497:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1498:rtos/uC-FS/Source/fs_api.c **** *                                          fs_ftrylockfile()
1499:rtos/uC-FS/Source/fs_api.c **** *
1500:rtos/uC-FS/Source/fs_api.c **** * Description : Acquire task ownership of a file (if available).
1501:rtos/uC-FS/Source/fs_api.c **** *
1502:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file    Pointer to a file.
1503:rtos/uC-FS/Source/fs_api.c **** *
1504:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : 0,              if no error occurs & the file lock is acquired.
1505:rtos/uC-FS/Source/fs_api.c **** *               Non-zero value, otherwise.
1506:rtos/uC-FS/Source/fs_api.c **** *
1507:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'flockfile(), ftrylockfile(), funlockfil
1508:rtos/uC-FS/Source/fs_api.c **** *                   DESCRIPTION' states that :
1509:rtos/uC-FS/Source/fs_api.c **** *
1510:rtos/uC-FS/Source/fs_api.c **** *                   (a) See 'fs_flockfile()  Note(s)'.
1511:rtos/uC-FS/Source/fs_api.c **** *
1512:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The 'ftrylockfile() function shall acquire for a thread ownership of a (FI
1513:rtos/uC-FS/Source/fs_api.c **** *                        object if the object is available; 'ftrylockfile()' is a non-blocking vers
1514:rtos/uC-FS/Source/fs_api.c **** *                       'flockfile()'."
1515:rtos/uC-FS/Source/fs_api.c **** *
1516:rtos/uC-FS/Source/fs_api.c **** *               (1) IEEE Std 1003.1, 2004 Edition, Section 'flockfile(), ftrylockfile(), funlockfil
1517:rtos/uC-FS/Source/fs_api.c **** *                   RETURN VALUES' states that "[t]he 'ftrylockfile()' function shall return zero f
1518:rtos/uC-FS/Source/fs_api.c **** *                   success and non-zero to indicate that the lock cannot be acquired".
1519:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
ARM GAS  /tmp/ccYe7so7.s 			page 61


1520:rtos/uC-FS/Source/fs_api.c **** */
1521:rtos/uC-FS/Source/fs_api.c **** 
1522:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_FILE_LOCK_EN == DEF_ENABLED)
1523:rtos/uC-FS/Source/fs_api.c **** int  fs_ftrylockfile (FS_FILE  *p_file)
1524:rtos/uC-FS/Source/fs_api.c **** {
1525:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
1526:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
1527:rtos/uC-FS/Source/fs_api.c **** 
1528:rtos/uC-FS/Source/fs_api.c **** 
1529:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1530:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
1531:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
1532:rtos/uC-FS/Source/fs_api.c ****     }
1533:rtos/uC-FS/Source/fs_api.c **** #endif
1534:rtos/uC-FS/Source/fs_api.c **** 
1535:rtos/uC-FS/Source/fs_api.c ****     FSFile_LockAccept(p_file, &err);
1536:rtos/uC-FS/Source/fs_api.c **** 
1537:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? (int)0 : (int)FS_STDIO_ERR;
1538:rtos/uC-FS/Source/fs_api.c **** 
1539:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
1540:rtos/uC-FS/Source/fs_api.c **** }
1541:rtos/uC-FS/Source/fs_api.c **** #endif
1542:rtos/uC-FS/Source/fs_api.c **** 
1543:rtos/uC-FS/Source/fs_api.c **** 
1544:rtos/uC-FS/Source/fs_api.c **** /*
1545:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1546:rtos/uC-FS/Source/fs_api.c **** *                                          fs_funlockfile()
1547:rtos/uC-FS/Source/fs_api.c **** *
1548:rtos/uC-FS/Source/fs_api.c **** * Description : Release task ownership of a file.
1549:rtos/uC-FS/Source/fs_api.c **** *
1550:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
1551:rtos/uC-FS/Source/fs_api.c **** *
1552:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : none.
1553:rtos/uC-FS/Source/fs_api.c **** *
1554:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'flockfile(), ftrylockfile(), funlockfil
1555:rtos/uC-FS/Source/fs_api.c **** *                   DESCRIPTION' states that :
1556:rtos/uC-FS/Source/fs_api.c **** *
1557:rtos/uC-FS/Source/fs_api.c **** *                   (a) See 'fs_flockfile()  Note(s)'.
1558:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1559:rtos/uC-FS/Source/fs_api.c **** */
1560:rtos/uC-FS/Source/fs_api.c **** 
1561:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_FILE_LOCK_EN == DEF_ENABLED)
1562:rtos/uC-FS/Source/fs_api.c **** void  fs_funlockfile (FS_FILE  *p_file)
1563:rtos/uC-FS/Source/fs_api.c **** {
1564:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
1565:rtos/uC-FS/Source/fs_api.c **** 
1566:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1567:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
1568:rtos/uC-FS/Source/fs_api.c ****         return;
1569:rtos/uC-FS/Source/fs_api.c ****     }
1570:rtos/uC-FS/Source/fs_api.c **** 
1571:rtos/uC-FS/Source/fs_api.c **** #endif
1572:rtos/uC-FS/Source/fs_api.c **** 
1573:rtos/uC-FS/Source/fs_api.c ****     FSFile_LockSet(p_file, &err);
1574:rtos/uC-FS/Source/fs_api.c **** }
1575:rtos/uC-FS/Source/fs_api.c **** #endif
1576:rtos/uC-FS/Source/fs_api.c **** 
ARM GAS  /tmp/ccYe7so7.s 			page 62


1577:rtos/uC-FS/Source/fs_api.c **** 
1578:rtos/uC-FS/Source/fs_api.c **** /*
1579:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1580:rtos/uC-FS/Source/fs_api.c **** *                                             fs_fwrite()
1581:rtos/uC-FS/Source/fs_api.c **** *
1582:rtos/uC-FS/Source/fs_api.c **** * Description : Write to a file.
1583:rtos/uC-FS/Source/fs_api.c **** *
1584:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_src       Pointer to source buffer.
1585:rtos/uC-FS/Source/fs_api.c **** *
1586:rtos/uC-FS/Source/fs_api.c **** *               size        Size of each item to write.
1587:rtos/uC-FS/Source/fs_api.c **** *
1588:rtos/uC-FS/Source/fs_api.c **** *               nitems      Number of items to write.
1589:rtos/uC-FS/Source/fs_api.c **** *
1590:rtos/uC-FS/Source/fs_api.c **** *               p_file      Pointer to a file.
1591:rtos/uC-FS/Source/fs_api.c **** *
1592:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : Number of items written.
1593:rtos/uC-FS/Source/fs_api.c **** *
1594:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'fwrite() : DESCRIPTION' states that :
1595:rtos/uC-FS/Source/fs_api.c **** *
1596:rtos/uC-FS/Source/fs_api.c **** *                   (a) "The 'fwrite()' function shall write, from the array pointed to by 'ptr', u
1597:rtos/uC-FS/Source/fs_api.c **** *                       'nitems' elements whose size is specified by 'size', to the stream pointed 
1598:rtos/uC-FS/Source/fs_api.c **** *                       'stream'"
1599:rtos/uC-FS/Source/fs_api.c **** *
1600:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The file position indicator for the stream ... shall be advanced by the nu
1601:rtos/uC-FS/Source/fs_api.c **** *                        bytes successfully written"
1602:rtos/uC-FS/Source/fs_api.c **** *
1603:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'fwrite() : RETURN VALUE' states that
1604:rtos/uC-FS/Source/fs_api.c **** *                   "'fwrite()' shall return the number of elements successfully written, which may
1605:rtos/uC-FS/Source/fs_api.c **** *                   less than 'nitems' if a write error is encountered".
1606:rtos/uC-FS/Source/fs_api.c **** *
1607:rtos/uC-FS/Source/fs_api.c **** *               (3) See 'fs_fopen()  Notes #1d & #1e'.
1608:rtos/uC-FS/Source/fs_api.c **** *
1609:rtos/uC-FS/Source/fs_api.c **** *               (4) The file MUST have been opened in write or update (read/write) mode.
1610:rtos/uC-FS/Source/fs_api.c **** *
1611:rtos/uC-FS/Source/fs_api.c **** *               (5) #### Check for multiplication overflow.
1612:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1613:rtos/uC-FS/Source/fs_api.c **** */
1614:rtos/uC-FS/Source/fs_api.c **** 
1615:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1616:rtos/uC-FS/Source/fs_api.c **** fs_size_t  fs_fwrite (const  void  *p_src,
1617:rtos/uC-FS/Source/fs_api.c ****                       fs_size_t     size,
1618:rtos/uC-FS/Source/fs_api.c ****                       fs_size_t     nitems,
1619:rtos/uC-FS/Source/fs_api.c ****                       FS_FILE      *p_file)
1620:rtos/uC-FS/Source/fs_api.c **** {
 1841              		.loc 1 1620 1 is_stmt 1 view -0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 8
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
1621:rtos/uC-FS/Source/fs_api.c ****     CPU_SIZE_T  size_tot;
 1845              		.loc 1 1621 5 view .LVU479
1622:rtos/uC-FS/Source/fs_api.c ****     CPU_SIZE_T  size_wr;
 1846              		.loc 1 1622 5 view .LVU480
1623:rtos/uC-FS/Source/fs_api.c ****     fs_size_t   size_wr_items;
 1847              		.loc 1 1623 5 view .LVU481
1624:rtos/uC-FS/Source/fs_api.c ****     FS_ERR      err;
 1848              		.loc 1 1624 5 view .LVU482
1625:rtos/uC-FS/Source/fs_api.c **** 
ARM GAS  /tmp/ccYe7so7.s 			page 63


1626:rtos/uC-FS/Source/fs_api.c **** 
1627:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1628:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 1849              		.loc 1 1628 5 view .LVU483
 1850              		.loc 1 1628 8 is_stmt 0 view .LVU484
 1851 0000 A3B1     		cbz	r3, .L191
1620:rtos/uC-FS/Source/fs_api.c ****     CPU_SIZE_T  size_tot;
 1852              		.loc 1 1620 1 view .LVU485
 1853 0002 70B5     		push	{r4, r5, r6, lr}
 1854              	.LCFI106:
 1855              		.cfi_def_cfa_offset 16
 1856              		.cfi_offset 4, -16
 1857              		.cfi_offset 5, -12
 1858              		.cfi_offset 6, -8
 1859              		.cfi_offset 14, -4
 1860 0004 82B0     		sub	sp, sp, #8
 1861              	.LCFI107:
 1862              		.cfi_def_cfa_offset 24
 1863 0006 0446     		mov	r4, r0
 1864 0008 0D46     		mov	r5, r1
 1865 000a 1E46     		mov	r6, r3
1629:rtos/uC-FS/Source/fs_api.c ****         return ((fs_size_t)0u);
1630:rtos/uC-FS/Source/fs_api.c ****     }
1631:rtos/uC-FS/Source/fs_api.c ****     if (p_src == (const void *)0) {
 1866              		.loc 1 1631 5 is_stmt 1 view .LVU486
 1867              		.loc 1 1631 8 is_stmt 0 view .LVU487
 1868 000c 80B1     		cbz	r0, .L192
1632:rtos/uC-FS/Source/fs_api.c ****         return ((fs_size_t)0u);
1633:rtos/uC-FS/Source/fs_api.c ****     }
1634:rtos/uC-FS/Source/fs_api.c **** #endif
1635:rtos/uC-FS/Source/fs_api.c **** 
1636:rtos/uC-FS/Source/fs_api.c ****     size_tot      = (CPU_SIZE_T)size * (CPU_SIZE_T)nitems;      /* See Note #5.                    
 1869              		.loc 1 1636 5 is_stmt 1 view .LVU488
 1870              		.loc 1 1636 19 is_stmt 0 view .LVU489
 1871 000e 02FB01F0 		mul	r0, r2, r1
 1872              	.LVL161:
1637:rtos/uC-FS/Source/fs_api.c ****     if (size_tot == 0u) {
 1873              		.loc 1 1637 5 is_stmt 1 view .LVU490
 1874              		.loc 1 1637 8 is_stmt 0 view .LVU491
 1875 0012 08B9     		cbnz	r0, .L197
 1876              	.LVL162:
 1877              	.L189:
1638:rtos/uC-FS/Source/fs_api.c ****         return ((fs_size_t)0u);
1639:rtos/uC-FS/Source/fs_api.c ****     }
1640:rtos/uC-FS/Source/fs_api.c **** 
1641:rtos/uC-FS/Source/fs_api.c ****     size_wr       = FSFile_Wr(               p_file,
1642:rtos/uC-FS/Source/fs_api.c ****                               (void       *) p_src,
1643:rtos/uC-FS/Source/fs_api.c ****                               (CPU_SIZE_T  ) size_tot,
1644:rtos/uC-FS/Source/fs_api.c ****                                             &err);
1645:rtos/uC-FS/Source/fs_api.c **** 
1646:rtos/uC-FS/Source/fs_api.c ****     size_wr_items = (fs_size_t)size_wr / size;
1647:rtos/uC-FS/Source/fs_api.c **** 
1648:rtos/uC-FS/Source/fs_api.c ****     return (size_wr_items);
1649:rtos/uC-FS/Source/fs_api.c **** }
 1878              		.loc 1 1649 1 view .LVU492
 1879 0014 02B0     		add	sp, sp, #8
 1880              	.LCFI108:
ARM GAS  /tmp/ccYe7so7.s 			page 64


 1881              		.cfi_remember_state
 1882              		.cfi_def_cfa_offset 16
 1883              		@ sp needed
 1884 0016 70BD     		pop	{r4, r5, r6, pc}
 1885              	.LVL163:
 1886              	.L197:
 1887              	.LCFI109:
 1888              		.cfi_restore_state
1641:rtos/uC-FS/Source/fs_api.c ****                               (void       *) p_src,
 1889              		.loc 1 1641 5 is_stmt 1 view .LVU493
1641:rtos/uC-FS/Source/fs_api.c ****                               (void       *) p_src,
 1890              		.loc 1 1641 21 is_stmt 0 view .LVU494
 1891 0018 0DF10603 		add	r3, sp, #6
 1892              	.LVL164:
1641:rtos/uC-FS/Source/fs_api.c ****                               (void       *) p_src,
 1893              		.loc 1 1641 21 view .LVU495
 1894 001c 0246     		mov	r2, r0
 1895              	.LVL165:
1641:rtos/uC-FS/Source/fs_api.c ****                               (void       *) p_src,
 1896              		.loc 1 1641 21 view .LVU496
 1897 001e 2146     		mov	r1, r4
 1898              	.LVL166:
1641:rtos/uC-FS/Source/fs_api.c ****                               (void       *) p_src,
 1899              		.loc 1 1641 21 view .LVU497
 1900 0020 3046     		mov	r0, r6
 1901              	.LVL167:
1641:rtos/uC-FS/Source/fs_api.c ****                               (void       *) p_src,
 1902              		.loc 1 1641 21 view .LVU498
 1903 0022 FFF7FEFF 		bl	FSFile_Wr
 1904              	.LVL168:
1646:rtos/uC-FS/Source/fs_api.c **** 
 1905              		.loc 1 1646 5 is_stmt 1 view .LVU499
1646:rtos/uC-FS/Source/fs_api.c **** 
 1906              		.loc 1 1646 19 is_stmt 0 view .LVU500
 1907 0026 B0FBF5F0 		udiv	r0, r0, r5
 1908              	.LVL169:
1648:rtos/uC-FS/Source/fs_api.c **** }
 1909              		.loc 1 1648 5 is_stmt 1 view .LVU501
1648:rtos/uC-FS/Source/fs_api.c **** }
 1910              		.loc 1 1648 12 is_stmt 0 view .LVU502
 1911 002a F3E7     		b	.L189
 1912              	.LVL170:
 1913              	.L191:
 1914              	.LCFI110:
 1915              		.cfi_def_cfa_offset 0
 1916              		.cfi_restore 4
 1917              		.cfi_restore 5
 1918              		.cfi_restore 6
 1919              		.cfi_restore 14
1629:rtos/uC-FS/Source/fs_api.c ****     }
 1920              		.loc 1 1629 16 view .LVU503
 1921 002c 0020     		movs	r0, #0
 1922              	.LVL171:
 1923              		.loc 1 1649 1 view .LVU504
 1924 002e 7047     		bx	lr
 1925              	.LVL172:
 1926              	.L192:
ARM GAS  /tmp/ccYe7so7.s 			page 65


 1927              	.LCFI111:
 1928              		.cfi_def_cfa_offset 24
 1929              		.cfi_offset 4, -16
 1930              		.cfi_offset 5, -12
 1931              		.cfi_offset 6, -8
 1932              		.cfi_offset 14, -4
1632:rtos/uC-FS/Source/fs_api.c ****     }
 1933              		.loc 1 1632 16 view .LVU505
 1934 0030 0020     		movs	r0, #0
 1935              	.LVL173:
1632:rtos/uC-FS/Source/fs_api.c ****     }
 1936              		.loc 1 1632 16 view .LVU506
 1937 0032 EFE7     		b	.L189
 1938              		.cfi_endproc
 1939              	.LFE21:
 1941              		.section	.text.fs_rewind,"ax",%progbits
 1942              		.align	1
 1943              		.global	fs_rewind
 1944              		.syntax unified
 1945              		.thumb
 1946              		.thumb_func
 1947              		.fpu fpv4-sp-d16
 1949              	fs_rewind:
 1950              	.LVL174:
 1951              	.LFB22:
1650:rtos/uC-FS/Source/fs_api.c **** #endif
1651:rtos/uC-FS/Source/fs_api.c **** 
1652:rtos/uC-FS/Source/fs_api.c **** 
1653:rtos/uC-FS/Source/fs_api.c **** /*
1654:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1655:rtos/uC-FS/Source/fs_api.c **** *                                             fs_rewind()
1656:rtos/uC-FS/Source/fs_api.c **** *
1657:rtos/uC-FS/Source/fs_api.c **** * Description : Reset file position indicator of a file.
1658:rtos/uC-FS/Source/fs_api.c **** *
1659:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
1660:rtos/uC-FS/Source/fs_api.c **** *
1661:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : none.
1662:rtos/uC-FS/Source/fs_api.c **** *
1663:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'rewind() : DESCRIPTION' states that :
1664:rtos/uC-FS/Source/fs_api.c **** *
1665:rtos/uC-FS/Source/fs_api.c **** *                       "[T]he call 'rewind(stream)' shall be equivalent to '(void)fseek(stream, 0L
1666:rtos/uC-FS/Source/fs_api.c **** *                        except that 'rewind()' shall also clear the error indicator."
1667:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1668:rtos/uC-FS/Source/fs_api.c **** */
1669:rtos/uC-FS/Source/fs_api.c **** 
1670:rtos/uC-FS/Source/fs_api.c **** void  fs_rewind (FS_FILE  *p_file)
1671:rtos/uC-FS/Source/fs_api.c **** {
 1952              		.loc 1 1671 1 is_stmt 1 view -0
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 8
 1955              		@ frame_needed = 0, uses_anonymous_args = 0
1672:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 1956              		.loc 1 1672 5 view .LVU508
1673:rtos/uC-FS/Source/fs_api.c **** 
1674:rtos/uC-FS/Source/fs_api.c **** 
1675:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1676:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
ARM GAS  /tmp/ccYe7so7.s 			page 66


 1957              		.loc 1 1676 5 view .LVU509
 1958              		.loc 1 1676 8 is_stmt 0 view .LVU510
 1959 0000 68B1     		cbz	r0, .L202
1671:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 1960              		.loc 1 1671 1 view .LVU511
 1961 0002 10B5     		push	{r4, lr}
 1962              	.LCFI112:
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 4, -8
 1965              		.cfi_offset 14, -4
 1966 0004 82B0     		sub	sp, sp, #8
 1967              	.LCFI113:
 1968              		.cfi_def_cfa_offset 16
 1969 0006 0446     		mov	r4, r0
1677:rtos/uC-FS/Source/fs_api.c ****         return;
1678:rtos/uC-FS/Source/fs_api.c ****     }
1679:rtos/uC-FS/Source/fs_api.c **** #endif
1680:rtos/uC-FS/Source/fs_api.c **** 
1681:rtos/uC-FS/Source/fs_api.c ****     FSFile_ClrErr(p_file, &err);
 1970              		.loc 1 1681 5 is_stmt 1 view .LVU512
 1971 0008 0DF10601 		add	r1, sp, #6
 1972 000c FFF7FEFF 		bl	FSFile_ClrErr
 1973              	.LVL175:
1682:rtos/uC-FS/Source/fs_api.c ****     (void)fs_fseek(p_file, 0, (int)SEEK_SET);
 1974              		.loc 1 1682 5 view .LVU513
 1975              		.loc 1 1682 11 is_stmt 0 view .LVU514
 1976 0010 0022     		movs	r2, #0
 1977 0012 1146     		mov	r1, r2
 1978 0014 2046     		mov	r0, r4
 1979 0016 FFF7FEFF 		bl	fs_fseek
 1980              	.LVL176:
1683:rtos/uC-FS/Source/fs_api.c **** }
 1981              		.loc 1 1683 1 view .LVU515
 1982 001a 02B0     		add	sp, sp, #8
 1983              	.LCFI114:
 1984              		.cfi_def_cfa_offset 8
 1985              		@ sp needed
 1986 001c 10BD     		pop	{r4, pc}
 1987              	.LVL177:
 1988              	.L202:
 1989              	.LCFI115:
 1990              		.cfi_def_cfa_offset 0
 1991              		.cfi_restore 4
 1992              		.cfi_restore 14
 1993              		.loc 1 1683 1 view .LVU516
 1994 001e 7047     		bx	lr
 1995              		.cfi_endproc
 1996              	.LFE22:
 1998              		.section	.text.fs_setvbuf,"ax",%progbits
 1999              		.align	1
 2000              		.global	fs_setvbuf
 2001              		.syntax unified
 2002              		.thumb
 2003              		.thumb_func
 2004              		.fpu fpv4-sp-d16
 2006              	fs_setvbuf:
 2007              	.LVL178:
ARM GAS  /tmp/ccYe7so7.s 			page 67


 2008              	.LFB24:
1684:rtos/uC-FS/Source/fs_api.c **** 
1685:rtos/uC-FS/Source/fs_api.c **** 
1686:rtos/uC-FS/Source/fs_api.c **** /*
1687:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1688:rtos/uC-FS/Source/fs_api.c **** *                                             fs_setbuf()
1689:rtos/uC-FS/Source/fs_api.c **** *
1690:rtos/uC-FS/Source/fs_api.c **** * Description : Assign buffer to a file.
1691:rtos/uC-FS/Source/fs_api.c **** *
1692:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
1693:rtos/uC-FS/Source/fs_api.c **** *
1694:rtos/uC-FS/Source/fs_api.c **** *               p_buf       Pointer to buffer.
1695:rtos/uC-FS/Source/fs_api.c **** *
1696:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : none.
1697:rtos/uC-FS/Source/fs_api.c **** *
1698:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'setbuf() : DESCRIPTION' states that :
1699:rtos/uC-FS/Source/fs_api.c **** *
1700:rtos/uC-FS/Source/fs_api.c **** *                       "Except that it returns no value, the function call: 'setbuf(stream, buf)'
1701:rtos/uC-FS/Source/fs_api.c **** *                        shall be equivalent to: 'setvbuf(stream, buf, _IOFBF, BUFSIZ)' if 'buf' is
1702:rtos/uC-FS/Source/fs_api.c **** *                        null pointer"
1703:rtos/uC-FS/Source/fs_api.c **** *
1704:rtos/uC-FS/Source/fs_api.c **** *               (2) See 'fs_setvbuf()  Note(s)'.
1705:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1706:rtos/uC-FS/Source/fs_api.c **** */
1707:rtos/uC-FS/Source/fs_api.c **** 
1708:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_FILE_BUF_EN == DEF_ENABLED)
1709:rtos/uC-FS/Source/fs_api.c **** void  fs_setbuf (FS_FILE  *p_file,
1710:rtos/uC-FS/Source/fs_api.c ****                  char     *p_buf)
1711:rtos/uC-FS/Source/fs_api.c **** {
1712:rtos/uC-FS/Source/fs_api.c ****     int        mode;
1713:rtos/uC-FS/Source/fs_api.c ****     fs_size_t  size;
1714:rtos/uC-FS/Source/fs_api.c **** 
1715:rtos/uC-FS/Source/fs_api.c **** 
1716:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1717:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
1718:rtos/uC-FS/Source/fs_api.c ****         return;
1719:rtos/uC-FS/Source/fs_api.c ****     }
1720:rtos/uC-FS/Source/fs_api.c ****     if (p_buf == (char *)0) {
1721:rtos/uC-FS/Source/fs_api.c ****         return;
1722:rtos/uC-FS/Source/fs_api.c ****     }
1723:rtos/uC-FS/Source/fs_api.c **** #endif
1724:rtos/uC-FS/Source/fs_api.c **** 
1725:rtos/uC-FS/Source/fs_api.c ****     mode = (int      )FS__IOFBF;
1726:rtos/uC-FS/Source/fs_api.c ****     size = (fs_size_t)FS_BUFSIZ;
1727:rtos/uC-FS/Source/fs_api.c **** 
1728:rtos/uC-FS/Source/fs_api.c ****    (void)fs_setvbuf(p_file,
1729:rtos/uC-FS/Source/fs_api.c ****                     p_buf,
1730:rtos/uC-FS/Source/fs_api.c ****                     mode,
1731:rtos/uC-FS/Source/fs_api.c ****                     size);
1732:rtos/uC-FS/Source/fs_api.c **** }
1733:rtos/uC-FS/Source/fs_api.c **** #endif
1734:rtos/uC-FS/Source/fs_api.c **** 
1735:rtos/uC-FS/Source/fs_api.c **** 
1736:rtos/uC-FS/Source/fs_api.c **** /*
1737:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1738:rtos/uC-FS/Source/fs_api.c **** *                                            FS_setvbuf()
1739:rtos/uC-FS/Source/fs_api.c **** *
ARM GAS  /tmp/ccYe7so7.s 			page 68


1740:rtos/uC-FS/Source/fs_api.c **** * Description : Assign buffer to a file.
1741:rtos/uC-FS/Source/fs_api.c **** *
1742:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_file      Pointer to a file.
1743:rtos/uC-FS/Source/fs_api.c **** *
1744:rtos/uC-FS/Source/fs_api.c **** *               p_buf       Pointer to buffer.
1745:rtos/uC-FS/Source/fs_api.c **** *
1746:rtos/uC-FS/Source/fs_api.c **** *               mode        Buffer mode.
1747:rtos/uC-FS/Source/fs_api.c **** *
1748:rtos/uC-FS/Source/fs_api.c **** *               size        Size of buffer, in octets.
1749:rtos/uC-FS/Source/fs_api.c **** *
1750:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : -1, if an error occurs.
1751:rtos/uC-FS/Source/fs_api.c **** *                0, if no error occurs.
1752:rtos/uC-FS/Source/fs_api.c **** *
1753:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section 'setvbuf() : DESCRIPTION' states that :
1754:rtos/uC-FS/Source/fs_api.c **** *
1755:rtos/uC-FS/Source/fs_api.c **** *                   (a) "The setvbuf() function may be used after the stream pointed to by stream i
1756:rtos/uC-FS/Source/fs_api.c **** *                        associated with an open file but before any other operation (other than an
1757:rtos/uC-FS/Source/fs_api.c **** *                        unsuccessful call to setvbuf()) is performed on the stream."
1758:rtos/uC-FS/Source/fs_api.c **** *
1759:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The argument 'mode' determines how 'stream' will be buffered ... "
1760:rtos/uC-FS/Source/fs_api.c **** *
1761:rtos/uC-FS/Source/fs_api.c **** *                       (1) ... FS__IOFBF "causes input/output to be fully buffered".
1762:rtos/uC-FS/Source/fs_api.c **** *
1763:rtos/uC-FS/Source/fs_api.c **** *                       (2) ... FS__IONBF "causes input/output to be unbuffered".
1764:rtos/uC-FS/Source/fs_api.c **** *
1765:rtos/uC-FS/Source/fs_api.c **** *                       (3) No equivalent to '_IOLBF' is supported.
1766:rtos/uC-FS/Source/fs_api.c **** *
1767:rtos/uC-FS/Source/fs_api.c **** *                   (c) "If 'buf' is not a null pointer, the array it points to may be used instead
1768:rtos/uC-FS/Source/fs_api.c **** *                        buffer allocated by the 'setvbuf' function and the argument 'size' specifi
1769:rtos/uC-FS/Source/fs_api.c **** *                        size of the array ...."  This implementation REQUIRES that 'buf' not be a 
1770:rtos/uC-FS/Source/fs_api.c **** *                        pointer; the array 'buf' points to will always be used.
1771:rtos/uC-FS/Source/fs_api.c **** *
1772:rtos/uC-FS/Source/fs_api.c **** *                   (d) The function "returns zero on success, or nonzero if an invalid value is gi
1773:rtos/uC-FS/Source/fs_api.c **** *                       for 'mode' or if the request cannot be honored".
1774:rtos/uC-FS/Source/fs_api.c **** *
1775:rtos/uC-FS/Source/fs_api.c **** *               (2) 'size' MUST be more than or equal to the size of one sector & will be rounded D
1776:rtos/uC-FS/Source/fs_api.c **** *                   to the size of a number of full sectors.
1777:rtos/uC-FS/Source/fs_api.c **** *
1778:rtos/uC-FS/Source/fs_api.c **** *               (3) Once a buffer is assigned to a file, a new buffer may not be assigned nor may t
1779:rtos/uC-FS/Source/fs_api.c **** *                   assigned buffer be removed.  To change the buffer, the file should be closed &
1780:rtos/uC-FS/Source/fs_api.c **** *                   re-opened.
1781:rtos/uC-FS/Source/fs_api.c **** *
1782:rtos/uC-FS/Source/fs_api.c **** *               (4) Upon power loss, any data stored in file buffers will be lost.
1783:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1784:rtos/uC-FS/Source/fs_api.c **** */
1785:rtos/uC-FS/Source/fs_api.c **** 
1786:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_FILE_BUF_EN == DEF_ENABLED)
1787:rtos/uC-FS/Source/fs_api.c **** int  fs_setvbuf (FS_FILE    *p_file,
1788:rtos/uC-FS/Source/fs_api.c ****                  char       *p_buf,
1789:rtos/uC-FS/Source/fs_api.c ****                  int         mode,
1790:rtos/uC-FS/Source/fs_api.c ****                  fs_size_t   size)
1791:rtos/uC-FS/Source/fs_api.c **** {
 2009              		.loc 1 1791 1 is_stmt 1 view -0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 8
 2012              		@ frame_needed = 0, uses_anonymous_args = 0
1792:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
ARM GAS  /tmp/ccYe7so7.s 			page 69


 2013              		.loc 1 1792 5 view .LVU518
1793:rtos/uC-FS/Source/fs_api.c ****     int     rtn;
 2014              		.loc 1 1793 5 view .LVU519
1794:rtos/uC-FS/Source/fs_api.c **** 
1795:rtos/uC-FS/Source/fs_api.c **** 
1796:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1797:rtos/uC-FS/Source/fs_api.c ****     if (p_file == (FS_FILE *)0) {                               /* Validate pointer to file        
 2015              		.loc 1 1797 5 view .LVU520
 2016              		.loc 1 1797 8 is_stmt 0 view .LVU521
 2017 0000 78B1     		cbz	r0, .L207
1791:rtos/uC-FS/Source/fs_api.c ****     FS_ERR  err;
 2018              		.loc 1 1791 1 view .LVU522
 2019 0002 10B5     		push	{r4, lr}
 2020              	.LCFI116:
 2021              		.cfi_def_cfa_offset 8
 2022              		.cfi_offset 4, -8
 2023              		.cfi_offset 14, -4
 2024 0004 84B0     		sub	sp, sp, #16
 2025              	.LCFI117:
 2026              		.cfi_def_cfa_offset 24
 2027 0006 0446     		mov	r4, r0
1798:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
1799:rtos/uC-FS/Source/fs_api.c ****     }
1800:rtos/uC-FS/Source/fs_api.c ****     if (p_buf == (char *)0) {
 2028              		.loc 1 1800 5 is_stmt 1 view .LVU523
 2029              		.loc 1 1800 8 is_stmt 0 view .LVU524
 2030 0008 71B1     		cbz	r1, .L208
1801:rtos/uC-FS/Source/fs_api.c ****         return ((int)-1);
1802:rtos/uC-FS/Source/fs_api.c ****     }
1803:rtos/uC-FS/Source/fs_api.c **** #endif
1804:rtos/uC-FS/Source/fs_api.c **** 
1805:rtos/uC-FS/Source/fs_api.c ****     FSFile_BufAssign(               p_file,
 2031              		.loc 1 1805 5 is_stmt 1 view .LVU525
 2032 000a 0DF10E00 		add	r0, sp, #14
 2033              	.LVL179:
 2034              		.loc 1 1805 5 is_stmt 0 view .LVU526
 2035 000e 0090     		str	r0, [sp]
 2036 0010 2046     		mov	r0, r4
 2037 0012 FFF7FEFF 		bl	FSFile_BufAssign
 2038              	.LVL180:
1806:rtos/uC-FS/Source/fs_api.c ****                      (void       *) p_buf,
1807:rtos/uC-FS/Source/fs_api.c ****                      (FS_FLAGS    ) mode,
1808:rtos/uC-FS/Source/fs_api.c ****                      (CPU_SIZE_T  ) size,
1809:rtos/uC-FS/Source/fs_api.c ****                                    &err);
1810:rtos/uC-FS/Source/fs_api.c **** 
1811:rtos/uC-FS/Source/fs_api.c ****     rtn = (err == FS_ERR_NONE) ? ((int)0) : ((int)FS_STDIO_ERR);
 2039              		.loc 1 1811 5 is_stmt 1 view .LVU527
 2040              		.loc 1 1811 16 is_stmt 0 view .LVU528
 2041 0016 BDF80E30 		ldrh	r3, [sp, #14]
 2042              		.loc 1 1811 43 view .LVU529
 2043 001a 43B9     		cbnz	r3, .L209
 2044 001c 0020     		movs	r0, #0
 2045              	.L205:
1812:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
1813:rtos/uC-FS/Source/fs_api.c **** }
 2046              		.loc 1 1813 1 view .LVU530
 2047 001e 04B0     		add	sp, sp, #16
ARM GAS  /tmp/ccYe7so7.s 			page 70


 2048              	.LCFI118:
 2049              		.cfi_def_cfa_offset 8
 2050              		@ sp needed
 2051 0020 10BD     		pop	{r4, pc}
 2052              	.LVL181:
 2053              	.L207:
 2054              	.LCFI119:
 2055              		.cfi_def_cfa_offset 0
 2056              		.cfi_restore 4
 2057              		.cfi_restore 14
1798:rtos/uC-FS/Source/fs_api.c ****     }
 2058              		.loc 1 1798 16 view .LVU531
 2059 0022 4FF0FF30 		mov	r0, #-1
 2060              	.LVL182:
 2061              		.loc 1 1813 1 view .LVU532
 2062 0026 7047     		bx	lr
 2063              	.LVL183:
 2064              	.L208:
 2065              	.LCFI120:
 2066              		.cfi_def_cfa_offset 24
 2067              		.cfi_offset 4, -8
 2068              		.cfi_offset 14, -4
1801:rtos/uC-FS/Source/fs_api.c ****     }
 2069              		.loc 1 1801 16 view .LVU533
 2070 0028 4FF0FF30 		mov	r0, #-1
 2071              	.LVL184:
1801:rtos/uC-FS/Source/fs_api.c ****     }
 2072              		.loc 1 1801 16 view .LVU534
 2073 002c F7E7     		b	.L205
 2074              	.LVL185:
 2075              	.L209:
1811:rtos/uC-FS/Source/fs_api.c ****     return (rtn);
 2076              		.loc 1 1811 43 view .LVU535
 2077 002e 4FF0FF30 		mov	r0, #-1
 2078 0032 F4E7     		b	.L205
 2079              		.cfi_endproc
 2080              	.LFE24:
 2082              		.section	.text.fs_setbuf,"ax",%progbits
 2083              		.align	1
 2084              		.global	fs_setbuf
 2085              		.syntax unified
 2086              		.thumb
 2087              		.thumb_func
 2088              		.fpu fpv4-sp-d16
 2090              	fs_setbuf:
 2091              	.LVL186:
 2092              	.LFB23:
1711:rtos/uC-FS/Source/fs_api.c ****     int        mode;
 2093              		.loc 1 1711 1 is_stmt 1 view -0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 0
 2096              		@ frame_needed = 0, uses_anonymous_args = 0
1712:rtos/uC-FS/Source/fs_api.c ****     fs_size_t  size;
 2097              		.loc 1 1712 5 view .LVU537
1713:rtos/uC-FS/Source/fs_api.c **** 
 2098              		.loc 1 1713 5 view .LVU538
1717:rtos/uC-FS/Source/fs_api.c ****         return;
ARM GAS  /tmp/ccYe7so7.s 			page 71


 2099              		.loc 1 1717 5 view .LVU539
1717:rtos/uC-FS/Source/fs_api.c ****         return;
 2100              		.loc 1 1717 8 is_stmt 0 view .LVU540
 2101 0000 38B1     		cbz	r0, .L217
1711:rtos/uC-FS/Source/fs_api.c ****     int        mode;
 2102              		.loc 1 1711 1 view .LVU541
 2103 0002 10B5     		push	{r4, lr}
 2104              	.LCFI121:
 2105              		.cfi_def_cfa_offset 8
 2106              		.cfi_offset 4, -8
 2107              		.cfi_offset 14, -4
1720:rtos/uC-FS/Source/fs_api.c ****         return;
 2108              		.loc 1 1720 5 is_stmt 1 view .LVU542
1720:rtos/uC-FS/Source/fs_api.c ****         return;
 2109              		.loc 1 1720 8 is_stmt 0 view .LVU543
 2110 0004 21B1     		cbz	r1, .L214
1725:rtos/uC-FS/Source/fs_api.c ****     size = (fs_size_t)FS_BUFSIZ;
 2111              		.loc 1 1725 5 is_stmt 1 view .LVU544
 2112              	.LVL187:
1726:rtos/uC-FS/Source/fs_api.c **** 
 2113              		.loc 1 1726 5 view .LVU545
1728:rtos/uC-FS/Source/fs_api.c ****                     p_buf,
 2114              		.loc 1 1728 4 view .LVU546
1728:rtos/uC-FS/Source/fs_api.c ****                     p_buf,
 2115              		.loc 1 1728 10 is_stmt 0 view .LVU547
 2116 0006 4FF48053 		mov	r3, #4096
 2117 000a 0322     		movs	r2, #3
 2118 000c FFF7FEFF 		bl	fs_setvbuf
 2119              	.LVL188:
 2120              	.L214:
1732:rtos/uC-FS/Source/fs_api.c **** #endif
 2121              		.loc 1 1732 1 view .LVU548
 2122 0010 10BD     		pop	{r4, pc}
 2123              	.LVL189:
 2124              	.L217:
 2125              	.LCFI122:
 2126              		.cfi_def_cfa_offset 0
 2127              		.cfi_restore 4
 2128              		.cfi_restore 14
1732:rtos/uC-FS/Source/fs_api.c **** #endif
 2129              		.loc 1 1732 1 view .LVU549
 2130 0012 7047     		bx	lr
 2131              		.cfi_endproc
 2132              	.LFE23:
 2134              		.section	.text.fs_asctime_r,"ax",%progbits
 2135              		.align	1
 2136              		.global	fs_asctime_r
 2137              		.syntax unified
 2138              		.thumb
 2139              		.thumb_func
 2140              		.fpu fpv4-sp-d16
 2142              	fs_asctime_r:
 2143              	.LVL190:
 2144              	.LFB25:
1814:rtos/uC-FS/Source/fs_api.c **** #endif
1815:rtos/uC-FS/Source/fs_api.c **** 
1816:rtos/uC-FS/Source/fs_api.c **** 
ARM GAS  /tmp/ccYe7so7.s 			page 72


1817:rtos/uC-FS/Source/fs_api.c **** /*
1818:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1819:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1820:rtos/uC-FS/Source/fs_api.c **** *                                           TIME FUNCTIONS
1821:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1822:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1823:rtos/uC-FS/Source/fs_api.c **** */
1824:rtos/uC-FS/Source/fs_api.c **** 
1825:rtos/uC-FS/Source/fs_api.c **** /*
1826:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1827:rtos/uC-FS/Source/fs_api.c **** *                                           fs_asctime_r()
1828:rtos/uC-FS/Source/fs_api.c **** *
1829:rtos/uC-FS/Source/fs_api.c **** * Description : Convert date/time to string.
1830:rtos/uC-FS/Source/fs_api.c **** *
1831:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_time      Pointer to date/time to format.
1832:rtos/uC-FS/Source/fs_api.c **** *
1833:rtos/uC-FS/Source/fs_api.c **** *               str_time    String buffer that will receive the date/time string (see Note #1).
1834:rtos/uC-FS/Source/fs_api.c **** *
1835:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : Pointer to 'p_time', if NO errors.
1836:rtos/uC-FS/Source/fs_api.c **** *               Pointer to NULL,     otherwise.
1837:rtos/uC-FS/Source/fs_api.c **** *
1838:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) 'buf' MUST be at least 26 characters long.  Buffer overruns MUST be prevented b
1839:rtos/uC-FS/Source/fs_api.c **** *
1840:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'asctime() : DESCRIPTION' states that :
1841:rtos/uC-FS/Source/fs_api.c **** *
1842:rtos/uC-FS/Source/fs_api.c **** *                   (a) "The 'asctime()' function shall convert the broken-down time in the structu
1843:rtos/uC-FS/Source/fs_api.c **** *                        pointed to by 'timeptr' into a string in the form:
1844:rtos/uC-FS/Source/fs_api.c **** *
1845:rtos/uC-FS/Source/fs_api.c **** *                           Sun Sep 16 01:03:52 1973\n\0
1846:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1847:rtos/uC-FS/Source/fs_api.c **** */
1848:rtos/uC-FS/Source/fs_api.c **** 
1849:rtos/uC-FS/Source/fs_api.c **** char  *fs_asctime_r (const  struct  fs_tm  *p_time,
1850:rtos/uC-FS/Source/fs_api.c ****                                     char   *str_time)
1851:rtos/uC-FS/Source/fs_api.c **** {
 2145              		.loc 1 1851 1 is_stmt 1 view -0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 24
 2148              		@ frame_needed = 0, uses_anonymous_args = 0
 2149              		.loc 1 1851 1 is_stmt 0 view .LVU551
 2150 0000 10B5     		push	{r4, lr}
 2151              	.LCFI123:
 2152              		.cfi_def_cfa_offset 8
 2153              		.cfi_offset 4, -8
 2154              		.cfi_offset 14, -4
 2155 0002 86B0     		sub	sp, sp, #24
 2156              	.LCFI124:
 2157              		.cfi_def_cfa_offset 32
 2158 0004 0C46     		mov	r4, r1
1852:rtos/uC-FS/Source/fs_api.c ****     CLK_DATE_TIME stime;
 2159              		.loc 1 1852 5 is_stmt 1 view .LVU552
1853:rtos/uC-FS/Source/fs_api.c ****     CPU_BOOLEAN   conv_success;
 2160              		.loc 1 1853 5 view .LVU553
1854:rtos/uC-FS/Source/fs_api.c **** 
1855:rtos/uC-FS/Source/fs_api.c **** 
1856:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                          /* --------------- VALIDATE
1857:rtos/uC-FS/Source/fs_api.c ****     if (p_time == (struct fs_tm *)0) {                                  /* Validate broken-down tim
ARM GAS  /tmp/ccYe7so7.s 			page 73


 2161              		.loc 1 1857 5 view .LVU554
 2162              		.loc 1 1857 8 is_stmt 0 view .LVU555
 2163 0006 F0B1     		cbz	r0, .L220
1858:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
1859:rtos/uC-FS/Source/fs_api.c ****     }
1860:rtos/uC-FS/Source/fs_api.c ****     if (str_time == (char *)0) {                                        /* Validate string buffer. 
 2164              		.loc 1 1860 5 is_stmt 1 view .LVU556
 2165              		.loc 1 1860 8 is_stmt 0 view .LVU557
 2166 0008 FCB1     		cbz	r4, .L223
1861:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
1862:rtos/uC-FS/Source/fs_api.c ****     }
1863:rtos/uC-FS/Source/fs_api.c **** #endif
1864:rtos/uC-FS/Source/fs_api.c **** 
1865:rtos/uC-FS/Source/fs_api.c **** 
1866:rtos/uC-FS/Source/fs_api.c **** 
1867:rtos/uC-FS/Source/fs_api.c ****                                                                         /* --------------- FMT DATE
1868:rtos/uC-FS/Source/fs_api.c ****     stime.Sec     = (CPU_INT08U)p_time->tm_sec;
 2167              		.loc 1 1868 5 is_stmt 1 view .LVU558
 2168              		.loc 1 1868 21 is_stmt 0 view .LVU559
 2169 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2170              		.loc 1 1868 19 view .LVU560
 2171 000c 8DF81030 		strb	r3, [sp, #16]
1869:rtos/uC-FS/Source/fs_api.c ****     stime.Min     = (CPU_INT08U)p_time->tm_min;
 2172              		.loc 1 1869 5 is_stmt 1 view .LVU561
 2173              		.loc 1 1869 21 is_stmt 0 view .LVU562
 2174 0010 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2175              		.loc 1 1869 19 view .LVU563
 2176 0012 8DF80F30 		strb	r3, [sp, #15]
1870:rtos/uC-FS/Source/fs_api.c ****     stime.Hr      = (CPU_INT08U)p_time->tm_hour;
 2177              		.loc 1 1870 5 is_stmt 1 view .LVU564
 2178              		.loc 1 1870 21 is_stmt 0 view .LVU565
 2179 0016 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 2180              		.loc 1 1870 19 view .LVU566
 2181 0018 8DF80E30 		strb	r3, [sp, #14]
1871:rtos/uC-FS/Source/fs_api.c ****     stime.Day     = (CPU_INT08U)p_time->tm_mday;
 2182              		.loc 1 1871 5 is_stmt 1 view .LVU567
 2183              		.loc 1 1871 21 is_stmt 0 view .LVU568
 2184 001c 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 2185              		.loc 1 1871 19 view .LVU569
 2186 001e ADF80830 		strh	r3, [sp, #8]	@ movhi
1872:rtos/uC-FS/Source/fs_api.c ****     stime.Month   = (CPU_INT08U)p_time->tm_mon;
 2187              		.loc 1 1872 5 is_stmt 1 view .LVU570
 2188              		.loc 1 1872 21 is_stmt 0 view .LVU571
 2189 0022 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 2190              		.loc 1 1872 19 view .LVU572
 2191 0024 8DF80630 		strb	r3, [sp, #6]
1873:rtos/uC-FS/Source/fs_api.c ****     stime.Yr      = (CPU_INT08U)p_time->tm_year;
 2192              		.loc 1 1873 5 is_stmt 1 view .LVU573
 2193              		.loc 1 1873 21 is_stmt 0 view .LVU574
 2194 0028 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 2195              		.loc 1 1873 19 view .LVU575
 2196 002a ADF80430 		strh	r3, [sp, #4]	@ movhi
1874:rtos/uC-FS/Source/fs_api.c ****     stime.DayOfWk = (CPU_INT08U)p_time->tm_wday;
 2197              		.loc 1 1874 5 is_stmt 1 view .LVU576
 2198              		.loc 1 1874 21 is_stmt 0 view .LVU577
 2199 002e 037E     		ldrb	r3, [r0, #24]	@ zero_extendqisi2
 2200              		.loc 1 1874 19 view .LVU578
ARM GAS  /tmp/ccYe7so7.s 			page 74


 2201 0030 ADF80A30 		strh	r3, [sp, #10]	@ movhi
1875:rtos/uC-FS/Source/fs_api.c **** 
1876:rtos/uC-FS/Source/fs_api.c ****     conv_success =  Clk_DateTimeToStr(            &stime,
 2202              		.loc 1 1876 5 is_stmt 1 view .LVU579
 2203              		.loc 1 1876 21 is_stmt 0 view .LVU580
 2204 0034 1923     		movs	r3, #25
 2205 0036 2246     		mov	r2, r4
 2206 0038 0721     		movs	r1, #7
 2207              	.LVL191:
 2208              		.loc 1 1876 21 view .LVU581
 2209 003a 01A8     		add	r0, sp, #4
 2210              	.LVL192:
 2211              		.loc 1 1876 21 view .LVU582
 2212 003c FFF7FEFF 		bl	Clk_DateTimeToStr
 2213              	.LVL193:
1877:rtos/uC-FS/Source/fs_api.c ****                                                    FS_TIME_FMT,
1878:rtos/uC-FS/Source/fs_api.c ****                                       (CPU_CHAR *) str_time,
1879:rtos/uC-FS/Source/fs_api.c ****                                                    FS_TIME_STR_MIN_LEN);
1880:rtos/uC-FS/Source/fs_api.c **** 
1881:rtos/uC-FS/Source/fs_api.c ****     if (conv_success != DEF_YES) {
 2214              		.loc 1 1881 5 is_stmt 1 view .LVU583
 2215              		.loc 1 1881 8 is_stmt 0 view .LVU584
 2216 0040 0128     		cmp	r0, #1
 2217 0042 04D1     		bne	.L224
1882:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
1883:rtos/uC-FS/Source/fs_api.c ****     }
1884:rtos/uC-FS/Source/fs_api.c **** 
1885:rtos/uC-FS/Source/fs_api.c ****     return (str_time);
 2218              		.loc 1 1885 12 view .LVU585
 2219 0044 2046     		mov	r0, r4
 2220              	.LVL194:
 2221              	.L220:
1886:rtos/uC-FS/Source/fs_api.c **** }
 2222              		.loc 1 1886 1 view .LVU586
 2223 0046 06B0     		add	sp, sp, #24
 2224              	.LCFI125:
 2225              		.cfi_remember_state
 2226              		.cfi_def_cfa_offset 8
 2227              		@ sp needed
 2228 0048 10BD     		pop	{r4, pc}
 2229              	.LVL195:
 2230              	.L223:
 2231              	.LCFI126:
 2232              		.cfi_restore_state
1861:rtos/uC-FS/Source/fs_api.c ****     }
 2233              		.loc 1 1861 16 view .LVU587
 2234 004a 2046     		mov	r0, r4
 2235              	.LVL196:
1861:rtos/uC-FS/Source/fs_api.c ****     }
 2236              		.loc 1 1861 16 view .LVU588
 2237 004c FBE7     		b	.L220
 2238              	.LVL197:
 2239              	.L224:
1882:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
 2240              		.loc 1 1882 16 view .LVU589
 2241 004e 0020     		movs	r0, #0
 2242              	.LVL198:
ARM GAS  /tmp/ccYe7so7.s 			page 75


1882:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
 2243              		.loc 1 1882 16 view .LVU590
 2244 0050 F9E7     		b	.L220
 2245              		.cfi_endproc
 2246              	.LFE25:
 2248              		.section	.text.fs_ctime_r,"ax",%progbits
 2249              		.align	1
 2250              		.global	fs_ctime_r
 2251              		.syntax unified
 2252              		.thumb
 2253              		.thumb_func
 2254              		.fpu fpv4-sp-d16
 2256              	fs_ctime_r:
 2257              	.LVL199:
 2258              	.LFB26:
1887:rtos/uC-FS/Source/fs_api.c **** 
1888:rtos/uC-FS/Source/fs_api.c **** 
1889:rtos/uC-FS/Source/fs_api.c **** /*
1890:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1891:rtos/uC-FS/Source/fs_api.c **** *                                            fs_ctime_r()
1892:rtos/uC-FS/Source/fs_api.c **** *
1893:rtos/uC-FS/Source/fs_api.c **** * Description : Convert timestamp to string.
1894:rtos/uC-FS/Source/fs_api.c **** *
1895:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_ts        Pointer to timestamp to format.
1896:rtos/uC-FS/Source/fs_api.c **** *
1897:rtos/uC-FS/Source/fs_api.c **** *               str_time   String buffer that will receive the date/time string (see Note #1).
1898:rtos/uC-FS/Source/fs_api.c **** *
1899:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : Pointer to 'p_ts', if NO errors.
1900:rtos/uC-FS/Source/fs_api.c **** *               Pointer to NULL,   otherwise.
1901:rtos/uC-FS/Source/fs_api.c **** *
1902:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) 'buf' MUST be at least 26 characters long.  buffer overruns MUST be prevented b
1903:rtos/uC-FS/Source/fs_api.c **** *
1904:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'ctime() : DESCRIPTION' states that :
1905:rtos/uC-FS/Source/fs_api.c **** *
1906:rtos/uC-FS/Source/fs_api.c **** *                   (a) 'ctime' "shall be equivalent to:  'asctime(localtime(clock))'".
1907:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1908:rtos/uC-FS/Source/fs_api.c **** */
1909:rtos/uC-FS/Source/fs_api.c **** 
1910:rtos/uC-FS/Source/fs_api.c **** char  *fs_ctime_r (const  fs_time_t  *p_ts,
1911:rtos/uC-FS/Source/fs_api.c ****                           char       *str_time)
1912:rtos/uC-FS/Source/fs_api.c **** {
 2259              		.loc 1 1912 1 is_stmt 1 view -0
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 24
 2262              		@ frame_needed = 0, uses_anonymous_args = 0
1913:rtos/uC-FS/Source/fs_api.c ****     CLK_TS_SEC     ts;
 2263              		.loc 1 1913 5 view .LVU592
1914:rtos/uC-FS/Source/fs_api.c ****     CLK_DATE_TIME  stime;
 2264              		.loc 1 1914 5 view .LVU593
1915:rtos/uC-FS/Source/fs_api.c ****     CPU_BOOLEAN    success;
 2265              		.loc 1 1915 5 view .LVU594
1916:rtos/uC-FS/Source/fs_api.c **** 
1917:rtos/uC-FS/Source/fs_api.c **** 
1918:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1919:rtos/uC-FS/Source/fs_api.c ****     if (p_ts == (const fs_time_t *)0) {                         /* Validate time val ptr.          
 2266              		.loc 1 1919 5 view .LVU595
 2267              		.loc 1 1919 8 is_stmt 0 view .LVU596
ARM GAS  /tmp/ccYe7so7.s 			page 76


 2268 0000 A0B1     		cbz	r0, .L228
1912:rtos/uC-FS/Source/fs_api.c ****     CLK_TS_SEC     ts;
 2269              		.loc 1 1912 1 view .LVU597
 2270 0002 10B5     		push	{r4, lr}
 2271              	.LCFI127:
 2272              		.cfi_def_cfa_offset 8
 2273              		.cfi_offset 4, -8
 2274              		.cfi_offset 14, -4
 2275 0004 86B0     		sub	sp, sp, #24
 2276              	.LCFI128:
 2277              		.cfi_def_cfa_offset 32
 2278 0006 0C46     		mov	r4, r1
1920:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
1921:rtos/uC-FS/Source/fs_api.c ****     }
1922:rtos/uC-FS/Source/fs_api.c ****     if (str_time == (char *)0) {                                /* Validate string buffer.         
 2279              		.loc 1 1922 5 is_stmt 1 view .LVU598
 2280              		.loc 1 1922 8 is_stmt 0 view .LVU599
 2281 0008 89B1     		cbz	r1, .L229
1923:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
1924:rtos/uC-FS/Source/fs_api.c ****     }
1925:rtos/uC-FS/Source/fs_api.c **** #endif
1926:rtos/uC-FS/Source/fs_api.c **** 
1927:rtos/uC-FS/Source/fs_api.c **** 
1928:rtos/uC-FS/Source/fs_api.c **** 
1929:rtos/uC-FS/Source/fs_api.c ****                                                                 /* ------------------- FMT DATE/TIM
1930:rtos/uC-FS/Source/fs_api.c ****     ts      = (CLK_TS_SEC)*p_ts;
 2282              		.loc 1 1930 5 is_stmt 1 view .LVU600
 2283              	.LVL200:
1931:rtos/uC-FS/Source/fs_api.c **** 
1932:rtos/uC-FS/Source/fs_api.c ****     success = Clk_TS_UnixToDateTime(              ts,
 2284              		.loc 1 1932 5 view .LVU601
 2285              		.loc 1 1932 15 is_stmt 0 view .LVU602
 2286 000a 01AA     		add	r2, sp, #4
 2287 000c 0021     		movs	r1, #0
 2288              	.LVL201:
 2289              		.loc 1 1932 15 view .LVU603
 2290 000e 0068     		ldr	r0, [r0]
 2291              	.LVL202:
 2292              		.loc 1 1932 15 view .LVU604
 2293 0010 FFF7FEFF 		bl	Clk_TS_UnixToDateTime
 2294              	.LVL203:
1933:rtos/uC-FS/Source/fs_api.c ****                                     (CLK_TZ_SEC)  0,
1934:rtos/uC-FS/Source/fs_api.c ****                                                  &stime);
1935:rtos/uC-FS/Source/fs_api.c ****     if (success != DEF_YES) {
 2295              		.loc 1 1935 5 is_stmt 1 view .LVU605
 2296              		.loc 1 1935 8 is_stmt 0 view .LVU606
 2297 0014 0128     		cmp	r0, #1
 2298 0016 0CD1     		bne	.L230
1936:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
1937:rtos/uC-FS/Source/fs_api.c ****     }
1938:rtos/uC-FS/Source/fs_api.c **** 
1939:rtos/uC-FS/Source/fs_api.c ****     success = Clk_DateTimeToStr(            &stime,
 2299              		.loc 1 1939 5 is_stmt 1 view .LVU607
 2300              		.loc 1 1939 15 is_stmt 0 view .LVU608
 2301 0018 1923     		movs	r3, #25
 2302 001a 2246     		mov	r2, r4
 2303 001c 0721     		movs	r1, #7
ARM GAS  /tmp/ccYe7so7.s 			page 77


 2304 001e 01A8     		add	r0, sp, #4
 2305              	.LVL204:
 2306              		.loc 1 1939 15 view .LVU609
 2307 0020 FFF7FEFF 		bl	Clk_DateTimeToStr
 2308              	.LVL205:
1940:rtos/uC-FS/Source/fs_api.c ****                                              FS_TIME_FMT,
1941:rtos/uC-FS/Source/fs_api.c ****                                 (CPU_CHAR *) str_time,
1942:rtos/uC-FS/Source/fs_api.c ****                                              FS_TIME_STR_MIN_LEN);
1943:rtos/uC-FS/Source/fs_api.c ****     if (success != DEF_YES) {
 2309              		.loc 1 1943 5 is_stmt 1 view .LVU610
 2310              		.loc 1 1943 8 is_stmt 0 view .LVU611
 2311 0024 0128     		cmp	r0, #1
 2312 0026 07D1     		bne	.L231
1944:rtos/uC-FS/Source/fs_api.c ****         return ((char *)0);
1945:rtos/uC-FS/Source/fs_api.c ****     }
1946:rtos/uC-FS/Source/fs_api.c **** 
1947:rtos/uC-FS/Source/fs_api.c **** 
1948:rtos/uC-FS/Source/fs_api.c ****     return (str_time);
 2313              		.loc 1 1948 12 view .LVU612
 2314 0028 2046     		mov	r0, r4
 2315              	.LVL206:
 2316              		.loc 1 1948 12 view .LVU613
 2317 002a 03E0     		b	.L226
 2318              	.LVL207:
 2319              	.L228:
 2320              	.LCFI129:
 2321              		.cfi_def_cfa_offset 0
 2322              		.cfi_restore 4
 2323              		.cfi_restore 14
1949:rtos/uC-FS/Source/fs_api.c **** }
 2324              		.loc 1 1949 1 view .LVU614
 2325 002c 7047     		bx	lr
 2326              	.L229:
 2327              	.LCFI130:
 2328              		.cfi_def_cfa_offset 32
 2329              		.cfi_offset 4, -8
 2330              		.cfi_offset 14, -4
1923:rtos/uC-FS/Source/fs_api.c ****     }
 2331              		.loc 1 1923 16 view .LVU615
 2332 002e 0846     		mov	r0, r1
 2333              	.LVL208:
1923:rtos/uC-FS/Source/fs_api.c ****     }
 2334              		.loc 1 1923 16 view .LVU616
 2335 0030 00E0     		b	.L226
 2336              	.LVL209:
 2337              	.L230:
1936:rtos/uC-FS/Source/fs_api.c ****     }
 2338              		.loc 1 1936 16 view .LVU617
 2339 0032 0020     		movs	r0, #0
 2340              	.LVL210:
 2341              	.L226:
 2342              		.loc 1 1949 1 view .LVU618
 2343 0034 06B0     		add	sp, sp, #24
 2344              	.LCFI131:
 2345              		.cfi_remember_state
 2346              		.cfi_def_cfa_offset 8
 2347              		@ sp needed
ARM GAS  /tmp/ccYe7so7.s 			page 78


 2348 0036 10BD     		pop	{r4, pc}
 2349              	.LVL211:
 2350              	.L231:
 2351              	.LCFI132:
 2352              		.cfi_restore_state
1944:rtos/uC-FS/Source/fs_api.c ****     }
 2353              		.loc 1 1944 16 view .LVU619
 2354 0038 0020     		movs	r0, #0
 2355              	.LVL212:
1944:rtos/uC-FS/Source/fs_api.c ****     }
 2356              		.loc 1 1944 16 view .LVU620
 2357 003a FBE7     		b	.L226
 2358              		.cfi_endproc
 2359              	.LFE26:
 2361              		.section	.text.fs_localtime_r,"ax",%progbits
 2362              		.align	1
 2363              		.global	fs_localtime_r
 2364              		.syntax unified
 2365              		.thumb
 2366              		.thumb_func
 2367              		.fpu fpv4-sp-d16
 2369              	fs_localtime_r:
 2370              	.LVL213:
 2371              	.LFB27:
1950:rtos/uC-FS/Source/fs_api.c **** 
1951:rtos/uC-FS/Source/fs_api.c **** 
1952:rtos/uC-FS/Source/fs_api.c **** /*
1953:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1954:rtos/uC-FS/Source/fs_api.c **** *                                          fs_localtime_r()
1955:rtos/uC-FS/Source/fs_api.c **** *
1956:rtos/uC-FS/Source/fs_api.c **** * Description : Convert timestamp to date/time.
1957:rtos/uC-FS/Source/fs_api.c **** *
1958:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_ts        Pointer to timestamp to convert.
1959:rtos/uC-FS/Source/fs_api.c **** *
1960:rtos/uC-FS/Source/fs_api.c **** *               p_time      Pointer to variable that will receive the date/time.
1961:rtos/uC-FS/Source/fs_api.c **** *
1962:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : Pointer to 'p_time', if NO errors.
1963:rtos/uC-FS/Source/fs_api.c **** *               Pointer to NULL,     otherwise.
1964:rtos/uC-FS/Source/fs_api.c **** *
1965:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) IEEE Std 1003.1, 2004 Edition, Section '4.14 Seconds Since the Epoch()' states 
1966:rtos/uC-FS/Source/fs_api.c **** *
1967:rtos/uC-FS/Source/fs_api.c **** *                   (a) "If the year is <1970 or the value is negative, the relationship is undefin
1968:rtos/uC-FS/Source/fs_api.c **** *                        If the year is >=1970  and the value is non-negative, the value is related
1969:rtos/uC-FS/Source/fs_api.c **** *                        coordinated universal time name according to the C-language expression, wh
1970:rtos/uC-FS/Source/fs_api.c **** *                        tm_sec, tm_min, tm_hour, tm_yday, and tm_year are all integer types:
1971:rtos/uC-FS/Source/fs_api.c **** *
1972:rtos/uC-FS/Source/fs_api.c **** *                            tm_sec + tm_min*60 + tm_hour*3600 + tm_yday*86400 +
1973:rtos/uC-FS/Source/fs_api.c **** *                           (tm_year-70)*31536000 + ((tm_year-69)/4)*86400 -
1974:rtos/uC-FS/Source/fs_api.c **** *                           ((tm_year-1)/100)*86400 + ((tm_year+299)/400)*86400"
1975:rtos/uC-FS/Source/fs_api.c **** *
1976:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The relationship between the actual time of day and the current value for
1977:rtos/uC-FS/Source/fs_api.c **** *                        seconds since the Epoch is unspecified."
1978:rtos/uC-FS/Source/fs_api.c **** *
1979:rtos/uC-FS/Source/fs_api.c **** *               (2) The expression for the time value can be rewritten :
1980:rtos/uC-FS/Source/fs_api.c **** *
1981:rtos/uC-FS/Source/fs_api.c **** *                       time_val = tm_sec + 60 * (tm_min  +
1982:rtos/uC-FS/Source/fs_api.c **** *                                           60 * (tm_hour +
ARM GAS  /tmp/ccYe7so7.s 			page 79


1983:rtos/uC-FS/Source/fs_api.c **** *                                           24 * (tm_yday + ((tm_year-69)/4) - ((tm_year-1)/100) + 
1984:rtos/uC-FS/Source/fs_api.c **** *                                          365 * (tm_year - 70))))
1985:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
1986:rtos/uC-FS/Source/fs_api.c **** */
1987:rtos/uC-FS/Source/fs_api.c **** 
1988:rtos/uC-FS/Source/fs_api.c **** struct  fs_tm  *fs_localtime_r (const  fs_time_t      *p_ts,
1989:rtos/uC-FS/Source/fs_api.c ****                                        struct  fs_tm  *p_time)
1990:rtos/uC-FS/Source/fs_api.c **** {
 2372              		.loc 1 1990 1 is_stmt 1 view -0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 24
 2375              		@ frame_needed = 0, uses_anonymous_args = 0
1991:rtos/uC-FS/Source/fs_api.c ****     CLK_DATE_TIME stime;
 2376              		.loc 1 1991 5 view .LVU622
1992:rtos/uC-FS/Source/fs_api.c ****     CLK_TS_SEC    ts;
 2377              		.loc 1 1992 5 view .LVU623
1993:rtos/uC-FS/Source/fs_api.c ****     CPU_BOOLEAN   success;
 2378              		.loc 1 1993 5 view .LVU624
1994:rtos/uC-FS/Source/fs_api.c **** 
1995:rtos/uC-FS/Source/fs_api.c **** 
1996:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
1997:rtos/uC-FS/Source/fs_api.c ****     if (p_ts == (const fs_time_t *)0) {                         /* Validate timestamp val ptr.     
 2379              		.loc 1 1997 5 view .LVU625
 2380              		.loc 1 1997 8 is_stmt 0 view .LVU626
 2381 0000 28B3     		cbz	r0, .L238
1990:rtos/uC-FS/Source/fs_api.c ****     CLK_DATE_TIME stime;
 2382              		.loc 1 1990 1 view .LVU627
 2383 0002 10B5     		push	{r4, lr}
 2384              	.LCFI133:
 2385              		.cfi_def_cfa_offset 8
 2386              		.cfi_offset 4, -8
 2387              		.cfi_offset 14, -4
 2388 0004 86B0     		sub	sp, sp, #24
 2389              	.LCFI134:
 2390              		.cfi_def_cfa_offset 32
 2391 0006 0C46     		mov	r4, r1
1998:rtos/uC-FS/Source/fs_api.c ****         return ((struct fs_tm *)0);
1999:rtos/uC-FS/Source/fs_api.c ****     }
2000:rtos/uC-FS/Source/fs_api.c ****     if (p_time == (struct fs_tm *)0) {                          /* Validate time ptr.              
 2392              		.loc 1 2000 5 is_stmt 1 view .LVU628
 2393              		.loc 1 2000 8 is_stmt 0 view .LVU629
 2394 0008 11B3     		cbz	r1, .L239
2001:rtos/uC-FS/Source/fs_api.c ****         return ((struct fs_tm *)0);
2002:rtos/uC-FS/Source/fs_api.c ****     }
2003:rtos/uC-FS/Source/fs_api.c **** #endif
2004:rtos/uC-FS/Source/fs_api.c **** 
2005:rtos/uC-FS/Source/fs_api.c **** 
2006:rtos/uC-FS/Source/fs_api.c **** 
2007:rtos/uC-FS/Source/fs_api.c ****                                                                 /* ------------ CALC BROKEN-DOWN DA
2008:rtos/uC-FS/Source/fs_api.c ****     ts = (CLK_TS_SEC)*p_ts;
 2395              		.loc 1 2008 5 is_stmt 1 view .LVU630
 2396              	.LVL214:
2009:rtos/uC-FS/Source/fs_api.c **** 
2010:rtos/uC-FS/Source/fs_api.c ****     success = Clk_TS_UnixToDateTime(              ts,
 2397              		.loc 1 2010 5 view .LVU631
 2398              		.loc 1 2010 15 is_stmt 0 view .LVU632
 2399 000a 01AA     		add	r2, sp, #4
ARM GAS  /tmp/ccYe7so7.s 			page 80


 2400 000c 0021     		movs	r1, #0
 2401              	.LVL215:
 2402              		.loc 1 2010 15 view .LVU633
 2403 000e 0068     		ldr	r0, [r0]
 2404              	.LVL216:
 2405              		.loc 1 2010 15 view .LVU634
 2406 0010 FFF7FEFF 		bl	Clk_TS_UnixToDateTime
 2407              	.LVL217:
2011:rtos/uC-FS/Source/fs_api.c ****                                     (CLK_TZ_SEC)  0,
2012:rtos/uC-FS/Source/fs_api.c ****                                                  &stime);
2013:rtos/uC-FS/Source/fs_api.c **** 
2014:rtos/uC-FS/Source/fs_api.c ****     if (success != DEF_YES) {
 2408              		.loc 1 2014 5 is_stmt 1 view .LVU635
 2409              		.loc 1 2014 8 is_stmt 0 view .LVU636
 2410 0014 0128     		cmp	r0, #1
 2411 0016 1DD1     		bne	.L240
2015:rtos/uC-FS/Source/fs_api.c ****         return ((struct fs_tm *)0);
2016:rtos/uC-FS/Source/fs_api.c ****     }
2017:rtos/uC-FS/Source/fs_api.c **** 
2018:rtos/uC-FS/Source/fs_api.c **** 
2019:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_sec  = (int)stime.Sec;
 2412              		.loc 1 2019 5 is_stmt 1 view .LVU637
 2413              		.loc 1 2019 33 is_stmt 0 view .LVU638
 2414 0018 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 2415              		.loc 1 2019 21 view .LVU639
 2416 001c 2360     		str	r3, [r4]
2020:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_min  = (int)stime.Min;
 2417              		.loc 1 2020 5 is_stmt 1 view .LVU640
 2418              		.loc 1 2020 33 is_stmt 0 view .LVU641
 2419 001e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 2420              		.loc 1 2020 21 view .LVU642
 2421 0022 6360     		str	r3, [r4, #4]
2021:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_hour = (int)stime.Hr;
 2422              		.loc 1 2021 5 is_stmt 1 view .LVU643
 2423              		.loc 1 2021 33 is_stmt 0 view .LVU644
 2424 0024 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 2425              		.loc 1 2021 21 view .LVU645
 2426 0028 A360     		str	r3, [r4, #8]
2022:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_mday = (int)stime.Day;
 2427              		.loc 1 2022 5 is_stmt 1 view .LVU646
 2428              		.loc 1 2022 33 is_stmt 0 view .LVU647
 2429 002a BDF80830 		ldrh	r3, [sp, #8]
 2430              		.loc 1 2022 21 view .LVU648
 2431 002e E360     		str	r3, [r4, #12]
2023:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_mon  = (int)stime.Month;
 2432              		.loc 1 2023 5 is_stmt 1 view .LVU649
 2433              		.loc 1 2023 33 is_stmt 0 view .LVU650
 2434 0030 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 2435              		.loc 1 2023 21 view .LVU651
 2436 0034 2361     		str	r3, [r4, #16]
2024:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_year = (int)stime.Yr;
 2437              		.loc 1 2024 5 is_stmt 1 view .LVU652
 2438              		.loc 1 2024 33 is_stmt 0 view .LVU653
 2439 0036 BDF80430 		ldrh	r3, [sp, #4]
 2440              		.loc 1 2024 21 view .LVU654
 2441 003a 6361     		str	r3, [r4, #20]
2025:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_wday = (int)stime.DayOfWk;
ARM GAS  /tmp/ccYe7so7.s 			page 81


 2442              		.loc 1 2025 5 is_stmt 1 view .LVU655
 2443              		.loc 1 2025 33 is_stmt 0 view .LVU656
 2444 003c BDF80A30 		ldrh	r3, [sp, #10]
 2445              		.loc 1 2025 21 view .LVU657
 2446 0040 A361     		str	r3, [r4, #24]
2026:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_yday = (int)stime.DayOfYr;
 2447              		.loc 1 2026 5 is_stmt 1 view .LVU658
 2448              		.loc 1 2026 33 is_stmt 0 view .LVU659
 2449 0042 BDF80C30 		ldrh	r3, [sp, #12]
 2450              		.loc 1 2026 21 view .LVU660
 2451 0046 E361     		str	r3, [r4, #28]
2027:rtos/uC-FS/Source/fs_api.c **** 
2028:rtos/uC-FS/Source/fs_api.c ****     return (p_time);
 2452              		.loc 1 2028 5 is_stmt 1 view .LVU661
 2453              		.loc 1 2028 12 is_stmt 0 view .LVU662
 2454 0048 2046     		mov	r0, r4
 2455              	.LVL218:
 2456              	.L236:
2029:rtos/uC-FS/Source/fs_api.c **** }
 2457              		.loc 1 2029 1 view .LVU663
 2458 004a 06B0     		add	sp, sp, #24
 2459              	.LCFI135:
 2460              		.cfi_def_cfa_offset 8
 2461              		@ sp needed
 2462 004c 10BD     		pop	{r4, pc}
 2463              	.LVL219:
 2464              	.L238:
 2465              	.LCFI136:
 2466              		.cfi_def_cfa_offset 0
 2467              		.cfi_restore 4
 2468              		.cfi_restore 14
 2469              		.loc 1 2029 1 view .LVU664
 2470 004e 7047     		bx	lr
 2471              	.L239:
 2472              	.LCFI137:
 2473              		.cfi_def_cfa_offset 32
 2474              		.cfi_offset 4, -8
 2475              		.cfi_offset 14, -4
2001:rtos/uC-FS/Source/fs_api.c ****     }
 2476              		.loc 1 2001 16 view .LVU665
 2477 0050 0846     		mov	r0, r1
 2478              	.LVL220:
2001:rtos/uC-FS/Source/fs_api.c ****     }
 2479              		.loc 1 2001 16 view .LVU666
 2480 0052 FAE7     		b	.L236
 2481              	.LVL221:
 2482              	.L240:
2015:rtos/uC-FS/Source/fs_api.c ****     }
 2483              		.loc 1 2015 16 view .LVU667
 2484 0054 0020     		movs	r0, #0
 2485              	.LVL222:
2015:rtos/uC-FS/Source/fs_api.c ****     }
 2486              		.loc 1 2015 16 view .LVU668
 2487 0056 F8E7     		b	.L236
 2488              		.cfi_endproc
 2489              	.LFE27:
 2491              		.section	.text.fs_mktime,"ax",%progbits
ARM GAS  /tmp/ccYe7so7.s 			page 82


 2492              		.align	1
 2493              		.global	fs_mktime
 2494              		.syntax unified
 2495              		.thumb
 2496              		.thumb_func
 2497              		.fpu fpv4-sp-d16
 2499              	fs_mktime:
 2500              	.LVL223:
 2501              	.LFB28:
2030:rtos/uC-FS/Source/fs_api.c **** 
2031:rtos/uC-FS/Source/fs_api.c **** 
2032:rtos/uC-FS/Source/fs_api.c **** /*
2033:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
2034:rtos/uC-FS/Source/fs_api.c **** *                                             fs_mktime()
2035:rtos/uC-FS/Source/fs_api.c **** *
2036:rtos/uC-FS/Source/fs_api.c **** * Description : Convert date/time to timestamp.
2037:rtos/uC-FS/Source/fs_api.c **** *
2038:rtos/uC-FS/Source/fs_api.c **** * Argument(s) : p_time      Pointer to date/time to convert.
2039:rtos/uC-FS/Source/fs_api.c **** *
2040:rtos/uC-FS/Source/fs_api.c **** * Return(s)   : Time value,    if NO errors.
2041:rtos/uC-FS/Source/fs_api.c **** *               (fs_time_t)-1, otherwise.
2042:rtos/uC-FS/Source/fs_api.c **** *
2043:rtos/uC-FS/Source/fs_api.c **** * Note(s)     : (1) See 'fs_localtime_r()  Note #1'.
2044:rtos/uC-FS/Source/fs_api.c **** *
2045:rtos/uC-FS/Source/fs_api.c **** *               (2) IEEE Std 1003.1, 2004 Edition, Section 'mktime() : DESCRIPTION' states that :
2046:rtos/uC-FS/Source/fs_api.c **** *
2047:rtos/uC-FS/Source/fs_api.c **** *                   (a) "The 'mktime()' function shall convert the broken-down time, expressed as l
2048:rtos/uC-FS/Source/fs_api.c **** *                        time, in the structure pointed to by 'timeptr', into a time since the Epoc
2049:rtos/uC-FS/Source/fs_api.c **** *
2050:rtos/uC-FS/Source/fs_api.c **** *                   (b) "The original values of 'tm_wday' and 'tm_yday' components of the structure
2051:rtos/uC-FS/Source/fs_api.c **** *                        ignored, and the original values of the other components are not restricte
2052:rtos/uC-FS/Source/fs_api.c **** *                        the ranges described in <time.h>" (see also Note #3)
2053:rtos/uC-FS/Source/fs_api.c **** *
2054:rtos/uC-FS/Source/fs_api.c **** *                   (c) "Upon successful completion, the values of the 'tm_wday' and 'tm_yday' comp
2055:rtos/uC-FS/Source/fs_api.c **** *                        of the structure shall be set appropriately, and the other components set 
2056:rtos/uC-FS/Source/fs_api.c **** *                        represent the specified time since the Epoch, but with their values forced
2057:rtos/uC-FS/Source/fs_api.c **** *                        ranges indicated in the <time.h> entry"
2058:rtos/uC-FS/Source/fs_api.c **** *
2059:rtos/uC-FS/Source/fs_api.c **** *               (3) Even though strict range checking is NOT performed, the broken-down date/time
2060:rtos/uC-FS/Source/fs_api.c **** *                   components are restricted to positive values, and the month value MUST be betwe
2061:rtos/uC-FS/Source/fs_api.c **** *                   0 & 11 (otherwise, the day of year cannot be determined).
2062:rtos/uC-FS/Source/fs_api.c **** ***************************************************************************************************
2063:rtos/uC-FS/Source/fs_api.c **** */
2064:rtos/uC-FS/Source/fs_api.c **** 
2065:rtos/uC-FS/Source/fs_api.c **** fs_time_t  fs_mktime (struct  fs_tm  *p_time)
2066:rtos/uC-FS/Source/fs_api.c **** {
 2502              		.loc 1 2066 1 is_stmt 1 view -0
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 24
 2505              		@ frame_needed = 0, uses_anonymous_args = 0
2067:rtos/uC-FS/Source/fs_api.c ****     CLK_DATE_TIME stime;
 2506              		.loc 1 2067 5 view .LVU670
2068:rtos/uC-FS/Source/fs_api.c ****     CLK_TS_SEC    ts;
 2507              		.loc 1 2068 5 view .LVU671
2069:rtos/uC-FS/Source/fs_api.c ****     CPU_BOOLEAN   success;
 2508              		.loc 1 2069 5 view .LVU672
2070:rtos/uC-FS/Source/fs_api.c **** 
ARM GAS  /tmp/ccYe7so7.s 			page 83


2071:rtos/uC-FS/Source/fs_api.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
2072:rtos/uC-FS/Source/fs_api.c ****     if (p_time == (struct fs_tm *)0) {                          /* Validate broken-down date/time p
 2509              		.loc 1 2072 5 view .LVU673
 2510              		.loc 1 2072 8 is_stmt 0 view .LVU674
 2511 0000 78B3     		cbz	r0, .L247
2066:rtos/uC-FS/Source/fs_api.c ****     CLK_DATE_TIME stime;
 2512              		.loc 1 2066 1 view .LVU675
 2513 0002 10B5     		push	{r4, lr}
 2514              	.LCFI138:
 2515              		.cfi_def_cfa_offset 8
 2516              		.cfi_offset 4, -8
 2517              		.cfi_offset 14, -4
 2518 0004 86B0     		sub	sp, sp, #24
 2519              	.LCFI139:
 2520              		.cfi_def_cfa_offset 32
 2521 0006 0446     		mov	r4, r0
2073:rtos/uC-FS/Source/fs_api.c ****         return ((fs_time_t)-1);
2074:rtos/uC-FS/Source/fs_api.c ****     }
2075:rtos/uC-FS/Source/fs_api.c **** #endif
2076:rtos/uC-FS/Source/fs_api.c **** 
2077:rtos/uC-FS/Source/fs_api.c **** 
2078:rtos/uC-FS/Source/fs_api.c **** 
2079:rtos/uC-FS/Source/fs_api.c ****                                                                 /* ----------------- COMPUTE TIME V
2080:rtos/uC-FS/Source/fs_api.c ****     stime.Sec     = (CPU_INT08U)p_time->tm_sec;
 2522              		.loc 1 2080 5 is_stmt 1 view .LVU676
 2523              		.loc 1 2080 21 is_stmt 0 view .LVU677
 2524 0008 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2525              		.loc 1 2080 19 view .LVU678
 2526 000a 8DF81030 		strb	r3, [sp, #16]
2081:rtos/uC-FS/Source/fs_api.c ****     stime.Min     = (CPU_INT08U)p_time->tm_min;
 2527              		.loc 1 2081 5 is_stmt 1 view .LVU679
 2528              		.loc 1 2081 21 is_stmt 0 view .LVU680
 2529 000e 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2530              		.loc 1 2081 19 view .LVU681
 2531 0010 8DF80F30 		strb	r3, [sp, #15]
2082:rtos/uC-FS/Source/fs_api.c ****     stime.Hr      = (CPU_INT08U)p_time->tm_hour;
 2532              		.loc 1 2082 5 is_stmt 1 view .LVU682
 2533              		.loc 1 2082 21 is_stmt 0 view .LVU683
 2534 0014 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 2535              		.loc 1 2082 19 view .LVU684
 2536 0016 8DF80E30 		strb	r3, [sp, #14]
2083:rtos/uC-FS/Source/fs_api.c ****     stime.Day     = (CPU_INT08U)p_time->tm_mday;
 2537              		.loc 1 2083 5 is_stmt 1 view .LVU685
 2538              		.loc 1 2083 21 is_stmt 0 view .LVU686
 2539 001a 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 2540              		.loc 1 2083 19 view .LVU687
 2541 001c ADF80830 		strh	r3, [sp, #8]	@ movhi
2084:rtos/uC-FS/Source/fs_api.c ****     stime.Month   = (CPU_INT08U)p_time->tm_mon;
 2542              		.loc 1 2084 5 is_stmt 1 view .LVU688
 2543              		.loc 1 2084 21 is_stmt 0 view .LVU689
 2544 0020 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 2545              		.loc 1 2084 19 view .LVU690
 2546 0022 8DF80630 		strb	r3, [sp, #6]
2085:rtos/uC-FS/Source/fs_api.c ****     stime.Yr      = (CPU_INT08U)p_time->tm_year;
 2547              		.loc 1 2085 5 is_stmt 1 view .LVU691
 2548              		.loc 1 2085 21 is_stmt 0 view .LVU692
 2549 0026 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
ARM GAS  /tmp/ccYe7so7.s 			page 84


 2550              		.loc 1 2085 19 view .LVU693
 2551 0028 ADF80430 		strh	r3, [sp, #4]	@ movhi
2086:rtos/uC-FS/Source/fs_api.c **** 
2087:rtos/uC-FS/Source/fs_api.c ****     success = Clk_DateTimeToTS_Unix(&ts,
 2552              		.loc 1 2087 5 is_stmt 1 view .LVU694
 2553              		.loc 1 2087 15 is_stmt 0 view .LVU695
 2554 002c 01A9     		add	r1, sp, #4
 2555 002e 6846     		mov	r0, sp
 2556              	.LVL224:
 2557              		.loc 1 2087 15 view .LVU696
 2558 0030 FFF7FEFF 		bl	Clk_DateTimeToTS_Unix
 2559              	.LVL225:
2088:rtos/uC-FS/Source/fs_api.c ****                                     &stime);
2089:rtos/uC-FS/Source/fs_api.c ****     if (success != DEF_YES) {
 2560              		.loc 1 2089 5 is_stmt 1 view .LVU697
 2561              		.loc 1 2089 8 is_stmt 0 view .LVU698
 2562 0034 0128     		cmp	r0, #1
 2563 0036 17D1     		bne	.L248
2090:rtos/uC-FS/Source/fs_api.c ****         return ((fs_time_t)-1);
2091:rtos/uC-FS/Source/fs_api.c ****     }
2092:rtos/uC-FS/Source/fs_api.c **** 
2093:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_sec  = (int)stime.Sec;
 2564              		.loc 1 2093 5 is_stmt 1 view .LVU699
 2565              		.loc 1 2093 33 is_stmt 0 view .LVU700
 2566 0038 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 2567              		.loc 1 2093 21 view .LVU701
 2568 003c 2360     		str	r3, [r4]
2094:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_min  = (int)stime.Min;
 2569              		.loc 1 2094 5 is_stmt 1 view .LVU702
 2570              		.loc 1 2094 33 is_stmt 0 view .LVU703
 2571 003e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 2572              		.loc 1 2094 21 view .LVU704
 2573 0042 6360     		str	r3, [r4, #4]
2095:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_hour = (int)stime.Hr;
 2574              		.loc 1 2095 5 is_stmt 1 view .LVU705
 2575              		.loc 1 2095 33 is_stmt 0 view .LVU706
 2576 0044 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 2577              		.loc 1 2095 21 view .LVU707
 2578 0048 A360     		str	r3, [r4, #8]
2096:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_mday = (int)stime.Day;
 2579              		.loc 1 2096 5 is_stmt 1 view .LVU708
 2580              		.loc 1 2096 33 is_stmt 0 view .LVU709
 2581 004a BDF80830 		ldrh	r3, [sp, #8]
 2582              		.loc 1 2096 21 view .LVU710
 2583 004e E360     		str	r3, [r4, #12]
2097:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_mon  = (int)stime.Month;
 2584              		.loc 1 2097 5 is_stmt 1 view .LVU711
 2585              		.loc 1 2097 33 is_stmt 0 view .LVU712
 2586 0050 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 2587              		.loc 1 2097 21 view .LVU713
 2588 0054 2361     		str	r3, [r4, #16]
2098:rtos/uC-FS/Source/fs_api.c ****     p_time->tm_year = (int)stime.Yr;
 2589              		.loc 1 2098 5 is_stmt 1 view .LVU714
 2590              		.loc 1 2098 33 is_stmt 0 view .LVU715
 2591 0056 BDF80430 		ldrh	r3, [sp, #4]
 2592              		.loc 1 2098 21 view .LVU716
 2593 005a 6361     		str	r3, [r4, #20]
ARM GAS  /tmp/ccYe7so7.s 			page 85


2099:rtos/uC-FS/Source/fs_api.c **** 
2100:rtos/uC-FS/Source/fs_api.c ****     return ((fs_time_t)ts);
 2594              		.loc 1 2100 5 is_stmt 1 view .LVU717
 2595              		.loc 1 2100 13 is_stmt 0 view .LVU718
 2596 005c 0098     		ldr	r0, [sp]
 2597              	.LVL226:
 2598              	.L245:
2101:rtos/uC-FS/Source/fs_api.c **** }
 2599              		.loc 1 2101 1 view .LVU719
 2600 005e 06B0     		add	sp, sp, #24
 2601              	.LCFI140:
 2602              		.cfi_def_cfa_offset 8
 2603              		@ sp needed
 2604 0060 10BD     		pop	{r4, pc}
 2605              	.LVL227:
 2606              	.L247:
 2607              	.LCFI141:
 2608              		.cfi_def_cfa_offset 0
 2609              		.cfi_restore 4
 2610              		.cfi_restore 14
2073:rtos/uC-FS/Source/fs_api.c ****     }
 2611              		.loc 1 2073 16 view .LVU720
 2612 0062 4FF0FF30 		mov	r0, #-1
 2613              	.LVL228:
 2614              		.loc 1 2101 1 view .LVU721
 2615 0066 7047     		bx	lr
 2616              	.LVL229:
 2617              	.L248:
 2618              	.LCFI142:
 2619              		.cfi_def_cfa_offset 32
 2620              		.cfi_offset 4, -8
 2621              		.cfi_offset 14, -4
2090:rtos/uC-FS/Source/fs_api.c ****     }
 2622              		.loc 1 2090 16 view .LVU722
 2623 0068 4FF0FF30 		mov	r0, #-1
 2624              	.LVL230:
2090:rtos/uC-FS/Source/fs_api.c ****     }
 2625              		.loc 1 2090 16 view .LVU723
 2626 006c F7E7     		b	.L245
 2627              		.cfi_endproc
 2628              	.LFE28:
 2630              		.text
 2631              	.Letext0:
 2632              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 2633              		.file 3 "rtos/uC-Clk/Source/clk.h"
 2634              		.file 4 "rtos/uC-LIB/lib_mem.h"
 2635              		.file 5 "rtos/uC-FS/Source/fs_type.h"
 2636              		.file 6 "rtos/uC-FS/Source/fs_dir.h"
 2637              		.file 7 "rtos/uC-FS/Source/fs_entry.h"
 2638              		.file 8 "rtos/uC-FS/Source/fs_file.h"
 2639              		.file 9 "rtos/uC-FS/Source/fs_err.h"
 2640              		.file 10 "rtos/uC-FS/Source/fs_ctr.h"
 2641              		.file 11 "rtos/uC-FS/Source/fs_api.h"
 2642              		.file 12 "rtos/uC-LIB/lib_str.h"
ARM GAS  /tmp/ccYe7so7.s 			page 86


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fs_api.c
     /tmp/ccYe7so7.s:18     .text.fs_closedir:0000000000000000 $t
     /tmp/ccYe7so7.s:26     .text.fs_closedir:0000000000000000 fs_closedir
     /tmp/ccYe7so7.s:85     .text.fs_opendir:0000000000000000 $t
     /tmp/ccYe7so7.s:92     .text.fs_opendir:0000000000000000 fs_opendir
     /tmp/ccYe7so7.s:136    .text.fs_readdir_r:0000000000000000 $t
     /tmp/ccYe7so7.s:143    .text.fs_readdir_r:0000000000000000 fs_readdir_r
     /tmp/ccYe7so7.s:252    .text.fs_mkdir:0000000000000000 $t
     /tmp/ccYe7so7.s:259    .text.fs_mkdir:0000000000000000 fs_mkdir
     /tmp/ccYe7so7.s:322    .text.fs_remove:0000000000000000 $t
     /tmp/ccYe7so7.s:329    .text.fs_remove:0000000000000000 fs_remove
     /tmp/ccYe7so7.s:388    .text.fs_rename:0000000000000000 $t
     /tmp/ccYe7so7.s:395    .text.fs_rename:0000000000000000 fs_rename
     /tmp/ccYe7so7.s:468    .text.fs_rmdir:0000000000000000 $t
     /tmp/ccYe7so7.s:475    .text.fs_rmdir:0000000000000000 fs_rmdir
     /tmp/ccYe7so7.s:534    .text.fs_stat:0000000000000000 $t
     /tmp/ccYe7so7.s:541    .text.fs_stat:0000000000000000 fs_stat
     /tmp/ccYe7so7.s:714    .text.fs_clearerr:0000000000000000 $t
     /tmp/ccYe7so7.s:721    .text.fs_clearerr:0000000000000000 fs_clearerr
     /tmp/ccYe7so7.s:761    .text.fs_fclose:0000000000000000 $t
     /tmp/ccYe7so7.s:768    .text.fs_fclose:0000000000000000 fs_fclose
     /tmp/ccYe7so7.s:826    .text.fs_feof:0000000000000000 $t
     /tmp/ccYe7so7.s:833    .text.fs_feof:0000000000000000 fs_feof
     /tmp/ccYe7so7.s:896    .text.fs_ferror:0000000000000000 $t
     /tmp/ccYe7so7.s:903    .text.fs_ferror:0000000000000000 fs_ferror
     /tmp/ccYe7so7.s:966    .text.fs_fflush:0000000000000000 $t
     /tmp/ccYe7so7.s:973    .text.fs_fflush:0000000000000000 fs_fflush
     /tmp/ccYe7so7.s:1031   .text.fs_fgetpos:0000000000000000 $t
     /tmp/ccYe7so7.s:1038   .text.fs_fgetpos:0000000000000000 fs_fgetpos
     /tmp/ccYe7so7.s:1130   .text.fs_fopen:0000000000000000 $t
     /tmp/ccYe7so7.s:1137   .text.fs_fopen:0000000000000000 fs_fopen
     /tmp/ccYe7so7.s:1247   .text.fs_fread:0000000000000000 $t
     /tmp/ccYe7so7.s:1254   .text.fs_fread:0000000000000000 fs_fread
     /tmp/ccYe7so7.s:1358   .text.fs_fseek:0000000000000000 $t
     /tmp/ccYe7so7.s:1365   .text.fs_fseek:0000000000000000 fs_fseek
     /tmp/ccYe7so7.s:1430   .text.fs_fsetpos:0000000000000000 $t
     /tmp/ccYe7so7.s:1437   .text.fs_fsetpos:0000000000000000 fs_fsetpos
     /tmp/ccYe7so7.s:1516   .text.fs_fstat:0000000000000000 $t
     /tmp/ccYe7so7.s:1523   .text.fs_fstat:0000000000000000 fs_fstat
     /tmp/ccYe7so7.s:1696   .text.fs_ftell:0000000000000000 $t
     /tmp/ccYe7so7.s:1703   .text.fs_ftell:0000000000000000 fs_ftell
     /tmp/ccYe7so7.s:1765   .text.fs_ftruncate:0000000000000000 $t
     /tmp/ccYe7so7.s:1772   .text.fs_ftruncate:0000000000000000 fs_ftruncate
     /tmp/ccYe7so7.s:1831   .text.fs_fwrite:0000000000000000 $t
     /tmp/ccYe7so7.s:1838   .text.fs_fwrite:0000000000000000 fs_fwrite
     /tmp/ccYe7so7.s:1942   .text.fs_rewind:0000000000000000 $t
     /tmp/ccYe7so7.s:1949   .text.fs_rewind:0000000000000000 fs_rewind
     /tmp/ccYe7so7.s:1999   .text.fs_setvbuf:0000000000000000 $t
     /tmp/ccYe7so7.s:2006   .text.fs_setvbuf:0000000000000000 fs_setvbuf
     /tmp/ccYe7so7.s:2083   .text.fs_setbuf:0000000000000000 $t
     /tmp/ccYe7so7.s:2090   .text.fs_setbuf:0000000000000000 fs_setbuf
     /tmp/ccYe7so7.s:2135   .text.fs_asctime_r:0000000000000000 $t
     /tmp/ccYe7so7.s:2142   .text.fs_asctime_r:0000000000000000 fs_asctime_r
     /tmp/ccYe7so7.s:2249   .text.fs_ctime_r:0000000000000000 $t
     /tmp/ccYe7so7.s:2256   .text.fs_ctime_r:0000000000000000 fs_ctime_r
     /tmp/ccYe7so7.s:2362   .text.fs_localtime_r:0000000000000000 $t
ARM GAS  /tmp/ccYe7so7.s 			page 87


     /tmp/ccYe7so7.s:2369   .text.fs_localtime_r:0000000000000000 fs_localtime_r
     /tmp/ccYe7so7.s:2492   .text.fs_mktime:0000000000000000 $t
     /tmp/ccYe7so7.s:2499   .text.fs_mktime:0000000000000000 fs_mktime
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.clk.h.99.39403db6a27321e53b261bbe20b56e1d
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.lib_str.h.60.32f6cabaf9bf142bd5051c414a220578
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_str.h.174.5879a17e9fe25aed81d2c99c1603a671
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366
                           .group:0000000000000000 wm4.fs.h.42.4f6311a594ee5619f1ee7a9392eb7faa
                           .group:0000000000000000 wm4.fs_def.h.42.653ad677c23ef93c522ec84af681385d
                           .group:0000000000000000 wm4.fs_cfg.h.116.da4f8e9d0b9040a97ef3bf26c61e90fd
                           .group:0000000000000000 wm4.fs_cfg_fs.h.42.e13f500e2fc14f5d0bdda5cfe236732a
                           .group:0000000000000000 wm4.fs_type.h.42.0906d0337a2df5da9e27cec176b255f1
                           .group:0000000000000000 wm4.lib_mem.h.65.5ae3d762676d2043783018a38f269058
                           .group:0000000000000000 wm4.fs_type.h.139.acab71eb554f7e54c56a7894094211e6
                           .group:0000000000000000 wm4.fs_err.h.42.d52bfed31dff3d1419c5cf09952dee67
                           .group:0000000000000000 wm4.fs.h.97.1d629f0ba32b5622ab4e01a254bd98e8
                           .group:0000000000000000 wm4.fs_ctr.h.42.9d1398cac157503ac8af114819f7782b
                           .group:0000000000000000 wm4.fs_entry.h.42.9d70c930b2952a9ef63a0a4e9d586c20
                           .group:0000000000000000 wm4.fs_dir.h.83.d0300b5b24eed020443871730cac76e3
                           .group:0000000000000000 wm4.fs_file.h.42.74c26597bc17b842069a1de9e164f613
                           .group:0000000000000000 wm4.fs_api.h.106.4d2e618fd44d144eba15cab66a203bf5

UNDEFINED SYMBOLS
FSDir_Close
FSDir_Open
FSDir_Rd
FSEntry_Create
FSEntry_Del
FSEntry_Rename
FSEntry_Query
FSFile_ClrErr
FSFile_Close
FSFile_IsEOF
FSFile_IsErr
FSFile_BufFlush
FSFile_PosGet
Str_Len_N
FSFile_ModeParse
FSFile_Open
FSFile_Rd
FSFile_PosSet
FSFile_Query
FSFile_Truncate
FSFile_Wr
FSFile_BufAssign
Clk_DateTimeToStr
Clk_TS_UnixToDateTime
ARM GAS  /tmp/ccYe7so7.s 			page 88


Clk_DateTimeToTS_Unix

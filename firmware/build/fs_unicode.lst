ARM GAS  /tmp/cc4JYsWh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fs_unicode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WC_SrchTbl,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	WC_SrchTbl:
  26              	.LVL0:
  27              	.LFB32:
  28              		.file 1 "rtos/uC-FS/Source/fs_unicode.c"
   1:rtos/uC-FS/Source/fs_unicode.c **** /*
   2:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
   3:rtos/uC-FS/Source/fs_unicode.c **** *                                                uC/FS
   4:rtos/uC-FS/Source/fs_unicode.c **** *                                      The Embedded File System
   5:rtos/uC-FS/Source/fs_unicode.c **** *
   6:rtos/uC-FS/Source/fs_unicode.c **** *                         (c) Copyright 2008-2019; Silicon Laboratories Inc.,
   7:rtos/uC-FS/Source/fs_unicode.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-FS/Source/fs_unicode.c **** *
   9:rtos/uC-FS/Source/fs_unicode.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-FS/Source/fs_unicode.c **** *
  11:rtos/uC-FS/Source/fs_unicode.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-FS/Source/fs_unicode.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-FS/Source/fs_unicode.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-FS/Source/fs_unicode.c **** *                  license, you may not use this software.
  15:rtos/uC-FS/Source/fs_unicode.c **** *
  16:rtos/uC-FS/Source/fs_unicode.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-FS/Source/fs_unicode.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-FS/Source/fs_unicode.c **** *
  19:rtos/uC-FS/Source/fs_unicode.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-FS/Source/fs_unicode.c **** *
  21:rtos/uC-FS/Source/fs_unicode.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  23:rtos/uC-FS/Source/fs_unicode.c **** */
  24:rtos/uC-FS/Source/fs_unicode.c **** 
  25:rtos/uC-FS/Source/fs_unicode.c **** /*
  26:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  27:rtos/uC-FS/Source/fs_unicode.c **** *
  28:rtos/uC-FS/Source/fs_unicode.c **** *                                      UNICODE STRING MANAGEMENT
  29:rtos/uC-FS/Source/fs_unicode.c **** *
  30:rtos/uC-FS/Source/fs_unicode.c **** * Filename  : fs_unicode.c
ARM GAS  /tmp/cc4JYsWh.s 			page 2


  31:rtos/uC-FS/Source/fs_unicode.c **** * Version   : v4.07.06
  32:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  33:rtos/uC-FS/Source/fs_unicode.c **** * Notice(s) : (1) The Institute of Electrical and Electronics Engineers and The Open Group, have gi
  34:rtos/uC-FS/Source/fs_unicode.c **** *                 us permission to reprint portions of their documentation.  Portions of this text 
  35:rtos/uC-FS/Source/fs_unicode.c **** *                 reprinted and reproduced in electronic form from the IEEE Std 1003.1, 2004 Editio
  36:rtos/uC-FS/Source/fs_unicode.c **** *                 Standard for Information Technology -- Portable Operating System Interface (POSIX
  37:rtos/uC-FS/Source/fs_unicode.c **** *                 The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Instit
  38:rtos/uC-FS/Source/fs_unicode.c **** *                 of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of
  39:rtos/uC-FS/Source/fs_unicode.c **** *                 discrepancy between these versions and the original IEEE and The Open Group Stand
  40:rtos/uC-FS/Source/fs_unicode.c **** *                 the original IEEE and The Open Group Standard is the referee document.  The origi
  41:rtos/uC-FS/Source/fs_unicode.c **** *                 Standard can be obtained online at http://www.opengroup.org/unix/online.html.
  42:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  43:rtos/uC-FS/Source/fs_unicode.c **** */
  44:rtos/uC-FS/Source/fs_unicode.c **** 
  45:rtos/uC-FS/Source/fs_unicode.c **** /*
  46:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  47:rtos/uC-FS/Source/fs_unicode.c **** *                                               MODULE
  48:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  49:rtos/uC-FS/Source/fs_unicode.c **** */
  50:rtos/uC-FS/Source/fs_unicode.c **** 
  51:rtos/uC-FS/Source/fs_unicode.c **** #define  MICRIUM_SOURCE
  52:rtos/uC-FS/Source/fs_unicode.c **** #define  FS_UNICODE_MODULE
  53:rtos/uC-FS/Source/fs_unicode.c **** 
  54:rtos/uC-FS/Source/fs_unicode.c **** 
  55:rtos/uC-FS/Source/fs_unicode.c **** /*
  56:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  57:rtos/uC-FS/Source/fs_unicode.c **** *                                            INCLUDE FILES
  58:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  59:rtos/uC-FS/Source/fs_unicode.c **** */
  60:rtos/uC-FS/Source/fs_unicode.c **** 
  61:rtos/uC-FS/Source/fs_unicode.c **** #include  <lib_ascii.h>
  62:rtos/uC-FS/Source/fs_unicode.c **** #include  "fs.h"
  63:rtos/uC-FS/Source/fs_unicode.c **** #include  "fs_unicode.h"
  64:rtos/uC-FS/Source/fs_unicode.c **** 
  65:rtos/uC-FS/Source/fs_unicode.c **** 
  66:rtos/uC-FS/Source/fs_unicode.c **** /*
  67:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  68:rtos/uC-FS/Source/fs_unicode.c **** *                                           LINT INHIBITION
  69:rtos/uC-FS/Source/fs_unicode.c **** *
  70:rtos/uC-FS/Source/fs_unicode.c **** * Note(s) : (1) Certain macro's within this file describe commands, command values or register fiel
  71:rtos/uC-FS/Source/fs_unicode.c **** *               that are currently unused.  lint error option #750 is disabled to prevent error mes
  72:rtos/uC-FS/Source/fs_unicode.c **** *               because of unused macro's :
  73:rtos/uC-FS/Source/fs_unicode.c **** *
  74:rtos/uC-FS/Source/fs_unicode.c **** *                   "Info 750: local macro '...' (line ..., file ...) not referenced"
  75:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  76:rtos/uC-FS/Source/fs_unicode.c **** */
  77:rtos/uC-FS/Source/fs_unicode.c **** 
  78:rtos/uC-FS/Source/fs_unicode.c **** /*lint -e750*/
  79:rtos/uC-FS/Source/fs_unicode.c **** 
  80:rtos/uC-FS/Source/fs_unicode.c **** 
  81:rtos/uC-FS/Source/fs_unicode.c **** /*
  82:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  83:rtos/uC-FS/Source/fs_unicode.c **** *                                            LOCAL DEFINES
  84:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
  85:rtos/uC-FS/Source/fs_unicode.c **** */
  86:rtos/uC-FS/Source/fs_unicode.c **** 
  87:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_DIFF_ALT                        DEF_INT_16S_MAX_VAL
ARM GAS  /tmp/cc4JYsWh.s 			page 3


  88:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_DIFF_35332                     (DEF_INT_16S_MAX_VAL - 1)
  89:rtos/uC-FS/Source/fs_unicode.c **** 
  90:rtos/uC-FS/Source/fs_unicode.c **** #define  MB_MAX_SCALAR_VAL_1BYTE                  0x0000007Fu
  91:rtos/uC-FS/Source/fs_unicode.c **** #define  MB_MAX_SCALAR_VAL_2BYTE                  0x000007FFu
  92:rtos/uC-FS/Source/fs_unicode.c **** #define  MB_MAX_SCALAR_VAL_3BYTE                  0x0000FFFFu
  93:rtos/uC-FS/Source/fs_unicode.c **** #define  MB_MAX_SCALAR_VAL_4BYTE                  0x001FFFFFu
  94:rtos/uC-FS/Source/fs_unicode.c **** 
  95:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_NO_BREAK_SPACE                       0x00A0u
  96:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_OGHAM_SPACE_MARK                     0x1680u
  97:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR            0x180Eu
  98:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_EN_QUAD                              0x2000u
  99:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_HAIR_SPACE                           0x200Au
 100:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_LINE_SEPARATOR                       0x2028u
 101:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_PARAGRAPH_SEPARATOR                  0x2029u
 102:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_NARROW_NO_BREAK_SPACE                0x202Fu
 103:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_MEDIUM_MATHEMATICAL_SPACE            0x205Fu
 104:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_IDEOGRAPHIC_SPACE                    0x3000u
 105:rtos/uC-FS/Source/fs_unicode.c **** 
 106:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_FULLWIDTH_DIG_ZERO                   0xFF10u
 107:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_FULLWIDTH_DIG_SEVEN                  0xFF17u
 108:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_FULLWIDTH_DIG_NINE                   0xFF19u
 109:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_FULLWIDTH_LATIN_UPPER_A              0xFF21u
 110:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_FULLWIDTH_LATIN_UPPER_F              0xFF26u
 111:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_FULLWIDTH_LATIN_LOWER_A              0xFF41u
 112:rtos/uC-FS/Source/fs_unicode.c **** #define  WC_CHAR_FULLWIDTH_LATIN_LOWER_F              0xFF46u
 113:rtos/uC-FS/Source/fs_unicode.c **** 
 114:rtos/uC-FS/Source/fs_unicode.c **** 
 115:rtos/uC-FS/Source/fs_unicode.c **** /*
 116:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 117:rtos/uC-FS/Source/fs_unicode.c **** *                                           LOCAL CONSTANTS
 118:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 119:rtos/uC-FS/Source/fs_unicode.c **** */
 120:rtos/uC-FS/Source/fs_unicode.c **** 
 121:rtos/uC-FS/Source/fs_unicode.c **** 
 122:rtos/uC-FS/Source/fs_unicode.c **** /*
 123:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 124:rtos/uC-FS/Source/fs_unicode.c **** *                                          LOCAL DATA TYPES
 125:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 126:rtos/uC-FS/Source/fs_unicode.c **** */
 127:rtos/uC-FS/Source/fs_unicode.c **** 
 128:rtos/uC-FS/Source/fs_unicode.c **** typedef  struct  wc_srch_tbl_entry {
 129:rtos/uC-FS/Source/fs_unicode.c ****    CPU_WCHAR   Char;
 130:rtos/uC-FS/Source/fs_unicode.c ****    CPU_INT16S  Diff;
 131:rtos/uC-FS/Source/fs_unicode.c **** } WC_SRCH_TBL_ENTRY;
 132:rtos/uC-FS/Source/fs_unicode.c **** 
 133:rtos/uC-FS/Source/fs_unicode.c **** 
 134:rtos/uC-FS/Source/fs_unicode.c **** /*
 135:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 136:rtos/uC-FS/Source/fs_unicode.c **** *                                            LOCAL TABLES
 137:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 138:rtos/uC-FS/Source/fs_unicode.c **** */
 139:rtos/uC-FS/Source/fs_unicode.c **** 
 140:rtos/uC-FS/Source/fs_unicode.c **** 
 141:rtos/uC-FS/Source/fs_unicode.c **** /*
 142:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 143:rtos/uC-FS/Source/fs_unicode.c **** *                                       LOCAL GLOBAL VARIABLES
 144:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
ARM GAS  /tmp/cc4JYsWh.s 			page 4


 145:rtos/uC-FS/Source/fs_unicode.c **** */
 146:rtos/uC-FS/Source/fs_unicode.c **** 
 147:rtos/uC-FS/Source/fs_unicode.c **** static  const  WC_SRCH_TBL_ENTRY  WC_CharToCasefoldTbl[] = {
 148:rtos/uC-FS/Source/fs_unicode.c ****     {0x0000u,           0},    {0x00B5u,         775},    {0x00B6u,           0},    {0x017Fu,     
 149:rtos/uC-FS/Source/fs_unicode.c ****     {0x03C3u,           0},    {0x03D1u,         -25},    {0x03D2u,           0},    {0x03D5u,     
 150:rtos/uC-FS/Source/fs_unicode.c ****     {0x03F2u,           0},    {0x03F5u,         -64},    {0x03F6u,           0},    {0x1E9Bu,     
 151:rtos/uC-FS/Source/fs_unicode.c **** };
 152:rtos/uC-FS/Source/fs_unicode.c **** 
 153:rtos/uC-FS/Source/fs_unicode.c **** static  const  WC_SRCH_TBL_ENTRY  WC_CharToLowerTbl[] = {
 154:rtos/uC-FS/Source/fs_unicode.c ****     {0x0000u,           0},    {0x0041u,          32},    {0x005Bu,           0},    {0x00C0u,     
 155:rtos/uC-FS/Source/fs_unicode.c ****     {0x012Fu,           0},    {0x0130u,        -199},    {0x0131u,           0},    {0x0132u, WC_D
 156:rtos/uC-FS/Source/fs_unicode.c ****     {0x0177u,           0},    {0x0178u,        -121},    {0x0179u, WC_DIFF_ALT},    {0x017Eu,     
 157:rtos/uC-FS/Source/fs_unicode.c ****     {0x0187u,           1},    {0x0188u,           0},    {0x0189u,         205},    {0x018Bu,     
 158:rtos/uC-FS/Source/fs_unicode.c ****     {0x0191u,           1},    {0x0192u,           0},    {0x0193u,         205},    {0x0194u,     
 159:rtos/uC-FS/Source/fs_unicode.c ****     {0x0199u,           0},    {0x019Cu,         211},    {0x019Du,         213},    {0x019Eu,     
 160:rtos/uC-FS/Source/fs_unicode.c ****     {0x01A7u,           1},    {0x01A8u,           0},    {0x01A9u,         218},    {0x01AAu,     
 161:rtos/uC-FS/Source/fs_unicode.c ****     {0x01B0u,           0},    {0x01B1u,         217},    {0x01B3u, WC_DIFF_ALT},    {0x01B6u,     
 162:rtos/uC-FS/Source/fs_unicode.c ****     {0x01BDu,           0},    {0x01C4u,           2},    {0x01C5u,           1},    {0x01C6u,     
 163:rtos/uC-FS/Source/fs_unicode.c ****     {0x01CBu, WC_DIFF_ALT},    {0x01DCu,           0},    {0x01DEu, WC_DIFF_ALT},    {0x01EFu,     
 164:rtos/uC-FS/Source/fs_unicode.c ****     {0x01F7u,         -56},    {0x01F8u, WC_DIFF_ALT},    {0x021Fu,           0},    {0x0220u,     
 165:rtos/uC-FS/Source/fs_unicode.c ****     {0x023Bu,           1},    {0x023Cu,           0},    {0x023Du,        -163},    {0x023Eu,     
 166:rtos/uC-FS/Source/fs_unicode.c ****     {0x0244u,          69},    {0x0245u,          71},    {0x0246u, WC_DIFF_ALT},    {0x024Fu,     
 167:rtos/uC-FS/Source/fs_unicode.c ****     {0x0386u,          38},    {0x0387u,           0},    {0x0388u,          37},    {0x038Bu,     
 168:rtos/uC-FS/Source/fs_unicode.c ****     {0x0391u,          32},    {0x03A2u,           0},    {0x03A3u,          32},    {0x03ACu,     
 169:rtos/uC-FS/Source/fs_unicode.c ****     {0x03F4u,         -60},    {0x03F5u,           0},    {0x03F7u,           1},    {0x03F8u,     
 170:rtos/uC-FS/Source/fs_unicode.c ****     {0x0400u,          80},    {0x0410u,          32},    {0x0430u,           0},    {0x0460u, WC_D
 171:rtos/uC-FS/Source/fs_unicode.c ****     {0x04C1u, WC_DIFF_ALT},    {0x04CEu,           0},    {0x04D0u, WC_DIFF_ALT},    {0x0523u,     
 172:rtos/uC-FS/Source/fs_unicode.c ****     {0x1E00u, WC_DIFF_ALT},    {0x1E95u,           0},    {0x1E9Eu,       -7615},    {0x1E9Fu,     
 173:rtos/uC-FS/Source/fs_unicode.c ****     {0x1F18u,          -8},    {0x1F1Eu,           0},    {0x1F28u,          -8},    {0x1F30u,     
 174:rtos/uC-FS/Source/fs_unicode.c ****     {0x1F59u,          -8},    {0x1F5Au,           0},    {0x1F5Bu,          -8},    {0x1F5Cu,     
 175:rtos/uC-FS/Source/fs_unicode.c ****     {0x1F68u,          -8},    {0x1F70u,           0},    {0x1F88u,          -8},    {0x1F90u,     
 176:rtos/uC-FS/Source/fs_unicode.c ****     {0x1FB8u,          -8},    {0x1FBAu,         -74},    {0x1FBCu,          -9},    {0x1FBDu,     
 177:rtos/uC-FS/Source/fs_unicode.c ****     {0x1FDAu,        -100},    {0x1FDCu,           0},    {0x1FE8u,          -8},    {0x1FEAu,     
 178:rtos/uC-FS/Source/fs_unicode.c ****     {0x1FFCu,          -9},    {0x1FFDu,           0},    {0x2126u,       -7517},    {0x2127u,     
 179:rtos/uC-FS/Source/fs_unicode.c ****     {0x2133u,           0},    {0x2160u,          16},    {0x2170u,           0},    {0x2183u,     
 180:rtos/uC-FS/Source/fs_unicode.c ****     {0x2C2Fu,           0},    {0x2C60u,           1},    {0x2C61u,           0},    {0x2C62u,     
 181:rtos/uC-FS/Source/fs_unicode.c ****     {0x2C6Cu,           0},    {0x2C6Du,      -10780},    {0x2C6Eu,      -10749},    {0x2C6Fu,     
 182:rtos/uC-FS/Source/fs_unicode.c ****     {0x2C76u,           0},    {0x2C80u, WC_DIFF_ALT},    {0x2CE3u,           0},    {0xA640u, WC_D
 183:rtos/uC-FS/Source/fs_unicode.c ****     {0xA697u,           0},    {0xA722u, WC_DIFF_ALT},    {0xA72Fu,           0},    {0xA732u, WC_D
 184:rtos/uC-FS/Source/fs_unicode.c ****     {0xA77Eu, WC_DIFF_ALT},    {0xA787u,           0},    {0xA78Bu,           1},    {0xA78Cu,     
 185:rtos/uC-FS/Source/fs_unicode.c **** };
 186:rtos/uC-FS/Source/fs_unicode.c **** 
 187:rtos/uC-FS/Source/fs_unicode.c **** static  const  WC_SRCH_TBL_ENTRY  WC_CharToUpperTbl[] = {
 188:rtos/uC-FS/Source/fs_unicode.c ****     {0x0000u,           0},    {0x0061u,         -32},    {0x007Bu,           0},    {0x00B5u,     
 189:rtos/uC-FS/Source/fs_unicode.c ****     {0x00FFu,         121},    {0x0100u,           0},    {0x0101u, WC_DIFF_ALT},    {0x0130u,     
 190:rtos/uC-FS/Source/fs_unicode.c ****     {0x013Au, WC_DIFF_ALT},    {0x0149u,           0},    {0x014Bu, WC_DIFF_ALT},    {0x0178u,     
 191:rtos/uC-FS/Source/fs_unicode.c ****     {0x0183u, WC_DIFF_ALT},    {0x0186u,           0},    {0x0188u,          -1},    {0x0189u,     
 192:rtos/uC-FS/Source/fs_unicode.c ****     {0x0195u,          97},    {0x0196u,           0},    {0x0199u,          -1},    {0x019Au,     
 193:rtos/uC-FS/Source/fs_unicode.c ****     {0x01A6u,           0},    {0x01A8u,          -1},    {0x01A9u,           0},    {0x01ADu,     
 194:rtos/uC-FS/Source/fs_unicode.c ****     {0x01B7u,           0},    {0x01B9u,          -1},    {0x01BAu,           0},    {0x01BDu,     
 195:rtos/uC-FS/Source/fs_unicode.c ****     {0x01C6u,          -2},    {0x01C7u,           0},    {0x01C8u,          -1},    {0x01C9u,     
 196:rtos/uC-FS/Source/fs_unicode.c ****     {0x01CEu, WC_DIFF_ALT},    {0x01DDu,         -79},    {0x01DEu,           0},    {0x01DFu, WC_D
 197:rtos/uC-FS/Source/fs_unicode.c ****     {0x01F5u,          -1},    {0x01F6u,           0},    {0x01F9u, WC_DIFF_ALT},    {0x0220u,     
 198:rtos/uC-FS/Source/fs_unicode.c ****     {0x0242u,          -1},    {0x0243u,           0},    {0x0247u, WC_DIFF_ALT},    {0x0250u,     
 199:rtos/uC-FS/Source/fs_unicode.c ****     {0x0255u,           0},    {0x0256u,        -205},    {0x0258u,           0},    {0x0259u,     
 200:rtos/uC-FS/Source/fs_unicode.c ****     {0x0261u,           0},    {0x0263u,        -207},    {0x0264u,           0},    {0x0268u,     
 201:rtos/uC-FS/Source/fs_unicode.c ****     {0x026Fu,        -211},    {0x0270u,           0},    {0x0271u,       10749},    {0x0272u,     
ARM GAS  /tmp/cc4JYsWh.s 			page 5


 202:rtos/uC-FS/Source/fs_unicode.c ****     {0x027Eu,           0},    {0x0280u,        -218},    {0x0281u,           0},    {0x0283u,     
 203:rtos/uC-FS/Source/fs_unicode.c ****     {0x028Cu,         -71},    {0x028Du,           0},    {0x0292u,        -219},    {0x0293u,     
 204:rtos/uC-FS/Source/fs_unicode.c ****     {0x0377u,          -1},    {0x0378u,           0},    {0x037Bu,         130},    {0x037Eu,     
 205:rtos/uC-FS/Source/fs_unicode.c ****     {0x03C2u,         -31},    {0x03C3u,         -32},    {0x03CCu,         -64},    {0x03CDu,     
 206:rtos/uC-FS/Source/fs_unicode.c ****     {0x03D5u,         -47},    {0x03D6u,         -54},    {0x03D7u,          -8},    {0x03D8u,     
 207:rtos/uC-FS/Source/fs_unicode.c ****     {0x03F3u,           0},    {0x03F5u,         -96},    {0x03F6u,           0},    {0x03F8u,     
 208:rtos/uC-FS/Source/fs_unicode.c ****     {0x0450u,         -80},    {0x0460u,           0},    {0x0461u, WC_DIFF_ALT},    {0x0482u,     
 209:rtos/uC-FS/Source/fs_unicode.c ****     {0x04D0u,           0},    {0x04D1u, WC_DIFF_ALT},    {0x0524u,           0},    {0x0561u,     
 210:rtos/uC-FS/Source/fs_unicode.c ****     {0x1D7Eu,           0},    {0x1E01u, WC_DIFF_ALT},    {0x1E96u,           0},    {0x1E9Bu,     
 211:rtos/uC-FS/Source/fs_unicode.c ****     {0x1F10u,           8},    {0x1F16u,           0},    {0x1F20u,           8},    {0x1F28u,     
 212:rtos/uC-FS/Source/fs_unicode.c ****     {0x1F51u,           8},    {0x1F52u,           0},    {0x1F53u,           8},    {0x1F54u,     
 213:rtos/uC-FS/Source/fs_unicode.c ****     {0x1F60u,           8},    {0x1F68u,           0},    {0x1F70u,          74},    {0x1F72u,     
 214:rtos/uC-FS/Source/fs_unicode.c ****     {0x1F7Eu,           0},    {0x1F80u,           8},    {0x1F88u,           0},    {0x1F90u,     
 215:rtos/uC-FS/Source/fs_unicode.c ****     {0x1FB2u,           0},    {0x1FB3u,           9},    {0x1FB4u,           0},    {0x1FBEu,     
 216:rtos/uC-FS/Source/fs_unicode.c ****     {0x1FD2u,           0},    {0x1FE0u,           8},    {0x1FE2u,           0},    {0x1FE5u,     
 217:rtos/uC-FS/Source/fs_unicode.c ****     {0x214Fu,           0},    {0x2170u,         -16},    {0x2180u,           0},    {0x2184u,     
 218:rtos/uC-FS/Source/fs_unicode.c ****     {0x2C5Fu,           0},    {0x2C61u,          -1},    {0x2C62u,           0},    {0x2C65u,     
 219:rtos/uC-FS/Source/fs_unicode.c ****     {0x2C73u,          -1},    {0x2C74u,           0},    {0x2C76u,          -1},    {0x2C77u,     
 220:rtos/uC-FS/Source/fs_unicode.c ****     {0xA641u, WC_DIFF_ALT},    {0xA660u,           0},    {0xA663u, WC_DIFF_ALT},    {0xA66Eu,     
 221:rtos/uC-FS/Source/fs_unicode.c ****     {0xA733u, WC_DIFF_ALT},    {0xA770u,           0},    {0xA77Au, WC_DIFF_ALT},    {0xA77Du,     
 222:rtos/uC-FS/Source/fs_unicode.c ****     {0xFF41u,         -32},    {0xFF5Bu,           0},    {0xFFFFu,           0}
 223:rtos/uC-FS/Source/fs_unicode.c **** };
 224:rtos/uC-FS/Source/fs_unicode.c **** 
 225:rtos/uC-FS/Source/fs_unicode.c **** static  const  CPU_WCHAR  WC_CharIsAlphaTbl[] = {
 226:rtos/uC-FS/Source/fs_unicode.c ****     0x0000u,    0x0041u,    0x005Bu,    0x0061u,    0x007Bu,    0x00AAu,    0x00ABu,    0x00B5u,   
 227:rtos/uC-FS/Source/fs_unicode.c ****     0x02C2u,    0x02C6u,    0x02D2u,    0x02E0u,    0x02E5u,    0x02ECu,    0x02EDu,    0x02EEu,   
 228:rtos/uC-FS/Source/fs_unicode.c ****     0x037Eu,    0x0386u,    0x0387u,    0x0388u,    0x038Bu,    0x038Cu,    0x038Du,    0x038Eu,   
 229:rtos/uC-FS/Source/fs_unicode.c ****     0x0557u,    0x0559u,    0x055Au,    0x0561u,    0x0588u,    0x05B0u,    0x05BEu,    0x05BFu,   
 230:rtos/uC-FS/Source/fs_unicode.c ****     0x05EBu,    0x05F0u,    0x05F3u,    0x0610u,    0x061Bu,    0x0621u,    0x0658u,    0x0659u,   
 231:rtos/uC-FS/Source/fs_unicode.c ****     0x06F0u,    0x06FAu,    0x06FDu,    0x06FFu,    0x0700u,    0x0710u,    0x0740u,    0x074Du,   
 232:rtos/uC-FS/Source/fs_unicode.c ****     0x093Au,    0x093Du,    0x094Du,    0x0950u,    0x0951u,    0x0958u,    0x0964u,    0x0971u,   
 233:rtos/uC-FS/Source/fs_unicode.c ****     0x0991u,    0x0993u,    0x09A9u,    0x09AAu,    0x09B1u,    0x09B2u,    0x09B3u,    0x09B6u,   
 234:rtos/uC-FS/Source/fs_unicode.c ****     0x09CFu,    0x09D7u,    0x09D8u,    0x09DCu,    0x09DEu,    0x09DFu,    0x09E4u,    0x09F0u,   
 235:rtos/uC-FS/Source/fs_unicode.c ****     0x0A29u,    0x0A2Au,    0x0A31u,    0x0A32u,    0x0A34u,    0x0A35u,    0x0A37u,    0x0A38u,   
 236:rtos/uC-FS/Source/fs_unicode.c ****     0x0A52u,    0x0A59u,    0x0A5Du,    0x0A5Eu,    0x0A5Fu,    0x0A70u,    0x0A76u,    0x0A81u,   
 237:rtos/uC-FS/Source/fs_unicode.c ****     0x0AB1u,    0x0AB2u,    0x0AB4u,    0x0AB5u,    0x0ABAu,    0x0ABDu,    0x0AC6u,    0x0AC7u,   
 238:rtos/uC-FS/Source/fs_unicode.c ****     0x0B04u,    0x0B05u,    0x0B0Du,    0x0B0Fu,    0x0B11u,    0x0B13u,    0x0B29u,    0x0B2Au,   
 239:rtos/uC-FS/Source/fs_unicode.c ****     0x0B49u,    0x0B4Bu,    0x0B4Du,    0x0B56u,    0x0B58u,    0x0B5Cu,    0x0B5Eu,    0x0B5Fu,   
 240:rtos/uC-FS/Source/fs_unicode.c ****     0x0B91u,    0x0B92u,    0x0B96u,    0x0B99u,    0x0B9Bu,    0x0B9Cu,    0x0B9Du,    0x0B9Eu,   
 241:rtos/uC-FS/Source/fs_unicode.c ****     0x0BC3u,    0x0BC6u,    0x0BC9u,    0x0BCAu,    0x0BCDu,    0x0BD0u,    0x0BD1u,    0x0BD7u,   
 242:rtos/uC-FS/Source/fs_unicode.c ****     0x0C29u,    0x0C2Au,    0x0C34u,    0x0C35u,    0x0C3Au,    0x0C3Du,    0x0C45u,    0x0C46u,   
 243:rtos/uC-FS/Source/fs_unicode.c ****     0x0C64u,    0x0C82u,    0x0C84u,    0x0C85u,    0x0C8Du,    0x0C8Eu,    0x0C91u,    0x0C92u,   
 244:rtos/uC-FS/Source/fs_unicode.c ****     0x0CC9u,    0x0CCAu,    0x0CCDu,    0x0CD5u,    0x0CD7u,    0x0CDEu,    0x0CDFu,    0x0CE0u,   
 245:rtos/uC-FS/Source/fs_unicode.c ****     0x0D29u,    0x0D2Au,    0x0D3Au,    0x0D3Du,    0x0D45u,    0x0D46u,    0x0D49u,    0x0D4Au,   
 246:rtos/uC-FS/Source/fs_unicode.c ****     0x0D84u,    0x0D85u,    0x0D97u,    0x0D9Au,    0x0DB2u,    0x0DB3u,    0x0DBCu,    0x0DBDu,   
 247:rtos/uC-FS/Source/fs_unicode.c ****     0x0DE0u,    0x0DF2u,    0x0DF4u,    0x0E01u,    0x0E3Bu,    0x0E40u,    0x0E47u,    0x0E4Du,   
 248:rtos/uC-FS/Source/fs_unicode.c ****     0x0E8Bu,    0x0E8Du,    0x0E8Eu,    0x0E94u,    0x0E98u,    0x0E99u,    0x0EA0u,    0x0EA1u,   
 249:rtos/uC-FS/Source/fs_unicode.c ****     0x0EBAu,    0x0EBBu,    0x0EBEu,    0x0EC0u,    0x0EC5u,    0x0EC6u,    0x0EC7u,    0x0ECDu,   
 250:rtos/uC-FS/Source/fs_unicode.c ****     0x0F6Du,    0x0F71u,    0x0F82u,    0x0F88u,    0x0F8Cu,    0x0F90u,    0x0F98u,    0x0F99u,   
 251:rtos/uC-FS/Source/fs_unicode.c ****     0x1063u,    0x1065u,    0x1069u,    0x106Eu,    0x1087u,    0x108Eu,    0x108Fu,    0x10A0u,   
 252:rtos/uC-FS/Source/fs_unicode.c ****     0x11A3u,    0x11A8u,    0x11FAu,    0x1200u,    0x1249u,    0x124Au,    0x124Eu,    0x1250u,   
 253:rtos/uC-FS/Source/fs_unicode.c ****     0x128Eu,    0x1290u,    0x12B1u,    0x12B2u,    0x12B6u,    0x12B8u,    0x12BFu,    0x12C0u,   
 254:rtos/uC-FS/Source/fs_unicode.c ****     0x1316u,    0x1318u,    0x135Bu,    0x135Fu,    0x1360u,    0x1380u,    0x1390u,    0x13A0u,   
 255:rtos/uC-FS/Source/fs_unicode.c ****     0x16EBu,    0x16EEu,    0x16F1u,    0x1700u,    0x170Du,    0x170Eu,    0x1714u,    0x1720u,   
 256:rtos/uC-FS/Source/fs_unicode.c ****     0x1774u,    0x1780u,    0x17B4u,    0x17B6u,    0x17C9u,    0x17D7u,    0x17D8u,    0x17DCu,   
 257:rtos/uC-FS/Source/fs_unicode.c ****     0x192Cu,    0x1930u,    0x1939u,    0x1950u,    0x196Eu,    0x1970u,    0x1975u,    0x1980u,   
 258:rtos/uC-FS/Source/fs_unicode.c ****     0x1B44u,    0x1B45u,    0x1B4Cu,    0x1B80u,    0x1BAAu,    0x1BAEu,    0x1BB0u,    0x1C00u,   
ARM GAS  /tmp/cc4JYsWh.s 			page 6


 259:rtos/uC-FS/Source/fs_unicode.c ****     0x1F16u,    0x1F18u,    0x1F1Eu,    0x1F20u,    0x1F46u,    0x1F48u,    0x1F4Eu,    0x1F50u,   
 260:rtos/uC-FS/Source/fs_unicode.c ****     0x1F7Eu,    0x1F80u,    0x1FB5u,    0x1FB6u,    0x1FBDu,    0x1FBEu,    0x1FBFu,    0x1FC2u,   
 261:rtos/uC-FS/Source/fs_unicode.c ****     0x1FEDu,    0x1FF2u,    0x1FF5u,    0x1FF6u,    0x1FFDu,    0x2071u,    0x2072u,    0x207Fu,   
 262:rtos/uC-FS/Source/fs_unicode.c ****     0x2114u,    0x2115u,    0x2116u,    0x2119u,    0x211Eu,    0x2124u,    0x2125u,    0x2126u,   
 263:rtos/uC-FS/Source/fs_unicode.c ****     0x2140u,    0x2145u,    0x214Au,    0x214Eu,    0x214Fu,    0x2160u,    0x2189u,    0x24B6u,   
 264:rtos/uC-FS/Source/fs_unicode.c ****     0x2C7Eu,    0x2C80u,    0x2CE5u,    0x2D00u,    0x2D26u,    0x2D30u,    0x2D66u,    0x2D6Fu,   
 265:rtos/uC-FS/Source/fs_unicode.c ****     0x2DB7u,    0x2DB8u,    0x2DBFu,    0x2DC0u,    0x2DC7u,    0x2DC8u,    0x2DCFu,    0x2DD0u,   
 266:rtos/uC-FS/Source/fs_unicode.c ****     0x3008u,    0x3021u,    0x302Au,    0x3031u,    0x3036u,    0x3038u,    0x303Du,    0x3041u,   
 267:rtos/uC-FS/Source/fs_unicode.c ****     0x312Eu,    0x3131u,    0x318Fu,    0x31A0u,    0x31B8u,    0x31F0u,    0x3200u,    0x3400u,   
 268:rtos/uC-FS/Source/fs_unicode.c ****     0xA620u,    0xA62Au,    0xA62Cu,    0xA640u,    0xA660u,    0xA662u,    0xA66Fu,    0xA67Fu,   
 269:rtos/uC-FS/Source/fs_unicode.c ****     0xA802u,    0xA803u,    0xA806u,    0xA807u,    0xA80Bu,    0xA80Cu,    0xA828u,    0xA840u,   
 270:rtos/uC-FS/Source/fs_unicode.c ****     0xAA37u,    0xAA40u,    0xAA4Eu,    0xAC00u,    0xD7A4u,    0xF900u,    0xFA2Eu,    0xFA30u,   
 271:rtos/uC-FS/Source/fs_unicode.c ****     0xFB29u,    0xFB2Au,    0xFB37u,    0xFB38u,    0xFB3Du,    0xFB3Eu,    0xFB3Fu,    0xFB40u,   
 272:rtos/uC-FS/Source/fs_unicode.c ****     0xFD90u,    0xFD92u,    0xFDC8u,    0xFDF0u,    0xFDFCu,    0xFE70u,    0xFE75u,    0xFE76u,   
 273:rtos/uC-FS/Source/fs_unicode.c ****     0xFFC8u,    0xFFCAu,    0xFFD0u,    0xFFD2u,    0xFFD8u,    0xFFDAu,    0xFFDDu,    0xFFFFu
 274:rtos/uC-FS/Source/fs_unicode.c **** };
 275:rtos/uC-FS/Source/fs_unicode.c **** 
 276:rtos/uC-FS/Source/fs_unicode.c **** static  const  CPU_WCHAR  WC_CharIsLowerTbl[] = {
 277:rtos/uC-FS/Source/fs_unicode.c ****     0x0000u,    0x00AAu,    0x00ABu,    0x00BAu,    0x00BBu,    0x00DFu,    0x00E0u,    0x0138u,   
 278:rtos/uC-FS/Source/fs_unicode.c ****     0x01BBu,    0x01BEu,    0x01BFu,    0x01F0u,    0x01F1u,    0x0221u,    0x0222u,    0x0234u,   
 279:rtos/uC-FS/Source/fs_unicode.c ****     0x02C2u,    0x02E0u,    0x02E5u,    0x037Au,    0x037Bu,    0x0390u,    0x0391u,    0x03B0u,   
 280:rtos/uC-FS/Source/fs_unicode.c ****     0x1DC0u,    0x1E96u,    0x1E9Eu,    0x1E9Fu,    0x1EA0u,    0x1F50u,    0x1F58u,    0x1FB2u,   
 281:rtos/uC-FS/Source/fs_unicode.c ****     0x1FD4u,    0x1FD6u,    0x1FD8u,    0x1FE0u,    0x1FE8u,    0x1FF2u,    0x1FF5u,    0x1FF6u,   
 282:rtos/uC-FS/Source/fs_unicode.c ****     0x210Bu,    0x210Eu,    0x2110u,    0x2113u,    0x2114u,    0x212Fu,    0x2130u,    0x2134u,   
 283:rtos/uC-FS/Source/fs_unicode.c ****     0x2C75u,    0x2C77u,    0x2C7Eu,    0x2CE4u,    0x2CE5u,    0xA730u,    0xA732u,    0xA770u,   
 284:rtos/uC-FS/Source/fs_unicode.c **** };
 285:rtos/uC-FS/Source/fs_unicode.c **** 
 286:rtos/uC-FS/Source/fs_unicode.c **** 
 287:rtos/uC-FS/Source/fs_unicode.c **** /*
 288:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 289:rtos/uC-FS/Source/fs_unicode.c **** *                                      LOCAL FUNCTION PROTOTYPES
 290:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 291:rtos/uC-FS/Source/fs_unicode.c **** */
 292:rtos/uC-FS/Source/fs_unicode.c **** 
 293:rtos/uC-FS/Source/fs_unicode.c **** static  const  WC_SRCH_TBL_ENTRY  *WC_SrchTbl(const  WC_SRCH_TBL_ENTRY  *ptbl,
 294:rtos/uC-FS/Source/fs_unicode.c ****                                               CPU_SIZE_T                 tbl_len,
 295:rtos/uC-FS/Source/fs_unicode.c ****                                               CPU_WCHAR                  c_key);
 296:rtos/uC-FS/Source/fs_unicode.c **** 
 297:rtos/uC-FS/Source/fs_unicode.c **** 
 298:rtos/uC-FS/Source/fs_unicode.c **** /*
 299:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 300:rtos/uC-FS/Source/fs_unicode.c **** *                                     LOCAL CONFIGURATION ERRORS
 301:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 302:rtos/uC-FS/Source/fs_unicode.c **** */
 303:rtos/uC-FS/Source/fs_unicode.c **** 
 304:rtos/uC-FS/Source/fs_unicode.c **** 
 305:rtos/uC-FS/Source/fs_unicode.c **** /*
 306:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 307:rtos/uC-FS/Source/fs_unicode.c **** *                                             WC_StrLen()
 308:rtos/uC-FS/Source/fs_unicode.c **** *
 309:rtos/uC-FS/Source/fs_unicode.c **** * Description : Calculate length of a wide-character string.
 310:rtos/uC-FS/Source/fs_unicode.c **** *
 311:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pstr        Pointer to wide-character string (see Note #1).
 312:rtos/uC-FS/Source/fs_unicode.c **** *
 313:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character.
 314:rtos/uC-FS/Source/fs_unicode.c **** *
 315:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffer NOT modified.
ARM GAS  /tmp/cc4JYsWh.s 			page 7


 316:rtos/uC-FS/Source/fs_unicode.c **** *
 317:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String length calculation terminates when :
 318:rtos/uC-FS/Source/fs_unicode.c **** *
 319:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) String pointer points to NULL.
 320:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String buffer overlaps with NULL address.
 321:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 322:rtos/uC-FS/Source/fs_unicode.c **** *                           the NULL address.
 323:rtos/uC-FS/Source/fs_unicode.c **** *
 324:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Terminating NULL character found.
 325:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String length calculated for string up to but NOT           including
 326:rtos/uC-FS/Source/fs_unicode.c **** *                           the NULL character.
 327:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 328:rtos/uC-FS/Source/fs_unicode.c **** */
 329:rtos/uC-FS/Source/fs_unicode.c **** 
 330:rtos/uC-FS/Source/fs_unicode.c **** CPU_SIZE_T  WC_StrLen (CPU_WCHAR  *pstr)
 331:rtos/uC-FS/Source/fs_unicode.c **** {
 332:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  len;
 333:rtos/uC-FS/Source/fs_unicode.c **** 
 334:rtos/uC-FS/Source/fs_unicode.c **** 
 335:rtos/uC-FS/Source/fs_unicode.c ****     len = WC_StrLen_N(pstr,
 336:rtos/uC-FS/Source/fs_unicode.c ****                       DEF_INT_CPU_U_MAX_VAL);
 337:rtos/uC-FS/Source/fs_unicode.c **** 
 338:rtos/uC-FS/Source/fs_unicode.c ****     return (len);
 339:rtos/uC-FS/Source/fs_unicode.c **** }
 340:rtos/uC-FS/Source/fs_unicode.c **** 
 341:rtos/uC-FS/Source/fs_unicode.c **** 
 342:rtos/uC-FS/Source/fs_unicode.c **** /*
 343:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 344:rtos/uC-FS/Source/fs_unicode.c **** *                                            WC_StrLen_N()
 345:rtos/uC-FS/Source/fs_unicode.c **** *
 346:rtos/uC-FS/Source/fs_unicode.c **** * Description : Calculate length of a wide-character string, up to a maximum number of characters.
 347:rtos/uC-FS/Source/fs_unicode.c **** *
 348:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pstr        Pointer to wide-character string (see Note #1).
 349:rtos/uC-FS/Source/fs_unicode.c **** *
 350:rtos/uC-FS/Source/fs_unicode.c **** *               len_max     Maximum number of characters to search (see Note #2c).
 351:rtos/uC-FS/Source/fs_unicode.c **** *
 352:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character,
 353:rtos/uC-FS/Source/fs_unicode.c **** *                   if terminating NULL character     found.
 354:rtos/uC-FS/Source/fs_unicode.c **** *
 355:rtos/uC-FS/Source/fs_unicode.c **** *               Requested maximum number of characters to search,
 356:rtos/uC-FS/Source/fs_unicode.c **** *                   if terminating NULL character NOT found.
 357:rtos/uC-FS/Source/fs_unicode.c **** *
 358:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffer NOT modified.
 359:rtos/uC-FS/Source/fs_unicode.c **** *
 360:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String length calculation terminates when :
 361:rtos/uC-FS/Source/fs_unicode.c **** *
 362:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) String pointer points to NULL.
 363:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String buffer overlaps with NULL address.
 364:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 365:rtos/uC-FS/Source/fs_unicode.c **** *                           the NULL address.
 366:rtos/uC-FS/Source/fs_unicode.c **** *
 367:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Terminating NULL character found.
 368:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String length calculated for string up to but NOT           including
 369:rtos/uC-FS/Source/fs_unicode.c **** *                           the NULL character.
 370:rtos/uC-FS/Source/fs_unicode.c **** *
 371:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) 'len_max' number of characters searched.
 372:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
ARM GAS  /tmp/cc4JYsWh.s 			page 8


 373:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 374:rtos/uC-FS/Source/fs_unicode.c **** */
 375:rtos/uC-FS/Source/fs_unicode.c **** 
 376:rtos/uC-FS/Source/fs_unicode.c **** CPU_SIZE_T  WC_StrLen_N (CPU_WCHAR   *pstr,
 377:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_SIZE_T   len_max)
 378:rtos/uC-FS/Source/fs_unicode.c **** {
 379:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  len;
 380:rtos/uC-FS/Source/fs_unicode.c **** 
 381:rtos/uC-FS/Source/fs_unicode.c **** 
 382:rtos/uC-FS/Source/fs_unicode.c ****     len = 0u;
 383:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr != (CPU_WCHAR  *)  0 ) &&                     /* Calc str len until NULL ptr (see
 384:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr != (CPU_WCHAR   )'\0') &&                     /* ... or NULL char found      (see
 385:rtos/uC-FS/Source/fs_unicode.c ****            ( len   < (CPU_SIZE_T  )len_max)) {                  /* ... or max nbr chars srch'd (see
 386:rtos/uC-FS/Source/fs_unicode.c ****         len++;
 387:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 388:rtos/uC-FS/Source/fs_unicode.c ****     }
 389:rtos/uC-FS/Source/fs_unicode.c **** 
 390:rtos/uC-FS/Source/fs_unicode.c ****     return (len);
 391:rtos/uC-FS/Source/fs_unicode.c **** }
 392:rtos/uC-FS/Source/fs_unicode.c **** 
 393:rtos/uC-FS/Source/fs_unicode.c **** 
 394:rtos/uC-FS/Source/fs_unicode.c **** /*
 395:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 396:rtos/uC-FS/Source/fs_unicode.c **** *                                            WC_StrCopy()
 397:rtos/uC-FS/Source/fs_unicode.c **** *
 398:rtos/uC-FS/Source/fs_unicode.c **** * Description : Copy source wide-character string to destination wide-character string buffer.
 399:rtos/uC-FS/Source/fs_unicode.c **** *
 400:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pdest       Pointer to destination wide-character string buffer to receive source s
 401:rtos/uC-FS/Source/fs_unicode.c **** *
 402:rtos/uC-FS/Source/fs_unicode.c **** *               psrc        Pointer to source      wide-character string to copy into destination s
 403:rtos/uC-FS/Source/fs_unicode.c **** *
 404:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to destination string, if NO errors (see Note #2).
 405:rtos/uC-FS/Source/fs_unicode.c **** *
 406:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,               otherwise.
 407:rtos/uC-FS/Source/fs_unicode.c **** *
 408:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) Destination buffer size NOT validated; buffer overruns MUST be prevented by cal
 409:rtos/uC-FS/Source/fs_unicode.c **** *
 410:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination buffer size MUST be large enough to accommodate the entire sour
 411:rtos/uC-FS/Source/fs_unicode.c **** *                       string size including the terminating NULL character.
 412:rtos/uC-FS/Source/fs_unicode.c **** *
 413:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String copy terminates when :
 414:rtos/uC-FS/Source/fs_unicode.c **** *
 415:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 416:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string copy performed; NULL pointer returned.
 417:rtos/uC-FS/Source/fs_unicode.c **** *
 418:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Destination/Source string pointer(s) points to NULL.
 419:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String buffer(s) overlap with NULL address.
 420:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Source string copied into destination string buffer up to but NOT beyon
 421:rtos/uC-FS/Source/fs_unicode.c **** *                           including the NULL address; destination string buffer properly terminat
 422:rtos/uC-FS/Source/fs_unicode.c **** *                           with NULL character.
 423:rtos/uC-FS/Source/fs_unicode.c **** *
 424:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Source string's terminating NULL character found.
 425:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Entire source string copied into destination string buffer.
 426:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 427:rtos/uC-FS/Source/fs_unicode.c **** */
 428:rtos/uC-FS/Source/fs_unicode.c **** 
 429:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrCopy (CPU_WCHAR  *pdest,
ARM GAS  /tmp/cc4JYsWh.s 			page 9


 430:rtos/uC-FS/Source/fs_unicode.c ****                         CPU_WCHAR  *psrc)
 431:rtos/uC-FS/Source/fs_unicode.c **** {
 432:rtos/uC-FS/Source/fs_unicode.c ****     pdest = WC_StrCopy_N(pdest,
 433:rtos/uC-FS/Source/fs_unicode.c ****                          psrc,
 434:rtos/uC-FS/Source/fs_unicode.c ****                          DEF_INT_CPU_U_MAX_VAL);
 435:rtos/uC-FS/Source/fs_unicode.c **** 
 436:rtos/uC-FS/Source/fs_unicode.c ****     return (pdest);
 437:rtos/uC-FS/Source/fs_unicode.c **** }
 438:rtos/uC-FS/Source/fs_unicode.c **** 
 439:rtos/uC-FS/Source/fs_unicode.c **** 
 440:rtos/uC-FS/Source/fs_unicode.c **** 
 441:rtos/uC-FS/Source/fs_unicode.c **** /*
 442:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 443:rtos/uC-FS/Source/fs_unicode.c **** *                                           WC_StrCopy_N()
 444:rtos/uC-FS/Source/fs_unicode.c **** *
 445:rtos/uC-FS/Source/fs_unicode.c **** * Description : Copy source wide-character string to destination wide-character string buffer, up t
 446:rtos/uC-FS/Source/fs_unicode.c **** *               maximum number of characters.
 447:rtos/uC-FS/Source/fs_unicode.c **** *
 448:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pdest       Pointer to destination wide-character string buffer to receive source s
 449:rtos/uC-FS/Source/fs_unicode.c **** *
 450:rtos/uC-FS/Source/fs_unicode.c **** *               psrc        Pointer to source      wide-character string to copy into destination s
 451:rtos/uC-FS/Source/fs_unicode.c **** *
 452:rtos/uC-FS/Source/fs_unicode.c **** *               len_max     Maximum number of characters to copy (see Note #2d).
 453:rtos/uC-FS/Source/fs_unicode.c **** *
 454:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to destination string, if NO errors (see Note #2).
 455:rtos/uC-FS/Source/fs_unicode.c **** *
 456:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,               otherwise.
 457:rtos/uC-FS/Source/fs_unicode.c **** *
 458:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) Destination buffer size NOT validated; buffer overruns MUST be prevented by cal
 459:rtos/uC-FS/Source/fs_unicode.c **** *
 460:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination buffer size MUST be large enough to accommodate the entire sour
 461:rtos/uC-FS/Source/fs_unicode.c **** *                       string size including the terminating NULL character.
 462:rtos/uC-FS/Source/fs_unicode.c **** *
 463:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String copy terminates when :
 464:rtos/uC-FS/Source/fs_unicode.c **** *
 465:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 466:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string copy performed; NULL pointer returned.
 467:rtos/uC-FS/Source/fs_unicode.c **** *
 468:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Destination/Source string pointer(s) points to NULL.
 469:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String buffer(s) overlap with NULL address.
 470:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Source string copied into destination string buffer up to but NOT beyon
 471:rtos/uC-FS/Source/fs_unicode.c **** *                           including the NULL address; destination string buffer properly terminat
 472:rtos/uC-FS/Source/fs_unicode.c **** *                           with NULL character.
 473:rtos/uC-FS/Source/fs_unicode.c **** *
 474:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Source string's terminating NULL character found.
 475:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Entire source string copied into destination string buffer.
 476:rtos/uC-FS/Source/fs_unicode.c **** *
 477:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) 'len_max' number of characters copied.
 478:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 479:rtos/uC-FS/Source/fs_unicode.c **** *
 480:rtos/uC-FS/Source/fs_unicode.c **** *                           See also Note #1a.
 481:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 482:rtos/uC-FS/Source/fs_unicode.c **** */
 483:rtos/uC-FS/Source/fs_unicode.c **** 
 484:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrCopy_N (CPU_WCHAR    *pdest,
 485:rtos/uC-FS/Source/fs_unicode.c ****                           CPU_WCHAR    *psrc,
 486:rtos/uC-FS/Source/fs_unicode.c ****                           CPU_SIZE_T   len_max)
ARM GAS  /tmp/cc4JYsWh.s 			page 10


 487:rtos/uC-FS/Source/fs_unicode.c **** {
 488:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr;
 489:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 490:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_copy;
 491:rtos/uC-FS/Source/fs_unicode.c **** 
 492:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Rtn NULL if str ptr(s) NULL     
 493:rtos/uC-FS/Source/fs_unicode.c ****     if (pdest == (CPU_WCHAR *)0) {
 494:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 495:rtos/uC-FS/Source/fs_unicode.c ****     }
 496:rtos/uC-FS/Source/fs_unicode.c ****     if (psrc  == (CPU_WCHAR *)0) {
 497:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 498:rtos/uC-FS/Source/fs_unicode.c ****     }
 499:rtos/uC-FS/Source/fs_unicode.c **** 
 500:rtos/uC-FS/Source/fs_unicode.c ****     if (len_max == (CPU_SIZE_T)0) {                             /* Rtn NULL if copy len equals zero
 501:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 502:rtos/uC-FS/Source/fs_unicode.c ****     }
 503:rtos/uC-FS/Source/fs_unicode.c **** 
 504:rtos/uC-FS/Source/fs_unicode.c **** 
 505:rtos/uC-FS/Source/fs_unicode.c ****     pstr      = pdest;
 506:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next = pstr;
 507:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next++;
 508:rtos/uC-FS/Source/fs_unicode.c ****     len_copy  = 0u;
 509:rtos/uC-FS/Source/fs_unicode.c **** 
 510:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != (CPU_WCHAR  *)0) &&                   /* Copy str until NULL ptr(s)  [see
 511:rtos/uC-FS/Source/fs_unicode.c ****            ( psrc      != (CPU_WCHAR  *)0) &&
 512:rtos/uC-FS/Source/fs_unicode.c ****            (*psrc      != (CPU_WCHAR   )0) &&                   /* ... or NULL char found      (see
 513:rtos/uC-FS/Source/fs_unicode.c ****            ( len_copy  <  (CPU_SIZE_T  )len_max)) {             /* ... or max nbr chars copied (see
 514:rtos/uC-FS/Source/fs_unicode.c ****        *pstr = *psrc;
 515:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 516:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next++;
 517:rtos/uC-FS/Source/fs_unicode.c ****         psrc++;
 518:rtos/uC-FS/Source/fs_unicode.c ****         len_copy++;
 519:rtos/uC-FS/Source/fs_unicode.c ****     }
 520:rtos/uC-FS/Source/fs_unicode.c **** 
 521:rtos/uC-FS/Source/fs_unicode.c ****    *pstr = (CPU_WCHAR)'\0';                                     /* Append NULL char (see Note #2b2)
 522:rtos/uC-FS/Source/fs_unicode.c **** 
 523:rtos/uC-FS/Source/fs_unicode.c **** 
 524:rtos/uC-FS/Source/fs_unicode.c ****     return (pdest);
 525:rtos/uC-FS/Source/fs_unicode.c **** }
 526:rtos/uC-FS/Source/fs_unicode.c **** 
 527:rtos/uC-FS/Source/fs_unicode.c **** 
 528:rtos/uC-FS/Source/fs_unicode.c **** /*
 529:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 530:rtos/uC-FS/Source/fs_unicode.c **** *                                             WC_StrCat()
 531:rtos/uC-FS/Source/fs_unicode.c **** *
 532:rtos/uC-FS/Source/fs_unicode.c **** * Description : Append concatenation wide-character string to destination wide-character string.
 533:rtos/uC-FS/Source/fs_unicode.c **** *
 534:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pdest       Pointer to destination   wide-character string to append concatenation 
 535:rtos/uC-FS/Source/fs_unicode.c **** *
 536:rtos/uC-FS/Source/fs_unicode.c **** *               pstr_cat    Pointer to concatenation wide-character string to append to destination
 537:rtos/uC-FS/Source/fs_unicode.c **** *
 538:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to destination string, if NO errors (see Note #2).
 539:rtos/uC-FS/Source/fs_unicode.c **** *
 540:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,               otherwise.
 541:rtos/uC-FS/Source/fs_unicode.c **** *
 542:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) Destination string buffer size NOT validated; buffer overruns MUST be prevented
 543:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 11


 544:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination buffer size MUST be large enough to accommodate the entire conc
 545:rtos/uC-FS/Source/fs_unicode.c **** *                       string size including the terminating NULL character.
 546:rtos/uC-FS/Source/fs_unicode.c **** *
 547:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String concatenation terminates when :
 548:rtos/uC-FS/Source/fs_unicode.c **** *
 549:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 550:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 551:rtos/uC-FS/Source/fs_unicode.c **** *
 552:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Destination string overlaps with NULL address.
 553:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 554:rtos/uC-FS/Source/fs_unicode.c **** *
 555:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Destination/Concatenation string pointer(s) points to NULL.
 556:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String buffer(s) overlap with NULL address.
 557:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Concatenation string appended into destination string buffer up to but 
 558:rtos/uC-FS/Source/fs_unicode.c **** *                           beyond or including the NULL address; destination string buffer properl
 559:rtos/uC-FS/Source/fs_unicode.c **** *                           terminated with NULL character.
 560:rtos/uC-FS/Source/fs_unicode.c **** *
 561:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) Concatenation string's terminating NULL character found.
 562:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Entire concatenation string appended to destination string.
 563:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 564:rtos/uC-FS/Source/fs_unicode.c **** */
 565:rtos/uC-FS/Source/fs_unicode.c **** 
 566:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrCat (CPU_WCHAR  *pdest,
 567:rtos/uC-FS/Source/fs_unicode.c ****                        CPU_WCHAR  *pstr_cat)
 568:rtos/uC-FS/Source/fs_unicode.c **** {
 569:rtos/uC-FS/Source/fs_unicode.c ****     pdest = WC_StrCat_N(pdest,
 570:rtos/uC-FS/Source/fs_unicode.c ****                         pstr_cat,
 571:rtos/uC-FS/Source/fs_unicode.c ****                         DEF_INT_CPU_U_MAX_VAL);
 572:rtos/uC-FS/Source/fs_unicode.c **** 
 573:rtos/uC-FS/Source/fs_unicode.c ****     return (pdest);
 574:rtos/uC-FS/Source/fs_unicode.c **** }
 575:rtos/uC-FS/Source/fs_unicode.c **** 
 576:rtos/uC-FS/Source/fs_unicode.c **** 
 577:rtos/uC-FS/Source/fs_unicode.c **** /*
 578:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 579:rtos/uC-FS/Source/fs_unicode.c **** *                                            WC_StrCat_N()
 580:rtos/uC-FS/Source/fs_unicode.c **** *
 581:rtos/uC-FS/Source/fs_unicode.c **** * Description : Append wide-character concatenation string to destination wide-character string, up
 582:rtos/uC-FS/Source/fs_unicode.c **** *               maximum number of characters.
 583:rtos/uC-FS/Source/fs_unicode.c **** *
 584:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pdest       Pointer to destination   wide-character string to append concatenation 
 585:rtos/uC-FS/Source/fs_unicode.c **** *
 586:rtos/uC-FS/Source/fs_unicode.c **** *               pstr_cat    Pointer to concatenation wide-character string to append to destination
 587:rtos/uC-FS/Source/fs_unicode.c **** *
 588:rtos/uC-FS/Source/fs_unicode.c **** *               len_max     Maximum number of characters to concatenate (see Note #2e).
 589:rtos/uC-FS/Source/fs_unicode.c **** *
 590:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to destination string, if NO errors (see Note #2).
 591:rtos/uC-FS/Source/fs_unicode.c **** *
 592:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,               otherwise.
 593:rtos/uC-FS/Source/fs_unicode.c **** *
 594:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) Destination string buffer size NOT validated; buffer overruns MUST be prevented
 595:rtos/uC-FS/Source/fs_unicode.c **** *
 596:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination buffer size MUST be large enough to accommodate the entire conc
 597:rtos/uC-FS/Source/fs_unicode.c **** *                       string size including the terminating NULL character.
 598:rtos/uC-FS/Source/fs_unicode.c **** *
 599:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String concatenation terminates when :
 600:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 12


 601:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 602:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 603:rtos/uC-FS/Source/fs_unicode.c **** *
 604:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Destination string overlaps with NULL address.
 605:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 606:rtos/uC-FS/Source/fs_unicode.c **** *
 607:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Destination/Concatenation string pointer(s) points to NULL.
 608:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String buffer(s) overlap with NULL address.
 609:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Concatenation string appended into destination string buffer up to but 
 610:rtos/uC-FS/Source/fs_unicode.c **** *                           beyond or including the NULL address; destination string buffer properl
 611:rtos/uC-FS/Source/fs_unicode.c **** *                           terminated with NULL character.
 612:rtos/uC-FS/Source/fs_unicode.c **** *
 613:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) Concatenation string's terminating NULL character found.
 614:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Entire concatenation string appended to destination string.
 615:rtos/uC-FS/Source/fs_unicode.c **** *
 616:rtos/uC-FS/Source/fs_unicode.c **** *                   (e) 'len_max' number of characters concatenated.
 617:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 618:rtos/uC-FS/Source/fs_unicode.c **** *
 619:rtos/uC-FS/Source/fs_unicode.c **** *                           See also Note #1a.
 620:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 621:rtos/uC-FS/Source/fs_unicode.c **** */
 622:rtos/uC-FS/Source/fs_unicode.c **** 
 623:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrCat_N (CPU_WCHAR   *pdest,
 624:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_WCHAR   *pstr_cat,
 625:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_SIZE_T   len_max)
 626:rtos/uC-FS/Source/fs_unicode.c **** {
 627:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr;
 628:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 629:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_cat;
 630:rtos/uC-FS/Source/fs_unicode.c **** 
 631:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Rtn NULL if str ptr(s) NULL     
 632:rtos/uC-FS/Source/fs_unicode.c ****     if (pdest == (CPU_WCHAR *)0) {
 633:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 634:rtos/uC-FS/Source/fs_unicode.c ****     }
 635:rtos/uC-FS/Source/fs_unicode.c ****     if (pstr_cat == (CPU_WCHAR *)0) {
 636:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 637:rtos/uC-FS/Source/fs_unicode.c ****     }
 638:rtos/uC-FS/Source/fs_unicode.c **** 
 639:rtos/uC-FS/Source/fs_unicode.c ****     if (len_max == (CPU_SIZE_T)0) {                             /* Rtn NULL if cat len equals zero 
 640:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 641:rtos/uC-FS/Source/fs_unicode.c ****     }
 642:rtos/uC-FS/Source/fs_unicode.c **** 
 643:rtos/uC-FS/Source/fs_unicode.c **** 
 644:rtos/uC-FS/Source/fs_unicode.c ****     pstr = pdest;
 645:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr != (CPU_WCHAR *)0) &&                         /* Adv to end of cur dest str until
 646:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr != (CPU_WCHAR  )0)) {                         /* ... or NULL char found..        
 647:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 648:rtos/uC-FS/Source/fs_unicode.c ****     }
 649:rtos/uC-FS/Source/fs_unicode.c ****     if (pstr == (CPU_WCHAR *)0) {                               /* If NULL str overrun, rtn NULL (s
 650:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 651:rtos/uC-FS/Source/fs_unicode.c ****     }
 652:rtos/uC-FS/Source/fs_unicode.c **** 
 653:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next = pstr;
 654:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next++;
 655:rtos/uC-FS/Source/fs_unicode.c ****     len_cat   = 0u;
 656:rtos/uC-FS/Source/fs_unicode.c **** 
 657:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != (CPU_WCHAR  *)0) &&                   /* Cat str until NULL ptr(s)  [see 
ARM GAS  /tmp/cc4JYsWh.s 			page 13


 658:rtos/uC-FS/Source/fs_unicode.c ****            ( pstr_cat  != (CPU_WCHAR  *)0) &&
 659:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_cat  != (CPU_WCHAR   )0) &&                   /* ... or NULL char found     (see 
 660:rtos/uC-FS/Source/fs_unicode.c ****            ( len_cat   <  (CPU_SIZE_T  )len_max)) {             /* ... or max nbr chars cat'd (see 
 661:rtos/uC-FS/Source/fs_unicode.c ****        *pstr = *pstr_cat;
 662:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 663:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next++;
 664:rtos/uC-FS/Source/fs_unicode.c ****         pstr_cat++;
 665:rtos/uC-FS/Source/fs_unicode.c ****         len_cat++;
 666:rtos/uC-FS/Source/fs_unicode.c ****     }
 667:rtos/uC-FS/Source/fs_unicode.c **** 
 668:rtos/uC-FS/Source/fs_unicode.c ****    *pstr = (CPU_WCHAR)0;                                        /* Append NULL char (see Note #2c2)
 669:rtos/uC-FS/Source/fs_unicode.c **** 
 670:rtos/uC-FS/Source/fs_unicode.c **** 
 671:rtos/uC-FS/Source/fs_unicode.c ****     return (pdest);
 672:rtos/uC-FS/Source/fs_unicode.c **** }
 673:rtos/uC-FS/Source/fs_unicode.c **** 
 674:rtos/uC-FS/Source/fs_unicode.c **** 
 675:rtos/uC-FS/Source/fs_unicode.c **** /*
 676:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 677:rtos/uC-FS/Source/fs_unicode.c **** *                                             WC_StrCmp()
 678:rtos/uC-FS/Source/fs_unicode.c **** *
 679:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine if two wide-character strings are identical.
 680:rtos/uC-FS/Source/fs_unicode.c **** *
 681:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : p1_str      Pointer to first  wide-character string (see Note #1).
 682:rtos/uC-FS/Source/fs_unicode.c **** *
 683:rtos/uC-FS/Source/fs_unicode.c **** *               p2_str      Pointer to second wide-character string (see Note #1).
 684:rtos/uC-FS/Source/fs_unicode.c **** *
 685:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
 686:rtos/uC-FS/Source/fs_unicode.c **** *
 687:rtos/uC-FS/Source/fs_unicode.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 688:rtos/uC-FS/Source/fs_unicode.c **** *
 689:rtos/uC-FS/Source/fs_unicode.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 690:rtos/uC-FS/Source/fs_unicode.c **** *
 691:rtos/uC-FS/Source/fs_unicode.c **** *               See also Note #2b.
 692:rtos/uC-FS/Source/fs_unicode.c **** *
 693:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffers NOT modified.
 694:rtos/uC-FS/Source/fs_unicode.c **** *
 695:rtos/uC-FS/Source/fs_unicode.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'wcscmp() : DESCRIPTION' states that
 696:rtos/uC-FS/Source/fs_unicode.c **** *                       strcmp() function shall compare the wide-character string pointed to by ws1
 697:rtos/uC-FS/Source/fs_unicode.c **** *                       the string pointed to by wide-character ws2".
 698:rtos/uC-FS/Source/fs_unicode.c **** *
 699:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'wcscmp() : RETURN VALUE' states
 700:rtos/uC-FS/Source/fs_unicode.c **** *                          "upon completion, strncmp() shall return an integer greater than, equal 
 701:rtos/uC-FS/Source/fs_unicode.c **** *                           less than 0".
 702:rtos/uC-FS/Source/fs_unicode.c **** *
 703:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'wcscmp() : DESCRIPTION' adds th
 704:rtos/uC-FS/Source/fs_unicode.c **** *                           sign of a non-zero return value shall be determined by the sign of the
 705:rtos/uC-FS/Source/fs_unicode.c **** *                           difference between the values of the first pair of wide-character codes
 706:rtos/uC-FS/Source/fs_unicode.c **** *                           differ in the objects being compared".
 707:rtos/uC-FS/Source/fs_unicode.c **** *
 708:rtos/uC-FS/Source/fs_unicode.c **** *               (3) String comparison terminates when :
 709:rtos/uC-FS/Source/fs_unicode.c **** *
 710:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 711:rtos/uC-FS/Source/fs_unicode.c **** *                               (1) NULL strings identical; return 0.
 712:rtos/uC-FS/Source/fs_unicode.c **** *
 713:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 714:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
ARM GAS  /tmp/cc4JYsWh.s 			page 14


 715:rtos/uC-FS/Source/fs_unicode.c **** *
 716:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) 'p2_str' passed a NULL pointer.
 717:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 718:rtos/uC-FS/Source/fs_unicode.c **** *
 719:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) (A) BOTH strings point to NULL.
 720:rtos/uC-FS/Source/fs_unicode.c **** *                               (1) Strings overlap with NULL address.
 721:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 722:rtos/uC-FS/Source/fs_unicode.c **** *                                   return 0.
 723:rtos/uC-FS/Source/fs_unicode.c **** *
 724:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) (1) 'p1_str_next' points to NULL.
 725:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 726:rtos/uC-FS/Source/fs_unicode.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 727:rtos/uC-FS/Source/fs_unicode.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_ne
 728:rtos/uC-FS/Source/fs_unicode.c **** *
 729:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) 'p2_str_next' points to NULL.
 730:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 731:rtos/uC-FS/Source/fs_unicode.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 732:rtos/uC-FS/Source/fs_unicode.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_ne
 733:rtos/uC-FS/Source/fs_unicode.c **** *
 734:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Terminating NULL character found in both strings.
 735:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Strings identical; return 0.
 736:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Only one NULL character test required in conditional since previous con
 737:rtos/uC-FS/Source/fs_unicode.c **** *                           tested character equality.
 738:rtos/uC-FS/Source/fs_unicode.c **** *
 739:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Non-matching characters found.
 740:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 741:rtos/uC-FS/Source/fs_unicode.c **** *                           from the character pointed to by 'p1_str'.
 742:rtos/uC-FS/Source/fs_unicode.c **** *
 743:rtos/uC-FS/Source/fs_unicode.c **** *               (4) Since 32-bit signed arithmetic is performed to calculate a non-identical compar
 744:rtos/uC-FS/Source/fs_unicode.c **** *                   return value, 'CPU_WCHAR' native data type size MUST be 16-bit.
 745:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 746:rtos/uC-FS/Source/fs_unicode.c **** */
 747:rtos/uC-FS/Source/fs_unicode.c **** 
 748:rtos/uC-FS/Source/fs_unicode.c **** CPU_INT32S  WC_StrCmp (CPU_WCHAR  *p1_str,
 749:rtos/uC-FS/Source/fs_unicode.c ****                        CPU_WCHAR  *p2_str)
 750:rtos/uC-FS/Source/fs_unicode.c **** {
 751:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S  cmp_val;
 752:rtos/uC-FS/Source/fs_unicode.c **** 
 753:rtos/uC-FS/Source/fs_unicode.c **** 
 754:rtos/uC-FS/Source/fs_unicode.c ****     cmp_val = WC_StrCmp_N(p1_str,
 755:rtos/uC-FS/Source/fs_unicode.c ****                           p2_str,
 756:rtos/uC-FS/Source/fs_unicode.c ****                           DEF_INT_CPU_U_MAX_VAL);
 757:rtos/uC-FS/Source/fs_unicode.c **** 
 758:rtos/uC-FS/Source/fs_unicode.c ****     return (cmp_val);
 759:rtos/uC-FS/Source/fs_unicode.c **** }
 760:rtos/uC-FS/Source/fs_unicode.c **** 
 761:rtos/uC-FS/Source/fs_unicode.c **** 
 762:rtos/uC-FS/Source/fs_unicode.c **** /*
 763:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 764:rtos/uC-FS/Source/fs_unicode.c **** *                                            WC_StrCmp_N()
 765:rtos/uC-FS/Source/fs_unicode.c **** *
 766:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine if two wide-character strings are identical for up to a maximum number of
 767:rtos/uC-FS/Source/fs_unicode.c **** *               characters.
 768:rtos/uC-FS/Source/fs_unicode.c **** *
 769:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : p1_str      Pointer to first  wide-character string (see Note #1).
 770:rtos/uC-FS/Source/fs_unicode.c **** *
 771:rtos/uC-FS/Source/fs_unicode.c **** *               p2_str      Pointer to second wide-character string (see Note #1).
ARM GAS  /tmp/cc4JYsWh.s 			page 15


 772:rtos/uC-FS/Source/fs_unicode.c **** *
 773:rtos/uC-FS/Source/fs_unicode.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
 774:rtos/uC-FS/Source/fs_unicode.c **** *
 775:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
 776:rtos/uC-FS/Source/fs_unicode.c **** *
 777:rtos/uC-FS/Source/fs_unicode.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 778:rtos/uC-FS/Source/fs_unicode.c **** *
 779:rtos/uC-FS/Source/fs_unicode.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 780:rtos/uC-FS/Source/fs_unicode.c **** *
 781:rtos/uC-FS/Source/fs_unicode.c **** *               See also Note #2b.
 782:rtos/uC-FS/Source/fs_unicode.c **** *
 783:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffers NOT modified.
 784:rtos/uC-FS/Source/fs_unicode.c **** *
 785:rtos/uC-FS/Source/fs_unicode.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'wcsncmp() : DESCRIPTION' states tha
 786:rtos/uC-FS/Source/fs_unicode.c **** *
 787:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) "The wcsncmp() function shall compare ... the array pointed to by ws1 t
 788:rtos/uC-FS/Source/fs_unicode.c **** *                            array pointed to by ws2" but ...
 789:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) "not more than 'n' wide-character codes" of either array.
 790:rtos/uC-FS/Source/fs_unicode.c **** *
 791:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'wcsncmp() : RETURN VALUE' state
 792:rtos/uC-FS/Source/fs_unicode.c **** *                          "upon successful completion, wcstrncmp() shall return an integer greater
 793:rtos/uC-FS/Source/fs_unicode.c **** *                           equal to, or less than 0".
 794:rtos/uC-FS/Source/fs_unicode.c **** *
 795:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'wcsncmp() : DESCRIPTION' adds t
 796:rtos/uC-FS/Source/fs_unicode.c **** *                          "the sign of a non-zero return value is determined by the sign of the di
 797:rtos/uC-FS/Source/fs_unicode.c **** *                           between the values of the first pair of wide-character codes ... that d
 798:rtos/uC-FS/Source/fs_unicode.c **** *                           in the objects being compared".
 799:rtos/uC-FS/Source/fs_unicode.c **** *
 800:rtos/uC-FS/Source/fs_unicode.c **** *               (3) String comparison terminates when :
 801:rtos/uC-FS/Source/fs_unicode.c **** *
 802:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 803:rtos/uC-FS/Source/fs_unicode.c **** *                               (1) NULL strings identical; return 0.
 804:rtos/uC-FS/Source/fs_unicode.c **** *
 805:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 806:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 807:rtos/uC-FS/Source/fs_unicode.c **** *
 808:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) 'p2_str' passed a NULL pointer.
 809:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 810:rtos/uC-FS/Source/fs_unicode.c **** *
 811:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) (A) BOTH strings point to NULL.
 812:rtos/uC-FS/Source/fs_unicode.c **** *                               (1) Strings overlap with NULL address.
 813:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 814:rtos/uC-FS/Source/fs_unicode.c **** *                                   return 0.
 815:rtos/uC-FS/Source/fs_unicode.c **** *
 816:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) (1) 'p1_str_next' points to NULL.
 817:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 818:rtos/uC-FS/Source/fs_unicode.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 819:rtos/uC-FS/Source/fs_unicode.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_ne
 820:rtos/uC-FS/Source/fs_unicode.c **** *
 821:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) 'p2_str_next' points to NULL.
 822:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 823:rtos/uC-FS/Source/fs_unicode.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 824:rtos/uC-FS/Source/fs_unicode.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_ne
 825:rtos/uC-FS/Source/fs_unicode.c **** *
 826:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Terminating NULL character found in both strings.
 827:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Strings identical; return 0.
 828:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Only one NULL character test required in conditional since previous con
ARM GAS  /tmp/cc4JYsWh.s 			page 16


 829:rtos/uC-FS/Source/fs_unicode.c **** *                           tested character equality.
 830:rtos/uC-FS/Source/fs_unicode.c **** *
 831:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Non-matching characters found.
 832:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 833:rtos/uC-FS/Source/fs_unicode.c **** *                           from the character pointed to by 'p1_str'.
 834:rtos/uC-FS/Source/fs_unicode.c **** *
 835:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) (1) 'len_max' passed a zero length.
 836:rtos/uC-FS/Source/fs_unicode.c **** *                           (A) Zero-length strings identical; return 0.
 837:rtos/uC-FS/Source/fs_unicode.c **** *
 838:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) First 'len_max' number of characters identical.
 839:rtos/uC-FS/Source/fs_unicode.c **** *                           (A) Strings identical; return 0.
 840:rtos/uC-FS/Source/fs_unicode.c **** *
 841:rtos/uC-FS/Source/fs_unicode.c **** *                       See also Note #2a2.
 842:rtos/uC-FS/Source/fs_unicode.c **** *
 843:rtos/uC-FS/Source/fs_unicode.c **** *               (4) Since 32-bit signed arithmetic is performed to calculate a non-identical compar
 844:rtos/uC-FS/Source/fs_unicode.c **** *                   return value, 'CPU_WCHAR' native data type size MUST be 16-bit.
 845:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 846:rtos/uC-FS/Source/fs_unicode.c **** */
 847:rtos/uC-FS/Source/fs_unicode.c **** 
 848:rtos/uC-FS/Source/fs_unicode.c **** CPU_INT32S  WC_StrCmp_N (CPU_WCHAR   *p1_str,
 849:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_WCHAR   *p2_str,
 850:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_SIZE_T   len_max)
 851:rtos/uC-FS/Source/fs_unicode.c **** {
 852:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p1_str_next;
 853:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p2_str_next;
 854:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    char1;
 855:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    char2;
 856:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S   cmp_val;
 857:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   cmp_len;
 858:rtos/uC-FS/Source/fs_unicode.c **** 
 859:rtos/uC-FS/Source/fs_unicode.c **** 
 860:rtos/uC-FS/Source/fs_unicode.c ****     if (len_max == 0u) {                                        /* If cmp len equals zero, rtn 0   
 861:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);
 862:rtos/uC-FS/Source/fs_unicode.c ****     }
 863:rtos/uC-FS/Source/fs_unicode.c **** 
 864:rtos/uC-FS/Source/fs_unicode.c ****     if (p1_str == (CPU_WCHAR *)0) {
 865:rtos/uC-FS/Source/fs_unicode.c ****         if (p2_str == (CPU_WCHAR *)0) {
 866:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_INT32S)0);                             /* If BOTH str ptrs NULL,  rtn 0   
 867:rtos/uC-FS/Source/fs_unicode.c ****         }
 868:rtos/uC-FS/Source/fs_unicode.c ****         char2   = *p2_str;
 869:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)0 - (CPU_INT32S)char2;
 870:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 871:rtos/uC-FS/Source/fs_unicode.c ****     }
 872:rtos/uC-FS/Source/fs_unicode.c ****     if (p2_str == (CPU_WCHAR *)0) {
 873:rtos/uC-FS/Source/fs_unicode.c ****         char1   = *p1_str;
 874:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)char1;
 875:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 876:rtos/uC-FS/Source/fs_unicode.c ****     }
 877:rtos/uC-FS/Source/fs_unicode.c **** 
 878:rtos/uC-FS/Source/fs_unicode.c **** 
 879:rtos/uC-FS/Source/fs_unicode.c ****     p1_str_next = p1_str;
 880:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next = p2_str;
 881:rtos/uC-FS/Source/fs_unicode.c ****     p1_str_next++;
 882:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next++;
 883:rtos/uC-FS/Source/fs_unicode.c ****     char1       = *p1_str;
 884:rtos/uC-FS/Source/fs_unicode.c ****     char2       = *p2_str;
 885:rtos/uC-FS/Source/fs_unicode.c ****     cmp_len     = 0u;
ARM GAS  /tmp/cc4JYsWh.s 			page 17


 886:rtos/uC-FS/Source/fs_unicode.c ****     while (( char1       ==  char2)          &&                 /* Cmp strs until non-matching char
 887:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
 888:rtos/uC-FS/Source/fs_unicode.c ****            ( p1_str_next != (CPU_WCHAR  *)0) &&                 /* ... or NULL ptr(s) found        
 889:rtos/uC-FS/Source/fs_unicode.c ****            ( p2_str_next != (CPU_WCHAR  *)0) &&
 890:rtos/uC-FS/Source/fs_unicode.c ****            ( cmp_len     <  (CPU_SIZE_T  )len_max)) {           /* ... or max nbr chars cmp'd      
 891:rtos/uC-FS/Source/fs_unicode.c ****         p1_str_next++;
 892:rtos/uC-FS/Source/fs_unicode.c ****         p2_str_next++;
 893:rtos/uC-FS/Source/fs_unicode.c ****         p1_str++;
 894:rtos/uC-FS/Source/fs_unicode.c ****         p2_str++;
 895:rtos/uC-FS/Source/fs_unicode.c ****         cmp_len++;
 896:rtos/uC-FS/Source/fs_unicode.c ****         char1 = *p1_str;
 897:rtos/uC-FS/Source/fs_unicode.c ****         char2 = *p2_str;
 898:rtos/uC-FS/Source/fs_unicode.c ****     }
 899:rtos/uC-FS/Source/fs_unicode.c **** 
 900:rtos/uC-FS/Source/fs_unicode.c **** 
 901:rtos/uC-FS/Source/fs_unicode.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for len nb
 902:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);                                 /* ... rtn 0                   (see
 903:rtos/uC-FS/Source/fs_unicode.c ****     }
 904:rtos/uC-FS/Source/fs_unicode.c **** 
 905:rtos/uC-FS/Source/fs_unicode.c ****     if (char1 != char2) {                                       /* If strs NOT identical, ...      
 906:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = (CPU_INT32S)char1 - (CPU_INT32S)char2;       /* ... calc & rtn char diff    (see
 907:rtos/uC-FS/Source/fs_unicode.c **** 
 908:rtos/uC-FS/Source/fs_unicode.c ****     } else if (char1 == (CPU_WCHAR)0) {                         /* If NULL char(s) found, ...      
 909:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = 0;                                           /* ... strs identical; rtn 0   (see
 910:rtos/uC-FS/Source/fs_unicode.c **** 
 911:rtos/uC-FS/Source/fs_unicode.c ****     } else {
 912:rtos/uC-FS/Source/fs_unicode.c ****         if (p1_str_next == (CPU_WCHAR *)0) {
 913:rtos/uC-FS/Source/fs_unicode.c ****             if (p2_str_next == (CPU_WCHAR *)0) {                /* If BOTH next str ptrs NULL, ... 
 914:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0;                       /* ... rtn 0                   (see
 915:rtos/uC-FS/Source/fs_unicode.c ****             } else {                                            /* If p1_str_next NULL, ...        
 916:rtos/uC-FS/Source/fs_unicode.c ****                 char2    = *p2_str_next;
 917:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0 - (CPU_INT32S)char2;   /* ... rtn neg p2_str_next val (see
 918:rtos/uC-FS/Source/fs_unicode.c ****             }
 919:rtos/uC-FS/Source/fs_unicode.c ****         } else {                                                /* If p2_str_next NULL, ...        
 920:rtos/uC-FS/Source/fs_unicode.c ****             char1   = *p1_str_next;
 921:rtos/uC-FS/Source/fs_unicode.c ****             cmp_val = (CPU_INT32S)char1;                        /* ... rtn pos p1_str_next val (see
 922:rtos/uC-FS/Source/fs_unicode.c ****         }
 923:rtos/uC-FS/Source/fs_unicode.c ****     }
 924:rtos/uC-FS/Source/fs_unicode.c **** 
 925:rtos/uC-FS/Source/fs_unicode.c **** 
 926:rtos/uC-FS/Source/fs_unicode.c ****     return (cmp_val);
 927:rtos/uC-FS/Source/fs_unicode.c **** }
 928:rtos/uC-FS/Source/fs_unicode.c **** 
 929:rtos/uC-FS/Source/fs_unicode.c **** 
 930:rtos/uC-FS/Source/fs_unicode.c **** /*
 931:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
 932:rtos/uC-FS/Source/fs_unicode.c **** *                                        WC_StrCmpIgnoreCase()
 933:rtos/uC-FS/Source/fs_unicode.c **** *
 934:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine if two wide-character strings are identical, ignoring case.
 935:rtos/uC-FS/Source/fs_unicode.c **** *
 936:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : p1_str      Pointer to first  wide-character string (see Note #1).
 937:rtos/uC-FS/Source/fs_unicode.c **** *
 938:rtos/uC-FS/Source/fs_unicode.c **** *               p2_str      Pointer to second wide-character string (see Note #1).
 939:rtos/uC-FS/Source/fs_unicode.c **** *
 940:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
 941:rtos/uC-FS/Source/fs_unicode.c **** *
 942:rtos/uC-FS/Source/fs_unicode.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
ARM GAS  /tmp/cc4JYsWh.s 			page 18


 943:rtos/uC-FS/Source/fs_unicode.c **** *
 944:rtos/uC-FS/Source/fs_unicode.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 945:rtos/uC-FS/Source/fs_unicode.c **** *
 946:rtos/uC-FS/Source/fs_unicode.c **** *               See also Note #2b.
 947:rtos/uC-FS/Source/fs_unicode.c **** *
 948:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffers NOT modified.
 949:rtos/uC-FS/Source/fs_unicode.c **** *
 950:rtos/uC-FS/Source/fs_unicode.c **** *               (2) (1) (1) The Unicode Standard 5.0, Section 5.18, states that "caseless matching 
 951:rtos/uC-FS/Source/fs_unicode.c **** *                           implemented using case folding, which is the process of mapping strings
 952:rtos/uC-FS/Source/fs_unicode.c **** *                           canonical form where case differences are erased."
 953:rtos/uC-FS/Source/fs_unicode.c **** *
 954:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) The Unicode Standard 5.0, Section 3.13, D129, states that "a string X i
 955:rtos/uC-FS/Source/fs_unicode.c **** *                           caseless match for a string Y if and only if: toCasefold(X) = toCasefol
 956:rtos/uC-FS/Source/fs_unicode.c **** *
 957:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) (1) IEEE Std 1003.1, 2004 Edition, Section 'wcscmp() : RETURN VALUE' states
 958:rtos/uC-FS/Source/fs_unicode.c **** *                          "upon completion, strncmp() shall return an integer greater than, equal 
 959:rtos/uC-FS/Source/fs_unicode.c **** *                           less than 0".
 960:rtos/uC-FS/Source/fs_unicode.c **** *
 961:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'wcscmp() : DESCRIPTION' adds th
 962:rtos/uC-FS/Source/fs_unicode.c **** *                           sign of a non-zero return value shall be determined by the sign of the
 963:rtos/uC-FS/Source/fs_unicode.c **** *                           difference between the values of the first pair of wide-character codes
 964:rtos/uC-FS/Source/fs_unicode.c **** *                           differ in the objects being compared".
 965:rtos/uC-FS/Source/fs_unicode.c **** *
 966:rtos/uC-FS/Source/fs_unicode.c **** *               (3) String comparison terminates when :
 967:rtos/uC-FS/Source/fs_unicode.c **** *
 968:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 969:rtos/uC-FS/Source/fs_unicode.c **** *                               (1) NULL strings identical; return 0.
 970:rtos/uC-FS/Source/fs_unicode.c **** *
 971:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 972:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
 973:rtos/uC-FS/Source/fs_unicode.c **** *                                       folded (see Note #5).
 974:rtos/uC-FS/Source/fs_unicode.c **** *
 975:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) 'p2_str' passed a NULL pointer.
 976:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
 977:rtos/uC-FS/Source/fs_unicode.c **** *                                       folded (see Note #5).
 978:rtos/uC-FS/Source/fs_unicode.c **** *
 979:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) (A) BOTH strings point to NULL.
 980:rtos/uC-FS/Source/fs_unicode.c **** *                               (1) Strings overlap with NULL address.
 981:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 982:rtos/uC-FS/Source/fs_unicode.c **** *                                   return 0.
 983:rtos/uC-FS/Source/fs_unicode.c **** *
 984:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) (1) 'p1_str_next' points to NULL.
 985:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 986:rtos/uC-FS/Source/fs_unicode.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 987:rtos/uC-FS/Source/fs_unicode.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_ne
 988:rtos/uC-FS/Source/fs_unicode.c **** *                                       case folded (see Note #5).
 989:rtos/uC-FS/Source/fs_unicode.c **** *
 990:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) 'p2_str_next' points to NULL.
 991:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 992:rtos/uC-FS/Source/fs_unicode.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 993:rtos/uC-FS/Source/fs_unicode.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_ne
 994:rtos/uC-FS/Source/fs_unicode.c **** *                                       case folded (see Note #5).
 995:rtos/uC-FS/Source/fs_unicode.c **** *
 996:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Terminating NULL character found in both strings.
 997:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Strings identical; return 0.
 998:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Only one NULL character test required in conditional since previous con
 999:rtos/uC-FS/Source/fs_unicode.c **** *                           tested character equality.
ARM GAS  /tmp/cc4JYsWh.s 			page 19


1000:rtos/uC-FS/Source/fs_unicode.c **** *
1001:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Non-matching characters found.
1002:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1003:rtos/uC-FS/Source/fs_unicode.c **** *                           case folded, from the character pointed to by 'p1_str', case folded.
1004:rtos/uC-FS/Source/fs_unicode.c **** *
1005:rtos/uC-FS/Source/fs_unicode.c **** *               (4) Since 32-bit signed arithmetic is performed to calculate a non-identical compar
1006:rtos/uC-FS/Source/fs_unicode.c **** *                   return value, 'CPU_WCHAR' native data type size MUST be 16-bit.
1007:rtos/uC-FS/Source/fs_unicode.c **** *
1008:rtos/uC-FS/Source/fs_unicode.c **** *               (5) In analogy to 'Str_CmpIgnoreCase()', the return value is calculated from the va
1009:rtos/uC-FS/Source/fs_unicode.c **** *                   the character(s) from the strings, case-folded.
1010:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1011:rtos/uC-FS/Source/fs_unicode.c **** */
1012:rtos/uC-FS/Source/fs_unicode.c **** 
1013:rtos/uC-FS/Source/fs_unicode.c **** CPU_INT32S  WC_StrCmpIgnoreCase (CPU_WCHAR  *p1_str,
1014:rtos/uC-FS/Source/fs_unicode.c ****                                  CPU_WCHAR  *p2_str)
1015:rtos/uC-FS/Source/fs_unicode.c **** {
1016:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S  cmp_val;
1017:rtos/uC-FS/Source/fs_unicode.c **** 
1018:rtos/uC-FS/Source/fs_unicode.c **** 
1019:rtos/uC-FS/Source/fs_unicode.c ****     cmp_val = WC_StrCmpIgnoreCase_N(p1_str,
1020:rtos/uC-FS/Source/fs_unicode.c ****                                     p2_str,
1021:rtos/uC-FS/Source/fs_unicode.c ****                                     DEF_INT_CPU_U_MAX_VAL);
1022:rtos/uC-FS/Source/fs_unicode.c **** 
1023:rtos/uC-FS/Source/fs_unicode.c ****     return (cmp_val);
1024:rtos/uC-FS/Source/fs_unicode.c **** }
1025:rtos/uC-FS/Source/fs_unicode.c **** 
1026:rtos/uC-FS/Source/fs_unicode.c **** 
1027:rtos/uC-FS/Source/fs_unicode.c **** /*
1028:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1029:rtos/uC-FS/Source/fs_unicode.c **** *                                       WC_StrCmpIgnoreCase_N()
1030:rtos/uC-FS/Source/fs_unicode.c **** *
1031:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine if two wide-character strings are identical for up to a maximum number of
1032:rtos/uC-FS/Source/fs_unicode.c **** *               characters, ignoring case.
1033:rtos/uC-FS/Source/fs_unicode.c **** *
1034:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : p1_str      Pointer to first  wide-character string (see Note #1).
1035:rtos/uC-FS/Source/fs_unicode.c **** *
1036:rtos/uC-FS/Source/fs_unicode.c **** *               p2_str      Pointer to second wide-character string (see Note #1).
1037:rtos/uC-FS/Source/fs_unicode.c **** *
1038:rtos/uC-FS/Source/fs_unicode.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
1039:rtos/uC-FS/Source/fs_unicode.c **** *
1040:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
1041:rtos/uC-FS/Source/fs_unicode.c **** *
1042:rtos/uC-FS/Source/fs_unicode.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
1043:rtos/uC-FS/Source/fs_unicode.c **** *
1044:rtos/uC-FS/Source/fs_unicode.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
1045:rtos/uC-FS/Source/fs_unicode.c **** *
1046:rtos/uC-FS/Source/fs_unicode.c **** *               See also Note #2b.
1047:rtos/uC-FS/Source/fs_unicode.c **** *
1048:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffers NOT modified.
1049:rtos/uC-FS/Source/fs_unicode.c **** *
1050:rtos/uC-FS/Source/fs_unicode.c **** *               (2) (a) (1) The Unicode Standard 5.0, Section 5.18, states that "caseless matching 
1051:rtos/uC-FS/Source/fs_unicode.c **** *                           implemented using case folding, which is the process of mapping strings
1052:rtos/uC-FS/Source/fs_unicode.c **** *                           canonical form where case differences are erased."
1053:rtos/uC-FS/Source/fs_unicode.c **** *
1054:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) The Unicode Standard 5.0, Section 3.13, D129, states that "a string X i
1055:rtos/uC-FS/Source/fs_unicode.c **** *                           caseless match for a string Y if and only if: toCasefold(X) = toCasefol
1056:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 20


1057:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) (1) IEEE Std 1003.1, 2004 Edition, Section 'wcsncmp() : RETURN VALUE' state
1058:rtos/uC-FS/Source/fs_unicode.c **** *                          "upon successful completion, wcstrncmp() shall return an integer greater
1059:rtos/uC-FS/Source/fs_unicode.c **** *                           equal to, or less than 0".
1060:rtos/uC-FS/Source/fs_unicode.c **** *
1061:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'wcsncmp() : DESCRIPTION' adds t
1062:rtos/uC-FS/Source/fs_unicode.c **** *                          "the sign of a non-zero return value is determined by the sign of the di
1063:rtos/uC-FS/Source/fs_unicode.c **** *                           between the values of the first pair of wide-character codes ... that d
1064:rtos/uC-FS/Source/fs_unicode.c **** *                           in the objects being compared".
1065:rtos/uC-FS/Source/fs_unicode.c **** *
1066:rtos/uC-FS/Source/fs_unicode.c **** *               (3) String comparison terminates when :
1067:rtos/uC-FS/Source/fs_unicode.c **** *
1068:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
1069:rtos/uC-FS/Source/fs_unicode.c **** *                               (1) NULL strings identical; return 0.
1070:rtos/uC-FS/Source/fs_unicode.c **** *
1071:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
1072:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
1073:rtos/uC-FS/Source/fs_unicode.c **** *                                       folded (see Note #5).
1074:rtos/uC-FS/Source/fs_unicode.c **** *
1075:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) 'p2_str' passed a NULL pointer.
1076:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
1077:rtos/uC-FS/Source/fs_unicode.c **** *                                       folded (see Note #5).
1078:rtos/uC-FS/Source/fs_unicode.c **** *
1079:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) (A) BOTH strings point to NULL.
1080:rtos/uC-FS/Source/fs_unicode.c **** *                               (1) Strings overlap with NULL address.
1081:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
1082:rtos/uC-FS/Source/fs_unicode.c **** *                                   return 0.
1083:rtos/uC-FS/Source/fs_unicode.c **** *
1084:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) (1) 'p1_str_next' points to NULL.
1085:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) 'p1_str' overlaps with NULL address.
1086:rtos/uC-FS/Source/fs_unicode.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1087:rtos/uC-FS/Source/fs_unicode.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_ne
1088:rtos/uC-FS/Source/fs_unicode.c **** *                                       case folded (see Note #5).
1089:rtos/uC-FS/Source/fs_unicode.c **** *
1090:rtos/uC-FS/Source/fs_unicode.c **** *                               (2) 'p2_str_next' points to NULL.
1091:rtos/uC-FS/Source/fs_unicode.c **** *                                   (a) 'p2_str' overlaps with NULL address.
1092:rtos/uC-FS/Source/fs_unicode.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1093:rtos/uC-FS/Source/fs_unicode.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_ne
1094:rtos/uC-FS/Source/fs_unicode.c **** *                                       case folded (see Note #5).
1095:rtos/uC-FS/Source/fs_unicode.c **** *
1096:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Terminating NULL character found in both strings.
1097:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Strings identical; return 0.
1098:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Only one NULL character test required in conditional since previous con
1099:rtos/uC-FS/Source/fs_unicode.c **** *                           tested character equality.
1100:rtos/uC-FS/Source/fs_unicode.c **** *
1101:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Non-matching characters found.
1102:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1103:rtos/uC-FS/Source/fs_unicode.c **** *                           case folded, from the character pointed to by 'p1_str', case folded.
1104:rtos/uC-FS/Source/fs_unicode.c **** *
1105:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) (1) 'len_max' passed a zero length.
1106:rtos/uC-FS/Source/fs_unicode.c **** *                           (A) Zero-length strings identical; return 0.
1107:rtos/uC-FS/Source/fs_unicode.c **** *
1108:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) First 'len_max' number of characters identical.
1109:rtos/uC-FS/Source/fs_unicode.c **** *                           (A) Strings identical; return 0.
1110:rtos/uC-FS/Source/fs_unicode.c **** *
1111:rtos/uC-FS/Source/fs_unicode.c **** *                       See also Note #2a1C.
1112:rtos/uC-FS/Source/fs_unicode.c **** *
1113:rtos/uC-FS/Source/fs_unicode.c **** *               (4) Since 32-bit signed arithmetic is performed to calculate a non-identical compar
ARM GAS  /tmp/cc4JYsWh.s 			page 21


1114:rtos/uC-FS/Source/fs_unicode.c **** *                   return value, 'CPU_WCHAR' native data type size MUST be 16-bit.
1115:rtos/uC-FS/Source/fs_unicode.c **** *
1116:rtos/uC-FS/Source/fs_unicode.c **** *               (5) In analogy to 'Str_CmpIgnoreCase_N()', the return value is calculated from the 
1117:rtos/uC-FS/Source/fs_unicode.c **** *                   of the character(s) from the strings, case-folded.
1118:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1119:rtos/uC-FS/Source/fs_unicode.c **** */
1120:rtos/uC-FS/Source/fs_unicode.c **** 
1121:rtos/uC-FS/Source/fs_unicode.c **** CPU_INT32S  WC_StrCmpIgnoreCase_N (CPU_WCHAR   *p1_str,
1122:rtos/uC-FS/Source/fs_unicode.c ****                                    CPU_WCHAR   *p2_str,
1123:rtos/uC-FS/Source/fs_unicode.c ****                                    CPU_SIZE_T   len_max)
1124:rtos/uC-FS/Source/fs_unicode.c **** {
1125:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p1_str_next;
1126:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p2_str_next;
1127:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    char1;
1128:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    char2;
1129:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S   cmp_val;
1130:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   cmp_len;
1131:rtos/uC-FS/Source/fs_unicode.c **** 
1132:rtos/uC-FS/Source/fs_unicode.c **** 
1133:rtos/uC-FS/Source/fs_unicode.c ****     if (len_max == 0u) {                                        /* If cmp len equals zero, rtn 0   
1134:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);
1135:rtos/uC-FS/Source/fs_unicode.c ****     }
1136:rtos/uC-FS/Source/fs_unicode.c **** 
1137:rtos/uC-FS/Source/fs_unicode.c ****     if (p1_str == (CPU_WCHAR *)0) {
1138:rtos/uC-FS/Source/fs_unicode.c ****         if (p2_str == (CPU_WCHAR *)0) {
1139:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_INT32S)0);                             /* If BOTH str ptrs NULL,  rtn 0   
1140:rtos/uC-FS/Source/fs_unicode.c ****         }
1141:rtos/uC-FS/Source/fs_unicode.c ****         char2   =  WC_CharToCasefold(*p2_str);
1142:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)0 - (CPU_INT32S)char2;
1143:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
1144:rtos/uC-FS/Source/fs_unicode.c ****     }
1145:rtos/uC-FS/Source/fs_unicode.c ****     if (p2_str == (CPU_WCHAR *)0) {
1146:rtos/uC-FS/Source/fs_unicode.c ****         char1   =  WC_CharToCasefold(*p1_str);
1147:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)char1;
1148:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
1149:rtos/uC-FS/Source/fs_unicode.c ****     }
1150:rtos/uC-FS/Source/fs_unicode.c **** 
1151:rtos/uC-FS/Source/fs_unicode.c **** 
1152:rtos/uC-FS/Source/fs_unicode.c ****     p1_str_next = p1_str;
1153:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next = p2_str;
1154:rtos/uC-FS/Source/fs_unicode.c ****     p1_str_next++;
1155:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next++;
1156:rtos/uC-FS/Source/fs_unicode.c ****     char1       = WC_CharToCasefold(*p1_str);
1157:rtos/uC-FS/Source/fs_unicode.c ****     char2       = WC_CharToCasefold(*p2_str);
1158:rtos/uC-FS/Source/fs_unicode.c ****     cmp_len     = 0u;
1159:rtos/uC-FS/Source/fs_unicode.c ****     while (( char1       ==  char2)          &&                 /* Cmp strs until non-matching char
1160:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
1161:rtos/uC-FS/Source/fs_unicode.c ****            ( p1_str_next != (CPU_WCHAR  *)0) &&                 /* ... or NULL ptr(s) found        
1162:rtos/uC-FS/Source/fs_unicode.c ****            ( p2_str_next != (CPU_WCHAR  *)0) &&
1163:rtos/uC-FS/Source/fs_unicode.c ****            ( cmp_len     <  (CPU_SIZE_T  )len_max)) {           /* ... or max nbr chars cmp'd      
1164:rtos/uC-FS/Source/fs_unicode.c ****         p1_str_next++;
1165:rtos/uC-FS/Source/fs_unicode.c ****         p2_str_next++;
1166:rtos/uC-FS/Source/fs_unicode.c ****         p1_str++;
1167:rtos/uC-FS/Source/fs_unicode.c ****         p2_str++;
1168:rtos/uC-FS/Source/fs_unicode.c ****         cmp_len++;
1169:rtos/uC-FS/Source/fs_unicode.c ****         char1 = WC_CharToCasefold(*p1_str);
1170:rtos/uC-FS/Source/fs_unicode.c ****         char2 = WC_CharToCasefold(*p2_str);
ARM GAS  /tmp/cc4JYsWh.s 			page 22


1171:rtos/uC-FS/Source/fs_unicode.c ****     }
1172:rtos/uC-FS/Source/fs_unicode.c **** 
1173:rtos/uC-FS/Source/fs_unicode.c **** 
1174:rtos/uC-FS/Source/fs_unicode.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for len nb
1175:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);                                 /* ... rtn 0                   (see
1176:rtos/uC-FS/Source/fs_unicode.c ****     }
1177:rtos/uC-FS/Source/fs_unicode.c **** 
1178:rtos/uC-FS/Source/fs_unicode.c ****     if (char1 != char2) {                                       /* If strs NOT identical, ...      
1179:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = (CPU_INT32S)char1 - (CPU_INT32S)char2;       /* ... calc & rtn char diff    (see
1180:rtos/uC-FS/Source/fs_unicode.c **** 
1181:rtos/uC-FS/Source/fs_unicode.c ****     } else if (char1 == (CPU_WCHAR)0) {                         /* If NULL char(s) found, ...      
1182:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = 0;                                           /* ... strs identical; rtn 0   (see
1183:rtos/uC-FS/Source/fs_unicode.c **** 
1184:rtos/uC-FS/Source/fs_unicode.c ****     } else {
1185:rtos/uC-FS/Source/fs_unicode.c ****         if (p1_str_next == (CPU_WCHAR *)0) {
1186:rtos/uC-FS/Source/fs_unicode.c ****             if (p2_str_next == (CPU_WCHAR *)0) {                /* If BOTH next str ptrs NULL, ... 
1187:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0;                       /* ... rtn 0                   (see
1188:rtos/uC-FS/Source/fs_unicode.c ****             } else {                                            /* If p1_str_next NULL, ...        
1189:rtos/uC-FS/Source/fs_unicode.c ****                 char2    =  WC_CharToCasefold(*p2_str_next);
1190:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0 - (CPU_INT32S)char2;   /* ... rtn neg p2_str_next val (see
1191:rtos/uC-FS/Source/fs_unicode.c ****             }
1192:rtos/uC-FS/Source/fs_unicode.c ****         } else {                                                /* If p2_str_next NULL, ...        
1193:rtos/uC-FS/Source/fs_unicode.c ****             char1   =  WC_CharToCasefold(*p1_str_next);
1194:rtos/uC-FS/Source/fs_unicode.c ****             cmp_val = (CPU_INT32S)char1;                        /* ... rtn pos p1_str_next val (see
1195:rtos/uC-FS/Source/fs_unicode.c ****         }
1196:rtos/uC-FS/Source/fs_unicode.c ****     }
1197:rtos/uC-FS/Source/fs_unicode.c **** 
1198:rtos/uC-FS/Source/fs_unicode.c **** 
1199:rtos/uC-FS/Source/fs_unicode.c ****     return (cmp_val);
1200:rtos/uC-FS/Source/fs_unicode.c **** }
1201:rtos/uC-FS/Source/fs_unicode.c **** 
1202:rtos/uC-FS/Source/fs_unicode.c **** 
1203:rtos/uC-FS/Source/fs_unicode.c **** /*
1204:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1205:rtos/uC-FS/Source/fs_unicode.c **** *                                            WC_StrChar()
1206:rtos/uC-FS/Source/fs_unicode.c **** *
1207:rtos/uC-FS/Source/fs_unicode.c **** * Description : Search wide-character string for first occurrence of specific character.
1208:rtos/uC-FS/Source/fs_unicode.c **** *
1209:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pstr            Pointer to wide-character string (see Note #1).
1210:rtos/uC-FS/Source/fs_unicode.c **** *
1211:rtos/uC-FS/Source/fs_unicode.c **** *               srch_char       Search character.
1212:rtos/uC-FS/Source/fs_unicode.c **** *
1213:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any.
1214:rtos/uC-FS/Source/fs_unicode.c **** *
1215:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,                                           otherwise.
1216:rtos/uC-FS/Source/fs_unicode.c **** *
1217:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffer NOT modified.
1218:rtos/uC-FS/Source/fs_unicode.c **** *
1219:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String search terminates when :
1220:rtos/uC-FS/Source/fs_unicode.c **** *
1221:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) String pointer passed a NULL pointer.
1222:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string search performed; NULL pointer returned.
1223:rtos/uC-FS/Source/fs_unicode.c **** *
1224:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) String pointer points to NULL.
1225:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String overlaps with NULL address.
1226:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) String searched up to but NOT beyond or including the NULL address.
1227:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 23


1228:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) String's terminating NULL character found.
1229:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Search character NOT found in search string; NULL pointer returned.
1230:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Applicable ONLY IF search character is NOT the terminating NULL charact
1231:rtos/uC-FS/Source/fs_unicode.c **** *
1232:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) Search character found.
1233:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Return pointer to first occurrence of search character in search string
1234:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1235:rtos/uC-FS/Source/fs_unicode.c **** */
1236:rtos/uC-FS/Source/fs_unicode.c **** 
1237:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrChar (CPU_WCHAR  *pstr,
1238:rtos/uC-FS/Source/fs_unicode.c ****                         CPU_WCHAR   srch_char)
1239:rtos/uC-FS/Source/fs_unicode.c **** {
1240:rtos/uC-FS/Source/fs_unicode.c ****     pstr = WC_StrChar_N(pstr,
1241:rtos/uC-FS/Source/fs_unicode.c ****                         DEF_INT_CPU_U_MAX_VAL,
1242:rtos/uC-FS/Source/fs_unicode.c ****                         srch_char);
1243:rtos/uC-FS/Source/fs_unicode.c **** 
1244:rtos/uC-FS/Source/fs_unicode.c ****     return (pstr);
1245:rtos/uC-FS/Source/fs_unicode.c **** }
1246:rtos/uC-FS/Source/fs_unicode.c **** 
1247:rtos/uC-FS/Source/fs_unicode.c **** 
1248:rtos/uC-FS/Source/fs_unicode.c **** /*
1249:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1250:rtos/uC-FS/Source/fs_unicode.c **** *                                           WC_StrChar_N()
1251:rtos/uC-FS/Source/fs_unicode.c **** *
1252:rtos/uC-FS/Source/fs_unicode.c **** * Description : Search wide-character string for first occurrence of specific character, up to a ma
1253:rtos/uC-FS/Source/fs_unicode.c **** *               number of characters.
1254:rtos/uC-FS/Source/fs_unicode.c **** *
1255:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pstr            Pointer to wide-character string (see Note #1).
1256:rtos/uC-FS/Source/fs_unicode.c **** *
1257:rtos/uC-FS/Source/fs_unicode.c **** *               len_max         Maximum number of characters to search (see Notes #2e & #3).
1258:rtos/uC-FS/Source/fs_unicode.c **** *
1259:rtos/uC-FS/Source/fs_unicode.c **** *               srch_char       Search character.
1260:rtos/uC-FS/Source/fs_unicode.c **** *
1261:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any.
1262:rtos/uC-FS/Source/fs_unicode.c **** *
1263:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,                                           otherwise.
1264:rtos/uC-FS/Source/fs_unicode.c **** *
1265:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffer NOT modified.
1266:rtos/uC-FS/Source/fs_unicode.c **** *
1267:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String search terminates when :
1268:rtos/uC-FS/Source/fs_unicode.c **** *
1269:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) String pointer passed a NULL pointer.
1270:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string search performed; NULL pointer returned.
1271:rtos/uC-FS/Source/fs_unicode.c **** *
1272:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) String pointer points to NULL.
1273:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String overlaps with NULL address.
1274:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) String searched up to but NOT beyond or including the NULL address.
1275:rtos/uC-FS/Source/fs_unicode.c **** *
1276:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) String's terminating NULL character found.
1277:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Search character NOT found in search string; NULL pointer returned.
1278:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Applicable ONLY IF search character is NOT the terminating NULL charact
1279:rtos/uC-FS/Source/fs_unicode.c **** *
1280:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) Search character found.
1281:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Return pointer to first occurrence of search character in search string
1282:rtos/uC-FS/Source/fs_unicode.c **** *
1283:rtos/uC-FS/Source/fs_unicode.c **** *                   (e) 'len_max' number of characters searched.
1284:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) 'len_max' number of characters does NOT include terminating NULL charac
ARM GAS  /tmp/cc4JYsWh.s 			page 24


1285:rtos/uC-FS/Source/fs_unicode.c **** *
1286:rtos/uC-FS/Source/fs_unicode.c **** *               (3) Ideally, the 'len_max' parameter would be the last parameter in this function's
1287:rtos/uC-FS/Source/fs_unicode.c **** *                   parameter list for consistency with all other custom string library functions.
1288:rtos/uC-FS/Source/fs_unicode.c **** *                   However, the 'len_max' parameter is ordered to comply with the standard library
1289:rtos/uC-FS/Source/fs_unicode.c **** *                   function's parameter list.
1290:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1291:rtos/uC-FS/Source/fs_unicode.c **** */
1292:rtos/uC-FS/Source/fs_unicode.c **** 
1293:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrChar_N (CPU_WCHAR   *pstr,
1294:rtos/uC-FS/Source/fs_unicode.c ****                           CPU_SIZE_T   len_max,
1295:rtos/uC-FS/Source/fs_unicode.c ****                           CPU_WCHAR    srch_char)
1296:rtos/uC-FS/Source/fs_unicode.c **** {
1297:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
1298:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_srch;
1299:rtos/uC-FS/Source/fs_unicode.c **** 
1300:rtos/uC-FS/Source/fs_unicode.c **** 
1301:rtos/uC-FS/Source/fs_unicode.c ****     if (pstr == (CPU_WCHAR *)0) {                               /* Rtn NULL if srch str ptr NULL   
1302:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1303:rtos/uC-FS/Source/fs_unicode.c ****     }
1304:rtos/uC-FS/Source/fs_unicode.c **** 
1305:rtos/uC-FS/Source/fs_unicode.c ****     if (len_max == (CPU_SIZE_T)0) {                             /* Rtn NULL if srch len equals zero
1306:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1307:rtos/uC-FS/Source/fs_unicode.c ****     }
1308:rtos/uC-FS/Source/fs_unicode.c **** 
1309:rtos/uC-FS/Source/fs_unicode.c **** 
1310:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next = pstr;
1311:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next++;
1312:rtos/uC-FS/Source/fs_unicode.c ****     len_srch  = 0u;
1313:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != (CPU_WCHAR  *)0)      &&              /* Srch str until NULL ptr(s)  [see
1314:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr      != (CPU_WCHAR   )0)      &&              /* ... or NULL char            (see
1315:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr      != (CPU_WCHAR   )srch_char) &&           /* ... or srch char found      (see
1316:rtos/uC-FS/Source/fs_unicode.c ****            ( len_srch  <  (CPU_SIZE_T  )len_max)) {             /* ... or max nbr chars srch'd (see
1317:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
1318:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next++;
1319:rtos/uC-FS/Source/fs_unicode.c ****         len_srch++;
1320:rtos/uC-FS/Source/fs_unicode.c ****     }
1321:rtos/uC-FS/Source/fs_unicode.c **** 
1322:rtos/uC-FS/Source/fs_unicode.c **** 
1323:rtos/uC-FS/Source/fs_unicode.c ****     if (*pstr != srch_char) {                                   /* If srch char NOT found, str poin
1324:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
1325:rtos/uC-FS/Source/fs_unicode.c ****     }
1326:rtos/uC-FS/Source/fs_unicode.c **** 
1327:rtos/uC-FS/Source/fs_unicode.c ****     return (pstr);                                              /* Else rtn ptr to found srch char 
1328:rtos/uC-FS/Source/fs_unicode.c **** }
1329:rtos/uC-FS/Source/fs_unicode.c **** 
1330:rtos/uC-FS/Source/fs_unicode.c **** 
1331:rtos/uC-FS/Source/fs_unicode.c **** /*
1332:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1333:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_StrChar_Last()
1334:rtos/uC-FS/Source/fs_unicode.c **** *
1335:rtos/uC-FS/Source/fs_unicode.c **** * Description : Search wide-character string for last occurrence of specific character.
1336:rtos/uC-FS/Source/fs_unicode.c **** *
1337:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pstr            Pointer to wide-character string (see Note #1).
1338:rtos/uC-FS/Source/fs_unicode.c **** *
1339:rtos/uC-FS/Source/fs_unicode.c **** *               srch_char       Search character.
1340:rtos/uC-FS/Source/fs_unicode.c **** *
1341:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any.
ARM GAS  /tmp/cc4JYsWh.s 			page 25


1342:rtos/uC-FS/Source/fs_unicode.c **** *
1343:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,                                          otherwise.
1344:rtos/uC-FS/Source/fs_unicode.c **** *
1345:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffer NOT modified.
1346:rtos/uC-FS/Source/fs_unicode.c **** *
1347:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String search terminates when :
1348:rtos/uC-FS/Source/fs_unicode.c **** *
1349:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) String pointer passed a NULL pointer.
1350:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string search performed; NULL pointer returned.
1351:rtos/uC-FS/Source/fs_unicode.c **** *
1352:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) String pointer points to NULL.
1353:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String overlaps with NULL address.
1354:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) String searched up to but NOT beyond or including the NULL address.
1355:rtos/uC-FS/Source/fs_unicode.c **** *                       (3) NULL address boundary handled in WC_StrLen().
1356:rtos/uC-FS/Source/fs_unicode.c **** *
1357:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) String searched from end to beginning.
1358:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Search character NOT found in search string; NULL pointer returned.
1359:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Applicable ONLY IF search character is NOT the terminating NULL charact
1360:rtos/uC-FS/Source/fs_unicode.c **** *
1361:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) Search character found.
1362:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Return pointer to first occurrence of search character in search string
1363:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1364:rtos/uC-FS/Source/fs_unicode.c **** */
1365:rtos/uC-FS/Source/fs_unicode.c **** 
1366:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrChar_Last (CPU_WCHAR  *pstr,
1367:rtos/uC-FS/Source/fs_unicode.c ****                              CPU_WCHAR   srch_char)
1368:rtos/uC-FS/Source/fs_unicode.c **** {
1369:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
1370:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   str_len;
1371:rtos/uC-FS/Source/fs_unicode.c **** 
1372:rtos/uC-FS/Source/fs_unicode.c **** 
1373:rtos/uC-FS/Source/fs_unicode.c ****     if (pstr == (CPU_WCHAR *)0) {                               /* Rtn NULL if srch str ptr NULL (s
1374:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1375:rtos/uC-FS/Source/fs_unicode.c ****     }
1376:rtos/uC-FS/Source/fs_unicode.c **** 
1377:rtos/uC-FS/Source/fs_unicode.c **** 
1378:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next  = pstr;
1379:rtos/uC-FS/Source/fs_unicode.c ****     str_len    = WC_StrLen(pstr);
1380:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next += str_len;
1381:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != pstr) &&                              /* Srch str from end until beginnin
1382:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_next != srch_char)) {                         /* ... until srch char found       
1383:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next--;
1384:rtos/uC-FS/Source/fs_unicode.c ****     }
1385:rtos/uC-FS/Source/fs_unicode.c **** 
1386:rtos/uC-FS/Source/fs_unicode.c **** 
1387:rtos/uC-FS/Source/fs_unicode.c ****     if (*pstr_next != srch_char) {                              /* If srch char NOT found, str poin
1388:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
1389:rtos/uC-FS/Source/fs_unicode.c ****     }
1390:rtos/uC-FS/Source/fs_unicode.c **** 
1391:rtos/uC-FS/Source/fs_unicode.c ****     return (pstr_next);                                         /* Else rtn ptr to found srch char 
1392:rtos/uC-FS/Source/fs_unicode.c **** }
1393:rtos/uC-FS/Source/fs_unicode.c **** 
1394:rtos/uC-FS/Source/fs_unicode.c **** 
1395:rtos/uC-FS/Source/fs_unicode.c **** /*
1396:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1397:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_StrChar_Last_N()
1398:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 26


1399:rtos/uC-FS/Source/fs_unicode.c **** * Description : Search wide-character string for last occurrence of specific character.
1400:rtos/uC-FS/Source/fs_unicode.c **** *
1401:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pstr            Pointer to wide-character string (see Note #1).
1402:rtos/uC-FS/Source/fs_unicode.c **** *
1403:rtos/uC-FS/Source/fs_unicode.c **** *               srch_char       Search character.
1404:rtos/uC-FS/Source/fs_unicode.c **** *
1405:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any.
1406:rtos/uC-FS/Source/fs_unicode.c **** *
1407:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,                                          otherwise.
1408:rtos/uC-FS/Source/fs_unicode.c **** *
1409:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffer NOT modified.
1410:rtos/uC-FS/Source/fs_unicode.c **** *
1411:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String search terminates when :
1412:rtos/uC-FS/Source/fs_unicode.c **** *
1413:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) String pointer passed a NULL pointer.
1414:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string search performed; NULL pointer returned.
1415:rtos/uC-FS/Source/fs_unicode.c **** *
1416:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) String pointer points to NULL.
1417:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) String overlaps with NULL address.
1418:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) String searched up to but NOT beyond or including the NULL address.
1419:rtos/uC-FS/Source/fs_unicode.c **** *                       (3) NULL address boundary handled in WC_StrLen_N().
1420:rtos/uC-FS/Source/fs_unicode.c **** *
1421:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) String searched from end to beginning.
1422:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Search character NOT found in search string; NULL pointer returned.
1423:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Applicable ONLY IF search character is NOT the terminating NULL charact
1424:rtos/uC-FS/Source/fs_unicode.c **** *
1425:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) Search character found.
1426:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Return pointer to first occurrence of search character in search string
1427:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1428:rtos/uC-FS/Source/fs_unicode.c **** */
1429:rtos/uC-FS/Source/fs_unicode.c **** 
1430:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrChar_Last_N (CPU_WCHAR  *pstr,
1431:rtos/uC-FS/Source/fs_unicode.c ****                                CPU_WCHAR   srch_char,
1432:rtos/uC-FS/Source/fs_unicode.c ****                                CPU_SIZE_T  len_max)
1433:rtos/uC-FS/Source/fs_unicode.c **** {
1434:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
1435:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   str_len;
1436:rtos/uC-FS/Source/fs_unicode.c **** 
1437:rtos/uC-FS/Source/fs_unicode.c **** 
1438:rtos/uC-FS/Source/fs_unicode.c ****     if (pstr == (CPU_WCHAR *)0) {                               /* Rtn NULL if srch str ptr NULL (s
1439:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1440:rtos/uC-FS/Source/fs_unicode.c ****     }
1441:rtos/uC-FS/Source/fs_unicode.c **** 
1442:rtos/uC-FS/Source/fs_unicode.c **** 
1443:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next  = pstr;
1444:rtos/uC-FS/Source/fs_unicode.c ****     str_len    = WC_StrLen_N(pstr, len_max);
1445:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next += str_len;
1446:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != pstr) &&                              /* Srch str from end until beginnin
1447:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_next != srch_char)) {                         /* ... until srch char found       
1448:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next--;
1449:rtos/uC-FS/Source/fs_unicode.c ****     }
1450:rtos/uC-FS/Source/fs_unicode.c **** 
1451:rtos/uC-FS/Source/fs_unicode.c **** 
1452:rtos/uC-FS/Source/fs_unicode.c ****     if (*pstr_next != srch_char) {                              /* If srch char NOT found, str poin
1453:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
1454:rtos/uC-FS/Source/fs_unicode.c ****     }
1455:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 27


1456:rtos/uC-FS/Source/fs_unicode.c ****     return (pstr_next);                                         /* Else rtn ptr to found srch char 
1457:rtos/uC-FS/Source/fs_unicode.c **** }
1458:rtos/uC-FS/Source/fs_unicode.c **** 
1459:rtos/uC-FS/Source/fs_unicode.c **** 
1460:rtos/uC-FS/Source/fs_unicode.c **** /*
1461:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1462:rtos/uC-FS/Source/fs_unicode.c **** *                                             WC_StrStr()
1463:rtos/uC-FS/Source/fs_unicode.c **** *
1464:rtos/uC-FS/Source/fs_unicode.c **** * Description : Search wide-character string for first occurrence of a specific search wide-charact
1465:rtos/uC-FS/Source/fs_unicode.c **** *
1466:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pstr            Pointer to        wide-character string (see Note #1).
1467:rtos/uC-FS/Source/fs_unicode.c **** *
1468:rtos/uC-FS/Source/fs_unicode.c **** *               psrch_str       Pointer to search wide-character string (see Note #1).
1469:rtos/uC-FS/Source/fs_unicode.c **** *
1470:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any.
1471:rtos/uC-FS/Source/fs_unicode.c **** *
1472:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,                                        otherwise.
1473:rtos/uC-FS/Source/fs_unicode.c **** *
1474:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffers NOT modified.
1475:rtos/uC-FS/Source/fs_unicode.c **** *
1476:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String search terminates when :
1477:rtos/uC-FS/Source/fs_unicode.c **** *
1478:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) String pointer passed a NULL pointer.
1479:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string search performed; NULL pointer returned.
1480:rtos/uC-FS/Source/fs_unicode.c **** *
1481:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Search string length greater than string length.
1482:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string search performed; NULL pointer returned.
1483:rtos/uC-FS/Source/fs_unicode.c **** *
1484:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Search string length equal to zero.
1485:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) NULL search string at end of string returned.
1486:rtos/uC-FS/Source/fs_unicode.c **** *
1487:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) Entire string has been searched.
1488:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Maximum size of the search is defined as the subtraction of the
1489:rtos/uC-FS/Source/fs_unicode.c **** *                           search string length from the string length.
1490:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Search string not found; NULL pointer returned.
1491:rtos/uC-FS/Source/fs_unicode.c **** *
1492:rtos/uC-FS/Source/fs_unicode.c **** *                   (e) Search string found.
1493:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Search string found according to Str_Cmp_N() return value.
1494:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Return pointer to first occurrence of search string in string.
1495:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1496:rtos/uC-FS/Source/fs_unicode.c **** */
1497:rtos/uC-FS/Source/fs_unicode.c **** 
1498:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrStr (CPU_WCHAR  *pstr,
1499:rtos/uC-FS/Source/fs_unicode.c ****                        CPU_WCHAR  *psrch_str)
1500:rtos/uC-FS/Source/fs_unicode.c **** {
1501:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    str_len;
1502:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_str_len;
1503:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_len;
1504:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_ix;
1505:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN   srch_done;
1506:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S    srch_cmp;
1507:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    *pstr_srch_ix;
1508:rtos/uC-FS/Source/fs_unicode.c **** 
1509:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
1510:rtos/uC-FS/Source/fs_unicode.c ****     if (pstr == (CPU_WCHAR *)0) {
1511:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1512:rtos/uC-FS/Source/fs_unicode.c ****     }
ARM GAS  /tmp/cc4JYsWh.s 			page 28


1513:rtos/uC-FS/Source/fs_unicode.c ****     if (psrch_str == (CPU_WCHAR *)0) {
1514:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1515:rtos/uC-FS/Source/fs_unicode.c ****     }
1516:rtos/uC-FS/Source/fs_unicode.c **** 
1517:rtos/uC-FS/Source/fs_unicode.c **** 
1518:rtos/uC-FS/Source/fs_unicode.c ****     str_len      = WC_StrLen(pstr);
1519:rtos/uC-FS/Source/fs_unicode.c ****     srch_str_len = WC_StrLen(psrch_str);
1520:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len > str_len) {                               /* If srch str len > str len, rtn N
1521:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1522:rtos/uC-FS/Source/fs_unicode.c ****     }
1523:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len == 0u) {                                   /* If srch str len = 0, srch str eq
1524:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix = pstr + str_len;                          /* ... rtn ptr to NULL str found in
1525:rtos/uC-FS/Source/fs_unicode.c ****         return (pstr_srch_ix);
1526:rtos/uC-FS/Source/fs_unicode.c ****     }
1527:rtos/uC-FS/Source/fs_unicode.c **** 
1528:rtos/uC-FS/Source/fs_unicode.c ****     srch_len  = str_len - srch_str_len;                         /* Determine srch len (see Note #2d
1529:rtos/uC-FS/Source/fs_unicode.c ****     srch_ix   = 0u;
1530:rtos/uC-FS/Source/fs_unicode.c ****     srch_done = DEF_NO;
1531:rtos/uC-FS/Source/fs_unicode.c ****     do {
1532:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix =  pstr + srch_ix;
1533:rtos/uC-FS/Source/fs_unicode.c ****         srch_cmp     =  WC_StrCmp_N(pstr_srch_ix, psrch_str, srch_str_len);
1534:rtos/uC-FS/Source/fs_unicode.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
1535:rtos/uC-FS/Source/fs_unicode.c ****         srch_ix++;
1536:rtos/uC-FS/Source/fs_unicode.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
1537:rtos/uC-FS/Source/fs_unicode.c **** 
1538:rtos/uC-FS/Source/fs_unicode.c **** 
1539:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_cmp != 0) {                                        /* If srch str NOT found, rtn NULL 
1540:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1541:rtos/uC-FS/Source/fs_unicode.c ****     }
1542:rtos/uC-FS/Source/fs_unicode.c **** 
1543:rtos/uC-FS/Source/fs_unicode.c ****     return (pstr_srch_ix);                                      /* Rtn ptr to srch str found in str
1544:rtos/uC-FS/Source/fs_unicode.c **** }
1545:rtos/uC-FS/Source/fs_unicode.c **** 
1546:rtos/uC-FS/Source/fs_unicode.c **** 
1547:rtos/uC-FS/Source/fs_unicode.c **** /*
1548:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1549:rtos/uC-FS/Source/fs_unicode.c **** *                                             WC_StrStr_N()
1550:rtos/uC-FS/Source/fs_unicode.c **** *
1551:rtos/uC-FS/Source/fs_unicode.c **** * Description : Search wide-character string for first occurrence of a specific search wide-charact
1552:rtos/uC-FS/Source/fs_unicode.c **** *
1553:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pstr            Pointer to        wide-character string (see Note #1).
1554:rtos/uC-FS/Source/fs_unicode.c **** *
1555:rtos/uC-FS/Source/fs_unicode.c **** *               psrch_str       Pointer to search wide-character string (see Note #1).
1556:rtos/uC-FS/Source/fs_unicode.c **** *
1557:rtos/uC-FS/Source/fs_unicode.c **** *               len_max         Maximum number of characters to search (see Note #2f).
1558:rtos/uC-FS/Source/fs_unicode.c **** *
1559:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any.
1560:rtos/uC-FS/Source/fs_unicode.c **** *
1561:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,                                        otherwise.
1562:rtos/uC-FS/Source/fs_unicode.c **** *
1563:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) String buffers NOT modified.
1564:rtos/uC-FS/Source/fs_unicode.c **** *
1565:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String search terminates when :
1566:rtos/uC-FS/Source/fs_unicode.c **** *
1567:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) String pointer passed a NULL pointer.
1568:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string search performed; NULL pointer returned.
1569:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 29


1570:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Search string length greater than string length.
1571:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string search performed; NULL pointer returned.
1572:rtos/uC-FS/Source/fs_unicode.c **** *
1573:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Search string length equal to zero.
1574:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) NULL search string at end of string returned.
1575:rtos/uC-FS/Source/fs_unicode.c **** *
1576:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) Entire string has been searched.
1577:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Maximum size of the search is defined as the subtraction of the
1578:rtos/uC-FS/Source/fs_unicode.c **** *                           search string length from the string length.
1579:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Search string not found; NULL pointer returned.
1580:rtos/uC-FS/Source/fs_unicode.c **** *
1581:rtos/uC-FS/Source/fs_unicode.c **** *                   (e) Search string found.
1582:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Search string found according to Str_Cmp_N() return value.
1583:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Return pointer to first occurrence of search string in string.
1584:rtos/uC-FS/Source/fs_unicode.c **** *
1585:rtos/uC-FS/Source/fs_unicode.c **** *                   (f) 'len_max' number of characters searched.
1586:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) 'len_max' number of characters does NOT include terminating NULL charac
1587:rtos/uC-FS/Source/fs_unicode.c **** *                           (see Note #2a2).
1588:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1589:rtos/uC-FS/Source/fs_unicode.c **** */
1590:rtos/uC-FS/Source/fs_unicode.c **** 
1591:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  *WC_StrStr_N (CPU_WCHAR  *pstr,
1592:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_WCHAR  *psrch_str,
1593:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_SIZE_T  len_max)
1594:rtos/uC-FS/Source/fs_unicode.c **** {
1595:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    str_len;
1596:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_str_len;
1597:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    len_max_srch;
1598:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_len;
1599:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_ix;
1600:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN   srch_done;
1601:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S    srch_cmp;
1602:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    *pstr_srch_ix;
1603:rtos/uC-FS/Source/fs_unicode.c **** 
1604:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
1605:rtos/uC-FS/Source/fs_unicode.c ****     if (pstr == (CPU_WCHAR *)0) {
1606:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1607:rtos/uC-FS/Source/fs_unicode.c ****     }
1608:rtos/uC-FS/Source/fs_unicode.c ****     if (psrch_str == (CPU_WCHAR *)0) {
1609:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1610:rtos/uC-FS/Source/fs_unicode.c ****     }
1611:rtos/uC-FS/Source/fs_unicode.c **** 
1612:rtos/uC-FS/Source/fs_unicode.c ****     if (len_max == (CPU_SIZE_T)0u) {                            /* Rtn NULL if srch len = 0    (see
1613:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1614:rtos/uC-FS/Source/fs_unicode.c ****     }
1615:rtos/uC-FS/Source/fs_unicode.c **** 
1616:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Lim max srch str len (to chk > s
1617:rtos/uC-FS/Source/fs_unicode.c ****     len_max_srch = (len_max <       DEF_INT_CPU_U_MAX_VAL)
1618:rtos/uC-FS/Source/fs_unicode.c ****                  ? (len_max + 1u) : DEF_INT_CPU_U_MAX_VAL;
1619:rtos/uC-FS/Source/fs_unicode.c **** 
1620:rtos/uC-FS/Source/fs_unicode.c ****     str_len      = WC_StrLen_N(pstr,      len_max);
1621:rtos/uC-FS/Source/fs_unicode.c ****     srch_str_len = WC_StrLen_N(psrch_str, len_max_srch);
1622:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len > str_len) {                               /* If srch str len > str len, rtn N
1623:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1624:rtos/uC-FS/Source/fs_unicode.c ****     }
1625:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len == 0u) {                                   /* If srch str len = 0, srch str eq
1626:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix = pstr + str_len;                          /* ... rtn ptr to NULL str found in
ARM GAS  /tmp/cc4JYsWh.s 			page 30


1627:rtos/uC-FS/Source/fs_unicode.c ****         return (pstr_srch_ix);
1628:rtos/uC-FS/Source/fs_unicode.c ****     }
1629:rtos/uC-FS/Source/fs_unicode.c **** 
1630:rtos/uC-FS/Source/fs_unicode.c ****     srch_len  = str_len - srch_str_len;                         /* Determine srch len (see Note #2d
1631:rtos/uC-FS/Source/fs_unicode.c ****     srch_ix   = 0u;
1632:rtos/uC-FS/Source/fs_unicode.c ****     srch_done = DEF_NO;
1633:rtos/uC-FS/Source/fs_unicode.c ****     do {
1634:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix =  pstr + srch_ix;
1635:rtos/uC-FS/Source/fs_unicode.c ****         srch_cmp     =  WC_StrCmp_N(pstr_srch_ix, psrch_str, srch_str_len);
1636:rtos/uC-FS/Source/fs_unicode.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
1637:rtos/uC-FS/Source/fs_unicode.c ****         srch_ix++;
1638:rtos/uC-FS/Source/fs_unicode.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
1639:rtos/uC-FS/Source/fs_unicode.c **** 
1640:rtos/uC-FS/Source/fs_unicode.c **** 
1641:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_cmp != 0) {                                        /* If srch str NOT found, rtn NULL 
1642:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
1643:rtos/uC-FS/Source/fs_unicode.c ****     }
1644:rtos/uC-FS/Source/fs_unicode.c **** 
1645:rtos/uC-FS/Source/fs_unicode.c ****     return (pstr_srch_ix);                                      /* Rtn ptr to srch str found in str
1646:rtos/uC-FS/Source/fs_unicode.c **** }
1647:rtos/uC-FS/Source/fs_unicode.c **** 
1648:rtos/uC-FS/Source/fs_unicode.c **** 
1649:rtos/uC-FS/Source/fs_unicode.c **** /*
1650:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1651:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_CharIsAlpha()
1652:rtos/uC-FS/Source/fs_unicode.c **** *
1653:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine whether a character is an alphabetic character.
1654:rtos/uC-FS/Source/fs_unicode.c **** *
1655:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to examine.
1656:rtos/uC-FS/Source/fs_unicode.c **** *
1657:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : DEF_YES, if character is     an alphabetic character.
1658:rtos/uC-FS/Source/fs_unicode.c **** *
1659:rtos/uC-FS/Source/fs_unicode.c **** *               DEF_NO,  if character is NOT an alphabetic character.
1660:rtos/uC-FS/Source/fs_unicode.c **** *
1661:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) Each character SHOULD fit into a range in the table; in case the table or algor
1662:rtos/uC-FS/Source/fs_unicode.c **** *                   is broken, the failure to find the range is handled.
1663:rtos/uC-FS/Source/fs_unicode.c **** *
1664:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Table entries are sized for 16-bit characters only.  Characters belonging t
1665:rtos/uC-FS/Source/fs_unicode.c **** *                       upper code point space must be handled separately.
1666:rtos/uC-FS/Source/fs_unicode.c **** *
1667:rtos/uC-FS/Source/fs_unicode.c **** *               (2) To accelerate character mapping operations, a binary search is used to find the
1668:rtos/uC-FS/Source/fs_unicode.c **** *                   character range.  The table has approximately 750 ranges, so the loop should
1669:rtos/uC-FS/Source/fs_unicode.c **** *                   execute at most 10 times.
1670:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1671:rtos/uC-FS/Source/fs_unicode.c **** */
1672:rtos/uC-FS/Source/fs_unicode.c **** 
1673:rtos/uC-FS/Source/fs_unicode.c **** CPU_BOOLEAN  WC_CharIsAlpha (CPU_WCHAR  c)
1674:rtos/uC-FS/Source/fs_unicode.c **** {
1675:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha;
1676:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_lo;
1677:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_mid;
1678:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_hi;
1679:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_start;
1680:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_end;
1681:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  found;
1682:rtos/uC-FS/Source/fs_unicode.c **** 
1683:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 31


1684:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char ...       
1685:rtos/uC-FS/Source/fs_unicode.c ****         alpha = ASCII_IS_ALPHA((CPU_CHAR)c);                    /* ... determine whether char is AS
1686:rtos/uC-FS/Source/fs_unicode.c **** 
1687:rtos/uC-FS/Source/fs_unicode.c **** 
1688:rtos/uC-FS/Source/fs_unicode.c ****     } else {
1689:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
1690:rtos/uC-FS/Source/fs_unicode.c ****         if (c >= DEF_INT_16U_MAX_VAL) {                         /* If char is hi Unicode char (see 
1691:rtos/uC-FS/Source/fs_unicode.c ****             alpha = DEF_NO;                                     /* ... determine whether alpha char
1692:rtos/uC-FS/Source/fs_unicode.c ****             return (alpha);
1693:rtos/uC-FS/Source/fs_unicode.c ****         }
1694:rtos/uC-FS/Source/fs_unicode.c **** #endif
1695:rtos/uC-FS/Source/fs_unicode.c **** 
1696:rtos/uC-FS/Source/fs_unicode.c ****         found = DEF_NO;
1697:rtos/uC-FS/Source/fs_unicode.c ****         ix_lo = 0u;
1698:rtos/uC-FS/Source/fs_unicode.c ****         ix_hi = (sizeof(WC_CharIsAlphaTbl) / sizeof(CPU_WCHAR)) - 2u;
1699:rtos/uC-FS/Source/fs_unicode.c **** 
1700:rtos/uC-FS/Source/fs_unicode.c ****         while ((ix_lo <= ix_hi) &&                              /* While lo srch ix & hi srch ix va
1701:rtos/uC-FS/Source/fs_unicode.c ****                (found == DEF_NO)) {                             /* ... & range not found           
1702:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* ... bisect range tbl (see Note #
1703:rtos/uC-FS/Source/fs_unicode.c **** 
1704:rtos/uC-FS/Source/fs_unicode.c ****             ix_mid  = (ix_lo + ix_hi) / 2u;
1705:rtos/uC-FS/Source/fs_unicode.c ****             c_start =  WC_CharIsAlphaTbl[ix_mid];
1706:rtos/uC-FS/Source/fs_unicode.c ****             c_end   =  WC_CharIsAlphaTbl[ix_mid + 1u];
1707:rtos/uC-FS/Source/fs_unicode.c **** 
1708:rtos/uC-FS/Source/fs_unicode.c ****             if (c < c_start) {                                  /* If char in lower half of range t
1709:rtos/uC-FS/Source/fs_unicode.c ****                 ix_hi = ix_mid - 1u;                            /* ... make midpoint hi val.       
1710:rtos/uC-FS/Source/fs_unicode.c **** 
1711:rtos/uC-FS/Source/fs_unicode.c ****             } else if (c >= c_end) {                            /* If char in upper half of range t
1712:rtos/uC-FS/Source/fs_unicode.c ****                 ix_lo = ix_mid + 1u;                            /* ... make midpoint lo val.       
1713:rtos/uC-FS/Source/fs_unicode.c **** 
1714:rtos/uC-FS/Source/fs_unicode.c ****             } else {                                            /* Else range found.               
1715:rtos/uC-FS/Source/fs_unicode.c ****                 found = DEF_YES;
1716:rtos/uC-FS/Source/fs_unicode.c ****             }
1717:rtos/uC-FS/Source/fs_unicode.c ****         }
1718:rtos/uC-FS/Source/fs_unicode.c **** 
1719:rtos/uC-FS/Source/fs_unicode.c **** 
1720:rtos/uC-FS/Source/fs_unicode.c ****         if (found == DEF_NO) {                                  /* If range NOT found (see Note #1)
1721:rtos/uC-FS/Source/fs_unicode.c ****             alpha =  DEF_NO;                                    /* ... rtn NULL.                   
1722:rtos/uC-FS/Source/fs_unicode.c **** 
1723:rtos/uC-FS/Source/fs_unicode.c **** 
1724:rtos/uC-FS/Source/fs_unicode.c ****         } else {
1725:rtos/uC-FS/Source/fs_unicode.c ****             alpha = ((ix_mid % 2u) == 0u) ? DEF_NO : DEF_YES;
1726:rtos/uC-FS/Source/fs_unicode.c ****         }
1727:rtos/uC-FS/Source/fs_unicode.c ****     }
1728:rtos/uC-FS/Source/fs_unicode.c **** 
1729:rtos/uC-FS/Source/fs_unicode.c ****     return (alpha);
1730:rtos/uC-FS/Source/fs_unicode.c **** }
1731:rtos/uC-FS/Source/fs_unicode.c **** 
1732:rtos/uC-FS/Source/fs_unicode.c **** 
1733:rtos/uC-FS/Source/fs_unicode.c **** /*
1734:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1735:rtos/uC-FS/Source/fs_unicode.c **** *                                         WC_CharIsAlphaNum()
1736:rtos/uC-FS/Source/fs_unicode.c **** *
1737:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine whether a character is an alphanumeric character.
1738:rtos/uC-FS/Source/fs_unicode.c **** *
1739:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to examine.
1740:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 32


1741:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : DEF_YES, if character is     an alphanumeric character.
1742:rtos/uC-FS/Source/fs_unicode.c **** *
1743:rtos/uC-FS/Source/fs_unicode.c **** *               DEF_NO,  if character is NOT an alphanumeric character.
1744:rtos/uC-FS/Source/fs_unicode.c **** *
1745:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : none.
1746:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1747:rtos/uC-FS/Source/fs_unicode.c **** */
1748:rtos/uC-FS/Source/fs_unicode.c **** 
1749:rtos/uC-FS/Source/fs_unicode.c **** CPU_BOOLEAN  WC_CharIsAlphaNum (CPU_WCHAR  c)
1750:rtos/uC-FS/Source/fs_unicode.c **** {
1751:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha_num;
1752:rtos/uC-FS/Source/fs_unicode.c **** 
1753:rtos/uC-FS/Source/fs_unicode.c **** 
1754:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char ...       
1755:rtos/uC-FS/Source/fs_unicode.c ****         alpha_num = ASCII_IS_ALPHA_NUM((CPU_CHAR)c);            /* ... determine whether char is AS
1756:rtos/uC-FS/Source/fs_unicode.c **** 
1757:rtos/uC-FS/Source/fs_unicode.c **** 
1758:rtos/uC-FS/Source/fs_unicode.c ****     } else {
1759:rtos/uC-FS/Source/fs_unicode.c ****         alpha_num = WC_CharIsDig(c);
1760:rtos/uC-FS/Source/fs_unicode.c ****         if (alpha_num == DEF_NO) {                              /* If char is NOT dig ...          
1761:rtos/uC-FS/Source/fs_unicode.c ****             alpha_num =  WC_CharIsAlpha(c);                     /* ... test if char is alpha char. 
1762:rtos/uC-FS/Source/fs_unicode.c ****         }
1763:rtos/uC-FS/Source/fs_unicode.c ****     }
1764:rtos/uC-FS/Source/fs_unicode.c **** 
1765:rtos/uC-FS/Source/fs_unicode.c ****     return (alpha_num);
1766:rtos/uC-FS/Source/fs_unicode.c **** }
1767:rtos/uC-FS/Source/fs_unicode.c **** 
1768:rtos/uC-FS/Source/fs_unicode.c **** 
1769:rtos/uC-FS/Source/fs_unicode.c **** /*
1770:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1771:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_CharIsLower()
1772:rtos/uC-FS/Source/fs_unicode.c **** *
1773:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine whether a character is a lowercase alphabetic character.
1774:rtos/uC-FS/Source/fs_unicode.c **** *
1775:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to examine.
1776:rtos/uC-FS/Source/fs_unicode.c **** *
1777:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : DEF_YES, if character is     a lowercase alphabetic character.
1778:rtos/uC-FS/Source/fs_unicode.c **** *
1779:rtos/uC-FS/Source/fs_unicode.c **** *               DEF_NO,  if character is NOT a lowercase alphabetic character.
1780:rtos/uC-FS/Source/fs_unicode.c **** *
1781:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) In general, the lowercase alphabetic characters are the alphabetic characters t
1782:rtos/uC-FS/Source/fs_unicode.c **** *                   are preserved when converted to lowercase but changed when converted to upperca
1783:rtos/uC-FS/Source/fs_unicode.c **** *                   Several exceptions must be hard-coded for lowercase characters with no uppercas
1784:rtos/uC-FS/Source/fs_unicode.c **** *                   equivalent :
1785:rtos/uC-FS/Source/fs_unicode.c **** *
1786:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) LATIN-1 SUPPLEMENT.  U+00AA, U+00BA, U+00DF
1787:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) LATIN EXTENDED-A. U+0138, U+0149
1788:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) LATIN EXTENDED-B. U+018D, U+01AA..01AB, U+01BA, U+01BE, U+01F0, U+0221,
1789:rtos/uC-FS/Source/fs_unicode.c **** *                       U+0234..0239, U+023F..0240
1790:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) IPA EXTENSIONS.  U+0250..0293, U+0295....02B8, U+02C0..02C1, U+02E0..02E4
1791:rtos/uC-FS/Source/fs_unicode.c **** *                   (e) GREEK AND CYRILLIC. U+037A, U+0390, U+03B0, U+03F3, U+03FC
1792:rtos/uC-FS/Source/fs_unicode.c **** *                   (f) ARMENIAN. U+0587
1793:rtos/uC-FS/Source/fs_unicode.c **** *                   (g) PHONETIC EXTENSIONS. U+1D00..1D7F
1794:rtos/uC-FS/Source/fs_unicode.c **** *                   (h) PHONETIC EXTENSIONS SUPPLEMENT. U+1D80..1DBF
1795:rtos/uC-FS/Source/fs_unicode.c **** *                   (i) LATIN EXTENDED ADDITIONAL. U+1E96..1E9D, U+1E9F
1796:rtos/uC-FS/Source/fs_unicode.c **** *                   (j) GREEK EXTENDED. U+1F50..1F57, U+1FB2, U+1FB4, U+1FB6..1FB7, U+1FC2..1FC4,
1797:rtos/uC-FS/Source/fs_unicode.c **** *                       U+1FD2..1FD3, U+1FD6..1FD7, U+1FE0..1FE7, U+1FF2..1FF4, U+1FF6..1FF7
ARM GAS  /tmp/cc4JYsWh.s 			page 33


1798:rtos/uC-FS/Source/fs_unicode.c **** *                   (k) SUPERSCRIPTS AND SUBSCRIPTS. U+2071, U+207F, U+2090..2094
1799:rtos/uC-FS/Source/fs_unicode.c **** *                   (l) LETTERLIKE SYMBOLS. U+210A, U+210E..210F, U+2113, U+212F, U+2134, U+2139,
1800:rtos/uC-FS/Source/fs_unicode.c **** *                       U+213C..213D, U+2146..2149
1801:rtos/uC-FS/Source/fs_unicode.c **** *                   (m) LATIN EXTENDED-C. U+2C74, U+2C77..2C7D
1802:rtos/uC-FS/Source/fs_unicode.c **** *                   (n) COPTIC. U+2CE4
1803:rtos/uC-FS/Source/fs_unicode.c **** *                   (o) LATIN EXTENDED-D. U+A730..A731, U+A770..A778
1804:rtos/uC-FS/Source/fs_unicode.c **** *                   (p) ALPHABETIC PRESENTATION FORMS. U+FB00..FB06, U+FB13..FB17
1805:rtos/uC-FS/Source/fs_unicode.c **** *                   (q) HALFWIDTH AND FULLWIDTH FORMS. U+FF41..FF4F
1806:rtos/uC-FS/Source/fs_unicode.c **** *                   (r) SMALL FORM VARIANTS. U+FF50..FF5A
1807:rtos/uC-FS/Source/fs_unicode.c **** *
1808:rtos/uC-FS/Source/fs_unicode.c **** *                   (s) To accelerate this character mapping operation, a table & binary search are
1809:rtos/uC-FS/Source/fs_unicode.c **** *                       to detect exceptional cases.  The table has approximately 120 ranges, so th
1810:rtos/uC-FS/Source/fs_unicode.c **** *                       should execute at most 7 times.
1811:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1812:rtos/uC-FS/Source/fs_unicode.c **** */
1813:rtos/uC-FS/Source/fs_unicode.c **** 
1814:rtos/uC-FS/Source/fs_unicode.c **** CPU_BOOLEAN  WC_CharIsLower (CPU_WCHAR  c)
1815:rtos/uC-FS/Source/fs_unicode.c **** {
1816:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  lower;
1817:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha;
1818:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_lower;
1819:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_upper;
1820:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_lo;
1821:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_mid;
1822:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_hi;
1823:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_start;
1824:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_end;
1825:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  found;
1826:rtos/uC-FS/Source/fs_unicode.c **** 
1827:rtos/uC-FS/Source/fs_unicode.c **** 
1828:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char ...       
1829:rtos/uC-FS/Source/fs_unicode.c ****         lower = ASCII_IS_LOWER((CPU_CHAR)c);                    /* ... determine whether char is AS
1830:rtos/uC-FS/Source/fs_unicode.c **** 
1831:rtos/uC-FS/Source/fs_unicode.c **** 
1832:rtos/uC-FS/Source/fs_unicode.c ****     } else {
1833:rtos/uC-FS/Source/fs_unicode.c ****         alpha = WC_CharIsAlpha(c);
1834:rtos/uC-FS/Source/fs_unicode.c ****         if (alpha == DEF_NO) {                                  /* If  char is NOT alpha char ...  
1835:rtos/uC-FS/Source/fs_unicode.c ****             lower =  DEF_NO;                                    /* ... char is NOT lower char.     
1836:rtos/uC-FS/Source/fs_unicode.c **** 
1837:rtos/uC-FS/Source/fs_unicode.c ****         } else {
1838:rtos/uC-FS/Source/fs_unicode.c ****             c_lower = WC_CharToLower(c);
1839:rtos/uC-FS/Source/fs_unicode.c ****             if (c_lower != c) {                                 /* If char to lower char is NOT cha
1840:rtos/uC-FS/Source/fs_unicode.c ****                 lower = DEF_NO;                                 /* ... char is NOT lower char.     
1841:rtos/uC-FS/Source/fs_unicode.c **** 
1842:rtos/uC-FS/Source/fs_unicode.c ****             } else {
1843:rtos/uC-FS/Source/fs_unicode.c ****                 c_upper = WC_CharToUpper(c);
1844:rtos/uC-FS/Source/fs_unicode.c ****                 if (c_upper != c) {                             /* If char to upper char is NOT cha
1845:rtos/uC-FS/Source/fs_unicode.c ****                     lower = DEF_YES;                            /* ... char is    lower char.      
1846:rtos/uC-FS/Source/fs_unicode.c **** 
1847:rtos/uC-FS/Source/fs_unicode.c **** 
1848:rtos/uC-FS/Source/fs_unicode.c ****                 } else {                                            /* See Note #1s.               
1849:rtos/uC-FS/Source/fs_unicode.c ****                     found = DEF_NO;
1850:rtos/uC-FS/Source/fs_unicode.c ****                     ix_lo = 0u;
1851:rtos/uC-FS/Source/fs_unicode.c ****                     ix_hi = (sizeof(WC_CharIsLowerTbl) / sizeof(CPU_WCHAR)) - 2u;
1852:rtos/uC-FS/Source/fs_unicode.c **** 
1853:rtos/uC-FS/Source/fs_unicode.c ****                     while ((ix_lo <= ix_hi) &&                      /* While lo srch ix & hi srch i
1854:rtos/uC-FS/Source/fs_unicode.c ****                            (found == DEF_NO)) {                     /* ... & range not found       
ARM GAS  /tmp/cc4JYsWh.s 			page 34


1855:rtos/uC-FS/Source/fs_unicode.c ****                                                                     /* ... bisect range tbl.       
1856:rtos/uC-FS/Source/fs_unicode.c **** 
1857:rtos/uC-FS/Source/fs_unicode.c ****                         ix_mid  = (ix_lo + ix_hi) / 2u;
1858:rtos/uC-FS/Source/fs_unicode.c ****                         c_start =  WC_CharIsLowerTbl[ix_mid];
1859:rtos/uC-FS/Source/fs_unicode.c ****                         c_end   =  WC_CharIsLowerTbl[ix_mid + 1u];
1860:rtos/uC-FS/Source/fs_unicode.c **** 
1861:rtos/uC-FS/Source/fs_unicode.c ****                         if (c < c_start) {                          /* If char in lower half of ran
1862:rtos/uC-FS/Source/fs_unicode.c ****                             ix_hi = ix_mid - 1u;                    /* ... make midpoint hi val.   
1863:rtos/uC-FS/Source/fs_unicode.c **** 
1864:rtos/uC-FS/Source/fs_unicode.c ****                         } else if (c >= c_end) {                    /* If char in upper half of ran
1865:rtos/uC-FS/Source/fs_unicode.c ****                             ix_lo = ix_mid + 1u;                    /* ... make midpoint lo val.   
1866:rtos/uC-FS/Source/fs_unicode.c **** 
1867:rtos/uC-FS/Source/fs_unicode.c ****                         } else {                                    /* Else range found.           
1868:rtos/uC-FS/Source/fs_unicode.c ****                             found = DEF_YES;
1869:rtos/uC-FS/Source/fs_unicode.c ****                         }
1870:rtos/uC-FS/Source/fs_unicode.c ****                     }
1871:rtos/uC-FS/Source/fs_unicode.c **** 
1872:rtos/uC-FS/Source/fs_unicode.c **** 
1873:rtos/uC-FS/Source/fs_unicode.c ****                     if (found == DEF_NO) {                          /* If range NOT found ...      
1874:rtos/uC-FS/Source/fs_unicode.c ****                         lower =  DEF_NO;                            /* ... rtn NULL.               
1875:rtos/uC-FS/Source/fs_unicode.c **** 
1876:rtos/uC-FS/Source/fs_unicode.c **** 
1877:rtos/uC-FS/Source/fs_unicode.c ****                     } else {
1878:rtos/uC-FS/Source/fs_unicode.c ****                         lower = ((ix_mid % 2u) == 0u) ? DEF_NO : DEF_YES;
1879:rtos/uC-FS/Source/fs_unicode.c ****                     }
1880:rtos/uC-FS/Source/fs_unicode.c ****                 }
1881:rtos/uC-FS/Source/fs_unicode.c ****             }
1882:rtos/uC-FS/Source/fs_unicode.c ****         }
1883:rtos/uC-FS/Source/fs_unicode.c ****     }
1884:rtos/uC-FS/Source/fs_unicode.c **** 
1885:rtos/uC-FS/Source/fs_unicode.c ****     return (lower);
1886:rtos/uC-FS/Source/fs_unicode.c **** }
1887:rtos/uC-FS/Source/fs_unicode.c **** 
1888:rtos/uC-FS/Source/fs_unicode.c **** 
1889:rtos/uC-FS/Source/fs_unicode.c **** /*
1890:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1891:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_CharIsUpper()
1892:rtos/uC-FS/Source/fs_unicode.c **** *
1893:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine whether a character is an uppercase alphabetic character.
1894:rtos/uC-FS/Source/fs_unicode.c **** *
1895:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to examine.
1896:rtos/uC-FS/Source/fs_unicode.c **** *
1897:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : DEF_YES, if character is     an uppercase alphabetic character.
1898:rtos/uC-FS/Source/fs_unicode.c **** *
1899:rtos/uC-FS/Source/fs_unicode.c **** *               DEF_NO,  if character is NOT an uppercase alphabetic character.
1900:rtos/uC-FS/Source/fs_unicode.c **** *
1901:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) In general, the uppercase alphabetic characters are the alphabetic characters t
1902:rtos/uC-FS/Source/fs_unicode.c **** *                   are preserved when converted to uppercase but changed when converted to lowerca
1903:rtos/uC-FS/Source/fs_unicode.c **** *                   Several exceptions must be hard-coded for uppercase characters with no lowercas
1904:rtos/uC-FS/Source/fs_unicode.c **** *                   equivalent :
1905:rtos/uC-FS/Source/fs_unicode.c **** *
1906:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) LETTERLIKE SYMBOLS. U+2102, U+2107, U+210B..210D, U+2110..2112, U+2115,
1907:rtos/uC-FS/Source/fs_unicode.c **** *                       U+2119..211D, U+2124, U+2128, U+212C..U+212D, U+2130..2133, U+213E-213F,
1908:rtos/uC-FS/Source/fs_unicode.c **** *                       U+2145
1909:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1910:rtos/uC-FS/Source/fs_unicode.c **** */
1911:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 35


1912:rtos/uC-FS/Source/fs_unicode.c **** CPU_BOOLEAN  WC_CharIsUpper (CPU_WCHAR  c)
1913:rtos/uC-FS/Source/fs_unicode.c **** {
1914:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  upper;
1915:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha;
1916:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_lower;
1917:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_upper;
1918:rtos/uC-FS/Source/fs_unicode.c **** 
1919:rtos/uC-FS/Source/fs_unicode.c **** 
1920:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char ...       
1921:rtos/uC-FS/Source/fs_unicode.c ****         upper = ASCII_IS_UPPER((CPU_CHAR)c);                    /* ... determine whether char is AS
1922:rtos/uC-FS/Source/fs_unicode.c **** 
1923:rtos/uC-FS/Source/fs_unicode.c **** 
1924:rtos/uC-FS/Source/fs_unicode.c ****     } else {
1925:rtos/uC-FS/Source/fs_unicode.c ****         alpha = WC_CharIsAlpha(c);
1926:rtos/uC-FS/Source/fs_unicode.c ****         if (alpha == DEF_NO) {                                  /* If  char is NOT alpha char ...  
1927:rtos/uC-FS/Source/fs_unicode.c ****             upper =  DEF_NO;                                    /* ... char is NOT upper char.     
1928:rtos/uC-FS/Source/fs_unicode.c **** 
1929:rtos/uC-FS/Source/fs_unicode.c ****         } else {
1930:rtos/uC-FS/Source/fs_unicode.c ****             c_upper = WC_CharToUpper(c);
1931:rtos/uC-FS/Source/fs_unicode.c ****             if (c_upper != c) {                                 /* If char to upper char is NOT cha
1932:rtos/uC-FS/Source/fs_unicode.c ****                 upper = DEF_NO;                                 /* ... char is NOT upper char.     
1933:rtos/uC-FS/Source/fs_unicode.c **** 
1934:rtos/uC-FS/Source/fs_unicode.c ****             } else {
1935:rtos/uC-FS/Source/fs_unicode.c ****                 c_lower = WC_CharToLower(c);
1936:rtos/uC-FS/Source/fs_unicode.c ****                 if (c_lower != c) {                             /* If char to lower char is NOT cha
1937:rtos/uC-FS/Source/fs_unicode.c ****                     upper = DEF_YES;                            /* ... char is    upper char.      
1938:rtos/uC-FS/Source/fs_unicode.c **** 
1939:rtos/uC-FS/Source/fs_unicode.c **** 
1940:rtos/uC-FS/Source/fs_unicode.c ****                 } else {
1941:rtos/uC-FS/Source/fs_unicode.c ****                     if (c <= 0x20FFu) {
1942:rtos/uC-FS/Source/fs_unicode.c ****                         upper = DEF_NO;
1943:rtos/uC-FS/Source/fs_unicode.c **** 
1944:rtos/uC-FS/Source/fs_unicode.c ****                     } else if (c <= 0x214Fu) {
1945:rtos/uC-FS/Source/fs_unicode.c ****                         upper = ( (c == 0x2102u) || (c == 0x2107u)  || ((c >= 0x210Bu) && (c <= 0x2
1946:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
1947:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2119u) && (c <= 0x211Du)) ||  (c == 0x2124u) || (c == 0x2
1948:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x212Cu) && (c <= 0x212Du)) || ((c >= 0x2130u) && (c <= 0x2
1949:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x213Eu) && (c <= 0x213Fu)) ||  (c == 0x2145u)             
1950:rtos/uC-FS/Source/fs_unicode.c **** 
1951:rtos/uC-FS/Source/fs_unicode.c ****                     } else {
1952:rtos/uC-FS/Source/fs_unicode.c ****                         upper = DEF_NO;
1953:rtos/uC-FS/Source/fs_unicode.c ****                     }
1954:rtos/uC-FS/Source/fs_unicode.c ****                 }
1955:rtos/uC-FS/Source/fs_unicode.c ****             }
1956:rtos/uC-FS/Source/fs_unicode.c ****         }
1957:rtos/uC-FS/Source/fs_unicode.c ****     }
1958:rtos/uC-FS/Source/fs_unicode.c **** 
1959:rtos/uC-FS/Source/fs_unicode.c ****     return (upper);
1960:rtos/uC-FS/Source/fs_unicode.c **** }
1961:rtos/uC-FS/Source/fs_unicode.c **** 
1962:rtos/uC-FS/Source/fs_unicode.c **** 
1963:rtos/uC-FS/Source/fs_unicode.c **** /*
1964:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1965:rtos/uC-FS/Source/fs_unicode.c **** *                                           WC_CharIsDig()
1966:rtos/uC-FS/Source/fs_unicode.c **** *
1967:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine whether a character is a decimal-digit character.
1968:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 36


1969:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to examine.
1970:rtos/uC-FS/Source/fs_unicode.c **** *
1971:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : DEF_YES, if character is     a decimal-digit character.
1972:rtos/uC-FS/Source/fs_unicode.c **** *
1973:rtos/uC-FS/Source/fs_unicode.c **** *               DEF_NO,  if character is NOT a decimal-digit character.
1974:rtos/uC-FS/Source/fs_unicode.c **** *
1975:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : none
1976:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1977:rtos/uC-FS/Source/fs_unicode.c **** */
1978:rtos/uC-FS/Source/fs_unicode.c **** 
1979:rtos/uC-FS/Source/fs_unicode.c **** CPU_BOOLEAN  WC_CharIsDig (CPU_WCHAR  c)
1980:rtos/uC-FS/Source/fs_unicode.c **** {
1981:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  dig;
1982:rtos/uC-FS/Source/fs_unicode.c **** 
1983:rtos/uC-FS/Source/fs_unicode.c **** 
1984:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char ...       
1985:rtos/uC-FS/Source/fs_unicode.c ****         dig = ASCII_IS_DIG((CPU_CHAR)c);                        /* ... determine whether char is AS
1986:rtos/uC-FS/Source/fs_unicode.c **** 
1987:rtos/uC-FS/Source/fs_unicode.c **** 
1988:rtos/uC-FS/Source/fs_unicode.c ****     } else {
1989:rtos/uC-FS/Source/fs_unicode.c ****         dig = (((c) >= WC_CHAR_FULLWIDTH_DIG_ZERO) && ((c) <= WC_CHAR_FULLWIDTH_DIG_NINE)) ? (DEF_Y
1990:rtos/uC-FS/Source/fs_unicode.c ****     }
1991:rtos/uC-FS/Source/fs_unicode.c **** 
1992:rtos/uC-FS/Source/fs_unicode.c ****     return (dig);
1993:rtos/uC-FS/Source/fs_unicode.c **** }
1994:rtos/uC-FS/Source/fs_unicode.c **** 
1995:rtos/uC-FS/Source/fs_unicode.c **** 
1996:rtos/uC-FS/Source/fs_unicode.c **** /*
1997:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
1998:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_CharIsDigOct()
1999:rtos/uC-FS/Source/fs_unicode.c **** *
2000:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine whether a character is an octal-digit character.
2001:rtos/uC-FS/Source/fs_unicode.c **** *
2002:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to examine.
2003:rtos/uC-FS/Source/fs_unicode.c **** *
2004:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : DEF_YES, if character is     an octal-digit character.
2005:rtos/uC-FS/Source/fs_unicode.c **** *
2006:rtos/uC-FS/Source/fs_unicode.c **** *               DEF_NO,  if character is NOT an octal-digit character.
2007:rtos/uC-FS/Source/fs_unicode.c **** *
2008:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : none.
2009:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2010:rtos/uC-FS/Source/fs_unicode.c **** */
2011:rtos/uC-FS/Source/fs_unicode.c **** 
2012:rtos/uC-FS/Source/fs_unicode.c **** CPU_BOOLEAN  WC_CharIsDigOct (CPU_WCHAR  c)
2013:rtos/uC-FS/Source/fs_unicode.c **** {
2014:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  dig_oct;
2015:rtos/uC-FS/Source/fs_unicode.c **** 
2016:rtos/uC-FS/Source/fs_unicode.c **** 
2017:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char ...       
2018:rtos/uC-FS/Source/fs_unicode.c ****         dig_oct = ASCII_IS_DIG_OCT((CPU_CHAR)c);                /* ... determine whether char is AS
2019:rtos/uC-FS/Source/fs_unicode.c **** 
2020:rtos/uC-FS/Source/fs_unicode.c **** 
2021:rtos/uC-FS/Source/fs_unicode.c ****     } else {
2022:rtos/uC-FS/Source/fs_unicode.c ****         dig_oct = (((c) >= WC_CHAR_FULLWIDTH_DIG_ZERO) && ((c) <= WC_CHAR_FULLWIDTH_DIG_SEVEN)) ? (
2023:rtos/uC-FS/Source/fs_unicode.c ****     }
2024:rtos/uC-FS/Source/fs_unicode.c **** 
2025:rtos/uC-FS/Source/fs_unicode.c ****     return (dig_oct);
ARM GAS  /tmp/cc4JYsWh.s 			page 37


2026:rtos/uC-FS/Source/fs_unicode.c **** }
2027:rtos/uC-FS/Source/fs_unicode.c **** 
2028:rtos/uC-FS/Source/fs_unicode.c **** 
2029:rtos/uC-FS/Source/fs_unicode.c **** /*
2030:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2031:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_CharIsDigHex()
2032:rtos/uC-FS/Source/fs_unicode.c **** *
2033:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine whether a character is an hexadecimal-digit character.
2034:rtos/uC-FS/Source/fs_unicode.c **** *
2035:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to examine.
2036:rtos/uC-FS/Source/fs_unicode.c **** *
2037:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : DEF_YES, if character is     an hexadecimal-digit character.
2038:rtos/uC-FS/Source/fs_unicode.c **** *
2039:rtos/uC-FS/Source/fs_unicode.c **** *               DEF_NO,  if character is NOT an hexadecimal-digit character.
2040:rtos/uC-FS/Source/fs_unicode.c **** *
2041:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : none.
2042:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2043:rtos/uC-FS/Source/fs_unicode.c **** */
2044:rtos/uC-FS/Source/fs_unicode.c **** 
2045:rtos/uC-FS/Source/fs_unicode.c **** CPU_BOOLEAN  WC_CharIsDigHex (CPU_WCHAR  c)
2046:rtos/uC-FS/Source/fs_unicode.c **** {
2047:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  dig_hex;
2048:rtos/uC-FS/Source/fs_unicode.c **** 
2049:rtos/uC-FS/Source/fs_unicode.c **** 
2050:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char ...       
2051:rtos/uC-FS/Source/fs_unicode.c ****         dig_hex = ASCII_IS_DIG_HEX((CPU_CHAR)c);                /* ... determine whether char is AS
2052:rtos/uC-FS/Source/fs_unicode.c **** 
2053:rtos/uC-FS/Source/fs_unicode.c **** 
2054:rtos/uC-FS/Source/fs_unicode.c ****     } else {
2055:rtos/uC-FS/Source/fs_unicode.c ****         dig_hex = ((((c) >= WC_CHAR_FULLWIDTH_DIG_ZERO     ) && ((c) <= WC_CHAR_FULLWIDTH_DIG_NINE 
2056:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
2057:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_LOWER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_LOW
2058:rtos/uC-FS/Source/fs_unicode.c ****     }
2059:rtos/uC-FS/Source/fs_unicode.c **** 
2060:rtos/uC-FS/Source/fs_unicode.c ****     return (dig_hex);
2061:rtos/uC-FS/Source/fs_unicode.c **** }
2062:rtos/uC-FS/Source/fs_unicode.c **** 
2063:rtos/uC-FS/Source/fs_unicode.c **** 
2064:rtos/uC-FS/Source/fs_unicode.c **** /*
2065:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2066:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_CharIsSpace()
2067:rtos/uC-FS/Source/fs_unicode.c **** *
2068:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine whether a character is a white-space character.
2069:rtos/uC-FS/Source/fs_unicode.c **** *
2070:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to examine.
2071:rtos/uC-FS/Source/fs_unicode.c **** *
2072:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : DEF_YES, if character is     a white-space character.
2073:rtos/uC-FS/Source/fs_unicode.c **** *
2074:rtos/uC-FS/Source/fs_unicode.c **** *               DEF_NO,  if character is NOT a white-space character.
2075:rtos/uC-FS/Source/fs_unicode.c **** *
2076:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : none.
2077:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2078:rtos/uC-FS/Source/fs_unicode.c **** */
2079:rtos/uC-FS/Source/fs_unicode.c **** 
2080:rtos/uC-FS/Source/fs_unicode.c **** CPU_BOOLEAN  WC_CharIsSpace (CPU_WCHAR  c)
2081:rtos/uC-FS/Source/fs_unicode.c **** {
2082:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  space;
ARM GAS  /tmp/cc4JYsWh.s 			page 38


2083:rtos/uC-FS/Source/fs_unicode.c **** 
2084:rtos/uC-FS/Source/fs_unicode.c **** 
2085:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char ...       
2086:rtos/uC-FS/Source/fs_unicode.c ****         space = ASCII_IS_SPACE((CPU_CHAR)c);                    /* ... determine whether char is AS
2087:rtos/uC-FS/Source/fs_unicode.c **** 
2088:rtos/uC-FS/Source/fs_unicode.c **** 
2089:rtos/uC-FS/Source/fs_unicode.c ****     } else {
2090:rtos/uC-FS/Source/fs_unicode.c ****         space = (((c == WC_CHAR_NO_BREAK_SPACE           )  || (c == WC_CHAR_OGHAM_SPACE_MARK      
2091:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
2092:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_PARAGRAPH_SEPARATOR      )  || (c == WC_CHAR_PARAGRAPH_SEPARATOR   
2093:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_NARROW_NO_BREAK_SPACE    )  || (c == WC_CHAR_MEDIUM_MATHEMATICAL_SP
2094:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_IDEOGRAPHIC_SPACE        ))                                        
2095:rtos/uC-FS/Source/fs_unicode.c ****                  ((c >= WC_CHAR_EN_QUAD                  )  && (c <= WC_CHAR_HAIR_SPACE            
2096:rtos/uC-FS/Source/fs_unicode.c ****     }
2097:rtos/uC-FS/Source/fs_unicode.c **** 
2098:rtos/uC-FS/Source/fs_unicode.c ****     return (space);
2099:rtos/uC-FS/Source/fs_unicode.c **** }
2100:rtos/uC-FS/Source/fs_unicode.c **** 
2101:rtos/uC-FS/Source/fs_unicode.c **** 
2102:rtos/uC-FS/Source/fs_unicode.c **** /*
2103:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2104:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_CharToLower()
2105:rtos/uC-FS/Source/fs_unicode.c **** *
2106:rtos/uC-FS/Source/fs_unicode.c **** * Description : Convert uppercase alphabetic character to its corresponding lowercase alphabetic ch
2107:rtos/uC-FS/Source/fs_unicode.c **** *
2108:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to convert.
2109:rtos/uC-FS/Source/fs_unicode.c **** *
2110:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Lowercase equivalent of 'c', if character 'c' is a uppercase character.
2111:rtos/uC-FS/Source/fs_unicode.c **** *
2112:rtos/uC-FS/Source/fs_unicode.c **** *               Character 'c',               otherwise.
2113:rtos/uC-FS/Source/fs_unicode.c **** *
2114:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) The Unicode character set can be divided into ranges of characters that map to
2115:rtos/uC-FS/Source/fs_unicode.c **** *                   characters the same character code 'distance' away.  For example, each uppercas
2116:rtos/uC-FS/Source/fs_unicode.c **** *                   Latin character (code points 0x41-0x5A) maps to a lowercase Latin character 0x2
2117:rtos/uC-FS/Source/fs_unicode.c **** *                   points away (0x61-0x7A).
2118:rtos/uC-FS/Source/fs_unicode.c **** *
2119:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) The Unicode character set contains ranges of alternating upper & equivalent
2120:rtos/uC-FS/Source/fs_unicode.c **** *                       lower case characters.  To optimize the case mapping algorithm, these range
2121:rtos/uC-FS/Source/fs_unicode.c **** *                       are handled specially by placing WC_DIFF_ALT as the distance in the case
2122:rtos/uC-FS/Source/fs_unicode.c **** *                       mapping table.
2123:rtos/uC-FS/Source/fs_unicode.c **** *
2124:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Each character SHOULD fit into a range in 'WC_CharToLowerTbl[]'; in case th
2125:rtos/uC-FS/Source/fs_unicode.c **** *                       table or algorithm is broken, upon failure the character 'c' is returned.
2126:rtos/uC-FS/Source/fs_unicode.c **** *
2127:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Case mapping is accelerated for the ASCII character set, to which most char
2128:rtos/uC-FS/Source/fs_unicode.c **** *                       are expected to belong.
2129:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2130:rtos/uC-FS/Source/fs_unicode.c **** */
2131:rtos/uC-FS/Source/fs_unicode.c **** 
2132:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  WC_CharToLower (CPU_WCHAR  c)
2133:rtos/uC-FS/Source/fs_unicode.c **** {
2134:rtos/uC-FS/Source/fs_unicode.c ****            CPU_CHAR            lower_ascii;
2135:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           lower;
2136:rtos/uC-FS/Source/fs_unicode.c ****            CPU_INT32S          diff;
2137:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           c_start;
2138:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_start_even;
2139:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_even;
ARM GAS  /tmp/cc4JYsWh.s 			page 39


2140:rtos/uC-FS/Source/fs_unicode.c ****     const  WC_SRCH_TBL_ENTRY  *ptbl_entry;
2141:rtos/uC-FS/Source/fs_unicode.c **** 
2142:rtos/uC-FS/Source/fs_unicode.c **** 
2143:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char (see Note 
2144:rtos/uC-FS/Source/fs_unicode.c ****         lower_ascii =  ASCII_TO_LOWER((CPU_CHAR)c);
2145:rtos/uC-FS/Source/fs_unicode.c ****         lower       = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
2146:rtos/uC-FS/Source/fs_unicode.c ****         return (lower);
2147:rtos/uC-FS/Source/fs_unicode.c ****     }
2148:rtos/uC-FS/Source/fs_unicode.c **** 
2149:rtos/uC-FS/Source/fs_unicode.c **** 
2150:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
2151:rtos/uC-FS/Source/fs_unicode.c ****     if (c >= DEF_INT_16U_MAX_VAL) {                             /* If char is hi Unicode char ...  
2152:rtos/uC-FS/Source/fs_unicode.c ****         lower = c;                                              /* ... rtn original char.          
2153:rtos/uC-FS/Source/fs_unicode.c ****         return (lower);
2154:rtos/uC-FS/Source/fs_unicode.c ****     }
2155:rtos/uC-FS/Source/fs_unicode.c **** #endif
2156:rtos/uC-FS/Source/fs_unicode.c **** 
2157:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* If char is Unicode char ...     
2158:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* ... srch for range.             
2159:rtos/uC-FS/Source/fs_unicode.c ****     ptbl_entry = WC_SrchTbl(&WC_CharToLowerTbl[0],
2160:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToLowerTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
2161:rtos/uC-FS/Source/fs_unicode.c ****                              c);
2162:rtos/uC-FS/Source/fs_unicode.c **** 
2163:rtos/uC-FS/Source/fs_unicode.c ****     if (ptbl_entry == (WC_SRCH_TBL_ENTRY *)0) {                 /* If range NOT found (see Note #1b
2164:rtos/uC-FS/Source/fs_unicode.c ****         lower = c;                                              /* ... rtn original char.          
2165:rtos/uC-FS/Source/fs_unicode.c ****         return (lower);
2166:rtos/uC-FS/Source/fs_unicode.c ****     }
2167:rtos/uC-FS/Source/fs_unicode.c **** 
2168:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Calc case-folded char.          
2169:rtos/uC-FS/Source/fs_unicode.c ****     diff = ptbl_entry->Diff;
2170:rtos/uC-FS/Source/fs_unicode.c ****     if (diff == WC_DIFF_35332) {
2171:rtos/uC-FS/Source/fs_unicode.c ****         diff = -35332;
2172:rtos/uC-FS/Source/fs_unicode.c ****     }
2173:rtos/uC-FS/Source/fs_unicode.c **** 
2174:rtos/uC-FS/Source/fs_unicode.c ****     if (diff == WC_DIFF_ALT) {                                  /* Alternating range (see Note #1a)
2175:rtos/uC-FS/Source/fs_unicode.c ****         c_start      = ptbl_entry->Char;
2176:rtos/uC-FS/Source/fs_unicode.c ****         c_start_even = ((c_start % 2u) == 0u)    ? DEF_YES  : DEF_NO;
2177:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES  : DEF_NO;
2178:rtos/uC-FS/Source/fs_unicode.c **** 
2179:rtos/uC-FS/Source/fs_unicode.c ****         lower        = (c_start_even  == c_even) ? (c + 1u) : (c);
2180:rtos/uC-FS/Source/fs_unicode.c **** 
2181:rtos/uC-FS/Source/fs_unicode.c ****     } else {                                                    /* Normal or case-insensitive range
2182:rtos/uC-FS/Source/fs_unicode.c ****         lower        = c + (CPU_WCHAR)diff;
2183:rtos/uC-FS/Source/fs_unicode.c ****     }
2184:rtos/uC-FS/Source/fs_unicode.c **** 
2185:rtos/uC-FS/Source/fs_unicode.c ****     return (lower);
2186:rtos/uC-FS/Source/fs_unicode.c **** }
2187:rtos/uC-FS/Source/fs_unicode.c **** 
2188:rtos/uC-FS/Source/fs_unicode.c **** 
2189:rtos/uC-FS/Source/fs_unicode.c **** /*
2190:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2191:rtos/uC-FS/Source/fs_unicode.c **** *                                          WC_CharToUpper()
2192:rtos/uC-FS/Source/fs_unicode.c **** *
2193:rtos/uC-FS/Source/fs_unicode.c **** * Description : Convert lowercase alphabetic character to its corresponding uppercase alphabetic ch
2194:rtos/uC-FS/Source/fs_unicode.c **** *
2195:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to convert.
2196:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 40


2197:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Uppercase equivalent of 'c', if character 'c' is a lowercase character.
2198:rtos/uC-FS/Source/fs_unicode.c **** *
2199:rtos/uC-FS/Source/fs_unicode.c **** *               Character 'c',               otherwise.
2200:rtos/uC-FS/Source/fs_unicode.c **** *
2201:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) The Unicode character set can be divided into ranges of characters that map to
2202:rtos/uC-FS/Source/fs_unicode.c **** *                   characters the same character code 'distance' away.  For example, each lowercas
2203:rtos/uC-FS/Source/fs_unicode.c **** *                   Latin character (code points 0x61-0x7A) maps to an uppercase Latin character 0x
2204:rtos/uC-FS/Source/fs_unicode.c **** *                   code points away (0x41-0x5A).
2205:rtos/uC-FS/Source/fs_unicode.c **** *
2206:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) The Unicode character set contains ranges of alternating upper & equivalent
2207:rtos/uC-FS/Source/fs_unicode.c **** *                       lower case characters.  To optimize the case mapping algorithm, these range
2208:rtos/uC-FS/Source/fs_unicode.c **** *                       are handled specially by placing WC_DIFF_ALT as the distance in the case ma
2209:rtos/uC-FS/Source/fs_unicode.c **** *                       table, upon failure the character 'c' is returned.
2210:rtos/uC-FS/Source/fs_unicode.c **** *
2211:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Each character SHOULD fit into a range in 'WC_CharToUpperTbl[]'; in case th
2212:rtos/uC-FS/Source/fs_unicode.c **** *                       table original algorithm is broken, the failure to find the range is handle
2213:rtos/uC-FS/Source/fs_unicode.c **** *
2214:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Case mapping is accelerated for the ASCII character set, to which most char
2215:rtos/uC-FS/Source/fs_unicode.c **** *                       are expected to belong.
2216:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2217:rtos/uC-FS/Source/fs_unicode.c **** */
2218:rtos/uC-FS/Source/fs_unicode.c **** 
2219:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  WC_CharToUpper (CPU_WCHAR  c)
2220:rtos/uC-FS/Source/fs_unicode.c **** {
2221:rtos/uC-FS/Source/fs_unicode.c ****            CPU_CHAR            upper_ascii;
2222:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           upper;
2223:rtos/uC-FS/Source/fs_unicode.c ****            CPU_INT32S          diff;
2224:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           c_start;
2225:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_start_even;
2226:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_even;
2227:rtos/uC-FS/Source/fs_unicode.c ****     const  WC_SRCH_TBL_ENTRY  *ptbl_entry;
2228:rtos/uC-FS/Source/fs_unicode.c **** 
2229:rtos/uC-FS/Source/fs_unicode.c **** 
2230:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char (see Note 
2231:rtos/uC-FS/Source/fs_unicode.c ****         upper_ascii =  ASCII_TO_UPPER((CPU_CHAR)c);
2232:rtos/uC-FS/Source/fs_unicode.c ****         upper       = (CPU_WCHAR)upper_ascii;                   /* ... convert to upper case.      
2233:rtos/uC-FS/Source/fs_unicode.c ****         return (upper);
2234:rtos/uC-FS/Source/fs_unicode.c ****     }
2235:rtos/uC-FS/Source/fs_unicode.c **** 
2236:rtos/uC-FS/Source/fs_unicode.c **** 
2237:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
2238:rtos/uC-FS/Source/fs_unicode.c ****     if (c >= DEF_INT_16U_MAX_VAL) {                             /* If char is hi Unicode char ...  
2239:rtos/uC-FS/Source/fs_unicode.c ****         upper = c;                                              /* ... rtn original char.          
2240:rtos/uC-FS/Source/fs_unicode.c ****         return (upper);
2241:rtos/uC-FS/Source/fs_unicode.c ****     }
2242:rtos/uC-FS/Source/fs_unicode.c **** #endif
2243:rtos/uC-FS/Source/fs_unicode.c **** 
2244:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* If char is Unicode char ...     
2245:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* ... srch for range.             
2246:rtos/uC-FS/Source/fs_unicode.c ****     ptbl_entry = WC_SrchTbl(&WC_CharToUpperTbl[0],
2247:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToUpperTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
2248:rtos/uC-FS/Source/fs_unicode.c ****                              c);
2249:rtos/uC-FS/Source/fs_unicode.c **** 
2250:rtos/uC-FS/Source/fs_unicode.c ****     if (ptbl_entry == (WC_SRCH_TBL_ENTRY *)0) {                 /* If range NOT found (see Note #1b
2251:rtos/uC-FS/Source/fs_unicode.c ****         upper = c;                                              /* ... rtn original char.          
2252:rtos/uC-FS/Source/fs_unicode.c ****         return (upper);
2253:rtos/uC-FS/Source/fs_unicode.c ****     }
ARM GAS  /tmp/cc4JYsWh.s 			page 41


2254:rtos/uC-FS/Source/fs_unicode.c **** 
2255:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Calc case-folded char.          
2256:rtos/uC-FS/Source/fs_unicode.c ****     diff = ptbl_entry->Diff;
2257:rtos/uC-FS/Source/fs_unicode.c ****     if (diff == WC_DIFF_35332) {
2258:rtos/uC-FS/Source/fs_unicode.c ****         diff =  35332;
2259:rtos/uC-FS/Source/fs_unicode.c ****     }
2260:rtos/uC-FS/Source/fs_unicode.c **** 
2261:rtos/uC-FS/Source/fs_unicode.c ****     if (diff == WC_DIFF_ALT) {                                  /* Alternating range (see Note #1a)
2262:rtos/uC-FS/Source/fs_unicode.c ****         c_start      = ptbl_entry->Char;
2263:rtos/uC-FS/Source/fs_unicode.c ****         c_start_even = ((c_start % 2u) == 0u)    ? DEF_YES  : DEF_NO;
2264:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES  : DEF_NO;
2265:rtos/uC-FS/Source/fs_unicode.c **** 
2266:rtos/uC-FS/Source/fs_unicode.c ****         upper        = (c_start_even  == c_even) ? (c - 1u) : (c);
2267:rtos/uC-FS/Source/fs_unicode.c **** 
2268:rtos/uC-FS/Source/fs_unicode.c ****     } else {                                                    /* Normal or case-insensitive range
2269:rtos/uC-FS/Source/fs_unicode.c ****         upper        = c + (CPU_WCHAR)diff;
2270:rtos/uC-FS/Source/fs_unicode.c ****     }
2271:rtos/uC-FS/Source/fs_unicode.c **** 
2272:rtos/uC-FS/Source/fs_unicode.c ****     return (upper);
2273:rtos/uC-FS/Source/fs_unicode.c **** }
2274:rtos/uC-FS/Source/fs_unicode.c **** 
2275:rtos/uC-FS/Source/fs_unicode.c **** 
2276:rtos/uC-FS/Source/fs_unicode.c **** /*
2277:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2278:rtos/uC-FS/Source/fs_unicode.c **** *                                         WC_CharToCasefold()
2279:rtos/uC-FS/Source/fs_unicode.c **** *
2280:rtos/uC-FS/Source/fs_unicode.c **** * Description : Case-fold character.
2281:rtos/uC-FS/Source/fs_unicode.c **** *
2282:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : c           Character to case fold.
2283:rtos/uC-FS/Source/fs_unicode.c **** *
2284:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Case-folded character.
2285:rtos/uC-FS/Source/fs_unicode.c **** *
2286:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) Case-folding maps characters for case-insensitive string comparison.  According
2287:rtos/uC-FS/Source/fs_unicode.c **** *                   the Unicode Standard 5.0, Section 3.13, D129, "A string X is a caseless match f
2288:rtos/uC-FS/Source/fs_unicode.c **** *                   string Y if and only if: toCasefold(X) = toCasefold(Y)".  The case-foldings in 
2289:rtos/uC-FS/Source/fs_unicode.c **** *                   Unicode Character Database provided in the supplementary file, 'CaseFolding.txt
2290:rtos/uC-FS/Source/fs_unicode.c **** *                   followed in this implementation.
2291:rtos/uC-FS/Source/fs_unicode.c **** *
2292:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) 'CaseFolding.txt' includes common, full, simple & Turkic case-foldings.  Th
2293:rtos/uC-FS/Source/fs_unicode.c **** *                       (which map single characters to multiple characters) & Turkic (which apply 
2294:rtos/uC-FS/Source/fs_unicode.c **** *                       to Turkic languages) are NOT followed.
2295:rtos/uC-FS/Source/fs_unicode.c **** *
2296:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) If the lowercase equivalent of 'c' is different than 'c', then it is al
2297:rtos/uC-FS/Source/fs_unicode.c **** *                           the case-folded equivalent of 'c'.  Case-folding need only handle the f
2298:rtos/uC-FS/Source/fs_unicode.c **** *                           exceptions.
2299:rtos/uC-FS/Source/fs_unicode.c **** *
2300:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) The Unicode character set can be divided into ranges of characters that map
2301:rtos/uC-FS/Source/fs_unicode.c **** *                       characters the same character code 'distance' away.  For example, each uppe
2302:rtos/uC-FS/Source/fs_unicode.c **** *                       Latin character (code points 0x41-0x5A) maps to a lowercase Latin character
2303:rtos/uC-FS/Source/fs_unicode.c **** *                       0x20 code points away (0x61-0x7A).
2304:rtos/uC-FS/Source/fs_unicode.c **** *
2305:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) The Unicode character set contains ranges of alternating upper & equiva
2306:rtos/uC-FS/Source/fs_unicode.c **** *                           lower case characters, the former mapping to the latter in case folding
2307:rtos/uC-FS/Source/fs_unicode.c **** *                           optimize the case folding algorithm, these ranges are handled specially
2308:rtos/uC-FS/Source/fs_unicode.c **** *                           placing WC_DIFF_ALT as the distance in the case folding table.
2309:rtos/uC-FS/Source/fs_unicode.c **** *
2310:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Each character SHOULD fit into a range in 'WC_CharToCasefoldTbl[]'; in 
ARM GAS  /tmp/cc4JYsWh.s 			page 42


2311:rtos/uC-FS/Source/fs_unicode.c **** *                           the table or algorithm is broken, upon failure the character 'c' is ret
2312:rtos/uC-FS/Source/fs_unicode.c **** *
2313:rtos/uC-FS/Source/fs_unicode.c **** *                       (3) Case folding is accelerated for the ASCII character set, to which most
2314:rtos/uC-FS/Source/fs_unicode.c **** *                           characters are expected to belong.
2315:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2316:rtos/uC-FS/Source/fs_unicode.c **** */
2317:rtos/uC-FS/Source/fs_unicode.c **** 
2318:rtos/uC-FS/Source/fs_unicode.c **** CPU_WCHAR  WC_CharToCasefold (CPU_WCHAR  c)
2319:rtos/uC-FS/Source/fs_unicode.c **** {
2320:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           folded;
2321:rtos/uC-FS/Source/fs_unicode.c ****            CPU_CHAR            lower_ascii;
2322:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           lower;
2323:rtos/uC-FS/Source/fs_unicode.c ****            CPU_INT32S          diff;
2324:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           c_start;
2325:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_start_even;
2326:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_even;
2327:rtos/uC-FS/Source/fs_unicode.c ****     const  WC_SRCH_TBL_ENTRY  *ptbl_entry;
2328:rtos/uC-FS/Source/fs_unicode.c **** 
2329:rtos/uC-FS/Source/fs_unicode.c **** 
2330:rtos/uC-FS/Source/fs_unicode.c ****     if (c <= (CPU_WCHAR)ASCII_CHAR_DELETE) {                    /* If char is ASCII char (see Note 
2331:rtos/uC-FS/Source/fs_unicode.c ****         lower_ascii =  ASCII_TO_LOWER((CPU_CHAR)c);
2332:rtos/uC-FS/Source/fs_unicode.c ****         folded      = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
2333:rtos/uC-FS/Source/fs_unicode.c ****         return (folded);
2334:rtos/uC-FS/Source/fs_unicode.c ****     }
2335:rtos/uC-FS/Source/fs_unicode.c **** 
2336:rtos/uC-FS/Source/fs_unicode.c **** 
2337:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
2338:rtos/uC-FS/Source/fs_unicode.c ****     if (c >= DEF_INT_16U_MAX_VAL) {                             /* If char is hi Unicode char ...  
2339:rtos/uC-FS/Source/fs_unicode.c ****         folded = c;                                             /* ... rtn original char.          
2340:rtos/uC-FS/Source/fs_unicode.c ****         return (folded);
2341:rtos/uC-FS/Source/fs_unicode.c ****     }
2342:rtos/uC-FS/Source/fs_unicode.c **** #endif
2343:rtos/uC-FS/Source/fs_unicode.c **** 
2344:rtos/uC-FS/Source/fs_unicode.c ****     lower = WC_CharToLower(c);
2345:rtos/uC-FS/Source/fs_unicode.c ****     if (lower != c) {                                           /* If char to lower is NOT char (se
2346:rtos/uC-FS/Source/fs_unicode.c ****         folded = lower;                                         /* ... folded is lower.            
2347:rtos/uC-FS/Source/fs_unicode.c ****         return (folded);
2348:rtos/uC-FS/Source/fs_unicode.c ****     }
2349:rtos/uC-FS/Source/fs_unicode.c **** 
2350:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* If char is Unicode char ...     
2351:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* ... srch for range.             
2352:rtos/uC-FS/Source/fs_unicode.c ****     ptbl_entry = WC_SrchTbl(&WC_CharToCasefoldTbl[0],
2353:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToCasefoldTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
2354:rtos/uC-FS/Source/fs_unicode.c ****                              c);
2355:rtos/uC-FS/Source/fs_unicode.c **** 
2356:rtos/uC-FS/Source/fs_unicode.c ****     if (ptbl_entry == (WC_SRCH_TBL_ENTRY *)0) {                 /* If range NOT found (see Note #1b
2357:rtos/uC-FS/Source/fs_unicode.c ****         folded = c;                                             /* ... rtn original char.          
2358:rtos/uC-FS/Source/fs_unicode.c ****         return (folded);
2359:rtos/uC-FS/Source/fs_unicode.c ****     }
2360:rtos/uC-FS/Source/fs_unicode.c **** 
2361:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Calc case-folded char.          
2362:rtos/uC-FS/Source/fs_unicode.c ****     diff = ptbl_entry->Diff;
2363:rtos/uC-FS/Source/fs_unicode.c **** 
2364:rtos/uC-FS/Source/fs_unicode.c ****     if (diff == WC_DIFF_ALT) {                                  /* Alternating range (see Note #1b1
2365:rtos/uC-FS/Source/fs_unicode.c ****         c_start      = ptbl_entry->Char;
2366:rtos/uC-FS/Source/fs_unicode.c ****         c_start_even = ((c_start % 2u) == 0u)    ? DEF_YES : DEF_NO;
2367:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES : DEF_NO;
ARM GAS  /tmp/cc4JYsWh.s 			page 43


2368:rtos/uC-FS/Source/fs_unicode.c **** 
2369:rtos/uC-FS/Source/fs_unicode.c ****         folded       = (c_start_even  == c_even) ? (c + 1u) : (c);
2370:rtos/uC-FS/Source/fs_unicode.c **** 
2371:rtos/uC-FS/Source/fs_unicode.c ****     } else {                                                    /* Normal or case-insensitive range
2372:rtos/uC-FS/Source/fs_unicode.c ****         folded       = c + (CPU_WCHAR)diff;
2373:rtos/uC-FS/Source/fs_unicode.c ****     }
2374:rtos/uC-FS/Source/fs_unicode.c **** 
2375:rtos/uC-FS/Source/fs_unicode.c ****     return (folded);
2376:rtos/uC-FS/Source/fs_unicode.c **** }
2377:rtos/uC-FS/Source/fs_unicode.c **** 
2378:rtos/uC-FS/Source/fs_unicode.c **** 
2379:rtos/uC-FS/Source/fs_unicode.c **** /*
2380:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2381:rtos/uC-FS/Source/fs_unicode.c **** *                                            WC_CharToMB()
2382:rtos/uC-FS/Source/fs_unicode.c **** *
2383:rtos/uC-FS/Source/fs_unicode.c **** * Description : Convert wide-character to its corresponding multi-byte character.
2384:rtos/uC-FS/Source/fs_unicode.c **** *
2385:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pc_dest     Pointer to buffer that will receive the multi-byte character.
2386:rtos/uC-FS/Source/fs_unicode.c **** *
2387:rtos/uC-FS/Source/fs_unicode.c **** *               c_src       Wide-character to convert.
2388:rtos/uC-FS/Source/fs_unicode.c **** *
2389:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Number of bytes stored in 'pc_dest', if character 'c_src' is a valid character.
2390:rtos/uC-FS/Source/fs_unicode.c **** *
2391:rtos/uC-FS/Source/fs_unicode.c **** *               (CPU_SIZE_T)-1,                      otherwise.
2392:rtos/uC-FS/Source/fs_unicode.c **** *
2393:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) (a) IEEE Std 1003.1, 2004 Edition, Section 'wcrtomb() : DESCRIPTION' states tha
2394:rtos/uC-FS/Source/fs_unicode.c **** *                       wcrtomb() function shall determine the number of bytes needed to represent 
2395:rtos/uC-FS/Source/fs_unicode.c **** *                       character that corresponds to the wide character given by wc ... and store 
2396:rtos/uC-FS/Source/fs_unicode.c **** *                       resulting bytes in the array whose first element is pointed to by s".
2397:rtos/uC-FS/Source/fs_unicode.c **** *
2398:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'wcrtomb() : RETURN VALUE' states th
2399:rtos/uC-FS/Source/fs_unicode.c **** *                      "wcrtomb() shall return the number of bytes stored in the array object....  
2400:rtos/uC-FS/Source/fs_unicode.c **** *                       wc is not a valid wide character ... the function ... shall return (size_t)
2401:rtos/uC-FS/Source/fs_unicode.c **** *
2402:rtos/uC-FS/Source/fs_unicode.c **** *               (2) (a) Unicode Standard 5.0, Section 3.9, definition D92, defines the UTF-8 encodi
2403:rtos/uC-FS/Source/fs_unicode.c **** *                       form. Table 3-6 gives the UTF-8 bit distribution for scalar values (the wid
2404:rtos/uC-FS/Source/fs_unicode.c **** *                       character value) :
2405:rtos/uC-FS/Source/fs_unicode.c **** *
2406:rtos/uC-FS/Source/fs_unicode.c **** *                      --------------------------------------------------------------------------
2407:rtos/uC-FS/Source/fs_unicode.c **** *                      |        SCALAR VALUE        |                UTF-8 FORM                 |
2408:rtos/uC-FS/Source/fs_unicode.c **** *                      |                            |  BYTE 1  |  BYTE 2  |  BYTE 3  |  BYTE 4  |
2409:rtos/uC-FS/Source/fs_unicode.c **** *                      --------------------------------------------------------------------------
2410:rtos/uC-FS/Source/fs_unicode.c **** *                      |          00000000 0xxxxxxx | 0xxxxxxx |          |          |          |
2411:rtos/uC-FS/Source/fs_unicode.c **** *                      |          00000yyy yyxxxxxx | 110yyyyy | 10xxxxxx |          |          |
2412:rtos/uC-FS/Source/fs_unicode.c **** *                      |          zzzzyyyy yyxxxxxx | 1110zzzz | 10yyyyyy | 10xxxxxx |          |
2413:rtos/uC-FS/Source/fs_unicode.c **** *                      | 000uuuuu zzzzyyyy yyxxxxxx | 11110uuu | 10uuzzzz | 10yyyyyy | 10xxxxxx |
2414:rtos/uC-FS/Source/fs_unicode.c **** *                      --------------------------------------------------------------------------
2415:rtos/uC-FS/Source/fs_unicode.c **** *
2416:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Unicode Standard 5.0, Section 3.9, definitions D99, D100 & D101, define thr
2417:rtos/uC-FS/Source/fs_unicode.c **** *                       schemes for determining the endianness of the wide-character (UTF-32) encod
2418:rtos/uC-FS/Source/fs_unicode.c **** *                       The first two, UTF-32BE & UTF-32LE, define big- & little-endian schemes :
2419:rtos/uC-FS/Source/fs_unicode.c **** *
2420:rtos/uC-FS/Source/fs_unicode.c **** *                           UTF-32BE
2421:rtos/uC-FS/Source/fs_unicode.c **** *                               Code Unit    :  00010302
2422:rtos/uC-FS/Source/fs_unicode.c **** *                               Byte Sequence:  00 01 03 02
2423:rtos/uC-FS/Source/fs_unicode.c **** *
2424:rtos/uC-FS/Source/fs_unicode.c **** *                           UTF-32LE
ARM GAS  /tmp/cc4JYsWh.s 			page 44


2425:rtos/uC-FS/Source/fs_unicode.c **** *                               Code Unit    :  00010302
2426:rtos/uC-FS/Source/fs_unicode.c **** *                               Byte Sequence:  02 03 01 00
2427:rtos/uC-FS/Source/fs_unicode.c **** *
2428:rtos/uC-FS/Source/fs_unicode.c **** *                       The last, D101, uses a byte order marker (BOM) to "distinguish between the 
2429:rtos/uC-FS/Source/fs_unicode.c **** *                       byte orders"; "[h]owever, when there is no BOM, and in the absence of a hig
2430:rtos/uC-FS/Source/fs_unicode.c **** *                       protocol, the byte order of the UTF-32 encoding scheme is big-endian".
2431:rtos/uC-FS/Source/fs_unicode.c **** *
2432:rtos/uC-FS/Source/fs_unicode.c **** *                           UTF-32
2433:rtos/uC-FS/Source/fs_unicode.c **** *                               Code Unit       :  00010302
2434:rtos/uC-FS/Source/fs_unicode.c **** *                               Byte Sequence(s):  00 01 03 02
2435:rtos/uC-FS/Source/fs_unicode.c **** *                                                  00 00 FE FF 00 01 03 02
2436:rtos/uC-FS/Source/fs_unicode.c **** *                                                  FF FE 00 00 02 03 01 00
2437:rtos/uC-FS/Source/fs_unicode.c **** *
2438:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) The byte-order of the wide-character (UTF-32) stream is assumed to be b
2439:rtos/uC-FS/Source/fs_unicode.c **** *                           endian.  On little-endian CPUs, the byte-order of the source character 
2440:rtos/uC-FS/Source/fs_unicode.c **** *                           be flipped prior to processing.
2441:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2442:rtos/uC-FS/Source/fs_unicode.c **** */
2443:rtos/uC-FS/Source/fs_unicode.c **** 
2444:rtos/uC-FS/Source/fs_unicode.c **** CPU_SIZE_T  WC_CharToMB (CPU_CHAR   *pc_dest,
2445:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_WCHAR   c_src)
2446:rtos/uC-FS/Source/fs_unicode.c **** {
2447:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  byte1;
2448:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  byte2;
2449:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  byte3;
2450:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
2451:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  byte4;
2452:rtos/uC-FS/Source/fs_unicode.c **** #endif
2453:rtos/uC-FS/Source/fs_unicode.c **** 
2454:rtos/uC-FS/Source/fs_unicode.c **** 
2455:rtos/uC-FS/Source/fs_unicode.c ****     if (pc_dest == (CPU_CHAR *)0) {
2456:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)0);
2457:rtos/uC-FS/Source/fs_unicode.c ****     }
2458:rtos/uC-FS/Source/fs_unicode.c **** 
2459:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
2460:rtos/uC-FS/Source/fs_unicode.c ****     if (c_src > MB_MAX_SCALAR_VAL_4BYTE) {
2461:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
2462:rtos/uC-FS/Source/fs_unicode.c ****     }
2463:rtos/uC-FS/Source/fs_unicode.c **** 
2464:rtos/uC-FS/Source/fs_unicode.c ****     if (c_src > MB_MAX_SCALAR_VAL_3BYTE) {                      /* ----------------- 4-BYTE UTF-8 C
2465:rtos/uC-FS/Source/fs_unicode.c ****         byte4   = (CPU_INT08U)(c_src & 0x3F) | DEF_BIT_07;
2466:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
2467:rtos/uC-FS/Source/fs_unicode.c ****         byte3   = (CPU_INT08U)(c_src & 0x3F) | DEF_BIT_07;
2468:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
2469:rtos/uC-FS/Source/fs_unicode.c ****         byte2   = (CPU_INT08U)(c_src & 0x3F) | DEF_BIT_07;
2470:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
2471:rtos/uC-FS/Source/fs_unicode.c ****         byte1   = (CPU_INT08U)(c_src & 0x07) | 0xF0;
2472:rtos/uC-FS/Source/fs_unicode.c **** 
2473:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte1;
2474:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
2475:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte2;
2476:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
2477:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte3;
2478:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
2479:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte4;
2480:rtos/uC-FS/Source/fs_unicode.c **** 
2481:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)4);
ARM GAS  /tmp/cc4JYsWh.s 			page 45


2482:rtos/uC-FS/Source/fs_unicode.c ****     }
2483:rtos/uC-FS/Source/fs_unicode.c **** #endif
2484:rtos/uC-FS/Source/fs_unicode.c **** 
2485:rtos/uC-FS/Source/fs_unicode.c ****     if (c_src > MB_MAX_SCALAR_VAL_2BYTE) {                      /* ----------------- 3-BYTE UTF-8 C
2486:rtos/uC-FS/Source/fs_unicode.c ****         byte3   = (CPU_INT08U)(c_src & 0x3Fu) | DEF_BIT_07;
2487:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
2488:rtos/uC-FS/Source/fs_unicode.c ****         byte2   = (CPU_INT08U)(c_src & 0x3Fu) | DEF_BIT_07;
2489:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
2490:rtos/uC-FS/Source/fs_unicode.c ****         byte1   = (CPU_INT08U)(c_src & 0x0Fu) | 0xE0u;
2491:rtos/uC-FS/Source/fs_unicode.c **** 
2492:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte1;
2493:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
2494:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte2;
2495:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
2496:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte3;
2497:rtos/uC-FS/Source/fs_unicode.c **** 
2498:rtos/uC-FS/Source/fs_unicode.c ****        return ((CPU_SIZE_T)3);
2499:rtos/uC-FS/Source/fs_unicode.c ****     }
2500:rtos/uC-FS/Source/fs_unicode.c **** 
2501:rtos/uC-FS/Source/fs_unicode.c ****     if (c_src > MB_MAX_SCALAR_VAL_1BYTE) {                  /* ----------------- 2-BYTE UTF-8 CHAR 
2502:rtos/uC-FS/Source/fs_unicode.c ****         byte2   = (CPU_INT08U)(c_src & 0x3Fu) | DEF_BIT_07;
2503:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
2504:rtos/uC-FS/Source/fs_unicode.c ****         byte1   = (CPU_INT08U)(c_src & 0x1Fu) | 0xC0u;
2505:rtos/uC-FS/Source/fs_unicode.c **** 
2506:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte1;
2507:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
2508:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte2;
2509:rtos/uC-FS/Source/fs_unicode.c **** 
2510:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)2);
2511:rtos/uC-FS/Source/fs_unicode.c ****     }
2512:rtos/uC-FS/Source/fs_unicode.c **** 
2513:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* ----------------- 1-BYTE UTF-8 C
2514:rtos/uC-FS/Source/fs_unicode.c ****     byte1   = (CPU_INT08U)(c_src & 0x7Fu);
2515:rtos/uC-FS/Source/fs_unicode.c ****    *pc_dest = (CPU_CHAR)byte1;
2516:rtos/uC-FS/Source/fs_unicode.c ****     return ((CPU_SIZE_T)1);
2517:rtos/uC-FS/Source/fs_unicode.c **** }
2518:rtos/uC-FS/Source/fs_unicode.c **** 
2519:rtos/uC-FS/Source/fs_unicode.c **** 
2520:rtos/uC-FS/Source/fs_unicode.c **** /*
2521:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2522:rtos/uC-FS/Source/fs_unicode.c **** *                                            MB_CharToWC()
2523:rtos/uC-FS/Source/fs_unicode.c **** *
2524:rtos/uC-FS/Source/fs_unicode.c **** * Description : Convert multi-byte character to its corresponding wide-character.
2525:rtos/uC-FS/Source/fs_unicode.c **** *
2526:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pc_dest     Pointer to buffer that will receive the wide-character.
2527:rtos/uC-FS/Source/fs_unicode.c **** *
2528:rtos/uC-FS/Source/fs_unicode.c **** *               pc_src      Pointer to buffer containing the multi-byte character to convert.
2529:rtos/uC-FS/Source/fs_unicode.c **** *
2530:rtos/uC-FS/Source/fs_unicode.c **** *               n           Number of bytes in 'pc_src' to inspect for multi-byte character.
2531:rtos/uC-FS/Source/fs_unicode.c **** *
2532:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Number of bytes used from 'pc_src' (between 1 & n), if 'pc_src' contains a valid no
2533:rtos/uC-FS/Source/fs_unicode.c **** *                                                                       character.
2534:rtos/uC-FS/Source/fs_unicode.c **** *                           0,                                      if 'pc_src' contains a         
2535:rtos/uC-FS/Source/fs_unicode.c **** *                                                                       character.
2536:rtos/uC-FS/Source/fs_unicode.c **** *              (CPU_SIZE_T)-2,                                      if the first 'n' bytes of 'pc_s
2537:rtos/uC-FS/Source/fs_unicode.c **** *                                                                       contain an incomplete but p
2538:rtos/uC-FS/Source/fs_unicode.c **** *                                                                       valid character.
ARM GAS  /tmp/cc4JYsWh.s 			page 46


2539:rtos/uC-FS/Source/fs_unicode.c **** *              (CPU_SIZE_T)-1,                                      otherwise.
2540:rtos/uC-FS/Source/fs_unicode.c **** *
2541:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) (a) IEEE Std 1003.1, 2004 Edition, Section 'mbrtowc() : DESCRIPTION' states tha
2542:rtos/uC-FS/Source/fs_unicode.c **** *                       mbrtowc() function shall inspect at most n bytes beginning at the byte poin
2543:rtos/uC-FS/Source/fs_unicode.c **** *                       to by s to determine the number of bytes needed to complete the next charac
2544:rtos/uC-FS/Source/fs_unicode.c **** *                       If the function determines that the next character is completed, it shall d
2545:rtos/uC-FS/Source/fs_unicode.c **** *                       the value of the corresponding wide character and then, if pwc is not a nul
2546:rtos/uC-FS/Source/fs_unicode.c **** *                       pointer shall store that value in the object pointed to by pwc".
2547:rtos/uC-FS/Source/fs_unicode.c **** *
2548:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'mbrtowc() : RETURN VALUE' states th
2549:rtos/uC-FS/Source/fs_unicode.c **** *                      "mbrtowc() shall return the first of the following that applies :"
2550:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) "0                          If the next n or fewer bytes complete the c
2551:rtos/uC-FS/Source/fs_unicode.c **** *                                                       that corresponds to the null wide character
2552:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) "between 1 and n inclusive  If the next n or fewer bytes complete a val
2553:rtos/uC-FS/Source/fs_unicode.c **** *                                                       character (which is the value stored); the 
2554:rtos/uC-FS/Source/fs_unicode.c **** *                                                       returned shall be the number of bytes that 
2555:rtos/uC-FS/Source/fs_unicode.c **** *                                                       the character"
2556:rtos/uC-FS/Source/fs_unicode.c **** *                       (3) "(size_t)-2                 If the next n byte contribute to an incompl
2557:rtos/uC-FS/Source/fs_unicode.c **** *                                                       but potentially valid character"
2558:rtos/uC-FS/Source/fs_unicode.c **** *                       (4) "(size_t)-1                 If an encoding error occurs"
2559:rtos/uC-FS/Source/fs_unicode.c **** *
2560:rtos/uC-FS/Source/fs_unicode.c **** *               (2) (a) See 'WC_CharToMB()  Note #2a'.
2561:rtos/uC-FS/Source/fs_unicode.c **** *
2562:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Unicode Standard 5.0, Section 3.9, Table 3-7, lists the well-formed UTF-8 b
2563:rtos/uC-FS/Source/fs_unicode.c **** *                       sequences.
2564:rtos/uC-FS/Source/fs_unicode.c **** *
2565:rtos/uC-FS/Source/fs_unicode.c **** *                      --------------------------------------------------------------------------
2566:rtos/uC-FS/Source/fs_unicode.c **** *                      |        CODE POINTS         |                UTF-8 FORM                 |
2567:rtos/uC-FS/Source/fs_unicode.c **** *                      |                            |  BYTE 1  |  BYTE 2  |  BYTE 3  |  BYTE 4  |
2568:rtos/uC-FS/Source/fs_unicode.c **** *                      --------------------------------------------------------------------------
2569:rtos/uC-FS/Source/fs_unicode.c **** *                      |    U+000000..U+00007F      |  00..7F  |          |          |          |
2570:rtos/uC-FS/Source/fs_unicode.c **** *                      |    U+000080..U+0007FF      |  C2..DF  |  80..BF  |          |          |
2571:rtos/uC-FS/Source/fs_unicode.c **** *                      |    U+000800..U+000FFF      |  E0      |  A0..BF  |  80..BF  |          |
2572:rtos/uC-FS/Source/fs_unicode.c **** *                      |    U+001000..U+00CFFF      |  E1..EC  |  80..BF  |  80..BF  |          |
2573:rtos/uC-FS/Source/fs_unicode.c **** *                      |    U+00D000..U+00D7FF      |  ED      |  80..9F  |  80..BF  |          |
2574:rtos/uC-FS/Source/fs_unicode.c **** *                      |    U+00E000..U+00FFFF      |  EE..EF  |  80..BF  |  80..BF  |          |
2575:rtos/uC-FS/Source/fs_unicode.c **** *                      |    U+010000..U+03FFFF      |  F0      |  90..BF  |  80..BF  |  80..BF  |
2576:rtos/uC-FS/Source/fs_unicode.c **** *                      |    U+040000..U+0FFFFF      |  F1..F3  |  80..BF  |  80..BF  |  80..BF  |
2577:rtos/uC-FS/Source/fs_unicode.c **** *                      |    U+100000..U+10FFFF      |  F4      |  80..8F  |  80..BF  |  80..BF  |
2578:rtos/uC-FS/Source/fs_unicode.c **** *                      --------------------------------------------------------------------------
2579:rtos/uC-FS/Source/fs_unicode.c **** *
2580:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) (A) Second, third & fourth byte values outside of 80..BF are disallowed
2581:rtos/uC-FS/Source/fs_unicode.c **** *                               because, according to the encoding forms in Table 3-6, these are
2582:rtos/uC-FS/Source/fs_unicode.c **** *                               impossible.  In certain more restrictive conditions apply.
2583:rtos/uC-FS/Source/fs_unicode.c **** *
2584:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) First byte values 80..BF & F8..FF are disallowed because, according
2585:rtos/uC-FS/Source/fs_unicode.c **** *                               the encoding forms in Table 3-6, these are impossible.
2586:rtos/uC-FS/Source/fs_unicode.c **** *
2587:rtos/uC-FS/Source/fs_unicode.c **** *                           (C) First byte values C0..C1 are disallowed to avoid non-shortest form
2588:rtos/uC-FS/Source/fs_unicode.c **** *                               representation of code points U+50..U+7F.
2589:rtos/uC-FS/Source/fs_unicode.c **** *
2590:rtos/uC-FS/Source/fs_unicode.c **** *                           (D) First byte values F5..F7 are disallowed to prevent representation o
2591:rtos/uC-FS/Source/fs_unicode.c **** *                               invalid code points U+140000 U+1FFFFF.
2592:rtos/uC-FS/Source/fs_unicode.c **** *
2593:rtos/uC-FS/Source/fs_unicode.c **** *                           (E) If the first byte is E0, second byte values 80..9F are disallowed t
2594:rtos/uC-FS/Source/fs_unicode.c **** *                               avoid non-shortest form representation of code points U+00..7FF.
2595:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 47


2596:rtos/uC-FS/Source/fs_unicode.c **** *                           (F) If the first byte is ED, second byte values A0..BF are disallowed t
2597:rtos/uC-FS/Source/fs_unicode.c **** *                               prevent representation of invalid code points U+D800..U+DFFF.
2598:rtos/uC-FS/Source/fs_unicode.c **** *
2599:rtos/uC-FS/Source/fs_unicode.c **** *                           (G) If the first byte is F0, second byte values 80..8F are disallowed t
2600:rtos/uC-FS/Source/fs_unicode.c **** *                               avoid non-shortest form representation of code points U+0FFF..U+FFF
2601:rtos/uC-FS/Source/fs_unicode.c **** *
2602:rtos/uC-FS/Source/fs_unicode.c **** *                           (H) If the first byte if F4, second byte values 90..BF are disallowed t
2603:rtos/uC-FS/Source/fs_unicode.c **** *                               prevent representation of invalid code points U+11000..U+13FFFF.
2604:rtos/uC-FS/Source/fs_unicode.c **** *
2605:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Unicode Standard 5.0, Section 3.9, definitions D99, D100 & D101, define thr
2606:rtos/uC-FS/Source/fs_unicode.c **** *                       schemes for determining the endianness of the wide-character (UTF-32) encod
2607:rtos/uC-FS/Source/fs_unicode.c **** *                       The first two, UTF-32BE & UTF-32LE, define big- & little-endian schemes :
2608:rtos/uC-FS/Source/fs_unicode.c **** *
2609:rtos/uC-FS/Source/fs_unicode.c **** *                           UTF-32BE
2610:rtos/uC-FS/Source/fs_unicode.c **** *                               Code Unit    :  00010302
2611:rtos/uC-FS/Source/fs_unicode.c **** *                               Byte Sequence:  00 01 03 02
2612:rtos/uC-FS/Source/fs_unicode.c **** *
2613:rtos/uC-FS/Source/fs_unicode.c **** *                           UTF-32LE
2614:rtos/uC-FS/Source/fs_unicode.c **** *                               Code Unit    :  00010302
2615:rtos/uC-FS/Source/fs_unicode.c **** *                               Byte Sequence:  02 03 01 00
2616:rtos/uC-FS/Source/fs_unicode.c **** *
2617:rtos/uC-FS/Source/fs_unicode.c **** *                       The last, D101, uses a byte order marker (BOM) to "distinguish between the 
2618:rtos/uC-FS/Source/fs_unicode.c **** *                       byte orders"; "[h]owever, when there is no BOM, and in the absence of a hig
2619:rtos/uC-FS/Source/fs_unicode.c **** *                       protocol, the byte order of the UTF-32 encoding scheme is big-endian".
2620:rtos/uC-FS/Source/fs_unicode.c **** *
2621:rtos/uC-FS/Source/fs_unicode.c **** *                           UTF-32
2622:rtos/uC-FS/Source/fs_unicode.c **** *                               Code Unit       :  00010302
2623:rtos/uC-FS/Source/fs_unicode.c **** *                               Byte Sequence(s):  00 01 03 02
2624:rtos/uC-FS/Source/fs_unicode.c **** *                                                  00 00 FE FF 00 01 03 02
2625:rtos/uC-FS/Source/fs_unicode.c **** *                                                  FF FE 00 00 02 03 01 00
2626:rtos/uC-FS/Source/fs_unicode.c **** *
2627:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) The byte-order of the wide-character stream is assumed to be big-endian
2628:rtos/uC-FS/Source/fs_unicode.c **** *                           On little-endian CPUs, the byte-order of the destination character MUST
2629:rtos/uC-FS/Source/fs_unicode.c **** *                           flipped prior to storing.
2630:rtos/uC-FS/Source/fs_unicode.c **** *
2631:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) !!!! Is this necessary?
2632:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2633:rtos/uC-FS/Source/fs_unicode.c **** */
2634:rtos/uC-FS/Source/fs_unicode.c **** 
2635:rtos/uC-FS/Source/fs_unicode.c **** CPU_SIZE_T  MB_CharToWC (CPU_WCHAR   *pc_dest,
2636:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_CHAR    *pc_src,
2637:rtos/uC-FS/Source/fs_unicode.c ****                          CPU_SIZE_T   n)
2638:rtos/uC-FS/Source/fs_unicode.c **** {
2639:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   c_dest;
2640:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  c_src_byte1;
2641:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  c_src_byte2;
2642:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  c_src_byte3;
2643:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
2644:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  c_src_byte4;
2645:rtos/uC-FS/Source/fs_unicode.c **** #endif
2646:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  n_char;
2647:rtos/uC-FS/Source/fs_unicode.c **** 
2648:rtos/uC-FS/Source/fs_unicode.c **** 
2649:rtos/uC-FS/Source/fs_unicode.c ****     if (pc_src == (CPU_CHAR *)0) {
2650:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
2651:rtos/uC-FS/Source/fs_unicode.c ****     }
2652:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 48


2653:rtos/uC-FS/Source/fs_unicode.c ****     if (n < 1u) {                                               /* If insufficient len ...         
2654:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-2);                                /* ... rtn err (see Note #1b3).    
2655:rtos/uC-FS/Source/fs_unicode.c ****     }
2656:rtos/uC-FS/Source/fs_unicode.c **** 
2657:rtos/uC-FS/Source/fs_unicode.c ****     c_dest = 0u;
2658:rtos/uC-FS/Source/fs_unicode.c **** 
2659:rtos/uC-FS/Source/fs_unicode.c ****     c_src_byte1 = (CPU_INT08U)*pc_src;                          /* Get 1st UTF-8 char.             
2660:rtos/uC-FS/Source/fs_unicode.c ****     pc_src++;
2661:rtos/uC-FS/Source/fs_unicode.c **** 
2662:rtos/uC-FS/Source/fs_unicode.c ****     if (c_src_byte1 > 0xF5u) {                                  /* Validate 1st byte (see Note #2b1
2663:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
2664:rtos/uC-FS/Source/fs_unicode.c ****     }
2665:rtos/uC-FS/Source/fs_unicode.c **** 
2666:rtos/uC-FS/Source/fs_unicode.c **** 
2667:rtos/uC-FS/Source/fs_unicode.c **** 
2668:rtos/uC-FS/Source/fs_unicode.c ****     if (c_src_byte1 <= 0x7Fu) {                                 /* ---------------- 1 -BYTE UTF-8 C
2669:rtos/uC-FS/Source/fs_unicode.c ****         c_dest = (CPU_WCHAR)c_src_byte1;
2670:rtos/uC-FS/Source/fs_unicode.c ****         n_char = (c_dest == (CPU_WCHAR)0) ? 0u : 1u;
2671:rtos/uC-FS/Source/fs_unicode.c **** 
2672:rtos/uC-FS/Source/fs_unicode.c **** 
2673:rtos/uC-FS/Source/fs_unicode.c **** 
2674:rtos/uC-FS/Source/fs_unicode.c ****     } else {                                                    /* ---------------- 2+-BYTE UTF-8 C
2675:rtos/uC-FS/Source/fs_unicode.c ****         if (c_src_byte1 < 0xC2u) {                              /* Validate 1st UTF-8 char (see Not
2676:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_SIZE_T)-1);
2677:rtos/uC-FS/Source/fs_unicode.c ****         }
2678:rtos/uC-FS/Source/fs_unicode.c **** 
2679:rtos/uC-FS/Source/fs_unicode.c ****         if (n < 2u) {                                           /* If insufficient len ...         
2680:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_SIZE_T)-2);                            /* ... rtn err (see Note #1b3).    
2681:rtos/uC-FS/Source/fs_unicode.c ****         }
2682:rtos/uC-FS/Source/fs_unicode.c **** 
2683:rtos/uC-FS/Source/fs_unicode.c ****         c_src_byte2 = (CPU_INT08U)*pc_src;                      /* Get 2nd UTF-8 char.             
2684:rtos/uC-FS/Source/fs_unicode.c ****         pc_src++;
2685:rtos/uC-FS/Source/fs_unicode.c **** 
2686:rtos/uC-FS/Source/fs_unicode.c ****         if ((c_src_byte2 < 0x80u) ||                            /* Validate 2nd byte (see Note #2b1
2687:rtos/uC-FS/Source/fs_unicode.c ****             (c_src_byte2 > 0xBFu)) {
2688:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_SIZE_T)-1);
2689:rtos/uC-FS/Source/fs_unicode.c ****         }
2690:rtos/uC-FS/Source/fs_unicode.c **** 
2691:rtos/uC-FS/Source/fs_unicode.c ****         if (c_src_byte1 <= 0xDFu) {                             /* 2-byte UTF-8 (U+0080..U+07FF)   
2692:rtos/uC-FS/Source/fs_unicode.c **** 
2693:rtos/uC-FS/Source/fs_unicode.c ****             c_src_byte1 &= 0x1Fu;                               /* ... form wide-character.        
2694:rtos/uC-FS/Source/fs_unicode.c ****             c_src_byte2 &= 0x3Fu;
2695:rtos/uC-FS/Source/fs_unicode.c ****             c_dest       = (CPU_WCHAR)((CPU_WCHAR)c_src_byte2 << 0) |
2696:rtos/uC-FS/Source/fs_unicode.c ****                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte1 << 6);
2697:rtos/uC-FS/Source/fs_unicode.c ****             n_char       = 2u;
2698:rtos/uC-FS/Source/fs_unicode.c **** 
2699:rtos/uC-FS/Source/fs_unicode.c **** 
2700:rtos/uC-FS/Source/fs_unicode.c **** 
2701:rtos/uC-FS/Source/fs_unicode.c ****         } else {                                                /* ---------------- 3+-BYTE UTF-8 C
2702:rtos/uC-FS/Source/fs_unicode.c ****             if (n < 3u) {                                       /* If insufficient len ...         
2703:rtos/uC-FS/Source/fs_unicode.c ****                 return ((CPU_SIZE_T)-2);                        /* ... rtn err (see Note #1b3).    
2704:rtos/uC-FS/Source/fs_unicode.c ****             }
2705:rtos/uC-FS/Source/fs_unicode.c **** 
2706:rtos/uC-FS/Source/fs_unicode.c ****             c_src_byte3 = (CPU_INT08U)*pc_src;                  /* Get 3rd UTF-8 char.             
2707:rtos/uC-FS/Source/fs_unicode.c ****             pc_src++;
2708:rtos/uC-FS/Source/fs_unicode.c **** 
2709:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 49


2710:rtos/uC-FS/Source/fs_unicode.c ****             if (c_src_byte1 <= 0xEFu) {                         /* 3-byte UTF-8 (U+0800..U+FFFF)   
2711:rtos/uC-FS/Source/fs_unicode.c **** 
2712:rtos/uC-FS/Source/fs_unicode.c ****                 if ((c_src_byte3 < 0x80u) ||                    /* ... validate 3rd byte (see Note 
2713:rtos/uC-FS/Source/fs_unicode.c ****                     (c_src_byte3 > 0xBFu)) {
2714:rtos/uC-FS/Source/fs_unicode.c ****                     return ((CPU_SIZE_T)-1);
2715:rtos/uC-FS/Source/fs_unicode.c ****                 }
2716:rtos/uC-FS/Source/fs_unicode.c **** 
2717:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* ... validate 2nd byte           
2718:rtos/uC-FS/Source/fs_unicode.c ****                 if (((c_src_byte1 == 0xE0u) && (c_src_byte2 < 0xA0u)) ||    /* See Note #2b1E.     
2719:rtos/uC-FS/Source/fs_unicode.c ****                     ((c_src_byte1 == 0xEDu) && (c_src_byte2 > 0x9Fu))) {    /* See Note #2b1F.     
2720:rtos/uC-FS/Source/fs_unicode.c ****                     return ((CPU_SIZE_T)-1);
2721:rtos/uC-FS/Source/fs_unicode.c ****                 }
2722:rtos/uC-FS/Source/fs_unicode.c **** 
2723:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte1 &= 0x0Fu;                           /* ... form wide-character.        
2724:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte2 &= 0x3Fu;
2725:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte3 &= 0x3Fu;
2726:rtos/uC-FS/Source/fs_unicode.c ****                 c_dest       = (CPU_WCHAR)((CPU_WCHAR)((CPU_WCHAR)c_src_byte3 <<  0) |
2727:rtos/uC-FS/Source/fs_unicode.c ****                                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte2 <<  6) |
2728:rtos/uC-FS/Source/fs_unicode.c ****                                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte1 << 12));
2729:rtos/uC-FS/Source/fs_unicode.c ****                 n_char       = 3u;
2730:rtos/uC-FS/Source/fs_unicode.c **** 
2731:rtos/uC-FS/Source/fs_unicode.c **** 
2732:rtos/uC-FS/Source/fs_unicode.c **** 
2733:rtos/uC-FS/Source/fs_unicode.c ****             } else {                                            /* ---------------- 4 -BYTE UTF-8 C
2734:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
2735:rtos/uC-FS/Source/fs_unicode.c ****                 if (n < 4) {                                    /* If insufficient len ...         
2736:rtos/uC-FS/Source/fs_unicode.c ****                     return ((CPU_SIZE_T)-2);                    /* ... rtn err (see Note #1b3).    
2737:rtos/uC-FS/Source/fs_unicode.c ****                 }
2738:rtos/uC-FS/Source/fs_unicode.c **** 
2739:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte4 = (CPU_INT08U)*pc_src;              /* Get 4th UTF-8 char.             
2740:rtos/uC-FS/Source/fs_unicode.c **** 
2741:rtos/uC-FS/Source/fs_unicode.c ****                 if ((c_src_byte4 < 0x80) ||                     /* Validate 4th byte (see Note #2b1
2742:rtos/uC-FS/Source/fs_unicode.c ****                     (c_src_byte4 > 0xBF)) {
2743:rtos/uC-FS/Source/fs_unicode.c ****                     return ((CPU_SIZE_T)-1);
2744:rtos/uC-FS/Source/fs_unicode.c ****                 }
2745:rtos/uC-FS/Source/fs_unicode.c **** 
2746:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Validate 2nd byte.              
2747:rtos/uC-FS/Source/fs_unicode.c ****                 if (c_src_byte1 == 0xF0) {                      /* See Note #2b1G.                 
2748:rtos/uC-FS/Source/fs_unicode.c ****                     if (c_src_byte2 < 0x90) {
2749:rtos/uC-FS/Source/fs_unicode.c ****                         return ((CPU_SIZE_T)-1);
2750:rtos/uC-FS/Source/fs_unicode.c ****                     }
2751:rtos/uC-FS/Source/fs_unicode.c ****                 } else if (c_src_byte1 == 0xF4) {               /* See Note #2b1H.                 
2752:rtos/uC-FS/Source/fs_unicode.c ****                     if (c_src_byte2 > 0x8F) {
2753:rtos/uC-FS/Source/fs_unicode.c ****                         return ((CPU_SIZE_T)-1)
2754:rtos/uC-FS/Source/fs_unicode.c ****                     }
2755:rtos/uC-FS/Source/fs_unicode.c ****                 }
2756:rtos/uC-FS/Source/fs_unicode.c **** 
2757:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte1 &= 0x07;                            /* Form wide-character.            
2758:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte2 &= 0x3F;
2759:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte3 &= 0x3F;
2760:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte4 &= 0x3F;
2761:rtos/uC-FS/Source/fs_unicode.c ****                 c_dest       = ((CPU_WCHAR)c_src_byte4 <<  0) |
2762:rtos/uC-FS/Source/fs_unicode.c ****                                ((CPU_WCHAR)c_src_byte3 <<  6) |
2763:rtos/uC-FS/Source/fs_unicode.c ****                                ((CPU_WCHAR)c_src_byte2 << 12) |
2764:rtos/uC-FS/Source/fs_unicode.c ****                                ((CPU_WCHAR)c_src_byte1 << 18);
2765:rtos/uC-FS/Source/fs_unicode.c ****                 n_char       = 4;
2766:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 50


2767:rtos/uC-FS/Source/fs_unicode.c **** 
2768:rtos/uC-FS/Source/fs_unicode.c **** #else                                                           /* If 32-bit chars not supported ..
2769:rtos/uC-FS/Source/fs_unicode.c ****                (void)pc_src;
2770:rtos/uC-FS/Source/fs_unicode.c ****                 return ((CPU_SIZE_T)-1);                        /* ... encoding err.               
2771:rtos/uC-FS/Source/fs_unicode.c **** #endif
2772:rtos/uC-FS/Source/fs_unicode.c ****             }
2773:rtos/uC-FS/Source/fs_unicode.c ****         }
2774:rtos/uC-FS/Source/fs_unicode.c ****     }
2775:rtos/uC-FS/Source/fs_unicode.c **** 
2776:rtos/uC-FS/Source/fs_unicode.c **** 
2777:rtos/uC-FS/Source/fs_unicode.c ****     if (pc_dest != (CPU_WCHAR *)0) {
2778:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = c_dest;
2779:rtos/uC-FS/Source/fs_unicode.c ****     }
2780:rtos/uC-FS/Source/fs_unicode.c **** 
2781:rtos/uC-FS/Source/fs_unicode.c ****     return (n_char);
2782:rtos/uC-FS/Source/fs_unicode.c **** }
2783:rtos/uC-FS/Source/fs_unicode.c **** 
2784:rtos/uC-FS/Source/fs_unicode.c **** 
2785:rtos/uC-FS/Source/fs_unicode.c **** /*
2786:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2787:rtos/uC-FS/Source/fs_unicode.c **** *                                            MB_CharLen()
2788:rtos/uC-FS/Source/fs_unicode.c **** *
2789:rtos/uC-FS/Source/fs_unicode.c **** * Description : Determine length of multi-byte character.
2790:rtos/uC-FS/Source/fs_unicode.c **** *
2791:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pc          Pointer to buffer containing the multi-byte character.
2792:rtos/uC-FS/Source/fs_unicode.c **** *
2793:rtos/uC-FS/Source/fs_unicode.c **** *               n           Number of bytes in 'pc' to inspect for multi-byte character.
2794:rtos/uC-FS/Source/fs_unicode.c **** *
2795:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Number of bytes in character in 'pc' (between 1 & n), if 'pc' contains a valid non-
2796:rtos/uC-FS/Source/fs_unicode.c **** *                                                                         character.
2797:rtos/uC-FS/Source/fs_unicode.c **** *              (CPU_SIZE_T) 0,                                        if 'pc' contains a           
2798:rtos/uC-FS/Source/fs_unicode.c **** *                                                                         character.
2799:rtos/uC-FS/Source/fs_unicode.c **** *              (CPU_SIZE_T)-2,                                        if the first 'n' bytes of 'pc
2800:rtos/uC-FS/Source/fs_unicode.c **** *                                                                         contain an incomplete but
2801:rtos/uC-FS/Source/fs_unicode.c **** *                                                                         valid character.
2802:rtos/uC-FS/Source/fs_unicode.c **** *              (CPU_SIZE_T)-1,                                        otherwise.
2803:rtos/uC-FS/Source/fs_unicode.c **** *
2804:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) (a) IEEE Std 1003.1, 2004 Edition, Section 'mbrlen() : DESCRIPTION' states that
2805:rtos/uC-FS/Source/fs_unicode.c **** *                      "mblen() shall determine the number of bytes constituting the character poin
2806:rtos/uC-FS/Source/fs_unicode.c **** *                       by s".
2807:rtos/uC-FS/Source/fs_unicode.c **** *
2808:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'mbrlen() : RETURN VALUE' states tha
2809:rtos/uC-FS/Source/fs_unicode.c **** *                      "mbrlen() shall return the first of the following that applies :"
2810:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) "0                          If the next n or fewer bytes complete the c
2811:rtos/uC-FS/Source/fs_unicode.c **** *                                                       that corresponds to the null wide character
2812:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) "between 1 and n inclusive  If the next n or fewer bytes complete a val
2813:rtos/uC-FS/Source/fs_unicode.c **** *                                                       character (which is the value stored); the 
2814:rtos/uC-FS/Source/fs_unicode.c **** *                                                       returned shall be the number of bytes that 
2815:rtos/uC-FS/Source/fs_unicode.c **** *                                                       the character"
2816:rtos/uC-FS/Source/fs_unicode.c **** *                       (3) "(size_t)-2                 If the next n byte contribute to an incompl
2817:rtos/uC-FS/Source/fs_unicode.c **** *                                                       but potentially valid character"
2818:rtos/uC-FS/Source/fs_unicode.c **** *                       (4) "(size_t)-1                 If an encoding error occurs"
2819:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2820:rtos/uC-FS/Source/fs_unicode.c **** */
2821:rtos/uC-FS/Source/fs_unicode.c **** 
2822:rtos/uC-FS/Source/fs_unicode.c **** CPU_SIZE_T  MB_CharLen (CPU_CHAR    *pc,
2823:rtos/uC-FS/Source/fs_unicode.c ****                         CPU_SIZE_T   n)
ARM GAS  /tmp/cc4JYsWh.s 			page 51


2824:rtos/uC-FS/Source/fs_unicode.c **** {
2825:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  c_len;
2826:rtos/uC-FS/Source/fs_unicode.c **** 
2827:rtos/uC-FS/Source/fs_unicode.c **** 
2828:rtos/uC-FS/Source/fs_unicode.c ****     if (pc == (CPU_CHAR *)0) {
2829:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)0);
2830:rtos/uC-FS/Source/fs_unicode.c ****     }
2831:rtos/uC-FS/Source/fs_unicode.c **** 
2832:rtos/uC-FS/Source/fs_unicode.c ****     c_len = MB_CharToWC((CPU_WCHAR *)0,
2833:rtos/uC-FS/Source/fs_unicode.c ****                                      pc,
2834:rtos/uC-FS/Source/fs_unicode.c ****                                      n);
2835:rtos/uC-FS/Source/fs_unicode.c **** 
2836:rtos/uC-FS/Source/fs_unicode.c ****     return (c_len);
2837:rtos/uC-FS/Source/fs_unicode.c **** }
2838:rtos/uC-FS/Source/fs_unicode.c **** 
2839:rtos/uC-FS/Source/fs_unicode.c **** 
2840:rtos/uC-FS/Source/fs_unicode.c **** /*
2841:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2842:rtos/uC-FS/Source/fs_unicode.c **** *                                            WC_StrToMB()
2843:rtos/uC-FS/Source/fs_unicode.c **** *
2844:rtos/uC-FS/Source/fs_unicode.c **** * Description : Convert wide-character string to a multi-byte character string, up to a maximum num
2845:rtos/uC-FS/Source/fs_unicode.c **** *               bytes.
2846:rtos/uC-FS/Source/fs_unicode.c **** *
2847:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pdest       Pointer to buffer that will receive the multi-byte character string.
2848:rtos/uC-FS/Source/fs_unicode.c **** *
2849:rtos/uC-FS/Source/fs_unicode.c **** *               ppsrc       Indirect pointer to wide-character string to convert, that will receive
2850:rtos/uC-FS/Source/fs_unicode.c **** *
2851:rtos/uC-FS/Source/fs_unicode.c **** *                               Pointer to NULL, if terminating NULL wide character reached.
2852:rtos/uC-FS/Source/fs_unicode.c **** *                               Pointer to address past the last wide character converted, otherwis
2853:rtos/uC-FS/Source/fs_unicode.c **** *
2854:rtos/uC-FS/Source/fs_unicode.c **** *               len_max     Maximum number of bytes to store in 'pdest'.
2855:rtos/uC-FS/Source/fs_unicode.c **** *
2856:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Number of bytes stored in 'pdest', if no encoding error occurs.
2857:rtos/uC-FS/Source/fs_unicode.c **** *
2858:rtos/uC-FS/Source/fs_unicode.c **** *               (CPU_SIZE_T)-1,                    otherwise.
2859:rtos/uC-FS/Source/fs_unicode.c **** *
2860:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) (a) IEEE Std 1003.1, 2004 Edition, Section 'wcsrtombs() : DESCRIPTION' states t
2861:rtos/uC-FS/Source/fs_unicode.c **** *
2862:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) "The wcsrtombs() function shall convert a sequence of wide characters f
2863:rtos/uC-FS/Source/fs_unicode.c **** *                            array indirectly pointed to by src into a sequence of corresponding ch
2864:rtos/uC-FS/Source/fs_unicode.c **** *
2865:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) "Conversion continues up to and including a terminating null wide chara
2866:rtos/uC-FS/Source/fs_unicode.c **** *                            which shall also be stored conversion shall stop earlier in the follow
2867:rtos/uC-FS/Source/fs_unicode.c **** *                            cases:"
2868:rtos/uC-FS/Source/fs_unicode.c **** *
2869:rtos/uC-FS/Source/fs_unicode.c **** *                           (A) "When a code is reached that does not correspond to a valid charact
2870:rtos/uC-FS/Source/fs_unicode.c **** *
2871:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) "When the next character would exceed the limit of len total bytes 
2872:rtos/uC-FS/Source/fs_unicode.c **** *                                stored in the array pointed to by dst"
2873:rtos/uC-FS/Source/fs_unicode.c **** *
2874:rtos/uC-FS/Source/fs_unicode.c **** *                       (3) "If dst is not a null pointer, the pointer object pointed to by src sha
2875:rtos/uC-FS/Source/fs_unicode.c **** *                            assigned either a null pointer (if conversion stopped due to reaching 
2876:rtos/uC-FS/Source/fs_unicode.c **** *                            terminating null wide character) or the address just past the last wid
2877:rtos/uC-FS/Source/fs_unicode.c **** *                            character converted (if any)"
2878:rtos/uC-FS/Source/fs_unicode.c **** *
2879:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'wcsrtombs() : RETURN VALUE' states 
2880:rtos/uC-FS/Source/fs_unicode.c **** *                      "[if an encoding error occurs], the wcsrtombs() function shall ... return (s
ARM GAS  /tmp/cc4JYsWh.s 			page 52


2881:rtos/uC-FS/Source/fs_unicode.c **** *                       ... [o]therwise, it shall return the number of bytes in the resulting chara
2882:rtos/uC-FS/Source/fs_unicode.c **** *                       sequence, not including the terminating null (if any)".
2883:rtos/uC-FS/Source/fs_unicode.c **** *
2884:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String conversion terminates when :
2885:rtos/uC-FS/Source/fs_unicode.c **** *
2886:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination/Indirect source string/Source string pointer(s) are passed NULL
2887:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string conversion performed; (CPU_SIZE_T)-1 returned.
2888:rtos/uC-FS/Source/fs_unicode.c **** *
2889:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Invalid character found in source string.
2890:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Source string converted up to but NOT beyond or including the invalid c
2891:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Pointer to address past the last wide character converted stored in ind
2892:rtos/uC-FS/Source/fs_unicode.c **** *                           source string pointer; (CPU_SIZE_T)-1 returned.
2893:rtos/uC-FS/Source/fs_unicode.c **** *
2894:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Source string's terminating NULL wide character found.
2895:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Entire source string converted into destination string buffer.
2896:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Pointer to NULL stored in indirect source string pointer.
2897:rtos/uC-FS/Source/fs_unicode.c **** *
2898:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) 'len_max' number of bytes stored in 'p_dest'.
2899:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
2900:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Pointer to address past the last wide character converted stored in ind
2901:rtos/uC-FS/Source/fs_unicode.c **** *                           source string pointer.
2902:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2903:rtos/uC-FS/Source/fs_unicode.c **** */
2904:rtos/uC-FS/Source/fs_unicode.c **** 
2905:rtos/uC-FS/Source/fs_unicode.c **** CPU_SIZE_T  WC_StrToMB (CPU_CHAR     *pdest,
2906:rtos/uC-FS/Source/fs_unicode.c ****                         CPU_WCHAR   **ppsrc,
2907:rtos/uC-FS/Source/fs_unicode.c ****                         CPU_SIZE_T    len_max)
2908:rtos/uC-FS/Source/fs_unicode.c **** {
2909:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *psrc;
2910:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_rem;
2911:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_char;
2912:rtos/uC-FS/Source/fs_unicode.c **** 
2913:rtos/uC-FS/Source/fs_unicode.c **** 
2914:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Rtn NULL if str ptr(s) NULL     
2915:rtos/uC-FS/Source/fs_unicode.c ****     if (ppsrc == (CPU_WCHAR **)0) {
2916:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
2917:rtos/uC-FS/Source/fs_unicode.c ****     }
2918:rtos/uC-FS/Source/fs_unicode.c **** 
2919:rtos/uC-FS/Source/fs_unicode.c ****     psrc = *ppsrc;
2920:rtos/uC-FS/Source/fs_unicode.c ****     if (psrc == (CPU_WCHAR *)0) {
2921:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
2922:rtos/uC-FS/Source/fs_unicode.c ****     }
2923:rtos/uC-FS/Source/fs_unicode.c **** 
2924:rtos/uC-FS/Source/fs_unicode.c ****     if (pdest == (CPU_CHAR *)0) {
2925:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
2926:rtos/uC-FS/Source/fs_unicode.c ****     }
2927:rtos/uC-FS/Source/fs_unicode.c **** 
2928:rtos/uC-FS/Source/fs_unicode.c ****     if (len_max < MB_MAX_LEN) {                                 /* Rtn NULL if copy len < max char 
2929:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_SIZE_T)0);
2930:rtos/uC-FS/Source/fs_unicode.c ****     }
2931:rtos/uC-FS/Source/fs_unicode.c **** 
2932:rtos/uC-FS/Source/fs_unicode.c **** 
2933:rtos/uC-FS/Source/fs_unicode.c ****     len_rem  = len_max;
2934:rtos/uC-FS/Source/fs_unicode.c ****     len_char = WC_CharToMB( pdest,
2935:rtos/uC-FS/Source/fs_unicode.c ****                            *psrc);
2936:rtos/uC-FS/Source/fs_unicode.c **** 
2937:rtos/uC-FS/Source/fs_unicode.c ****     while ((len_char <= MB_MAX_LEN) &&                          /* Convert str until conversion err
ARM GAS  /tmp/cc4JYsWh.s 			page 53


2938:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL wide char found     
2939:rtos/uC-FS/Source/fs_unicode.c ****            (len_rem  >= MB_MAX_LEN)) {                          /* ... or max nbr bytes stored.    
2940:rtos/uC-FS/Source/fs_unicode.c ****         len_rem -= len_char;
2941:rtos/uC-FS/Source/fs_unicode.c ****         pdest   += len_char;
2942:rtos/uC-FS/Source/fs_unicode.c ****         psrc++;
2943:rtos/uC-FS/Source/fs_unicode.c **** 
2944:rtos/uC-FS/Source/fs_unicode.c ****         if (len_rem >= MB_MAX_LEN) {
2945:rtos/uC-FS/Source/fs_unicode.c ****             len_char = WC_CharToMB( pdest,
2946:rtos/uC-FS/Source/fs_unicode.c ****                                    *psrc);
2947:rtos/uC-FS/Source/fs_unicode.c ****         }
2948:rtos/uC-FS/Source/fs_unicode.c ****     }
2949:rtos/uC-FS/Source/fs_unicode.c **** 
2950:rtos/uC-FS/Source/fs_unicode.c **** 
2951:rtos/uC-FS/Source/fs_unicode.c ****     if (len_char == 0u) {                                       /* If NULL wide char found ...     
2952:rtos/uC-FS/Source/fs_unicode.c ****        *pdest = (CPU_CHAR   )'\0';                              /* ... append NULL char    ...     
2953:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = (CPU_WCHAR *)0;                                 /* ... rtn NULL ptr in indirect src
2954:rtos/uC-FS/Source/fs_unicode.c ****         return (len_max - len_rem);
2955:rtos/uC-FS/Source/fs_unicode.c **** 
2956:rtos/uC-FS/Source/fs_unicode.c ****     } else if (len_char <= MB_MAX_LEN) {                        /* If max nbr bytes stored ...     
2957:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = psrc;                                           /* ... rtn ptr past last char conve
2958:rtos/uC-FS/Source/fs_unicode.c ****         return (len_max - len_rem);
2959:rtos/uC-FS/Source/fs_unicode.c **** 
2960:rtos/uC-FS/Source/fs_unicode.c ****     } else {                                                    /* If conversion err ...           
2961:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = psrc;                                           /* ... rtn ptr past last char conve
2962:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
2963:rtos/uC-FS/Source/fs_unicode.c ****     }
2964:rtos/uC-FS/Source/fs_unicode.c **** }
2965:rtos/uC-FS/Source/fs_unicode.c **** 
2966:rtos/uC-FS/Source/fs_unicode.c **** 
2967:rtos/uC-FS/Source/fs_unicode.c **** /*
2968:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
2969:rtos/uC-FS/Source/fs_unicode.c **** *                                            MB_StrToWC()
2970:rtos/uC-FS/Source/fs_unicode.c **** *
2971:rtos/uC-FS/Source/fs_unicode.c **** * Description : Convert multi-byte character string to a wide-character string, up to a maximum num
2972:rtos/uC-FS/Source/fs_unicode.c **** *               characters.
2973:rtos/uC-FS/Source/fs_unicode.c **** *
2974:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : pdest       Pointer to buffer that will receive the wide-character string.
2975:rtos/uC-FS/Source/fs_unicode.c **** *
2976:rtos/uC-FS/Source/fs_unicode.c **** *               ppsrc       Indirect pointer to multi-byte character string to convert, that will r
2977:rtos/uC-FS/Source/fs_unicode.c **** *
2978:rtos/uC-FS/Source/fs_unicode.c **** *                               Pointer to NULL, if terminating NULL character reached.
2979:rtos/uC-FS/Source/fs_unicode.c **** *                               Pointer to address past the last character converted, otherwise.
2980:rtos/uC-FS/Source/fs_unicode.c **** *
2981:rtos/uC-FS/Source/fs_unicode.c **** *               len_max     Maximum number of characters to store in 'pdest'.
2982:rtos/uC-FS/Source/fs_unicode.c **** *
2983:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Number of characters stored in 'pdest', if no encoding error occurs.
2984:rtos/uC-FS/Source/fs_unicode.c **** *
2985:rtos/uC-FS/Source/fs_unicode.c **** *               (CPU_SIZE_T)-1,                         otherwise.
2986:rtos/uC-FS/Source/fs_unicode.c **** *
2987:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) (a) IEEE Std 1003.1, 2004 Edition, Section 'mbsrtowcs() : DESCRIPTION' states t
2988:rtos/uC-FS/Source/fs_unicode.c **** *
2989:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) "The mbsrtowcs() function shall convert a sequence of characters ... fr
2990:rtos/uC-FS/Source/fs_unicode.c **** *                            array indirectly pointed to by src into a sequence of corresponding wi
2991:rtos/uC-FS/Source/fs_unicode.c **** *                            characters"
2992:rtos/uC-FS/Source/fs_unicode.c **** *
2993:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) "Conversion continues up to and including a terminating null character,
2994:rtos/uC-FS/Source/fs_unicode.c **** *                            shall also be stored.  Conversion shall stop earlier in either of the
ARM GAS  /tmp/cc4JYsWh.s 			page 54


2995:rtos/uC-FS/Source/fs_unicode.c **** *                            following cases:"
2996:rtos/uC-FS/Source/fs_unicode.c **** *
2997:rtos/uC-FS/Source/fs_unicode.c **** *                           (A) "A sequence of byte is encountered that does not form a valid chara
2998:rtos/uC-FS/Source/fs_unicode.c **** *
2999:rtos/uC-FS/Source/fs_unicode.c **** *                           (B) "Len codes have been stored into the array pointed to by dst (and d
3000:rtos/uC-FS/Source/fs_unicode.c **** *                                not a null pointer"
3001:rtos/uC-FS/Source/fs_unicode.c **** *
3002:rtos/uC-FS/Source/fs_unicode.c **** *                       (3) "If dst is not a null pointer, the pointer object pointed to by src sha
3003:rtos/uC-FS/Source/fs_unicode.c **** *                            assigned either a null pointer (if conversion stopped due to reaching 
3004:rtos/uC-FS/Source/fs_unicode.c **** *                            terminating null character) or the address just past the last characte
3005:rtos/uC-FS/Source/fs_unicode.c **** *                            converted (if any)"
3006:rtos/uC-FS/Source/fs_unicode.c **** *
3007:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'wcsrtombs() : RETURN VALUE' states 
3008:rtos/uC-FS/Source/fs_unicode.c **** *                      "[if an encoding error occurs], the wcsrtombs() function shall ... return (s
3009:rtos/uC-FS/Source/fs_unicode.c **** *                       ... [o]therwise, it shall return the number of bytes in the resulting chara
3010:rtos/uC-FS/Source/fs_unicode.c **** *                       sequence, not including the terminating null (if any)".
3011:rtos/uC-FS/Source/fs_unicode.c **** *
3012:rtos/uC-FS/Source/fs_unicode.c **** *               (2) String conversion terminates when :
3013:rtos/uC-FS/Source/fs_unicode.c **** *
3014:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Destination/Indirect source string/Source string pointer(s) are passed NULL
3015:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) No string conversion performed; (CPU_SIZE_T)-1 returned.
3016:rtos/uC-FS/Source/fs_unicode.c **** *
3017:rtos/uC-FS/Source/fs_unicode.c **** *                   (b) Invalid character found in source string.
3018:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Source string converted up to but NOT beyond or including the invalid c
3019:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Pointer to address past the last character converted stored in indirect
3020:rtos/uC-FS/Source/fs_unicode.c **** *                           string pointer; (CPU_SIZE_T)-1 returned.
3021:rtos/uC-FS/Source/fs_unicode.c **** *
3022:rtos/uC-FS/Source/fs_unicode.c **** *                   (c) Source string's terminating NULL character found.
3023:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) Entire source string converted into destination string buffer.
3024:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Pointer to NULL stored in indirect source string pointer.
3025:rtos/uC-FS/Source/fs_unicode.c **** *
3026:rtos/uC-FS/Source/fs_unicode.c **** *                   (d) 'len_max' number of bytes stored in 'p_dest'.
3027:rtos/uC-FS/Source/fs_unicode.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
3028:rtos/uC-FS/Source/fs_unicode.c **** *                       (2) Pointer to address past the last wide character converted stored in ind
3029:rtos/uC-FS/Source/fs_unicode.c **** *                           source string pointer.
3030:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
3031:rtos/uC-FS/Source/fs_unicode.c **** */
3032:rtos/uC-FS/Source/fs_unicode.c **** 
3033:rtos/uC-FS/Source/fs_unicode.c **** CPU_SIZE_T  MB_StrToWC (CPU_WCHAR    *pdest,
3034:rtos/uC-FS/Source/fs_unicode.c ****                         CPU_CHAR    **ppsrc,
3035:rtos/uC-FS/Source/fs_unicode.c ****                         CPU_SIZE_T    len_max)
3036:rtos/uC-FS/Source/fs_unicode.c **** {
3037:rtos/uC-FS/Source/fs_unicode.c ****     CPU_CHAR    *psrc;
3038:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_copy;
3039:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_char;
3040:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    src_char;
3041:rtos/uC-FS/Source/fs_unicode.c **** 
3042:rtos/uC-FS/Source/fs_unicode.c **** 
3043:rtos/uC-FS/Source/fs_unicode.c ****                                                                 /* Rtn NULL if str ptr(s) NULL     
3044:rtos/uC-FS/Source/fs_unicode.c ****     if (ppsrc == (CPU_CHAR **)0) {
3045:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
3046:rtos/uC-FS/Source/fs_unicode.c ****     }
3047:rtos/uC-FS/Source/fs_unicode.c **** 
3048:rtos/uC-FS/Source/fs_unicode.c ****     psrc = *ppsrc;
3049:rtos/uC-FS/Source/fs_unicode.c ****     if (psrc == (CPU_CHAR *)0) {
3050:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
3051:rtos/uC-FS/Source/fs_unicode.c ****     }
ARM GAS  /tmp/cc4JYsWh.s 			page 55


3052:rtos/uC-FS/Source/fs_unicode.c **** 
3053:rtos/uC-FS/Source/fs_unicode.c ****     if (pdest == (CPU_WCHAR *)0) {
3054:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
3055:rtos/uC-FS/Source/fs_unicode.c ****     }
3056:rtos/uC-FS/Source/fs_unicode.c **** 
3057:rtos/uC-FS/Source/fs_unicode.c ****     if (len_max == 0u) {                                        /* Rtn NULL if copy len equals zero
3058:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_SIZE_T)0);
3059:rtos/uC-FS/Source/fs_unicode.c ****     }
3060:rtos/uC-FS/Source/fs_unicode.c **** 
3061:rtos/uC-FS/Source/fs_unicode.c **** 
3062:rtos/uC-FS/Source/fs_unicode.c ****     len_char = MB_CharToWC(&src_char,
3063:rtos/uC-FS/Source/fs_unicode.c ****                             psrc,
3064:rtos/uC-FS/Source/fs_unicode.c ****                             MB_MAX_LEN);
3065:rtos/uC-FS/Source/fs_unicode.c ****     len_copy = 0u;
3066:rtos/uC-FS/Source/fs_unicode.c **** 
3067:rtos/uC-FS/Source/fs_unicode.c ****     while ((len_char <= MB_MAX_LEN) &&                          /* Convert str until conversion err
3068:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL char found          
3069:rtos/uC-FS/Source/fs_unicode.c ****            (len_copy <  len_max)) {                             /* ... or max nbr chars stored.    
3070:rtos/uC-FS/Source/fs_unicode.c ****        *pdest    = src_char;
3071:rtos/uC-FS/Source/fs_unicode.c ****         psrc    += len_char;
3072:rtos/uC-FS/Source/fs_unicode.c ****         pdest++;
3073:rtos/uC-FS/Source/fs_unicode.c ****         len_copy++;
3074:rtos/uC-FS/Source/fs_unicode.c **** 
3075:rtos/uC-FS/Source/fs_unicode.c ****         len_char = MB_CharToWC(&src_char,
3076:rtos/uC-FS/Source/fs_unicode.c ****                                 psrc,
3077:rtos/uC-FS/Source/fs_unicode.c ****                                 MB_MAX_LEN);
3078:rtos/uC-FS/Source/fs_unicode.c ****     }
3079:rtos/uC-FS/Source/fs_unicode.c **** 
3080:rtos/uC-FS/Source/fs_unicode.c **** 
3081:rtos/uC-FS/Source/fs_unicode.c ****     if (len_char == 0u) {                                       /* If NULL char found        ...   
3082:rtos/uC-FS/Source/fs_unicode.c ****        *pdest = (CPU_WCHAR  )0;                                 /* ... append NULL wide char ...   
3083:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = (CPU_CHAR  *)0;                                 /* ... rtn NULL ptr in indirect src
3084:rtos/uC-FS/Source/fs_unicode.c ****         return (len_copy);
3085:rtos/uC-FS/Source/fs_unicode.c **** 
3086:rtos/uC-FS/Source/fs_unicode.c ****     } else if (len_char <= MB_MAX_LEN) {                        /* If max nbr bytes stored ...     
3087:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = psrc;                                           /* ... rtn ptr past last char conve
3088:rtos/uC-FS/Source/fs_unicode.c ****         return (len_copy);
3089:rtos/uC-FS/Source/fs_unicode.c **** 
3090:rtos/uC-FS/Source/fs_unicode.c ****     } else {                                                    /* If conversion err ...           
3091:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = psrc;                                           /* ... rtn ptr past last char conve
3092:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
3093:rtos/uC-FS/Source/fs_unicode.c ****     }
3094:rtos/uC-FS/Source/fs_unicode.c **** }
3095:rtos/uC-FS/Source/fs_unicode.c **** 
3096:rtos/uC-FS/Source/fs_unicode.c **** 
3097:rtos/uC-FS/Source/fs_unicode.c **** /*
3098:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
3099:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
3100:rtos/uC-FS/Source/fs_unicode.c **** *                                           LOCAL FUNCTIONS
3101:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
3102:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
3103:rtos/uC-FS/Source/fs_unicode.c **** */
3104:rtos/uC-FS/Source/fs_unicode.c **** 
3105:rtos/uC-FS/Source/fs_unicode.c **** /*
3106:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
3107:rtos/uC-FS/Source/fs_unicode.c **** *                                            WC_SrchTbl()
3108:rtos/uC-FS/Source/fs_unicode.c **** *
ARM GAS  /tmp/cc4JYsWh.s 			page 56


3109:rtos/uC-FS/Source/fs_unicode.c **** * Description : Search character-mapping table.
3110:rtos/uC-FS/Source/fs_unicode.c **** *
3111:rtos/uC-FS/Source/fs_unicode.c **** * Argument(s) : ptbl        Pointer to table to search.
3112:rtos/uC-FS/Source/fs_unicode.c **** *
3113:rtos/uC-FS/Source/fs_unicode.c **** *               tbl_len     Length of table.
3114:rtos/uC-FS/Source/fs_unicode.c **** *
3115:rtos/uC-FS/Source/fs_unicode.c **** *               c_key       Key character to search for.
3116:rtos/uC-FS/Source/fs_unicode.c **** *
3117:rtos/uC-FS/Source/fs_unicode.c **** * Return(s)   : Pointer to character-mapping table entry, if range found.
3118:rtos/uC-FS/Source/fs_unicode.c **** *               Pointer to NULL,                          otherwise.
3119:rtos/uC-FS/Source/fs_unicode.c **** *
3120:rtos/uC-FS/Source/fs_unicode.c **** * Note(s)     : (1) Each character SHOULD fit into a range in the table; in case the table or algor
3121:rtos/uC-FS/Source/fs_unicode.c **** *                   is broken, the failure to find the range is handled.
3122:rtos/uC-FS/Source/fs_unicode.c **** *
3123:rtos/uC-FS/Source/fs_unicode.c **** *                   (a) Table entries are sized for 16-bit characters only.  Characters belonging t
3124:rtos/uC-FS/Source/fs_unicode.c **** *                       upper code point space must be handled separately.
3125:rtos/uC-FS/Source/fs_unicode.c **** *
3126:rtos/uC-FS/Source/fs_unicode.c **** *               (2) To accelerate character mapping operations, a binary search is used to find the
3127:rtos/uC-FS/Source/fs_unicode.c **** *                   character range.  The tables have approximately 250-300 ranges, so the loop sho
3128:rtos/uC-FS/Source/fs_unicode.c **** *                   execute at most 8 or 9 times.
3129:rtos/uC-FS/Source/fs_unicode.c **** ***************************************************************************************************
3130:rtos/uC-FS/Source/fs_unicode.c **** */
3131:rtos/uC-FS/Source/fs_unicode.c **** 
3132:rtos/uC-FS/Source/fs_unicode.c **** static  const  WC_SRCH_TBL_ENTRY  *WC_SrchTbl (const  WC_SRCH_TBL_ENTRY  *ptbl,
3133:rtos/uC-FS/Source/fs_unicode.c ****                                                CPU_SIZE_T                 tbl_len,
3134:rtos/uC-FS/Source/fs_unicode.c ****                                                CPU_WCHAR                  c_key)
3135:rtos/uC-FS/Source/fs_unicode.c **** {
  29              		.loc 1 3135 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 3135 1 is_stmt 0 view .LVU1
  35 0000 F0B4     		push	{r4, r5, r6, r7}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -16
  39              		.cfi_offset 5, -12
  40              		.cfi_offset 6, -8
  41              		.cfi_offset 7, -4
3136:rtos/uC-FS/Source/fs_unicode.c ****            CPU_SIZE_T          ix_lo;
  42              		.loc 1 3136 12 is_stmt 1 view .LVU2
3137:rtos/uC-FS/Source/fs_unicode.c ****            CPU_SIZE_T          ix_mid;
  43              		.loc 1 3137 12 view .LVU3
3138:rtos/uC-FS/Source/fs_unicode.c ****            CPU_SIZE_T          ix_hi;
  44              		.loc 1 3138 12 view .LVU4
3139:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           c_start;
  45              		.loc 1 3139 12 view .LVU5
3140:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           c_end;
  46              		.loc 1 3140 12 view .LVU6
3141:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         found;
  47              		.loc 1 3141 12 view .LVU7
3142:rtos/uC-FS/Source/fs_unicode.c ****     const  WC_SRCH_TBL_ENTRY  *ptbl_entry;
  48              		.loc 1 3142 5 view .LVU8
3143:rtos/uC-FS/Source/fs_unicode.c **** 
3144:rtos/uC-FS/Source/fs_unicode.c **** 
3145:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
ARM GAS  /tmp/cc4JYsWh.s 			page 57


3146:rtos/uC-FS/Source/fs_unicode.c ****     if (c_key >= DEF_INT_16U_MAX_VAL) {                     /* See Note #1a.                       
3147:rtos/uC-FS/Source/fs_unicode.c ****         return ((WC_SRCH_TBL_ENTRY *)0);
3148:rtos/uC-FS/Source/fs_unicode.c ****     }
3149:rtos/uC-FS/Source/fs_unicode.c **** #endif
3150:rtos/uC-FS/Source/fs_unicode.c **** 
3151:rtos/uC-FS/Source/fs_unicode.c ****     found = DEF_NO;
  49              		.loc 1 3151 5 view .LVU9
  50              	.LVL1:
3152:rtos/uC-FS/Source/fs_unicode.c ****     ix_lo = 0u;
  51              		.loc 1 3152 5 view .LVU10
3153:rtos/uC-FS/Source/fs_unicode.c ****     ix_hi = tbl_len - 2u;
  52              		.loc 1 3153 5 view .LVU11
  53              		.loc 1 3153 11 is_stmt 0 view .LVU12
  54 0002 0239     		subs	r1, r1, #2
  55              	.LVL2:
3154:rtos/uC-FS/Source/fs_unicode.c **** 
3155:rtos/uC-FS/Source/fs_unicode.c ****     while ((ix_lo <= ix_hi) &&                              /* While lo srch ix & hi srch ix valid 
  56              		.loc 1 3155 5 is_stmt 1 view .LVU13
3151:rtos/uC-FS/Source/fs_unicode.c ****     ix_lo = 0u;
  57              		.loc 1 3151 11 is_stmt 0 view .LVU14
  58 0004 0027     		movs	r7, #0
3152:rtos/uC-FS/Source/fs_unicode.c ****     ix_hi = tbl_len - 2u;
  59              		.loc 1 3152 11 view .LVU15
  60 0006 3C46     		mov	r4, r7
  61              		.loc 1 3155 11 view .LVU16
  62 0008 02E0     		b	.L2
  63              	.LVL3:
  64              	.L3:
3156:rtos/uC-FS/Source/fs_unicode.c ****            (found == DEF_NO)) {                             /* ... & range not found               
3157:rtos/uC-FS/Source/fs_unicode.c ****                                                             /* ... bisect range tbl (see Note #2). 
3158:rtos/uC-FS/Source/fs_unicode.c **** 
3159:rtos/uC-FS/Source/fs_unicode.c ****         ix_mid  = (ix_lo + ix_hi) / 2u;
3160:rtos/uC-FS/Source/fs_unicode.c ****         c_start =  ptbl[ix_mid].Char;
3161:rtos/uC-FS/Source/fs_unicode.c ****         c_end   =  ptbl[ix_mid + 1u].Char;
3162:rtos/uC-FS/Source/fs_unicode.c **** 
3163:rtos/uC-FS/Source/fs_unicode.c ****         if (c_key < c_start) {                              /* If char in lower half of range tbl .
3164:rtos/uC-FS/Source/fs_unicode.c ****             ix_hi = ix_mid - 1u;                            /* ... make midpoint hi val.           
3165:rtos/uC-FS/Source/fs_unicode.c **** 
3166:rtos/uC-FS/Source/fs_unicode.c ****         } else if (c_key >= c_end) {                        /* If char in upper half of range tbl .
  65              		.loc 1 3166 16 is_stmt 1 view .LVU17
  66              		.loc 1 3166 19 is_stmt 0 view .LVU18
  67 000a 9445     		cmp	ip, r2
  68 000c 0ED9     		bls	.L8
3167:rtos/uC-FS/Source/fs_unicode.c ****             ix_lo = ix_mid + 1u;                            /* ... make midpoint lo val.           
3168:rtos/uC-FS/Source/fs_unicode.c **** 
3169:rtos/uC-FS/Source/fs_unicode.c ****         } else {                                            /* Else range found.                   
3170:rtos/uC-FS/Source/fs_unicode.c ****             found = DEF_YES;
  69              		.loc 1 3170 19 view .LVU19
  70 000e 0127     		movs	r7, #1
  71              	.LVL4:
  72              	.L2:
3155:rtos/uC-FS/Source/fs_unicode.c ****            (found == DEF_NO)) {                             /* ... & range not found               
  73              		.loc 1 3155 11 is_stmt 1 view .LVU20
  74 0010 8C42     		cmp	r4, r1
  75 0012 0DD8     		bhi	.L5
3155:rtos/uC-FS/Source/fs_unicode.c ****            (found == DEF_NO)) {                             /* ... & range not found               
  76              		.loc 1 3155 29 is_stmt 0 discriminator 1 view .LVU21
ARM GAS  /tmp/cc4JYsWh.s 			page 58


  77 0014 67B9     		cbnz	r7, .L5
3159:rtos/uC-FS/Source/fs_unicode.c ****         c_start =  ptbl[ix_mid].Char;
  78              		.loc 1 3159 9 is_stmt 1 view .LVU22
3159:rtos/uC-FS/Source/fs_unicode.c ****         c_start =  ptbl[ix_mid].Char;
  79              		.loc 1 3159 26 is_stmt 0 view .LVU23
  80 0016 6318     		adds	r3, r4, r1
  81              	.LVL5:
3159:rtos/uC-FS/Source/fs_unicode.c ****         c_start =  ptbl[ix_mid].Char;
  82              		.loc 1 3159 17 view .LVU24
  83 0018 5B08     		lsrs	r3, r3, #1
  84              	.LVL6:
3160:rtos/uC-FS/Source/fs_unicode.c ****         c_end   =  ptbl[ix_mid + 1u].Char;
  85              		.loc 1 3160 9 is_stmt 1 view .LVU25
3160:rtos/uC-FS/Source/fs_unicode.c ****         c_end   =  ptbl[ix_mid + 1u].Char;
  86              		.loc 1 3160 17 is_stmt 0 view .LVU26
  87 001a 30F82360 		ldrh	r6, [r0, r3, lsl #2]
  88              	.LVL7:
3161:rtos/uC-FS/Source/fs_unicode.c **** 
  89              		.loc 1 3161 9 is_stmt 1 view .LVU27
3161:rtos/uC-FS/Source/fs_unicode.c **** 
  90              		.loc 1 3161 24 is_stmt 0 view .LVU28
  91 001e 5D1C     		adds	r5, r3, #1
3161:rtos/uC-FS/Source/fs_unicode.c **** 
  92              		.loc 1 3161 17 view .LVU29
  93 0020 30F825C0 		ldrh	ip, [r0, r5, lsl #2]
  94              	.LVL8:
3163:rtos/uC-FS/Source/fs_unicode.c ****             ix_hi = ix_mid - 1u;                            /* ... make midpoint hi val.           
  95              		.loc 1 3163 9 is_stmt 1 view .LVU30
3163:rtos/uC-FS/Source/fs_unicode.c ****             ix_hi = ix_mid - 1u;                            /* ... make midpoint hi val.           
  96              		.loc 1 3163 12 is_stmt 0 view .LVU31
  97 0024 9642     		cmp	r6, r2
  98 0026 F0D9     		bls	.L3
3164:rtos/uC-FS/Source/fs_unicode.c **** 
  99              		.loc 1 3164 13 is_stmt 1 view .LVU32
3164:rtos/uC-FS/Source/fs_unicode.c **** 
 100              		.loc 1 3164 19 is_stmt 0 view .LVU33
 101 0028 591E     		subs	r1, r3, #1
 102              	.LVL9:
3164:rtos/uC-FS/Source/fs_unicode.c **** 
 103              		.loc 1 3164 19 view .LVU34
 104 002a F1E7     		b	.L2
 105              	.L8:
3167:rtos/uC-FS/Source/fs_unicode.c **** 
 106              		.loc 1 3167 19 view .LVU35
 107 002c 2C46     		mov	r4, r5
 108              	.LVL10:
3167:rtos/uC-FS/Source/fs_unicode.c **** 
 109              		.loc 1 3167 19 view .LVU36
 110 002e EFE7     		b	.L2
 111              	.LVL11:
 112              	.L5:
3171:rtos/uC-FS/Source/fs_unicode.c ****         }
3172:rtos/uC-FS/Source/fs_unicode.c ****     }
3173:rtos/uC-FS/Source/fs_unicode.c **** 
3174:rtos/uC-FS/Source/fs_unicode.c **** 
3175:rtos/uC-FS/Source/fs_unicode.c ****     if (found == DEF_NO) {                                  /* If range NOT found (see Note #1) ...
 113              		.loc 1 3175 5 is_stmt 1 view .LVU37
ARM GAS  /tmp/cc4JYsWh.s 			page 59


 114              		.loc 1 3175 8 is_stmt 0 view .LVU38
 115 0030 1FB1     		cbz	r7, .L9
3176:rtos/uC-FS/Source/fs_unicode.c ****         return ((WC_SRCH_TBL_ENTRY *)0);                    /* ... rtn NULL.                       
3177:rtos/uC-FS/Source/fs_unicode.c ****     }
3178:rtos/uC-FS/Source/fs_unicode.c **** 
3179:rtos/uC-FS/Source/fs_unicode.c ****     ptbl_entry = &ptbl[ix_mid];                             /*lint !e771 Suppress "'ix_mid' conceiv
 116              		.loc 1 3179 5 is_stmt 1 view .LVU39
 117              		.loc 1 3179 16 is_stmt 0 view .LVU40
 118 0032 00EB8300 		add	r0, r0, r3, lsl #2
 119              	.LVL12:
3180:rtos/uC-FS/Source/fs_unicode.c ****     return  (ptbl_entry);
 120              		.loc 1 3180 5 is_stmt 1 view .LVU41
 121              	.L1:
3181:rtos/uC-FS/Source/fs_unicode.c **** }
 122              		.loc 1 3181 1 is_stmt 0 view .LVU42
 123 0036 F0BC     		pop	{r4, r5, r6, r7}
 124              	.LCFI1:
 125              		.cfi_remember_state
 126              		.cfi_restore 7
 127              		.cfi_restore 6
 128              		.cfi_restore 5
 129              		.cfi_restore 4
 130              		.cfi_def_cfa_offset 0
 131              	.LVL13:
 132              		.loc 1 3181 1 view .LVU43
 133 0038 7047     		bx	lr
 134              	.LVL14:
 135              	.L9:
 136              	.LCFI2:
 137              		.cfi_restore_state
3176:rtos/uC-FS/Source/fs_unicode.c ****         return ((WC_SRCH_TBL_ENTRY *)0);                    /* ... rtn NULL.                       
 138              		.loc 1 3176 16 view .LVU44
 139 003a 0020     		movs	r0, #0
 140              	.LVL15:
3176:rtos/uC-FS/Source/fs_unicode.c ****         return ((WC_SRCH_TBL_ENTRY *)0);                    /* ... rtn NULL.                       
 141              		.loc 1 3176 16 view .LVU45
 142 003c FBE7     		b	.L1
 143              		.cfi_endproc
 144              	.LFE32:
 146              		.section	.text.WC_StrLen_N,"ax",%progbits
 147              		.align	1
 148              		.global	WC_StrLen_N
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv4-sp-d16
 154              	WC_StrLen_N:
 155              	.LVL16:
 156              	.LFB1:
 378:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  len;
 157              		.loc 1 378 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 378:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  len;
 162              		.loc 1 378 1 is_stmt 0 view .LVU47
ARM GAS  /tmp/cc4JYsWh.s 			page 60


 163 0000 0346     		mov	r3, r0
 379:rtos/uC-FS/Source/fs_unicode.c **** 
 164              		.loc 1 379 5 is_stmt 1 view .LVU48
 382:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr != (CPU_WCHAR  *)  0 ) &&                     /* Calc str len until NULL ptr (see
 165              		.loc 1 382 5 view .LVU49
 166              	.LVL17:
 383:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr != (CPU_WCHAR   )'\0') &&                     /* ... or NULL char found      (see
 167              		.loc 1 383 5 view .LVU50
 382:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr != (CPU_WCHAR  *)  0 ) &&                     /* Calc str len until NULL ptr (see
 168              		.loc 1 382 9 is_stmt 0 view .LVU51
 169 0002 0020     		movs	r0, #0
 170              	.LVL18:
 383:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr != (CPU_WCHAR   )'\0') &&                     /* ... or NULL char found      (see
 171              		.loc 1 383 11 view .LVU52
 172 0004 01E0     		b	.L12
 173              	.LVL19:
 174              	.L14:
 386:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 175              		.loc 1 386 9 is_stmt 1 view .LVU53
 386:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 176              		.loc 1 386 12 is_stmt 0 view .LVU54
 177 0006 0130     		adds	r0, r0, #1
 178              	.LVL20:
 387:rtos/uC-FS/Source/fs_unicode.c ****     }
 179              		.loc 1 387 9 is_stmt 1 view .LVU55
 387:rtos/uC-FS/Source/fs_unicode.c ****     }
 180              		.loc 1 387 13 is_stmt 0 view .LVU56
 181 0008 0233     		adds	r3, r3, #2
 182              	.LVL21:
 183              	.L12:
 383:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr != (CPU_WCHAR   )'\0') &&                     /* ... or NULL char found      (see
 184              		.loc 1 383 11 is_stmt 1 view .LVU57
 185 000a 1BB1     		cbz	r3, .L11
 384:rtos/uC-FS/Source/fs_unicode.c ****            ( len   < (CPU_SIZE_T  )len_max)) {                  /* ... or max nbr chars srch'd (see
 186              		.loc 1 384 13 is_stmt 0 discriminator 1 view .LVU58
 187 000c 1A88     		ldrh	r2, [r3]
 383:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr != (CPU_WCHAR   )'\0') &&                     /* ... or NULL char found      (see
 188              		.loc 1 383 42 discriminator 1 view .LVU59
 189 000e 0AB1     		cbz	r2, .L11
 384:rtos/uC-FS/Source/fs_unicode.c ****            ( len   < (CPU_SIZE_T  )len_max)) {                  /* ... or max nbr chars srch'd (see
 190              		.loc 1 384 42 view .LVU60
 191 0010 8842     		cmp	r0, r1
 192 0012 F8D3     		bcc	.L14
 193              	.L11:
 391:rtos/uC-FS/Source/fs_unicode.c **** 
 194              		.loc 1 391 1 view .LVU61
 195 0014 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE1:
 199              		.section	.text.WC_StrLen,"ax",%progbits
 200              		.align	1
 201              		.global	WC_StrLen
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	WC_StrLen:
ARM GAS  /tmp/cc4JYsWh.s 			page 61


 208              	.LVL22:
 209              	.LFB0:
 331:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  len;
 210              		.loc 1 331 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 331:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  len;
 214              		.loc 1 331 1 is_stmt 0 view .LVU63
 215 0000 08B5     		push	{r3, lr}
 216              	.LCFI3:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 3, -8
 219              		.cfi_offset 14, -4
 332:rtos/uC-FS/Source/fs_unicode.c **** 
 220              		.loc 1 332 5 is_stmt 1 view .LVU64
 335:rtos/uC-FS/Source/fs_unicode.c ****                       DEF_INT_CPU_U_MAX_VAL);
 221              		.loc 1 335 5 view .LVU65
 335:rtos/uC-FS/Source/fs_unicode.c ****                       DEF_INT_CPU_U_MAX_VAL);
 222              		.loc 1 335 11 is_stmt 0 view .LVU66
 223 0002 4FF0FF31 		mov	r1, #-1
 224 0006 FFF7FEFF 		bl	WC_StrLen_N
 225              	.LVL23:
 338:rtos/uC-FS/Source/fs_unicode.c **** }
 226              		.loc 1 338 5 is_stmt 1 view .LVU67
 339:rtos/uC-FS/Source/fs_unicode.c **** 
 227              		.loc 1 339 1 is_stmt 0 view .LVU68
 228 000a 08BD     		pop	{r3, pc}
 229              		.cfi_endproc
 230              	.LFE0:
 232              		.section	.text.WC_StrCopy_N,"ax",%progbits
 233              		.align	1
 234              		.global	WC_StrCopy_N
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv4-sp-d16
 240              	WC_StrCopy_N:
 241              	.LVL24:
 242              	.LFB3:
 487:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr;
 243              		.loc 1 487 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 487:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr;
 248              		.loc 1 487 1 is_stmt 0 view .LVU70
 249 0000 F0B4     		push	{r4, r5, r6, r7}
 250              	.LCFI4:
 251              		.cfi_def_cfa_offset 16
 252              		.cfi_offset 4, -16
 253              		.cfi_offset 5, -12
 254              		.cfi_offset 6, -8
 255              		.cfi_offset 7, -4
 488:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 256              		.loc 1 488 5 is_stmt 1 view .LVU71
ARM GAS  /tmp/cc4JYsWh.s 			page 62


 489:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_copy;
 257              		.loc 1 489 5 view .LVU72
 490:rtos/uC-FS/Source/fs_unicode.c **** 
 258              		.loc 1 490 5 view .LVU73
 493:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 259              		.loc 1 493 5 view .LVU74
 493:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 260              		.loc 1 493 8 is_stmt 0 view .LVU75
 261 0002 0746     		mov	r7, r0
 262 0004 98B1     		cbz	r0, .L17
 496:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 263              		.loc 1 496 5 is_stmt 1 view .LVU76
 496:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 264              		.loc 1 496 8 is_stmt 0 view .LVU77
 265 0006 A1B1     		cbz	r1, .L23
 500:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 266              		.loc 1 500 5 is_stmt 1 view .LVU78
 500:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 267              		.loc 1 500 8 is_stmt 0 view .LVU79
 268 0008 AAB1     		cbz	r2, .L24
 505:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next = pstr;
 269              		.loc 1 505 5 is_stmt 1 view .LVU80
 270              	.LVL25:
 506:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next++;
 271              		.loc 1 506 5 view .LVU81
 507:rtos/uC-FS/Source/fs_unicode.c ****     len_copy  = 0u;
 272              		.loc 1 507 5 view .LVU82
 507:rtos/uC-FS/Source/fs_unicode.c ****     len_copy  = 0u;
 273              		.loc 1 507 14 is_stmt 0 view .LVU83
 274 000a 831C     		adds	r3, r0, #2
 275              	.LVL26:
 508:rtos/uC-FS/Source/fs_unicode.c **** 
 276              		.loc 1 508 5 is_stmt 1 view .LVU84
 510:rtos/uC-FS/Source/fs_unicode.c ****            ( psrc      != (CPU_WCHAR  *)0) &&
 277              		.loc 1 510 5 view .LVU85
 505:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next = pstr;
 278              		.loc 1 505 15 is_stmt 0 view .LVU86
 279 000c 0646     		mov	r6, r0
 508:rtos/uC-FS/Source/fs_unicode.c **** 
 280              		.loc 1 508 15 view .LVU87
 281 000e 0024     		movs	r4, #0
 510:rtos/uC-FS/Source/fs_unicode.c ****            ( psrc      != (CPU_WCHAR  *)0) &&
 282              		.loc 1 510 11 view .LVU88
 283 0010 04E0     		b	.L19
 284              	.LVL27:
 285              	.L21:
 514:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 286              		.loc 1 514 8 is_stmt 1 view .LVU89
 514:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 287              		.loc 1 514 14 is_stmt 0 view .LVU90
 288 0012 26F8025B 		strh	r5, [r6], #2	@ movhi
 289              	.LVL28:
 515:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next++;
 290              		.loc 1 515 9 is_stmt 1 view .LVU91
 516:rtos/uC-FS/Source/fs_unicode.c ****         psrc++;
 291              		.loc 1 516 9 view .LVU92
 516:rtos/uC-FS/Source/fs_unicode.c ****         psrc++;
ARM GAS  /tmp/cc4JYsWh.s 			page 63


 292              		.loc 1 516 18 is_stmt 0 view .LVU93
 293 0016 0233     		adds	r3, r3, #2
 294              	.LVL29:
 517:rtos/uC-FS/Source/fs_unicode.c ****         len_copy++;
 295              		.loc 1 517 9 is_stmt 1 view .LVU94
 517:rtos/uC-FS/Source/fs_unicode.c ****         len_copy++;
 296              		.loc 1 517 13 is_stmt 0 view .LVU95
 297 0018 0231     		adds	r1, r1, #2
 298              	.LVL30:
 518:rtos/uC-FS/Source/fs_unicode.c ****     }
 299              		.loc 1 518 9 is_stmt 1 view .LVU96
 518:rtos/uC-FS/Source/fs_unicode.c ****     }
 300              		.loc 1 518 17 is_stmt 0 view .LVU97
 301 001a 0134     		adds	r4, r4, #1
 302              	.LVL31:
 303              	.L19:
 510:rtos/uC-FS/Source/fs_unicode.c ****            ( psrc      != (CPU_WCHAR  *)0) &&
 304              		.loc 1 510 11 is_stmt 1 view .LVU98
 305 001c 23B1     		cbz	r3, .L20
 510:rtos/uC-FS/Source/fs_unicode.c ****            ( psrc      != (CPU_WCHAR  *)0) &&
 306              		.loc 1 510 44 is_stmt 0 discriminator 1 view .LVU99
 307 001e 19B1     		cbz	r1, .L20
 512:rtos/uC-FS/Source/fs_unicode.c ****            ( len_copy  <  (CPU_SIZE_T  )len_max)) {             /* ... or max nbr chars copied (see
 308              		.loc 1 512 13 view .LVU100
 309 0020 0D88     		ldrh	r5, [r1]
 511:rtos/uC-FS/Source/fs_unicode.c ****            (*psrc      != (CPU_WCHAR   )0) &&                   /* ... or NULL char found      (see
 310              		.loc 1 511 44 view .LVU101
 311 0022 0DB1     		cbz	r5, .L20
 512:rtos/uC-FS/Source/fs_unicode.c ****            ( len_copy  <  (CPU_SIZE_T  )len_max)) {             /* ... or max nbr chars copied (see
 312              		.loc 1 512 44 view .LVU102
 313 0024 9442     		cmp	r4, r2
 314 0026 F4D3     		bcc	.L21
 315              	.L20:
 521:rtos/uC-FS/Source/fs_unicode.c **** 
 316              		.loc 1 521 4 is_stmt 1 view .LVU103
 521:rtos/uC-FS/Source/fs_unicode.c **** 
 317              		.loc 1 521 10 is_stmt 0 view .LVU104
 318 0028 0023     		movs	r3, #0
 319              	.LVL32:
 521:rtos/uC-FS/Source/fs_unicode.c **** 
 320              		.loc 1 521 10 view .LVU105
 321 002a 3380     		strh	r3, [r6]	@ movhi
 524:rtos/uC-FS/Source/fs_unicode.c **** }
 322              		.loc 1 524 5 is_stmt 1 view .LVU106
 524:rtos/uC-FS/Source/fs_unicode.c **** }
 323              		.loc 1 524 12 is_stmt 0 view .LVU107
 324 002c 3846     		mov	r0, r7
 325              	.LVL33:
 326              	.L17:
 525:rtos/uC-FS/Source/fs_unicode.c **** 
 327              		.loc 1 525 1 view .LVU108
 328 002e F0BC     		pop	{r4, r5, r6, r7}
 329              	.LCFI5:
 330              		.cfi_remember_state
 331              		.cfi_restore 7
 332              		.cfi_restore 6
 333              		.cfi_restore 5
ARM GAS  /tmp/cc4JYsWh.s 			page 64


 334              		.cfi_restore 4
 335              		.cfi_def_cfa_offset 0
 336              	.LVL34:
 525:rtos/uC-FS/Source/fs_unicode.c **** 
 337              		.loc 1 525 1 view .LVU109
 338 0030 7047     		bx	lr
 339              	.LVL35:
 340              	.L23:
 341              	.LCFI6:
 342              		.cfi_restore_state
 497:rtos/uC-FS/Source/fs_unicode.c ****     }
 343              		.loc 1 497 17 view .LVU110
 344 0032 0846     		mov	r0, r1
 345              	.LVL36:
 497:rtos/uC-FS/Source/fs_unicode.c ****     }
 346              		.loc 1 497 17 view .LVU111
 347 0034 FBE7     		b	.L17
 348              	.LVL37:
 349              	.L24:
 501:rtos/uC-FS/Source/fs_unicode.c ****     }
 350              		.loc 1 501 16 view .LVU112
 351 0036 0020     		movs	r0, #0
 352              	.LVL38:
 501:rtos/uC-FS/Source/fs_unicode.c ****     }
 353              		.loc 1 501 16 view .LVU113
 354 0038 F9E7     		b	.L17
 355              		.cfi_endproc
 356              	.LFE3:
 358              		.section	.text.WC_StrCopy,"ax",%progbits
 359              		.align	1
 360              		.global	WC_StrCopy
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	WC_StrCopy:
 367              	.LVL39:
 368              	.LFB2:
 431:rtos/uC-FS/Source/fs_unicode.c ****     pdest = WC_StrCopy_N(pdest,
 369              		.loc 1 431 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 431:rtos/uC-FS/Source/fs_unicode.c ****     pdest = WC_StrCopy_N(pdest,
 373              		.loc 1 431 1 is_stmt 0 view .LVU115
 374 0000 08B5     		push	{r3, lr}
 375              	.LCFI7:
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 3, -8
 378              		.cfi_offset 14, -4
 432:rtos/uC-FS/Source/fs_unicode.c ****                          psrc,
 379              		.loc 1 432 5 is_stmt 1 view .LVU116
 432:rtos/uC-FS/Source/fs_unicode.c ****                          psrc,
 380              		.loc 1 432 13 is_stmt 0 view .LVU117
 381 0002 4FF0FF32 		mov	r2, #-1
 382 0006 FFF7FEFF 		bl	WC_StrCopy_N
 383              	.LVL40:
ARM GAS  /tmp/cc4JYsWh.s 			page 65


 436:rtos/uC-FS/Source/fs_unicode.c **** }
 384              		.loc 1 436 5 is_stmt 1 view .LVU118
 437:rtos/uC-FS/Source/fs_unicode.c **** 
 385              		.loc 1 437 1 is_stmt 0 view .LVU119
 386 000a 08BD     		pop	{r3, pc}
 387              		.cfi_endproc
 388              	.LFE2:
 390              		.section	.text.WC_StrCat_N,"ax",%progbits
 391              		.align	1
 392              		.global	WC_StrCat_N
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu fpv4-sp-d16
 398              	WC_StrCat_N:
 399              	.LVL41:
 400              	.LFB5:
 626:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr;
 401              		.loc 1 626 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 626:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr;
 406              		.loc 1 626 1 is_stmt 0 view .LVU121
 407 0000 70B4     		push	{r4, r5, r6}
 408              	.LCFI8:
 409              		.cfi_def_cfa_offset 12
 410              		.cfi_offset 4, -12
 411              		.cfi_offset 5, -8
 412              		.cfi_offset 6, -4
 627:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 413              		.loc 1 627 5 is_stmt 1 view .LVU122
 628:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_cat;
 414              		.loc 1 628 5 view .LVU123
 629:rtos/uC-FS/Source/fs_unicode.c **** 
 415              		.loc 1 629 5 view .LVU124
 632:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 416              		.loc 1 632 5 view .LVU125
 632:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 417              		.loc 1 632 8 is_stmt 0 view .LVU126
 418 0002 0646     		mov	r6, r0
 419 0004 C0B1     		cbz	r0, .L28
 635:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 420              		.loc 1 635 5 is_stmt 1 view .LVU127
 635:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 421              		.loc 1 635 8 is_stmt 0 view .LVU128
 422 0006 C9B1     		cbz	r1, .L37
 639:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 423              		.loc 1 639 5 is_stmt 1 view .LVU129
 639:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_WCHAR *)0);
 424              		.loc 1 639 8 is_stmt 0 view .LVU130
 425 0008 D2B1     		cbz	r2, .L38
 426              	.LVL42:
 427              	.L30:
 645:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr != (CPU_WCHAR  )0)) {                         /* ... or NULL char found..        
 428              		.loc 1 645 11 is_stmt 1 view .LVU131
ARM GAS  /tmp/cc4JYsWh.s 			page 66


 429 000a 18B1     		cbz	r0, .L31
 646:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 430              		.loc 1 646 13 is_stmt 0 discriminator 1 view .LVU132
 431 000c 0388     		ldrh	r3, [r0]
 645:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr != (CPU_WCHAR  )0)) {                         /* ... or NULL char found..        
 432              		.loc 1 645 38 discriminator 1 view .LVU133
 433 000e 0BB1     		cbz	r3, .L31
 647:rtos/uC-FS/Source/fs_unicode.c ****     }
 434              		.loc 1 647 9 is_stmt 1 view .LVU134
 647:rtos/uC-FS/Source/fs_unicode.c ****     }
 435              		.loc 1 647 13 is_stmt 0 view .LVU135
 436 0010 0230     		adds	r0, r0, #2
 437              	.LVL43:
 647:rtos/uC-FS/Source/fs_unicode.c ****     }
 438              		.loc 1 647 13 view .LVU136
 439 0012 FAE7     		b	.L30
 440              	.L31:
 649:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 441              		.loc 1 649 5 is_stmt 1 view .LVU137
 649:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 442              		.loc 1 649 8 is_stmt 0 view .LVU138
 443 0014 80B1     		cbz	r0, .L28
 653:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next++;
 444              		.loc 1 653 5 is_stmt 1 view .LVU139
 445              	.LVL44:
 654:rtos/uC-FS/Source/fs_unicode.c ****     len_cat   = 0u;
 446              		.loc 1 654 5 view .LVU140
 654:rtos/uC-FS/Source/fs_unicode.c ****     len_cat   = 0u;
 447              		.loc 1 654 14 is_stmt 0 view .LVU141
 448 0016 831C     		adds	r3, r0, #2
 449              	.LVL45:
 655:rtos/uC-FS/Source/fs_unicode.c **** 
 450              		.loc 1 655 5 is_stmt 1 view .LVU142
 657:rtos/uC-FS/Source/fs_unicode.c ****            ( pstr_cat  != (CPU_WCHAR  *)0) &&
 451              		.loc 1 657 5 view .LVU143
 655:rtos/uC-FS/Source/fs_unicode.c **** 
 452              		.loc 1 655 15 is_stmt 0 view .LVU144
 453 0018 0024     		movs	r4, #0
 657:rtos/uC-FS/Source/fs_unicode.c ****            ( pstr_cat  != (CPU_WCHAR  *)0) &&
 454              		.loc 1 657 11 view .LVU145
 455 001a 04E0     		b	.L33
 456              	.LVL46:
 457              	.L35:
 661:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 458              		.loc 1 661 8 is_stmt 1 view .LVU146
 661:rtos/uC-FS/Source/fs_unicode.c ****         pstr++;
 459              		.loc 1 661 14 is_stmt 0 view .LVU147
 460 001c 20F8025B 		strh	r5, [r0], #2	@ movhi
 461              	.LVL47:
 662:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next++;
 462              		.loc 1 662 9 is_stmt 1 view .LVU148
 663:rtos/uC-FS/Source/fs_unicode.c ****         pstr_cat++;
 463              		.loc 1 663 9 view .LVU149
 663:rtos/uC-FS/Source/fs_unicode.c ****         pstr_cat++;
 464              		.loc 1 663 18 is_stmt 0 view .LVU150
 465 0020 0233     		adds	r3, r3, #2
 466              	.LVL48:
ARM GAS  /tmp/cc4JYsWh.s 			page 67


 664:rtos/uC-FS/Source/fs_unicode.c ****         len_cat++;
 467              		.loc 1 664 9 is_stmt 1 view .LVU151
 664:rtos/uC-FS/Source/fs_unicode.c ****         len_cat++;
 468              		.loc 1 664 17 is_stmt 0 view .LVU152
 469 0022 0231     		adds	r1, r1, #2
 470              	.LVL49:
 665:rtos/uC-FS/Source/fs_unicode.c ****     }
 471              		.loc 1 665 9 is_stmt 1 view .LVU153
 665:rtos/uC-FS/Source/fs_unicode.c ****     }
 472              		.loc 1 665 16 is_stmt 0 view .LVU154
 473 0024 0134     		adds	r4, r4, #1
 474              	.LVL50:
 475              	.L33:
 657:rtos/uC-FS/Source/fs_unicode.c ****            ( pstr_cat  != (CPU_WCHAR  *)0) &&
 476              		.loc 1 657 11 is_stmt 1 view .LVU155
 477 0026 23B1     		cbz	r3, .L34
 657:rtos/uC-FS/Source/fs_unicode.c ****            ( pstr_cat  != (CPU_WCHAR  *)0) &&
 478              		.loc 1 657 44 is_stmt 0 discriminator 1 view .LVU156
 479 0028 19B1     		cbz	r1, .L34
 659:rtos/uC-FS/Source/fs_unicode.c ****            ( len_cat   <  (CPU_SIZE_T  )len_max)) {             /* ... or max nbr chars cat'd (see 
 480              		.loc 1 659 13 view .LVU157
 481 002a 0D88     		ldrh	r5, [r1]
 658:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_cat  != (CPU_WCHAR   )0) &&                   /* ... or NULL char found     (see 
 482              		.loc 1 658 44 view .LVU158
 483 002c 0DB1     		cbz	r5, .L34
 659:rtos/uC-FS/Source/fs_unicode.c ****            ( len_cat   <  (CPU_SIZE_T  )len_max)) {             /* ... or max nbr chars cat'd (see 
 484              		.loc 1 659 44 view .LVU159
 485 002e 9442     		cmp	r4, r2
 486 0030 F4D3     		bcc	.L35
 487              	.L34:
 668:rtos/uC-FS/Source/fs_unicode.c **** 
 488              		.loc 1 668 4 is_stmt 1 view .LVU160
 668:rtos/uC-FS/Source/fs_unicode.c **** 
 489              		.loc 1 668 10 is_stmt 0 view .LVU161
 490 0032 0023     		movs	r3, #0
 491              	.LVL51:
 668:rtos/uC-FS/Source/fs_unicode.c **** 
 492              		.loc 1 668 10 view .LVU162
 493 0034 0380     		strh	r3, [r0]	@ movhi
 671:rtos/uC-FS/Source/fs_unicode.c **** }
 494              		.loc 1 671 5 is_stmt 1 view .LVU163
 671:rtos/uC-FS/Source/fs_unicode.c **** }
 495              		.loc 1 671 12 is_stmt 0 view .LVU164
 496 0036 3046     		mov	r0, r6
 497              	.LVL52:
 498              	.L28:
 672:rtos/uC-FS/Source/fs_unicode.c **** 
 499              		.loc 1 672 1 view .LVU165
 500 0038 70BC     		pop	{r4, r5, r6}
 501              	.LCFI9:
 502              		.cfi_remember_state
 503              		.cfi_restore 6
 504              		.cfi_restore 5
 505              		.cfi_restore 4
 506              		.cfi_def_cfa_offset 0
 507              	.LVL53:
 672:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 68


 508              		.loc 1 672 1 view .LVU166
 509 003a 7047     		bx	lr
 510              	.LVL54:
 511              	.L37:
 512              	.LCFI10:
 513              		.cfi_restore_state
 636:rtos/uC-FS/Source/fs_unicode.c ****     }
 514              		.loc 1 636 17 view .LVU167
 515 003c 0846     		mov	r0, r1
 516              	.LVL55:
 636:rtos/uC-FS/Source/fs_unicode.c ****     }
 517              		.loc 1 636 17 view .LVU168
 518 003e FBE7     		b	.L28
 519              	.LVL56:
 520              	.L38:
 640:rtos/uC-FS/Source/fs_unicode.c ****     }
 521              		.loc 1 640 17 view .LVU169
 522 0040 0020     		movs	r0, #0
 523              	.LVL57:
 640:rtos/uC-FS/Source/fs_unicode.c ****     }
 524              		.loc 1 640 17 view .LVU170
 525 0042 F9E7     		b	.L28
 526              		.cfi_endproc
 527              	.LFE5:
 529              		.section	.text.WC_StrCat,"ax",%progbits
 530              		.align	1
 531              		.global	WC_StrCat
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu fpv4-sp-d16
 537              	WC_StrCat:
 538              	.LVL58:
 539              	.LFB4:
 568:rtos/uC-FS/Source/fs_unicode.c ****     pdest = WC_StrCat_N(pdest,
 540              		.loc 1 568 1 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 568:rtos/uC-FS/Source/fs_unicode.c ****     pdest = WC_StrCat_N(pdest,
 544              		.loc 1 568 1 is_stmt 0 view .LVU172
 545 0000 08B5     		push	{r3, lr}
 546              	.LCFI11:
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 3, -8
 549              		.cfi_offset 14, -4
 569:rtos/uC-FS/Source/fs_unicode.c ****                         pstr_cat,
 550              		.loc 1 569 5 is_stmt 1 view .LVU173
 569:rtos/uC-FS/Source/fs_unicode.c ****                         pstr_cat,
 551              		.loc 1 569 13 is_stmt 0 view .LVU174
 552 0002 4FF0FF32 		mov	r2, #-1
 553 0006 FFF7FEFF 		bl	WC_StrCat_N
 554              	.LVL59:
 573:rtos/uC-FS/Source/fs_unicode.c **** }
 555              		.loc 1 573 5 is_stmt 1 view .LVU175
 574:rtos/uC-FS/Source/fs_unicode.c **** 
 556              		.loc 1 574 1 is_stmt 0 view .LVU176
ARM GAS  /tmp/cc4JYsWh.s 			page 69


 557 000a 08BD     		pop	{r3, pc}
 558              		.cfi_endproc
 559              	.LFE4:
 561              		.section	.text.WC_StrCmp_N,"ax",%progbits
 562              		.align	1
 563              		.global	WC_StrCmp_N
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu fpv4-sp-d16
 569              	WC_StrCmp_N:
 570              	.LVL60:
 571              	.LFB7:
 851:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p1_str_next;
 572              		.loc 1 851 1 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 852:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p2_str_next;
 577              		.loc 1 852 5 view .LVU178
 853:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    char1;
 578              		.loc 1 853 5 view .LVU179
 854:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    char2;
 579              		.loc 1 854 5 view .LVU180
 855:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S   cmp_val;
 580              		.loc 1 855 5 view .LVU181
 856:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   cmp_len;
 581              		.loc 1 856 5 view .LVU182
 857:rtos/uC-FS/Source/fs_unicode.c **** 
 582              		.loc 1 857 5 view .LVU183
 860:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);
 583              		.loc 1 860 5 view .LVU184
 860:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);
 584              		.loc 1 860 8 is_stmt 0 view .LVU185
 585 0000 7AB3     		cbz	r2, .L51
 586 0002 9446     		mov	ip, r2
 864:rtos/uC-FS/Source/fs_unicode.c ****         if (p2_str == (CPU_WCHAR *)0) {
 587              		.loc 1 864 5 is_stmt 1 view .LVU186
 864:rtos/uC-FS/Source/fs_unicode.c ****         if (p2_str == (CPU_WCHAR *)0) {
 588              		.loc 1 864 8 is_stmt 0 view .LVU187
 589 0004 48B1     		cbz	r0, .L59
 872:rtos/uC-FS/Source/fs_unicode.c ****         char1   = *p1_str;
 590              		.loc 1 872 5 is_stmt 1 view .LVU188
 872:rtos/uC-FS/Source/fs_unicode.c ****         char1   = *p1_str;
 591              		.loc 1 872 8 is_stmt 0 view .LVU189
 592 0006 61B1     		cbz	r1, .L60
 851:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p1_str_next;
 593              		.loc 1 851 1 view .LVU190
 594 0008 F0B4     		push	{r4, r5, r6, r7}
 595              	.LCFI12:
 596              		.cfi_def_cfa_offset 16
 597              		.cfi_offset 4, -16
 598              		.cfi_offset 5, -12
 599              		.cfi_offset 6, -8
 600              		.cfi_offset 7, -4
 879:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next = p2_str;
ARM GAS  /tmp/cc4JYsWh.s 			page 70


 601              		.loc 1 879 5 is_stmt 1 view .LVU191
 602              	.LVL61:
 880:rtos/uC-FS/Source/fs_unicode.c ****     p1_str_next++;
 603              		.loc 1 880 5 view .LVU192
 881:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next++;
 604              		.loc 1 881 5 view .LVU193
 881:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next++;
 605              		.loc 1 881 16 is_stmt 0 view .LVU194
 606 000a 0346     		mov	r3, r0
 607              	.LVL62:
 882:rtos/uC-FS/Source/fs_unicode.c ****     char1       = *p1_str;
 608              		.loc 1 882 5 is_stmt 1 view .LVU195
 882:rtos/uC-FS/Source/fs_unicode.c ****     char1       = *p1_str;
 609              		.loc 1 882 16 is_stmt 0 view .LVU196
 610 000c 0A46     		mov	r2, r1
 611              	.LVL63:
 883:rtos/uC-FS/Source/fs_unicode.c ****     char2       = *p2_str;
 612              		.loc 1 883 5 is_stmt 1 view .LVU197
 883:rtos/uC-FS/Source/fs_unicode.c ****     char2       = *p2_str;
 613              		.loc 1 883 17 is_stmt 0 view .LVU198
 614 000e 33F8025B 		ldrh	r5, [r3], #2
 615              	.LVL64:
 884:rtos/uC-FS/Source/fs_unicode.c ****     cmp_len     = 0u;
 616              		.loc 1 884 5 is_stmt 1 view .LVU199
 884:rtos/uC-FS/Source/fs_unicode.c ****     cmp_len     = 0u;
 617              		.loc 1 884 17 is_stmt 0 view .LVU200
 618 0012 32F8026B 		ldrh	r6, [r2], #2
 619              	.LVL65:
 885:rtos/uC-FS/Source/fs_unicode.c ****     while (( char1       ==  char2)          &&                 /* Cmp strs until non-matching char
 620              		.loc 1 885 5 is_stmt 1 view .LVU201
 886:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
 621              		.loc 1 886 5 view .LVU202
 885:rtos/uC-FS/Source/fs_unicode.c ****     while (( char1       ==  char2)          &&                 /* Cmp strs until non-matching char
 622              		.loc 1 885 17 is_stmt 0 view .LVU203
 623 0016 0024     		movs	r4, #0
 886:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
 624              		.loc 1 886 11 view .LVU204
 625 0018 0CE0     		b	.L46
 626              	.LVL66:
 627              	.L59:
 628              	.LCFI13:
 629              		.cfi_def_cfa_offset 0
 630              		.cfi_restore 4
 631              		.cfi_restore 5
 632              		.cfi_restore 6
 633              		.cfi_restore 7
 865:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_INT32S)0);                             /* If BOTH str ptrs NULL,  rtn 0   
 634              		.loc 1 865 9 is_stmt 1 view .LVU205
 865:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_INT32S)0);                             /* If BOTH str ptrs NULL,  rtn 0   
 635              		.loc 1 865 12 is_stmt 0 view .LVU206
 636 001a 21B3     		cbz	r1, .L52
 868:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)0 - (CPU_INT32S)char2;
 637              		.loc 1 868 9 is_stmt 1 view .LVU207
 868:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)0 - (CPU_INT32S)char2;
 638              		.loc 1 868 17 is_stmt 0 view .LVU208
 639 001c 0888     		ldrh	r0, [r1]
 640              	.LVL67:
ARM GAS  /tmp/cc4JYsWh.s 			page 71


 869:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 641              		.loc 1 869 9 is_stmt 1 view .LVU209
 869:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 642              		.loc 1 869 17 is_stmt 0 view .LVU210
 643 001e 4042     		rsbs	r0, r0, #0
 644              	.LVL68:
 870:rtos/uC-FS/Source/fs_unicode.c ****     }
 645              		.loc 1 870 9 is_stmt 1 view .LVU211
 870:rtos/uC-FS/Source/fs_unicode.c ****     }
 646              		.loc 1 870 16 is_stmt 0 view .LVU212
 647 0020 7047     		bx	lr
 648              	.LVL69:
 649              	.L60:
 873:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)char1;
 650              		.loc 1 873 9 is_stmt 1 view .LVU213
 873:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)char1;
 651              		.loc 1 873 17 is_stmt 0 view .LVU214
 652 0022 0088     		ldrh	r0, [r0]
 653              	.LVL70:
 874:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 654              		.loc 1 874 9 is_stmt 1 view .LVU215
 875:rtos/uC-FS/Source/fs_unicode.c ****     }
 655              		.loc 1 875 9 view .LVU216
 875:rtos/uC-FS/Source/fs_unicode.c ****     }
 656              		.loc 1 875 16 is_stmt 0 view .LVU217
 657 0024 7047     		bx	lr
 658              	.LVL71:
 659              	.L48:
 660              	.LCFI14:
 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 4, -16
 663              		.cfi_offset 5, -12
 664              		.cfi_offset 6, -8
 665              		.cfi_offset 7, -4
 891:rtos/uC-FS/Source/fs_unicode.c ****         p2_str_next++;
 666              		.loc 1 891 9 is_stmt 1 view .LVU218
 891:rtos/uC-FS/Source/fs_unicode.c ****         p2_str_next++;
 667              		.loc 1 891 20 is_stmt 0 view .LVU219
 668 0026 0233     		adds	r3, r3, #2
 669              	.LVL72:
 892:rtos/uC-FS/Source/fs_unicode.c ****         p1_str++;
 670              		.loc 1 892 9 is_stmt 1 view .LVU220
 892:rtos/uC-FS/Source/fs_unicode.c ****         p1_str++;
 671              		.loc 1 892 20 is_stmt 0 view .LVU221
 672 0028 0232     		adds	r2, r2, #2
 673              	.LVL73:
 893:rtos/uC-FS/Source/fs_unicode.c ****         p2_str++;
 674              		.loc 1 893 9 is_stmt 1 view .LVU222
 894:rtos/uC-FS/Source/fs_unicode.c ****         cmp_len++;
 675              		.loc 1 894 9 view .LVU223
 895:rtos/uC-FS/Source/fs_unicode.c ****         char1 = *p1_str;
 676              		.loc 1 895 9 view .LVU224
 895:rtos/uC-FS/Source/fs_unicode.c ****         char1 = *p1_str;
 677              		.loc 1 895 16 is_stmt 0 view .LVU225
 678 002a 0134     		adds	r4, r4, #1
 679              	.LVL74:
 896:rtos/uC-FS/Source/fs_unicode.c ****         char2 = *p2_str;
ARM GAS  /tmp/cc4JYsWh.s 			page 72


 680              		.loc 1 896 9 is_stmt 1 view .LVU226
 896:rtos/uC-FS/Source/fs_unicode.c ****         char2 = *p2_str;
 681              		.loc 1 896 15 is_stmt 0 view .LVU227
 682 002c 30F8025F 		ldrh	r5, [r0, #2]!
 683              	.LVL75:
 897:rtos/uC-FS/Source/fs_unicode.c ****     }
 684              		.loc 1 897 9 is_stmt 1 view .LVU228
 897:rtos/uC-FS/Source/fs_unicode.c ****     }
 685              		.loc 1 897 15 is_stmt 0 view .LVU229
 686 0030 31F8026F 		ldrh	r6, [r1, #2]!
 687              	.LVL76:
 688              	.L46:
 886:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
 689              		.loc 1 886 11 is_stmt 1 view .LVU230
 690 0034 B542     		cmp	r5, r6
 691 0036 05D1     		bne	.L47
 887:rtos/uC-FS/Source/fs_unicode.c ****            ( p1_str_next != (CPU_WCHAR  *)0) &&                 /* ... or NULL ptr(s) found        
 692              		.loc 1 887 13 is_stmt 0 discriminator 1 view .LVU231
 693 0038 0788     		ldrh	r7, [r0]
 886:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
 694              		.loc 1 886 46 discriminator 1 view .LVU232
 695 003a 1FB1     		cbz	r7, .L47
 887:rtos/uC-FS/Source/fs_unicode.c ****            ( p1_str_next != (CPU_WCHAR  *)0) &&                 /* ... or NULL ptr(s) found        
 696              		.loc 1 887 46 view .LVU233
 697 003c 13B1     		cbz	r3, .L47
 888:rtos/uC-FS/Source/fs_unicode.c ****            ( p2_str_next != (CPU_WCHAR  *)0) &&
 698              		.loc 1 888 46 view .LVU234
 699 003e 0AB1     		cbz	r2, .L47
 889:rtos/uC-FS/Source/fs_unicode.c ****            ( cmp_len     <  (CPU_SIZE_T  )len_max)) {           /* ... or max nbr chars cmp'd      
 700              		.loc 1 889 46 view .LVU235
 701 0040 6445     		cmp	r4, ip
 702 0042 F0D3     		bcc	.L48
 703              	.L47:
 901:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);                                 /* ... rtn 0                   (see
 704              		.loc 1 901 5 is_stmt 1 view .LVU236
 901:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);                                 /* ... rtn 0                   (see
 705              		.loc 1 901 8 is_stmt 0 view .LVU237
 706 0044 6445     		cmp	r4, ip
 707 0046 10D0     		beq	.L53
 905:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = (CPU_INT32S)char1 - (CPU_INT32S)char2;       /* ... calc & rtn char diff    (see
 708              		.loc 1 905 5 is_stmt 1 view .LVU238
 905:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = (CPU_INT32S)char1 - (CPU_INT32S)char2;       /* ... calc & rtn char diff    (see
 709              		.loc 1 905 8 is_stmt 0 view .LVU239
 710 0048 B542     		cmp	r5, r6
 711 004a 02D0     		beq	.L49
 906:rtos/uC-FS/Source/fs_unicode.c **** 
 712              		.loc 1 906 10 is_stmt 1 view .LVU240
 906:rtos/uC-FS/Source/fs_unicode.c **** 
 713              		.loc 1 906 18 is_stmt 0 view .LVU241
 714 004c A81B     		subs	r0, r5, r6
 715              	.LVL77:
 716              	.L42:
 927:rtos/uC-FS/Source/fs_unicode.c **** 
 717              		.loc 1 927 1 view .LVU242
 718 004e F0BC     		pop	{r4, r5, r6, r7}
 719              	.LCFI15:
 720              		.cfi_remember_state
ARM GAS  /tmp/cc4JYsWh.s 			page 73


 721              		.cfi_restore 7
 722              		.cfi_restore 6
 723              		.cfi_restore 5
 724              		.cfi_restore 4
 725              		.cfi_def_cfa_offset 0
 726              	.LVL78:
 927:rtos/uC-FS/Source/fs_unicode.c **** 
 727              		.loc 1 927 1 view .LVU243
 728 0050 7047     		bx	lr
 729              	.LVL79:
 730              	.L49:
 731              	.LCFI16:
 732              		.cfi_restore_state
 908:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = 0;                                           /* ... strs identical; rtn 0   (see
 733              		.loc 1 908 12 is_stmt 1 view .LVU244
 908:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = 0;                                           /* ... strs identical; rtn 0   (see
 734              		.loc 1 908 15 is_stmt 0 view .LVU245
 735 0052 65B1     		cbz	r5, .L54
 912:rtos/uC-FS/Source/fs_unicode.c ****             if (p2_str_next == (CPU_WCHAR *)0) {                /* If BOTH next str ptrs NULL, ... 
 736              		.loc 1 912 9 is_stmt 1 view .LVU246
 912:rtos/uC-FS/Source/fs_unicode.c ****             if (p2_str_next == (CPU_WCHAR *)0) {                /* If BOTH next str ptrs NULL, ... 
 737              		.loc 1 912 12 is_stmt 0 view .LVU247
 738 0054 0BB1     		cbz	r3, .L61
 920:rtos/uC-FS/Source/fs_unicode.c ****             cmp_val = (CPU_INT32S)char1;                        /* ... rtn pos p1_str_next val (see
 739              		.loc 1 920 13 is_stmt 1 view .LVU248
 920:rtos/uC-FS/Source/fs_unicode.c ****             cmp_val = (CPU_INT32S)char1;                        /* ... rtn pos p1_str_next val (see
 740              		.loc 1 920 21 is_stmt 0 view .LVU249
 741 0056 1888     		ldrh	r0, [r3]
 742              	.LVL80:
 921:rtos/uC-FS/Source/fs_unicode.c ****         }
 743              		.loc 1 921 13 is_stmt 1 view .LVU250
 921:rtos/uC-FS/Source/fs_unicode.c ****         }
 744              		.loc 1 921 13 is_stmt 0 view .LVU251
 745 0058 F9E7     		b	.L42
 746              	.LVL81:
 747              	.L61:
 913:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0;                       /* ... rtn 0                   (see
 748              		.loc 1 913 13 is_stmt 1 view .LVU252
 913:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0;                       /* ... rtn 0                   (see
 749              		.loc 1 913 16 is_stmt 0 view .LVU253
 750 005a 52B1     		cbz	r2, .L55
 916:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0 - (CPU_INT32S)char2;   /* ... rtn neg p2_str_next val (see
 751              		.loc 1 916 17 is_stmt 1 view .LVU254
 916:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0 - (CPU_INT32S)char2;   /* ... rtn neg p2_str_next val (see
 752              		.loc 1 916 26 is_stmt 0 view .LVU255
 753 005c 1088     		ldrh	r0, [r2]
 754              	.LVL82:
 917:rtos/uC-FS/Source/fs_unicode.c ****             }
 755              		.loc 1 917 17 is_stmt 1 view .LVU256
 917:rtos/uC-FS/Source/fs_unicode.c ****             }
 756              		.loc 1 917 26 is_stmt 0 view .LVU257
 757 005e 4042     		rsbs	r0, r0, #0
 758              	.LVL83:
 917:rtos/uC-FS/Source/fs_unicode.c ****             }
 759              		.loc 1 917 26 view .LVU258
 760 0060 F5E7     		b	.L42
 761              	.LVL84:
ARM GAS  /tmp/cc4JYsWh.s 			page 74


 762              	.L51:
 763              	.LCFI17:
 764              		.cfi_def_cfa_offset 0
 765              		.cfi_restore 4
 766              		.cfi_restore 5
 767              		.cfi_restore 6
 768              		.cfi_restore 7
 861:rtos/uC-FS/Source/fs_unicode.c ****     }
 769              		.loc 1 861 16 view .LVU259
 770 0062 0020     		movs	r0, #0
 771              	.LVL85:
 861:rtos/uC-FS/Source/fs_unicode.c ****     }
 772              		.loc 1 861 16 view .LVU260
 773 0064 7047     		bx	lr
 774              	.LVL86:
 775              	.L52:
 866:rtos/uC-FS/Source/fs_unicode.c ****         }
 776              		.loc 1 866 20 view .LVU261
 777 0066 0020     		movs	r0, #0
 778              	.LVL87:
 927:rtos/uC-FS/Source/fs_unicode.c **** 
 779              		.loc 1 927 1 view .LVU262
 780 0068 7047     		bx	lr
 781              	.LVL88:
 782              	.L53:
 783              	.LCFI18:
 784              		.cfi_def_cfa_offset 16
 785              		.cfi_offset 4, -16
 786              		.cfi_offset 5, -12
 787              		.cfi_offset 6, -8
 788              		.cfi_offset 7, -4
 902:rtos/uC-FS/Source/fs_unicode.c ****     }
 789              		.loc 1 902 16 view .LVU263
 790 006a 0020     		movs	r0, #0
 791              	.LVL89:
 902:rtos/uC-FS/Source/fs_unicode.c ****     }
 792              		.loc 1 902 16 view .LVU264
 793 006c EFE7     		b	.L42
 794              	.LVL90:
 795              	.L54:
 909:rtos/uC-FS/Source/fs_unicode.c **** 
 796              		.loc 1 909 18 view .LVU265
 797 006e 0020     		movs	r0, #0
 798              	.LVL91:
 909:rtos/uC-FS/Source/fs_unicode.c **** 
 799              		.loc 1 909 18 view .LVU266
 800 0070 EDE7     		b	.L42
 801              	.LVL92:
 802              	.L55:
 914:rtos/uC-FS/Source/fs_unicode.c ****             } else {                                            /* If p1_str_next NULL, ...        
 803              		.loc 1 914 26 view .LVU267
 804 0072 0020     		movs	r0, #0
 805              	.LVL93:
 914:rtos/uC-FS/Source/fs_unicode.c ****             } else {                                            /* If p1_str_next NULL, ...        
 806              		.loc 1 914 26 view .LVU268
 807 0074 EBE7     		b	.L42
 808              		.cfi_endproc
ARM GAS  /tmp/cc4JYsWh.s 			page 75


 809              	.LFE7:
 811              		.section	.text.WC_StrCmp,"ax",%progbits
 812              		.align	1
 813              		.global	WC_StrCmp
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv4-sp-d16
 819              	WC_StrCmp:
 820              	.LVL94:
 821              	.LFB6:
 750:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S  cmp_val;
 822              		.loc 1 750 1 is_stmt 1 view -0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 0, uses_anonymous_args = 0
 750:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S  cmp_val;
 826              		.loc 1 750 1 is_stmt 0 view .LVU270
 827 0000 08B5     		push	{r3, lr}
 828              	.LCFI19:
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 3, -8
 831              		.cfi_offset 14, -4
 751:rtos/uC-FS/Source/fs_unicode.c **** 
 832              		.loc 1 751 5 is_stmt 1 view .LVU271
 754:rtos/uC-FS/Source/fs_unicode.c ****                           p2_str,
 833              		.loc 1 754 5 view .LVU272
 754:rtos/uC-FS/Source/fs_unicode.c ****                           p2_str,
 834              		.loc 1 754 15 is_stmt 0 view .LVU273
 835 0002 4FF0FF32 		mov	r2, #-1
 836 0006 FFF7FEFF 		bl	WC_StrCmp_N
 837              	.LVL95:
 758:rtos/uC-FS/Source/fs_unicode.c **** }
 838              		.loc 1 758 5 is_stmt 1 view .LVU274
 759:rtos/uC-FS/Source/fs_unicode.c **** 
 839              		.loc 1 759 1 is_stmt 0 view .LVU275
 840 000a 08BD     		pop	{r3, pc}
 841              		.cfi_endproc
 842              	.LFE6:
 844              		.section	.text.WC_StrChar_N,"ax",%progbits
 845              		.align	1
 846              		.global	WC_StrChar_N
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu fpv4-sp-d16
 852              	WC_StrChar_N:
 853              	.LVL96:
 854              	.LFB11:
1296:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 855              		.loc 1 1296 1 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
1297:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_srch;
 860              		.loc 1 1297 5 view .LVU277
ARM GAS  /tmp/cc4JYsWh.s 			page 76


1298:rtos/uC-FS/Source/fs_unicode.c **** 
 861              		.loc 1 1298 5 view .LVU278
1301:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 862              		.loc 1 1301 5 view .LVU279
1301:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 863              		.loc 1 1301 8 is_stmt 0 view .LVU280
 864 0000 0346     		mov	r3, r0
 865 0002 A0B1     		cbz	r0, .L69
1305:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 866              		.loc 1 1305 5 is_stmt 1 view .LVU281
1305:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 867              		.loc 1 1305 8 is_stmt 0 view .LVU282
 868 0004 A1B1     		cbz	r1, .L70
1296:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 869              		.loc 1 1296 1 view .LVU283
 870 0006 30B4     		push	{r4, r5}
 871              	.LCFI20:
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 4, -8
 874              		.cfi_offset 5, -4
1310:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next++;
 875              		.loc 1 1310 5 is_stmt 1 view .LVU284
 876              	.LVL97:
1311:rtos/uC-FS/Source/fs_unicode.c ****     len_srch  = 0u;
 877              		.loc 1 1311 5 view .LVU285
1311:rtos/uC-FS/Source/fs_unicode.c ****     len_srch  = 0u;
 878              		.loc 1 1311 14 is_stmt 0 view .LVU286
 879 0008 0230     		adds	r0, r0, #2
 880              	.LVL98:
1312:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != (CPU_WCHAR  *)0)      &&              /* Srch str until NULL ptr(s)  [see
 881              		.loc 1 1312 5 is_stmt 1 view .LVU287
1313:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr      != (CPU_WCHAR   )0)      &&              /* ... or NULL char            (see
 882              		.loc 1 1313 5 view .LVU288
1312:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != (CPU_WCHAR  *)0)      &&              /* Srch str until NULL ptr(s)  [see
 883              		.loc 1 1312 15 is_stmt 0 view .LVU289
 884 000a 0025     		movs	r5, #0
1313:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr      != (CPU_WCHAR   )0)      &&              /* ... or NULL char            (see
 885              		.loc 1 1313 11 view .LVU290
 886 000c 02E0     		b	.L66
 887              	.LVL99:
 888              	.L68:
1317:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next++;
 889              		.loc 1 1317 9 is_stmt 1 view .LVU291
1317:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next++;
 890              		.loc 1 1317 13 is_stmt 0 view .LVU292
 891 000e 0233     		adds	r3, r3, #2
 892              	.LVL100:
1318:rtos/uC-FS/Source/fs_unicode.c ****         len_srch++;
 893              		.loc 1 1318 9 is_stmt 1 view .LVU293
1318:rtos/uC-FS/Source/fs_unicode.c ****         len_srch++;
 894              		.loc 1 1318 18 is_stmt 0 view .LVU294
 895 0010 0230     		adds	r0, r0, #2
 896              	.LVL101:
1319:rtos/uC-FS/Source/fs_unicode.c ****     }
 897              		.loc 1 1319 9 is_stmt 1 view .LVU295
1319:rtos/uC-FS/Source/fs_unicode.c ****     }
 898              		.loc 1 1319 17 is_stmt 0 view .LVU296
ARM GAS  /tmp/cc4JYsWh.s 			page 77


 899 0012 0135     		adds	r5, r5, #1
 900              	.LVL102:
 901              	.L66:
1313:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr      != (CPU_WCHAR   )0)      &&              /* ... or NULL char            (see
 902              		.loc 1 1313 11 is_stmt 1 view .LVU297
 903 0014 28B1     		cbz	r0, .L67
1314:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr      != (CPU_WCHAR   )srch_char) &&           /* ... or srch char found      (see
 904              		.loc 1 1314 13 is_stmt 0 discriminator 1 view .LVU298
 905 0016 1C88     		ldrh	r4, [r3]
1313:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr      != (CPU_WCHAR   )0)      &&              /* ... or NULL char            (see
 906              		.loc 1 1313 49 discriminator 1 view .LVU299
 907 0018 1CB1     		cbz	r4, .L67
1314:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr      != (CPU_WCHAR   )srch_char) &&           /* ... or srch char found      (see
 908              		.loc 1 1314 49 view .LVU300
 909 001a 9442     		cmp	r4, r2
 910 001c 01D0     		beq	.L67
1315:rtos/uC-FS/Source/fs_unicode.c ****            ( len_srch  <  (CPU_SIZE_T  )len_max)) {             /* ... or max nbr chars srch'd (see
 911              		.loc 1 1315 52 view .LVU301
 912 001e 8D42     		cmp	r5, r1
 913 0020 F5D3     		bcc	.L68
 914              	.L67:
1323:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
 915              		.loc 1 1323 5 is_stmt 1 view .LVU302
1323:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
 916              		.loc 1 1323 9 is_stmt 0 view .LVU303
 917 0022 1988     		ldrh	r1, [r3]
 918              	.LVL103:
1323:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
 919              		.loc 1 1323 8 view .LVU304
 920 0024 9142     		cmp	r1, r2
 921 0026 05D1     		bne	.L71
1327:rtos/uC-FS/Source/fs_unicode.c **** }
 922              		.loc 1 1327 12 view .LVU305
 923 0028 1846     		mov	r0, r3
 924              	.LVL104:
 925              	.L64:
1328:rtos/uC-FS/Source/fs_unicode.c **** 
 926              		.loc 1 1328 1 view .LVU306
 927 002a 30BC     		pop	{r4, r5}
 928              	.LCFI21:
 929              		.cfi_restore 5
 930              		.cfi_restore 4
 931              		.cfi_def_cfa_offset 0
 932              	.LVL105:
1328:rtos/uC-FS/Source/fs_unicode.c **** 
 933              		.loc 1 1328 1 view .LVU307
 934 002c 7047     		bx	lr
 935              	.LVL106:
 936              	.L69:
1328:rtos/uC-FS/Source/fs_unicode.c **** 
 937              		.loc 1 1328 1 view .LVU308
 938 002e 7047     		bx	lr
 939              	.L70:
1306:rtos/uC-FS/Source/fs_unicode.c ****     }
 940              		.loc 1 1306 16 view .LVU309
 941 0030 0020     		movs	r0, #0
 942              	.LVL107:
ARM GAS  /tmp/cc4JYsWh.s 			page 78


1328:rtos/uC-FS/Source/fs_unicode.c **** 
 943              		.loc 1 1328 1 view .LVU310
 944 0032 7047     		bx	lr
 945              	.LVL108:
 946              	.L71:
 947              	.LCFI22:
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 4, -8
 950              		.cfi_offset 5, -4
1324:rtos/uC-FS/Source/fs_unicode.c ****     }
 951              		.loc 1 1324 17 view .LVU311
 952 0034 0020     		movs	r0, #0
 953              	.LVL109:
1324:rtos/uC-FS/Source/fs_unicode.c ****     }
 954              		.loc 1 1324 17 view .LVU312
 955 0036 F8E7     		b	.L64
 956              		.cfi_endproc
 957              	.LFE11:
 959              		.section	.text.WC_StrChar,"ax",%progbits
 960              		.align	1
 961              		.global	WC_StrChar
 962              		.syntax unified
 963              		.thumb
 964              		.thumb_func
 965              		.fpu fpv4-sp-d16
 967              	WC_StrChar:
 968              	.LVL110:
 969              	.LFB10:
1239:rtos/uC-FS/Source/fs_unicode.c ****     pstr = WC_StrChar_N(pstr,
 970              		.loc 1 1239 1 is_stmt 1 view -0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
1239:rtos/uC-FS/Source/fs_unicode.c ****     pstr = WC_StrChar_N(pstr,
 974              		.loc 1 1239 1 is_stmt 0 view .LVU314
 975 0000 08B5     		push	{r3, lr}
 976              	.LCFI23:
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 3, -8
 979              		.cfi_offset 14, -4
 980 0002 0A46     		mov	r2, r1
1240:rtos/uC-FS/Source/fs_unicode.c ****                         DEF_INT_CPU_U_MAX_VAL,
 981              		.loc 1 1240 5 is_stmt 1 view .LVU315
1240:rtos/uC-FS/Source/fs_unicode.c ****                         DEF_INT_CPU_U_MAX_VAL,
 982              		.loc 1 1240 12 is_stmt 0 view .LVU316
 983 0004 4FF0FF31 		mov	r1, #-1
 984              	.LVL111:
1240:rtos/uC-FS/Source/fs_unicode.c ****                         DEF_INT_CPU_U_MAX_VAL,
 985              		.loc 1 1240 12 view .LVU317
 986 0008 FFF7FEFF 		bl	WC_StrChar_N
 987              	.LVL112:
1244:rtos/uC-FS/Source/fs_unicode.c **** }
 988              		.loc 1 1244 5 is_stmt 1 view .LVU318
1245:rtos/uC-FS/Source/fs_unicode.c **** 
 989              		.loc 1 1245 1 is_stmt 0 view .LVU319
 990 000c 08BD     		pop	{r3, pc}
 991              		.cfi_endproc
ARM GAS  /tmp/cc4JYsWh.s 			page 79


 992              	.LFE10:
 994              		.section	.text.WC_StrChar_Last,"ax",%progbits
 995              		.align	1
 996              		.global	WC_StrChar_Last
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu fpv4-sp-d16
 1002              	WC_StrChar_Last:
 1003              	.LVL113:
 1004              	.LFB12:
1368:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 1005              		.loc 1 1368 1 is_stmt 1 view -0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
1368:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 1009              		.loc 1 1368 1 is_stmt 0 view .LVU321
 1010 0000 38B5     		push	{r3, r4, r5, lr}
 1011              	.LCFI24:
 1012              		.cfi_def_cfa_offset 16
 1013              		.cfi_offset 3, -16
 1014              		.cfi_offset 4, -12
 1015              		.cfi_offset 5, -8
 1016              		.cfi_offset 14, -4
1369:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   str_len;
 1017              		.loc 1 1369 5 is_stmt 1 view .LVU322
1370:rtos/uC-FS/Source/fs_unicode.c **** 
 1018              		.loc 1 1370 5 view .LVU323
1373:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1019              		.loc 1 1373 5 view .LVU324
1373:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1020              		.loc 1 1373 8 is_stmt 0 view .LVU325
 1021 0002 0546     		mov	r5, r0
 1022 0004 70B1     		cbz	r0, .L78
 1023 0006 0C46     		mov	r4, r1
1378:rtos/uC-FS/Source/fs_unicode.c ****     str_len    = WC_StrLen(pstr);
 1024              		.loc 1 1378 5 is_stmt 1 view .LVU326
 1025              	.LVL114:
1379:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next += str_len;
 1026              		.loc 1 1379 5 view .LVU327
1379:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next += str_len;
 1027              		.loc 1 1379 18 is_stmt 0 view .LVU328
 1028 0008 FFF7FEFF 		bl	WC_StrLen
 1029              	.LVL115:
1380:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != pstr) &&                              /* Srch str from end until beginnin
 1030              		.loc 1 1380 5 is_stmt 1 view .LVU329
1380:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != pstr) &&                              /* Srch str from end until beginnin
 1031              		.loc 1 1380 15 is_stmt 0 view .LVU330
 1032 000c 05EB4000 		add	r0, r5, r0, lsl #1
 1033              	.LVL116:
1381:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_next != srch_char)) {                         /* ... until srch char found       
 1034              		.loc 1 1381 5 is_stmt 1 view .LVU331
 1035              	.L80:
1381:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_next != srch_char)) {                         /* ... until srch char found       
 1036              		.loc 1 1381 11 view .LVU332
 1037 0010 A842     		cmp	r0, r5
ARM GAS  /tmp/cc4JYsWh.s 			page 80


 1038 0012 04D0     		beq	.L81
1382:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next--;
 1039              		.loc 1 1382 13 is_stmt 0 discriminator 1 view .LVU333
 1040 0014 0388     		ldrh	r3, [r0]
1381:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_next != srch_char)) {                         /* ... until srch char found       
 1041              		.loc 1 1381 33 discriminator 1 view .LVU334
 1042 0016 A342     		cmp	r3, r4
 1043 0018 01D0     		beq	.L81
1383:rtos/uC-FS/Source/fs_unicode.c ****     }
 1044              		.loc 1 1383 9 is_stmt 1 view .LVU335
1383:rtos/uC-FS/Source/fs_unicode.c ****     }
 1045              		.loc 1 1383 18 is_stmt 0 view .LVU336
 1046 001a 0238     		subs	r0, r0, #2
 1047              	.LVL117:
1383:rtos/uC-FS/Source/fs_unicode.c ****     }
 1048              		.loc 1 1383 18 view .LVU337
 1049 001c F8E7     		b	.L80
 1050              	.L81:
1387:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
 1051              		.loc 1 1387 5 is_stmt 1 view .LVU338
1387:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
 1052              		.loc 1 1387 9 is_stmt 0 view .LVU339
 1053 001e 0388     		ldrh	r3, [r0]
1387:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
 1054              		.loc 1 1387 8 view .LVU340
 1055 0020 A342     		cmp	r3, r4
 1056 0022 00D1     		bne	.L86
 1057              	.LVL118:
 1058              	.L78:
1392:rtos/uC-FS/Source/fs_unicode.c **** 
 1059              		.loc 1 1392 1 view .LVU341
 1060 0024 38BD     		pop	{r3, r4, r5, pc}
 1061              	.LVL119:
 1062              	.L86:
1388:rtos/uC-FS/Source/fs_unicode.c ****     }
 1063              		.loc 1 1388 17 view .LVU342
 1064 0026 0020     		movs	r0, #0
 1065              	.LVL120:
1388:rtos/uC-FS/Source/fs_unicode.c ****     }
 1066              		.loc 1 1388 17 view .LVU343
 1067 0028 FCE7     		b	.L78
 1068              		.cfi_endproc
 1069              	.LFE12:
 1071              		.section	.text.WC_StrChar_Last_N,"ax",%progbits
 1072              		.align	1
 1073              		.global	WC_StrChar_Last_N
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv4-sp-d16
 1079              	WC_StrChar_Last_N:
 1080              	.LVL121:
 1081              	.LFB13:
1433:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 1082              		.loc 1 1433 1 is_stmt 1 view -0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc4JYsWh.s 			page 81


 1085              		@ frame_needed = 0, uses_anonymous_args = 0
1433:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *pstr_next;
 1086              		.loc 1 1433 1 is_stmt 0 view .LVU345
 1087 0000 38B5     		push	{r3, r4, r5, lr}
 1088              	.LCFI25:
 1089              		.cfi_def_cfa_offset 16
 1090              		.cfi_offset 3, -16
 1091              		.cfi_offset 4, -12
 1092              		.cfi_offset 5, -8
 1093              		.cfi_offset 14, -4
1434:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   str_len;
 1094              		.loc 1 1434 5 is_stmt 1 view .LVU346
1435:rtos/uC-FS/Source/fs_unicode.c **** 
 1095              		.loc 1 1435 5 view .LVU347
1438:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1096              		.loc 1 1438 5 view .LVU348
1438:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1097              		.loc 1 1438 8 is_stmt 0 view .LVU349
 1098 0002 0546     		mov	r5, r0
 1099 0004 78B1     		cbz	r0, .L87
 1100 0006 0C46     		mov	r4, r1
 1101 0008 1146     		mov	r1, r2
 1102              	.LVL122:
1443:rtos/uC-FS/Source/fs_unicode.c ****     str_len    = WC_StrLen_N(pstr, len_max);
 1103              		.loc 1 1443 5 is_stmt 1 view .LVU350
1444:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next += str_len;
 1104              		.loc 1 1444 5 view .LVU351
1444:rtos/uC-FS/Source/fs_unicode.c ****     pstr_next += str_len;
 1105              		.loc 1 1444 18 is_stmt 0 view .LVU352
 1106 000a FFF7FEFF 		bl	WC_StrLen_N
 1107              	.LVL123:
1445:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != pstr) &&                              /* Srch str from end until beginnin
 1108              		.loc 1 1445 5 is_stmt 1 view .LVU353
1445:rtos/uC-FS/Source/fs_unicode.c ****     while (( pstr_next != pstr) &&                              /* Srch str from end until beginnin
 1109              		.loc 1 1445 15 is_stmt 0 view .LVU354
 1110 000e 05EB4000 		add	r0, r5, r0, lsl #1
 1111              	.LVL124:
1446:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_next != srch_char)) {                         /* ... until srch char found       
 1112              		.loc 1 1446 5 is_stmt 1 view .LVU355
 1113              	.L89:
1446:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_next != srch_char)) {                         /* ... until srch char found       
 1114              		.loc 1 1446 11 view .LVU356
 1115 0012 A842     		cmp	r0, r5
 1116 0014 04D0     		beq	.L90
1447:rtos/uC-FS/Source/fs_unicode.c ****         pstr_next--;
 1117              		.loc 1 1447 13 is_stmt 0 discriminator 1 view .LVU357
 1118 0016 0388     		ldrh	r3, [r0]
1446:rtos/uC-FS/Source/fs_unicode.c ****            (*pstr_next != srch_char)) {                         /* ... until srch char found       
 1119              		.loc 1 1446 33 discriminator 1 view .LVU358
 1120 0018 A342     		cmp	r3, r4
 1121 001a 01D0     		beq	.L90
1448:rtos/uC-FS/Source/fs_unicode.c ****     }
 1122              		.loc 1 1448 9 is_stmt 1 view .LVU359
1448:rtos/uC-FS/Source/fs_unicode.c ****     }
 1123              		.loc 1 1448 18 is_stmt 0 view .LVU360
 1124 001c 0238     		subs	r0, r0, #2
 1125              	.LVL125:
ARM GAS  /tmp/cc4JYsWh.s 			page 82


1448:rtos/uC-FS/Source/fs_unicode.c ****     }
 1126              		.loc 1 1448 18 view .LVU361
 1127 001e F8E7     		b	.L89
 1128              	.L90:
1452:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
 1129              		.loc 1 1452 5 is_stmt 1 view .LVU362
1452:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
 1130              		.loc 1 1452 9 is_stmt 0 view .LVU363
 1131 0020 0388     		ldrh	r3, [r0]
1452:rtos/uC-FS/Source/fs_unicode.c ****          return ((CPU_WCHAR *)0);                               /* ... rtn NULL (see Notes #2b & #2
 1132              		.loc 1 1452 8 view .LVU364
 1133 0022 A342     		cmp	r3, r4
 1134 0024 00D1     		bne	.L95
 1135              	.LVL126:
 1136              	.L87:
1457:rtos/uC-FS/Source/fs_unicode.c **** 
 1137              		.loc 1 1457 1 view .LVU365
 1138 0026 38BD     		pop	{r3, r4, r5, pc}
 1139              	.LVL127:
 1140              	.L95:
1453:rtos/uC-FS/Source/fs_unicode.c ****     }
 1141              		.loc 1 1453 17 view .LVU366
 1142 0028 0020     		movs	r0, #0
 1143              	.LVL128:
1453:rtos/uC-FS/Source/fs_unicode.c ****     }
 1144              		.loc 1 1453 17 view .LVU367
 1145 002a FCE7     		b	.L87
 1146              		.cfi_endproc
 1147              	.LFE13:
 1149              		.section	.text.WC_StrStr,"ax",%progbits
 1150              		.align	1
 1151              		.global	WC_StrStr
 1152              		.syntax unified
 1153              		.thumb
 1154              		.thumb_func
 1155              		.fpu fpv4-sp-d16
 1157              	WC_StrStr:
 1158              	.LVL129:
 1159              	.LFB14:
1500:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    str_len;
 1160              		.loc 1 1500 1 is_stmt 1 view -0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
1500:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    str_len;
 1164              		.loc 1 1500 1 is_stmt 0 view .LVU369
 1165 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1166              	.LCFI26:
 1167              		.cfi_def_cfa_offset 32
 1168              		.cfi_offset 3, -32
 1169              		.cfi_offset 4, -28
 1170              		.cfi_offset 5, -24
 1171              		.cfi_offset 6, -20
 1172              		.cfi_offset 7, -16
 1173              		.cfi_offset 8, -12
 1174              		.cfi_offset 9, -8
 1175              		.cfi_offset 14, -4
ARM GAS  /tmp/cc4JYsWh.s 			page 83


1501:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_str_len;
 1176              		.loc 1 1501 5 is_stmt 1 view .LVU370
1502:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_len;
 1177              		.loc 1 1502 5 view .LVU371
1503:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_ix;
 1178              		.loc 1 1503 5 view .LVU372
1504:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN   srch_done;
 1179              		.loc 1 1504 5 view .LVU373
1505:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S    srch_cmp;
 1180              		.loc 1 1505 5 view .LVU374
1506:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    *pstr_srch_ix;
 1181              		.loc 1 1506 5 view .LVU375
1507:rtos/uC-FS/Source/fs_unicode.c **** 
 1182              		.loc 1 1507 5 view .LVU376
1510:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1183              		.loc 1 1510 5 view .LVU377
1510:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1184              		.loc 1 1510 8 is_stmt 0 view .LVU378
 1185 0004 8146     		mov	r9, r0
 1186 0006 08B3     		cbz	r0, .L101
 1187 0008 0E46     		mov	r6, r1
1513:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1188              		.loc 1 1513 5 is_stmt 1 view .LVU379
1513:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1189              		.loc 1 1513 8 is_stmt 0 view .LVU380
 1190 000a 09B3     		cbz	r1, .L102
1518:rtos/uC-FS/Source/fs_unicode.c ****     srch_str_len = WC_StrLen(psrch_str);
 1191              		.loc 1 1518 5 is_stmt 1 view .LVU381
1518:rtos/uC-FS/Source/fs_unicode.c ****     srch_str_len = WC_StrLen(psrch_str);
 1192              		.loc 1 1518 20 is_stmt 0 view .LVU382
 1193 000c FFF7FEFF 		bl	WC_StrLen
 1194              	.LVL130:
1518:rtos/uC-FS/Source/fs_unicode.c ****     srch_str_len = WC_StrLen(psrch_str);
 1195              		.loc 1 1518 20 view .LVU383
 1196 0010 8046     		mov	r8, r0
 1197              	.LVL131:
1519:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len > str_len) {                               /* If srch str len > str len, rtn N
 1198              		.loc 1 1519 5 is_stmt 1 view .LVU384
1519:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len > str_len) {                               /* If srch str len > str len, rtn N
 1199              		.loc 1 1519 20 is_stmt 0 view .LVU385
 1200 0012 3046     		mov	r0, r6
 1201              	.LVL132:
1519:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len > str_len) {                               /* If srch str len > str len, rtn N
 1202              		.loc 1 1519 20 view .LVU386
 1203 0014 FFF7FEFF 		bl	WC_StrLen
 1204              	.LVL133:
 1205 0018 0746     		mov	r7, r0
 1206              	.LVL134:
1520:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1207              		.loc 1 1520 5 is_stmt 1 view .LVU387
1520:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1208              		.loc 1 1520 8 is_stmt 0 view .LVU388
 1209 001a 8045     		cmp	r8, r0
 1210 001c 1AD3     		bcc	.L103
1523:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix = pstr + str_len;                          /* ... rtn ptr to NULL str found in
 1211              		.loc 1 1523 5 is_stmt 1 view .LVU389
1523:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix = pstr + str_len;                          /* ... rtn ptr to NULL str found in
ARM GAS  /tmp/cc4JYsWh.s 			page 84


 1212              		.loc 1 1523 8 is_stmt 0 view .LVU390
 1213 001e 90B1     		cbz	r0, .L106
1528:rtos/uC-FS/Source/fs_unicode.c ****     srch_ix   = 0u;
 1214              		.loc 1 1528 5 is_stmt 1 view .LVU391
1528:rtos/uC-FS/Source/fs_unicode.c ****     srch_ix   = 0u;
 1215              		.loc 1 1528 15 is_stmt 0 view .LVU392
 1216 0020 A8EB0008 		sub	r8, r8, r0
 1217              	.LVL135:
1529:rtos/uC-FS/Source/fs_unicode.c ****     srch_done = DEF_NO;
 1218              		.loc 1 1529 5 is_stmt 1 view .LVU393
1530:rtos/uC-FS/Source/fs_unicode.c ****     do {
 1219              		.loc 1 1530 5 view .LVU394
1529:rtos/uC-FS/Source/fs_unicode.c ****     srch_done = DEF_NO;
 1220              		.loc 1 1529 15 is_stmt 0 view .LVU395
 1221 0024 0024     		movs	r4, #0
 1222              	.LVL136:
 1223              	.L100:
1531:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix =  pstr + srch_ix;
 1224              		.loc 1 1531 5 is_stmt 1 view .LVU396
1532:rtos/uC-FS/Source/fs_unicode.c ****         srch_cmp     =  WC_StrCmp_N(pstr_srch_ix, psrch_str, srch_str_len);
 1225              		.loc 1 1532 9 view .LVU397
1532:rtos/uC-FS/Source/fs_unicode.c ****         srch_cmp     =  WC_StrCmp_N(pstr_srch_ix, psrch_str, srch_str_len);
 1226              		.loc 1 1532 22 is_stmt 0 view .LVU398
 1227 0026 09EB4405 		add	r5, r9, r4, lsl #1
 1228              	.LVL137:
1533:rtos/uC-FS/Source/fs_unicode.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
 1229              		.loc 1 1533 9 is_stmt 1 view .LVU399
1533:rtos/uC-FS/Source/fs_unicode.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
 1230              		.loc 1 1533 25 is_stmt 0 view .LVU400
 1231 002a 3A46     		mov	r2, r7
 1232 002c 3146     		mov	r1, r6
 1233 002e 2846     		mov	r0, r5
 1234 0030 FFF7FEFF 		bl	WC_StrCmp_N
 1235              	.LVL138:
1534:rtos/uC-FS/Source/fs_unicode.c ****         srch_ix++;
 1236              		.loc 1 1534 9 is_stmt 1 view .LVU401
1534:rtos/uC-FS/Source/fs_unicode.c ****         srch_ix++;
 1237              		.loc 1 1534 22 is_stmt 0 view .LVU402
 1238 0034 0346     		mov	r3, r0
 1239 0036 10B1     		cbz	r0, .L99
1535:rtos/uC-FS/Source/fs_unicode.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
 1240              		.loc 1 1535 9 is_stmt 1 view .LVU403
1535:rtos/uC-FS/Source/fs_unicode.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
 1241              		.loc 1 1535 16 is_stmt 0 view .LVU404
 1242 0038 0134     		adds	r4, r4, #1
 1243              	.LVL139:
1536:rtos/uC-FS/Source/fs_unicode.c **** 
 1244              		.loc 1 1536 13 is_stmt 1 view .LVU405
1536:rtos/uC-FS/Source/fs_unicode.c **** 
 1245              		.loc 1 1536 36 is_stmt 0 view .LVU406
 1246 003a A045     		cmp	r8, r4
 1247 003c F3D2     		bcs	.L100
 1248              	.L99:
 1249              	.LVL140:
1539:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1250              		.loc 1 1539 5 is_stmt 1 view .LVU407
1539:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
ARM GAS  /tmp/cc4JYsWh.s 			page 85


 1251              		.loc 1 1539 8 is_stmt 0 view .LVU408
 1252 003e 5BB9     		cbnz	r3, .L107
 1253              	.LVL141:
 1254              	.L96:
1544:rtos/uC-FS/Source/fs_unicode.c **** 
 1255              		.loc 1 1544 1 view .LVU409
 1256 0040 2846     		mov	r0, r5
 1257 0042 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1258              	.LVL142:
 1259              	.L106:
1524:rtos/uC-FS/Source/fs_unicode.c ****         return (pstr_srch_ix);
 1260              		.loc 1 1524 9 is_stmt 1 view .LVU410
1524:rtos/uC-FS/Source/fs_unicode.c ****         return (pstr_srch_ix);
 1261              		.loc 1 1524 22 is_stmt 0 view .LVU411
 1262 0046 09EB4805 		add	r5, r9, r8, lsl #1
 1263              	.LVL143:
1525:rtos/uC-FS/Source/fs_unicode.c ****     }
 1264              		.loc 1 1525 9 is_stmt 1 view .LVU412
1525:rtos/uC-FS/Source/fs_unicode.c ****     }
 1265              		.loc 1 1525 16 is_stmt 0 view .LVU413
 1266 004a F9E7     		b	.L96
 1267              	.LVL144:
 1268              	.L101:
1511:rtos/uC-FS/Source/fs_unicode.c ****     }
 1269              		.loc 1 1511 16 view .LVU414
 1270 004c 0546     		mov	r5, r0
 1271 004e F7E7     		b	.L96
 1272              	.L102:
1514:rtos/uC-FS/Source/fs_unicode.c ****     }
 1273              		.loc 1 1514 16 view .LVU415
 1274 0050 0D46     		mov	r5, r1
 1275 0052 F5E7     		b	.L96
 1276              	.LVL145:
 1277              	.L103:
1521:rtos/uC-FS/Source/fs_unicode.c ****     }
 1278              		.loc 1 1521 16 view .LVU416
 1279 0054 0025     		movs	r5, #0
 1280 0056 F3E7     		b	.L96
 1281              	.LVL146:
 1282              	.L107:
1540:rtos/uC-FS/Source/fs_unicode.c ****     }
 1283              		.loc 1 1540 16 view .LVU417
 1284 0058 0025     		movs	r5, #0
 1285              	.LVL147:
1540:rtos/uC-FS/Source/fs_unicode.c ****     }
 1286              		.loc 1 1540 16 view .LVU418
 1287 005a F1E7     		b	.L96
 1288              		.cfi_endproc
 1289              	.LFE14:
 1291              		.section	.text.WC_StrStr_N,"ax",%progbits
 1292              		.align	1
 1293              		.global	WC_StrStr_N
 1294              		.syntax unified
 1295              		.thumb
 1296              		.thumb_func
 1297              		.fpu fpv4-sp-d16
 1299              	WC_StrStr_N:
ARM GAS  /tmp/cc4JYsWh.s 			page 86


 1300              	.LVL148:
 1301              	.LFB15:
1594:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    str_len;
 1302              		.loc 1 1594 1 is_stmt 1 view -0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 0
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
1594:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    str_len;
 1306              		.loc 1 1594 1 is_stmt 0 view .LVU420
 1307 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1308              	.LCFI27:
 1309              		.cfi_def_cfa_offset 32
 1310              		.cfi_offset 3, -32
 1311              		.cfi_offset 4, -28
 1312              		.cfi_offset 5, -24
 1313              		.cfi_offset 6, -20
 1314              		.cfi_offset 7, -16
 1315              		.cfi_offset 8, -12
 1316              		.cfi_offset 9, -8
 1317              		.cfi_offset 14, -4
1595:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_str_len;
 1318              		.loc 1 1595 5 is_stmt 1 view .LVU421
1596:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    len_max_srch;
 1319              		.loc 1 1596 5 view .LVU422
1597:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_len;
 1320              		.loc 1 1597 5 view .LVU423
1598:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T    srch_ix;
 1321              		.loc 1 1598 5 view .LVU424
1599:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN   srch_done;
 1322              		.loc 1 1599 5 view .LVU425
1600:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S    srch_cmp;
 1323              		.loc 1 1600 5 view .LVU426
1601:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    *pstr_srch_ix;
 1324              		.loc 1 1601 5 view .LVU427
1602:rtos/uC-FS/Source/fs_unicode.c **** 
 1325              		.loc 1 1602 5 view .LVU428
1605:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1326              		.loc 1 1605 5 view .LVU429
1605:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1327              		.loc 1 1605 8 is_stmt 0 view .LVU430
 1328 0004 8146     		mov	r9, r0
 1329 0006 58B3     		cbz	r0, .L114
 1330 0008 0E46     		mov	r6, r1
 1331 000a 1146     		mov	r1, r2
 1332              	.LVL149:
1608:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1333              		.loc 1 1608 5 is_stmt 1 view .LVU431
1608:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1334              		.loc 1 1608 8 is_stmt 0 view .LVU432
 1335 000c 56B3     		cbz	r6, .L115
1612:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1336              		.loc 1 1612 5 is_stmt 1 view .LVU433
1612:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1337              		.loc 1 1612 8 is_stmt 0 view .LVU434
 1338 000e 5AB3     		cbz	r2, .L116
1617:rtos/uC-FS/Source/fs_unicode.c ****                  ? (len_max + 1u) : DEF_INT_CPU_U_MAX_VAL;
 1339              		.loc 1 1617 5 is_stmt 1 view .LVU435
ARM GAS  /tmp/cc4JYsWh.s 			page 87


1618:rtos/uC-FS/Source/fs_unicode.c **** 
 1340              		.loc 1 1618 35 is_stmt 0 view .LVU436
 1341 0010 B2F1FF3F 		cmp	r2, #-1
 1342 0014 1FD0     		beq	.L117
1618:rtos/uC-FS/Source/fs_unicode.c **** 
 1343              		.loc 1 1618 35 discriminator 1 view .LVU437
 1344 0016 541C     		adds	r4, r2, #1
 1345              	.L110:
 1346              	.LVL150:
1620:rtos/uC-FS/Source/fs_unicode.c ****     srch_str_len = WC_StrLen_N(psrch_str, len_max_srch);
 1347              		.loc 1 1620 5 is_stmt 1 view .LVU438
1620:rtos/uC-FS/Source/fs_unicode.c ****     srch_str_len = WC_StrLen_N(psrch_str, len_max_srch);
 1348              		.loc 1 1620 20 is_stmt 0 view .LVU439
 1349 0018 4846     		mov	r0, r9
 1350              	.LVL151:
1620:rtos/uC-FS/Source/fs_unicode.c ****     srch_str_len = WC_StrLen_N(psrch_str, len_max_srch);
 1351              		.loc 1 1620 20 view .LVU440
 1352 001a FFF7FEFF 		bl	WC_StrLen_N
 1353              	.LVL152:
1620:rtos/uC-FS/Source/fs_unicode.c ****     srch_str_len = WC_StrLen_N(psrch_str, len_max_srch);
 1354              		.loc 1 1620 20 view .LVU441
 1355 001e 8046     		mov	r8, r0
 1356              	.LVL153:
1621:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len > str_len) {                               /* If srch str len > str len, rtn N
 1357              		.loc 1 1621 5 is_stmt 1 view .LVU442
1621:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len > str_len) {                               /* If srch str len > str len, rtn N
 1358              		.loc 1 1621 20 is_stmt 0 view .LVU443
 1359 0020 2146     		mov	r1, r4
 1360 0022 3046     		mov	r0, r6
 1361              	.LVL154:
1621:rtos/uC-FS/Source/fs_unicode.c ****     if (srch_str_len > str_len) {                               /* If srch str len > str len, rtn N
 1362              		.loc 1 1621 20 view .LVU444
 1363 0024 FFF7FEFF 		bl	WC_StrLen_N
 1364              	.LVL155:
 1365 0028 0746     		mov	r7, r0
 1366              	.LVL156:
1622:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1367              		.loc 1 1622 5 is_stmt 1 view .LVU445
1622:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1368              		.loc 1 1622 8 is_stmt 0 view .LVU446
 1369 002a 8045     		cmp	r8, r0
 1370 002c 1ED3     		bcc	.L118
1625:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix = pstr + str_len;                          /* ... rtn ptr to NULL str found in
 1371              		.loc 1 1625 5 is_stmt 1 view .LVU447
1625:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix = pstr + str_len;                          /* ... rtn ptr to NULL str found in
 1372              		.loc 1 1625 8 is_stmt 0 view .LVU448
 1373 002e A0B1     		cbz	r0, .L121
1630:rtos/uC-FS/Source/fs_unicode.c ****     srch_ix   = 0u;
 1374              		.loc 1 1630 5 is_stmt 1 view .LVU449
1630:rtos/uC-FS/Source/fs_unicode.c ****     srch_ix   = 0u;
 1375              		.loc 1 1630 15 is_stmt 0 view .LVU450
 1376 0030 A8EB0008 		sub	r8, r8, r0
 1377              	.LVL157:
1631:rtos/uC-FS/Source/fs_unicode.c ****     srch_done = DEF_NO;
 1378              		.loc 1 1631 5 is_stmt 1 view .LVU451
1632:rtos/uC-FS/Source/fs_unicode.c ****     do {
 1379              		.loc 1 1632 5 view .LVU452
ARM GAS  /tmp/cc4JYsWh.s 			page 88


1631:rtos/uC-FS/Source/fs_unicode.c ****     srch_done = DEF_NO;
 1380              		.loc 1 1631 15 is_stmt 0 view .LVU453
 1381 0034 0024     		movs	r4, #0
 1382              	.LVL158:
 1383              	.L113:
1633:rtos/uC-FS/Source/fs_unicode.c ****         pstr_srch_ix =  pstr + srch_ix;
 1384              		.loc 1 1633 5 is_stmt 1 view .LVU454
1634:rtos/uC-FS/Source/fs_unicode.c ****         srch_cmp     =  WC_StrCmp_N(pstr_srch_ix, psrch_str, srch_str_len);
 1385              		.loc 1 1634 9 view .LVU455
1634:rtos/uC-FS/Source/fs_unicode.c ****         srch_cmp     =  WC_StrCmp_N(pstr_srch_ix, psrch_str, srch_str_len);
 1386              		.loc 1 1634 22 is_stmt 0 view .LVU456
 1387 0036 09EB4405 		add	r5, r9, r4, lsl #1
 1388              	.LVL159:
1635:rtos/uC-FS/Source/fs_unicode.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
 1389              		.loc 1 1635 9 is_stmt 1 view .LVU457
1635:rtos/uC-FS/Source/fs_unicode.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
 1390              		.loc 1 1635 25 is_stmt 0 view .LVU458
 1391 003a 3A46     		mov	r2, r7
 1392 003c 3146     		mov	r1, r6
 1393 003e 2846     		mov	r0, r5
 1394 0040 FFF7FEFF 		bl	WC_StrCmp_N
 1395              	.LVL160:
1636:rtos/uC-FS/Source/fs_unicode.c ****         srch_ix++;
 1396              		.loc 1 1636 9 is_stmt 1 view .LVU459
1636:rtos/uC-FS/Source/fs_unicode.c ****         srch_ix++;
 1397              		.loc 1 1636 22 is_stmt 0 view .LVU460
 1398 0044 0346     		mov	r3, r0
 1399 0046 10B1     		cbz	r0, .L112
1637:rtos/uC-FS/Source/fs_unicode.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
 1400              		.loc 1 1637 9 is_stmt 1 view .LVU461
1637:rtos/uC-FS/Source/fs_unicode.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
 1401              		.loc 1 1637 16 is_stmt 0 view .LVU462
 1402 0048 0134     		adds	r4, r4, #1
 1403              	.LVL161:
1638:rtos/uC-FS/Source/fs_unicode.c **** 
 1404              		.loc 1 1638 13 is_stmt 1 view .LVU463
1638:rtos/uC-FS/Source/fs_unicode.c **** 
 1405              		.loc 1 1638 36 is_stmt 0 view .LVU464
 1406 004a A045     		cmp	r8, r4
 1407 004c F3D2     		bcs	.L113
 1408              	.L112:
 1409              	.LVL162:
1641:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1410              		.loc 1 1641 5 is_stmt 1 view .LVU465
1641:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_WCHAR *)0);
 1411              		.loc 1 1641 8 is_stmt 0 view .LVU466
 1412 004e 7BB9     		cbnz	r3, .L122
 1413              	.LVL163:
 1414              	.L108:
1646:rtos/uC-FS/Source/fs_unicode.c **** 
 1415              		.loc 1 1646 1 view .LVU467
 1416 0050 2846     		mov	r0, r5
 1417 0052 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1418              	.LVL164:
 1419              	.L117:
1618:rtos/uC-FS/Source/fs_unicode.c **** 
 1420              		.loc 1 1618 35 view .LVU468
ARM GAS  /tmp/cc4JYsWh.s 			page 89


 1421 0056 1446     		mov	r4, r2
 1422 0058 DEE7     		b	.L110
 1423              	.LVL165:
 1424              	.L121:
1626:rtos/uC-FS/Source/fs_unicode.c ****         return (pstr_srch_ix);
 1425              		.loc 1 1626 9 is_stmt 1 view .LVU469
1626:rtos/uC-FS/Source/fs_unicode.c ****         return (pstr_srch_ix);
 1426              		.loc 1 1626 22 is_stmt 0 view .LVU470
 1427 005a 09EB4805 		add	r5, r9, r8, lsl #1
 1428              	.LVL166:
1627:rtos/uC-FS/Source/fs_unicode.c ****     }
 1429              		.loc 1 1627 9 is_stmt 1 view .LVU471
1627:rtos/uC-FS/Source/fs_unicode.c ****     }
 1430              		.loc 1 1627 16 is_stmt 0 view .LVU472
 1431 005e F7E7     		b	.L108
 1432              	.LVL167:
 1433              	.L114:
1606:rtos/uC-FS/Source/fs_unicode.c ****     }
 1434              		.loc 1 1606 16 view .LVU473
 1435 0060 0546     		mov	r5, r0
 1436 0062 F5E7     		b	.L108
 1437              	.LVL168:
 1438              	.L115:
1609:rtos/uC-FS/Source/fs_unicode.c ****     }
 1439              		.loc 1 1609 16 view .LVU474
 1440 0064 3546     		mov	r5, r6
 1441 0066 F3E7     		b	.L108
 1442              	.L116:
1613:rtos/uC-FS/Source/fs_unicode.c ****     }
 1443              		.loc 1 1613 16 view .LVU475
 1444 0068 0025     		movs	r5, #0
 1445 006a F1E7     		b	.L108
 1446              	.LVL169:
 1447              	.L118:
1623:rtos/uC-FS/Source/fs_unicode.c ****     }
 1448              		.loc 1 1623 16 view .LVU476
 1449 006c 0025     		movs	r5, #0
 1450 006e EFE7     		b	.L108
 1451              	.LVL170:
 1452              	.L122:
1642:rtos/uC-FS/Source/fs_unicode.c ****     }
 1453              		.loc 1 1642 16 view .LVU477
 1454 0070 0025     		movs	r5, #0
 1455              	.LVL171:
1642:rtos/uC-FS/Source/fs_unicode.c ****     }
 1456              		.loc 1 1642 16 view .LVU478
 1457 0072 EDE7     		b	.L108
 1458              		.cfi_endproc
 1459              	.LFE15:
 1461              		.section	.text.WC_CharIsAlpha,"ax",%progbits
 1462              		.align	1
 1463              		.global	WC_CharIsAlpha
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1467              		.fpu fpv4-sp-d16
 1469              	WC_CharIsAlpha:
ARM GAS  /tmp/cc4JYsWh.s 			page 90


 1470              	.LVL172:
 1471              	.LFB16:
1674:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha;
 1472              		.loc 1 1674 1 is_stmt 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 1476              		@ link register save eliminated.
1674:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha;
 1477              		.loc 1 1674 1 is_stmt 0 view .LVU480
 1478 0000 0246     		mov	r2, r0
1675:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_lo;
 1479              		.loc 1 1675 5 is_stmt 1 view .LVU481
1676:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_mid;
 1480              		.loc 1 1676 5 view .LVU482
1677:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_hi;
 1481              		.loc 1 1677 5 view .LVU483
1678:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_start;
 1482              		.loc 1 1678 5 view .LVU484
1679:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_end;
 1483              		.loc 1 1679 5 view .LVU485
1680:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  found;
 1484              		.loc 1 1680 5 view .LVU486
1681:rtos/uC-FS/Source/fs_unicode.c **** 
 1485              		.loc 1 1681 5 view .LVU487
1684:rtos/uC-FS/Source/fs_unicode.c ****         alpha = ASCII_IS_ALPHA((CPU_CHAR)c);                    /* ... determine whether char is AS
 1486              		.loc 1 1684 5 view .LVU488
1684:rtos/uC-FS/Source/fs_unicode.c ****         alpha = ASCII_IS_ALPHA((CPU_CHAR)c);                    /* ... determine whether char is AS
 1487              		.loc 1 1684 8 is_stmt 0 view .LVU489
 1488 0002 7F28     		cmp	r0, #127
 1489 0004 1FD8     		bhi	.L130
1685:rtos/uC-FS/Source/fs_unicode.c **** 
 1490              		.loc 1 1685 9 is_stmt 1 view .LVU490
1685:rtos/uC-FS/Source/fs_unicode.c **** 
 1491              		.loc 1 1685 17 is_stmt 0 view .LVU491
 1492 0006 C2B2     		uxtb	r2, r0
 1493 0008 A2F14103 		sub	r3, r2, #65
 1494 000c DBB2     		uxtb	r3, r3
1685:rtos/uC-FS/Source/fs_unicode.c **** 
 1495              		.loc 1 1685 15 view .LVU492
 1496 000e 192B     		cmp	r3, #25
 1497 0010 24D9     		bls	.L131
1685:rtos/uC-FS/Source/fs_unicode.c **** 
 1498              		.loc 1 1685 17 discriminator 2 view .LVU493
 1499 0012 613A     		subs	r2, r2, #97
 1500 0014 D2B2     		uxtb	r2, r2
 1501 0016 192A     		cmp	r2, #25
 1502 0018 22D8     		bhi	.L132
1685:rtos/uC-FS/Source/fs_unicode.c **** 
 1503              		.loc 1 1685 15 view .LVU494
 1504 001a 0120     		movs	r0, #1
 1505              	.LVL173:
1685:rtos/uC-FS/Source/fs_unicode.c **** 
 1506              		.loc 1 1685 15 view .LVU495
 1507 001c 7047     		bx	lr
 1508              	.LVL174:
 1509              	.L126:
ARM GAS  /tmp/cc4JYsWh.s 			page 91


 1510              	.LCFI28:
 1511              		.cfi_def_cfa_offset 16
 1512              		.cfi_offset 4, -16
 1513              		.cfi_offset 5, -12
 1514              		.cfi_offset 6, -8
 1515              		.cfi_offset 7, -4
1711:rtos/uC-FS/Source/fs_unicode.c ****                 ix_lo = ix_mid + 1u;                            /* ... make midpoint lo val.       
 1516              		.loc 1 1711 20 is_stmt 1 view .LVU496
1711:rtos/uC-FS/Source/fs_unicode.c ****                 ix_lo = ix_mid + 1u;                            /* ... make midpoint lo val.       
 1517              		.loc 1 1711 23 is_stmt 0 view .LVU497
 1518 001e 8A42     		cmp	r2, r1
 1519 0020 0FD2     		bcs	.L133
1715:rtos/uC-FS/Source/fs_unicode.c ****             }
 1520              		.loc 1 1715 23 view .LVU498
 1521 0022 0120     		movs	r0, #1
 1522              	.LVL175:
 1523              	.L124:
1700:rtos/uC-FS/Source/fs_unicode.c ****                (found == DEF_NO)) {                             /* ... & range not found           
 1524              		.loc 1 1700 15 is_stmt 1 view .LVU499
 1525 0024 A542     		cmp	r5, r4
 1526 0026 14D8     		bhi	.L128
1700:rtos/uC-FS/Source/fs_unicode.c ****                (found == DEF_NO)) {                             /* ... & range not found           
 1527              		.loc 1 1700 33 is_stmt 0 discriminator 1 view .LVU500
 1528 0028 98B9     		cbnz	r0, .L128
1704:rtos/uC-FS/Source/fs_unicode.c ****             c_start =  WC_CharIsAlphaTbl[ix_mid];
 1529              		.loc 1 1704 13 is_stmt 1 view .LVU501
1704:rtos/uC-FS/Source/fs_unicode.c ****             c_start =  WC_CharIsAlphaTbl[ix_mid];
 1530              		.loc 1 1704 30 is_stmt 0 view .LVU502
 1531 002a 2B19     		adds	r3, r5, r4
 1532              	.LVL176:
1704:rtos/uC-FS/Source/fs_unicode.c ****             c_start =  WC_CharIsAlphaTbl[ix_mid];
 1533              		.loc 1 1704 21 view .LVU503
 1534 002c 5B08     		lsrs	r3, r3, #1
 1535              	.LVL177:
1705:rtos/uC-FS/Source/fs_unicode.c ****             c_end   =  WC_CharIsAlphaTbl[ix_mid + 1u];
 1536              		.loc 1 1705 13 is_stmt 1 view .LVU504
1705:rtos/uC-FS/Source/fs_unicode.c ****             c_end   =  WC_CharIsAlphaTbl[ix_mid + 1u];
 1537              		.loc 1 1705 21 is_stmt 0 view .LVU505
 1538 002e 0D49     		ldr	r1, .L137
 1539 0030 31F81370 		ldrh	r7, [r1, r3, lsl #1]
 1540              	.LVL178:
1706:rtos/uC-FS/Source/fs_unicode.c **** 
 1541              		.loc 1 1706 13 is_stmt 1 view .LVU506
1706:rtos/uC-FS/Source/fs_unicode.c **** 
 1542              		.loc 1 1706 49 is_stmt 0 view .LVU507
 1543 0034 5E1C     		adds	r6, r3, #1
1706:rtos/uC-FS/Source/fs_unicode.c **** 
 1544              		.loc 1 1706 21 view .LVU508
 1545 0036 31F81610 		ldrh	r1, [r1, r6, lsl #1]
 1546              	.LVL179:
1708:rtos/uC-FS/Source/fs_unicode.c ****                 ix_hi = ix_mid - 1u;                            /* ... make midpoint hi val.       
 1547              		.loc 1 1708 13 is_stmt 1 view .LVU509
1708:rtos/uC-FS/Source/fs_unicode.c ****                 ix_hi = ix_mid - 1u;                            /* ... make midpoint hi val.       
 1548              		.loc 1 1708 16 is_stmt 0 view .LVU510
 1549 003a BA42     		cmp	r2, r7
 1550 003c EFD2     		bcs	.L126
1709:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 92


 1551              		.loc 1 1709 17 is_stmt 1 view .LVU511
1709:rtos/uC-FS/Source/fs_unicode.c **** 
 1552              		.loc 1 1709 23 is_stmt 0 view .LVU512
 1553 003e 5C1E     		subs	r4, r3, #1
 1554              	.LVL180:
1709:rtos/uC-FS/Source/fs_unicode.c **** 
 1555              		.loc 1 1709 23 view .LVU513
 1556 0040 F0E7     		b	.L124
 1557              	.L133:
1712:rtos/uC-FS/Source/fs_unicode.c **** 
 1558              		.loc 1 1712 23 view .LVU514
 1559 0042 3546     		mov	r5, r6
 1560              	.LVL181:
1712:rtos/uC-FS/Source/fs_unicode.c **** 
 1561              		.loc 1 1712 23 view .LVU515
 1562 0044 EEE7     		b	.L124
 1563              	.LVL182:
 1564              	.L130:
 1565              	.LCFI29:
 1566              		.cfi_def_cfa_offset 0
 1567              		.cfi_restore 4
 1568              		.cfi_restore 5
 1569              		.cfi_restore 6
 1570              		.cfi_restore 7
1674:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha;
 1571              		.loc 1 1674 1 view .LVU516
 1572 0046 F0B4     		push	{r4, r5, r6, r7}
 1573              	.LCFI30:
 1574              		.cfi_def_cfa_offset 16
 1575              		.cfi_offset 4, -16
 1576              		.cfi_offset 5, -12
 1577              		.cfi_offset 6, -8
 1578              		.cfi_offset 7, -4
1696:rtos/uC-FS/Source/fs_unicode.c ****         ix_lo = 0u;
 1579              		.loc 1 1696 15 view .LVU517
 1580 0048 0020     		movs	r0, #0
 1581              	.LVL183:
1698:rtos/uC-FS/Source/fs_unicode.c **** 
 1582              		.loc 1 1698 15 view .LVU518
 1583 004a 40F2F624 		movw	r4, #758
1697:rtos/uC-FS/Source/fs_unicode.c ****         ix_hi = (sizeof(WC_CharIsAlphaTbl) / sizeof(CPU_WCHAR)) - 2u;
 1584              		.loc 1 1697 15 view .LVU519
 1585 004e 0546     		mov	r5, r0
 1586 0050 E8E7     		b	.L124
 1587              	.LVL184:
 1588              	.L128:
1720:rtos/uC-FS/Source/fs_unicode.c ****             alpha =  DEF_NO;                                    /* ... rtn NULL.                   
 1589              		.loc 1 1720 9 is_stmt 1 view .LVU520
1720:rtos/uC-FS/Source/fs_unicode.c ****             alpha =  DEF_NO;                                    /* ... rtn NULL.                   
 1590              		.loc 1 1720 12 is_stmt 0 view .LVU521
 1591 0052 08B1     		cbz	r0, .L125
1725:rtos/uC-FS/Source/fs_unicode.c ****         }
 1592              		.loc 1 1725 13 is_stmt 1 view .LVU522
1725:rtos/uC-FS/Source/fs_unicode.c ****         }
 1593              		.loc 1 1725 52 is_stmt 0 view .LVU523
 1594 0054 03F00100 		and	r0, r3, #1
 1595              	.LVL185:
ARM GAS  /tmp/cc4JYsWh.s 			page 93


 1596              	.L125:
1729:rtos/uC-FS/Source/fs_unicode.c **** }
 1597              		.loc 1 1729 5 is_stmt 1 view .LVU524
1730:rtos/uC-FS/Source/fs_unicode.c **** 
 1598              		.loc 1 1730 1 is_stmt 0 view .LVU525
 1599 0058 F0BC     		pop	{r4, r5, r6, r7}
 1600              	.LCFI31:
 1601              		.cfi_restore 7
 1602              		.cfi_restore 6
 1603              		.cfi_restore 5
 1604              		.cfi_restore 4
 1605              		.cfi_def_cfa_offset 0
 1606              	.LVL186:
1730:rtos/uC-FS/Source/fs_unicode.c **** 
 1607              		.loc 1 1730 1 view .LVU526
 1608 005a 7047     		bx	lr
 1609              	.LVL187:
 1610              	.L131:
1685:rtos/uC-FS/Source/fs_unicode.c **** 
 1611              		.loc 1 1685 15 view .LVU527
 1612 005c 0120     		movs	r0, #1
 1613              	.LVL188:
1685:rtos/uC-FS/Source/fs_unicode.c **** 
 1614              		.loc 1 1685 15 view .LVU528
 1615 005e 7047     		bx	lr
 1616              	.LVL189:
 1617              	.L132:
1685:rtos/uC-FS/Source/fs_unicode.c **** 
 1618              		.loc 1 1685 15 view .LVU529
 1619 0060 0020     		movs	r0, #0
 1620              	.LVL190:
1729:rtos/uC-FS/Source/fs_unicode.c **** }
 1621              		.loc 1 1729 5 is_stmt 1 view .LVU530
1730:rtos/uC-FS/Source/fs_unicode.c **** 
 1622              		.loc 1 1730 1 is_stmt 0 view .LVU531
 1623 0062 7047     		bx	lr
 1624              	.L138:
 1625              		.align	2
 1626              	.L137:
 1627 0064 00000000 		.word	.LANCHOR0
 1628              		.cfi_endproc
 1629              	.LFE16:
 1631              		.section	.text.WC_CharIsDig,"ax",%progbits
 1632              		.align	1
 1633              		.global	WC_CharIsDig
 1634              		.syntax unified
 1635              		.thumb
 1636              		.thumb_func
 1637              		.fpu fpv4-sp-d16
 1639              	WC_CharIsDig:
 1640              	.LVL191:
 1641              	.LFB20:
1980:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  dig;
 1642              		.loc 1 1980 1 is_stmt 1 view -0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc4JYsWh.s 			page 94


 1646              		@ link register save eliminated.
1981:rtos/uC-FS/Source/fs_unicode.c **** 
 1647              		.loc 1 1981 5 view .LVU533
1984:rtos/uC-FS/Source/fs_unicode.c ****         dig = ASCII_IS_DIG((CPU_CHAR)c);                        /* ... determine whether char is AS
 1648              		.loc 1 1984 5 view .LVU534
1984:rtos/uC-FS/Source/fs_unicode.c ****         dig = ASCII_IS_DIG((CPU_CHAR)c);                        /* ... determine whether char is AS
 1649              		.loc 1 1984 8 is_stmt 0 view .LVU535
 1650 0000 7F28     		cmp	r0, #127
 1651 0002 06D8     		bhi	.L140
1985:rtos/uC-FS/Source/fs_unicode.c **** 
 1652              		.loc 1 1985 9 is_stmt 1 view .LVU536
1985:rtos/uC-FS/Source/fs_unicode.c **** 
 1653              		.loc 1 1985 15 is_stmt 0 view .LVU537
 1654 0004 C0B2     		uxtb	r0, r0
 1655              	.LVL192:
1985:rtos/uC-FS/Source/fs_unicode.c **** 
 1656              		.loc 1 1985 15 view .LVU538
 1657 0006 3038     		subs	r0, r0, #48
 1658 0008 C0B2     		uxtb	r0, r0
1985:rtos/uC-FS/Source/fs_unicode.c **** 
 1659              		.loc 1 1985 13 view .LVU539
 1660 000a 0928     		cmp	r0, #9
 1661 000c 07D8     		bhi	.L142
 1662 000e 0120     		movs	r0, #1
 1663 0010 7047     		bx	lr
 1664              	.LVL193:
 1665              	.L140:
1989:rtos/uC-FS/Source/fs_unicode.c ****     }
 1666              		.loc 1 1989 9 is_stmt 1 view .LVU540
1989:rtos/uC-FS/Source/fs_unicode.c ****     }
 1667              		.loc 1 1989 52 is_stmt 0 view .LVU541
 1668 0012 F030     		adds	r0, r0, #240
 1669              	.LVL194:
1989:rtos/uC-FS/Source/fs_unicode.c ****     }
 1670              		.loc 1 1989 52 view .LVU542
 1671 0014 80B2     		uxth	r0, r0
1989:rtos/uC-FS/Source/fs_unicode.c ****     }
 1672              		.loc 1 1989 13 view .LVU543
 1673 0016 0928     		cmp	r0, #9
 1674 0018 03D8     		bhi	.L143
 1675 001a 0120     		movs	r0, #1
 1676 001c 7047     		bx	lr
 1677              	.L142:
1985:rtos/uC-FS/Source/fs_unicode.c **** 
 1678              		.loc 1 1985 13 view .LVU544
 1679 001e 0020     		movs	r0, #0
 1680 0020 7047     		bx	lr
 1681              	.L143:
1989:rtos/uC-FS/Source/fs_unicode.c ****     }
 1682              		.loc 1 1989 13 view .LVU545
 1683 0022 0020     		movs	r0, #0
 1684              	.LVL195:
1992:rtos/uC-FS/Source/fs_unicode.c **** }
 1685              		.loc 1 1992 5 is_stmt 1 view .LVU546
1993:rtos/uC-FS/Source/fs_unicode.c **** 
 1686              		.loc 1 1993 1 is_stmt 0 view .LVU547
 1687 0024 7047     		bx	lr
ARM GAS  /tmp/cc4JYsWh.s 			page 95


 1688              		.cfi_endproc
 1689              	.LFE20:
 1691              		.section	.text.WC_CharIsAlphaNum,"ax",%progbits
 1692              		.align	1
 1693              		.global	WC_CharIsAlphaNum
 1694              		.syntax unified
 1695              		.thumb
 1696              		.thumb_func
 1697              		.fpu fpv4-sp-d16
 1699              	WC_CharIsAlphaNum:
 1700              	.LVL196:
 1701              	.LFB17:
1750:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha_num;
 1702              		.loc 1 1750 1 is_stmt 1 view -0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 0, uses_anonymous_args = 0
1750:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha_num;
 1706              		.loc 1 1750 1 is_stmt 0 view .LVU549
 1707 0000 10B5     		push	{r4, lr}
 1708              	.LCFI32:
 1709              		.cfi_def_cfa_offset 8
 1710              		.cfi_offset 4, -8
 1711              		.cfi_offset 14, -4
 1712 0002 0446     		mov	r4, r0
1751:rtos/uC-FS/Source/fs_unicode.c **** 
 1713              		.loc 1 1751 5 is_stmt 1 view .LVU550
1754:rtos/uC-FS/Source/fs_unicode.c ****         alpha_num = ASCII_IS_ALPHA_NUM((CPU_CHAR)c);            /* ... determine whether char is AS
 1714              		.loc 1 1754 5 view .LVU551
1754:rtos/uC-FS/Source/fs_unicode.c ****         alpha_num = ASCII_IS_ALPHA_NUM((CPU_CHAR)c);            /* ... determine whether char is AS
 1715              		.loc 1 1754 8 is_stmt 0 view .LVU552
 1716 0004 7F28     		cmp	r0, #127
 1717 0006 10D8     		bhi	.L145
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1718              		.loc 1 1755 9 is_stmt 1 view .LVU553
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1719              		.loc 1 1755 21 is_stmt 0 view .LVU554
 1720 0008 C4B2     		uxtb	r4, r0
 1721 000a A4F14103 		sub	r3, r4, #65
 1722 000e DBB2     		uxtb	r3, r3
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1723              		.loc 1 1755 19 view .LVU555
 1724 0010 192B     		cmp	r3, #25
 1725 0012 12D9     		bls	.L147
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1726              		.loc 1 1755 21 discriminator 2 view .LVU556
 1727 0014 A4F16103 		sub	r3, r4, #97
 1728 0018 DBB2     		uxtb	r3, r3
 1729 001a 192B     		cmp	r3, #25
 1730 001c 0FD9     		bls	.L148
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1731              		.loc 1 1755 21 discriminator 4 view .LVU557
 1732 001e 303C     		subs	r4, r4, #48
 1733 0020 E4B2     		uxtb	r4, r4
 1734 0022 092C     		cmp	r4, #9
 1735 0024 0DD8     		bhi	.L149
1755:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 96


 1736              		.loc 1 1755 19 view .LVU558
 1737 0026 0120     		movs	r0, #1
 1738              	.LVL197:
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1739              		.loc 1 1755 19 view .LVU559
 1740 0028 02E0     		b	.L146
 1741              	.LVL198:
 1742              	.L145:
1759:rtos/uC-FS/Source/fs_unicode.c ****         if (alpha_num == DEF_NO) {                              /* If char is NOT dig ...          
 1743              		.loc 1 1759 9 is_stmt 1 view .LVU560
1759:rtos/uC-FS/Source/fs_unicode.c ****         if (alpha_num == DEF_NO) {                              /* If char is NOT dig ...          
 1744              		.loc 1 1759 21 is_stmt 0 view .LVU561
 1745 002a FFF7FEFF 		bl	WC_CharIsDig
 1746              	.LVL199:
1760:rtos/uC-FS/Source/fs_unicode.c ****             alpha_num =  WC_CharIsAlpha(c);                     /* ... test if char is alpha char. 
 1747              		.loc 1 1760 9 is_stmt 1 view .LVU562
1760:rtos/uC-FS/Source/fs_unicode.c ****             alpha_num =  WC_CharIsAlpha(c);                     /* ... test if char is alpha char. 
 1748              		.loc 1 1760 12 is_stmt 0 view .LVU563
 1749 002e 00B1     		cbz	r0, .L151
 1750              	.LVL200:
 1751              	.L146:
1765:rtos/uC-FS/Source/fs_unicode.c **** }
 1752              		.loc 1 1765 5 is_stmt 1 view .LVU564
1766:rtos/uC-FS/Source/fs_unicode.c **** 
 1753              		.loc 1 1766 1 is_stmt 0 view .LVU565
 1754 0030 10BD     		pop	{r4, pc}
 1755              	.L151:
1761:rtos/uC-FS/Source/fs_unicode.c ****         }
 1756              		.loc 1 1761 13 is_stmt 1 view .LVU566
1761:rtos/uC-FS/Source/fs_unicode.c ****         }
 1757              		.loc 1 1761 26 is_stmt 0 view .LVU567
 1758 0032 2046     		mov	r0, r4
 1759              	.LVL201:
1761:rtos/uC-FS/Source/fs_unicode.c ****         }
 1760              		.loc 1 1761 26 view .LVU568
 1761 0034 FFF7FEFF 		bl	WC_CharIsAlpha
 1762              	.LVL202:
1761:rtos/uC-FS/Source/fs_unicode.c ****         }
 1763              		.loc 1 1761 26 view .LVU569
 1764 0038 FAE7     		b	.L146
 1765              	.LVL203:
 1766              	.L147:
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1767              		.loc 1 1755 19 view .LVU570
 1768 003a 0120     		movs	r0, #1
 1769              	.LVL204:
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1770              		.loc 1 1755 19 view .LVU571
 1771 003c F8E7     		b	.L146
 1772              	.LVL205:
 1773              	.L148:
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1774              		.loc 1 1755 19 view .LVU572
 1775 003e 0120     		movs	r0, #1
 1776              	.LVL206:
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1777              		.loc 1 1755 19 view .LVU573
ARM GAS  /tmp/cc4JYsWh.s 			page 97


 1778 0040 F6E7     		b	.L146
 1779              	.LVL207:
 1780              	.L149:
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1781              		.loc 1 1755 19 view .LVU574
 1782 0042 0020     		movs	r0, #0
 1783              	.LVL208:
1755:rtos/uC-FS/Source/fs_unicode.c **** 
 1784              		.loc 1 1755 19 view .LVU575
 1785 0044 F4E7     		b	.L146
 1786              		.cfi_endproc
 1787              	.LFE17:
 1789              		.section	.text.WC_CharIsDigOct,"ax",%progbits
 1790              		.align	1
 1791              		.global	WC_CharIsDigOct
 1792              		.syntax unified
 1793              		.thumb
 1794              		.thumb_func
 1795              		.fpu fpv4-sp-d16
 1797              	WC_CharIsDigOct:
 1798              	.LVL209:
 1799              	.LFB21:
2013:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  dig_oct;
 1800              		.loc 1 2013 1 is_stmt 1 view -0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 0
 1803              		@ frame_needed = 0, uses_anonymous_args = 0
 1804              		@ link register save eliminated.
2014:rtos/uC-FS/Source/fs_unicode.c **** 
 1805              		.loc 1 2014 5 view .LVU577
2017:rtos/uC-FS/Source/fs_unicode.c ****         dig_oct = ASCII_IS_DIG_OCT((CPU_CHAR)c);                /* ... determine whether char is AS
 1806              		.loc 1 2017 5 view .LVU578
2017:rtos/uC-FS/Source/fs_unicode.c ****         dig_oct = ASCII_IS_DIG_OCT((CPU_CHAR)c);                /* ... determine whether char is AS
 1807              		.loc 1 2017 8 is_stmt 0 view .LVU579
 1808 0000 7F28     		cmp	r0, #127
 1809 0002 06D8     		bhi	.L153
2018:rtos/uC-FS/Source/fs_unicode.c **** 
 1810              		.loc 1 2018 9 is_stmt 1 view .LVU580
2018:rtos/uC-FS/Source/fs_unicode.c **** 
 1811              		.loc 1 2018 19 is_stmt 0 view .LVU581
 1812 0004 C0B2     		uxtb	r0, r0
 1813              	.LVL210:
2018:rtos/uC-FS/Source/fs_unicode.c **** 
 1814              		.loc 1 2018 19 view .LVU582
 1815 0006 3038     		subs	r0, r0, #48
 1816 0008 C0B2     		uxtb	r0, r0
2018:rtos/uC-FS/Source/fs_unicode.c **** 
 1817              		.loc 1 2018 17 view .LVU583
 1818 000a 0728     		cmp	r0, #7
 1819 000c 07D8     		bhi	.L155
 1820 000e 0120     		movs	r0, #1
 1821 0010 7047     		bx	lr
 1822              	.LVL211:
 1823              	.L153:
2022:rtos/uC-FS/Source/fs_unicode.c ****     }
 1824              		.loc 1 2022 9 is_stmt 1 view .LVU584
2022:rtos/uC-FS/Source/fs_unicode.c ****     }
ARM GAS  /tmp/cc4JYsWh.s 			page 98


 1825              		.loc 1 2022 56 is_stmt 0 view .LVU585
 1826 0012 F030     		adds	r0, r0, #240
 1827              	.LVL212:
2022:rtos/uC-FS/Source/fs_unicode.c ****     }
 1828              		.loc 1 2022 56 view .LVU586
 1829 0014 80B2     		uxth	r0, r0
2022:rtos/uC-FS/Source/fs_unicode.c ****     }
 1830              		.loc 1 2022 17 view .LVU587
 1831 0016 0728     		cmp	r0, #7
 1832 0018 03D8     		bhi	.L156
 1833 001a 0120     		movs	r0, #1
 1834 001c 7047     		bx	lr
 1835              	.L155:
2018:rtos/uC-FS/Source/fs_unicode.c **** 
 1836              		.loc 1 2018 17 view .LVU588
 1837 001e 0020     		movs	r0, #0
 1838 0020 7047     		bx	lr
 1839              	.L156:
2022:rtos/uC-FS/Source/fs_unicode.c ****     }
 1840              		.loc 1 2022 17 view .LVU589
 1841 0022 0020     		movs	r0, #0
 1842              	.LVL213:
2025:rtos/uC-FS/Source/fs_unicode.c **** }
 1843              		.loc 1 2025 5 is_stmt 1 view .LVU590
2026:rtos/uC-FS/Source/fs_unicode.c **** 
 1844              		.loc 1 2026 1 is_stmt 0 view .LVU591
 1845 0024 7047     		bx	lr
 1846              		.cfi_endproc
 1847              	.LFE21:
 1849              		.section	.text.WC_CharIsDigHex,"ax",%progbits
 1850              		.align	1
 1851              		.global	WC_CharIsDigHex
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1855              		.fpu fpv4-sp-d16
 1857              	WC_CharIsDigHex:
 1858              	.LVL214:
 1859              	.LFB22:
2046:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  dig_hex;
 1860              		.loc 1 2046 1 is_stmt 1 view -0
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 0
 1863              		@ frame_needed = 0, uses_anonymous_args = 0
 1864              		@ link register save eliminated.
2047:rtos/uC-FS/Source/fs_unicode.c **** 
 1865              		.loc 1 2047 5 view .LVU593
2050:rtos/uC-FS/Source/fs_unicode.c ****         dig_hex = ASCII_IS_DIG_HEX((CPU_CHAR)c);                /* ... determine whether char is AS
 1866              		.loc 1 2050 5 view .LVU594
2050:rtos/uC-FS/Source/fs_unicode.c ****         dig_hex = ASCII_IS_DIG_HEX((CPU_CHAR)c);                /* ... determine whether char is AS
 1867              		.loc 1 2050 8 is_stmt 0 view .LVU595
 1868 0000 7F28     		cmp	r0, #127
 1869 0002 10D8     		bhi	.L158
2051:rtos/uC-FS/Source/fs_unicode.c **** 
 1870              		.loc 1 2051 9 is_stmt 1 view .LVU596
2051:rtos/uC-FS/Source/fs_unicode.c **** 
 1871              		.loc 1 2051 19 is_stmt 0 view .LVU597
ARM GAS  /tmp/cc4JYsWh.s 			page 99


 1872 0004 C0B2     		uxtb	r0, r0
 1873              	.LVL215:
2051:rtos/uC-FS/Source/fs_unicode.c **** 
 1874              		.loc 1 2051 19 view .LVU598
 1875 0006 A0F13003 		sub	r3, r0, #48
 1876 000a DBB2     		uxtb	r3, r3
2051:rtos/uC-FS/Source/fs_unicode.c **** 
 1877              		.loc 1 2051 17 view .LVU599
 1878 000c 092B     		cmp	r3, #9
 1879 000e 1AD9     		bls	.L160
2051:rtos/uC-FS/Source/fs_unicode.c **** 
 1880              		.loc 1 2051 19 discriminator 2 view .LVU600
 1881 0010 A0F14103 		sub	r3, r0, #65
 1882 0014 DBB2     		uxtb	r3, r3
 1883 0016 052B     		cmp	r3, #5
 1884 0018 17D9     		bls	.L161
2051:rtos/uC-FS/Source/fs_unicode.c **** 
 1885              		.loc 1 2051 19 discriminator 4 view .LVU601
 1886 001a 6138     		subs	r0, r0, #97
 1887 001c C0B2     		uxtb	r0, r0
 1888 001e 0528     		cmp	r0, #5
 1889 0020 15D8     		bhi	.L162
2051:rtos/uC-FS/Source/fs_unicode.c **** 
 1890              		.loc 1 2051 17 view .LVU602
 1891 0022 0120     		movs	r0, #1
 1892 0024 7047     		bx	lr
 1893              	.LVL216:
 1894              	.L158:
2055:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
 1895              		.loc 1 2055 9 is_stmt 1 view .LVU603
2055:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
 1896              		.loc 1 2055 62 is_stmt 0 view .LVU604
 1897 0026 00F1F003 		add	r3, r0, #240
 1898 002a 9BB2     		uxth	r3, r3
2055:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
 1899              		.loc 1 2055 17 view .LVU605
 1900 002c 092B     		cmp	r3, #9
 1901 002e 10D9     		bls	.L163
2056:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_LOWER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_LOW
 1902              		.loc 1 2056 62 discriminator 2 view .LVU606
 1903 0030 00F1DF03 		add	r3, r0, #223
 1904 0034 9BB2     		uxth	r3, r3
2055:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
 1905              		.loc 1 2055 107 discriminator 2 view .LVU607
 1906 0036 052B     		cmp	r3, #5
 1907 0038 0DD9     		bls	.L164
2057:rtos/uC-FS/Source/fs_unicode.c ****     }
 1908              		.loc 1 2057 62 view .LVU608
 1909 003a BF30     		adds	r0, r0, #191
 1910              	.LVL217:
2057:rtos/uC-FS/Source/fs_unicode.c ****     }
 1911              		.loc 1 2057 62 view .LVU609
 1912 003c 80B2     		uxth	r0, r0
2056:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_LOWER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_LOW
 1913              		.loc 1 2056 107 view .LVU610
 1914 003e 0528     		cmp	r0, #5
 1915 0040 0BD8     		bhi	.L165
ARM GAS  /tmp/cc4JYsWh.s 			page 100


2055:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
 1916              		.loc 1 2055 17 view .LVU611
 1917 0042 0120     		movs	r0, #1
 1918 0044 7047     		bx	lr
 1919              	.L160:
2051:rtos/uC-FS/Source/fs_unicode.c **** 
 1920              		.loc 1 2051 17 view .LVU612
 1921 0046 0120     		movs	r0, #1
 1922 0048 7047     		bx	lr
 1923              	.L161:
 1924 004a 0120     		movs	r0, #1
 1925 004c 7047     		bx	lr
 1926              	.L162:
 1927 004e 0020     		movs	r0, #0
 1928 0050 7047     		bx	lr
 1929              	.LVL218:
 1930              	.L163:
2055:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
 1931              		.loc 1 2055 17 view .LVU613
 1932 0052 0120     		movs	r0, #1
 1933              	.LVL219:
2055:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
 1934              		.loc 1 2055 17 view .LVU614
 1935 0054 7047     		bx	lr
 1936              	.LVL220:
 1937              	.L164:
2055:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
 1938              		.loc 1 2055 17 view .LVU615
 1939 0056 0120     		movs	r0, #1
 1940              	.LVL221:
2055:rtos/uC-FS/Source/fs_unicode.c ****                    (((c) >= WC_CHAR_FULLWIDTH_LATIN_UPPER_A) && ((c) <= WC_CHAR_FULLWIDTH_LATIN_UPP
 1941              		.loc 1 2055 17 view .LVU616
 1942 0058 7047     		bx	lr
 1943              	.L165:
 1944 005a 0020     		movs	r0, #0
 1945              	.LVL222:
2060:rtos/uC-FS/Source/fs_unicode.c **** }
 1946              		.loc 1 2060 5 is_stmt 1 view .LVU617
2061:rtos/uC-FS/Source/fs_unicode.c **** 
 1947              		.loc 1 2061 1 is_stmt 0 view .LVU618
 1948 005c 7047     		bx	lr
 1949              		.cfi_endproc
 1950              	.LFE22:
 1952              		.section	.text.WC_CharIsSpace,"ax",%progbits
 1953              		.align	1
 1954              		.global	WC_CharIsSpace
 1955              		.syntax unified
 1956              		.thumb
 1957              		.thumb_func
 1958              		.fpu fpv4-sp-d16
 1960              	WC_CharIsSpace:
 1961              	.LVL223:
 1962              	.LFB23:
2081:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  space;
 1963              		.loc 1 2081 1 is_stmt 1 view -0
 1964              		.cfi_startproc
 1965              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc4JYsWh.s 			page 101


 1966              		@ frame_needed = 0, uses_anonymous_args = 0
 1967              		@ link register save eliminated.
2082:rtos/uC-FS/Source/fs_unicode.c **** 
 1968              		.loc 1 2082 5 view .LVU620
2085:rtos/uC-FS/Source/fs_unicode.c ****         space = ASCII_IS_SPACE((CPU_CHAR)c);                    /* ... determine whether char is AS
 1969              		.loc 1 2085 5 view .LVU621
2085:rtos/uC-FS/Source/fs_unicode.c ****         space = ASCII_IS_SPACE((CPU_CHAR)c);                    /* ... determine whether char is AS
 1970              		.loc 1 2085 8 is_stmt 0 view .LVU622
 1971 0000 7F28     		cmp	r0, #127
 1972 0002 10D8     		bhi	.L167
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 1973              		.loc 1 2086 9 is_stmt 1 view .LVU623
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 1974              		.loc 1 2086 17 is_stmt 0 view .LVU624
 1975 0004 C0B2     		uxtb	r0, r0
 1976              	.LVL224:
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 1977              		.loc 1 2086 15 view .LVU625
 1978 0006 2028     		cmp	r0, #32
 1979 0008 30D0     		beq	.L169
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 1980              		.loc 1 2086 17 discriminator 2 view .LVU626
 1981 000a 0D28     		cmp	r0, #13
 1982 000c 30D0     		beq	.L170
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 1983              		.loc 1 2086 17 discriminator 4 view .LVU627
 1984 000e 0A28     		cmp	r0, #10
 1985 0010 30D0     		beq	.L171
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 1986              		.loc 1 2086 17 discriminator 6 view .LVU628
 1987 0012 0C28     		cmp	r0, #12
 1988 0014 30D0     		beq	.L172
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 1989              		.loc 1 2086 17 discriminator 8 view .LVU629
 1990 0016 0928     		cmp	r0, #9
 1991 0018 30D0     		beq	.L173
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 1992              		.loc 1 2086 17 discriminator 10 view .LVU630
 1993 001a 0B28     		cmp	r0, #11
 1994 001c 01D0     		beq	.L184
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 1995              		.loc 1 2086 15 view .LVU631
 1996 001e 0020     		movs	r0, #0
 1997 0020 7047     		bx	lr
 1998              	.L184:
 1999 0022 0120     		movs	r0, #1
 2000 0024 7047     		bx	lr
 2001              	.LVL225:
 2002              	.L167:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2003              		.loc 1 2090 9 is_stmt 1 view .LVU632
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2004              		.loc 1 2090 15 is_stmt 0 view .LVU633
 2005 0026 A028     		cmp	r0, #160
 2006 0028 2AD0     		beq	.L175
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2007              		.loc 1 2090 61 discriminator 2 view .LVU634
ARM GAS  /tmp/cc4JYsWh.s 			page 102


 2008 002a B0F5B45F 		cmp	r0, #5760
 2009 002e 29D0     		beq	.L176
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2010              		.loc 1 2090 105 discriminator 4 view .LVU635
 2011 0030 41F60E03 		movw	r3, #6158
 2012 0034 9842     		cmp	r0, r3
 2013 0036 27D0     		beq	.L177
2091:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_PARAGRAPH_SEPARATOR      )  || (c == WC_CHAR_PARAGRAPH_SEPARATOR   
 2014              		.loc 1 2091 61 view .LVU636
 2015 0038 42F22803 		movw	r3, #8232
 2016 003c 9842     		cmp	r0, r3
 2017 003e 25D0     		beq	.L178
2092:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_NARROW_NO_BREAK_SPACE    )  || (c == WC_CHAR_MEDIUM_MATHEMATICAL_SP
 2018              		.loc 1 2092 61 view .LVU637
 2019 0040 42F22903 		movw	r3, #8233
 2020 0044 9842     		cmp	r0, r3
 2021 0046 23D0     		beq	.L179
2092:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_NARROW_NO_BREAK_SPACE    )  || (c == WC_CHAR_MEDIUM_MATHEMATICAL_SP
 2022              		.loc 1 2092 105 discriminator 1 view .LVU638
 2023 0048 42F22F03 		movw	r3, #8239
 2024 004c 9842     		cmp	r0, r3
 2025 004e 21D0     		beq	.L180
2093:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_IDEOGRAPHIC_SPACE        ))                                        
 2026              		.loc 1 2093 61 view .LVU639
 2027 0050 42F25F03 		movw	r3, #8287
 2028 0054 9842     		cmp	r0, r3
 2029 0056 1FD0     		beq	.L181
2093:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_IDEOGRAPHIC_SPACE        ))                                        
 2030              		.loc 1 2093 105 discriminator 1 view .LVU640
 2031 0058 B0F5405F 		cmp	r0, #12288
 2032 005c 1ED0     		beq	.L182
2095:rtos/uC-FS/Source/fs_unicode.c ****     }
 2033              		.loc 1 2095 61 view .LVU641
 2034 005e A0F50050 		sub	r0, r0, #8192
 2035              	.LVL226:
2095:rtos/uC-FS/Source/fs_unicode.c ****     }
 2036              		.loc 1 2095 61 view .LVU642
 2037 0062 80B2     		uxth	r0, r0
2094:rtos/uC-FS/Source/fs_unicode.c ****                  ((c >= WC_CHAR_EN_QUAD                  )  && (c <= WC_CHAR_HAIR_SPACE            
 2038              		.loc 1 2094 105 view .LVU643
 2039 0064 0A28     		cmp	r0, #10
 2040 0066 1BD8     		bhi	.L183
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2041              		.loc 1 2090 15 view .LVU644
 2042 0068 0120     		movs	r0, #1
 2043 006a 7047     		bx	lr
 2044              	.L169:
2086:rtos/uC-FS/Source/fs_unicode.c **** 
 2045              		.loc 1 2086 15 view .LVU645
 2046 006c 0120     		movs	r0, #1
 2047 006e 7047     		bx	lr
 2048              	.L170:
 2049 0070 0120     		movs	r0, #1
 2050 0072 7047     		bx	lr
 2051              	.L171:
 2052 0074 0120     		movs	r0, #1
 2053 0076 7047     		bx	lr
ARM GAS  /tmp/cc4JYsWh.s 			page 103


 2054              	.L172:
 2055 0078 0120     		movs	r0, #1
 2056 007a 7047     		bx	lr
 2057              	.L173:
 2058 007c 0120     		movs	r0, #1
 2059 007e 7047     		bx	lr
 2060              	.LVL227:
 2061              	.L175:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2062              		.loc 1 2090 15 view .LVU646
 2063 0080 0120     		movs	r0, #1
 2064              	.LVL228:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2065              		.loc 1 2090 15 view .LVU647
 2066 0082 7047     		bx	lr
 2067              	.LVL229:
 2068              	.L176:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2069              		.loc 1 2090 15 view .LVU648
 2070 0084 0120     		movs	r0, #1
 2071              	.LVL230:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2072              		.loc 1 2090 15 view .LVU649
 2073 0086 7047     		bx	lr
 2074              	.LVL231:
 2075              	.L177:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2076              		.loc 1 2090 15 view .LVU650
 2077 0088 0120     		movs	r0, #1
 2078              	.LVL232:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2079              		.loc 1 2090 15 view .LVU651
 2080 008a 7047     		bx	lr
 2081              	.LVL233:
 2082              	.L178:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2083              		.loc 1 2090 15 view .LVU652
 2084 008c 0120     		movs	r0, #1
 2085              	.LVL234:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2086              		.loc 1 2090 15 view .LVU653
 2087 008e 7047     		bx	lr
 2088              	.LVL235:
 2089              	.L179:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2090              		.loc 1 2090 15 view .LVU654
 2091 0090 0120     		movs	r0, #1
 2092              	.LVL236:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2093              		.loc 1 2090 15 view .LVU655
 2094 0092 7047     		bx	lr
 2095              	.LVL237:
 2096              	.L180:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2097              		.loc 1 2090 15 view .LVU656
 2098 0094 0120     		movs	r0, #1
 2099              	.LVL238:
ARM GAS  /tmp/cc4JYsWh.s 			page 104


2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2100              		.loc 1 2090 15 view .LVU657
 2101 0096 7047     		bx	lr
 2102              	.LVL239:
 2103              	.L181:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2104              		.loc 1 2090 15 view .LVU658
 2105 0098 0120     		movs	r0, #1
 2106              	.LVL240:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2107              		.loc 1 2090 15 view .LVU659
 2108 009a 7047     		bx	lr
 2109              	.LVL241:
 2110              	.L182:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2111              		.loc 1 2090 15 view .LVU660
 2112 009c 0120     		movs	r0, #1
 2113              	.LVL242:
2090:rtos/uC-FS/Source/fs_unicode.c ****                   (c == WC_CHAR_MONGOLIAN_VOWEL_SEPARATOR)  || (c == WC_CHAR_LINE_SEPARATOR        
 2114              		.loc 1 2090 15 view .LVU661
 2115 009e 7047     		bx	lr
 2116              	.L183:
 2117 00a0 0020     		movs	r0, #0
 2118              	.LVL243:
2098:rtos/uC-FS/Source/fs_unicode.c **** }
 2119              		.loc 1 2098 5 is_stmt 1 view .LVU662
2099:rtos/uC-FS/Source/fs_unicode.c **** 
 2120              		.loc 1 2099 1 is_stmt 0 view .LVU663
 2121 00a2 7047     		bx	lr
 2122              		.cfi_endproc
 2123              	.LFE23:
 2125              		.section	.text.WC_CharToLower,"ax",%progbits
 2126              		.align	1
 2127              		.global	WC_CharToLower
 2128              		.syntax unified
 2129              		.thumb
 2130              		.thumb_func
 2131              		.fpu fpv4-sp-d16
 2133              	WC_CharToLower:
 2134              	.LVL244:
 2135              	.LFB24:
2133:rtos/uC-FS/Source/fs_unicode.c ****            CPU_CHAR            lower_ascii;
 2136              		.loc 1 2133 1 is_stmt 1 view -0
 2137              		.cfi_startproc
 2138              		@ args = 0, pretend = 0, frame = 0
 2139              		@ frame_needed = 0, uses_anonymous_args = 0
2133:rtos/uC-FS/Source/fs_unicode.c ****            CPU_CHAR            lower_ascii;
 2140              		.loc 1 2133 1 is_stmt 0 view .LVU665
 2141 0000 10B5     		push	{r4, lr}
 2142              	.LCFI33:
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 4, -8
 2145              		.cfi_offset 14, -4
 2146 0002 0446     		mov	r4, r0
2134:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           lower;
 2147              		.loc 1 2134 12 is_stmt 1 view .LVU666
2135:rtos/uC-FS/Source/fs_unicode.c ****            CPU_INT32S          diff;
ARM GAS  /tmp/cc4JYsWh.s 			page 105


 2148              		.loc 1 2135 12 view .LVU667
2136:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           c_start;
 2149              		.loc 1 2136 12 view .LVU668
2137:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_start_even;
 2150              		.loc 1 2137 12 view .LVU669
2138:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_even;
 2151              		.loc 1 2138 12 view .LVU670
2139:rtos/uC-FS/Source/fs_unicode.c ****     const  WC_SRCH_TBL_ENTRY  *ptbl_entry;
 2152              		.loc 1 2139 12 view .LVU671
2140:rtos/uC-FS/Source/fs_unicode.c **** 
 2153              		.loc 1 2140 5 view .LVU672
2143:rtos/uC-FS/Source/fs_unicode.c ****         lower_ascii =  ASCII_TO_LOWER((CPU_CHAR)c);
 2154              		.loc 1 2143 5 view .LVU673
2143:rtos/uC-FS/Source/fs_unicode.c ****         lower_ascii =  ASCII_TO_LOWER((CPU_CHAR)c);
 2155              		.loc 1 2143 8 is_stmt 0 view .LVU674
 2156 0004 7F28     		cmp	r0, #127
 2157 0006 0AD8     		bhi	.L186
2144:rtos/uC-FS/Source/fs_unicode.c ****         lower       = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2158              		.loc 1 2144 9 is_stmt 1 view .LVU675
2144:rtos/uC-FS/Source/fs_unicode.c ****         lower       = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2159              		.loc 1 2144 24 is_stmt 0 view .LVU676
 2160 0008 C0B2     		uxtb	r0, r0
 2161              	.LVL245:
2144:rtos/uC-FS/Source/fs_unicode.c ****         lower       = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2162              		.loc 1 2144 24 view .LVU677
 2163 000a A0F14103 		sub	r3, r0, #65
 2164 000e DBB2     		uxtb	r3, r3
2144:rtos/uC-FS/Source/fs_unicode.c ****         lower       = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2165              		.loc 1 2144 21 view .LVU678
 2166 0010 192B     		cmp	r3, #25
 2167 0012 02D8     		bhi	.L187
2144:rtos/uC-FS/Source/fs_unicode.c ****         lower       = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2168              		.loc 1 2144 21 discriminator 1 view .LVU679
 2169 0014 00F12004 		add	r4, r0, #32
 2170 0018 E0B2     		uxtb	r0, r4
 2171              	.L187:
 2172              	.LVL246:
2145:rtos/uC-FS/Source/fs_unicode.c ****         return (lower);
 2173              		.loc 1 2145 9 is_stmt 1 discriminator 4 view .LVU680
2145:rtos/uC-FS/Source/fs_unicode.c ****         return (lower);
 2174              		.loc 1 2145 21 is_stmt 0 discriminator 4 view .LVU681
 2175 001a 80B2     		uxth	r0, r0
 2176              	.LVL247:
2146:rtos/uC-FS/Source/fs_unicode.c ****     }
 2177              		.loc 1 2146 9 is_stmt 1 discriminator 4 view .LVU682
 2178              	.L188:
2186:rtos/uC-FS/Source/fs_unicode.c **** 
 2179              		.loc 1 2186 1 is_stmt 0 view .LVU683
 2180 001c 10BD     		pop	{r4, pc}
 2181              	.LVL248:
 2182              	.L186:
2159:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToLowerTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
 2183              		.loc 1 2159 5 is_stmt 1 view .LVU684
2159:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToLowerTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
 2184              		.loc 1 2159 18 is_stmt 0 view .LVU685
 2185 001e 0246     		mov	r2, r0
 2186 0020 F721     		movs	r1, #247
ARM GAS  /tmp/cc4JYsWh.s 			page 106


 2187 0022 1548     		ldr	r0, .L200
 2188              	.LVL249:
2159:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToLowerTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
 2189              		.loc 1 2159 18 view .LVU686
 2190 0024 FFF7FEFF 		bl	WC_SrchTbl
 2191              	.LVL250:
2163:rtos/uC-FS/Source/fs_unicode.c ****         lower = c;                                              /* ... rtn original char.          
 2192              		.loc 1 2163 5 is_stmt 1 view .LVU687
2163:rtos/uC-FS/Source/fs_unicode.c ****         lower = c;                                              /* ... rtn original char.          
 2193              		.loc 1 2163 8 is_stmt 0 view .LVU688
 2194 0028 0346     		mov	r3, r0
 2195 002a 18B3     		cbz	r0, .L192
2169:rtos/uC-FS/Source/fs_unicode.c ****     if (diff == WC_DIFF_35332) {
 2196              		.loc 1 2169 5 is_stmt 1 view .LVU689
2169:rtos/uC-FS/Source/fs_unicode.c ****     if (diff == WC_DIFF_35332) {
 2197              		.loc 1 2169 22 is_stmt 0 view .LVU690
 2198 002c B0F90200 		ldrsh	r0, [r0, #2]
 2199              	.LVL251:
2170:rtos/uC-FS/Source/fs_unicode.c ****         diff = -35332;
 2200              		.loc 1 2170 5 is_stmt 1 view .LVU691
2170:rtos/uC-FS/Source/fs_unicode.c ****         diff = -35332;
 2201              		.loc 1 2170 8 is_stmt 0 view .LVU692
 2202 0030 47F6FE72 		movw	r2, #32766
 2203 0034 9042     		cmp	r0, r2
 2204 0036 1BD0     		beq	.L193
2174:rtos/uC-FS/Source/fs_unicode.c ****         c_start      = ptbl_entry->Char;
 2205              		.loc 1 2174 5 is_stmt 1 view .LVU693
2174:rtos/uC-FS/Source/fs_unicode.c ****         c_start      = ptbl_entry->Char;
 2206              		.loc 1 2174 8 is_stmt 0 view .LVU694
 2207 0038 47F6FF72 		movw	r2, #32767
 2208 003c 9042     		cmp	r0, r2
 2209 003e 03D0     		beq	.L198
 2210              	.LVL252:
 2211              	.L189:
2182:rtos/uC-FS/Source/fs_unicode.c ****     }
 2212              		.loc 1 2182 9 is_stmt 1 view .LVU695
2182:rtos/uC-FS/Source/fs_unicode.c ****     }
 2213              		.loc 1 2182 22 is_stmt 0 view .LVU696
 2214 0040 14FA80F0 		uxtah	r0, r4, r0
 2215 0044 80B2     		uxth	r0, r0
 2216              	.LVL253:
2182:rtos/uC-FS/Source/fs_unicode.c ****     }
 2217              		.loc 1 2182 22 view .LVU697
 2218 0046 E9E7     		b	.L188
 2219              	.LVL254:
 2220              	.L198:
2175:rtos/uC-FS/Source/fs_unicode.c ****         c_start_even = ((c_start % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2221              		.loc 1 2175 9 is_stmt 1 view .LVU698
2175:rtos/uC-FS/Source/fs_unicode.c ****         c_start_even = ((c_start % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2222              		.loc 1 2175 22 is_stmt 0 view .LVU699
 2223 0048 1B88     		ldrh	r3, [r3]
 2224              	.LVL255:
2176:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2225              		.loc 1 2176 9 is_stmt 1 view .LVU700
2176:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2226              		.loc 1 2176 22 is_stmt 0 view .LVU701
 2227 004a 13F0010F 		tst	r3, #1
ARM GAS  /tmp/cc4JYsWh.s 			page 107


 2228 004e 08D1     		bne	.L194
 2229 0050 0122     		movs	r2, #1
 2230              	.L190:
 2231              	.LVL256:
2177:rtos/uC-FS/Source/fs_unicode.c **** 
 2232              		.loc 1 2177 9 is_stmt 1 discriminator 4 view .LVU702
2177:rtos/uC-FS/Source/fs_unicode.c **** 
 2233              		.loc 1 2177 22 is_stmt 0 discriminator 4 view .LVU703
 2234 0052 14F0010F 		tst	r4, #1
 2235 0056 06D1     		bne	.L195
2177:rtos/uC-FS/Source/fs_unicode.c **** 
 2236              		.loc 1 2177 22 view .LVU704
 2237 0058 0123     		movs	r3, #1
 2238              	.LVL257:
 2239              	.L191:
2179:rtos/uC-FS/Source/fs_unicode.c **** 
 2240              		.loc 1 2179 9 is_stmt 1 discriminator 4 view .LVU705
2179:rtos/uC-FS/Source/fs_unicode.c **** 
 2241              		.loc 1 2179 22 is_stmt 0 discriminator 4 view .LVU706
 2242 005a 9A42     		cmp	r2, r3
 2243 005c 05D0     		beq	.L199
2179:rtos/uC-FS/Source/fs_unicode.c **** 
 2244              		.loc 1 2179 22 view .LVU707
 2245 005e 2046     		mov	r0, r4
 2246              	.LVL258:
2179:rtos/uC-FS/Source/fs_unicode.c **** 
 2247              		.loc 1 2179 22 view .LVU708
 2248 0060 DCE7     		b	.L188
 2249              	.LVL259:
 2250              	.L194:
2176:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2251              		.loc 1 2176 22 view .LVU709
 2252 0062 0022     		movs	r2, #0
 2253 0064 F5E7     		b	.L190
 2254              	.LVL260:
 2255              	.L195:
2177:rtos/uC-FS/Source/fs_unicode.c **** 
 2256              		.loc 1 2177 22 view .LVU710
 2257 0066 0023     		movs	r3, #0
 2258              	.LVL261:
2177:rtos/uC-FS/Source/fs_unicode.c **** 
 2259              		.loc 1 2177 22 view .LVU711
 2260 0068 F7E7     		b	.L191
 2261              	.LVL262:
 2262              	.L199:
2179:rtos/uC-FS/Source/fs_unicode.c **** 
 2263              		.loc 1 2179 22 discriminator 1 view .LVU712
 2264 006a 0134     		adds	r4, r4, #1
 2265 006c A0B2     		uxth	r0, r4
 2266              	.LVL263:
2179:rtos/uC-FS/Source/fs_unicode.c **** 
 2267              		.loc 1 2179 22 discriminator 1 view .LVU713
 2268 006e D5E7     		b	.L188
 2269              	.LVL264:
 2270              	.L193:
2171:rtos/uC-FS/Source/fs_unicode.c ****     }
 2271              		.loc 1 2171 14 view .LVU714
ARM GAS  /tmp/cc4JYsWh.s 			page 108


 2272 0070 0248     		ldr	r0, .L200+4
 2273              	.LVL265:
2171:rtos/uC-FS/Source/fs_unicode.c ****     }
 2274              		.loc 1 2171 14 view .LVU715
 2275 0072 E5E7     		b	.L189
 2276              	.LVL266:
 2277              	.L192:
2165:rtos/uC-FS/Source/fs_unicode.c ****     }
 2278              		.loc 1 2165 16 view .LVU716
 2279 0074 2046     		mov	r0, r4
 2280              	.LVL267:
2165:rtos/uC-FS/Source/fs_unicode.c ****     }
 2281              		.loc 1 2165 16 view .LVU717
 2282 0076 D1E7     		b	.L188
 2283              	.L201:
 2284              		.align	2
 2285              	.L200:
 2286 0078 00000000 		.word	.LANCHOR1
 2287 007c FC75FFFF 		.word	-35332
 2288              		.cfi_endproc
 2289              	.LFE24:
 2291              		.section	.text.WC_CharToUpper,"ax",%progbits
 2292              		.align	1
 2293              		.global	WC_CharToUpper
 2294              		.syntax unified
 2295              		.thumb
 2296              		.thumb_func
 2297              		.fpu fpv4-sp-d16
 2299              	WC_CharToUpper:
 2300              	.LVL268:
 2301              	.LFB25:
2220:rtos/uC-FS/Source/fs_unicode.c ****            CPU_CHAR            upper_ascii;
 2302              		.loc 1 2220 1 is_stmt 1 view -0
 2303              		.cfi_startproc
 2304              		@ args = 0, pretend = 0, frame = 0
 2305              		@ frame_needed = 0, uses_anonymous_args = 0
2220:rtos/uC-FS/Source/fs_unicode.c ****            CPU_CHAR            upper_ascii;
 2306              		.loc 1 2220 1 is_stmt 0 view .LVU719
 2307 0000 10B5     		push	{r4, lr}
 2308              	.LCFI34:
 2309              		.cfi_def_cfa_offset 8
 2310              		.cfi_offset 4, -8
 2311              		.cfi_offset 14, -4
 2312 0002 0446     		mov	r4, r0
2221:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           upper;
 2313              		.loc 1 2221 12 is_stmt 1 view .LVU720
2222:rtos/uC-FS/Source/fs_unicode.c ****            CPU_INT32S          diff;
 2314              		.loc 1 2222 12 view .LVU721
2223:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           c_start;
 2315              		.loc 1 2223 12 view .LVU722
2224:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_start_even;
 2316              		.loc 1 2224 12 view .LVU723
2225:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_even;
 2317              		.loc 1 2225 12 view .LVU724
2226:rtos/uC-FS/Source/fs_unicode.c ****     const  WC_SRCH_TBL_ENTRY  *ptbl_entry;
 2318              		.loc 1 2226 12 view .LVU725
2227:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 109


 2319              		.loc 1 2227 5 view .LVU726
2230:rtos/uC-FS/Source/fs_unicode.c ****         upper_ascii =  ASCII_TO_UPPER((CPU_CHAR)c);
 2320              		.loc 1 2230 5 view .LVU727
2230:rtos/uC-FS/Source/fs_unicode.c ****         upper_ascii =  ASCII_TO_UPPER((CPU_CHAR)c);
 2321              		.loc 1 2230 8 is_stmt 0 view .LVU728
 2322 0004 7F28     		cmp	r0, #127
 2323 0006 0AD8     		bhi	.L203
2231:rtos/uC-FS/Source/fs_unicode.c ****         upper       = (CPU_WCHAR)upper_ascii;                   /* ... convert to upper case.      
 2324              		.loc 1 2231 9 is_stmt 1 view .LVU729
2231:rtos/uC-FS/Source/fs_unicode.c ****         upper       = (CPU_WCHAR)upper_ascii;                   /* ... convert to upper case.      
 2325              		.loc 1 2231 24 is_stmt 0 view .LVU730
 2326 0008 C0B2     		uxtb	r0, r0
 2327              	.LVL269:
2231:rtos/uC-FS/Source/fs_unicode.c ****         upper       = (CPU_WCHAR)upper_ascii;                   /* ... convert to upper case.      
 2328              		.loc 1 2231 24 view .LVU731
 2329 000a A0F16103 		sub	r3, r0, #97
 2330 000e DBB2     		uxtb	r3, r3
2231:rtos/uC-FS/Source/fs_unicode.c ****         upper       = (CPU_WCHAR)upper_ascii;                   /* ... convert to upper case.      
 2331              		.loc 1 2231 21 view .LVU732
 2332 0010 192B     		cmp	r3, #25
 2333 0012 02D8     		bhi	.L204
2231:rtos/uC-FS/Source/fs_unicode.c ****         upper       = (CPU_WCHAR)upper_ascii;                   /* ... convert to upper case.      
 2334              		.loc 1 2231 21 discriminator 1 view .LVU733
 2335 0014 A0F12004 		sub	r4, r0, #32
 2336 0018 E0B2     		uxtb	r0, r4
 2337              	.L204:
 2338              	.LVL270:
2232:rtos/uC-FS/Source/fs_unicode.c ****         return (upper);
 2339              		.loc 1 2232 9 is_stmt 1 discriminator 4 view .LVU734
2232:rtos/uC-FS/Source/fs_unicode.c ****         return (upper);
 2340              		.loc 1 2232 21 is_stmt 0 discriminator 4 view .LVU735
 2341 001a 80B2     		uxth	r0, r0
 2342              	.LVL271:
2233:rtos/uC-FS/Source/fs_unicode.c ****     }
 2343              		.loc 1 2233 9 is_stmt 1 discriminator 4 view .LVU736
 2344              	.L205:
2273:rtos/uC-FS/Source/fs_unicode.c **** 
 2345              		.loc 1 2273 1 is_stmt 0 view .LVU737
 2346 001c 10BD     		pop	{r4, pc}
 2347              	.LVL272:
 2348              	.L203:
2246:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToUpperTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
 2349              		.loc 1 2246 5 is_stmt 1 view .LVU738
2246:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToUpperTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
 2350              		.loc 1 2246 18 is_stmt 0 view .LVU739
 2351 001e 0246     		mov	r2, r0
 2352 0020 40F21311 		movw	r1, #275
 2353 0024 1548     		ldr	r0, .L217
 2354              	.LVL273:
2246:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToUpperTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
 2355              		.loc 1 2246 18 view .LVU740
 2356 0026 FFF7FEFF 		bl	WC_SrchTbl
 2357              	.LVL274:
2250:rtos/uC-FS/Source/fs_unicode.c ****         upper = c;                                              /* ... rtn original char.          
 2358              		.loc 1 2250 5 is_stmt 1 view .LVU741
2250:rtos/uC-FS/Source/fs_unicode.c ****         upper = c;                                              /* ... rtn original char.          
 2359              		.loc 1 2250 8 is_stmt 0 view .LVU742
ARM GAS  /tmp/cc4JYsWh.s 			page 110


 2360 002a 0346     		mov	r3, r0
 2361 002c 20B3     		cbz	r0, .L209
2256:rtos/uC-FS/Source/fs_unicode.c ****     if (diff == WC_DIFF_35332) {
 2362              		.loc 1 2256 5 is_stmt 1 view .LVU743
2256:rtos/uC-FS/Source/fs_unicode.c ****     if (diff == WC_DIFF_35332) {
 2363              		.loc 1 2256 22 is_stmt 0 view .LVU744
 2364 002e B0F90200 		ldrsh	r0, [r0, #2]
 2365              	.LVL275:
2257:rtos/uC-FS/Source/fs_unicode.c ****         diff =  35332;
 2366              		.loc 1 2257 5 is_stmt 1 view .LVU745
2257:rtos/uC-FS/Source/fs_unicode.c ****         diff =  35332;
 2367              		.loc 1 2257 8 is_stmt 0 view .LVU746
 2368 0032 47F6FE72 		movw	r2, #32766
 2369 0036 9042     		cmp	r0, r2
 2370 0038 1BD0     		beq	.L210
2261:rtos/uC-FS/Source/fs_unicode.c ****         c_start      = ptbl_entry->Char;
 2371              		.loc 1 2261 5 is_stmt 1 view .LVU747
2261:rtos/uC-FS/Source/fs_unicode.c ****         c_start      = ptbl_entry->Char;
 2372              		.loc 1 2261 8 is_stmt 0 view .LVU748
 2373 003a 47F6FF72 		movw	r2, #32767
 2374 003e 9042     		cmp	r0, r2
 2375 0040 03D0     		beq	.L215
 2376              	.LVL276:
 2377              	.L206:
2269:rtos/uC-FS/Source/fs_unicode.c ****     }
 2378              		.loc 1 2269 9 is_stmt 1 view .LVU749
2269:rtos/uC-FS/Source/fs_unicode.c ****     }
 2379              		.loc 1 2269 22 is_stmt 0 view .LVU750
 2380 0042 14FA80F0 		uxtah	r0, r4, r0
 2381 0046 80B2     		uxth	r0, r0
 2382              	.LVL277:
2269:rtos/uC-FS/Source/fs_unicode.c ****     }
 2383              		.loc 1 2269 22 view .LVU751
 2384 0048 E8E7     		b	.L205
 2385              	.LVL278:
 2386              	.L215:
2262:rtos/uC-FS/Source/fs_unicode.c ****         c_start_even = ((c_start % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2387              		.loc 1 2262 9 is_stmt 1 view .LVU752
2262:rtos/uC-FS/Source/fs_unicode.c ****         c_start_even = ((c_start % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2388              		.loc 1 2262 22 is_stmt 0 view .LVU753
 2389 004a 1B88     		ldrh	r3, [r3]
 2390              	.LVL279:
2263:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2391              		.loc 1 2263 9 is_stmt 1 view .LVU754
2263:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2392              		.loc 1 2263 22 is_stmt 0 view .LVU755
 2393 004c 13F0010F 		tst	r3, #1
 2394 0050 08D1     		bne	.L211
 2395 0052 0122     		movs	r2, #1
 2396              	.L207:
 2397              	.LVL280:
2264:rtos/uC-FS/Source/fs_unicode.c **** 
 2398              		.loc 1 2264 9 is_stmt 1 discriminator 4 view .LVU756
2264:rtos/uC-FS/Source/fs_unicode.c **** 
 2399              		.loc 1 2264 22 is_stmt 0 discriminator 4 view .LVU757
 2400 0054 14F0010F 		tst	r4, #1
 2401 0058 06D1     		bne	.L212
ARM GAS  /tmp/cc4JYsWh.s 			page 111


2264:rtos/uC-FS/Source/fs_unicode.c **** 
 2402              		.loc 1 2264 22 view .LVU758
 2403 005a 0123     		movs	r3, #1
 2404              	.LVL281:
 2405              	.L208:
2266:rtos/uC-FS/Source/fs_unicode.c **** 
 2406              		.loc 1 2266 9 is_stmt 1 discriminator 4 view .LVU759
2266:rtos/uC-FS/Source/fs_unicode.c **** 
 2407              		.loc 1 2266 22 is_stmt 0 discriminator 4 view .LVU760
 2408 005c 9A42     		cmp	r2, r3
 2409 005e 05D0     		beq	.L216
2266:rtos/uC-FS/Source/fs_unicode.c **** 
 2410              		.loc 1 2266 22 view .LVU761
 2411 0060 2046     		mov	r0, r4
 2412              	.LVL282:
2266:rtos/uC-FS/Source/fs_unicode.c **** 
 2413              		.loc 1 2266 22 view .LVU762
 2414 0062 DBE7     		b	.L205
 2415              	.LVL283:
 2416              	.L211:
2263:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES  : DEF_NO;
 2417              		.loc 1 2263 22 view .LVU763
 2418 0064 0022     		movs	r2, #0
 2419 0066 F5E7     		b	.L207
 2420              	.LVL284:
 2421              	.L212:
2264:rtos/uC-FS/Source/fs_unicode.c **** 
 2422              		.loc 1 2264 22 view .LVU764
 2423 0068 0023     		movs	r3, #0
 2424              	.LVL285:
2264:rtos/uC-FS/Source/fs_unicode.c **** 
 2425              		.loc 1 2264 22 view .LVU765
 2426 006a F7E7     		b	.L208
 2427              	.LVL286:
 2428              	.L216:
2266:rtos/uC-FS/Source/fs_unicode.c **** 
 2429              		.loc 1 2266 22 discriminator 1 view .LVU766
 2430 006c 013C     		subs	r4, r4, #1
 2431 006e A0B2     		uxth	r0, r4
 2432              	.LVL287:
2266:rtos/uC-FS/Source/fs_unicode.c **** 
 2433              		.loc 1 2266 22 discriminator 1 view .LVU767
 2434 0070 D4E7     		b	.L205
 2435              	.LVL288:
 2436              	.L210:
2258:rtos/uC-FS/Source/fs_unicode.c ****     }
 2437              		.loc 1 2258 14 view .LVU768
 2438 0072 48F60420 		movw	r0, #35332
 2439              	.LVL289:
2258:rtos/uC-FS/Source/fs_unicode.c ****     }
 2440              		.loc 1 2258 14 view .LVU769
 2441 0076 E4E7     		b	.L206
 2442              	.LVL290:
 2443              	.L209:
2252:rtos/uC-FS/Source/fs_unicode.c ****     }
 2444              		.loc 1 2252 16 view .LVU770
 2445 0078 2046     		mov	r0, r4
ARM GAS  /tmp/cc4JYsWh.s 			page 112


 2446              	.LVL291:
2252:rtos/uC-FS/Source/fs_unicode.c ****     }
 2447              		.loc 1 2252 16 view .LVU771
 2448 007a CFE7     		b	.L205
 2449              	.L218:
 2450              		.align	2
 2451              	.L217:
 2452 007c 00000000 		.word	.LANCHOR2
 2453              		.cfi_endproc
 2454              	.LFE25:
 2456              		.section	.text.WC_CharIsLower,"ax",%progbits
 2457              		.align	1
 2458              		.global	WC_CharIsLower
 2459              		.syntax unified
 2460              		.thumb
 2461              		.thumb_func
 2462              		.fpu fpv4-sp-d16
 2464              	WC_CharIsLower:
 2465              	.LVL292:
 2466              	.LFB18:
1815:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  lower;
 2467              		.loc 1 1815 1 is_stmt 1 view -0
 2468              		.cfi_startproc
 2469              		@ args = 0, pretend = 0, frame = 0
 2470              		@ frame_needed = 0, uses_anonymous_args = 0
1815:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  lower;
 2471              		.loc 1 1815 1 is_stmt 0 view .LVU773
 2472 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2473              	.LCFI35:
 2474              		.cfi_def_cfa_offset 24
 2475              		.cfi_offset 3, -24
 2476              		.cfi_offset 4, -20
 2477              		.cfi_offset 5, -16
 2478              		.cfi_offset 6, -12
 2479              		.cfi_offset 7, -8
 2480              		.cfi_offset 14, -4
 2481 0002 0446     		mov	r4, r0
1816:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha;
 2482              		.loc 1 1816 5 is_stmt 1 view .LVU774
1817:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_lower;
 2483              		.loc 1 1817 5 view .LVU775
1818:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_upper;
 2484              		.loc 1 1818 5 view .LVU776
1819:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_lo;
 2485              		.loc 1 1819 5 view .LVU777
1820:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_mid;
 2486              		.loc 1 1820 5 view .LVU778
1821:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   ix_hi;
 2487              		.loc 1 1821 5 view .LVU779
1822:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_start;
 2488              		.loc 1 1822 5 view .LVU780
1823:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_end;
 2489              		.loc 1 1823 5 view .LVU781
1824:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  found;
 2490              		.loc 1 1824 5 view .LVU782
1825:rtos/uC-FS/Source/fs_unicode.c **** 
 2491              		.loc 1 1825 5 view .LVU783
ARM GAS  /tmp/cc4JYsWh.s 			page 113


1828:rtos/uC-FS/Source/fs_unicode.c ****         lower = ASCII_IS_LOWER((CPU_CHAR)c);                    /* ... determine whether char is AS
 2492              		.loc 1 1828 5 view .LVU784
1828:rtos/uC-FS/Source/fs_unicode.c ****         lower = ASCII_IS_LOWER((CPU_CHAR)c);                    /* ... determine whether char is AS
 2493              		.loc 1 1828 8 is_stmt 0 view .LVU785
 2494 0004 7F28     		cmp	r0, #127
 2495 0006 06D8     		bhi	.L220
1829:rtos/uC-FS/Source/fs_unicode.c **** 
 2496              		.loc 1 1829 9 is_stmt 1 view .LVU786
1829:rtos/uC-FS/Source/fs_unicode.c **** 
 2497              		.loc 1 1829 17 is_stmt 0 view .LVU787
 2498 0008 C4B2     		uxtb	r4, r0
 2499 000a 613C     		subs	r4, r4, #97
 2500 000c E4B2     		uxtb	r4, r4
1829:rtos/uC-FS/Source/fs_unicode.c **** 
 2501              		.loc 1 1829 15 view .LVU788
 2502 000e 192C     		cmp	r4, #25
 2503 0010 30D8     		bhi	.L227
 2504 0012 0120     		movs	r0, #1
 2505              	.LVL293:
 2506              	.L221:
1885:rtos/uC-FS/Source/fs_unicode.c **** }
 2507              		.loc 1 1885 5 is_stmt 1 view .LVU789
1886:rtos/uC-FS/Source/fs_unicode.c **** 
 2508              		.loc 1 1886 1 is_stmt 0 view .LVU790
 2509 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2510              	.LVL294:
 2511              	.L220:
1833:rtos/uC-FS/Source/fs_unicode.c ****         if (alpha == DEF_NO) {                                  /* If  char is NOT alpha char ...  
 2512              		.loc 1 1833 9 is_stmt 1 view .LVU791
1833:rtos/uC-FS/Source/fs_unicode.c ****         if (alpha == DEF_NO) {                                  /* If  char is NOT alpha char ...  
 2513              		.loc 1 1833 17 is_stmt 0 view .LVU792
 2514 0016 FFF7FEFF 		bl	WC_CharIsAlpha
 2515              	.LVL295:
1834:rtos/uC-FS/Source/fs_unicode.c ****             lower =  DEF_NO;                                    /* ... char is NOT lower char.     
 2516              		.loc 1 1834 9 is_stmt 1 view .LVU793
1834:rtos/uC-FS/Source/fs_unicode.c ****             lower =  DEF_NO;                                    /* ... char is NOT lower char.     
 2517              		.loc 1 1834 12 is_stmt 0 view .LVU794
 2518 001a 0028     		cmp	r0, #0
 2519 001c FAD0     		beq	.L221
1838:rtos/uC-FS/Source/fs_unicode.c ****             if (c_lower != c) {                                 /* If char to lower char is NOT cha
 2520              		.loc 1 1838 13 is_stmt 1 view .LVU795
1838:rtos/uC-FS/Source/fs_unicode.c ****             if (c_lower != c) {                                 /* If char to lower char is NOT cha
 2521              		.loc 1 1838 23 is_stmt 0 view .LVU796
 2522 001e 2046     		mov	r0, r4
 2523              	.LVL296:
1838:rtos/uC-FS/Source/fs_unicode.c ****             if (c_lower != c) {                                 /* If char to lower char is NOT cha
 2524              		.loc 1 1838 23 view .LVU797
 2525 0020 FFF7FEFF 		bl	WC_CharToLower
 2526              	.LVL297:
1839:rtos/uC-FS/Source/fs_unicode.c ****                 lower = DEF_NO;                                 /* ... char is NOT lower char.     
 2527              		.loc 1 1839 13 is_stmt 1 view .LVU798
1839:rtos/uC-FS/Source/fs_unicode.c ****                 lower = DEF_NO;                                 /* ... char is NOT lower char.     
 2528              		.loc 1 1839 16 is_stmt 0 view .LVU799
 2529 0024 8442     		cmp	r4, r0
 2530 0026 01D0     		beq	.L232
1840:rtos/uC-FS/Source/fs_unicode.c **** 
 2531              		.loc 1 1840 23 view .LVU800
ARM GAS  /tmp/cc4JYsWh.s 			page 114


 2532 0028 0020     		movs	r0, #0
 2533              	.LVL298:
1840:rtos/uC-FS/Source/fs_unicode.c **** 
 2534              		.loc 1 1840 23 view .LVU801
 2535 002a F3E7     		b	.L221
 2536              	.LVL299:
 2537              	.L232:
1843:rtos/uC-FS/Source/fs_unicode.c ****                 if (c_upper != c) {                             /* If char to upper char is NOT cha
 2538              		.loc 1 1843 17 is_stmt 1 view .LVU802
1843:rtos/uC-FS/Source/fs_unicode.c ****                 if (c_upper != c) {                             /* If char to upper char is NOT cha
 2539              		.loc 1 1843 27 is_stmt 0 view .LVU803
 2540 002c 2046     		mov	r0, r4
 2541              	.LVL300:
1843:rtos/uC-FS/Source/fs_unicode.c ****                 if (c_upper != c) {                             /* If char to upper char is NOT cha
 2542              		.loc 1 1843 27 view .LVU804
 2543 002e FFF7FEFF 		bl	WC_CharToUpper
 2544              	.LVL301:
1844:rtos/uC-FS/Source/fs_unicode.c ****                     lower = DEF_YES;                            /* ... char is    lower char.      
 2545              		.loc 1 1844 17 is_stmt 1 view .LVU805
1844:rtos/uC-FS/Source/fs_unicode.c ****                     lower = DEF_YES;                            /* ... char is    lower char.      
 2546              		.loc 1 1844 20 is_stmt 0 view .LVU806
 2547 0032 8442     		cmp	r4, r0
 2548 0034 01D0     		beq	.L233
1845:rtos/uC-FS/Source/fs_unicode.c **** 
 2549              		.loc 1 1845 27 view .LVU807
 2550 0036 0120     		movs	r0, #1
 2551              	.LVL302:
1845:rtos/uC-FS/Source/fs_unicode.c **** 
 2552              		.loc 1 1845 27 view .LVU808
 2553 0038 ECE7     		b	.L221
 2554              	.LVL303:
 2555              	.L233:
1849:rtos/uC-FS/Source/fs_unicode.c ****                     ix_lo = 0u;
 2556              		.loc 1 1849 27 view .LVU809
 2557 003a 0020     		movs	r0, #0
 2558              	.LVL304:
1851:rtos/uC-FS/Source/fs_unicode.c **** 
 2559              		.loc 1 1851 27 view .LVU810
 2560 003c 6E22     		movs	r2, #110
1850:rtos/uC-FS/Source/fs_unicode.c ****                     ix_hi = (sizeof(WC_CharIsLowerTbl) / sizeof(CPU_WCHAR)) - 2u;
 2561              		.loc 1 1850 27 view .LVU811
 2562 003e 0146     		mov	r1, r0
 2563 0040 02E0     		b	.L222
 2564              	.LVL305:
 2565              	.L223:
1864:rtos/uC-FS/Source/fs_unicode.c ****                             ix_lo = ix_mid + 1u;                    /* ... make midpoint lo val.   
 2566              		.loc 1 1864 32 is_stmt 1 view .LVU812
1864:rtos/uC-FS/Source/fs_unicode.c ****                             ix_lo = ix_mid + 1u;                    /* ... make midpoint lo val.   
 2567              		.loc 1 1864 35 is_stmt 0 view .LVU813
 2568 0042 9C42     		cmp	r4, r3
 2569 0044 0FD2     		bcs	.L230
1868:rtos/uC-FS/Source/fs_unicode.c ****                         }
 2570              		.loc 1 1868 35 view .LVU814
 2571 0046 0120     		movs	r0, #1
 2572              	.LVL306:
 2573              	.L222:
1853:rtos/uC-FS/Source/fs_unicode.c ****                            (found == DEF_NO)) {                     /* ... & range not found       
ARM GAS  /tmp/cc4JYsWh.s 			page 115


 2574              		.loc 1 1853 27 is_stmt 1 view .LVU815
 2575 0048 9142     		cmp	r1, r2
 2576 004a 0ED8     		bhi	.L225
1853:rtos/uC-FS/Source/fs_unicode.c ****                            (found == DEF_NO)) {                     /* ... & range not found       
 2577              		.loc 1 1853 45 is_stmt 0 discriminator 1 view .LVU816
 2578 004c 68B9     		cbnz	r0, .L225
1857:rtos/uC-FS/Source/fs_unicode.c ****                         c_start =  WC_CharIsLowerTbl[ix_mid];
 2579              		.loc 1 1857 25 is_stmt 1 view .LVU817
1857:rtos/uC-FS/Source/fs_unicode.c ****                         c_start =  WC_CharIsLowerTbl[ix_mid];
 2580              		.loc 1 1857 42 is_stmt 0 view .LVU818
 2581 004e 8D18     		adds	r5, r1, r2
 2582              	.LVL307:
1857:rtos/uC-FS/Source/fs_unicode.c ****                         c_start =  WC_CharIsLowerTbl[ix_mid];
 2583              		.loc 1 1857 33 view .LVU819
 2584 0050 6D08     		lsrs	r5, r5, #1
 2585              	.LVL308:
1858:rtos/uC-FS/Source/fs_unicode.c ****                         c_end   =  WC_CharIsLowerTbl[ix_mid + 1u];
 2586              		.loc 1 1858 25 is_stmt 1 view .LVU820
1858:rtos/uC-FS/Source/fs_unicode.c ****                         c_end   =  WC_CharIsLowerTbl[ix_mid + 1u];
 2587              		.loc 1 1858 33 is_stmt 0 view .LVU821
 2588 0052 094B     		ldr	r3, .L234
 2589 0054 33F81570 		ldrh	r7, [r3, r5, lsl #1]
 2590              	.LVL309:
1859:rtos/uC-FS/Source/fs_unicode.c **** 
 2591              		.loc 1 1859 25 is_stmt 1 view .LVU822
1859:rtos/uC-FS/Source/fs_unicode.c **** 
 2592              		.loc 1 1859 61 is_stmt 0 view .LVU823
 2593 0058 6E1C     		adds	r6, r5, #1
1859:rtos/uC-FS/Source/fs_unicode.c **** 
 2594              		.loc 1 1859 33 view .LVU824
 2595 005a 33F81630 		ldrh	r3, [r3, r6, lsl #1]
 2596              	.LVL310:
1861:rtos/uC-FS/Source/fs_unicode.c ****                             ix_hi = ix_mid - 1u;                    /* ... make midpoint hi val.   
 2597              		.loc 1 1861 25 is_stmt 1 view .LVU825
1861:rtos/uC-FS/Source/fs_unicode.c ****                             ix_hi = ix_mid - 1u;                    /* ... make midpoint hi val.   
 2598              		.loc 1 1861 28 is_stmt 0 view .LVU826
 2599 005e BC42     		cmp	r4, r7
 2600 0060 EFD2     		bcs	.L223
1862:rtos/uC-FS/Source/fs_unicode.c **** 
 2601              		.loc 1 1862 29 is_stmt 1 view .LVU827
1862:rtos/uC-FS/Source/fs_unicode.c **** 
 2602              		.loc 1 1862 35 is_stmt 0 view .LVU828
 2603 0062 6A1E     		subs	r2, r5, #1
 2604              	.LVL311:
1862:rtos/uC-FS/Source/fs_unicode.c **** 
 2605              		.loc 1 1862 35 view .LVU829
 2606 0064 F0E7     		b	.L222
 2607              	.L230:
1865:rtos/uC-FS/Source/fs_unicode.c **** 
 2608              		.loc 1 1865 35 view .LVU830
 2609 0066 3146     		mov	r1, r6
 2610              	.LVL312:
1865:rtos/uC-FS/Source/fs_unicode.c **** 
 2611              		.loc 1 1865 35 view .LVU831
 2612 0068 EEE7     		b	.L222
 2613              	.LVL313:
 2614              	.L225:
ARM GAS  /tmp/cc4JYsWh.s 			page 116


1873:rtos/uC-FS/Source/fs_unicode.c ****                         lower =  DEF_NO;                            /* ... rtn NULL.               
 2615              		.loc 1 1873 21 is_stmt 1 view .LVU832
1873:rtos/uC-FS/Source/fs_unicode.c ****                         lower =  DEF_NO;                            /* ... rtn NULL.               
 2616              		.loc 1 1873 24 is_stmt 0 view .LVU833
 2617 006a 0028     		cmp	r0, #0
 2618 006c D2D0     		beq	.L221
1878:rtos/uC-FS/Source/fs_unicode.c ****                     }
 2619              		.loc 1 1878 25 is_stmt 1 view .LVU834
1878:rtos/uC-FS/Source/fs_unicode.c ****                     }
 2620              		.loc 1 1878 64 is_stmt 0 view .LVU835
 2621 006e 05F00100 		and	r0, r5, #1
 2622              	.LVL314:
1878:rtos/uC-FS/Source/fs_unicode.c ****                     }
 2623              		.loc 1 1878 64 view .LVU836
 2624 0072 CFE7     		b	.L221
 2625              	.LVL315:
 2626              	.L227:
1829:rtos/uC-FS/Source/fs_unicode.c **** 
 2627              		.loc 1 1829 15 view .LVU837
 2628 0074 0020     		movs	r0, #0
 2629              	.LVL316:
1829:rtos/uC-FS/Source/fs_unicode.c **** 
 2630              		.loc 1 1829 15 view .LVU838
 2631 0076 CDE7     		b	.L221
 2632              	.L235:
 2633              		.align	2
 2634              	.L234:
 2635 0078 00000000 		.word	.LANCHOR3
 2636              		.cfi_endproc
 2637              	.LFE18:
 2639              		.section	.text.WC_CharIsUpper,"ax",%progbits
 2640              		.align	1
 2641              		.global	WC_CharIsUpper
 2642              		.syntax unified
 2643              		.thumb
 2644              		.thumb_func
 2645              		.fpu fpv4-sp-d16
 2647              	WC_CharIsUpper:
 2648              	.LVL317:
 2649              	.LFB19:
1913:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  upper;
 2650              		.loc 1 1913 1 is_stmt 1 view -0
 2651              		.cfi_startproc
 2652              		@ args = 0, pretend = 0, frame = 0
 2653              		@ frame_needed = 0, uses_anonymous_args = 0
1913:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  upper;
 2654              		.loc 1 1913 1 is_stmt 0 view .LVU840
 2655 0000 10B5     		push	{r4, lr}
 2656              	.LCFI36:
 2657              		.cfi_def_cfa_offset 8
 2658              		.cfi_offset 4, -8
 2659              		.cfi_offset 14, -4
 2660 0002 0446     		mov	r4, r0
1914:rtos/uC-FS/Source/fs_unicode.c ****     CPU_BOOLEAN  alpha;
 2661              		.loc 1 1914 5 is_stmt 1 view .LVU841
1915:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_lower;
 2662              		.loc 1 1915 5 view .LVU842
ARM GAS  /tmp/cc4JYsWh.s 			page 117


1916:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    c_upper;
 2663              		.loc 1 1916 5 view .LVU843
1917:rtos/uC-FS/Source/fs_unicode.c **** 
 2664              		.loc 1 1917 5 view .LVU844
1920:rtos/uC-FS/Source/fs_unicode.c ****         upper = ASCII_IS_UPPER((CPU_CHAR)c);                    /* ... determine whether char is AS
 2665              		.loc 1 1920 5 view .LVU845
1920:rtos/uC-FS/Source/fs_unicode.c ****         upper = ASCII_IS_UPPER((CPU_CHAR)c);                    /* ... determine whether char is AS
 2666              		.loc 1 1920 8 is_stmt 0 view .LVU846
 2667 0004 7F28     		cmp	r0, #127
 2668 0006 06D8     		bhi	.L237
1921:rtos/uC-FS/Source/fs_unicode.c **** 
 2669              		.loc 1 1921 9 is_stmt 1 view .LVU847
1921:rtos/uC-FS/Source/fs_unicode.c **** 
 2670              		.loc 1 1921 17 is_stmt 0 view .LVU848
 2671 0008 C4B2     		uxtb	r4, r0
 2672 000a 413C     		subs	r4, r4, #65
 2673 000c E4B2     		uxtb	r4, r4
1921:rtos/uC-FS/Source/fs_unicode.c **** 
 2674              		.loc 1 1921 15 view .LVU849
 2675 000e 192C     		cmp	r4, #25
 2676 0010 5AD8     		bhi	.L239
 2677 0012 0120     		movs	r0, #1
 2678              	.LVL318:
 2679              	.L238:
1959:rtos/uC-FS/Source/fs_unicode.c **** }
 2680              		.loc 1 1959 5 is_stmt 1 view .LVU850
1960:rtos/uC-FS/Source/fs_unicode.c **** 
 2681              		.loc 1 1960 1 is_stmt 0 view .LVU851
 2682 0014 10BD     		pop	{r4, pc}
 2683              	.LVL319:
 2684              	.L237:
1925:rtos/uC-FS/Source/fs_unicode.c ****         if (alpha == DEF_NO) {                                  /* If  char is NOT alpha char ...  
 2685              		.loc 1 1925 9 is_stmt 1 view .LVU852
1925:rtos/uC-FS/Source/fs_unicode.c ****         if (alpha == DEF_NO) {                                  /* If  char is NOT alpha char ...  
 2686              		.loc 1 1925 17 is_stmt 0 view .LVU853
 2687 0016 FFF7FEFF 		bl	WC_CharIsAlpha
 2688              	.LVL320:
1926:rtos/uC-FS/Source/fs_unicode.c ****             upper =  DEF_NO;                                    /* ... char is NOT upper char.     
 2689              		.loc 1 1926 9 is_stmt 1 view .LVU854
1926:rtos/uC-FS/Source/fs_unicode.c ****             upper =  DEF_NO;                                    /* ... char is NOT upper char.     
 2690              		.loc 1 1926 12 is_stmt 0 view .LVU855
 2691 001a 0028     		cmp	r0, #0
 2692 001c FAD0     		beq	.L238
1930:rtos/uC-FS/Source/fs_unicode.c ****             if (c_upper != c) {                                 /* If char to upper char is NOT cha
 2693              		.loc 1 1930 13 is_stmt 1 view .LVU856
1930:rtos/uC-FS/Source/fs_unicode.c ****             if (c_upper != c) {                                 /* If char to upper char is NOT cha
 2694              		.loc 1 1930 23 is_stmt 0 view .LVU857
 2695 001e 2046     		mov	r0, r4
 2696              	.LVL321:
1930:rtos/uC-FS/Source/fs_unicode.c ****             if (c_upper != c) {                                 /* If char to upper char is NOT cha
 2697              		.loc 1 1930 23 view .LVU858
 2698 0020 FFF7FEFF 		bl	WC_CharToUpper
 2699              	.LVL322:
1931:rtos/uC-FS/Source/fs_unicode.c ****                 upper = DEF_NO;                                 /* ... char is NOT upper char.     
 2700              		.loc 1 1931 13 is_stmt 1 view .LVU859
1931:rtos/uC-FS/Source/fs_unicode.c ****                 upper = DEF_NO;                                 /* ... char is NOT upper char.     
 2701              		.loc 1 1931 16 is_stmt 0 view .LVU860
ARM GAS  /tmp/cc4JYsWh.s 			page 118


 2702 0024 8442     		cmp	r4, r0
 2703 0026 01D0     		beq	.L257
1932:rtos/uC-FS/Source/fs_unicode.c **** 
 2704              		.loc 1 1932 23 view .LVU861
 2705 0028 0020     		movs	r0, #0
 2706              	.LVL323:
1932:rtos/uC-FS/Source/fs_unicode.c **** 
 2707              		.loc 1 1932 23 view .LVU862
 2708 002a F3E7     		b	.L238
 2709              	.LVL324:
 2710              	.L257:
1935:rtos/uC-FS/Source/fs_unicode.c ****                 if (c_lower != c) {                             /* If char to lower char is NOT cha
 2711              		.loc 1 1935 17 is_stmt 1 view .LVU863
1935:rtos/uC-FS/Source/fs_unicode.c ****                 if (c_lower != c) {                             /* If char to lower char is NOT cha
 2712              		.loc 1 1935 27 is_stmt 0 view .LVU864
 2713 002c 2046     		mov	r0, r4
 2714              	.LVL325:
1935:rtos/uC-FS/Source/fs_unicode.c ****                 if (c_lower != c) {                             /* If char to lower char is NOT cha
 2715              		.loc 1 1935 27 view .LVU865
 2716 002e FFF7FEFF 		bl	WC_CharToLower
 2717              	.LVL326:
1936:rtos/uC-FS/Source/fs_unicode.c ****                     upper = DEF_YES;                            /* ... char is    upper char.      
 2718              		.loc 1 1936 17 is_stmt 1 view .LVU866
1936:rtos/uC-FS/Source/fs_unicode.c ****                     upper = DEF_YES;                            /* ... char is    upper char.      
 2719              		.loc 1 1936 20 is_stmt 0 view .LVU867
 2720 0032 8442     		cmp	r4, r0
 2721 0034 01D0     		beq	.L258
1937:rtos/uC-FS/Source/fs_unicode.c **** 
 2722              		.loc 1 1937 27 view .LVU868
 2723 0036 0120     		movs	r0, #1
 2724              	.LVL327:
1937:rtos/uC-FS/Source/fs_unicode.c **** 
 2725              		.loc 1 1937 27 view .LVU869
 2726 0038 ECE7     		b	.L238
 2727              	.LVL328:
 2728              	.L258:
1941:rtos/uC-FS/Source/fs_unicode.c ****                         upper = DEF_NO;
 2729              		.loc 1 1941 21 is_stmt 1 view .LVU870
1941:rtos/uC-FS/Source/fs_unicode.c ****                         upper = DEF_NO;
 2730              		.loc 1 1941 24 is_stmt 0 view .LVU871
 2731 003a B4F5045F 		cmp	r4, #8448
 2732 003e 45D3     		bcc	.L242
1944:rtos/uC-FS/Source/fs_unicode.c ****                         upper = ( (c == 0x2102u) || (c == 0x2107u)  || ((c >= 0x210Bu) && (c <= 0x2
 2733              		.loc 1 1944 28 is_stmt 1 view .LVU872
1944:rtos/uC-FS/Source/fs_unicode.c ****                         upper = ( (c == 0x2102u) || (c == 0x2107u)  || ((c >= 0x210Bu) && (c <= 0x2
 2734              		.loc 1 1944 31 is_stmt 0 view .LVU873
 2735 0040 42F24F13 		movw	r3, #8527
 2736 0044 9C42     		cmp	r4, r3
 2737 0046 43D8     		bhi	.L243
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2738              		.loc 1 1945 25 is_stmt 1 view .LVU874
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2739              		.loc 1 1945 31 is_stmt 0 view .LVU875
 2740 0048 42F20213 		movw	r3, #8450
 2741 004c 9C42     		cmp	r4, r3
 2742 004e 41D0     		beq	.L244
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
ARM GAS  /tmp/cc4JYsWh.s 			page 119


 2743              		.loc 1 1945 50 discriminator 2 view .LVU876
 2744 0050 42F20713 		movw	r3, #8455
 2745 0054 9C42     		cmp	r4, r3
 2746 0056 3FD0     		beq	.L245
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2747              		.loc 1 1945 88 discriminator 4 view .LVU877
 2748 0058 A4F50453 		sub	r3, r4, #8448
 2749 005c 0B3B     		subs	r3, r3, #11
 2750 005e 9BB2     		uxth	r3, r3
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2751              		.loc 1 1945 69 discriminator 4 view .LVU878
 2752 0060 022B     		cmp	r3, #2
 2753 0062 3BD9     		bls	.L246
1946:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2119u) && (c <= 0x211Du)) ||  (c == 0x2124u) || (c == 0x2
 2754              		.loc 1 1946 50 discriminator 6 view .LVU879
 2755 0064 A4F50453 		sub	r3, r4, #8448
 2756 0068 103B     		subs	r3, r3, #16
 2757 006a 9BB2     		uxth	r3, r3
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2758              		.loc 1 1945 108 discriminator 6 view .LVU880
 2759 006c 022B     		cmp	r3, #2
 2760 006e 37D9     		bls	.L247
1946:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2119u) && (c <= 0x211Du)) ||  (c == 0x2124u) || (c == 0x2
 2761              		.loc 1 1946 69 view .LVU881
 2762 0070 42F21513 		movw	r3, #8469
 2763 0074 9C42     		cmp	r4, r3
 2764 0076 35D0     		beq	.L248
1947:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x212Cu) && (c <= 0x212Du)) || ((c >= 0x2130u) && (c <= 0x2
 2765              		.loc 1 1947 50 discriminator 1 view .LVU882
 2766 0078 A4F50453 		sub	r3, r4, #8448
 2767 007c 193B     		subs	r3, r3, #25
 2768 007e 9BB2     		uxth	r3, r3
1946:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2119u) && (c <= 0x211Du)) ||  (c == 0x2124u) || (c == 0x2
 2769              		.loc 1 1946 108 discriminator 1 view .LVU883
 2770 0080 042B     		cmp	r3, #4
 2771 0082 31D9     		bls	.L249
1947:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x212Cu) && (c <= 0x212Du)) || ((c >= 0x2130u) && (c <= 0x2
 2772              		.loc 1 1947 69 view .LVU884
 2773 0084 42F22413 		movw	r3, #8484
 2774 0088 9C42     		cmp	r4, r3
 2775 008a 2FD0     		beq	.L250
1947:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x212Cu) && (c <= 0x212Du)) || ((c >= 0x2130u) && (c <= 0x2
 2776              		.loc 1 1947 88 discriminator 1 view .LVU885
 2777 008c 42F22813 		movw	r3, #8488
 2778 0090 9C42     		cmp	r4, r3
 2779 0092 2DD0     		beq	.L251
1948:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x213Eu) && (c <= 0x213Fu)) ||  (c == 0x2145u)             
 2780              		.loc 1 1948 50 discriminator 2 view .LVU886
 2781 0094 A4F50453 		sub	r3, r4, #8448
 2782 0098 2C3B     		subs	r3, r3, #44
 2783 009a 9BB2     		uxth	r3, r3
1947:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x212Cu) && (c <= 0x212Du)) || ((c >= 0x2130u) && (c <= 0x2
 2784              		.loc 1 1947 108 discriminator 2 view .LVU887
 2785 009c 012B     		cmp	r3, #1
 2786 009e 29D9     		bls	.L252
1948:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x213Eu) && (c <= 0x213Fu)) ||  (c == 0x2145u)             
 2787              		.loc 1 1948 88 view .LVU888
ARM GAS  /tmp/cc4JYsWh.s 			page 120


 2788 00a0 A4F50453 		sub	r3, r4, #8448
 2789 00a4 303B     		subs	r3, r3, #48
 2790 00a6 9BB2     		uxth	r3, r3
1948:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x213Eu) && (c <= 0x213Fu)) ||  (c == 0x2145u)             
 2791              		.loc 1 1948 69 view .LVU889
 2792 00a8 032B     		cmp	r3, #3
 2793 00aa 25D9     		bls	.L253
1949:rtos/uC-FS/Source/fs_unicode.c **** 
 2794              		.loc 1 1949 50 discriminator 1 view .LVU890
 2795 00ac A4F50453 		sub	r3, r4, #8448
 2796 00b0 3E3B     		subs	r3, r3, #62
 2797 00b2 9BB2     		uxth	r3, r3
1948:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x213Eu) && (c <= 0x213Fu)) ||  (c == 0x2145u)             
 2798              		.loc 1 1948 108 discriminator 1 view .LVU891
 2799 00b4 012B     		cmp	r3, #1
 2800 00b6 21D9     		bls	.L254
1949:rtos/uC-FS/Source/fs_unicode.c **** 
 2801              		.loc 1 1949 69 view .LVU892
 2802 00b8 42F24513 		movw	r3, #8517
 2803 00bc 9C42     		cmp	r4, r3
 2804 00be 01D0     		beq	.L259
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2805              		.loc 1 1945 31 view .LVU893
 2806 00c0 0020     		movs	r0, #0
 2807              	.LVL329:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2808              		.loc 1 1945 31 view .LVU894
 2809 00c2 A7E7     		b	.L238
 2810              	.LVL330:
 2811              	.L259:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2812              		.loc 1 1945 31 view .LVU895
 2813 00c4 0120     		movs	r0, #1
 2814              	.LVL331:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2815              		.loc 1 1945 31 view .LVU896
 2816 00c6 A5E7     		b	.L238
 2817              	.LVL332:
 2818              	.L239:
1921:rtos/uC-FS/Source/fs_unicode.c **** 
 2819              		.loc 1 1921 15 view .LVU897
 2820 00c8 0020     		movs	r0, #0
 2821              	.LVL333:
1921:rtos/uC-FS/Source/fs_unicode.c **** 
 2822              		.loc 1 1921 15 view .LVU898
 2823 00ca A3E7     		b	.L238
 2824              	.LVL334:
 2825              	.L242:
1942:rtos/uC-FS/Source/fs_unicode.c **** 
 2826              		.loc 1 1942 31 view .LVU899
 2827 00cc 0020     		movs	r0, #0
 2828              	.LVL335:
1942:rtos/uC-FS/Source/fs_unicode.c **** 
 2829              		.loc 1 1942 31 view .LVU900
 2830 00ce A1E7     		b	.L238
 2831              	.LVL336:
 2832              	.L243:
ARM GAS  /tmp/cc4JYsWh.s 			page 121


1952:rtos/uC-FS/Source/fs_unicode.c ****                     }
 2833              		.loc 1 1952 31 view .LVU901
 2834 00d0 0020     		movs	r0, #0
 2835              	.LVL337:
1952:rtos/uC-FS/Source/fs_unicode.c ****                     }
 2836              		.loc 1 1952 31 view .LVU902
 2837 00d2 9FE7     		b	.L238
 2838              	.LVL338:
 2839              	.L244:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2840              		.loc 1 1945 31 view .LVU903
 2841 00d4 0120     		movs	r0, #1
 2842              	.LVL339:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2843              		.loc 1 1945 31 view .LVU904
 2844 00d6 9DE7     		b	.L238
 2845              	.LVL340:
 2846              	.L245:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2847              		.loc 1 1945 31 view .LVU905
 2848 00d8 0120     		movs	r0, #1
 2849              	.LVL341:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2850              		.loc 1 1945 31 view .LVU906
 2851 00da 9BE7     		b	.L238
 2852              	.LVL342:
 2853              	.L246:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2854              		.loc 1 1945 31 view .LVU907
 2855 00dc 0120     		movs	r0, #1
 2856              	.LVL343:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2857              		.loc 1 1945 31 view .LVU908
 2858 00de 99E7     		b	.L238
 2859              	.LVL344:
 2860              	.L247:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2861              		.loc 1 1945 31 view .LVU909
 2862 00e0 0120     		movs	r0, #1
 2863              	.LVL345:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2864              		.loc 1 1945 31 view .LVU910
 2865 00e2 97E7     		b	.L238
 2866              	.LVL346:
 2867              	.L248:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2868              		.loc 1 1945 31 view .LVU911
 2869 00e4 0120     		movs	r0, #1
 2870              	.LVL347:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2871              		.loc 1 1945 31 view .LVU912
 2872 00e6 95E7     		b	.L238
 2873              	.LVL348:
 2874              	.L249:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2875              		.loc 1 1945 31 view .LVU913
 2876 00e8 0120     		movs	r0, #1
ARM GAS  /tmp/cc4JYsWh.s 			page 122


 2877              	.LVL349:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2878              		.loc 1 1945 31 view .LVU914
 2879 00ea 93E7     		b	.L238
 2880              	.LVL350:
 2881              	.L250:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2882              		.loc 1 1945 31 view .LVU915
 2883 00ec 0120     		movs	r0, #1
 2884              	.LVL351:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2885              		.loc 1 1945 31 view .LVU916
 2886 00ee 91E7     		b	.L238
 2887              	.LVL352:
 2888              	.L251:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2889              		.loc 1 1945 31 view .LVU917
 2890 00f0 0120     		movs	r0, #1
 2891              	.LVL353:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2892              		.loc 1 1945 31 view .LVU918
 2893 00f2 8FE7     		b	.L238
 2894              	.LVL354:
 2895              	.L252:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2896              		.loc 1 1945 31 view .LVU919
 2897 00f4 0120     		movs	r0, #1
 2898              	.LVL355:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2899              		.loc 1 1945 31 view .LVU920
 2900 00f6 8DE7     		b	.L238
 2901              	.LVL356:
 2902              	.L253:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2903              		.loc 1 1945 31 view .LVU921
 2904 00f8 0120     		movs	r0, #1
 2905              	.LVL357:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2906              		.loc 1 1945 31 view .LVU922
 2907 00fa 8BE7     		b	.L238
 2908              	.LVL358:
 2909              	.L254:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2910              		.loc 1 1945 31 view .LVU923
 2911 00fc 0120     		movs	r0, #1
 2912              	.LVL359:
1945:rtos/uC-FS/Source/fs_unicode.c ****                                  ((c >= 0x2110u) && (c <= 0x2112u)) ||  (c == 0x2115u)             
 2913              		.loc 1 1945 31 view .LVU924
 2914 00fe 89E7     		b	.L238
 2915              		.cfi_endproc
 2916              	.LFE19:
 2918              		.section	.text.WC_CharToCasefold,"ax",%progbits
 2919              		.align	1
 2920              		.global	WC_CharToCasefold
 2921              		.syntax unified
 2922              		.thumb
 2923              		.thumb_func
ARM GAS  /tmp/cc4JYsWh.s 			page 123


 2924              		.fpu fpv4-sp-d16
 2926              	WC_CharToCasefold:
 2927              	.LVL360:
 2928              	.LFB26:
2319:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           folded;
 2929              		.loc 1 2319 1 is_stmt 1 view -0
 2930              		.cfi_startproc
 2931              		@ args = 0, pretend = 0, frame = 0
 2932              		@ frame_needed = 0, uses_anonymous_args = 0
2319:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           folded;
 2933              		.loc 1 2319 1 is_stmt 0 view .LVU926
 2934 0000 10B5     		push	{r4, lr}
 2935              	.LCFI37:
 2936              		.cfi_def_cfa_offset 8
 2937              		.cfi_offset 4, -8
 2938              		.cfi_offset 14, -4
 2939 0002 0446     		mov	r4, r0
2320:rtos/uC-FS/Source/fs_unicode.c ****            CPU_CHAR            lower_ascii;
 2940              		.loc 1 2320 12 is_stmt 1 view .LVU927
2321:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           lower;
 2941              		.loc 1 2321 12 view .LVU928
2322:rtos/uC-FS/Source/fs_unicode.c ****            CPU_INT32S          diff;
 2942              		.loc 1 2322 12 view .LVU929
2323:rtos/uC-FS/Source/fs_unicode.c ****            CPU_WCHAR           c_start;
 2943              		.loc 1 2323 12 view .LVU930
2324:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_start_even;
 2944              		.loc 1 2324 12 view .LVU931
2325:rtos/uC-FS/Source/fs_unicode.c ****            CPU_BOOLEAN         c_even;
 2945              		.loc 1 2325 12 view .LVU932
2326:rtos/uC-FS/Source/fs_unicode.c ****     const  WC_SRCH_TBL_ENTRY  *ptbl_entry;
 2946              		.loc 1 2326 12 view .LVU933
2327:rtos/uC-FS/Source/fs_unicode.c **** 
 2947              		.loc 1 2327 5 view .LVU934
2330:rtos/uC-FS/Source/fs_unicode.c ****         lower_ascii =  ASCII_TO_LOWER((CPU_CHAR)c);
 2948              		.loc 1 2330 5 view .LVU935
2330:rtos/uC-FS/Source/fs_unicode.c ****         lower_ascii =  ASCII_TO_LOWER((CPU_CHAR)c);
 2949              		.loc 1 2330 8 is_stmt 0 view .LVU936
 2950 0004 7F28     		cmp	r0, #127
 2951 0006 09D8     		bhi	.L261
2331:rtos/uC-FS/Source/fs_unicode.c ****         folded      = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2952              		.loc 1 2331 9 is_stmt 1 view .LVU937
2331:rtos/uC-FS/Source/fs_unicode.c ****         folded      = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2953              		.loc 1 2331 24 is_stmt 0 view .LVU938
 2954 0008 C0B2     		uxtb	r0, r0
 2955              	.LVL361:
2331:rtos/uC-FS/Source/fs_unicode.c ****         folded      = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2956              		.loc 1 2331 24 view .LVU939
 2957 000a A0F14103 		sub	r3, r0, #65
 2958 000e DBB2     		uxtb	r3, r3
2331:rtos/uC-FS/Source/fs_unicode.c ****         folded      = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2959              		.loc 1 2331 21 view .LVU940
 2960 0010 192B     		cmp	r3, #25
 2961 0012 01D8     		bhi	.L262
2331:rtos/uC-FS/Source/fs_unicode.c ****         folded      = (CPU_WCHAR)lower_ascii;                   /* ... convert to lower case.      
 2962              		.loc 1 2331 21 discriminator 1 view .LVU941
 2963 0014 2030     		adds	r0, r0, #32
 2964 0016 C0B2     		uxtb	r0, r0
ARM GAS  /tmp/cc4JYsWh.s 			page 124


 2965              	.L262:
 2966              	.LVL362:
2332:rtos/uC-FS/Source/fs_unicode.c ****         return (folded);
 2967              		.loc 1 2332 9 is_stmt 1 discriminator 4 view .LVU942
2332:rtos/uC-FS/Source/fs_unicode.c ****         return (folded);
 2968              		.loc 1 2332 21 is_stmt 0 discriminator 4 view .LVU943
 2969 0018 80B2     		uxth	r0, r0
 2970              	.LVL363:
2333:rtos/uC-FS/Source/fs_unicode.c ****     }
 2971              		.loc 1 2333 9 is_stmt 1 discriminator 4 view .LVU944
 2972              	.L263:
2376:rtos/uC-FS/Source/fs_unicode.c **** 
 2973              		.loc 1 2376 1 is_stmt 0 view .LVU945
 2974 001a 10BD     		pop	{r4, pc}
 2975              	.LVL364:
 2976              	.L261:
2344:rtos/uC-FS/Source/fs_unicode.c ****     if (lower != c) {                                           /* If char to lower is NOT char (se
 2977              		.loc 1 2344 5 is_stmt 1 view .LVU946
2344:rtos/uC-FS/Source/fs_unicode.c ****     if (lower != c) {                                           /* If char to lower is NOT char (se
 2978              		.loc 1 2344 13 is_stmt 0 view .LVU947
 2979 001c FFF7FEFF 		bl	WC_CharToLower
 2980              	.LVL365:
2345:rtos/uC-FS/Source/fs_unicode.c ****         folded = lower;                                         /* ... folded is lower.            
 2981              		.loc 1 2345 5 is_stmt 1 view .LVU948
2345:rtos/uC-FS/Source/fs_unicode.c ****         folded = lower;                                         /* ... folded is lower.            
 2982              		.loc 1 2345 8 is_stmt 0 view .LVU949
 2983 0020 8442     		cmp	r4, r0
 2984 0022 FAD1     		bne	.L263
2352:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToCasefoldTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
 2985              		.loc 1 2352 5 is_stmt 1 view .LVU950
2352:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToCasefoldTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
 2986              		.loc 1 2352 18 is_stmt 0 view .LVU951
 2987 0024 2246     		mov	r2, r4
 2988 0026 1721     		movs	r1, #23
 2989 0028 1148     		ldr	r0, .L274
 2990              	.LVL366:
2352:rtos/uC-FS/Source/fs_unicode.c ****                             (sizeof(WC_CharToCasefoldTbl) / sizeof(WC_SRCH_TBL_ENTRY)),
 2991              		.loc 1 2352 18 view .LVU952
 2992 002a FFF7FEFF 		bl	WC_SrchTbl
 2993              	.LVL367:
2356:rtos/uC-FS/Source/fs_unicode.c ****         folded = c;                                             /* ... rtn original char.          
 2994              		.loc 1 2356 5 is_stmt 1 view .LVU953
2356:rtos/uC-FS/Source/fs_unicode.c ****         folded = c;                                             /* ... rtn original char.          
 2995              		.loc 1 2356 8 is_stmt 0 view .LVU954
 2996 002e E8B1     		cbz	r0, .L267
2362:rtos/uC-FS/Source/fs_unicode.c **** 
 2997              		.loc 1 2362 5 is_stmt 1 view .LVU955
2362:rtos/uC-FS/Source/fs_unicode.c **** 
 2998              		.loc 1 2362 22 is_stmt 0 view .LVU956
 2999 0030 B0F90230 		ldrsh	r3, [r0, #2]
 3000              	.LVL368:
2364:rtos/uC-FS/Source/fs_unicode.c ****         c_start      = ptbl_entry->Char;
 3001              		.loc 1 2364 5 is_stmt 1 view .LVU957
2364:rtos/uC-FS/Source/fs_unicode.c ****         c_start      = ptbl_entry->Char;
 3002              		.loc 1 2364 8 is_stmt 0 view .LVU958
 3003 0034 47F6FF71 		movw	r1, #32767
 3004 0038 8B42     		cmp	r3, r1
ARM GAS  /tmp/cc4JYsWh.s 			page 125


 3005 003a 03D0     		beq	.L272
2372:rtos/uC-FS/Source/fs_unicode.c ****     }
 3006              		.loc 1 2372 9 is_stmt 1 view .LVU959
2372:rtos/uC-FS/Source/fs_unicode.c ****     }
 3007              		.loc 1 2372 22 is_stmt 0 view .LVU960
 3008 003c 14FA83F0 		uxtah	r0, r4, r3
 3009              	.LVL369:
2372:rtos/uC-FS/Source/fs_unicode.c ****     }
 3010              		.loc 1 2372 22 view .LVU961
 3011 0040 80B2     		uxth	r0, r0
 3012              	.LVL370:
2372:rtos/uC-FS/Source/fs_unicode.c ****     }
 3013              		.loc 1 2372 22 view .LVU962
 3014 0042 EAE7     		b	.L263
 3015              	.LVL371:
 3016              	.L272:
2365:rtos/uC-FS/Source/fs_unicode.c ****         c_start_even = ((c_start % 2u) == 0u)    ? DEF_YES : DEF_NO;
 3017              		.loc 1 2365 9 is_stmt 1 view .LVU963
2365:rtos/uC-FS/Source/fs_unicode.c ****         c_start_even = ((c_start % 2u) == 0u)    ? DEF_YES : DEF_NO;
 3018              		.loc 1 2365 22 is_stmt 0 view .LVU964
 3019 0044 0388     		ldrh	r3, [r0]
 3020              	.LVL372:
2366:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES : DEF_NO;
 3021              		.loc 1 2366 9 is_stmt 1 view .LVU965
2366:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES : DEF_NO;
 3022              		.loc 1 2366 22 is_stmt 0 view .LVU966
 3023 0046 13F0010F 		tst	r3, #1
 3024 004a 08D1     		bne	.L268
 3025 004c 0122     		movs	r2, #1
 3026              	.L265:
 3027              	.LVL373:
2367:rtos/uC-FS/Source/fs_unicode.c **** 
 3028              		.loc 1 2367 9 is_stmt 1 discriminator 4 view .LVU967
2367:rtos/uC-FS/Source/fs_unicode.c **** 
 3029              		.loc 1 2367 22 is_stmt 0 discriminator 4 view .LVU968
 3030 004e 14F0010F 		tst	r4, #1
 3031 0052 06D1     		bne	.L269
2367:rtos/uC-FS/Source/fs_unicode.c **** 
 3032              		.loc 1 2367 22 view .LVU969
 3033 0054 0123     		movs	r3, #1
 3034              	.LVL374:
 3035              	.L266:
2369:rtos/uC-FS/Source/fs_unicode.c **** 
 3036              		.loc 1 2369 9 is_stmt 1 discriminator 4 view .LVU970
2369:rtos/uC-FS/Source/fs_unicode.c **** 
 3037              		.loc 1 2369 22 is_stmt 0 discriminator 4 view .LVU971
 3038 0056 9A42     		cmp	r2, r3
 3039 0058 05D0     		beq	.L273
2369:rtos/uC-FS/Source/fs_unicode.c **** 
 3040              		.loc 1 2369 22 view .LVU972
 3041 005a 2046     		mov	r0, r4
 3042              	.LVL375:
2369:rtos/uC-FS/Source/fs_unicode.c **** 
 3043              		.loc 1 2369 22 view .LVU973
 3044 005c DDE7     		b	.L263
 3045              	.LVL376:
 3046              	.L268:
ARM GAS  /tmp/cc4JYsWh.s 			page 126


2366:rtos/uC-FS/Source/fs_unicode.c ****         c_even       = ((c       % 2u) == 0u)    ? DEF_YES : DEF_NO;
 3047              		.loc 1 2366 22 view .LVU974
 3048 005e 0022     		movs	r2, #0
 3049 0060 F5E7     		b	.L265
 3050              	.LVL377:
 3051              	.L269:
2367:rtos/uC-FS/Source/fs_unicode.c **** 
 3052              		.loc 1 2367 22 view .LVU975
 3053 0062 0023     		movs	r3, #0
 3054              	.LVL378:
2367:rtos/uC-FS/Source/fs_unicode.c **** 
 3055              		.loc 1 2367 22 view .LVU976
 3056 0064 F7E7     		b	.L266
 3057              	.LVL379:
 3058              	.L273:
2369:rtos/uC-FS/Source/fs_unicode.c **** 
 3059              		.loc 1 2369 22 discriminator 1 view .LVU977
 3060 0066 601C     		adds	r0, r4, #1
 3061              	.LVL380:
2369:rtos/uC-FS/Source/fs_unicode.c **** 
 3062              		.loc 1 2369 22 discriminator 1 view .LVU978
 3063 0068 80B2     		uxth	r0, r0
 3064 006a D6E7     		b	.L263
 3065              	.LVL381:
 3066              	.L267:
2358:rtos/uC-FS/Source/fs_unicode.c ****     }
 3067              		.loc 1 2358 16 view .LVU979
 3068 006c 2046     		mov	r0, r4
 3069              	.LVL382:
2358:rtos/uC-FS/Source/fs_unicode.c ****     }
 3070              		.loc 1 2358 16 view .LVU980
 3071 006e D4E7     		b	.L263
 3072              	.L275:
 3073              		.align	2
 3074              	.L274:
 3075 0070 00000000 		.word	.LANCHOR4
 3076              		.cfi_endproc
 3077              	.LFE26:
 3079              		.section	.text.WC_StrCmpIgnoreCase_N,"ax",%progbits
 3080              		.align	1
 3081              		.global	WC_StrCmpIgnoreCase_N
 3082              		.syntax unified
 3083              		.thumb
 3084              		.thumb_func
 3085              		.fpu fpv4-sp-d16
 3087              	WC_StrCmpIgnoreCase_N:
 3088              	.LVL383:
 3089              	.LFB9:
1124:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p1_str_next;
 3090              		.loc 1 1124 1 is_stmt 1 view -0
 3091              		.cfi_startproc
 3092              		@ args = 0, pretend = 0, frame = 0
 3093              		@ frame_needed = 0, uses_anonymous_args = 0
1125:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p2_str_next;
 3094              		.loc 1 1125 5 view .LVU982
1126:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    char1;
 3095              		.loc 1 1126 5 view .LVU983
ARM GAS  /tmp/cc4JYsWh.s 			page 127


1127:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    char2;
 3096              		.loc 1 1127 5 view .LVU984
1128:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S   cmp_val;
 3097              		.loc 1 1128 5 view .LVU985
1129:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   cmp_len;
 3098              		.loc 1 1129 5 view .LVU986
1130:rtos/uC-FS/Source/fs_unicode.c **** 
 3099              		.loc 1 1130 5 view .LVU987
1133:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);
 3100              		.loc 1 1133 5 view .LVU988
1133:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);
 3101              		.loc 1 1133 8 is_stmt 0 view .LVU989
 3102 0000 002A     		cmp	r2, #0
 3103 0002 46D0     		beq	.L285
1124:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *p1_str_next;
 3104              		.loc 1 1124 1 view .LVU990
 3105 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3106              	.LCFI38:
 3107              		.cfi_def_cfa_offset 32
 3108              		.cfi_offset 4, -32
 3109              		.cfi_offset 5, -28
 3110              		.cfi_offset 6, -24
 3111              		.cfi_offset 7, -20
 3112              		.cfi_offset 8, -16
 3113              		.cfi_offset 9, -12
 3114              		.cfi_offset 10, -8
 3115              		.cfi_offset 14, -4
 3116 0008 0546     		mov	r5, r0
 3117 000a 8846     		mov	r8, r1
 3118 000c 9246     		mov	r10, r2
1137:rtos/uC-FS/Source/fs_unicode.c ****         if (p2_str == (CPU_WCHAR *)0) {
 3119              		.loc 1 1137 5 is_stmt 1 view .LVU991
1137:rtos/uC-FS/Source/fs_unicode.c ****         if (p2_str == (CPU_WCHAR *)0) {
 3120              		.loc 1 1137 8 is_stmt 0 view .LVU992
 3121 000e 70B1     		cbz	r0, .L294
1145:rtos/uC-FS/Source/fs_unicode.c ****         char1   =  WC_CharToCasefold(*p1_str);
 3122              		.loc 1 1145 5 is_stmt 1 view .LVU993
1145:rtos/uC-FS/Source/fs_unicode.c ****         char1   =  WC_CharToCasefold(*p1_str);
 3123              		.loc 1 1145 8 is_stmt 0 view .LVU994
 3124 0010 99B1     		cbz	r1, .L295
1152:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next = p2_str;
 3125              		.loc 1 1152 5 is_stmt 1 view .LVU995
 3126              	.LVL384:
1153:rtos/uC-FS/Source/fs_unicode.c ****     p1_str_next++;
 3127              		.loc 1 1153 5 view .LVU996
1154:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next++;
 3128              		.loc 1 1154 5 view .LVU997
1154:rtos/uC-FS/Source/fs_unicode.c ****     p2_str_next++;
 3129              		.loc 1 1154 16 is_stmt 0 view .LVU998
 3130 0012 0646     		mov	r6, r0
 3131              	.LVL385:
1155:rtos/uC-FS/Source/fs_unicode.c ****     char1       = WC_CharToCasefold(*p1_str);
 3132              		.loc 1 1155 5 is_stmt 1 view .LVU999
1155:rtos/uC-FS/Source/fs_unicode.c ****     char1       = WC_CharToCasefold(*p1_str);
 3133              		.loc 1 1155 16 is_stmt 0 view .LVU1000
 3134 0014 0F46     		mov	r7, r1
 3135              	.LVL386:
ARM GAS  /tmp/cc4JYsWh.s 			page 128


1156:rtos/uC-FS/Source/fs_unicode.c ****     char2       = WC_CharToCasefold(*p2_str);
 3136              		.loc 1 1156 5 is_stmt 1 view .LVU1001
1156:rtos/uC-FS/Source/fs_unicode.c ****     char2       = WC_CharToCasefold(*p2_str);
 3137              		.loc 1 1156 19 is_stmt 0 view .LVU1002
 3138 0016 36F8020B 		ldrh	r0, [r6], #2
 3139              	.LVL387:
1156:rtos/uC-FS/Source/fs_unicode.c ****     char2       = WC_CharToCasefold(*p2_str);
 3140              		.loc 1 1156 19 view .LVU1003
 3141 001a FFF7FEFF 		bl	WC_CharToCasefold
 3142              	.LVL388:
1156:rtos/uC-FS/Source/fs_unicode.c ****     char2       = WC_CharToCasefold(*p2_str);
 3143              		.loc 1 1156 19 view .LVU1004
 3144 001e 0446     		mov	r4, r0
 3145              	.LVL389:
1157:rtos/uC-FS/Source/fs_unicode.c ****     cmp_len     = 0u;
 3146              		.loc 1 1157 5 is_stmt 1 view .LVU1005
1157:rtos/uC-FS/Source/fs_unicode.c ****     cmp_len     = 0u;
 3147              		.loc 1 1157 19 is_stmt 0 view .LVU1006
 3148 0020 37F8020B 		ldrh	r0, [r7], #2
 3149              	.LVL390:
1157:rtos/uC-FS/Source/fs_unicode.c ****     cmp_len     = 0u;
 3150              		.loc 1 1157 19 view .LVU1007
 3151 0024 FFF7FEFF 		bl	WC_CharToCasefold
 3152              	.LVL391:
1158:rtos/uC-FS/Source/fs_unicode.c ****     while (( char1       ==  char2)          &&                 /* Cmp strs until non-matching char
 3153              		.loc 1 1158 5 is_stmt 1 view .LVU1008
1159:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
 3154              		.loc 1 1159 5 view .LVU1009
1158:rtos/uC-FS/Source/fs_unicode.c ****     while (( char1       ==  char2)          &&                 /* Cmp strs until non-matching char
 3155              		.loc 1 1158 17 is_stmt 0 view .LVU1010
 3156 0028 4FF00009 		mov	r9, #0
1159:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
 3157              		.loc 1 1159 11 view .LVU1011
 3158 002c 16E0     		b	.L280
 3159              	.LVL392:
 3160              	.L294:
1138:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_INT32S)0);                             /* If BOTH str ptrs NULL,  rtn 0   
 3161              		.loc 1 1138 9 is_stmt 1 view .LVU1012
1138:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_INT32S)0);                             /* If BOTH str ptrs NULL,  rtn 0   
 3162              		.loc 1 1138 12 is_stmt 0 view .LVU1013
 3163 002e 91B3     		cbz	r1, .L286
1141:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)0 - (CPU_INT32S)char2;
 3164              		.loc 1 1141 9 is_stmt 1 view .LVU1014
1141:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)0 - (CPU_INT32S)char2;
 3165              		.loc 1 1141 20 is_stmt 0 view .LVU1015
 3166 0030 0888     		ldrh	r0, [r1]
 3167              	.LVL393:
1141:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)0 - (CPU_INT32S)char2;
 3168              		.loc 1 1141 20 view .LVU1016
 3169 0032 FFF7FEFF 		bl	WC_CharToCasefold
 3170              	.LVL394:
1142:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 3171              		.loc 1 1142 9 is_stmt 1 view .LVU1017
1142:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 3172              		.loc 1 1142 17 is_stmt 0 view .LVU1018
 3173 0036 4042     		rsbs	r0, r0, #0
 3174              	.LVL395:
ARM GAS  /tmp/cc4JYsWh.s 			page 129


1143:rtos/uC-FS/Source/fs_unicode.c ****     }
 3175              		.loc 1 1143 9 is_stmt 1 view .LVU1019
1143:rtos/uC-FS/Source/fs_unicode.c ****     }
 3176              		.loc 1 1143 16 is_stmt 0 view .LVU1020
 3177 0038 1DE0     		b	.L276
 3178              	.LVL396:
 3179              	.L295:
1146:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)char1;
 3180              		.loc 1 1146 9 is_stmt 1 view .LVU1021
1146:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)char1;
 3181              		.loc 1 1146 20 is_stmt 0 view .LVU1022
 3182 003a 0088     		ldrh	r0, [r0]
 3183              	.LVL397:
1146:rtos/uC-FS/Source/fs_unicode.c ****         cmp_val = (CPU_INT32S)char1;
 3184              		.loc 1 1146 20 view .LVU1023
 3185 003c FFF7FEFF 		bl	WC_CharToCasefold
 3186              	.LVL398:
1147:rtos/uC-FS/Source/fs_unicode.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 3187              		.loc 1 1147 9 is_stmt 1 view .LVU1024
1148:rtos/uC-FS/Source/fs_unicode.c ****     }
 3188              		.loc 1 1148 9 view .LVU1025
1148:rtos/uC-FS/Source/fs_unicode.c ****     }
 3189              		.loc 1 1148 16 is_stmt 0 view .LVU1026
 3190 0040 19E0     		b	.L276
 3191              	.LVL399:
 3192              	.L282:
1164:rtos/uC-FS/Source/fs_unicode.c ****         p2_str_next++;
 3193              		.loc 1 1164 9 is_stmt 1 view .LVU1027
1164:rtos/uC-FS/Source/fs_unicode.c ****         p2_str_next++;
 3194              		.loc 1 1164 20 is_stmt 0 view .LVU1028
 3195 0042 0236     		adds	r6, r6, #2
 3196              	.LVL400:
1165:rtos/uC-FS/Source/fs_unicode.c ****         p1_str++;
 3197              		.loc 1 1165 9 is_stmt 1 view .LVU1029
1165:rtos/uC-FS/Source/fs_unicode.c ****         p1_str++;
 3198              		.loc 1 1165 20 is_stmt 0 view .LVU1030
 3199 0044 0237     		adds	r7, r7, #2
 3200              	.LVL401:
1166:rtos/uC-FS/Source/fs_unicode.c ****         p2_str++;
 3201              		.loc 1 1166 9 is_stmt 1 view .LVU1031
1167:rtos/uC-FS/Source/fs_unicode.c ****         cmp_len++;
 3202              		.loc 1 1167 9 view .LVU1032
1168:rtos/uC-FS/Source/fs_unicode.c ****         char1 = WC_CharToCasefold(*p1_str);
 3203              		.loc 1 1168 9 view .LVU1033
1168:rtos/uC-FS/Source/fs_unicode.c ****         char1 = WC_CharToCasefold(*p1_str);
 3204              		.loc 1 1168 16 is_stmt 0 view .LVU1034
 3205 0046 09F10109 		add	r9, r9, #1
 3206              	.LVL402:
1169:rtos/uC-FS/Source/fs_unicode.c ****         char2 = WC_CharToCasefold(*p2_str);
 3207              		.loc 1 1169 9 is_stmt 1 view .LVU1035
1169:rtos/uC-FS/Source/fs_unicode.c ****         char2 = WC_CharToCasefold(*p2_str);
 3208              		.loc 1 1169 17 is_stmt 0 view .LVU1036
 3209 004a 35F8020F 		ldrh	r0, [r5, #2]!
 3210              	.LVL403:
1169:rtos/uC-FS/Source/fs_unicode.c ****         char2 = WC_CharToCasefold(*p2_str);
 3211              		.loc 1 1169 17 view .LVU1037
 3212 004e FFF7FEFF 		bl	WC_CharToCasefold
ARM GAS  /tmp/cc4JYsWh.s 			page 130


 3213              	.LVL404:
 3214 0052 0446     		mov	r4, r0
 3215              	.LVL405:
1170:rtos/uC-FS/Source/fs_unicode.c ****     }
 3216              		.loc 1 1170 9 is_stmt 1 view .LVU1038
1170:rtos/uC-FS/Source/fs_unicode.c ****     }
 3217              		.loc 1 1170 17 is_stmt 0 view .LVU1039
 3218 0054 38F8020F 		ldrh	r0, [r8, #2]!
 3219              	.LVL406:
1170:rtos/uC-FS/Source/fs_unicode.c ****     }
 3220              		.loc 1 1170 17 view .LVU1040
 3221 0058 FFF7FEFF 		bl	WC_CharToCasefold
 3222              	.LVL407:
 3223              	.L280:
1159:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
 3224              		.loc 1 1159 11 is_stmt 1 view .LVU1041
 3225 005c 8442     		cmp	r4, r0
 3226 005e 05D1     		bne	.L281
1160:rtos/uC-FS/Source/fs_unicode.c ****            ( p1_str_next != (CPU_WCHAR  *)0) &&                 /* ... or NULL ptr(s) found        
 3227              		.loc 1 1160 13 is_stmt 0 discriminator 1 view .LVU1042
 3228 0060 2B88     		ldrh	r3, [r5]
1159:rtos/uC-FS/Source/fs_unicode.c ****            (*p1_str      != (CPU_WCHAR   )0) &&                 /* ... or NULL chars               
 3229              		.loc 1 1159 46 discriminator 1 view .LVU1043
 3230 0062 1BB1     		cbz	r3, .L281
1160:rtos/uC-FS/Source/fs_unicode.c ****            ( p1_str_next != (CPU_WCHAR  *)0) &&                 /* ... or NULL ptr(s) found        
 3231              		.loc 1 1160 46 view .LVU1044
 3232 0064 16B1     		cbz	r6, .L281
1161:rtos/uC-FS/Source/fs_unicode.c ****            ( p2_str_next != (CPU_WCHAR  *)0) &&
 3233              		.loc 1 1161 46 view .LVU1045
 3234 0066 0FB1     		cbz	r7, .L281
1162:rtos/uC-FS/Source/fs_unicode.c ****            ( cmp_len     <  (CPU_SIZE_T  )len_max)) {           /* ... or max nbr chars cmp'd      
 3235              		.loc 1 1162 46 view .LVU1046
 3236 0068 D145     		cmp	r9, r10
 3237 006a EAD3     		bcc	.L282
 3238              	.L281:
1174:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);                                 /* ... rtn 0                   (see
 3239              		.loc 1 1174 5 is_stmt 1 view .LVU1047
1174:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_INT32S)0);                                 /* ... rtn 0                   (see
 3240              		.loc 1 1174 8 is_stmt 0 view .LVU1048
 3241 006c D145     		cmp	r9, r10
 3242 006e 14D0     		beq	.L287
1178:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = (CPU_INT32S)char1 - (CPU_INT32S)char2;       /* ... calc & rtn char diff    (see
 3243              		.loc 1 1178 5 is_stmt 1 view .LVU1049
1178:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = (CPU_INT32S)char1 - (CPU_INT32S)char2;       /* ... calc & rtn char diff    (see
 3244              		.loc 1 1178 8 is_stmt 0 view .LVU1050
 3245 0070 8442     		cmp	r4, r0
 3246 0072 02D0     		beq	.L283
1179:rtos/uC-FS/Source/fs_unicode.c **** 
 3247              		.loc 1 1179 10 is_stmt 1 view .LVU1051
1179:rtos/uC-FS/Source/fs_unicode.c **** 
 3248              		.loc 1 1179 18 is_stmt 0 view .LVU1052
 3249 0074 201A     		subs	r0, r4, r0
 3250              	.LVL408:
 3251              	.L276:
1200:rtos/uC-FS/Source/fs_unicode.c **** 
 3252              		.loc 1 1200 1 view .LVU1053
 3253 0076 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
ARM GAS  /tmp/cc4JYsWh.s 			page 131


 3254              	.LVL409:
 3255              	.L283:
1181:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = 0;                                           /* ... strs identical; rtn 0   (see
 3256              		.loc 1 1181 12 is_stmt 1 view .LVU1054
1181:rtos/uC-FS/Source/fs_unicode.c ****          cmp_val = 0;                                           /* ... strs identical; rtn 0   (see
 3257              		.loc 1 1181 15 is_stmt 0 view .LVU1055
 3258 007a 84B1     		cbz	r4, .L288
1185:rtos/uC-FS/Source/fs_unicode.c ****             if (p2_str_next == (CPU_WCHAR *)0) {                /* If BOTH next str ptrs NULL, ... 
 3259              		.loc 1 1185 9 is_stmt 1 view .LVU1056
1185:rtos/uC-FS/Source/fs_unicode.c ****             if (p2_str_next == (CPU_WCHAR *)0) {                /* If BOTH next str ptrs NULL, ... 
 3260              		.loc 1 1185 12 is_stmt 0 view .LVU1057
 3261 007c 1EB1     		cbz	r6, .L296
1193:rtos/uC-FS/Source/fs_unicode.c ****             cmp_val = (CPU_INT32S)char1;                        /* ... rtn pos p1_str_next val (see
 3262              		.loc 1 1193 13 is_stmt 1 view .LVU1058
1193:rtos/uC-FS/Source/fs_unicode.c ****             cmp_val = (CPU_INT32S)char1;                        /* ... rtn pos p1_str_next val (see
 3263              		.loc 1 1193 24 is_stmt 0 view .LVU1059
 3264 007e 3088     		ldrh	r0, [r6]
 3265              	.LVL410:
1193:rtos/uC-FS/Source/fs_unicode.c ****             cmp_val = (CPU_INT32S)char1;                        /* ... rtn pos p1_str_next val (see
 3266              		.loc 1 1193 24 view .LVU1060
 3267 0080 FFF7FEFF 		bl	WC_CharToCasefold
 3268              	.LVL411:
1194:rtos/uC-FS/Source/fs_unicode.c ****         }
 3269              		.loc 1 1194 13 is_stmt 1 view .LVU1061
1194:rtos/uC-FS/Source/fs_unicode.c ****         }
 3270              		.loc 1 1194 13 is_stmt 0 view .LVU1062
 3271 0084 F7E7     		b	.L276
 3272              	.LVL412:
 3273              	.L296:
1186:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0;                       /* ... rtn 0                   (see
 3274              		.loc 1 1186 13 is_stmt 1 view .LVU1063
1186:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0;                       /* ... rtn 0                   (see
 3275              		.loc 1 1186 16 is_stmt 0 view .LVU1064
 3276 0086 67B1     		cbz	r7, .L289
1189:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0 - (CPU_INT32S)char2;   /* ... rtn neg p2_str_next val (see
 3277              		.loc 1 1189 17 is_stmt 1 view .LVU1065
1189:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0 - (CPU_INT32S)char2;   /* ... rtn neg p2_str_next val (see
 3278              		.loc 1 1189 29 is_stmt 0 view .LVU1066
 3279 0088 3888     		ldrh	r0, [r7]
 3280              	.LVL413:
1189:rtos/uC-FS/Source/fs_unicode.c ****                 cmp_val  = (CPU_INT32S)0 - (CPU_INT32S)char2;   /* ... rtn neg p2_str_next val (see
 3281              		.loc 1 1189 29 view .LVU1067
 3282 008a FFF7FEFF 		bl	WC_CharToCasefold
 3283              	.LVL414:
1190:rtos/uC-FS/Source/fs_unicode.c ****             }
 3284              		.loc 1 1190 17 is_stmt 1 view .LVU1068
1190:rtos/uC-FS/Source/fs_unicode.c ****             }
 3285              		.loc 1 1190 26 is_stmt 0 view .LVU1069
 3286 008e 4042     		rsbs	r0, r0, #0
 3287              	.LVL415:
1190:rtos/uC-FS/Source/fs_unicode.c ****             }
 3288              		.loc 1 1190 26 view .LVU1070
 3289 0090 F1E7     		b	.L276
 3290              	.LVL416:
 3291              	.L285:
 3292              	.LCFI39:
 3293              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc4JYsWh.s 			page 132


 3294              		.cfi_restore 4
 3295              		.cfi_restore 5
 3296              		.cfi_restore 6
 3297              		.cfi_restore 7
 3298              		.cfi_restore 8
 3299              		.cfi_restore 9
 3300              		.cfi_restore 10
 3301              		.cfi_restore 14
1134:rtos/uC-FS/Source/fs_unicode.c ****     }
 3302              		.loc 1 1134 16 view .LVU1071
 3303 0092 0020     		movs	r0, #0
 3304              	.LVL417:
1200:rtos/uC-FS/Source/fs_unicode.c **** 
 3305              		.loc 1 1200 1 view .LVU1072
 3306 0094 7047     		bx	lr
 3307              	.LVL418:
 3308              	.L286:
 3309              	.LCFI40:
 3310              		.cfi_def_cfa_offset 32
 3311              		.cfi_offset 4, -32
 3312              		.cfi_offset 5, -28
 3313              		.cfi_offset 6, -24
 3314              		.cfi_offset 7, -20
 3315              		.cfi_offset 8, -16
 3316              		.cfi_offset 9, -12
 3317              		.cfi_offset 10, -8
 3318              		.cfi_offset 14, -4
1139:rtos/uC-FS/Source/fs_unicode.c ****         }
 3319              		.loc 1 1139 20 view .LVU1073
 3320 0096 0020     		movs	r0, #0
 3321              	.LVL419:
1139:rtos/uC-FS/Source/fs_unicode.c ****         }
 3322              		.loc 1 1139 20 view .LVU1074
 3323 0098 EDE7     		b	.L276
 3324              	.LVL420:
 3325              	.L287:
1175:rtos/uC-FS/Source/fs_unicode.c ****     }
 3326              		.loc 1 1175 16 view .LVU1075
 3327 009a 0020     		movs	r0, #0
 3328              	.LVL421:
1175:rtos/uC-FS/Source/fs_unicode.c ****     }
 3329              		.loc 1 1175 16 view .LVU1076
 3330 009c EBE7     		b	.L276
 3331              	.LVL422:
 3332              	.L288:
1182:rtos/uC-FS/Source/fs_unicode.c **** 
 3333              		.loc 1 1182 18 view .LVU1077
 3334 009e 0020     		movs	r0, #0
 3335              	.LVL423:
1182:rtos/uC-FS/Source/fs_unicode.c **** 
 3336              		.loc 1 1182 18 view .LVU1078
 3337 00a0 E9E7     		b	.L276
 3338              	.LVL424:
 3339              	.L289:
1187:rtos/uC-FS/Source/fs_unicode.c ****             } else {                                            /* If p1_str_next NULL, ...        
 3340              		.loc 1 1187 26 view .LVU1079
 3341 00a2 0020     		movs	r0, #0
ARM GAS  /tmp/cc4JYsWh.s 			page 133


 3342              	.LVL425:
1187:rtos/uC-FS/Source/fs_unicode.c ****             } else {                                            /* If p1_str_next NULL, ...        
 3343              		.loc 1 1187 26 view .LVU1080
 3344 00a4 E7E7     		b	.L276
 3345              		.cfi_endproc
 3346              	.LFE9:
 3348              		.section	.text.WC_StrCmpIgnoreCase,"ax",%progbits
 3349              		.align	1
 3350              		.global	WC_StrCmpIgnoreCase
 3351              		.syntax unified
 3352              		.thumb
 3353              		.thumb_func
 3354              		.fpu fpv4-sp-d16
 3356              	WC_StrCmpIgnoreCase:
 3357              	.LVL426:
 3358              	.LFB8:
1015:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S  cmp_val;
 3359              		.loc 1 1015 1 is_stmt 1 view -0
 3360              		.cfi_startproc
 3361              		@ args = 0, pretend = 0, frame = 0
 3362              		@ frame_needed = 0, uses_anonymous_args = 0
1015:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT32S  cmp_val;
 3363              		.loc 1 1015 1 is_stmt 0 view .LVU1082
 3364 0000 08B5     		push	{r3, lr}
 3365              	.LCFI41:
 3366              		.cfi_def_cfa_offset 8
 3367              		.cfi_offset 3, -8
 3368              		.cfi_offset 14, -4
1016:rtos/uC-FS/Source/fs_unicode.c **** 
 3369              		.loc 1 1016 5 is_stmt 1 view .LVU1083
1019:rtos/uC-FS/Source/fs_unicode.c ****                                     p2_str,
 3370              		.loc 1 1019 5 view .LVU1084
1019:rtos/uC-FS/Source/fs_unicode.c ****                                     p2_str,
 3371              		.loc 1 1019 15 is_stmt 0 view .LVU1085
 3372 0002 4FF0FF32 		mov	r2, #-1
 3373 0006 FFF7FEFF 		bl	WC_StrCmpIgnoreCase_N
 3374              	.LVL427:
1023:rtos/uC-FS/Source/fs_unicode.c **** }
 3375              		.loc 1 1023 5 is_stmt 1 view .LVU1086
1024:rtos/uC-FS/Source/fs_unicode.c **** 
 3376              		.loc 1 1024 1 is_stmt 0 view .LVU1087
 3377 000a 08BD     		pop	{r3, pc}
 3378              		.cfi_endproc
 3379              	.LFE8:
 3381              		.section	.text.WC_CharToMB,"ax",%progbits
 3382              		.align	1
 3383              		.global	WC_CharToMB
 3384              		.syntax unified
 3385              		.thumb
 3386              		.thumb_func
 3387              		.fpu fpv4-sp-d16
 3389              	WC_CharToMB:
 3390              	.LVL428:
 3391              	.LFB27:
2446:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  byte1;
 3392              		.loc 1 2446 1 is_stmt 1 view -0
 3393              		.cfi_startproc
ARM GAS  /tmp/cc4JYsWh.s 			page 134


 3394              		@ args = 0, pretend = 0, frame = 0
 3395              		@ frame_needed = 0, uses_anonymous_args = 0
 3396              		@ link register save eliminated.
2447:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  byte2;
 3397              		.loc 1 2447 5 view .LVU1089
2448:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  byte3;
 3398              		.loc 1 2448 5 view .LVU1090
2449:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
 3399              		.loc 1 2449 5 view .LVU1091
2455:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)0);
 3400              		.loc 1 2455 5 view .LVU1092
2455:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)0);
 3401              		.loc 1 2455 8 is_stmt 0 view .LVU1093
 3402 0000 0346     		mov	r3, r0
 3403 0002 28B3     		cbz	r0, .L303
2485:rtos/uC-FS/Source/fs_unicode.c ****         byte3   = (CPU_INT08U)(c_src & 0x3Fu) | DEF_BIT_07;
 3404              		.loc 1 2485 5 is_stmt 1 view .LVU1094
2485:rtos/uC-FS/Source/fs_unicode.c ****         byte3   = (CPU_INT08U)(c_src & 0x3Fu) | DEF_BIT_07;
 3405              		.loc 1 2485 8 is_stmt 0 view .LVU1095
 3406 0004 B1F5006F 		cmp	r1, #2048
 3407 0008 06D2     		bcs	.L304
2501:rtos/uC-FS/Source/fs_unicode.c ****         byte2   = (CPU_INT08U)(c_src & 0x3Fu) | DEF_BIT_07;
 3408              		.loc 1 2501 5 is_stmt 1 view .LVU1096
2501:rtos/uC-FS/Source/fs_unicode.c ****         byte2   = (CPU_INT08U)(c_src & 0x3Fu) | DEF_BIT_07;
 3409              		.loc 1 2501 8 is_stmt 0 view .LVU1097
 3410 000a 7F29     		cmp	r1, #127
 3411 000c 14D8     		bhi	.L305
2514:rtos/uC-FS/Source/fs_unicode.c ****    *pc_dest = (CPU_CHAR)byte1;
 3412              		.loc 1 2514 5 is_stmt 1 view .LVU1098
2514:rtos/uC-FS/Source/fs_unicode.c ****    *pc_dest = (CPU_CHAR)byte1;
 3413              		.loc 1 2514 13 is_stmt 0 view .LVU1099
 3414 000e 01F07F01 		and	r1, r1, #127
 3415              	.LVL429:
2515:rtos/uC-FS/Source/fs_unicode.c ****     return ((CPU_SIZE_T)1);
 3416              		.loc 1 2515 4 is_stmt 1 view .LVU1100
2515:rtos/uC-FS/Source/fs_unicode.c ****     return ((CPU_SIZE_T)1);
 3417              		.loc 1 2515 13 is_stmt 0 view .LVU1101
 3418 0012 0170     		strb	r1, [r0]
2516:rtos/uC-FS/Source/fs_unicode.c **** }
 3419              		.loc 1 2516 5 is_stmt 1 view .LVU1102
2516:rtos/uC-FS/Source/fs_unicode.c **** }
 3420              		.loc 1 2516 12 is_stmt 0 view .LVU1103
 3421 0014 0120     		movs	r0, #1
 3422              	.LVL430:
2516:rtos/uC-FS/Source/fs_unicode.c **** }
 3423              		.loc 1 2516 12 view .LVU1104
 3424 0016 7047     		bx	lr
 3425              	.LVL431:
 3426              	.L304:
2486:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
 3427              		.loc 1 2486 9 is_stmt 1 view .LVU1105
2486:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
 3428              		.loc 1 2486 19 is_stmt 0 view .LVU1106
 3429 0018 01F03F02 		and	r2, r1, #63
2486:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
 3430              		.loc 1 2486 17 view .LVU1107
 3431 001c 42F08002 		orr	r2, r2, #128
ARM GAS  /tmp/cc4JYsWh.s 			page 135


 3432              	.LVL432:
2487:rtos/uC-FS/Source/fs_unicode.c ****         byte2   = (CPU_INT08U)(c_src & 0x3Fu) | DEF_BIT_07;
 3433              		.loc 1 2487 9 is_stmt 1 view .LVU1108
2488:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
 3434              		.loc 1 2488 9 view .LVU1109
2488:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
 3435              		.loc 1 2488 19 is_stmt 0 view .LVU1110
 3436 0020 C1F38510 		ubfx	r0, r1, #6, #6
 3437              	.LVL433:
2488:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
 3438              		.loc 1 2488 17 view .LVU1111
 3439 0024 40F08000 		orr	r0, r0, #128
 3440              	.LVL434:
2489:rtos/uC-FS/Source/fs_unicode.c ****         byte1   = (CPU_INT08U)(c_src & 0x0Fu) | 0xE0u;
 3441              		.loc 1 2489 9 is_stmt 1 view .LVU1112
2490:rtos/uC-FS/Source/fs_unicode.c **** 
 3442              		.loc 1 2490 9 view .LVU1113
2490:rtos/uC-FS/Source/fs_unicode.c **** 
 3443              		.loc 1 2490 19 is_stmt 0 view .LVU1114
 3444 0028 090B     		lsrs	r1, r1, #12
 3445              	.LVL435:
2490:rtos/uC-FS/Source/fs_unicode.c **** 
 3446              		.loc 1 2490 17 view .LVU1115
 3447 002a 41F0E001 		orr	r1, r1, #224
 3448              	.LVL436:
2492:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
 3449              		.loc 1 2492 8 is_stmt 1 view .LVU1116
2492:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
 3450              		.loc 1 2492 17 is_stmt 0 view .LVU1117
 3451 002e 1970     		strb	r1, [r3]
2493:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte2;
 3452              		.loc 1 2493 9 is_stmt 1 view .LVU1118
 3453              	.LVL437:
2494:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
 3454              		.loc 1 2494 8 view .LVU1119
2494:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
 3455              		.loc 1 2494 17 is_stmt 0 view .LVU1120
 3456 0030 5870     		strb	r0, [r3, #1]
2495:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte3;
 3457              		.loc 1 2495 9 is_stmt 1 view .LVU1121
 3458              	.LVL438:
2496:rtos/uC-FS/Source/fs_unicode.c **** 
 3459              		.loc 1 2496 8 view .LVU1122
2496:rtos/uC-FS/Source/fs_unicode.c **** 
 3460              		.loc 1 2496 17 is_stmt 0 view .LVU1123
 3461 0032 9A70     		strb	r2, [r3, #2]
2498:rtos/uC-FS/Source/fs_unicode.c ****     }
 3462              		.loc 1 2498 8 is_stmt 1 view .LVU1124
2498:rtos/uC-FS/Source/fs_unicode.c ****     }
 3463              		.loc 1 2498 15 is_stmt 0 view .LVU1125
 3464 0034 0320     		movs	r0, #3
 3465              	.LVL439:
2498:rtos/uC-FS/Source/fs_unicode.c ****     }
 3466              		.loc 1 2498 15 view .LVU1126
 3467 0036 7047     		bx	lr
 3468              	.LVL440:
 3469              	.L305:
ARM GAS  /tmp/cc4JYsWh.s 			page 136


2502:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
 3470              		.loc 1 2502 9 is_stmt 1 view .LVU1127
2502:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
 3471              		.loc 1 2502 19 is_stmt 0 view .LVU1128
 3472 0038 01F03F02 		and	r2, r1, #63
2502:rtos/uC-FS/Source/fs_unicode.c ****         c_src >>=  6;
 3473              		.loc 1 2502 17 view .LVU1129
 3474 003c 42F08002 		orr	r2, r2, #128
 3475              	.LVL441:
2503:rtos/uC-FS/Source/fs_unicode.c ****         byte1   = (CPU_INT08U)(c_src & 0x1Fu) | 0xC0u;
 3476              		.loc 1 2503 9 is_stmt 1 view .LVU1130
2504:rtos/uC-FS/Source/fs_unicode.c **** 
 3477              		.loc 1 2504 9 view .LVU1131
2504:rtos/uC-FS/Source/fs_unicode.c **** 
 3478              		.loc 1 2504 19 is_stmt 0 view .LVU1132
 3479 0040 C1F38411 		ubfx	r1, r1, #6, #5
 3480              	.LVL442:
2504:rtos/uC-FS/Source/fs_unicode.c **** 
 3481              		.loc 1 2504 17 view .LVU1133
 3482 0044 41F0C001 		orr	r1, r1, #192
 3483              	.LVL443:
2506:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
 3484              		.loc 1 2506 8 is_stmt 1 view .LVU1134
2506:rtos/uC-FS/Source/fs_unicode.c ****         pc_dest++;
 3485              		.loc 1 2506 17 is_stmt 0 view .LVU1135
 3486 0048 0170     		strb	r1, [r0]
2507:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = (CPU_CHAR)byte2;
 3487              		.loc 1 2507 9 is_stmt 1 view .LVU1136
 3488              	.LVL444:
2508:rtos/uC-FS/Source/fs_unicode.c **** 
 3489              		.loc 1 2508 8 view .LVU1137
2508:rtos/uC-FS/Source/fs_unicode.c **** 
 3490              		.loc 1 2508 17 is_stmt 0 view .LVU1138
 3491 004a 4270     		strb	r2, [r0, #1]
2510:rtos/uC-FS/Source/fs_unicode.c ****     }
 3492              		.loc 1 2510 9 is_stmt 1 view .LVU1139
2510:rtos/uC-FS/Source/fs_unicode.c ****     }
 3493              		.loc 1 2510 16 is_stmt 0 view .LVU1140
 3494 004c 0220     		movs	r0, #2
 3495              	.LVL445:
2510:rtos/uC-FS/Source/fs_unicode.c ****     }
 3496              		.loc 1 2510 16 view .LVU1141
 3497 004e 7047     		bx	lr
 3498              	.LVL446:
 3499              	.L303:
2456:rtos/uC-FS/Source/fs_unicode.c ****     }
 3500              		.loc 1 2456 16 view .LVU1142
 3501 0050 0020     		movs	r0, #0
 3502              	.LVL447:
2517:rtos/uC-FS/Source/fs_unicode.c **** 
 3503              		.loc 1 2517 1 view .LVU1143
 3504 0052 7047     		bx	lr
 3505              		.cfi_endproc
 3506              	.LFE27:
 3508              		.section	.text.MB_CharToWC,"ax",%progbits
 3509              		.align	1
 3510              		.global	MB_CharToWC
ARM GAS  /tmp/cc4JYsWh.s 			page 137


 3511              		.syntax unified
 3512              		.thumb
 3513              		.thumb_func
 3514              		.fpu fpv4-sp-d16
 3516              	MB_CharToWC:
 3517              	.LVL448:
 3518              	.LFB28:
2638:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   c_dest;
 3519              		.loc 1 2638 1 is_stmt 1 view -0
 3520              		.cfi_startproc
 3521              		@ args = 0, pretend = 0, frame = 0
 3522              		@ frame_needed = 0, uses_anonymous_args = 0
 3523              		@ link register save eliminated.
2639:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  c_src_byte1;
 3524              		.loc 1 2639 5 view .LVU1145
2640:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  c_src_byte2;
 3525              		.loc 1 2640 5 view .LVU1146
2641:rtos/uC-FS/Source/fs_unicode.c ****     CPU_INT08U  c_src_byte3;
 3526              		.loc 1 2641 5 view .LVU1147
2642:rtos/uC-FS/Source/fs_unicode.c **** #if (FS_UNICODE_CFG_WCHAR_SIZE == 32)
 3527              		.loc 1 2642 5 view .LVU1148
2646:rtos/uC-FS/Source/fs_unicode.c **** 
 3528              		.loc 1 2646 5 view .LVU1149
2649:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3529              		.loc 1 2649 5 view .LVU1150
2649:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3530              		.loc 1 2649 8 is_stmt 0 view .LVU1151
 3531 0000 0029     		cmp	r1, #0
 3532 0002 4AD0     		beq	.L313
2638:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   c_dest;
 3533              		.loc 1 2638 1 view .LVU1152
 3534 0004 30B4     		push	{r4, r5}
 3535              	.LCFI42:
 3536              		.cfi_def_cfa_offset 8
 3537              		.cfi_offset 4, -8
 3538              		.cfi_offset 5, -4
 3539 0006 0446     		mov	r4, r0
 3540 0008 0846     		mov	r0, r1
 3541              	.LVL449:
2653:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-2);                                /* ... rtn err (see Note #1b3).    
 3542              		.loc 1 2653 5 is_stmt 1 view .LVU1153
2653:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-2);                                /* ... rtn err (see Note #1b3).    
 3543              		.loc 1 2653 8 is_stmt 0 view .LVU1154
 3544 000a 002A     		cmp	r2, #0
 3545 000c 48D0     		beq	.L314
2657:rtos/uC-FS/Source/fs_unicode.c **** 
 3546              		.loc 1 2657 5 is_stmt 1 view .LVU1155
 3547              	.LVL450:
2659:rtos/uC-FS/Source/fs_unicode.c ****     pc_src++;
 3548              		.loc 1 2659 5 view .LVU1156
2659:rtos/uC-FS/Source/fs_unicode.c ****     pc_src++;
 3549              		.loc 1 2659 17 is_stmt 0 view .LVU1157
 3550 000e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 3551              	.LVL451:
2660:rtos/uC-FS/Source/fs_unicode.c **** 
 3552              		.loc 1 2660 5 is_stmt 1 view .LVU1158
2662:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
ARM GAS  /tmp/cc4JYsWh.s 			page 138


 3553              		.loc 1 2662 5 view .LVU1159
2662:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3554              		.loc 1 2662 8 is_stmt 0 view .LVU1160
 3555 0010 F52B     		cmp	r3, #245
 3556 0012 48D8     		bhi	.L315
2668:rtos/uC-FS/Source/fs_unicode.c ****         c_dest = (CPU_WCHAR)c_src_byte1;
 3557              		.loc 1 2668 5 is_stmt 1 view .LVU1161
2668:rtos/uC-FS/Source/fs_unicode.c ****         c_dest = (CPU_WCHAR)c_src_byte1;
 3558              		.loc 1 2668 8 is_stmt 0 view .LVU1162
 3559 0014 13F0800F 		tst	r3, #128
 3560 0018 07D1     		bne	.L308
2669:rtos/uC-FS/Source/fs_unicode.c ****         n_char = (c_dest == (CPU_WCHAR)0) ? 0u : 1u;
 3561              		.loc 1 2669 9 is_stmt 1 view .LVU1163
2669:rtos/uC-FS/Source/fs_unicode.c ****         n_char = (c_dest == (CPU_WCHAR)0) ? 0u : 1u;
 3562              		.loc 1 2669 16 is_stmt 0 view .LVU1164
 3563 001a 9BB2     		uxth	r3, r3
 3564              	.LVL452:
2670:rtos/uC-FS/Source/fs_unicode.c **** 
 3565              		.loc 1 2670 9 is_stmt 1 view .LVU1165
2670:rtos/uC-FS/Source/fs_unicode.c **** 
 3566              		.loc 1 2670 48 is_stmt 0 view .LVU1166
 3567 001c 181E     		subs	r0, r3, #0
 3568 001e 18BF     		it	ne
 3569 0020 0120     		movne	r0, #1
 3570              	.LVL453:
 3571              	.L309:
2777:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = c_dest;
 3572              		.loc 1 2777 5 is_stmt 1 view .LVU1167
2777:rtos/uC-FS/Source/fs_unicode.c ****        *pc_dest = c_dest;
 3573              		.loc 1 2777 8 is_stmt 0 view .LVU1168
 3574 0022 04B1     		cbz	r4, .L306
2778:rtos/uC-FS/Source/fs_unicode.c ****     }
 3575              		.loc 1 2778 8 is_stmt 1 view .LVU1169
2778:rtos/uC-FS/Source/fs_unicode.c ****     }
 3576              		.loc 1 2778 17 is_stmt 0 view .LVU1170
 3577 0024 2380     		strh	r3, [r4]	@ movhi
 3578              	.LVL454:
 3579              	.L306:
2782:rtos/uC-FS/Source/fs_unicode.c **** 
 3580              		.loc 1 2782 1 view .LVU1171
 3581 0026 30BC     		pop	{r4, r5}
 3582              	.LCFI43:
 3583              		.cfi_remember_state
 3584              		.cfi_restore 5
 3585              		.cfi_restore 4
 3586              		.cfi_def_cfa_offset 0
 3587              	.LVL455:
2782:rtos/uC-FS/Source/fs_unicode.c **** 
 3588              		.loc 1 2782 1 view .LVU1172
 3589 0028 7047     		bx	lr
 3590              	.LVL456:
 3591              	.L308:
 3592              	.LCFI44:
 3593              		.cfi_restore_state
2675:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_SIZE_T)-1);
 3594              		.loc 1 2675 9 is_stmt 1 view .LVU1173
2675:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_SIZE_T)-1);
ARM GAS  /tmp/cc4JYsWh.s 			page 139


 3595              		.loc 1 2675 12 is_stmt 0 view .LVU1174
 3596 002a C12B     		cmp	r3, #193
 3597 002c 3ED9     		bls	.L316
2679:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_SIZE_T)-2);                            /* ... rtn err (see Note #1b3).    
 3598              		.loc 1 2679 9 is_stmt 1 view .LVU1175
2679:rtos/uC-FS/Source/fs_unicode.c ****             return ((CPU_SIZE_T)-2);                            /* ... rtn err (see Note #1b3).    
 3599              		.loc 1 2679 12 is_stmt 0 view .LVU1176
 3600 002e 012A     		cmp	r2, #1
 3601 0030 3FD9     		bls	.L317
2683:rtos/uC-FS/Source/fs_unicode.c ****         pc_src++;
 3602              		.loc 1 2683 9 is_stmt 1 view .LVU1177
2683:rtos/uC-FS/Source/fs_unicode.c ****         pc_src++;
 3603              		.loc 1 2683 21 is_stmt 0 view .LVU1178
 3604 0032 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 3605              	.LVL457:
2684:rtos/uC-FS/Source/fs_unicode.c **** 
 3606              		.loc 1 2684 9 is_stmt 1 view .LVU1179
2686:rtos/uC-FS/Source/fs_unicode.c ****             (c_src_byte2 > 0xBFu)) {
 3607              		.loc 1 2686 9 view .LVU1180
2686:rtos/uC-FS/Source/fs_unicode.c ****             (c_src_byte2 > 0xBFu)) {
 3608              		.loc 1 2686 35 is_stmt 0 view .LVU1181
 3609 0034 81F08005 		eor	r5, r1, #128
2686:rtos/uC-FS/Source/fs_unicode.c ****             (c_src_byte2 > 0xBFu)) {
 3610              		.loc 1 2686 12 view .LVU1182
 3611 0038 3F2D     		cmp	r5, #63
 3612 003a 3DD8     		bhi	.L318
2691:rtos/uC-FS/Source/fs_unicode.c **** 
 3613              		.loc 1 2691 9 is_stmt 1 view .LVU1183
2691:rtos/uC-FS/Source/fs_unicode.c **** 
 3614              		.loc 1 2691 12 is_stmt 0 view .LVU1184
 3615 003c DF2B     		cmp	r3, #223
 3616 003e 07D8     		bhi	.L310
2693:rtos/uC-FS/Source/fs_unicode.c ****             c_src_byte2 &= 0x3Fu;
 3617              		.loc 1 2693 13 is_stmt 1 view .LVU1185
2693:rtos/uC-FS/Source/fs_unicode.c ****             c_src_byte2 &= 0x3Fu;
 3618              		.loc 1 2693 25 is_stmt 0 view .LVU1186
 3619 0040 03F01F03 		and	r3, r3, #31
 3620              	.LVL458:
2694:rtos/uC-FS/Source/fs_unicode.c ****             c_dest       = (CPU_WCHAR)((CPU_WCHAR)c_src_byte2 << 0) |
 3621              		.loc 1 2694 13 is_stmt 1 view .LVU1187
2695:rtos/uC-FS/Source/fs_unicode.c ****                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte1 << 6);
 3622              		.loc 1 2695 13 view .LVU1188
2695:rtos/uC-FS/Source/fs_unicode.c ****                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte1 << 6);
 3623              		.loc 1 2695 69 is_stmt 0 view .LVU1189
 3624 0044 01F03F01 		and	r1, r1, #63
 3625              	.LVL459:
2695:rtos/uC-FS/Source/fs_unicode.c ****                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte1 << 6);
 3626              		.loc 1 2695 26 view .LVU1190
 3627 0048 41EA8313 		orr	r3, r1, r3, lsl #6
 3628              	.LVL460:
2697:rtos/uC-FS/Source/fs_unicode.c **** 
 3629              		.loc 1 2697 13 is_stmt 1 view .LVU1191
2697:rtos/uC-FS/Source/fs_unicode.c **** 
 3630              		.loc 1 2697 26 is_stmt 0 view .LVU1192
 3631 004c 0220     		movs	r0, #2
 3632              	.LVL461:
2697:rtos/uC-FS/Source/fs_unicode.c **** 
ARM GAS  /tmp/cc4JYsWh.s 			page 140


 3633              		.loc 1 2697 26 view .LVU1193
 3634 004e E8E7     		b	.L309
 3635              	.LVL462:
 3636              	.L310:
2702:rtos/uC-FS/Source/fs_unicode.c ****                 return ((CPU_SIZE_T)-2);                        /* ... rtn err (see Note #1b3).    
 3637              		.loc 1 2702 13 is_stmt 1 view .LVU1194
2702:rtos/uC-FS/Source/fs_unicode.c ****                 return ((CPU_SIZE_T)-2);                        /* ... rtn err (see Note #1b3).    
 3638              		.loc 1 2702 16 is_stmt 0 view .LVU1195
 3639 0050 022A     		cmp	r2, #2
 3640 0052 34D9     		bls	.L319
2706:rtos/uC-FS/Source/fs_unicode.c ****             pc_src++;
 3641              		.loc 1 2706 13 is_stmt 1 view .LVU1196
2706:rtos/uC-FS/Source/fs_unicode.c ****             pc_src++;
 3642              		.loc 1 2706 25 is_stmt 0 view .LVU1197
 3643 0054 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 3644              	.LVL463:
2707:rtos/uC-FS/Source/fs_unicode.c **** 
 3645              		.loc 1 2707 13 is_stmt 1 view .LVU1198
2710:rtos/uC-FS/Source/fs_unicode.c **** 
 3646              		.loc 1 2710 13 view .LVU1199
2710:rtos/uC-FS/Source/fs_unicode.c **** 
 3647              		.loc 1 2710 16 is_stmt 0 view .LVU1200
 3648 0056 EF2B     		cmp	r3, #239
 3649 0058 34D8     		bhi	.L320
2712:rtos/uC-FS/Source/fs_unicode.c ****                     (c_src_byte3 > 0xBFu)) {
 3650              		.loc 1 2712 17 is_stmt 1 view .LVU1201
2712:rtos/uC-FS/Source/fs_unicode.c ****                     (c_src_byte3 > 0xBFu)) {
 3651              		.loc 1 2712 43 is_stmt 0 view .LVU1202
 3652 005a 82F08000 		eor	r0, r2, #128
 3653              	.LVL464:
2712:rtos/uC-FS/Source/fs_unicode.c ****                     (c_src_byte3 > 0xBFu)) {
 3654              		.loc 1 2712 20 view .LVU1203
 3655 005e 3F28     		cmp	r0, #63
 3656 0060 33D8     		bhi	.L321
2718:rtos/uC-FS/Source/fs_unicode.c ****                     ((c_src_byte1 == 0xEDu) && (c_src_byte2 > 0x9Fu))) {    /* See Note #2b1F.     
 3657              		.loc 1 2718 17 is_stmt 1 view .LVU1204
2718:rtos/uC-FS/Source/fs_unicode.c ****                     ((c_src_byte1 == 0xEDu) && (c_src_byte2 > 0x9Fu))) {    /* See Note #2b1F.     
 3658              		.loc 1 2718 20 is_stmt 0 view .LVU1205
 3659 0062 E02B     		cmp	r3, #224
 3660 0064 0FD0     		beq	.L328
 3661              	.L311:
2718:rtos/uC-FS/Source/fs_unicode.c ****                     ((c_src_byte1 == 0xEDu) && (c_src_byte2 > 0x9Fu))) {    /* See Note #2b1F.     
 3662              		.loc 1 2718 71 discriminator 3 view .LVU1206
 3663 0066 ED2B     		cmp	r3, #237
 3664 0068 12D0     		beq	.L329
 3665              	.L312:
2723:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte2 &= 0x3Fu;
 3666              		.loc 1 2723 17 is_stmt 1 view .LVU1207
2723:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte2 &= 0x3Fu;
 3667              		.loc 1 2723 29 is_stmt 0 view .LVU1208
 3668 006a 03F00F03 		and	r3, r3, #15
 3669              	.LVL465:
2724:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte3 &= 0x3Fu;
 3670              		.loc 1 2724 17 is_stmt 1 view .LVU1209
2724:rtos/uC-FS/Source/fs_unicode.c ****                 c_src_byte3 &= 0x3Fu;
 3671              		.loc 1 2724 29 is_stmt 0 view .LVU1210
 3672 006e 01F03F01 		and	r1, r1, #63
ARM GAS  /tmp/cc4JYsWh.s 			page 141


 3673              	.LVL466:
2725:rtos/uC-FS/Source/fs_unicode.c ****                 c_dest       = (CPU_WCHAR)((CPU_WCHAR)((CPU_WCHAR)c_src_byte3 <<  0) |
 3674              		.loc 1 2725 17 is_stmt 1 view .LVU1211
2725:rtos/uC-FS/Source/fs_unicode.c ****                 c_dest       = (CPU_WCHAR)((CPU_WCHAR)((CPU_WCHAR)c_src_byte3 <<  0) |
 3675              		.loc 1 2725 29 is_stmt 0 view .LVU1212
 3676 0072 02F03F02 		and	r2, r2, #63
 3677              	.LVL467:
2726:rtos/uC-FS/Source/fs_unicode.c ****                                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte2 <<  6) |
 3678              		.loc 1 2726 17 is_stmt 1 view .LVU1213
2726:rtos/uC-FS/Source/fs_unicode.c ****                                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte2 <<  6) |
 3679              		.loc 1 2726 86 is_stmt 0 view .LVU1214
 3680 0076 42EA8111 		orr	r1, r2, r1, lsl #6
 3681              	.LVL468:
2728:rtos/uC-FS/Source/fs_unicode.c ****                 n_char       = 3u;
 3682              		.loc 1 2728 44 view .LVU1215
 3683 007a 1B03     		lsls	r3, r3, #12
 3684              	.LVL469:
2728:rtos/uC-FS/Source/fs_unicode.c ****                 n_char       = 3u;
 3685              		.loc 1 2728 44 view .LVU1216
 3686 007c 1BB2     		sxth	r3, r3
2727:rtos/uC-FS/Source/fs_unicode.c ****                                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte1 << 12));
 3687              		.loc 1 2727 86 view .LVU1217
 3688 007e 0B43     		orrs	r3, r3, r1
2726:rtos/uC-FS/Source/fs_unicode.c ****                                            (CPU_WCHAR)((CPU_WCHAR)c_src_byte2 <<  6) |
 3689              		.loc 1 2726 30 view .LVU1218
 3690 0080 9BB2     		uxth	r3, r3
 3691              	.LVL470:
2729:rtos/uC-FS/Source/fs_unicode.c **** 
 3692              		.loc 1 2729 17 is_stmt 1 view .LVU1219
2729:rtos/uC-FS/Source/fs_unicode.c **** 
 3693              		.loc 1 2729 30 is_stmt 0 view .LVU1220
 3694 0082 0320     		movs	r0, #3
 3695 0084 CDE7     		b	.L309
 3696              	.LVL471:
 3697              	.L328:
2718:rtos/uC-FS/Source/fs_unicode.c ****                     ((c_src_byte1 == 0xEDu) && (c_src_byte2 > 0x9Fu))) {    /* See Note #2b1F.     
 3698              		.loc 1 2718 45 discriminator 1 view .LVU1221
 3699 0086 9F29     		cmp	r1, #159
 3700 0088 EDD8     		bhi	.L311
2720:rtos/uC-FS/Source/fs_unicode.c ****                 }
 3701              		.loc 1 2720 28 view .LVU1222
 3702 008a 4FF0FF30 		mov	r0, #-1
 3703 008e CAE7     		b	.L306
 3704              	.L329:
2719:rtos/uC-FS/Source/fs_unicode.c ****                     return ((CPU_SIZE_T)-1);
 3705              		.loc 1 2719 45 view .LVU1223
 3706 0090 9F29     		cmp	r1, #159
 3707 0092 EAD9     		bls	.L312
2720:rtos/uC-FS/Source/fs_unicode.c ****                 }
 3708              		.loc 1 2720 28 view .LVU1224
 3709 0094 4FF0FF30 		mov	r0, #-1
 3710 0098 C5E7     		b	.L306
 3711              	.LVL472:
 3712              	.L313:
 3713              	.LCFI45:
 3714              		.cfi_def_cfa_offset 0
 3715              		.cfi_restore 4
ARM GAS  /tmp/cc4JYsWh.s 			page 142


 3716              		.cfi_restore 5
2650:rtos/uC-FS/Source/fs_unicode.c ****     }
 3717              		.loc 1 2650 16 view .LVU1225
 3718 009a 4FF0FF30 		mov	r0, #-1
 3719              	.LVL473:
2782:rtos/uC-FS/Source/fs_unicode.c **** 
 3720              		.loc 1 2782 1 view .LVU1226
 3721 009e 7047     		bx	lr
 3722              	.LVL474:
 3723              	.L314:
 3724              	.LCFI46:
 3725              		.cfi_def_cfa_offset 8
 3726              		.cfi_offset 4, -8
 3727              		.cfi_offset 5, -4
2654:rtos/uC-FS/Source/fs_unicode.c ****     }
 3728              		.loc 1 2654 16 view .LVU1227
 3729 00a0 6FF00100 		mvn	r0, #1
 3730              	.LVL475:
2654:rtos/uC-FS/Source/fs_unicode.c ****     }
 3731              		.loc 1 2654 16 view .LVU1228
 3732 00a4 BFE7     		b	.L306
 3733              	.LVL476:
 3734              	.L315:
2663:rtos/uC-FS/Source/fs_unicode.c ****     }
 3735              		.loc 1 2663 16 view .LVU1229
 3736 00a6 4FF0FF30 		mov	r0, #-1
 3737              	.LVL477:
2663:rtos/uC-FS/Source/fs_unicode.c ****     }
 3738              		.loc 1 2663 16 view .LVU1230
 3739 00aa BCE7     		b	.L306
 3740              	.LVL478:
 3741              	.L316:
2676:rtos/uC-FS/Source/fs_unicode.c ****         }
 3742              		.loc 1 2676 20 view .LVU1231
 3743 00ac 4FF0FF30 		mov	r0, #-1
 3744              	.LVL479:
2676:rtos/uC-FS/Source/fs_unicode.c ****         }
 3745              		.loc 1 2676 20 view .LVU1232
 3746 00b0 B9E7     		b	.L306
 3747              	.LVL480:
 3748              	.L317:
2680:rtos/uC-FS/Source/fs_unicode.c ****         }
 3749              		.loc 1 2680 20 view .LVU1233
 3750 00b2 6FF00100 		mvn	r0, #1
 3751              	.LVL481:
2680:rtos/uC-FS/Source/fs_unicode.c ****         }
 3752              		.loc 1 2680 20 view .LVU1234
 3753 00b6 B6E7     		b	.L306
 3754              	.LVL482:
 3755              	.L318:
2688:rtos/uC-FS/Source/fs_unicode.c ****         }
 3756              		.loc 1 2688 20 view .LVU1235
 3757 00b8 4FF0FF30 		mov	r0, #-1
 3758              	.LVL483:
2688:rtos/uC-FS/Source/fs_unicode.c ****         }
 3759              		.loc 1 2688 20 view .LVU1236
 3760 00bc B3E7     		b	.L306
ARM GAS  /tmp/cc4JYsWh.s 			page 143


 3761              	.LVL484:
 3762              	.L319:
2703:rtos/uC-FS/Source/fs_unicode.c ****             }
 3763              		.loc 1 2703 24 view .LVU1237
 3764 00be 6FF00100 		mvn	r0, #1
 3765              	.LVL485:
2703:rtos/uC-FS/Source/fs_unicode.c ****             }
 3766              		.loc 1 2703 24 view .LVU1238
 3767 00c2 B0E7     		b	.L306
 3768              	.LVL486:
 3769              	.L320:
2770:rtos/uC-FS/Source/fs_unicode.c **** #endif
 3770              		.loc 1 2770 24 view .LVU1239
 3771 00c4 4FF0FF30 		mov	r0, #-1
 3772              	.LVL487:
2770:rtos/uC-FS/Source/fs_unicode.c **** #endif
 3773              		.loc 1 2770 24 view .LVU1240
 3774 00c8 ADE7     		b	.L306
 3775              	.L321:
2714:rtos/uC-FS/Source/fs_unicode.c ****                 }
 3776              		.loc 1 2714 28 view .LVU1241
 3777 00ca 4FF0FF30 		mov	r0, #-1
 3778 00ce AAE7     		b	.L306
 3779              		.cfi_endproc
 3780              	.LFE28:
 3782              		.section	.text.MB_CharLen,"ax",%progbits
 3783              		.align	1
 3784              		.global	MB_CharLen
 3785              		.syntax unified
 3786              		.thumb
 3787              		.thumb_func
 3788              		.fpu fpv4-sp-d16
 3790              	MB_CharLen:
 3791              	.LVL488:
 3792              	.LFB29:
2824:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  c_len;
 3793              		.loc 1 2824 1 is_stmt 1 view -0
 3794              		.cfi_startproc
 3795              		@ args = 0, pretend = 0, frame = 0
 3796              		@ frame_needed = 0, uses_anonymous_args = 0
2825:rtos/uC-FS/Source/fs_unicode.c **** 
 3797              		.loc 1 2825 5 view .LVU1243
2828:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)0);
 3798              		.loc 1 2828 5 view .LVU1244
2828:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)0);
 3799              		.loc 1 2828 8 is_stmt 0 view .LVU1245
 3800 0000 30B1     		cbz	r0, .L332
2824:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T  c_len;
 3801              		.loc 1 2824 1 view .LVU1246
 3802 0002 08B5     		push	{r3, lr}
 3803              	.LCFI47:
 3804              		.cfi_def_cfa_offset 8
 3805              		.cfi_offset 3, -8
 3806              		.cfi_offset 14, -4
 3807 0004 0A46     		mov	r2, r1
 3808 0006 0146     		mov	r1, r0
 3809              	.LVL489:
ARM GAS  /tmp/cc4JYsWh.s 			page 144


2832:rtos/uC-FS/Source/fs_unicode.c ****                                      pc,
 3810              		.loc 1 2832 5 is_stmt 1 view .LVU1247
2832:rtos/uC-FS/Source/fs_unicode.c ****                                      pc,
 3811              		.loc 1 2832 13 is_stmt 0 view .LVU1248
 3812 0008 0020     		movs	r0, #0
 3813              	.LVL490:
2832:rtos/uC-FS/Source/fs_unicode.c ****                                      pc,
 3814              		.loc 1 2832 13 view .LVU1249
 3815 000a FFF7FEFF 		bl	MB_CharToWC
 3816              	.LVL491:
2836:rtos/uC-FS/Source/fs_unicode.c **** }
 3817              		.loc 1 2836 5 is_stmt 1 view .LVU1250
2837:rtos/uC-FS/Source/fs_unicode.c **** 
 3818              		.loc 1 2837 1 is_stmt 0 view .LVU1251
 3819 000e 08BD     		pop	{r3, pc}
 3820              	.LVL492:
 3821              	.L332:
 3822              	.LCFI48:
 3823              		.cfi_def_cfa_offset 0
 3824              		.cfi_restore 3
 3825              		.cfi_restore 14
2829:rtos/uC-FS/Source/fs_unicode.c ****     }
 3826              		.loc 1 2829 16 view .LVU1252
 3827 0010 0020     		movs	r0, #0
 3828              	.LVL493:
2837:rtos/uC-FS/Source/fs_unicode.c **** 
 3829              		.loc 1 2837 1 view .LVU1253
 3830 0012 7047     		bx	lr
 3831              		.cfi_endproc
 3832              	.LFE29:
 3834              		.section	.text.WC_StrToMB,"ax",%progbits
 3835              		.align	1
 3836              		.global	WC_StrToMB
 3837              		.syntax unified
 3838              		.thumb
 3839              		.thumb_func
 3840              		.fpu fpv4-sp-d16
 3842              	WC_StrToMB:
 3843              	.LVL494:
 3844              	.LFB30:
2908:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *psrc;
 3845              		.loc 1 2908 1 is_stmt 1 view -0
 3846              		.cfi_startproc
 3847              		@ args = 0, pretend = 0, frame = 0
 3848              		@ frame_needed = 0, uses_anonymous_args = 0
2909:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_rem;
 3849              		.loc 1 2909 5 view .LVU1255
2910:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_char;
 3850              		.loc 1 2910 5 view .LVU1256
2911:rtos/uC-FS/Source/fs_unicode.c **** 
 3851              		.loc 1 2911 5 view .LVU1257
2915:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3852              		.loc 1 2915 5 view .LVU1258
2915:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3853              		.loc 1 2915 8 is_stmt 0 view .LVU1259
 3854 0000 91B3     		cbz	r1, .L345
2908:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR   *psrc;
ARM GAS  /tmp/cc4JYsWh.s 			page 145


 3855              		.loc 1 2908 1 view .LVU1260
 3856 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3857              	.LCFI49:
 3858              		.cfi_def_cfa_offset 24
 3859              		.cfi_offset 4, -24
 3860              		.cfi_offset 5, -20
 3861              		.cfi_offset 6, -16
 3862              		.cfi_offset 7, -12
 3863              		.cfi_offset 8, -8
 3864              		.cfi_offset 14, -4
 3865 0006 0546     		mov	r5, r0
 3866 0008 1746     		mov	r7, r2
 3867 000a 8846     		mov	r8, r1
2919:rtos/uC-FS/Source/fs_unicode.c ****     if (psrc == (CPU_WCHAR *)0) {
 3868              		.loc 1 2919 5 is_stmt 1 view .LVU1261
2919:rtos/uC-FS/Source/fs_unicode.c ****     if (psrc == (CPU_WCHAR *)0) {
 3869              		.loc 1 2919 10 is_stmt 0 view .LVU1262
 3870 000c 0E68     		ldr	r6, [r1]
 3871              	.LVL495:
2920:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3872              		.loc 1 2920 5 is_stmt 1 view .LVU1263
2920:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3873              		.loc 1 2920 8 is_stmt 0 view .LVU1264
 3874 000e 76B3     		cbz	r6, .L346
2924:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3875              		.loc 1 2924 5 is_stmt 1 view .LVU1265
2924:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3876              		.loc 1 2924 8 is_stmt 0 view .LVU1266
 3877 0010 80B3     		cbz	r0, .L347
2928:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_SIZE_T)0);
 3878              		.loc 1 2928 5 is_stmt 1 view .LVU1267
2928:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_SIZE_T)0);
 3879              		.loc 1 2928 8 is_stmt 0 view .LVU1268
 3880 0012 032A     		cmp	r2, #3
 3881 0014 02D8     		bhi	.L353
2929:rtos/uC-FS/Source/fs_unicode.c ****     }
 3882              		.loc 1 2929 17 view .LVU1269
 3883 0016 0020     		movs	r0, #0
 3884              	.LVL496:
 3885              	.L337:
2964:rtos/uC-FS/Source/fs_unicode.c **** 
 3886              		.loc 1 2964 1 view .LVU1270
 3887 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3888              	.LVL497:
 3889              	.L353:
2933:rtos/uC-FS/Source/fs_unicode.c ****     len_char = WC_CharToMB( pdest,
 3890              		.loc 1 2933 5 is_stmt 1 view .LVU1271
2934:rtos/uC-FS/Source/fs_unicode.c ****                            *psrc);
 3891              		.loc 1 2934 5 view .LVU1272
2934:rtos/uC-FS/Source/fs_unicode.c ****                            *psrc);
 3892              		.loc 1 2934 16 is_stmt 0 view .LVU1273
 3893 001c 3188     		ldrh	r1, [r6]
 3894              	.LVL498:
2934:rtos/uC-FS/Source/fs_unicode.c ****                            *psrc);
 3895              		.loc 1 2934 16 view .LVU1274
 3896 001e FFF7FEFF 		bl	WC_CharToMB
 3897              	.LVL499:
ARM GAS  /tmp/cc4JYsWh.s 			page 146


2937:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL wide char found     
 3898              		.loc 1 2937 5 is_stmt 1 view .LVU1275
2933:rtos/uC-FS/Source/fs_unicode.c ****     len_char = WC_CharToMB( pdest,
 3899              		.loc 1 2933 14 is_stmt 0 view .LVU1276
 3900 0022 3C46     		mov	r4, r7
2937:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL wide char found     
 3901              		.loc 1 2937 11 view .LVU1277
 3902 0024 03E0     		b	.L339
 3903              	.LVL500:
 3904              	.L354:
2945:rtos/uC-FS/Source/fs_unicode.c ****                                    *psrc);
 3905              		.loc 1 2945 13 is_stmt 1 view .LVU1278
2945:rtos/uC-FS/Source/fs_unicode.c ****                                    *psrc);
 3906              		.loc 1 2945 24 is_stmt 0 view .LVU1279
 3907 0026 3188     		ldrh	r1, [r6]
 3908 0028 2846     		mov	r0, r5
 3909              	.LVL501:
2945:rtos/uC-FS/Source/fs_unicode.c ****                                    *psrc);
 3910              		.loc 1 2945 24 view .LVU1280
 3911 002a FFF7FEFF 		bl	WC_CharToMB
 3912              	.LVL502:
 3913              	.L339:
2937:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL wide char found     
 3914              		.loc 1 2937 11 is_stmt 1 view .LVU1281
2937:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL wide char found     
 3915              		.loc 1 2937 37 is_stmt 0 view .LVU1282
 3916 002e 431E     		subs	r3, r0, #1
2937:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL wide char found     
 3917              		.loc 1 2937 11 view .LVU1283
 3918 0030 032B     		cmp	r3, #3
 3919 0032 07D8     		bhi	.L341
2938:rtos/uC-FS/Source/fs_unicode.c ****            (len_rem  >= MB_MAX_LEN)) {                          /* ... or max nbr bytes stored.    
 3920              		.loc 1 2938 37 view .LVU1284
 3921 0034 032C     		cmp	r4, #3
 3922 0036 05D9     		bls	.L341
2940:rtos/uC-FS/Source/fs_unicode.c ****         pdest   += len_char;
 3923              		.loc 1 2940 9 is_stmt 1 view .LVU1285
2940:rtos/uC-FS/Source/fs_unicode.c ****         pdest   += len_char;
 3924              		.loc 1 2940 17 is_stmt 0 view .LVU1286
 3925 0038 241A     		subs	r4, r4, r0
 3926              	.LVL503:
2941:rtos/uC-FS/Source/fs_unicode.c ****         psrc++;
 3927              		.loc 1 2941 9 is_stmt 1 view .LVU1287
2941:rtos/uC-FS/Source/fs_unicode.c ****         psrc++;
 3928              		.loc 1 2941 17 is_stmt 0 view .LVU1288
 3929 003a 0544     		add	r5, r5, r0
 3930              	.LVL504:
2942:rtos/uC-FS/Source/fs_unicode.c **** 
 3931              		.loc 1 2942 9 is_stmt 1 view .LVU1289
2942:rtos/uC-FS/Source/fs_unicode.c **** 
 3932              		.loc 1 2942 13 is_stmt 0 view .LVU1290
 3933 003c 0236     		adds	r6, r6, #2
 3934              	.LVL505:
2944:rtos/uC-FS/Source/fs_unicode.c ****             len_char = WC_CharToMB( pdest,
 3935              		.loc 1 2944 9 is_stmt 1 view .LVU1291
2944:rtos/uC-FS/Source/fs_unicode.c ****             len_char = WC_CharToMB( pdest,
 3936              		.loc 1 2944 12 is_stmt 0 view .LVU1292
ARM GAS  /tmp/cc4JYsWh.s 			page 147


 3937 003e 032C     		cmp	r4, #3
 3938 0040 F5D9     		bls	.L339
 3939 0042 F0E7     		b	.L354
 3940              	.L341:
2951:rtos/uC-FS/Source/fs_unicode.c ****        *pdest = (CPU_CHAR   )'\0';                              /* ... append NULL char    ...     
 3941              		.loc 1 2951 5 is_stmt 1 view .LVU1293
2951:rtos/uC-FS/Source/fs_unicode.c ****        *pdest = (CPU_CHAR   )'\0';                              /* ... append NULL char    ...     
 3942              		.loc 1 2951 8 is_stmt 0 view .LVU1294
 3943 0044 28B1     		cbz	r0, .L355
2956:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = psrc;                                           /* ... rtn ptr past last char conve
 3944              		.loc 1 2956 12 is_stmt 1 view .LVU1295
2956:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = psrc;                                           /* ... rtn ptr past last char conve
 3945              		.loc 1 2956 15 is_stmt 0 view .LVU1296
 3946 0046 0428     		cmp	r0, #4
 3947 0048 09D8     		bhi	.L344
2957:rtos/uC-FS/Source/fs_unicode.c ****         return (len_max - len_rem);
 3948              		.loc 1 2957 8 is_stmt 1 view .LVU1297
2957:rtos/uC-FS/Source/fs_unicode.c ****         return (len_max - len_rem);
 3949              		.loc 1 2957 15 is_stmt 0 view .LVU1298
 3950 004a C8F80060 		str	r6, [r8]
2958:rtos/uC-FS/Source/fs_unicode.c **** 
 3951              		.loc 1 2958 9 is_stmt 1 view .LVU1299
2958:rtos/uC-FS/Source/fs_unicode.c **** 
 3952              		.loc 1 2958 25 is_stmt 0 view .LVU1300
 3953 004e 381B     		subs	r0, r7, r4
 3954              	.LVL506:
2958:rtos/uC-FS/Source/fs_unicode.c **** 
 3955              		.loc 1 2958 25 view .LVU1301
 3956 0050 E2E7     		b	.L337
 3957              	.LVL507:
 3958              	.L355:
2952:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = (CPU_WCHAR *)0;                                 /* ... rtn NULL ptr in indirect src
 3959              		.loc 1 2952 8 is_stmt 1 view .LVU1302
2952:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = (CPU_WCHAR *)0;                                 /* ... rtn NULL ptr in indirect src
 3960              		.loc 1 2952 15 is_stmt 0 view .LVU1303
 3961 0052 0023     		movs	r3, #0
 3962 0054 2B70     		strb	r3, [r5]
2953:rtos/uC-FS/Source/fs_unicode.c ****         return (len_max - len_rem);
 3963              		.loc 1 2953 8 is_stmt 1 view .LVU1304
2953:rtos/uC-FS/Source/fs_unicode.c ****         return (len_max - len_rem);
 3964              		.loc 1 2953 15 is_stmt 0 view .LVU1305
 3965 0056 C8F80030 		str	r3, [r8]
2954:rtos/uC-FS/Source/fs_unicode.c **** 
 3966              		.loc 1 2954 9 is_stmt 1 view .LVU1306
2954:rtos/uC-FS/Source/fs_unicode.c **** 
 3967              		.loc 1 2954 25 is_stmt 0 view .LVU1307
 3968 005a 381B     		subs	r0, r7, r4
 3969              	.LVL508:
2954:rtos/uC-FS/Source/fs_unicode.c **** 
 3970              		.loc 1 2954 25 view .LVU1308
 3971 005c DCE7     		b	.L337
 3972              	.LVL509:
 3973              	.L344:
2961:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3974              		.loc 1 2961 8 is_stmt 1 view .LVU1309
2961:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 3975              		.loc 1 2961 15 is_stmt 0 view .LVU1310
ARM GAS  /tmp/cc4JYsWh.s 			page 148


 3976 005e C8F80060 		str	r6, [r8]
2962:rtos/uC-FS/Source/fs_unicode.c ****     }
 3977              		.loc 1 2962 9 is_stmt 1 view .LVU1311
2962:rtos/uC-FS/Source/fs_unicode.c ****     }
 3978              		.loc 1 2962 16 is_stmt 0 view .LVU1312
 3979 0062 4FF0FF30 		mov	r0, #-1
 3980              	.LVL510:
2962:rtos/uC-FS/Source/fs_unicode.c ****     }
 3981              		.loc 1 2962 16 view .LVU1313
 3982 0066 D7E7     		b	.L337
 3983              	.LVL511:
 3984              	.L345:
 3985              	.LCFI50:
 3986              		.cfi_def_cfa_offset 0
 3987              		.cfi_restore 4
 3988              		.cfi_restore 5
 3989              		.cfi_restore 6
 3990              		.cfi_restore 7
 3991              		.cfi_restore 8
 3992              		.cfi_restore 14
2916:rtos/uC-FS/Source/fs_unicode.c ****     }
 3993              		.loc 1 2916 16 view .LVU1314
 3994 0068 4FF0FF30 		mov	r0, #-1
 3995              	.LVL512:
2964:rtos/uC-FS/Source/fs_unicode.c **** 
 3996              		.loc 1 2964 1 view .LVU1315
 3997 006c 7047     		bx	lr
 3998              	.LVL513:
 3999              	.L346:
 4000              	.LCFI51:
 4001              		.cfi_def_cfa_offset 24
 4002              		.cfi_offset 4, -24
 4003              		.cfi_offset 5, -20
 4004              		.cfi_offset 6, -16
 4005              		.cfi_offset 7, -12
 4006              		.cfi_offset 8, -8
 4007              		.cfi_offset 14, -4
2921:rtos/uC-FS/Source/fs_unicode.c ****     }
 4008              		.loc 1 2921 16 view .LVU1316
 4009 006e 4FF0FF30 		mov	r0, #-1
 4010              	.LVL514:
2921:rtos/uC-FS/Source/fs_unicode.c ****     }
 4011              		.loc 1 2921 16 view .LVU1317
 4012 0072 D1E7     		b	.L337
 4013              	.LVL515:
 4014              	.L347:
2925:rtos/uC-FS/Source/fs_unicode.c ****     }
 4015              		.loc 1 2925 16 view .LVU1318
 4016 0074 4FF0FF30 		mov	r0, #-1
 4017              	.LVL516:
2925:rtos/uC-FS/Source/fs_unicode.c ****     }
 4018              		.loc 1 2925 16 view .LVU1319
 4019 0078 CEE7     		b	.L337
 4020              		.cfi_endproc
 4021              	.LFE30:
 4023              		.section	.text.MB_StrToWC,"ax",%progbits
 4024              		.align	1
ARM GAS  /tmp/cc4JYsWh.s 			page 149


 4025              		.global	MB_StrToWC
 4026              		.syntax unified
 4027              		.thumb
 4028              		.thumb_func
 4029              		.fpu fpv4-sp-d16
 4031              	MB_StrToWC:
 4032              	.LVL517:
 4033              	.LFB31:
3036:rtos/uC-FS/Source/fs_unicode.c ****     CPU_CHAR    *psrc;
 4034              		.loc 1 3036 1 is_stmt 1 view -0
 4035              		.cfi_startproc
 4036              		@ args = 0, pretend = 0, frame = 8
 4037              		@ frame_needed = 0, uses_anonymous_args = 0
3036:rtos/uC-FS/Source/fs_unicode.c ****     CPU_CHAR    *psrc;
 4038              		.loc 1 3036 1 is_stmt 0 view .LVU1321
 4039 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4040              	.LCFI52:
 4041              		.cfi_def_cfa_offset 24
 4042              		.cfi_offset 4, -24
 4043              		.cfi_offset 5, -20
 4044              		.cfi_offset 6, -16
 4045              		.cfi_offset 7, -12
 4046              		.cfi_offset 8, -8
 4047              		.cfi_offset 14, -4
 4048 0004 82B0     		sub	sp, sp, #8
 4049              	.LCFI53:
 4050              		.cfi_def_cfa_offset 32
3037:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_copy;
 4051              		.loc 1 3037 5 is_stmt 1 view .LVU1322
3038:rtos/uC-FS/Source/fs_unicode.c ****     CPU_SIZE_T   len_char;
 4052              		.loc 1 3038 5 view .LVU1323
3039:rtos/uC-FS/Source/fs_unicode.c ****     CPU_WCHAR    src_char;
 4053              		.loc 1 3039 5 view .LVU1324
3040:rtos/uC-FS/Source/fs_unicode.c **** 
 4054              		.loc 1 3040 5 view .LVU1325
3044:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 4055              		.loc 1 3044 5 view .LVU1326
3044:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 4056              		.loc 1 3044 8 is_stmt 0 view .LVU1327
 4057 0006 A1B3     		cbz	r1, .L363
 4058 0008 0646     		mov	r6, r0
 4059 000a 1746     		mov	r7, r2
 4060 000c 8846     		mov	r8, r1
3048:rtos/uC-FS/Source/fs_unicode.c ****     if (psrc == (CPU_CHAR *)0) {
 4061              		.loc 1 3048 5 is_stmt 1 view .LVU1328
3048:rtos/uC-FS/Source/fs_unicode.c ****     if (psrc == (CPU_CHAR *)0) {
 4062              		.loc 1 3048 10 is_stmt 0 view .LVU1329
 4063 000e 0C68     		ldr	r4, [r1]
 4064              	.LVL518:
3049:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 4065              		.loc 1 3049 5 is_stmt 1 view .LVU1330
3049:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 4066              		.loc 1 3049 8 is_stmt 0 view .LVU1331
 4067 0010 94B3     		cbz	r4, .L364
3053:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 4068              		.loc 1 3053 5 is_stmt 1 view .LVU1332
3053:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
ARM GAS  /tmp/cc4JYsWh.s 			page 150


 4069              		.loc 1 3053 8 is_stmt 0 view .LVU1333
 4070 0012 A0B3     		cbz	r0, .L365
3057:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_SIZE_T)0);
 4071              		.loc 1 3057 5 is_stmt 1 view .LVU1334
3057:rtos/uC-FS/Source/fs_unicode.c ****         return  ((CPU_SIZE_T)0);
 4072              		.loc 1 3057 8 is_stmt 0 view .LVU1335
 4073 0014 22B9     		cbnz	r2, .L368
3058:rtos/uC-FS/Source/fs_unicode.c ****     }
 4074              		.loc 1 3058 17 view .LVU1336
 4075 0016 1546     		mov	r5, r2
 4076              	.LVL519:
 4077              	.L356:
3094:rtos/uC-FS/Source/fs_unicode.c **** 
 4078              		.loc 1 3094 1 view .LVU1337
 4079 0018 2846     		mov	r0, r5
 4080 001a 02B0     		add	sp, sp, #8
 4081              	.LCFI54:
 4082              		.cfi_remember_state
 4083              		.cfi_def_cfa_offset 24
 4084              		@ sp needed
 4085 001c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4086              	.LVL520:
 4087              	.L368:
 4088              	.LCFI55:
 4089              		.cfi_restore_state
3062:rtos/uC-FS/Source/fs_unicode.c ****                             psrc,
 4090              		.loc 1 3062 5 is_stmt 1 view .LVU1338
3062:rtos/uC-FS/Source/fs_unicode.c ****                             psrc,
 4091              		.loc 1 3062 16 is_stmt 0 view .LVU1339
 4092 0020 0422     		movs	r2, #4
 4093              	.LVL521:
3062:rtos/uC-FS/Source/fs_unicode.c ****                             psrc,
 4094              		.loc 1 3062 16 view .LVU1340
 4095 0022 2146     		mov	r1, r4
 4096              	.LVL522:
3062:rtos/uC-FS/Source/fs_unicode.c ****                             psrc,
 4097              		.loc 1 3062 16 view .LVU1341
 4098 0024 0DF10600 		add	r0, sp, #6
 4099              	.LVL523:
3062:rtos/uC-FS/Source/fs_unicode.c ****                             psrc,
 4100              		.loc 1 3062 16 view .LVU1342
 4101 0028 FFF7FEFF 		bl	MB_CharToWC
 4102              	.LVL524:
3065:rtos/uC-FS/Source/fs_unicode.c **** 
 4103              		.loc 1 3065 5 is_stmt 1 view .LVU1343
3067:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL char found          
 4104              		.loc 1 3067 5 view .LVU1344
3065:rtos/uC-FS/Source/fs_unicode.c **** 
 4105              		.loc 1 3065 14 is_stmt 0 view .LVU1345
 4106 002c 0025     		movs	r5, #0
 4107              	.LVL525:
 4108              	.L358:
3067:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL char found          
 4109              		.loc 1 3067 11 is_stmt 1 view .LVU1346
3067:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL char found          
 4110              		.loc 1 3067 37 is_stmt 0 view .LVU1347
 4111 002e 431E     		subs	r3, r0, #1
ARM GAS  /tmp/cc4JYsWh.s 			page 151


3067:rtos/uC-FS/Source/fs_unicode.c ****            (len_char != 0u)         &&                          /* ... or NULL char found          
 4112              		.loc 1 3067 11 view .LVU1348
 4113 0030 032B     		cmp	r3, #3
 4114 0032 0ED8     		bhi	.L359
3068:rtos/uC-FS/Source/fs_unicode.c ****            (len_copy <  len_max)) {                             /* ... or max nbr chars stored.    
 4115              		.loc 1 3068 37 view .LVU1349
 4116 0034 BD42     		cmp	r5, r7
 4117 0036 0CD2     		bcs	.L359
3070:rtos/uC-FS/Source/fs_unicode.c ****         psrc    += len_char;
 4118              		.loc 1 3070 8 is_stmt 1 view .LVU1350
3070:rtos/uC-FS/Source/fs_unicode.c ****         psrc    += len_char;
 4119              		.loc 1 3070 18 is_stmt 0 view .LVU1351
 4120 0038 BDF80630 		ldrh	r3, [sp, #6]
 4121 003c 26F8023B 		strh	r3, [r6], #2	@ movhi
 4122              	.LVL526:
3071:rtos/uC-FS/Source/fs_unicode.c ****         pdest++;
 4123              		.loc 1 3071 9 is_stmt 1 view .LVU1352
3071:rtos/uC-FS/Source/fs_unicode.c ****         pdest++;
 4124              		.loc 1 3071 17 is_stmt 0 view .LVU1353
 4125 0040 0444     		add	r4, r4, r0
 4126              	.LVL527:
3072:rtos/uC-FS/Source/fs_unicode.c ****         len_copy++;
 4127              		.loc 1 3072 9 is_stmt 1 view .LVU1354
3073:rtos/uC-FS/Source/fs_unicode.c **** 
 4128              		.loc 1 3073 9 view .LVU1355
3073:rtos/uC-FS/Source/fs_unicode.c **** 
 4129              		.loc 1 3073 17 is_stmt 0 view .LVU1356
 4130 0042 0135     		adds	r5, r5, #1
 4131              	.LVL528:
3075:rtos/uC-FS/Source/fs_unicode.c ****                                 psrc,
 4132              		.loc 1 3075 9 is_stmt 1 view .LVU1357
3075:rtos/uC-FS/Source/fs_unicode.c ****                                 psrc,
 4133              		.loc 1 3075 20 is_stmt 0 view .LVU1358
 4134 0044 0422     		movs	r2, #4
 4135 0046 2146     		mov	r1, r4
 4136 0048 0DF10600 		add	r0, sp, #6
 4137              	.LVL529:
3075:rtos/uC-FS/Source/fs_unicode.c ****                                 psrc,
 4138              		.loc 1 3075 20 view .LVU1359
 4139 004c FFF7FEFF 		bl	MB_CharToWC
 4140              	.LVL530:
3075:rtos/uC-FS/Source/fs_unicode.c ****                                 psrc,
 4141              		.loc 1 3075 20 view .LVU1360
 4142 0050 EDE7     		b	.L358
 4143              	.L359:
3081:rtos/uC-FS/Source/fs_unicode.c ****        *pdest = (CPU_WCHAR  )0;                                 /* ... append NULL wide char ...   
 4144              		.loc 1 3081 5 is_stmt 1 view .LVU1361
3081:rtos/uC-FS/Source/fs_unicode.c ****        *pdest = (CPU_WCHAR  )0;                                 /* ... append NULL wide char ...   
 4145              		.loc 1 3081 8 is_stmt 0 view .LVU1362
 4146 0052 20B1     		cbz	r0, .L369
3086:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = psrc;                                           /* ... rtn ptr past last char conve
 4147              		.loc 1 3086 12 is_stmt 1 view .LVU1363
3086:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = psrc;                                           /* ... rtn ptr past last char conve
 4148              		.loc 1 3086 15 is_stmt 0 view .LVU1364
 4149 0054 0428     		cmp	r0, #4
 4150 0056 07D8     		bhi	.L362
3087:rtos/uC-FS/Source/fs_unicode.c ****         return (len_copy);
ARM GAS  /tmp/cc4JYsWh.s 			page 152


 4151              		.loc 1 3087 8 is_stmt 1 view .LVU1365
3087:rtos/uC-FS/Source/fs_unicode.c ****         return (len_copy);
 4152              		.loc 1 3087 15 is_stmt 0 view .LVU1366
 4153 0058 C8F80040 		str	r4, [r8]
3088:rtos/uC-FS/Source/fs_unicode.c **** 
 4154              		.loc 1 3088 9 is_stmt 1 view .LVU1367
3088:rtos/uC-FS/Source/fs_unicode.c **** 
 4155              		.loc 1 3088 16 is_stmt 0 view .LVU1368
 4156 005c DCE7     		b	.L356
 4157              	.L369:
3082:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = (CPU_CHAR  *)0;                                 /* ... rtn NULL ptr in indirect src
 4158              		.loc 1 3082 8 is_stmt 1 view .LVU1369
3082:rtos/uC-FS/Source/fs_unicode.c ****        *ppsrc = (CPU_CHAR  *)0;                                 /* ... rtn NULL ptr in indirect src
 4159              		.loc 1 3082 15 is_stmt 0 view .LVU1370
 4160 005e 0023     		movs	r3, #0
 4161 0060 3380     		strh	r3, [r6]	@ movhi
3083:rtos/uC-FS/Source/fs_unicode.c ****         return (len_copy);
 4162              		.loc 1 3083 8 is_stmt 1 view .LVU1371
3083:rtos/uC-FS/Source/fs_unicode.c ****         return (len_copy);
 4163              		.loc 1 3083 15 is_stmt 0 view .LVU1372
 4164 0062 C8F80030 		str	r3, [r8]
3084:rtos/uC-FS/Source/fs_unicode.c **** 
 4165              		.loc 1 3084 9 is_stmt 1 view .LVU1373
3084:rtos/uC-FS/Source/fs_unicode.c **** 
 4166              		.loc 1 3084 16 is_stmt 0 view .LVU1374
 4167 0066 D7E7     		b	.L356
 4168              	.L362:
3091:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 4169              		.loc 1 3091 8 is_stmt 1 view .LVU1375
3091:rtos/uC-FS/Source/fs_unicode.c ****         return ((CPU_SIZE_T)-1);
 4170              		.loc 1 3091 15 is_stmt 0 view .LVU1376
 4171 0068 C8F80040 		str	r4, [r8]
3092:rtos/uC-FS/Source/fs_unicode.c ****     }
 4172              		.loc 1 3092 9 is_stmt 1 view .LVU1377
3092:rtos/uC-FS/Source/fs_unicode.c ****     }
 4173              		.loc 1 3092 16 is_stmt 0 view .LVU1378
 4174 006c 4FF0FF35 		mov	r5, #-1
 4175              	.LVL531:
3092:rtos/uC-FS/Source/fs_unicode.c ****     }
 4176              		.loc 1 3092 16 view .LVU1379
 4177 0070 D2E7     		b	.L356
 4178              	.LVL532:
 4179              	.L363:
3045:rtos/uC-FS/Source/fs_unicode.c ****     }
 4180              		.loc 1 3045 16 view .LVU1380
 4181 0072 4FF0FF35 		mov	r5, #-1
 4182 0076 CFE7     		b	.L356
 4183              	.LVL533:
 4184              	.L364:
3050:rtos/uC-FS/Source/fs_unicode.c ****     }
 4185              		.loc 1 3050 16 view .LVU1381
 4186 0078 4FF0FF35 		mov	r5, #-1
 4187 007c CCE7     		b	.L356
 4188              	.L365:
3054:rtos/uC-FS/Source/fs_unicode.c ****     }
 4189              		.loc 1 3054 16 view .LVU1382
 4190 007e 4FF0FF35 		mov	r5, #-1
ARM GAS  /tmp/cc4JYsWh.s 			page 153


 4191 0082 C9E7     		b	.L356
 4192              		.cfi_endproc
 4193              	.LFE31:
 4195              		.section	.rodata.WC_CharIsAlphaTbl,"a"
 4196              		.align	2
 4197              		.set	.LANCHOR0,. + 0
 4200              	WC_CharIsAlphaTbl:
 4201 0000 0000     		.short	0
 4202 0002 4100     		.short	65
 4203 0004 5B00     		.short	91
 4204 0006 6100     		.short	97
 4205 0008 7B00     		.short	123
 4206 000a AA00     		.short	170
 4207 000c AB00     		.short	171
 4208 000e B500     		.short	181
 4209 0010 B600     		.short	182
 4210 0012 BA00     		.short	186
 4211 0014 BB00     		.short	187
 4212 0016 C000     		.short	192
 4213 0018 D700     		.short	215
 4214 001a D800     		.short	216
 4215 001c F700     		.short	247
 4216 001e F800     		.short	248
 4217 0020 C202     		.short	706
 4218 0022 C602     		.short	710
 4219 0024 D202     		.short	722
 4220 0026 E002     		.short	736
 4221 0028 E502     		.short	741
 4222 002a EC02     		.short	748
 4223 002c ED02     		.short	749
 4224 002e EE02     		.short	750
 4225 0030 EF02     		.short	751
 4226 0032 4503     		.short	837
 4227 0034 4603     		.short	838
 4228 0036 7003     		.short	880
 4229 0038 7503     		.short	885
 4230 003a 7603     		.short	886
 4231 003c 7803     		.short	888
 4232 003e 7A03     		.short	890
 4233 0040 7E03     		.short	894
 4234 0042 8603     		.short	902
 4235 0044 8703     		.short	903
 4236 0046 8803     		.short	904
 4237 0048 8B03     		.short	907
 4238 004a 8C03     		.short	908
 4239 004c 8D03     		.short	909
 4240 004e 8E03     		.short	910
 4241 0050 A203     		.short	930
 4242 0052 A303     		.short	931
 4243 0054 F603     		.short	1014
 4244 0056 F703     		.short	1015
 4245 0058 8204     		.short	1154
 4246 005a 8A04     		.short	1162
 4247 005c 2405     		.short	1316
 4248 005e 3105     		.short	1329
 4249 0060 5705     		.short	1367
 4250 0062 5905     		.short	1369
ARM GAS  /tmp/cc4JYsWh.s 			page 154


 4251 0064 5A05     		.short	1370
 4252 0066 6105     		.short	1377
 4253 0068 8805     		.short	1416
 4254 006a B005     		.short	1456
 4255 006c BE05     		.short	1470
 4256 006e BF05     		.short	1471
 4257 0070 C005     		.short	1472
 4258 0072 C105     		.short	1473
 4259 0074 C305     		.short	1475
 4260 0076 C405     		.short	1476
 4261 0078 C605     		.short	1478
 4262 007a C705     		.short	1479
 4263 007c C805     		.short	1480
 4264 007e D005     		.short	1488
 4265 0080 EB05     		.short	1515
 4266 0082 F005     		.short	1520
 4267 0084 F305     		.short	1523
 4268 0086 1006     		.short	1552
 4269 0088 1B06     		.short	1563
 4270 008a 2106     		.short	1569
 4271 008c 5806     		.short	1624
 4272 008e 5906     		.short	1625
 4273 0090 5F06     		.short	1631
 4274 0092 6E06     		.short	1646
 4275 0094 D406     		.short	1748
 4276 0096 D506     		.short	1749
 4277 0098 DD06     		.short	1757
 4278 009a E106     		.short	1761
 4279 009c E906     		.short	1769
 4280 009e ED06     		.short	1773
 4281 00a0 F006     		.short	1776
 4282 00a2 FA06     		.short	1786
 4283 00a4 FD06     		.short	1789
 4284 00a6 FF06     		.short	1791
 4285 00a8 0007     		.short	1792
 4286 00aa 1007     		.short	1808
 4287 00ac 4007     		.short	1856
 4288 00ae 4D07     		.short	1869
 4289 00b0 B207     		.short	1970
 4290 00b2 CA07     		.short	1994
 4291 00b4 EB07     		.short	2027
 4292 00b6 F407     		.short	2036
 4293 00b8 F607     		.short	2038
 4294 00ba FA07     		.short	2042
 4295 00bc FB07     		.short	2043
 4296 00be 0109     		.short	2305
 4297 00c0 3A09     		.short	2362
 4298 00c2 3D09     		.short	2365
 4299 00c4 4D09     		.short	2381
 4300 00c6 5009     		.short	2384
 4301 00c8 5109     		.short	2385
 4302 00ca 5809     		.short	2392
 4303 00cc 6409     		.short	2404
 4304 00ce 7109     		.short	2417
 4305 00d0 7309     		.short	2419
 4306 00d2 7B09     		.short	2427
 4307 00d4 8009     		.short	2432
ARM GAS  /tmp/cc4JYsWh.s 			page 155


 4308 00d6 8109     		.short	2433
 4309 00d8 8409     		.short	2436
 4310 00da 8509     		.short	2437
 4311 00dc 8D09     		.short	2445
 4312 00de 8F09     		.short	2447
 4313 00e0 9109     		.short	2449
 4314 00e2 9309     		.short	2451
 4315 00e4 A909     		.short	2473
 4316 00e6 AA09     		.short	2474
 4317 00e8 B109     		.short	2481
 4318 00ea B209     		.short	2482
 4319 00ec B309     		.short	2483
 4320 00ee B609     		.short	2486
 4321 00f0 BA09     		.short	2490
 4322 00f2 BD09     		.short	2493
 4323 00f4 C509     		.short	2501
 4324 00f6 C709     		.short	2503
 4325 00f8 C909     		.short	2505
 4326 00fa CB09     		.short	2507
 4327 00fc CD09     		.short	2509
 4328 00fe CE09     		.short	2510
 4329 0100 CF09     		.short	2511
 4330 0102 D709     		.short	2519
 4331 0104 D809     		.short	2520
 4332 0106 DC09     		.short	2524
 4333 0108 DE09     		.short	2526
 4334 010a DF09     		.short	2527
 4335 010c E409     		.short	2532
 4336 010e F009     		.short	2544
 4337 0110 F209     		.short	2546
 4338 0112 010A     		.short	2561
 4339 0114 040A     		.short	2564
 4340 0116 050A     		.short	2565
 4341 0118 0B0A     		.short	2571
 4342 011a 0F0A     		.short	2575
 4343 011c 110A     		.short	2577
 4344 011e 130A     		.short	2579
 4345 0120 290A     		.short	2601
 4346 0122 2A0A     		.short	2602
 4347 0124 310A     		.short	2609
 4348 0126 320A     		.short	2610
 4349 0128 340A     		.short	2612
 4350 012a 350A     		.short	2613
 4351 012c 370A     		.short	2615
 4352 012e 380A     		.short	2616
 4353 0130 3A0A     		.short	2618
 4354 0132 3E0A     		.short	2622
 4355 0134 430A     		.short	2627
 4356 0136 470A     		.short	2631
 4357 0138 490A     		.short	2633
 4358 013a 4B0A     		.short	2635
 4359 013c 4D0A     		.short	2637
 4360 013e 510A     		.short	2641
 4361 0140 520A     		.short	2642
 4362 0142 590A     		.short	2649
 4363 0144 5D0A     		.short	2653
 4364 0146 5E0A     		.short	2654
ARM GAS  /tmp/cc4JYsWh.s 			page 156


 4365 0148 5F0A     		.short	2655
 4366 014a 700A     		.short	2672
 4367 014c 760A     		.short	2678
 4368 014e 810A     		.short	2689
 4369 0150 840A     		.short	2692
 4370 0152 850A     		.short	2693
 4371 0154 8E0A     		.short	2702
 4372 0156 8F0A     		.short	2703
 4373 0158 920A     		.short	2706
 4374 015a 930A     		.short	2707
 4375 015c A90A     		.short	2729
 4376 015e AA0A     		.short	2730
 4377 0160 B10A     		.short	2737
 4378 0162 B20A     		.short	2738
 4379 0164 B40A     		.short	2740
 4380 0166 B50A     		.short	2741
 4381 0168 BA0A     		.short	2746
 4382 016a BD0A     		.short	2749
 4383 016c C60A     		.short	2758
 4384 016e C70A     		.short	2759
 4385 0170 CA0A     		.short	2762
 4386 0172 CB0A     		.short	2763
 4387 0174 CD0A     		.short	2765
 4388 0176 D00A     		.short	2768
 4389 0178 D10A     		.short	2769
 4390 017a E00A     		.short	2784
 4391 017c E40A     		.short	2788
 4392 017e 010B     		.short	2817
 4393 0180 040B     		.short	2820
 4394 0182 050B     		.short	2821
 4395 0184 0D0B     		.short	2829
 4396 0186 0F0B     		.short	2831
 4397 0188 110B     		.short	2833
 4398 018a 130B     		.short	2835
 4399 018c 290B     		.short	2857
 4400 018e 2A0B     		.short	2858
 4401 0190 310B     		.short	2865
 4402 0192 320B     		.short	2866
 4403 0194 340B     		.short	2868
 4404 0196 350B     		.short	2869
 4405 0198 3A0B     		.short	2874
 4406 019a 3D0B     		.short	2877
 4407 019c 450B     		.short	2885
 4408 019e 470B     		.short	2887
 4409 01a0 490B     		.short	2889
 4410 01a2 4B0B     		.short	2891
 4411 01a4 4D0B     		.short	2893
 4412 01a6 560B     		.short	2902
 4413 01a8 580B     		.short	2904
 4414 01aa 5C0B     		.short	2908
 4415 01ac 5E0B     		.short	2910
 4416 01ae 5F0B     		.short	2911
 4417 01b0 640B     		.short	2916
 4418 01b2 710B     		.short	2929
 4419 01b4 720B     		.short	2930
 4420 01b6 820B     		.short	2946
 4421 01b8 840B     		.short	2948
ARM GAS  /tmp/cc4JYsWh.s 			page 157


 4422 01ba 850B     		.short	2949
 4423 01bc 8B0B     		.short	2955
 4424 01be 8E0B     		.short	2958
 4425 01c0 910B     		.short	2961
 4426 01c2 920B     		.short	2962
 4427 01c4 960B     		.short	2966
 4428 01c6 990B     		.short	2969
 4429 01c8 9B0B     		.short	2971
 4430 01ca 9C0B     		.short	2972
 4431 01cc 9D0B     		.short	2973
 4432 01ce 9E0B     		.short	2974
 4433 01d0 A00B     		.short	2976
 4434 01d2 A30B     		.short	2979
 4435 01d4 A50B     		.short	2981
 4436 01d6 A80B     		.short	2984
 4437 01d8 AB0B     		.short	2987
 4438 01da AE0B     		.short	2990
 4439 01dc BA0B     		.short	3002
 4440 01de BE0B     		.short	3006
 4441 01e0 C30B     		.short	3011
 4442 01e2 C60B     		.short	3014
 4443 01e4 C90B     		.short	3017
 4444 01e6 CA0B     		.short	3018
 4445 01e8 CD0B     		.short	3021
 4446 01ea D00B     		.short	3024
 4447 01ec D10B     		.short	3025
 4448 01ee D70B     		.short	3031
 4449 01f0 D80B     		.short	3032
 4450 01f2 010C     		.short	3073
 4451 01f4 040C     		.short	3076
 4452 01f6 050C     		.short	3077
 4453 01f8 0D0C     		.short	3085
 4454 01fa 0E0C     		.short	3086
 4455 01fc 110C     		.short	3089
 4456 01fe 120C     		.short	3090
 4457 0200 290C     		.short	3113
 4458 0202 2A0C     		.short	3114
 4459 0204 340C     		.short	3124
 4460 0206 350C     		.short	3125
 4461 0208 3A0C     		.short	3130
 4462 020a 3D0C     		.short	3133
 4463 020c 450C     		.short	3141
 4464 020e 460C     		.short	3142
 4465 0210 490C     		.short	3145
 4466 0212 4A0C     		.short	3146
 4467 0214 4D0C     		.short	3149
 4468 0216 550C     		.short	3157
 4469 0218 570C     		.short	3159
 4470 021a 580C     		.short	3160
 4471 021c 5A0C     		.short	3162
 4472 021e 600C     		.short	3168
 4473 0220 640C     		.short	3172
 4474 0222 820C     		.short	3202
 4475 0224 840C     		.short	3204
 4476 0226 850C     		.short	3205
 4477 0228 8D0C     		.short	3213
 4478 022a 8E0C     		.short	3214
ARM GAS  /tmp/cc4JYsWh.s 			page 158


 4479 022c 910C     		.short	3217
 4480 022e 920C     		.short	3218
 4481 0230 A90C     		.short	3241
 4482 0232 AA0C     		.short	3242
 4483 0234 B40C     		.short	3252
 4484 0236 B50C     		.short	3253
 4485 0238 BA0C     		.short	3258
 4486 023a BD0C     		.short	3261
 4487 023c C50C     		.short	3269
 4488 023e C60C     		.short	3270
 4489 0240 C90C     		.short	3273
 4490 0242 CA0C     		.short	3274
 4491 0244 CD0C     		.short	3277
 4492 0246 D50C     		.short	3285
 4493 0248 D70C     		.short	3287
 4494 024a DE0C     		.short	3294
 4495 024c DF0C     		.short	3295
 4496 024e E00C     		.short	3296
 4497 0250 E40C     		.short	3300
 4498 0252 020D     		.short	3330
 4499 0254 040D     		.short	3332
 4500 0256 050D     		.short	3333
 4501 0258 0D0D     		.short	3341
 4502 025a 0E0D     		.short	3342
 4503 025c 110D     		.short	3345
 4504 025e 120D     		.short	3346
 4505 0260 290D     		.short	3369
 4506 0262 2A0D     		.short	3370
 4507 0264 3A0D     		.short	3386
 4508 0266 3D0D     		.short	3389
 4509 0268 450D     		.short	3397
 4510 026a 460D     		.short	3398
 4511 026c 490D     		.short	3401
 4512 026e 4A0D     		.short	3402
 4513 0270 4D0D     		.short	3405
 4514 0272 570D     		.short	3415
 4515 0274 580D     		.short	3416
 4516 0276 600D     		.short	3424
 4517 0278 640D     		.short	3428
 4518 027a 7A0D     		.short	3450
 4519 027c 800D     		.short	3456
 4520 027e 820D     		.short	3458
 4521 0280 840D     		.short	3460
 4522 0282 850D     		.short	3461
 4523 0284 970D     		.short	3479
 4524 0286 9A0D     		.short	3482
 4525 0288 B20D     		.short	3506
 4526 028a B30D     		.short	3507
 4527 028c BC0D     		.short	3516
 4528 028e BD0D     		.short	3517
 4529 0290 BE0D     		.short	3518
 4530 0292 C00D     		.short	3520
 4531 0294 C70D     		.short	3527
 4532 0296 CF0D     		.short	3535
 4533 0298 D50D     		.short	3541
 4534 029a D60D     		.short	3542
 4535 029c D70D     		.short	3543
ARM GAS  /tmp/cc4JYsWh.s 			page 159


 4536 029e D80D     		.short	3544
 4537 02a0 E00D     		.short	3552
 4538 02a2 F20D     		.short	3570
 4539 02a4 F40D     		.short	3572
 4540 02a6 010E     		.short	3585
 4541 02a8 3B0E     		.short	3643
 4542 02aa 400E     		.short	3648
 4543 02ac 470E     		.short	3655
 4544 02ae 4D0E     		.short	3661
 4545 02b0 4E0E     		.short	3662
 4546 02b2 810E     		.short	3713
 4547 02b4 830E     		.short	3715
 4548 02b6 840E     		.short	3716
 4549 02b8 850E     		.short	3717
 4550 02ba 870E     		.short	3719
 4551 02bc 890E     		.short	3721
 4552 02be 8A0E     		.short	3722
 4553 02c0 8B0E     		.short	3723
 4554 02c2 8D0E     		.short	3725
 4555 02c4 8E0E     		.short	3726
 4556 02c6 940E     		.short	3732
 4557 02c8 980E     		.short	3736
 4558 02ca 990E     		.short	3737
 4559 02cc A00E     		.short	3744
 4560 02ce A10E     		.short	3745
 4561 02d0 A40E     		.short	3748
 4562 02d2 A50E     		.short	3749
 4563 02d4 A60E     		.short	3750
 4564 02d6 A70E     		.short	3751
 4565 02d8 A80E     		.short	3752
 4566 02da AA0E     		.short	3754
 4567 02dc AC0E     		.short	3756
 4568 02de AD0E     		.short	3757
 4569 02e0 BA0E     		.short	3770
 4570 02e2 BB0E     		.short	3771
 4571 02e4 BE0E     		.short	3774
 4572 02e6 C00E     		.short	3776
 4573 02e8 C50E     		.short	3781
 4574 02ea C60E     		.short	3782
 4575 02ec C70E     		.short	3783
 4576 02ee CD0E     		.short	3789
 4577 02f0 CE0E     		.short	3790
 4578 02f2 DC0E     		.short	3804
 4579 02f4 DE0E     		.short	3806
 4580 02f6 000F     		.short	3840
 4581 02f8 010F     		.short	3841
 4582 02fa 400F     		.short	3904
 4583 02fc 480F     		.short	3912
 4584 02fe 490F     		.short	3913
 4585 0300 6D0F     		.short	3949
 4586 0302 710F     		.short	3953
 4587 0304 820F     		.short	3970
 4588 0306 880F     		.short	3976
 4589 0308 8C0F     		.short	3980
 4590 030a 900F     		.short	3984
 4591 030c 980F     		.short	3992
 4592 030e 990F     		.short	3993
ARM GAS  /tmp/cc4JYsWh.s 			page 160


 4593 0310 BD0F     		.short	4029
 4594 0312 0010     		.short	4096
 4595 0314 3710     		.short	4151
 4596 0316 3810     		.short	4152
 4597 0318 3910     		.short	4153
 4598 031a 3B10     		.short	4155
 4599 031c 4010     		.short	4160
 4600 031e 5010     		.short	4176
 4601 0320 6310     		.short	4195
 4602 0322 6510     		.short	4197
 4603 0324 6910     		.short	4201
 4604 0326 6E10     		.short	4206
 4605 0328 8710     		.short	4231
 4606 032a 8E10     		.short	4238
 4607 032c 8F10     		.short	4239
 4608 032e A010     		.short	4256
 4609 0330 C610     		.short	4294
 4610 0332 D010     		.short	4304
 4611 0334 FB10     		.short	4347
 4612 0336 FC10     		.short	4348
 4613 0338 FD10     		.short	4349
 4614 033a 0011     		.short	4352
 4615 033c 5A11     		.short	4442
 4616 033e 5F11     		.short	4447
 4617 0340 A311     		.short	4515
 4618 0342 A811     		.short	4520
 4619 0344 FA11     		.short	4602
 4620 0346 0012     		.short	4608
 4621 0348 4912     		.short	4681
 4622 034a 4A12     		.short	4682
 4623 034c 4E12     		.short	4686
 4624 034e 5012     		.short	4688
 4625 0350 5712     		.short	4695
 4626 0352 5812     		.short	4696
 4627 0354 5912     		.short	4697
 4628 0356 5A12     		.short	4698
 4629 0358 5E12     		.short	4702
 4630 035a 6012     		.short	4704
 4631 035c 8912     		.short	4745
 4632 035e 8A12     		.short	4746
 4633 0360 8E12     		.short	4750
 4634 0362 9012     		.short	4752
 4635 0364 B112     		.short	4785
 4636 0366 B212     		.short	4786
 4637 0368 B612     		.short	4790
 4638 036a B812     		.short	4792
 4639 036c BF12     		.short	4799
 4640 036e C012     		.short	4800
 4641 0370 C112     		.short	4801
 4642 0372 C212     		.short	4802
 4643 0374 C612     		.short	4806
 4644 0376 C812     		.short	4808
 4645 0378 D712     		.short	4823
 4646 037a D812     		.short	4824
 4647 037c 1113     		.short	4881
 4648 037e 1213     		.short	4882
 4649 0380 1613     		.short	4886
ARM GAS  /tmp/cc4JYsWh.s 			page 161


 4650 0382 1813     		.short	4888
 4651 0384 5B13     		.short	4955
 4652 0386 5F13     		.short	4959
 4653 0388 6013     		.short	4960
 4654 038a 8013     		.short	4992
 4655 038c 9013     		.short	5008
 4656 038e A013     		.short	5024
 4657 0390 F513     		.short	5109
 4658 0392 0114     		.short	5121
 4659 0394 6D16     		.short	5741
 4660 0396 6F16     		.short	5743
 4661 0398 7716     		.short	5751
 4662 039a 8116     		.short	5761
 4663 039c 9B16     		.short	5787
 4664 039e A016     		.short	5792
 4665 03a0 EB16     		.short	5867
 4666 03a2 EE16     		.short	5870
 4667 03a4 F116     		.short	5873
 4668 03a6 0017     		.short	5888
 4669 03a8 0D17     		.short	5901
 4670 03aa 0E17     		.short	5902
 4671 03ac 1417     		.short	5908
 4672 03ae 2017     		.short	5920
 4673 03b0 3417     		.short	5940
 4674 03b2 4017     		.short	5952
 4675 03b4 5417     		.short	5972
 4676 03b6 6017     		.short	5984
 4677 03b8 6D17     		.short	5997
 4678 03ba 6E17     		.short	5998
 4679 03bc 7117     		.short	6001
 4680 03be 7217     		.short	6002
 4681 03c0 7417     		.short	6004
 4682 03c2 8017     		.short	6016
 4683 03c4 B417     		.short	6068
 4684 03c6 B617     		.short	6070
 4685 03c8 C917     		.short	6089
 4686 03ca D717     		.short	6103
 4687 03cc D817     		.short	6104
 4688 03ce DC17     		.short	6108
 4689 03d0 DD17     		.short	6109
 4690 03d2 2018     		.short	6176
 4691 03d4 7818     		.short	6264
 4692 03d6 8018     		.short	6272
 4693 03d8 AB18     		.short	6315
 4694 03da 0019     		.short	6400
 4695 03dc 1D19     		.short	6429
 4696 03de 2019     		.short	6432
 4697 03e0 2C19     		.short	6444
 4698 03e2 3019     		.short	6448
 4699 03e4 3919     		.short	6457
 4700 03e6 5019     		.short	6480
 4701 03e8 6E19     		.short	6510
 4702 03ea 7019     		.short	6512
 4703 03ec 7519     		.short	6517
 4704 03ee 8019     		.short	6528
 4705 03f0 AA19     		.short	6570
 4706 03f2 B019     		.short	6576
ARM GAS  /tmp/cc4JYsWh.s 			page 162


 4707 03f4 CA19     		.short	6602
 4708 03f6 001A     		.short	6656
 4709 03f8 1C1A     		.short	6684
 4710 03fa 001B     		.short	6912
 4711 03fc 341B     		.short	6964
 4712 03fe 351B     		.short	6965
 4713 0400 441B     		.short	6980
 4714 0402 451B     		.short	6981
 4715 0404 4C1B     		.short	6988
 4716 0406 801B     		.short	7040
 4717 0408 AA1B     		.short	7082
 4718 040a AE1B     		.short	7086
 4719 040c B01B     		.short	7088
 4720 040e 001C     		.short	7168
 4721 0410 361C     		.short	7222
 4722 0412 4D1C     		.short	7245
 4723 0414 501C     		.short	7248
 4724 0416 5A1C     		.short	7258
 4725 0418 7E1C     		.short	7294
 4726 041a 001D     		.short	7424
 4727 041c C01D     		.short	7616
 4728 041e 001E     		.short	7680
 4729 0420 161F     		.short	7958
 4730 0422 181F     		.short	7960
 4731 0424 1E1F     		.short	7966
 4732 0426 201F     		.short	7968
 4733 0428 461F     		.short	8006
 4734 042a 481F     		.short	8008
 4735 042c 4E1F     		.short	8014
 4736 042e 501F     		.short	8016
 4737 0430 581F     		.short	8024
 4738 0432 591F     		.short	8025
 4739 0434 5A1F     		.short	8026
 4740 0436 5B1F     		.short	8027
 4741 0438 5C1F     		.short	8028
 4742 043a 5D1F     		.short	8029
 4743 043c 5E1F     		.short	8030
 4744 043e 5F1F     		.short	8031
 4745 0440 7E1F     		.short	8062
 4746 0442 801F     		.short	8064
 4747 0444 B51F     		.short	8117
 4748 0446 B61F     		.short	8118
 4749 0448 BD1F     		.short	8125
 4750 044a BE1F     		.short	8126
 4751 044c BF1F     		.short	8127
 4752 044e C21F     		.short	8130
 4753 0450 C51F     		.short	8133
 4754 0452 C61F     		.short	8134
 4755 0454 CD1F     		.short	8141
 4756 0456 D01F     		.short	8144
 4757 0458 D41F     		.short	8148
 4758 045a D61F     		.short	8150
 4759 045c DC1F     		.short	8156
 4760 045e E01F     		.short	8160
 4761 0460 ED1F     		.short	8173
 4762 0462 F21F     		.short	8178
 4763 0464 F51F     		.short	8181
ARM GAS  /tmp/cc4JYsWh.s 			page 163


 4764 0466 F61F     		.short	8182
 4765 0468 FD1F     		.short	8189
 4766 046a 7120     		.short	8305
 4767 046c 7220     		.short	8306
 4768 046e 7F20     		.short	8319
 4769 0470 8020     		.short	8320
 4770 0472 9020     		.short	8336
 4771 0474 9520     		.short	8341
 4772 0476 0221     		.short	8450
 4773 0478 0321     		.short	8451
 4774 047a 0721     		.short	8455
 4775 047c 0821     		.short	8456
 4776 047e 0A21     		.short	8458
 4777 0480 1421     		.short	8468
 4778 0482 1521     		.short	8469
 4779 0484 1621     		.short	8470
 4780 0486 1921     		.short	8473
 4781 0488 1E21     		.short	8478
 4782 048a 2421     		.short	8484
 4783 048c 2521     		.short	8485
 4784 048e 2621     		.short	8486
 4785 0490 2721     		.short	8487
 4786 0492 2821     		.short	8488
 4787 0494 2921     		.short	8489
 4788 0496 2A21     		.short	8490
 4789 0498 2E21     		.short	8494
 4790 049a 2F21     		.short	8495
 4791 049c 3A21     		.short	8506
 4792 049e 3C21     		.short	8508
 4793 04a0 4021     		.short	8512
 4794 04a2 4521     		.short	8517
 4795 04a4 4A21     		.short	8522
 4796 04a6 4E21     		.short	8526
 4797 04a8 4F21     		.short	8527
 4798 04aa 6021     		.short	8544
 4799 04ac 8921     		.short	8585
 4800 04ae B624     		.short	9398
 4801 04b0 EA24     		.short	9450
 4802 04b2 002C     		.short	11264
 4803 04b4 2F2C     		.short	11311
 4804 04b6 302C     		.short	11312
 4805 04b8 5F2C     		.short	11359
 4806 04ba 602C     		.short	11360
 4807 04bc 702C     		.short	11376
 4808 04be 712C     		.short	11377
 4809 04c0 7E2C     		.short	11390
 4810 04c2 802C     		.short	11392
 4811 04c4 E52C     		.short	11493
 4812 04c6 002D     		.short	11520
 4813 04c8 262D     		.short	11558
 4814 04ca 302D     		.short	11568
 4815 04cc 662D     		.short	11622
 4816 04ce 6F2D     		.short	11631
 4817 04d0 702D     		.short	11632
 4818 04d2 802D     		.short	11648
 4819 04d4 972D     		.short	11671
 4820 04d6 A02D     		.short	11680
ARM GAS  /tmp/cc4JYsWh.s 			page 164


 4821 04d8 A72D     		.short	11687
 4822 04da A82D     		.short	11688
 4823 04dc AF2D     		.short	11695
 4824 04de B02D     		.short	11696
 4825 04e0 B72D     		.short	11703
 4826 04e2 B82D     		.short	11704
 4827 04e4 BF2D     		.short	11711
 4828 04e6 C02D     		.short	11712
 4829 04e8 C72D     		.short	11719
 4830 04ea C82D     		.short	11720
 4831 04ec CF2D     		.short	11727
 4832 04ee D02D     		.short	11728
 4833 04f0 D72D     		.short	11735
 4834 04f2 D82D     		.short	11736
 4835 04f4 DF2D     		.short	11743
 4836 04f6 E02D     		.short	11744
 4837 04f8 002E     		.short	11776
 4838 04fa 2F2E     		.short	11823
 4839 04fc 302E     		.short	11824
 4840 04fe 0530     		.short	12293
 4841 0500 0830     		.short	12296
 4842 0502 2130     		.short	12321
 4843 0504 2A30     		.short	12330
 4844 0506 3130     		.short	12337
 4845 0508 3630     		.short	12342
 4846 050a 3830     		.short	12344
 4847 050c 3D30     		.short	12349
 4848 050e 4130     		.short	12353
 4849 0510 9730     		.short	12439
 4850 0512 9D30     		.short	12445
 4851 0514 A030     		.short	12448
 4852 0516 A130     		.short	12449
 4853 0518 FB30     		.short	12539
 4854 051a FC30     		.short	12540
 4855 051c 0031     		.short	12544
 4856 051e 0531     		.short	12549
 4857 0520 2E31     		.short	12590
 4858 0522 3131     		.short	12593
 4859 0524 8F31     		.short	12687
 4860 0526 A031     		.short	12704
 4861 0528 B831     		.short	12728
 4862 052a F031     		.short	12784
 4863 052c 0032     		.short	12800
 4864 052e 0034     		.short	13312
 4865 0530 B64D     		.short	19894
 4866 0532 004E     		.short	19968
 4867 0534 C49F     		.short	-24636
 4868 0536 00A0     		.short	-24576
 4869 0538 8DA4     		.short	-23411
 4870 053a 00A5     		.short	-23296
 4871 053c 0DA6     		.short	-23027
 4872 053e 10A6     		.short	-23024
 4873 0540 20A6     		.short	-23008
 4874 0542 2AA6     		.short	-22998
 4875 0544 2CA6     		.short	-22996
 4876 0546 40A6     		.short	-22976
 4877 0548 60A6     		.short	-22944
ARM GAS  /tmp/cc4JYsWh.s 			page 165


 4878 054a 62A6     		.short	-22942
 4879 054c 6FA6     		.short	-22929
 4880 054e 7FA6     		.short	-22913
 4881 0550 98A6     		.short	-22888
 4882 0552 17A7     		.short	-22761
 4883 0554 20A7     		.short	-22752
 4884 0556 22A7     		.short	-22750
 4885 0558 89A7     		.short	-22647
 4886 055a 8BA7     		.short	-22645
 4887 055c 8DA7     		.short	-22643
 4888 055e FBA7     		.short	-22533
 4889 0560 02A8     		.short	-22526
 4890 0562 03A8     		.short	-22525
 4891 0564 06A8     		.short	-22522
 4892 0566 07A8     		.short	-22521
 4893 0568 0BA8     		.short	-22517
 4894 056a 0CA8     		.short	-22516
 4895 056c 28A8     		.short	-22488
 4896 056e 40A8     		.short	-22464
 4897 0570 74A8     		.short	-22412
 4898 0572 80A8     		.short	-22400
 4899 0574 C4A8     		.short	-22332
 4900 0576 0AA9     		.short	-22262
 4901 0578 2BA9     		.short	-22229
 4902 057a 30A9     		.short	-22224
 4903 057c 53A9     		.short	-22189
 4904 057e 00AA     		.short	-22016
 4905 0580 37AA     		.short	-21961
 4906 0582 40AA     		.short	-21952
 4907 0584 4EAA     		.short	-21938
 4908 0586 00AC     		.short	-21504
 4909 0588 A4D7     		.short	-10332
 4910 058a 00F9     		.short	-1792
 4911 058c 2EFA     		.short	-1490
 4912 058e 30FA     		.short	-1488
 4913 0590 6BFA     		.short	-1429
 4914 0592 70FA     		.short	-1424
 4915 0594 DAFA     		.short	-1318
 4916 0596 00FB     		.short	-1280
 4917 0598 07FB     		.short	-1273
 4918 059a 13FB     		.short	-1261
 4919 059c 18FB     		.short	-1256
 4920 059e 1DFB     		.short	-1251
 4921 05a0 29FB     		.short	-1239
 4922 05a2 2AFB     		.short	-1238
 4923 05a4 37FB     		.short	-1225
 4924 05a6 38FB     		.short	-1224
 4925 05a8 3DFB     		.short	-1219
 4926 05aa 3EFB     		.short	-1218
 4927 05ac 3FFB     		.short	-1217
 4928 05ae 40FB     		.short	-1216
 4929 05b0 42FB     		.short	-1214
 4930 05b2 43FB     		.short	-1213
 4931 05b4 45FB     		.short	-1211
 4932 05b6 46FB     		.short	-1210
 4933 05b8 B2FB     		.short	-1102
 4934 05ba D3FB     		.short	-1069
ARM GAS  /tmp/cc4JYsWh.s 			page 166


 4935 05bc 3EFD     		.short	-706
 4936 05be 50FD     		.short	-688
 4937 05c0 90FD     		.short	-624
 4938 05c2 92FD     		.short	-622
 4939 05c4 C8FD     		.short	-568
 4940 05c6 F0FD     		.short	-528
 4941 05c8 FCFD     		.short	-516
 4942 05ca 70FE     		.short	-400
 4943 05cc 75FE     		.short	-395
 4944 05ce 76FE     		.short	-394
 4945 05d0 FDFE     		.short	-259
 4946 05d2 21FF     		.short	-223
 4947 05d4 3BFF     		.short	-197
 4948 05d6 41FF     		.short	-191
 4949 05d8 5BFF     		.short	-165
 4950 05da 66FF     		.short	-154
 4951 05dc BFFF     		.short	-65
 4952 05de C2FF     		.short	-62
 4953 05e0 C8FF     		.short	-56
 4954 05e2 CAFF     		.short	-54
 4955 05e4 D0FF     		.short	-48
 4956 05e6 D2FF     		.short	-46
 4957 05e8 D8FF     		.short	-40
 4958 05ea DAFF     		.short	-38
 4959 05ec DDFF     		.short	-35
 4960 05ee FFFF     		.short	-1
 4961              		.section	.rodata.WC_CharIsLowerTbl,"a"
 4962              		.align	2
 4963              		.set	.LANCHOR3,. + 0
 4966              	WC_CharIsLowerTbl:
 4967 0000 0000     		.short	0
 4968 0002 AA00     		.short	170
 4969 0004 AB00     		.short	171
 4970 0006 BA00     		.short	186
 4971 0008 BB00     		.short	187
 4972 000a DF00     		.short	223
 4973 000c E000     		.short	224
 4974 000e 3801     		.short	312
 4975 0010 3901     		.short	313
 4976 0012 4901     		.short	329
 4977 0014 4A01     		.short	330
 4978 0016 8D01     		.short	397
 4979 0018 8E01     		.short	398
 4980 001a AA01     		.short	426
 4981 001c AC01     		.short	428
 4982 001e BA01     		.short	442
 4983 0020 BB01     		.short	443
 4984 0022 BE01     		.short	446
 4985 0024 BF01     		.short	447
 4986 0026 F001     		.short	496
 4987 0028 F101     		.short	497
 4988 002a 2102     		.short	545
 4989 002c 2202     		.short	546
 4990 002e 3402     		.short	564
 4991 0030 3A02     		.short	570
 4992 0032 3F02     		.short	575
 4993 0034 4102     		.short	577
ARM GAS  /tmp/cc4JYsWh.s 			page 167


 4994 0036 5002     		.short	592
 4995 0038 9402     		.short	660
 4996 003a 9502     		.short	661
 4997 003c B902     		.short	697
 4998 003e C002     		.short	704
 4999 0040 C202     		.short	706
 5000 0042 E002     		.short	736
 5001 0044 E502     		.short	741
 5002 0046 7A03     		.short	890
 5003 0048 7B03     		.short	891
 5004 004a 9003     		.short	912
 5005 004c 9103     		.short	913
 5006 004e B003     		.short	944
 5007 0050 B103     		.short	945
 5008 0052 F303     		.short	1011
 5009 0054 F403     		.short	1012
 5010 0056 FC03     		.short	1020
 5011 0058 FD03     		.short	1021
 5012 005a 8705     		.short	1415
 5013 005c 8805     		.short	1416
 5014 005e 001D     		.short	7424
 5015 0060 C01D     		.short	7616
 5016 0062 961E     		.short	7830
 5017 0064 9E1E     		.short	7838
 5018 0066 9F1E     		.short	7839
 5019 0068 A01E     		.short	7840
 5020 006a 501F     		.short	8016
 5021 006c 581F     		.short	8024
 5022 006e B21F     		.short	8114
 5023 0070 B31F     		.short	8115
 5024 0072 B41F     		.short	8116
 5025 0074 B51F     		.short	8117
 5026 0076 B61F     		.short	8118
 5027 0078 B81F     		.short	8120
 5028 007a C21F     		.short	8130
 5029 007c C51F     		.short	8133
 5030 007e D21F     		.short	8146
 5031 0080 D41F     		.short	8148
 5032 0082 D61F     		.short	8150
 5033 0084 D81F     		.short	8152
 5034 0086 E01F     		.short	8160
 5035 0088 E81F     		.short	8168
 5036 008a F21F     		.short	8178
 5037 008c F51F     		.short	8181
 5038 008e F61F     		.short	8182
 5039 0090 F81F     		.short	8184
 5040 0092 7120     		.short	8305
 5041 0094 7220     		.short	8306
 5042 0096 7F20     		.short	8319
 5043 0098 8020     		.short	8320
 5044 009a 9020     		.short	8336
 5045 009c 9520     		.short	8341
 5046 009e 0A21     		.short	8458
 5047 00a0 0B21     		.short	8459
 5048 00a2 0E21     		.short	8462
 5049 00a4 1021     		.short	8464
 5050 00a6 1321     		.short	8467
ARM GAS  /tmp/cc4JYsWh.s 			page 168


 5051 00a8 1421     		.short	8468
 5052 00aa 2F21     		.short	8495
 5053 00ac 3021     		.short	8496
 5054 00ae 3421     		.short	8500
 5055 00b0 3521     		.short	8501
 5056 00b2 3921     		.short	8505
 5057 00b4 3A21     		.short	8506
 5058 00b6 3C21     		.short	8508
 5059 00b8 3D21     		.short	8509
 5060 00ba 4621     		.short	8518
 5061 00bc 4A21     		.short	8522
 5062 00be 742C     		.short	11380
 5063 00c0 752C     		.short	11381
 5064 00c2 772C     		.short	11383
 5065 00c4 7E2C     		.short	11390
 5066 00c6 E42C     		.short	11492
 5067 00c8 E52C     		.short	11493
 5068 00ca 30A7     		.short	-22736
 5069 00cc 32A7     		.short	-22734
 5070 00ce 70A7     		.short	-22672
 5071 00d0 79A7     		.short	-22663
 5072 00d2 00FB     		.short	-1280
 5073 00d4 07FB     		.short	-1273
 5074 00d6 13FB     		.short	-1261
 5075 00d8 18FB     		.short	-1256
 5076 00da 41FF     		.short	-191
 5077 00dc 5BFF     		.short	-165
 5078 00de FFFF     		.short	-1
 5079              		.section	.rodata.WC_CharToCasefoldTbl,"a"
 5080              		.align	2
 5081              		.set	.LANCHOR4,. + 0
 5084              	WC_CharToCasefoldTbl:
 5085 0000 0000     		.short	0
 5086 0002 0000     		.short	0
 5087 0004 B500     		.short	181
 5088 0006 0703     		.short	775
 5089 0008 B600     		.short	182
 5090 000a 0000     		.short	0
 5091 000c 7F01     		.short	383
 5092 000e F4FE     		.short	-268
 5093 0010 8001     		.short	384
 5094 0012 0000     		.short	0
 5095 0014 4503     		.short	837
 5096 0016 7400     		.short	116
 5097 0018 4603     		.short	838
 5098 001a 0000     		.short	0
 5099 001c C203     		.short	962
 5100 001e 0100     		.short	1
 5101 0020 C303     		.short	963
 5102 0022 0000     		.short	0
 5103 0024 D103     		.short	977
 5104 0026 E7FF     		.short	-25
 5105 0028 D203     		.short	978
 5106 002a 0000     		.short	0
 5107 002c D503     		.short	981
 5108 002e F1FF     		.short	-15
 5109 0030 D603     		.short	982
ARM GAS  /tmp/cc4JYsWh.s 			page 169


 5110 0032 EAFF     		.short	-22
 5111 0034 D703     		.short	983
 5112 0036 0000     		.short	0
 5113 0038 F003     		.short	1008
 5114 003a CAFF     		.short	-54
 5115 003c F103     		.short	1009
 5116 003e D0FF     		.short	-48
 5117 0040 F203     		.short	1010
 5118 0042 0000     		.short	0
 5119 0044 F503     		.short	1013
 5120 0046 C0FF     		.short	-64
 5121 0048 F603     		.short	1014
 5122 004a 0000     		.short	0
 5123 004c 9B1E     		.short	7835
 5124 004e C6FF     		.short	-58
 5125 0050 9C1E     		.short	7836
 5126 0052 0000     		.short	0
 5127 0054 BF1F     		.short	8127
 5128 0056 0000     		.short	0
 5129 0058 FFFF     		.short	-1
 5130 005a 0000     		.short	0
 5131              		.section	.rodata.WC_CharToLowerTbl,"a"
 5132              		.align	2
 5133              		.set	.LANCHOR1,. + 0
 5136              	WC_CharToLowerTbl:
 5137 0000 0000     		.short	0
 5138 0002 0000     		.short	0
 5139 0004 4100     		.short	65
 5140 0006 2000     		.short	32
 5141 0008 5B00     		.short	91
 5142 000a 0000     		.short	0
 5143 000c C000     		.short	192
 5144 000e 2000     		.short	32
 5145 0010 D700     		.short	215
 5146 0012 0000     		.short	0
 5147 0014 D800     		.short	216
 5148 0016 2000     		.short	32
 5149 0018 DF00     		.short	223
 5150 001a 0000     		.short	0
 5151 001c 0001     		.short	256
 5152 001e FF7F     		.short	32767
 5153 0020 2F01     		.short	303
 5154 0022 0000     		.short	0
 5155 0024 3001     		.short	304
 5156 0026 39FF     		.short	-199
 5157 0028 3101     		.short	305
 5158 002a 0000     		.short	0
 5159 002c 3201     		.short	306
 5160 002e FF7F     		.short	32767
 5161 0030 3701     		.short	311
 5162 0032 0000     		.short	0
 5163 0034 3901     		.short	313
 5164 0036 FF7F     		.short	32767
 5165 0038 4801     		.short	328
 5166 003a 0000     		.short	0
 5167 003c 4A01     		.short	330
 5168 003e FF7F     		.short	32767
ARM GAS  /tmp/cc4JYsWh.s 			page 170


 5169 0040 7701     		.short	375
 5170 0042 0000     		.short	0
 5171 0044 7801     		.short	376
 5172 0046 87FF     		.short	-121
 5173 0048 7901     		.short	377
 5174 004a FF7F     		.short	32767
 5175 004c 7E01     		.short	382
 5176 004e 0000     		.short	0
 5177 0050 8101     		.short	385
 5178 0052 D200     		.short	210
 5179 0054 8201     		.short	386
 5180 0056 FF7F     		.short	32767
 5181 0058 8501     		.short	389
 5182 005a 0000     		.short	0
 5183 005c 8601     		.short	390
 5184 005e CE00     		.short	206
 5185 0060 8701     		.short	391
 5186 0062 0100     		.short	1
 5187 0064 8801     		.short	392
 5188 0066 0000     		.short	0
 5189 0068 8901     		.short	393
 5190 006a CD00     		.short	205
 5191 006c 8B01     		.short	395
 5192 006e 0100     		.short	1
 5193 0070 8C01     		.short	396
 5194 0072 0000     		.short	0
 5195 0074 8E01     		.short	398
 5196 0076 4F00     		.short	79
 5197 0078 8F01     		.short	399
 5198 007a CA00     		.short	202
 5199 007c 9001     		.short	400
 5200 007e CB00     		.short	203
 5201 0080 9101     		.short	401
 5202 0082 0100     		.short	1
 5203 0084 9201     		.short	402
 5204 0086 0000     		.short	0
 5205 0088 9301     		.short	403
 5206 008a CD00     		.short	205
 5207 008c 9401     		.short	404
 5208 008e CF00     		.short	207
 5209 0090 9501     		.short	405
 5210 0092 0000     		.short	0
 5211 0094 9601     		.short	406
 5212 0096 D300     		.short	211
 5213 0098 9701     		.short	407
 5214 009a D100     		.short	209
 5215 009c 9801     		.short	408
 5216 009e 0100     		.short	1
 5217 00a0 9901     		.short	409
 5218 00a2 0000     		.short	0
 5219 00a4 9C01     		.short	412
 5220 00a6 D300     		.short	211
 5221 00a8 9D01     		.short	413
 5222 00aa D500     		.short	213
 5223 00ac 9E01     		.short	414
 5224 00ae 0000     		.short	0
 5225 00b0 9F01     		.short	415
ARM GAS  /tmp/cc4JYsWh.s 			page 171


 5226 00b2 D600     		.short	214
 5227 00b4 A001     		.short	416
 5228 00b6 FF7F     		.short	32767
 5229 00b8 A501     		.short	421
 5230 00ba 0000     		.short	0
 5231 00bc A601     		.short	422
 5232 00be DA00     		.short	218
 5233 00c0 A701     		.short	423
 5234 00c2 0100     		.short	1
 5235 00c4 A801     		.short	424
 5236 00c6 0000     		.short	0
 5237 00c8 A901     		.short	425
 5238 00ca DA00     		.short	218
 5239 00cc AA01     		.short	426
 5240 00ce 0000     		.short	0
 5241 00d0 AC01     		.short	428
 5242 00d2 0100     		.short	1
 5243 00d4 AD01     		.short	429
 5244 00d6 0000     		.short	0
 5245 00d8 AE01     		.short	430
 5246 00da DA00     		.short	218
 5247 00dc AF01     		.short	431
 5248 00de 0100     		.short	1
 5249 00e0 B001     		.short	432
 5250 00e2 0000     		.short	0
 5251 00e4 B101     		.short	433
 5252 00e6 D900     		.short	217
 5253 00e8 B301     		.short	435
 5254 00ea FF7F     		.short	32767
 5255 00ec B601     		.short	438
 5256 00ee 0000     		.short	0
 5257 00f0 B701     		.short	439
 5258 00f2 DB00     		.short	219
 5259 00f4 B801     		.short	440
 5260 00f6 0100     		.short	1
 5261 00f8 B901     		.short	441
 5262 00fa 0000     		.short	0
 5263 00fc BC01     		.short	444
 5264 00fe 0100     		.short	1
 5265 0100 BD01     		.short	445
 5266 0102 0000     		.short	0
 5267 0104 C401     		.short	452
 5268 0106 0200     		.short	2
 5269 0108 C501     		.short	453
 5270 010a 0100     		.short	1
 5271 010c C601     		.short	454
 5272 010e 0000     		.short	0
 5273 0110 C701     		.short	455
 5274 0112 0200     		.short	2
 5275 0114 C801     		.short	456
 5276 0116 0100     		.short	1
 5277 0118 C901     		.short	457
 5278 011a 0000     		.short	0
 5279 011c CA01     		.short	458
 5280 011e 0200     		.short	2
 5281 0120 CB01     		.short	459
 5282 0122 FF7F     		.short	32767
ARM GAS  /tmp/cc4JYsWh.s 			page 172


 5283 0124 DC01     		.short	476
 5284 0126 0000     		.short	0
 5285 0128 DE01     		.short	478
 5286 012a FF7F     		.short	32767
 5287 012c EF01     		.short	495
 5288 012e 0000     		.short	0
 5289 0130 F101     		.short	497
 5290 0132 0200     		.short	2
 5291 0134 F201     		.short	498
 5292 0136 FF7F     		.short	32767
 5293 0138 F501     		.short	501
 5294 013a 0000     		.short	0
 5295 013c F601     		.short	502
 5296 013e 9FFF     		.short	-97
 5297 0140 F701     		.short	503
 5298 0142 C8FF     		.short	-56
 5299 0144 F801     		.short	504
 5300 0146 FF7F     		.short	32767
 5301 0148 1F02     		.short	543
 5302 014a 0000     		.short	0
 5303 014c 2002     		.short	544
 5304 014e 7EFF     		.short	-130
 5305 0150 2102     		.short	545
 5306 0152 0000     		.short	0
 5307 0154 2202     		.short	546
 5308 0156 FF7F     		.short	32767
 5309 0158 3302     		.short	563
 5310 015a 0000     		.short	0
 5311 015c 3A02     		.short	570
 5312 015e 2B2A     		.short	10795
 5313 0160 3B02     		.short	571
 5314 0162 0100     		.short	1
 5315 0164 3C02     		.short	572
 5316 0166 0000     		.short	0
 5317 0168 3D02     		.short	573
 5318 016a 5DFF     		.short	-163
 5319 016c 3E02     		.short	574
 5320 016e 282A     		.short	10792
 5321 0170 3F02     		.short	575
 5322 0172 0000     		.short	0
 5323 0174 4102     		.short	577
 5324 0176 0100     		.short	1
 5325 0178 4202     		.short	578
 5326 017a 0000     		.short	0
 5327 017c 4302     		.short	579
 5328 017e 3DFF     		.short	-195
 5329 0180 4402     		.short	580
 5330 0182 4500     		.short	69
 5331 0184 4502     		.short	581
 5332 0186 4700     		.short	71
 5333 0188 4602     		.short	582
 5334 018a FF7F     		.short	32767
 5335 018c 4F02     		.short	591
 5336 018e 0000     		.short	0
 5337 0190 7003     		.short	880
 5338 0192 FF7F     		.short	32767
 5339 0194 7303     		.short	883
ARM GAS  /tmp/cc4JYsWh.s 			page 173


 5340 0196 0000     		.short	0
 5341 0198 7603     		.short	886
 5342 019a 0100     		.short	1
 5343 019c 7703     		.short	887
 5344 019e 0000     		.short	0
 5345 01a0 8603     		.short	902
 5346 01a2 2600     		.short	38
 5347 01a4 8703     		.short	903
 5348 01a6 0000     		.short	0
 5349 01a8 8803     		.short	904
 5350 01aa 2500     		.short	37
 5351 01ac 8B03     		.short	907
 5352 01ae 0000     		.short	0
 5353 01b0 8C03     		.short	908
 5354 01b2 4000     		.short	64
 5355 01b4 8D03     		.short	909
 5356 01b6 0000     		.short	0
 5357 01b8 8E03     		.short	910
 5358 01ba 3F00     		.short	63
 5359 01bc 9003     		.short	912
 5360 01be 0000     		.short	0
 5361 01c0 9103     		.short	913
 5362 01c2 2000     		.short	32
 5363 01c4 A203     		.short	930
 5364 01c6 0000     		.short	0
 5365 01c8 A303     		.short	931
 5366 01ca 2000     		.short	32
 5367 01cc AC03     		.short	940
 5368 01ce 0000     		.short	0
 5369 01d0 CF03     		.short	975
 5370 01d2 0800     		.short	8
 5371 01d4 D003     		.short	976
 5372 01d6 0000     		.short	0
 5373 01d8 D803     		.short	984
 5374 01da FF7F     		.short	32767
 5375 01dc EF03     		.short	1007
 5376 01de 0000     		.short	0
 5377 01e0 F403     		.short	1012
 5378 01e2 C4FF     		.short	-60
 5379 01e4 F503     		.short	1013
 5380 01e6 0000     		.short	0
 5381 01e8 F703     		.short	1015
 5382 01ea 0100     		.short	1
 5383 01ec F803     		.short	1016
 5384 01ee 0000     		.short	0
 5385 01f0 F903     		.short	1017
 5386 01f2 F9FF     		.short	-7
 5387 01f4 FA03     		.short	1018
 5388 01f6 0100     		.short	1
 5389 01f8 FB03     		.short	1019
 5390 01fa 0000     		.short	0
 5391 01fc FD03     		.short	1021
 5392 01fe 7EFF     		.short	-130
 5393 0200 0004     		.short	1024
 5394 0202 5000     		.short	80
 5395 0204 1004     		.short	1040
 5396 0206 2000     		.short	32
ARM GAS  /tmp/cc4JYsWh.s 			page 174


 5397 0208 3004     		.short	1072
 5398 020a 0000     		.short	0
 5399 020c 6004     		.short	1120
 5400 020e FF7F     		.short	32767
 5401 0210 8104     		.short	1153
 5402 0212 0000     		.short	0
 5403 0214 8A04     		.short	1162
 5404 0216 FF7F     		.short	32767
 5405 0218 BF04     		.short	1215
 5406 021a 0000     		.short	0
 5407 021c C004     		.short	1216
 5408 021e 0F00     		.short	15
 5409 0220 C104     		.short	1217
 5410 0222 FF7F     		.short	32767
 5411 0224 CE04     		.short	1230
 5412 0226 0000     		.short	0
 5413 0228 D004     		.short	1232
 5414 022a FF7F     		.short	32767
 5415 022c 2305     		.short	1315
 5416 022e 0000     		.short	0
 5417 0230 3105     		.short	1329
 5418 0232 3000     		.short	48
 5419 0234 5705     		.short	1367
 5420 0236 0000     		.short	0
 5421 0238 A010     		.short	4256
 5422 023a 601C     		.short	7264
 5423 023c C610     		.short	4294
 5424 023e 0000     		.short	0
 5425 0240 001E     		.short	7680
 5426 0242 FF7F     		.short	32767
 5427 0244 951E     		.short	7829
 5428 0246 0000     		.short	0
 5429 0248 9E1E     		.short	7838
 5430 024a 41E2     		.short	-7615
 5431 024c 9F1E     		.short	7839
 5432 024e 0000     		.short	0
 5433 0250 A01E     		.short	7840
 5434 0252 FF7F     		.short	32767
 5435 0254 FF1E     		.short	7935
 5436 0256 0000     		.short	0
 5437 0258 081F     		.short	7944
 5438 025a F8FF     		.short	-8
 5439 025c 101F     		.short	7952
 5440 025e 0000     		.short	0
 5441 0260 181F     		.short	7960
 5442 0262 F8FF     		.short	-8
 5443 0264 1E1F     		.short	7966
 5444 0266 0000     		.short	0
 5445 0268 281F     		.short	7976
 5446 026a F8FF     		.short	-8
 5447 026c 301F     		.short	7984
 5448 026e 0000     		.short	0
 5449 0270 381F     		.short	7992
 5450 0272 F8FF     		.short	-8
 5451 0274 401F     		.short	8000
 5452 0276 0000     		.short	0
 5453 0278 481F     		.short	8008
ARM GAS  /tmp/cc4JYsWh.s 			page 175


 5454 027a F8FF     		.short	-8
 5455 027c 4E1F     		.short	8014
 5456 027e 0000     		.short	0
 5457 0280 591F     		.short	8025
 5458 0282 F8FF     		.short	-8
 5459 0284 5A1F     		.short	8026
 5460 0286 0000     		.short	0
 5461 0288 5B1F     		.short	8027
 5462 028a F8FF     		.short	-8
 5463 028c 5C1F     		.short	8028
 5464 028e 0000     		.short	0
 5465 0290 5D1F     		.short	8029
 5466 0292 F8FF     		.short	-8
 5467 0294 5E1F     		.short	8030
 5468 0296 0000     		.short	0
 5469 0298 5F1F     		.short	8031
 5470 029a F8FF     		.short	-8
 5471 029c 601F     		.short	8032
 5472 029e 0000     		.short	0
 5473 02a0 681F     		.short	8040
 5474 02a2 F8FF     		.short	-8
 5475 02a4 701F     		.short	8048
 5476 02a6 0000     		.short	0
 5477 02a8 881F     		.short	8072
 5478 02aa F8FF     		.short	-8
 5479 02ac 901F     		.short	8080
 5480 02ae 0000     		.short	0
 5481 02b0 981F     		.short	8088
 5482 02b2 F8FF     		.short	-8
 5483 02b4 A01F     		.short	8096
 5484 02b6 0000     		.short	0
 5485 02b8 A81F     		.short	8104
 5486 02ba F8FF     		.short	-8
 5487 02bc B01F     		.short	8112
 5488 02be 0000     		.short	0
 5489 02c0 B81F     		.short	8120
 5490 02c2 F8FF     		.short	-8
 5491 02c4 BA1F     		.short	8122
 5492 02c6 B6FF     		.short	-74
 5493 02c8 BC1F     		.short	8124
 5494 02ca F7FF     		.short	-9
 5495 02cc BD1F     		.short	8125
 5496 02ce 0000     		.short	0
 5497 02d0 C81F     		.short	8136
 5498 02d2 AAFF     		.short	-86
 5499 02d4 CC1F     		.short	8140
 5500 02d6 F7FF     		.short	-9
 5501 02d8 CD1F     		.short	8141
 5502 02da 0000     		.short	0
 5503 02dc D81F     		.short	8152
 5504 02de F8FF     		.short	-8
 5505 02e0 DA1F     		.short	8154
 5506 02e2 9CFF     		.short	-100
 5507 02e4 DC1F     		.short	8156
 5508 02e6 0000     		.short	0
 5509 02e8 E81F     		.short	8168
 5510 02ea F8FF     		.short	-8
ARM GAS  /tmp/cc4JYsWh.s 			page 176


 5511 02ec EA1F     		.short	8170
 5512 02ee 90FF     		.short	-112
 5513 02f0 EC1F     		.short	8172
 5514 02f2 F9FF     		.short	-7
 5515 02f4 ED1F     		.short	8173
 5516 02f6 0000     		.short	0
 5517 02f8 F81F     		.short	8184
 5518 02fa 80FF     		.short	-128
 5519 02fc FA1F     		.short	8186
 5520 02fe 82FF     		.short	-126
 5521 0300 FC1F     		.short	8188
 5522 0302 F7FF     		.short	-9
 5523 0304 FD1F     		.short	8189
 5524 0306 0000     		.short	0
 5525 0308 2621     		.short	8486
 5526 030a A3E2     		.short	-7517
 5527 030c 2721     		.short	8487
 5528 030e 0000     		.short	0
 5529 0310 2A21     		.short	8490
 5530 0312 41DF     		.short	-8383
 5531 0314 2B21     		.short	8491
 5532 0316 BADF     		.short	-8262
 5533 0318 2C21     		.short	8492
 5534 031a 0000     		.short	0
 5535 031c 3221     		.short	8498
 5536 031e 1C00     		.short	28
 5537 0320 3321     		.short	8499
 5538 0322 0000     		.short	0
 5539 0324 6021     		.short	8544
 5540 0326 1000     		.short	16
 5541 0328 7021     		.short	8560
 5542 032a 0000     		.short	0
 5543 032c 8321     		.short	8579
 5544 032e 0100     		.short	1
 5545 0330 8421     		.short	8580
 5546 0332 0000     		.short	0
 5547 0334 B624     		.short	9398
 5548 0336 1A00     		.short	26
 5549 0338 D024     		.short	9424
 5550 033a 0000     		.short	0
 5551 033c 002C     		.short	11264
 5552 033e 3000     		.short	48
 5553 0340 2F2C     		.short	11311
 5554 0342 0000     		.short	0
 5555 0344 602C     		.short	11360
 5556 0346 0100     		.short	1
 5557 0348 612C     		.short	11361
 5558 034a 0000     		.short	0
 5559 034c 622C     		.short	11362
 5560 034e 09D6     		.short	-10743
 5561 0350 632C     		.short	11363
 5562 0352 1AF1     		.short	-3814
 5563 0354 642C     		.short	11364
 5564 0356 19D6     		.short	-10727
 5565 0358 652C     		.short	11365
 5566 035a 0000     		.short	0
 5567 035c 672C     		.short	11367
ARM GAS  /tmp/cc4JYsWh.s 			page 177


 5568 035e FF7F     		.short	32767
 5569 0360 6C2C     		.short	11372
 5570 0362 0000     		.short	0
 5571 0364 6D2C     		.short	11373
 5572 0366 E4D5     		.short	-10780
 5573 0368 6E2C     		.short	11374
 5574 036a 03D6     		.short	-10749
 5575 036c 6F2C     		.short	11375
 5576 036e E1D5     		.short	-10783
 5577 0370 702C     		.short	11376
 5578 0372 0000     		.short	0
 5579 0374 722C     		.short	11378
 5580 0376 0100     		.short	1
 5581 0378 732C     		.short	11379
 5582 037a 0000     		.short	0
 5583 037c 752C     		.short	11381
 5584 037e 0100     		.short	1
 5585 0380 762C     		.short	11382
 5586 0382 0000     		.short	0
 5587 0384 802C     		.short	11392
 5588 0386 FF7F     		.short	32767
 5589 0388 E32C     		.short	11491
 5590 038a 0000     		.short	0
 5591 038c 40A6     		.short	-22976
 5592 038e FF7F     		.short	32767
 5593 0390 5FA6     		.short	-22945
 5594 0392 0000     		.short	0
 5595 0394 62A6     		.short	-22942
 5596 0396 FF7F     		.short	32767
 5597 0398 6DA6     		.short	-22931
 5598 039a 0000     		.short	0
 5599 039c 80A6     		.short	-22912
 5600 039e FF7F     		.short	32767
 5601 03a0 97A6     		.short	-22889
 5602 03a2 0000     		.short	0
 5603 03a4 22A7     		.short	-22750
 5604 03a6 FF7F     		.short	32767
 5605 03a8 2FA7     		.short	-22737
 5606 03aa 0000     		.short	0
 5607 03ac 32A7     		.short	-22734
 5608 03ae FF7F     		.short	32767
 5609 03b0 6FA7     		.short	-22673
 5610 03b2 0000     		.short	0
 5611 03b4 79A7     		.short	-22663
 5612 03b6 FF7F     		.short	32767
 5613 03b8 7CA7     		.short	-22660
 5614 03ba 0000     		.short	0
 5615 03bc 7DA7     		.short	-22659
 5616 03be FE7F     		.short	32766
 5617 03c0 7EA7     		.short	-22658
 5618 03c2 FF7F     		.short	32767
 5619 03c4 87A7     		.short	-22649
 5620 03c6 0000     		.short	0
 5621 03c8 8BA7     		.short	-22645
 5622 03ca 0100     		.short	1
 5623 03cc 8CA7     		.short	-22644
 5624 03ce 0000     		.short	0
ARM GAS  /tmp/cc4JYsWh.s 			page 178


 5625 03d0 21FF     		.short	-223
 5626 03d2 2000     		.short	32
 5627 03d4 3BFF     		.short	-197
 5628 03d6 0000     		.short	0
 5629 03d8 FFFF     		.short	-1
 5630 03da 0000     		.short	0
 5631              		.section	.rodata.WC_CharToUpperTbl,"a"
 5632              		.align	2
 5633              		.set	.LANCHOR2,. + 0
 5636              	WC_CharToUpperTbl:
 5637 0000 0000     		.short	0
 5638 0002 0000     		.short	0
 5639 0004 6100     		.short	97
 5640 0006 E0FF     		.short	-32
 5641 0008 7B00     		.short	123
 5642 000a 0000     		.short	0
 5643 000c B500     		.short	181
 5644 000e E702     		.short	743
 5645 0010 B600     		.short	182
 5646 0012 0000     		.short	0
 5647 0014 E000     		.short	224
 5648 0016 E0FF     		.short	-32
 5649 0018 F700     		.short	247
 5650 001a 0000     		.short	0
 5651 001c F800     		.short	248
 5652 001e E0FF     		.short	-32
 5653 0020 FF00     		.short	255
 5654 0022 7900     		.short	121
 5655 0024 0001     		.short	256
 5656 0026 0000     		.short	0
 5657 0028 0101     		.short	257
 5658 002a FF7F     		.short	32767
 5659 002c 3001     		.short	304
 5660 002e 0000     		.short	0
 5661 0030 3101     		.short	305
 5662 0032 18FF     		.short	-232
 5663 0034 3201     		.short	306
 5664 0036 0000     		.short	0
 5665 0038 3301     		.short	307
 5666 003a FF7F     		.short	32767
 5667 003c 3801     		.short	312
 5668 003e 0000     		.short	0
 5669 0040 3A01     		.short	314
 5670 0042 FF7F     		.short	32767
 5671 0044 4901     		.short	329
 5672 0046 0000     		.short	0
 5673 0048 4B01     		.short	331
 5674 004a FF7F     		.short	32767
 5675 004c 7801     		.short	376
 5676 004e 0000     		.short	0
 5677 0050 7A01     		.short	378
 5678 0052 FF7F     		.short	32767
 5679 0054 7F01     		.short	383
 5680 0056 D4FE     		.short	-300
 5681 0058 8001     		.short	384
 5682 005a C300     		.short	195
 5683 005c 8101     		.short	385
ARM GAS  /tmp/cc4JYsWh.s 			page 179


 5684 005e 0000     		.short	0
 5685 0060 8301     		.short	387
 5686 0062 FF7F     		.short	32767
 5687 0064 8601     		.short	390
 5688 0066 0000     		.short	0
 5689 0068 8801     		.short	392
 5690 006a FFFF     		.short	-1
 5691 006c 8901     		.short	393
 5692 006e 0000     		.short	0
 5693 0070 8C01     		.short	396
 5694 0072 FFFF     		.short	-1
 5695 0074 8D01     		.short	397
 5696 0076 0000     		.short	0
 5697 0078 9201     		.short	402
 5698 007a FFFF     		.short	-1
 5699 007c 9301     		.short	403
 5700 007e 0000     		.short	0
 5701 0080 9501     		.short	405
 5702 0082 6100     		.short	97
 5703 0084 9601     		.short	406
 5704 0086 0000     		.short	0
 5705 0088 9901     		.short	409
 5706 008a FFFF     		.short	-1
 5707 008c 9A01     		.short	410
 5708 008e A300     		.short	163
 5709 0090 9B01     		.short	411
 5710 0092 0000     		.short	0
 5711 0094 9E01     		.short	414
 5712 0096 8200     		.short	130
 5713 0098 9F01     		.short	415
 5714 009a 0000     		.short	0
 5715 009c A101     		.short	417
 5716 009e FF7F     		.short	32767
 5717 00a0 A601     		.short	422
 5718 00a2 0000     		.short	0
 5719 00a4 A801     		.short	424
 5720 00a6 FFFF     		.short	-1
 5721 00a8 A901     		.short	425
 5722 00aa 0000     		.short	0
 5723 00ac AD01     		.short	429
 5724 00ae FFFF     		.short	-1
 5725 00b0 AE01     		.short	430
 5726 00b2 0000     		.short	0
 5727 00b4 B001     		.short	432
 5728 00b6 FFFF     		.short	-1
 5729 00b8 B101     		.short	433
 5730 00ba 0000     		.short	0
 5731 00bc B401     		.short	436
 5732 00be FF7F     		.short	32767
 5733 00c0 B701     		.short	439
 5734 00c2 0000     		.short	0
 5735 00c4 B901     		.short	441
 5736 00c6 FFFF     		.short	-1
 5737 00c8 BA01     		.short	442
 5738 00ca 0000     		.short	0
 5739 00cc BD01     		.short	445
 5740 00ce FFFF     		.short	-1
ARM GAS  /tmp/cc4JYsWh.s 			page 180


 5741 00d0 BE01     		.short	446
 5742 00d2 0000     		.short	0
 5743 00d4 BF01     		.short	447
 5744 00d6 3800     		.short	56
 5745 00d8 C001     		.short	448
 5746 00da 0000     		.short	0
 5747 00dc C501     		.short	453
 5748 00de FFFF     		.short	-1
 5749 00e0 C601     		.short	454
 5750 00e2 FEFF     		.short	-2
 5751 00e4 C701     		.short	455
 5752 00e6 0000     		.short	0
 5753 00e8 C801     		.short	456
 5754 00ea FFFF     		.short	-1
 5755 00ec C901     		.short	457
 5756 00ee FEFF     		.short	-2
 5757 00f0 CA01     		.short	458
 5758 00f2 0000     		.short	0
 5759 00f4 CB01     		.short	459
 5760 00f6 FFFF     		.short	-1
 5761 00f8 CC01     		.short	460
 5762 00fa FEFF     		.short	-2
 5763 00fc CD01     		.short	461
 5764 00fe 0000     		.short	0
 5765 0100 CE01     		.short	462
 5766 0102 FF7F     		.short	32767
 5767 0104 DD01     		.short	477
 5768 0106 B1FF     		.short	-79
 5769 0108 DE01     		.short	478
 5770 010a 0000     		.short	0
 5771 010c DF01     		.short	479
 5772 010e FF7F     		.short	32767
 5773 0110 F001     		.short	496
 5774 0112 0000     		.short	0
 5775 0114 F201     		.short	498
 5776 0116 FFFF     		.short	-1
 5777 0118 F301     		.short	499
 5778 011a FEFF     		.short	-2
 5779 011c F401     		.short	500
 5780 011e 0000     		.short	0
 5781 0120 F501     		.short	501
 5782 0122 FFFF     		.short	-1
 5783 0124 F601     		.short	502
 5784 0126 0000     		.short	0
 5785 0128 F901     		.short	505
 5786 012a FF7F     		.short	32767
 5787 012c 2002     		.short	544
 5788 012e 0000     		.short	0
 5789 0130 2302     		.short	547
 5790 0132 FF7F     		.short	32767
 5791 0134 3402     		.short	564
 5792 0136 0000     		.short	0
 5793 0138 3C02     		.short	572
 5794 013a FFFF     		.short	-1
 5795 013c 3D02     		.short	573
 5796 013e 0000     		.short	0
 5797 0140 4202     		.short	578
ARM GAS  /tmp/cc4JYsWh.s 			page 181


 5798 0142 FFFF     		.short	-1
 5799 0144 4302     		.short	579
 5800 0146 0000     		.short	0
 5801 0148 4702     		.short	583
 5802 014a FF7F     		.short	32767
 5803 014c 5002     		.short	592
 5804 014e 1F2A     		.short	10783
 5805 0150 5102     		.short	593
 5806 0152 1C2A     		.short	10780
 5807 0154 5202     		.short	594
 5808 0156 0000     		.short	0
 5809 0158 5302     		.short	595
 5810 015a 2EFF     		.short	-210
 5811 015c 5402     		.short	596
 5812 015e 32FF     		.short	-206
 5813 0160 5502     		.short	597
 5814 0162 0000     		.short	0
 5815 0164 5602     		.short	598
 5816 0166 33FF     		.short	-205
 5817 0168 5802     		.short	600
 5818 016a 0000     		.short	0
 5819 016c 5902     		.short	601
 5820 016e 36FF     		.short	-202
 5821 0170 5A02     		.short	602
 5822 0172 0000     		.short	0
 5823 0174 5B02     		.short	603
 5824 0176 35FF     		.short	-203
 5825 0178 5C02     		.short	604
 5826 017a 0000     		.short	0
 5827 017c 6002     		.short	608
 5828 017e 33FF     		.short	-205
 5829 0180 6102     		.short	609
 5830 0182 0000     		.short	0
 5831 0184 6302     		.short	611
 5832 0186 31FF     		.short	-207
 5833 0188 6402     		.short	612
 5834 018a 0000     		.short	0
 5835 018c 6802     		.short	616
 5836 018e 2FFF     		.short	-209
 5837 0190 6902     		.short	617
 5838 0192 2DFF     		.short	-211
 5839 0194 6A02     		.short	618
 5840 0196 0000     		.short	0
 5841 0198 6B02     		.short	619
 5842 019a F729     		.short	10743
 5843 019c 6C02     		.short	620
 5844 019e 0000     		.short	0
 5845 01a0 6F02     		.short	623
 5846 01a2 2DFF     		.short	-211
 5847 01a4 7002     		.short	624
 5848 01a6 0000     		.short	0
 5849 01a8 7102     		.short	625
 5850 01aa FD29     		.short	10749
 5851 01ac 7202     		.short	626
 5852 01ae 2BFF     		.short	-213
 5853 01b0 7302     		.short	627
 5854 01b2 0000     		.short	0
ARM GAS  /tmp/cc4JYsWh.s 			page 182


 5855 01b4 7502     		.short	629
 5856 01b6 2AFF     		.short	-214
 5857 01b8 7602     		.short	630
 5858 01ba 0000     		.short	0
 5859 01bc 7D02     		.short	637
 5860 01be E729     		.short	10727
 5861 01c0 7E02     		.short	638
 5862 01c2 0000     		.short	0
 5863 01c4 8002     		.short	640
 5864 01c6 26FF     		.short	-218
 5865 01c8 8102     		.short	641
 5866 01ca 0000     		.short	0
 5867 01cc 8302     		.short	643
 5868 01ce 26FF     		.short	-218
 5869 01d0 8402     		.short	644
 5870 01d2 0000     		.short	0
 5871 01d4 8802     		.short	648
 5872 01d6 26FF     		.short	-218
 5873 01d8 8902     		.short	649
 5874 01da BBFF     		.short	-69
 5875 01dc 8A02     		.short	650
 5876 01de 27FF     		.short	-217
 5877 01e0 8C02     		.short	652
 5878 01e2 B9FF     		.short	-71
 5879 01e4 8D02     		.short	653
 5880 01e6 0000     		.short	0
 5881 01e8 9202     		.short	658
 5882 01ea 25FF     		.short	-219
 5883 01ec 9302     		.short	659
 5884 01ee 0000     		.short	0
 5885 01f0 4503     		.short	837
 5886 01f2 5400     		.short	84
 5887 01f4 4603     		.short	838
 5888 01f6 0000     		.short	0
 5889 01f8 7103     		.short	881
 5890 01fa FF7F     		.short	32767
 5891 01fc 7403     		.short	884
 5892 01fe 0000     		.short	0
 5893 0200 7703     		.short	887
 5894 0202 FFFF     		.short	-1
 5895 0204 7803     		.short	888
 5896 0206 0000     		.short	0
 5897 0208 7B03     		.short	891
 5898 020a 8200     		.short	130
 5899 020c 7E03     		.short	894
 5900 020e 0000     		.short	0
 5901 0210 AC03     		.short	940
 5902 0212 DAFF     		.short	-38
 5903 0214 AD03     		.short	941
 5904 0216 DBFF     		.short	-37
 5905 0218 B003     		.short	944
 5906 021a 0000     		.short	0
 5907 021c B103     		.short	945
 5908 021e E0FF     		.short	-32
 5909 0220 C203     		.short	962
 5910 0222 E1FF     		.short	-31
 5911 0224 C303     		.short	963
ARM GAS  /tmp/cc4JYsWh.s 			page 183


 5912 0226 E0FF     		.short	-32
 5913 0228 CC03     		.short	972
 5914 022a C0FF     		.short	-64
 5915 022c CD03     		.short	973
 5916 022e C1FF     		.short	-63
 5917 0230 CF03     		.short	975
 5918 0232 0000     		.short	0
 5919 0234 D003     		.short	976
 5920 0236 C2FF     		.short	-62
 5921 0238 D103     		.short	977
 5922 023a C7FF     		.short	-57
 5923 023c D203     		.short	978
 5924 023e 0000     		.short	0
 5925 0240 D503     		.short	981
 5926 0242 D1FF     		.short	-47
 5927 0244 D603     		.short	982
 5928 0246 CAFF     		.short	-54
 5929 0248 D703     		.short	983
 5930 024a F8FF     		.short	-8
 5931 024c D803     		.short	984
 5932 024e 0000     		.short	0
 5933 0250 D903     		.short	985
 5934 0252 FF7F     		.short	32767
 5935 0254 F003     		.short	1008
 5936 0256 AAFF     		.short	-86
 5937 0258 F103     		.short	1009
 5938 025a B0FF     		.short	-80
 5939 025c F203     		.short	1010
 5940 025e 0700     		.short	7
 5941 0260 F303     		.short	1011
 5942 0262 0000     		.short	0
 5943 0264 F503     		.short	1013
 5944 0266 A0FF     		.short	-96
 5945 0268 F603     		.short	1014
 5946 026a 0000     		.short	0
 5947 026c F803     		.short	1016
 5948 026e FFFF     		.short	-1
 5949 0270 F903     		.short	1017
 5950 0272 0000     		.short	0
 5951 0274 FB03     		.short	1019
 5952 0276 FFFF     		.short	-1
 5953 0278 FC03     		.short	1020
 5954 027a 0000     		.short	0
 5955 027c 3004     		.short	1072
 5956 027e E0FF     		.short	-32
 5957 0280 5004     		.short	1104
 5958 0282 B0FF     		.short	-80
 5959 0284 6004     		.short	1120
 5960 0286 0000     		.short	0
 5961 0288 6104     		.short	1121
 5962 028a FF7F     		.short	32767
 5963 028c 8204     		.short	1154
 5964 028e 0000     		.short	0
 5965 0290 8B04     		.short	1163
 5966 0292 FF7F     		.short	32767
 5967 0294 C004     		.short	1216
 5968 0296 0000     		.short	0
ARM GAS  /tmp/cc4JYsWh.s 			page 184


 5969 0298 C204     		.short	1218
 5970 029a FF7F     		.short	32767
 5971 029c CF04     		.short	1231
 5972 029e F1FF     		.short	-15
 5973 02a0 D004     		.short	1232
 5974 02a2 0000     		.short	0
 5975 02a4 D104     		.short	1233
 5976 02a6 FF7F     		.short	32767
 5977 02a8 2405     		.short	1316
 5978 02aa 0000     		.short	0
 5979 02ac 6105     		.short	1377
 5980 02ae D0FF     		.short	-48
 5981 02b0 8705     		.short	1415
 5982 02b2 0000     		.short	0
 5983 02b4 791D     		.short	7545
 5984 02b6 FE7F     		.short	32766
 5985 02b8 7A1D     		.short	7546
 5986 02ba 0000     		.short	0
 5987 02bc 7D1D     		.short	7549
 5988 02be E60E     		.short	3814
 5989 02c0 7E1D     		.short	7550
 5990 02c2 0000     		.short	0
 5991 02c4 011E     		.short	7681
 5992 02c6 FF7F     		.short	32767
 5993 02c8 961E     		.short	7830
 5994 02ca 0000     		.short	0
 5995 02cc 9B1E     		.short	7835
 5996 02ce C5FF     		.short	-59
 5997 02d0 9C1E     		.short	7836
 5998 02d2 0000     		.short	0
 5999 02d4 A11E     		.short	7841
 6000 02d6 FF7F     		.short	32767
 6001 02d8 001F     		.short	7936
 6002 02da 0800     		.short	8
 6003 02dc 081F     		.short	7944
 6004 02de 0000     		.short	0
 6005 02e0 101F     		.short	7952
 6006 02e2 0800     		.short	8
 6007 02e4 161F     		.short	7958
 6008 02e6 0000     		.short	0
 6009 02e8 201F     		.short	7968
 6010 02ea 0800     		.short	8
 6011 02ec 281F     		.short	7976
 6012 02ee 0000     		.short	0
 6013 02f0 301F     		.short	7984
 6014 02f2 0800     		.short	8
 6015 02f4 381F     		.short	7992
 6016 02f6 0000     		.short	0
 6017 02f8 401F     		.short	8000
 6018 02fa 0800     		.short	8
 6019 02fc 461F     		.short	8006
 6020 02fe 0000     		.short	0
 6021 0300 511F     		.short	8017
 6022 0302 0800     		.short	8
 6023 0304 521F     		.short	8018
 6024 0306 0000     		.short	0
 6025 0308 531F     		.short	8019
ARM GAS  /tmp/cc4JYsWh.s 			page 185


 6026 030a 0800     		.short	8
 6027 030c 541F     		.short	8020
 6028 030e 0000     		.short	0
 6029 0310 551F     		.short	8021
 6030 0312 0800     		.short	8
 6031 0314 561F     		.short	8022
 6032 0316 0000     		.short	0
 6033 0318 571F     		.short	8023
 6034 031a 0800     		.short	8
 6035 031c 581F     		.short	8024
 6036 031e 0000     		.short	0
 6037 0320 601F     		.short	8032
 6038 0322 0800     		.short	8
 6039 0324 681F     		.short	8040
 6040 0326 0000     		.short	0
 6041 0328 701F     		.short	8048
 6042 032a 4A00     		.short	74
 6043 032c 721F     		.short	8050
 6044 032e 5600     		.short	86
 6045 0330 761F     		.short	8054
 6046 0332 6400     		.short	100
 6047 0334 781F     		.short	8056
 6048 0336 8000     		.short	128
 6049 0338 7A1F     		.short	8058
 6050 033a 7000     		.short	112
 6051 033c 7C1F     		.short	8060
 6052 033e 7E00     		.short	126
 6053 0340 7E1F     		.short	8062
 6054 0342 0000     		.short	0
 6055 0344 801F     		.short	8064
 6056 0346 0800     		.short	8
 6057 0348 881F     		.short	8072
 6058 034a 0000     		.short	0
 6059 034c 901F     		.short	8080
 6060 034e 0800     		.short	8
 6061 0350 981F     		.short	8088
 6062 0352 0000     		.short	0
 6063 0354 A01F     		.short	8096
 6064 0356 0800     		.short	8
 6065 0358 A81F     		.short	8104
 6066 035a 0000     		.short	0
 6067 035c B01F     		.short	8112
 6068 035e 0800     		.short	8
 6069 0360 B21F     		.short	8114
 6070 0362 0000     		.short	0
 6071 0364 B31F     		.short	8115
 6072 0366 0900     		.short	9
 6073 0368 B41F     		.short	8116
 6074 036a 0000     		.short	0
 6075 036c BE1F     		.short	8126
 6076 036e DBE3     		.short	-7205
 6077 0370 BF1F     		.short	8127
 6078 0372 0000     		.short	0
 6079 0374 C31F     		.short	8131
 6080 0376 0900     		.short	9
 6081 0378 C41F     		.short	8132
 6082 037a 0000     		.short	0
ARM GAS  /tmp/cc4JYsWh.s 			page 186


 6083 037c D01F     		.short	8144
 6084 037e 0800     		.short	8
 6085 0380 D21F     		.short	8146
 6086 0382 0000     		.short	0
 6087 0384 E01F     		.short	8160
 6088 0386 0800     		.short	8
 6089 0388 E21F     		.short	8162
 6090 038a 0000     		.short	0
 6091 038c E51F     		.short	8165
 6092 038e 0700     		.short	7
 6093 0390 E61F     		.short	8166
 6094 0392 0000     		.short	0
 6095 0394 F31F     		.short	8179
 6096 0396 0900     		.short	9
 6097 0398 F41F     		.short	8180
 6098 039a 0000     		.short	0
 6099 039c 4E21     		.short	8526
 6100 039e E4FF     		.short	-28
 6101 03a0 4F21     		.short	8527
 6102 03a2 0000     		.short	0
 6103 03a4 7021     		.short	8560
 6104 03a6 F0FF     		.short	-16
 6105 03a8 8021     		.short	8576
 6106 03aa 0000     		.short	0
 6107 03ac 8421     		.short	8580
 6108 03ae FFFF     		.short	-1
 6109 03b0 8521     		.short	8581
 6110 03b2 0000     		.short	0
 6111 03b4 D024     		.short	9424
 6112 03b6 E6FF     		.short	-26
 6113 03b8 EA24     		.short	9450
 6114 03ba 0000     		.short	0
 6115 03bc 302C     		.short	11312
 6116 03be D0FF     		.short	-48
 6117 03c0 5F2C     		.short	11359
 6118 03c2 0000     		.short	0
 6119 03c4 612C     		.short	11361
 6120 03c6 FFFF     		.short	-1
 6121 03c8 622C     		.short	11362
 6122 03ca 0000     		.short	0
 6123 03cc 652C     		.short	11365
 6124 03ce D5D5     		.short	-10795
 6125 03d0 662C     		.short	11366
 6126 03d2 D8D5     		.short	-10792
 6127 03d4 672C     		.short	11367
 6128 03d6 0000     		.short	0
 6129 03d8 682C     		.short	11368
 6130 03da FF7F     		.short	32767
 6131 03dc 6D2C     		.short	11373
 6132 03de 0000     		.short	0
 6133 03e0 732C     		.short	11379
 6134 03e2 FFFF     		.short	-1
 6135 03e4 742C     		.short	11380
 6136 03e6 0000     		.short	0
 6137 03e8 762C     		.short	11382
 6138 03ea FFFF     		.short	-1
 6139 03ec 772C     		.short	11383
ARM GAS  /tmp/cc4JYsWh.s 			page 187


 6140 03ee 0000     		.short	0
 6141 03f0 812C     		.short	11393
 6142 03f2 FF7F     		.short	32767
 6143 03f4 E42C     		.short	11492
 6144 03f6 0000     		.short	0
 6145 03f8 002D     		.short	11520
 6146 03fa A0E3     		.short	-7264
 6147 03fc 262D     		.short	11558
 6148 03fe 0000     		.short	0
 6149 0400 41A6     		.short	-22975
 6150 0402 FF7F     		.short	32767
 6151 0404 60A6     		.short	-22944
 6152 0406 0000     		.short	0
 6153 0408 63A6     		.short	-22941
 6154 040a FF7F     		.short	32767
 6155 040c 6EA6     		.short	-22930
 6156 040e 0000     		.short	0
 6157 0410 81A6     		.short	-22911
 6158 0412 FF7F     		.short	32767
 6159 0414 98A6     		.short	-22888
 6160 0416 0000     		.short	0
 6161 0418 23A7     		.short	-22749
 6162 041a FF7F     		.short	32767
 6163 041c 30A7     		.short	-22736
 6164 041e 0000     		.short	0
 6165 0420 33A7     		.short	-22733
 6166 0422 FF7F     		.short	32767
 6167 0424 70A7     		.short	-22672
 6168 0426 0000     		.short	0
 6169 0428 7AA7     		.short	-22662
 6170 042a FF7F     		.short	32767
 6171 042c 7DA7     		.short	-22659
 6172 042e 0000     		.short	0
 6173 0430 7FA7     		.short	-22657
 6174 0432 FF7F     		.short	32767
 6175 0434 88A7     		.short	-22648
 6176 0436 0000     		.short	0
 6177 0438 8CA7     		.short	-22644
 6178 043a FFFF     		.short	-1
 6179 043c 8DA7     		.short	-22643
 6180 043e 0000     		.short	0
 6181 0440 41FF     		.short	-191
 6182 0442 E0FF     		.short	-32
 6183 0444 5BFF     		.short	-165
 6184 0446 0000     		.short	0
 6185 0448 FFFF     		.short	-1
 6186 044a 0000     		.short	0
 6187              		.text
 6188              	.Letext0:
 6189              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 6190              		.file 3 "rtos/uC-FS/Source/fs_unicode.h"
ARM GAS  /tmp/cc4JYsWh.s 			page 188


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fs_unicode.c
     /tmp/cc4JYsWh.s:18     .text.WC_SrchTbl:0000000000000000 $t
     /tmp/cc4JYsWh.s:25     .text.WC_SrchTbl:0000000000000000 WC_SrchTbl
     /tmp/cc4JYsWh.s:147    .text.WC_StrLen_N:0000000000000000 $t
     /tmp/cc4JYsWh.s:154    .text.WC_StrLen_N:0000000000000000 WC_StrLen_N
     /tmp/cc4JYsWh.s:200    .text.WC_StrLen:0000000000000000 $t
     /tmp/cc4JYsWh.s:207    .text.WC_StrLen:0000000000000000 WC_StrLen
     /tmp/cc4JYsWh.s:233    .text.WC_StrCopy_N:0000000000000000 $t
     /tmp/cc4JYsWh.s:240    .text.WC_StrCopy_N:0000000000000000 WC_StrCopy_N
     /tmp/cc4JYsWh.s:359    .text.WC_StrCopy:0000000000000000 $t
     /tmp/cc4JYsWh.s:366    .text.WC_StrCopy:0000000000000000 WC_StrCopy
     /tmp/cc4JYsWh.s:391    .text.WC_StrCat_N:0000000000000000 $t
     /tmp/cc4JYsWh.s:398    .text.WC_StrCat_N:0000000000000000 WC_StrCat_N
     /tmp/cc4JYsWh.s:530    .text.WC_StrCat:0000000000000000 $t
     /tmp/cc4JYsWh.s:537    .text.WC_StrCat:0000000000000000 WC_StrCat
     /tmp/cc4JYsWh.s:562    .text.WC_StrCmp_N:0000000000000000 $t
     /tmp/cc4JYsWh.s:569    .text.WC_StrCmp_N:0000000000000000 WC_StrCmp_N
     /tmp/cc4JYsWh.s:812    .text.WC_StrCmp:0000000000000000 $t
     /tmp/cc4JYsWh.s:819    .text.WC_StrCmp:0000000000000000 WC_StrCmp
     /tmp/cc4JYsWh.s:845    .text.WC_StrChar_N:0000000000000000 $t
     /tmp/cc4JYsWh.s:852    .text.WC_StrChar_N:0000000000000000 WC_StrChar_N
     /tmp/cc4JYsWh.s:960    .text.WC_StrChar:0000000000000000 $t
     /tmp/cc4JYsWh.s:967    .text.WC_StrChar:0000000000000000 WC_StrChar
     /tmp/cc4JYsWh.s:995    .text.WC_StrChar_Last:0000000000000000 $t
     /tmp/cc4JYsWh.s:1002   .text.WC_StrChar_Last:0000000000000000 WC_StrChar_Last
     /tmp/cc4JYsWh.s:1072   .text.WC_StrChar_Last_N:0000000000000000 $t
     /tmp/cc4JYsWh.s:1079   .text.WC_StrChar_Last_N:0000000000000000 WC_StrChar_Last_N
     /tmp/cc4JYsWh.s:1150   .text.WC_StrStr:0000000000000000 $t
     /tmp/cc4JYsWh.s:1157   .text.WC_StrStr:0000000000000000 WC_StrStr
     /tmp/cc4JYsWh.s:1292   .text.WC_StrStr_N:0000000000000000 $t
     /tmp/cc4JYsWh.s:1299   .text.WC_StrStr_N:0000000000000000 WC_StrStr_N
     /tmp/cc4JYsWh.s:1462   .text.WC_CharIsAlpha:0000000000000000 $t
     /tmp/cc4JYsWh.s:1469   .text.WC_CharIsAlpha:0000000000000000 WC_CharIsAlpha
     /tmp/cc4JYsWh.s:1627   .text.WC_CharIsAlpha:0000000000000064 $d
     /tmp/cc4JYsWh.s:1632   .text.WC_CharIsDig:0000000000000000 $t
     /tmp/cc4JYsWh.s:1639   .text.WC_CharIsDig:0000000000000000 WC_CharIsDig
     /tmp/cc4JYsWh.s:1692   .text.WC_CharIsAlphaNum:0000000000000000 $t
     /tmp/cc4JYsWh.s:1699   .text.WC_CharIsAlphaNum:0000000000000000 WC_CharIsAlphaNum
     /tmp/cc4JYsWh.s:1790   .text.WC_CharIsDigOct:0000000000000000 $t
     /tmp/cc4JYsWh.s:1797   .text.WC_CharIsDigOct:0000000000000000 WC_CharIsDigOct
     /tmp/cc4JYsWh.s:1850   .text.WC_CharIsDigHex:0000000000000000 $t
     /tmp/cc4JYsWh.s:1857   .text.WC_CharIsDigHex:0000000000000000 WC_CharIsDigHex
     /tmp/cc4JYsWh.s:1953   .text.WC_CharIsSpace:0000000000000000 $t
     /tmp/cc4JYsWh.s:1960   .text.WC_CharIsSpace:0000000000000000 WC_CharIsSpace
     /tmp/cc4JYsWh.s:2126   .text.WC_CharToLower:0000000000000000 $t
     /tmp/cc4JYsWh.s:2133   .text.WC_CharToLower:0000000000000000 WC_CharToLower
     /tmp/cc4JYsWh.s:2286   .text.WC_CharToLower:0000000000000078 $d
     /tmp/cc4JYsWh.s:2292   .text.WC_CharToUpper:0000000000000000 $t
     /tmp/cc4JYsWh.s:2299   .text.WC_CharToUpper:0000000000000000 WC_CharToUpper
     /tmp/cc4JYsWh.s:2452   .text.WC_CharToUpper:000000000000007c $d
     /tmp/cc4JYsWh.s:2457   .text.WC_CharIsLower:0000000000000000 $t
     /tmp/cc4JYsWh.s:2464   .text.WC_CharIsLower:0000000000000000 WC_CharIsLower
     /tmp/cc4JYsWh.s:2635   .text.WC_CharIsLower:0000000000000078 $d
     /tmp/cc4JYsWh.s:2640   .text.WC_CharIsUpper:0000000000000000 $t
     /tmp/cc4JYsWh.s:2647   .text.WC_CharIsUpper:0000000000000000 WC_CharIsUpper
     /tmp/cc4JYsWh.s:2919   .text.WC_CharToCasefold:0000000000000000 $t
ARM GAS  /tmp/cc4JYsWh.s 			page 189


     /tmp/cc4JYsWh.s:2926   .text.WC_CharToCasefold:0000000000000000 WC_CharToCasefold
     /tmp/cc4JYsWh.s:3075   .text.WC_CharToCasefold:0000000000000070 $d
     /tmp/cc4JYsWh.s:3080   .text.WC_StrCmpIgnoreCase_N:0000000000000000 $t
     /tmp/cc4JYsWh.s:3087   .text.WC_StrCmpIgnoreCase_N:0000000000000000 WC_StrCmpIgnoreCase_N
     /tmp/cc4JYsWh.s:3349   .text.WC_StrCmpIgnoreCase:0000000000000000 $t
     /tmp/cc4JYsWh.s:3356   .text.WC_StrCmpIgnoreCase:0000000000000000 WC_StrCmpIgnoreCase
     /tmp/cc4JYsWh.s:3382   .text.WC_CharToMB:0000000000000000 $t
     /tmp/cc4JYsWh.s:3389   .text.WC_CharToMB:0000000000000000 WC_CharToMB
     /tmp/cc4JYsWh.s:3509   .text.MB_CharToWC:0000000000000000 $t
     /tmp/cc4JYsWh.s:3516   .text.MB_CharToWC:0000000000000000 MB_CharToWC
     /tmp/cc4JYsWh.s:3783   .text.MB_CharLen:0000000000000000 $t
     /tmp/cc4JYsWh.s:3790   .text.MB_CharLen:0000000000000000 MB_CharLen
     /tmp/cc4JYsWh.s:3835   .text.WC_StrToMB:0000000000000000 $t
     /tmp/cc4JYsWh.s:3842   .text.WC_StrToMB:0000000000000000 WC_StrToMB
     /tmp/cc4JYsWh.s:4024   .text.MB_StrToWC:0000000000000000 $t
     /tmp/cc4JYsWh.s:4031   .text.MB_StrToWC:0000000000000000 MB_StrToWC
     /tmp/cc4JYsWh.s:4196   .rodata.WC_CharIsAlphaTbl:0000000000000000 $d
     /tmp/cc4JYsWh.s:4200   .rodata.WC_CharIsAlphaTbl:0000000000000000 WC_CharIsAlphaTbl
     /tmp/cc4JYsWh.s:4962   .rodata.WC_CharIsLowerTbl:0000000000000000 $d
     /tmp/cc4JYsWh.s:4966   .rodata.WC_CharIsLowerTbl:0000000000000000 WC_CharIsLowerTbl
     /tmp/cc4JYsWh.s:5080   .rodata.WC_CharToCasefoldTbl:0000000000000000 $d
     /tmp/cc4JYsWh.s:5084   .rodata.WC_CharToCasefoldTbl:0000000000000000 WC_CharToCasefoldTbl
     /tmp/cc4JYsWh.s:5132   .rodata.WC_CharToLowerTbl:0000000000000000 $d
     /tmp/cc4JYsWh.s:5136   .rodata.WC_CharToLowerTbl:0000000000000000 WC_CharToLowerTbl
     /tmp/cc4JYsWh.s:5632   .rodata.WC_CharToUpperTbl:0000000000000000 $d
     /tmp/cc4JYsWh.s:5636   .rodata.WC_CharToUpperTbl:0000000000000000 WC_CharToUpperTbl
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.lib_ascii.h.132.fab7475cf7158ae9b59cf42e0e06afca
                           .group:0000000000000000 wm4.fs.h.42.4f6311a594ee5619f1ee7a9392eb7faa
                           .group:0000000000000000 wm4.fs_def.h.42.653ad677c23ef93c522ec84af681385d
                           .group:0000000000000000 wm4.fs_cfg.h.116.da4f8e9d0b9040a97ef3bf26c61e90fd
                           .group:0000000000000000 wm4.clk.h.99.39403db6a27321e53b261bbe20b56e1d
                           .group:0000000000000000 wm4.cpu_core.h.51.bda0b8f45c33e87ce41267758624493c
                           .group:0000000000000000 wm4.lib_str.h.60.32f6cabaf9bf142bd5051c414a220578
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_str.h.174.5879a17e9fe25aed81d2c99c1603a671
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366
                           .group:0000000000000000 wm4.fs_cfg_fs.h.176.c85074fbe881bfa594608376a65f4dc2
                           .group:0000000000000000 wm4.fs_type.h.42.0906d0337a2df5da9e27cec176b255f1
                           .group:0000000000000000 wm4.lib_mem.h.65.5ae3d762676d2043783018a38f269058
                           .group:0000000000000000 wm4.fs_type.h.139.acab71eb554f7e54c56a7894094211e6
                           .group:0000000000000000 wm4.fs_err.h.42.d52bfed31dff3d1419c5cf09952dee67
                           .group:0000000000000000 wm4.fs.h.97.1d629f0ba32b5622ab4e01a254bd98e8
                           .group:0000000000000000 wm4.fs_unicode.h.42.87eba20c68cc9a261e5bf03e05e37ad6

NO UNDEFINED SYMBOLS

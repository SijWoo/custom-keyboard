ARM GAS  /tmp/cc9zxjuG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fs_dir.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FSDir_ObjClr,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	FSDir_ObjClr:
  26              	.LVL0:
  27              	.LFB13:
  28              		.file 1 "rtos/uC-FS/Source/fs_dir.c"
   1:rtos/uC-FS/Source/fs_dir.c **** /*
   2:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
   3:rtos/uC-FS/Source/fs_dir.c **** *                                                uC/FS
   4:rtos/uC-FS/Source/fs_dir.c **** *                                      The Embedded File System
   5:rtos/uC-FS/Source/fs_dir.c **** *
   6:rtos/uC-FS/Source/fs_dir.c **** *                         (c) Copyright 2008-2019; Silicon Laboratories Inc.,
   7:rtos/uC-FS/Source/fs_dir.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-FS/Source/fs_dir.c **** *
   9:rtos/uC-FS/Source/fs_dir.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-FS/Source/fs_dir.c **** *
  11:rtos/uC-FS/Source/fs_dir.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-FS/Source/fs_dir.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-FS/Source/fs_dir.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-FS/Source/fs_dir.c **** *                  license, you may not use this software.
  15:rtos/uC-FS/Source/fs_dir.c **** *
  16:rtos/uC-FS/Source/fs_dir.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-FS/Source/fs_dir.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-FS/Source/fs_dir.c **** *
  19:rtos/uC-FS/Source/fs_dir.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-FS/Source/fs_dir.c **** *
  21:rtos/uC-FS/Source/fs_dir.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  23:rtos/uC-FS/Source/fs_dir.c **** */
  24:rtos/uC-FS/Source/fs_dir.c **** 
  25:rtos/uC-FS/Source/fs_dir.c **** /*
  26:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  27:rtos/uC-FS/Source/fs_dir.c **** *
  28:rtos/uC-FS/Source/fs_dir.c **** *                                  FILE SYSTEM DIRECTORY MANAGEMENT
  29:rtos/uC-FS/Source/fs_dir.c **** *
  30:rtos/uC-FS/Source/fs_dir.c **** * Filename : fs_dir.c
ARM GAS  /tmp/cc9zxjuG.s 			page 2


  31:rtos/uC-FS/Source/fs_dir.c **** * Version  : v4.07.06
  32:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  33:rtos/uC-FS/Source/fs_dir.c **** */
  34:rtos/uC-FS/Source/fs_dir.c **** 
  35:rtos/uC-FS/Source/fs_dir.c **** /*
  36:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  37:rtos/uC-FS/Source/fs_dir.c **** *                                               MODULE
  38:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  39:rtos/uC-FS/Source/fs_dir.c **** */
  40:rtos/uC-FS/Source/fs_dir.c **** 
  41:rtos/uC-FS/Source/fs_dir.c **** #define  MICRIUM_SOURCE
  42:rtos/uC-FS/Source/fs_dir.c **** #define  FS_DIR_MODULE
  43:rtos/uC-FS/Source/fs_dir.c **** 
  44:rtos/uC-FS/Source/fs_dir.c **** 
  45:rtos/uC-FS/Source/fs_dir.c **** /*
  46:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  47:rtos/uC-FS/Source/fs_dir.c **** *                                            INCLUDE FILES
  48:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  49:rtos/uC-FS/Source/fs_dir.c **** */
  50:rtos/uC-FS/Source/fs_dir.c **** 
  51:rtos/uC-FS/Source/fs_dir.c **** #include  <cpu.h>
  52:rtos/uC-FS/Source/fs_dir.c **** #include  <cpu_core.h>
  53:rtos/uC-FS/Source/fs_dir.c **** #include  "fs.h"
  54:rtos/uC-FS/Source/fs_dir.c **** #include  "fs_sys.h"
  55:rtos/uC-FS/Source/fs_dir.c **** #include  "fs_dir.h"
  56:rtos/uC-FS/Source/fs_dir.c **** #include  "fs_vol.h"
  57:rtos/uC-FS/Source/fs_dir.c **** #include  "fs_dev.h"
  58:rtos/uC-FS/Source/fs_dir.c **** #include  "../FAT/fs_fat.h"
  59:rtos/uC-FS/Source/fs_dir.c **** #include  "../FAT/fs_fat_type.h"
  60:rtos/uC-FS/Source/fs_dir.c **** 
  61:rtos/uC-FS/Source/fs_dir.c **** 
  62:rtos/uC-FS/Source/fs_dir.c **** /*
  63:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  64:rtos/uC-FS/Source/fs_dir.c **** *                                               MODULE
  65:rtos/uC-FS/Source/fs_dir.c **** *
  66:rtos/uC-FS/Source/fs_dir.c **** * Note(s) : (1) See 'fs_dir.h  MODULE'.
  67:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  68:rtos/uC-FS/Source/fs_dir.c **** */
  69:rtos/uC-FS/Source/fs_dir.c **** 
  70:rtos/uC-FS/Source/fs_dir.c **** #ifdef   FS_DIR_MODULE_PRESENT                                  /* See Note #1.                    
  71:rtos/uC-FS/Source/fs_dir.c **** 
  72:rtos/uC-FS/Source/fs_dir.c **** 
  73:rtos/uC-FS/Source/fs_dir.c **** /*
  74:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  75:rtos/uC-FS/Source/fs_dir.c **** *                                            LOCAL DEFINES
  76:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  77:rtos/uC-FS/Source/fs_dir.c **** */
  78:rtos/uC-FS/Source/fs_dir.c **** 
  79:rtos/uC-FS/Source/fs_dir.c **** #define  FS_DIR_MAX_FULL_PATH_LEN               FS_CFG_MAX_PATH_NAME_LEN + FS_CFG_MAX_VOL_NAME_LEN
  80:rtos/uC-FS/Source/fs_dir.c **** 
  81:rtos/uC-FS/Source/fs_dir.c **** /*
  82:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  83:rtos/uC-FS/Source/fs_dir.c **** *                                           LOCAL CONSTANTS
  84:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  85:rtos/uC-FS/Source/fs_dir.c **** */
  86:rtos/uC-FS/Source/fs_dir.c **** 
  87:rtos/uC-FS/Source/fs_dir.c **** 
ARM GAS  /tmp/cc9zxjuG.s 			page 3


  88:rtos/uC-FS/Source/fs_dir.c **** /*
  89:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  90:rtos/uC-FS/Source/fs_dir.c **** *                                          LOCAL DATA TYPES
  91:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  92:rtos/uC-FS/Source/fs_dir.c **** */
  93:rtos/uC-FS/Source/fs_dir.c **** 
  94:rtos/uC-FS/Source/fs_dir.c **** 
  95:rtos/uC-FS/Source/fs_dir.c **** /*
  96:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  97:rtos/uC-FS/Source/fs_dir.c **** *                                            LOCAL TABLES
  98:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
  99:rtos/uC-FS/Source/fs_dir.c **** */
 100:rtos/uC-FS/Source/fs_dir.c **** 
 101:rtos/uC-FS/Source/fs_dir.c **** 
 102:rtos/uC-FS/Source/fs_dir.c **** /*
 103:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 104:rtos/uC-FS/Source/fs_dir.c **** *                                       LOCAL GLOBAL VARIABLES
 105:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 106:rtos/uC-FS/Source/fs_dir.c **** */
 107:rtos/uC-FS/Source/fs_dir.c **** 
 108:rtos/uC-FS/Source/fs_dir.c **** FS_STATIC  MEM_POOL     FSDir_Pool;                                     /* Pool of dirs.           
 109:rtos/uC-FS/Source/fs_dir.c **** FS_STATIC  FS_DIR     **FSDir_Tbl;                                      /* Tbl  of dirs.           
 110:rtos/uC-FS/Source/fs_dir.c **** 
 111:rtos/uC-FS/Source/fs_dir.c **** FS_STATIC  CPU_BOOLEAN  FSDir_ModuleEn;                                 /* Module enabled.         
 112:rtos/uC-FS/Source/fs_dir.c **** 
 113:rtos/uC-FS/Source/fs_dir.c **** FS_STATIC  FS_QTY       FSDir_DirCntMax;                                /* Maximum number of open d
 114:rtos/uC-FS/Source/fs_dir.c **** FS_STATIC  FS_QTY       FSDir_Cnt;
 115:rtos/uC-FS/Source/fs_dir.c **** 
 116:rtos/uC-FS/Source/fs_dir.c **** 
 117:rtos/uC-FS/Source/fs_dir.c **** /*
 118:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 119:rtos/uC-FS/Source/fs_dir.c **** *                                      LOCAL FUNCTION PROTOTYPES
 120:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 121:rtos/uC-FS/Source/fs_dir.c **** */
 122:rtos/uC-FS/Source/fs_dir.c **** 
 123:rtos/uC-FS/Source/fs_dir.c ****                                                                                 /* ---------- ACCES
 124:rtos/uC-FS/Source/fs_dir.c **** static  FS_DIR       *FSDir_AcquireLockChk(FS_DIR        *p_dir,                /* Acquire director
 125:rtos/uC-FS/Source/fs_dir.c ****                                            CPU_BOOLEAN    chngd,
 126:rtos/uC-FS/Source/fs_dir.c ****                                            FS_ERR        *p_err);
 127:rtos/uC-FS/Source/fs_dir.c **** 
 128:rtos/uC-FS/Source/fs_dir.c **** static  FS_DIR       *FSDir_Acquire       (FS_DIR        *p_dir);               /* Acquire director
 129:rtos/uC-FS/Source/fs_dir.c **** 
 130:rtos/uC-FS/Source/fs_dir.c **** static  void          FSDir_ReleaseUnlock (FS_DIR        *p_dir);               /* Release director
 131:rtos/uC-FS/Source/fs_dir.c **** 
 132:rtos/uC-FS/Source/fs_dir.c **** static  void          FSDir_Release       (FS_DIR        *p_dir);               /* Release director
 133:rtos/uC-FS/Source/fs_dir.c **** 
 134:rtos/uC-FS/Source/fs_dir.c **** static  CPU_BOOLEAN   FSDir_Lock          (FS_DIR        *p_dir);               /* Acquire director
 135:rtos/uC-FS/Source/fs_dir.c **** 
 136:rtos/uC-FS/Source/fs_dir.c **** static  void          FSDir_Unlock        (FS_DIR        *p_dir);               /* Release director
 137:rtos/uC-FS/Source/fs_dir.c **** 
 138:rtos/uC-FS/Source/fs_dir.c **** 
 139:rtos/uC-FS/Source/fs_dir.c ****                                                                                 /* ---- DIRECTORY O
 140:rtos/uC-FS/Source/fs_dir.c **** static  void          FSDir_ObjClr        (FS_DIR        *p_dir);               /* Clear    a direc
 141:rtos/uC-FS/Source/fs_dir.c **** 
 142:rtos/uC-FS/Source/fs_dir.c **** static  void          FSDir_ObjFree       (FS_DIR        *p_dir);               /* Free     a direc
 143:rtos/uC-FS/Source/fs_dir.c **** 
 144:rtos/uC-FS/Source/fs_dir.c **** static  FS_DIR       *FSDir_ObjGet        (void);                               /* Allocate a direc
ARM GAS  /tmp/cc9zxjuG.s 			page 4


 145:rtos/uC-FS/Source/fs_dir.c **** 
 146:rtos/uC-FS/Source/fs_dir.c **** 
 147:rtos/uC-FS/Source/fs_dir.c ****                                                                                 /* ----------- NAME
 148:rtos/uC-FS/Source/fs_dir.c **** static  CPU_CHAR     *FSDir_NameParseChk  (CPU_CHAR       *name_full,           /* Parse full dir n
 149:rtos/uC-FS/Source/fs_dir.c ****                                            FS_VOL        **pp_vol,
 150:rtos/uC-FS/Source/fs_dir.c ****                                            FS_ERR         *p_err);
 151:rtos/uC-FS/Source/fs_dir.c **** 
 152:rtos/uC-FS/Source/fs_dir.c **** 
 153:rtos/uC-FS/Source/fs_dir.c **** /*
 154:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 155:rtos/uC-FS/Source/fs_dir.c **** *                                     LOCAL CONFIGURATION ERRORS
 156:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 157:rtos/uC-FS/Source/fs_dir.c **** */
 158:rtos/uC-FS/Source/fs_dir.c **** 
 159:rtos/uC-FS/Source/fs_dir.c **** 
 160:rtos/uC-FS/Source/fs_dir.c **** /*
 161:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 162:rtos/uC-FS/Source/fs_dir.c **** *                                            FSDir_Close()
 163:rtos/uC-FS/Source/fs_dir.c **** *
 164:rtos/uC-FS/Source/fs_dir.c **** * Description : Close & free a directory.
 165:rtos/uC-FS/Source/fs_dir.c **** *
 166:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir       Pointer to a directory.
 167:rtos/uC-FS/Source/fs_dir.c **** *
 168:rtos/uC-FS/Source/fs_dir.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 169:rtos/uC-FS/Source/fs_dir.c **** *
 170:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NONE            Directory closed.
 171:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NULL_PTR        Argument 'p_dir' passed a NULL pointer.
 172:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_INVALID_TYPE    Argument 'p_dir's TYPE is invalid or unknown
 173:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_DIR_DIS         Directory module disabled.
 174:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_DIR_NOT_OPEN    Directory NOT open.
 175:rtos/uC-FS/Source/fs_dir.c **** *
 176:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : none.
 177:rtos/uC-FS/Source/fs_dir.c **** *
 178:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : (1) See 'FSDir_ModuleInit()  Note #1'.
 179:rtos/uC-FS/Source/fs_dir.c **** *
 180:rtos/uC-FS/Source/fs_dir.c **** *               (2) After a directory is closed, the application MUST desist from accessing its dir
 181:rtos/uC-FS/Source/fs_dir.c **** *                   pointer.  This could cause file system corruption, since this handle may be re-
 182:rtos/uC-FS/Source/fs_dir.c **** *                   for a different directory.
 183:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 184:rtos/uC-FS/Source/fs_dir.c **** */
 185:rtos/uC-FS/Source/fs_dir.c **** 
 186:rtos/uC-FS/Source/fs_dir.c **** void  FSDir_Close (FS_DIR  *p_dir,
 187:rtos/uC-FS/Source/fs_dir.c ****                    FS_ERR  *p_err)
 188:rtos/uC-FS/Source/fs_dir.c **** {
 189:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 190:rtos/uC-FS/Source/fs_dir.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 191:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION(;);
 192:rtos/uC-FS/Source/fs_dir.c ****     }
 193:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir == (FS_DIR *)0) {                                 /* Validate dir ptr.               
 194:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NULL_PTR;
 195:rtos/uC-FS/Source/fs_dir.c ****         return;
 196:rtos/uC-FS/Source/fs_dir.c ****     }
 197:rtos/uC-FS/Source/fs_dir.c **** #endif
 198:rtos/uC-FS/Source/fs_dir.c **** 
 199:rtos/uC-FS/Source/fs_dir.c ****     if (FSDir_ModuleEn == DEF_DISABLED) {                       /* Dir module run-time dis'd (see N
 200:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 201:rtos/uC-FS/Source/fs_dir.c ****         return;
ARM GAS  /tmp/cc9zxjuG.s 			page 5


 202:rtos/uC-FS/Source/fs_dir.c ****     }
 203:rtos/uC-FS/Source/fs_dir.c **** 
 204:rtos/uC-FS/Source/fs_dir.c **** 
 205:rtos/uC-FS/Source/fs_dir.c **** 
 206:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- ACQUIRE DIR LO
 207:rtos/uC-FS/Source/fs_dir.c ****     (void)FSDir_AcquireLockChk(p_dir, DEF_YES, p_err);
 208:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 209:rtos/uC-FS/Source/fs_dir.c ****         return;
 210:rtos/uC-FS/Source/fs_dir.c ****     }
 211:rtos/uC-FS/Source/fs_dir.c **** 
 212:rtos/uC-FS/Source/fs_dir.c **** 
 213:rtos/uC-FS/Source/fs_dir.c **** 
 214:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* --------------------- CLOSE DIR 
 215:rtos/uC-FS/Source/fs_dir.c ****     FSSys_DirClose(p_dir);
 216:rtos/uC-FS/Source/fs_dir.c **** 
 217:rtos/uC-FS/Source/fs_dir.c ****     FSVol_DirRemove(p_dir->VolPtr, p_dir);                      /* Unlink dir from vol dir list.   
 218:rtos/uC-FS/Source/fs_dir.c ****     p_dir->State = FS_DIR_STATE_CLOSING;
 219:rtos/uC-FS/Source/fs_dir.c **** 
 220:rtos/uC-FS/Source/fs_dir.c **** 
 221:rtos/uC-FS/Source/fs_dir.c **** 
 222:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- RELEASE DIR LO
 223:rtos/uC-FS/Source/fs_dir.c ****     FSDir_ReleaseUnlock(p_dir);
 224:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Release(p_dir);                                       /* Release dir ref init.           
 225:rtos/uC-FS/Source/fs_dir.c **** }
 226:rtos/uC-FS/Source/fs_dir.c **** 
 227:rtos/uC-FS/Source/fs_dir.c **** 
 228:rtos/uC-FS/Source/fs_dir.c **** 
 229:rtos/uC-FS/Source/fs_dir.c **** /*
 230:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 231:rtos/uC-FS/Source/fs_dir.c **** *                                           FSDir_IsOpen()
 232:rtos/uC-FS/Source/fs_dir.c **** *
 233:rtos/uC-FS/Source/fs_dir.c **** * Description : Test if dir is already open.
 234:rtos/uC-FS/Source/fs_dir.c **** *
 235:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : name_full   Name of the directory.
 236:rtos/uC-FS/Source/fs_dir.c **** *
 237:rtos/uC-FS/Source/fs_dir.c **** *               p_err       Pointer to variable that will receive the return error code:
 238:rtos/uC-FS/Source/fs_dir.c **** *
 239:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NONE                     Dir opened successfully.
 240:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NAME_NULL                Argument 'name_full' passed a NULL 
 241:rtos/uC-FS/Source/fs_dir.c **** *
 242:rtos/uC-FS/Source/fs_dir.c **** *                                                      ---- RETURNED BY FS_FAT_LowFileFirstClusGet(
 243:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_BUF_NONE_AVAIL           No buffer available.
 244:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_ENTRY_NOT_FILE           Entry not a file nor a directory.
 245:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_VOL_INVALID_SEC_NBR      Cluster address invalid.
 246:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_ENTRY_NOT_FOUND          File system entry NOT found
 247:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_ENTRY_PARENT_NOT_FOUND   Entry parent NOT found.
 248:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_ENTRY_PARENT_NOT_DIR     Entry parent NOT a directory.
 249:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NAME_INVALID             Invalid name or path.
 250:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_VOL_INVALID_SEC_NBR      Invalid sector number found in dire
 251:rtos/uC-FS/Source/fs_dir.c **** *                                                                       entry.
 252:rtos/uC-FS/Source/fs_dir.c **** *
 253:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : DEF_NO,  if dir is NOT open.
 254:rtos/uC-FS/Source/fs_dir.c **** *               DEF_YES, if dir is     open.
 255:rtos/uC-FS/Source/fs_dir.c **** *
 256:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : None.
 257:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 258:rtos/uC-FS/Source/fs_dir.c **** */
ARM GAS  /tmp/cc9zxjuG.s 			page 6


 259:rtos/uC-FS/Source/fs_dir.c **** 
 260:rtos/uC-FS/Source/fs_dir.c **** CPU_BOOLEAN  FSDir_IsOpen(CPU_CHAR  *name_full,
 261:rtos/uC-FS/Source/fs_dir.c ****                           FS_ERR    *p_err)
 262:rtos/uC-FS/Source/fs_dir.c **** {
 263:rtos/uC-FS/Source/fs_dir.c ****     FS_DIR             *p_dir;
 264:rtos/uC-FS/Source/fs_dir.c ****     FS_QTY              max_ix;
 265:rtos/uC-FS/Source/fs_dir.c ****     CPU_INT32U          ix;
 266:rtos/uC-FS/Source/fs_dir.c ****     FS_FAT_FILE_DATA   *p_fat_file_data;
 267:rtos/uC-FS/Source/fs_dir.c ****     FS_VOL             *p_open_vol;
 268:rtos/uC-FS/Source/fs_dir.c ****     FS_VOL             *p_disk_vol;
 269:rtos/uC-FS/Source/fs_dir.c ****     FS_FAT_CLUS_NBR     open_dir_first_clus_nb;
 270:rtos/uC-FS/Source/fs_dir.c ****     FS_FAT_CLUS_NBR     disk_dir_first_clus_nb;
 271:rtos/uC-FS/Source/fs_dir.c ****     CPU_CHAR           *dir_name;
 272:rtos/uC-FS/Source/fs_dir.c ****     CPU_BOOLEAN         dir_open;
 273:rtos/uC-FS/Source/fs_dir.c **** 
 274:rtos/uC-FS/Source/fs_dir.c **** 
 275:rtos/uC-FS/Source/fs_dir.c **** 
 276:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 277:rtos/uC-FS/Source/fs_dir.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 278:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION(DEF_YES);
 279:rtos/uC-FS/Source/fs_dir.c ****     }
 280:rtos/uC-FS/Source/fs_dir.c ****     if (name_full == (CPU_CHAR *)0) {                           /* Validate name ptr.              
 281:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NAME_NULL;
 282:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_YES);
 283:rtos/uC-FS/Source/fs_dir.c ****     }
 284:rtos/uC-FS/Source/fs_dir.c **** #endif
 285:rtos/uC-FS/Source/fs_dir.c **** 
 286:rtos/uC-FS/Source/fs_dir.c **** 
 287:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* -------------- GET INFO OF DIR O
 288:rtos/uC-FS/Source/fs_dir.c ****     dir_name =  FSDir_NameParseChk( name_full,                  /* Acquire vol ptr.                
 289:rtos/uC-FS/Source/fs_dir.c ****                                    &p_disk_vol,
 290:rtos/uC-FS/Source/fs_dir.c ****                                     p_err);
 291:rtos/uC-FS/Source/fs_dir.c **** 
 292:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 293:rtos/uC-FS/Source/fs_dir.c ****         *p_err  = FS_ERR_NONE;
 294:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_NO);
 295:rtos/uC-FS/Source/fs_dir.c ****     }
 296:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* Get 1st clut addr of dir.       
 297:rtos/uC-FS/Source/fs_dir.c ****     disk_dir_first_clus_nb = FS_FAT_LowFileFirstClusGet (p_disk_vol,
 298:rtos/uC-FS/Source/fs_dir.c ****                                                          dir_name,
 299:rtos/uC-FS/Source/fs_dir.c ****                                                          p_err);
 300:rtos/uC-FS/Source/fs_dir.c ****     FSVol_Unlock(p_disk_vol);
 301:rtos/uC-FS/Source/fs_dir.c ****     FSVol_Release(p_disk_vol);
 302:rtos/uC-FS/Source/fs_dir.c **** 
 303:rtos/uC-FS/Source/fs_dir.c ****     switch (*p_err) {
 304:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_NONE:
 305:rtos/uC-FS/Source/fs_dir.c ****              break;
 306:rtos/uC-FS/Source/fs_dir.c **** 
 307:rtos/uC-FS/Source/fs_dir.c **** 
 308:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_ENTRY_NOT_FOUND:                            /* Entry do not exist. Cannot be op
 309:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_ENTRY_PARENT_NOT_FOUND:
 310:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_ENTRY_PARENT_NOT_DIR:
 311:rtos/uC-FS/Source/fs_dir.c ****             *p_err = FS_ERR_NONE;
 312:rtos/uC-FS/Source/fs_dir.c ****              return (DEF_NO);
 313:rtos/uC-FS/Source/fs_dir.c **** 
 314:rtos/uC-FS/Source/fs_dir.c **** 
 315:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_NAME_INVALID:
ARM GAS  /tmp/cc9zxjuG.s 			page 7


 316:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_VOL_INVALID_SEC_NBR:
 317:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_BUF_NONE_AVAIL:
 318:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_ENTRY_NOT_FILE:
 319:rtos/uC-FS/Source/fs_dir.c ****         default:
 320:rtos/uC-FS/Source/fs_dir.c ****              return (DEF_NO);
 321:rtos/uC-FS/Source/fs_dir.c ****     }
 322:rtos/uC-FS/Source/fs_dir.c **** 
 323:rtos/uC-FS/Source/fs_dir.c **** 
 324:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------- CMP TO EVERY DIR I
 325:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Lock(p_err);
 326:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 327:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_NO);
 328:rtos/uC-FS/Source/fs_dir.c ****     }
 329:rtos/uC-FS/Source/fs_dir.c **** 
 330:rtos/uC-FS/Source/fs_dir.c ****     max_ix = FSDir_Cnt;
 331:rtos/uC-FS/Source/fs_dir.c **** 
 332:rtos/uC-FS/Source/fs_dir.c ****     dir_open = DEF_NO;
 333:rtos/uC-FS/Source/fs_dir.c ****     ix       = 0u;
 334:rtos/uC-FS/Source/fs_dir.c ****     while ((ix < max_ix) &&
 335:rtos/uC-FS/Source/fs_dir.c ****            (dir_open == DEF_NO)) {
 336:rtos/uC-FS/Source/fs_dir.c ****         p_dir = FSDir_Tbl[ix];
 337:rtos/uC-FS/Source/fs_dir.c **** 
 338:rtos/uC-FS/Source/fs_dir.c ****         if (p_dir != DEF_NULL) {
 339:rtos/uC-FS/Source/fs_dir.c ****             p_open_vol = p_dir->VolPtr;
 340:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* Cmp vol ptr.                    
 341:rtos/uC-FS/Source/fs_dir.c ****             if (p_open_vol == p_disk_vol) {
 342:rtos/uC-FS/Source/fs_dir.c ****                 p_fat_file_data        = (FS_FAT_FILE_DATA *)p_dir->DataPtr;
 343:rtos/uC-FS/Source/fs_dir.c ****                 open_dir_first_clus_nb =  p_fat_file_data->FileFirstClus;
 344:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* Cmp 1st cluster address         
 345:rtos/uC-FS/Source/fs_dir.c ****                 if (open_dir_first_clus_nb == disk_dir_first_clus_nb) {
 346:rtos/uC-FS/Source/fs_dir.c ****                     dir_open = DEF_YES;
 347:rtos/uC-FS/Source/fs_dir.c ****                 }
 348:rtos/uC-FS/Source/fs_dir.c ****             }
 349:rtos/uC-FS/Source/fs_dir.c ****         }
 350:rtos/uC-FS/Source/fs_dir.c **** 
 351:rtos/uC-FS/Source/fs_dir.c ****         ix++;
 352:rtos/uC-FS/Source/fs_dir.c ****     }
 353:rtos/uC-FS/Source/fs_dir.c **** 
 354:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Unlock();
 355:rtos/uC-FS/Source/fs_dir.c **** 
 356:rtos/uC-FS/Source/fs_dir.c **** 
 357:rtos/uC-FS/Source/fs_dir.c ****    *p_err   = FS_ERR_NONE;
 358:rtos/uC-FS/Source/fs_dir.c **** 
 359:rtos/uC-FS/Source/fs_dir.c ****     return (dir_open);
 360:rtos/uC-FS/Source/fs_dir.c **** }
 361:rtos/uC-FS/Source/fs_dir.c **** 
 362:rtos/uC-FS/Source/fs_dir.c **** 
 363:rtos/uC-FS/Source/fs_dir.c **** /*
 364:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 365:rtos/uC-FS/Source/fs_dir.c **** *                                            FSDir_Open()
 366:rtos/uC-FS/Source/fs_dir.c **** *
 367:rtos/uC-FS/Source/fs_dir.c **** * Description : Open a directory.
 368:rtos/uC-FS/Source/fs_dir.c **** *
 369:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : name_full   Name of the directory.
 370:rtos/uC-FS/Source/fs_dir.c **** *
 371:rtos/uC-FS/Source/fs_dir.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 372:rtos/uC-FS/Source/fs_dir.c **** *
ARM GAS  /tmp/cc9zxjuG.s 			page 8


 373:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NONE                      Directory opened successfully.
 374:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NAME_NULL                 Argument 'name_full' passed a NULL
 375:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_DIR_DIS                   Directory module disabled.
 376:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_DIR_NONE_AVAIL            No directory available.
 377:rtos/uC-FS/Source/fs_dir.c **** *
 378:rtos/uC-FS/Source/fs_dir.c **** *                                                                --- RETURNED BY FSDir_NameParseChk
 379:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NAME_INVALID              Entry name specified invalid or vo
 380:rtos/uC-FS/Source/fs_dir.c **** *                                                                    could not be found.
 381:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NAME_PATH_TOO_LONG        Entry name is too long.
 382:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_VOL_NOT_OPEN              Volume not opened.
 383:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_VOL_NOT_MOUNTED           Volume not mounted.
 384:rtos/uC-FS/Source/fs_dir.c **** *
 385:rtos/uC-FS/Source/fs_dir.c **** *                                                                ------ RETURNED BY FSSys_DirOpen()
 386:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_BUF_NONE_AVAIL            Buffer not available.
 387:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_DEV                       Device access error.
 388:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_ENTRY_NOT_DIR             File system entry NOT a directory.
 389:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_ENTRY_NOT_FOUND           File system entry NOT found
 390:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
 391:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directory.
 392:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NAME_INVALID              Invalid file name or path.
 393:rtos/uC-FS/Source/fs_dir.c **** *
 394:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : Pointer to a directory, if NO errors.
 395:rtos/uC-FS/Source/fs_dir.c **** *               Pointer to NULL,        otherwise.
 396:rtos/uC-FS/Source/fs_dir.c **** *
 397:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : (1) See 'FSDir_ModuleInit()  Note #1'.
 398:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 399:rtos/uC-FS/Source/fs_dir.c **** */
 400:rtos/uC-FS/Source/fs_dir.c **** 
 401:rtos/uC-FS/Source/fs_dir.c **** FS_DIR  *FSDir_Open  (CPU_CHAR  *name_full,
 402:rtos/uC-FS/Source/fs_dir.c ****                       FS_ERR    *p_err)
 403:rtos/uC-FS/Source/fs_dir.c **** {
 404:rtos/uC-FS/Source/fs_dir.c ****     CPU_CHAR  *name_dir;
 405:rtos/uC-FS/Source/fs_dir.c ****     CPU_CHAR  *name_full_temp;
 406:rtos/uC-FS/Source/fs_dir.c ****     FS_DIR    *p_dir;
 407:rtos/uC-FS/Source/fs_dir.c ****     FS_VOL    *p_vol;
 408:rtos/uC-FS/Source/fs_dir.c **** 
 409:rtos/uC-FS/Source/fs_dir.c **** 
 410:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 411:rtos/uC-FS/Source/fs_dir.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 412:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION((FS_DIR *)0);
 413:rtos/uC-FS/Source/fs_dir.c ****     }
 414:rtos/uC-FS/Source/fs_dir.c ****     if (name_full == (CPU_CHAR *)0) {                           /* Validate name ptr.              
 415:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NAME_NULL;
 416:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 417:rtos/uC-FS/Source/fs_dir.c ****     }
 418:rtos/uC-FS/Source/fs_dir.c **** #endif
 419:rtos/uC-FS/Source/fs_dir.c **** 
 420:rtos/uC-FS/Source/fs_dir.c ****     if (FSDir_ModuleEn == DEF_DISABLED) {                       /* Dir module run-time dis'd (see N
 421:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 422:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 423:rtos/uC-FS/Source/fs_dir.c ****     }
 424:rtos/uC-FS/Source/fs_dir.c **** 
 425:rtos/uC-FS/Source/fs_dir.c **** 
 426:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------- GET FREE DIR
 427:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Lock(p_err);                                          /* Acquire FS lock.                
 428:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 429:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
ARM GAS  /tmp/cc9zxjuG.s 			page 9


 430:rtos/uC-FS/Source/fs_dir.c ****     }
 431:rtos/uC-FS/Source/fs_dir.c **** 
 432:rtos/uC-FS/Source/fs_dir.c ****     p_dir = FSDir_ObjGet();                                     /* Alloc dir.                      
 433:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir == (FS_DIR *)0) {
 434:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_NONE_AVAIL;
 435:rtos/uC-FS/Source/fs_dir.c ****         FS_OS_Unlock();
 436:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 437:rtos/uC-FS/Source/fs_dir.c ****     }
 438:rtos/uC-FS/Source/fs_dir.c **** 
 439:rtos/uC-FS/Source/fs_dir.c ****     p_dir->RefCnt =  1u;
 440:rtos/uC-FS/Source/fs_dir.c ****     p_dir->State  =  FS_DIR_STATE_OPENING;
 441:rtos/uC-FS/Source/fs_dir.c ****     p_dir->VolPtr = (FS_VOL *)0;
 442:rtos/uC-FS/Source/fs_dir.c **** 
 443:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Unlock();                                             /* Release FS lock.                
 444:rtos/uC-FS/Source/fs_dir.c **** 
 445:rtos/uC-FS/Source/fs_dir.c **** 
 446:rtos/uC-FS/Source/fs_dir.c **** 
 447:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------ FORM FULL PAT
 448:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 449:rtos/uC-FS/Source/fs_dir.c ****     name_full_temp = FS_WorkingDirPathForm(name_full, p_err);   /* Try to form path.               
 450:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 451:rtos/uC-FS/Source/fs_dir.c ****         FSDir_Release(p_dir);
 452:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 453:rtos/uC-FS/Source/fs_dir.c ****     }
 454:rtos/uC-FS/Source/fs_dir.c **** #else
 455:rtos/uC-FS/Source/fs_dir.c ****     name_full_temp = name_full;
 456:rtos/uC-FS/Source/fs_dir.c **** #endif
 457:rtos/uC-FS/Source/fs_dir.c **** 
 458:rtos/uC-FS/Source/fs_dir.c **** 
 459:rtos/uC-FS/Source/fs_dir.c **** 
 460:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------ ACQUIRE VOL R
 461:rtos/uC-FS/Source/fs_dir.c ****     name_dir = FSDir_NameParseChk( name_full_temp,
 462:rtos/uC-FS/Source/fs_dir.c ****                                   &p_vol,
 463:rtos/uC-FS/Source/fs_dir.c ****                                    p_err);
 464:rtos/uC-FS/Source/fs_dir.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 465:rtos/uC-FS/Source/fs_dir.c ****     if (p_vol == (FS_VOL *)0) {                                 /* If no vol found ...             
 466:rtos/uC-FS/Source/fs_dir.c ****         FSDir_Release(p_dir);                                   /*                 ... release dir 
 467:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 468:rtos/uC-FS/Source/fs_dir.c ****     }
 469:rtos/uC-FS/Source/fs_dir.c **** 
 470:rtos/uC-FS/Source/fs_dir.c **** 
 471:rtos/uC-FS/Source/fs_dir.c **** 
 472:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* --------------------- OPEN DIR -
 473:rtos/uC-FS/Source/fs_dir.c ****     p_dir->VolPtr = p_vol;
 474:rtos/uC-FS/Source/fs_dir.c **** 
 475:rtos/uC-FS/Source/fs_dir.c ****     FSSys_DirOpen(p_dir,
 476:rtos/uC-FS/Source/fs_dir.c ****                   name_dir,
 477:rtos/uC-FS/Source/fs_dir.c ****                   p_err);
 478:rtos/uC-FS/Source/fs_dir.c **** 
 479:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_WORKING_DIR_EN == DEF_ENABLED)
 480:rtos/uC-FS/Source/fs_dir.c ****     if (name_full_temp != name_full) {
 481:rtos/uC-FS/Source/fs_dir.c ****         FS_WorkingDirObjFree(name_full_temp);
 482:rtos/uC-FS/Source/fs_dir.c ****     }
 483:rtos/uC-FS/Source/fs_dir.c **** #endif
 484:rtos/uC-FS/Source/fs_dir.c **** 
 485:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 486:rtos/uC-FS/Source/fs_dir.c ****         p_dir->State = FS_DIR_STATE_CLOSING;
ARM GAS  /tmp/cc9zxjuG.s 			page 10


 487:rtos/uC-FS/Source/fs_dir.c ****         FSDir_ReleaseUnlock(p_dir);
 488:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 489:rtos/uC-FS/Source/fs_dir.c ****     }
 490:rtos/uC-FS/Source/fs_dir.c **** 
 491:rtos/uC-FS/Source/fs_dir.c ****     p_dir->State      = FS_DIR_STATE_OPEN;
 492:rtos/uC-FS/Source/fs_dir.c ****     p_dir->RefreshCnt = p_vol->RefreshCnt;
 493:rtos/uC-FS/Source/fs_dir.c ****     FSVol_DirAdd(p_vol, p_dir);                                 /* Link file to vol dir list.      
 494:rtos/uC-FS/Source/fs_dir.c **** 
 495:rtos/uC-FS/Source/fs_dir.c **** 
 496:rtos/uC-FS/Source/fs_dir.c **** 
 497:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- RELEASE DIR LO
 498:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Unlock(p_dir);                                        /* Keep init ref.                  
 499:rtos/uC-FS/Source/fs_dir.c ****     return (p_dir);
 500:rtos/uC-FS/Source/fs_dir.c **** }
 501:rtos/uC-FS/Source/fs_dir.c **** 
 502:rtos/uC-FS/Source/fs_dir.c **** 
 503:rtos/uC-FS/Source/fs_dir.c **** /*
 504:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 505:rtos/uC-FS/Source/fs_dir.c **** *                                             FSDir_Rd()
 506:rtos/uC-FS/Source/fs_dir.c **** *
 507:rtos/uC-FS/Source/fs_dir.c **** * Description : Read a directory entry from a directory.
 508:rtos/uC-FS/Source/fs_dir.c **** *
 509:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir           Pointer to a directory.
 510:rtos/uC-FS/Source/fs_dir.c **** *
 511:rtos/uC-FS/Source/fs_dir.c **** *               p_dir_entry     Pointer to variable that will receive directory entry information.
 512:rtos/uC-FS/Source/fs_dir.c **** *
 513:rtos/uC-FS/Source/fs_dir.c **** *               p_err           Pointer to variable that will receive the return error code from th
 514:rtos/uC-FS/Source/fs_dir.c **** *
 515:rtos/uC-FS/Source/fs_dir.c **** *                                   FS_ERR_NONE              Directory read successfully.
 516:rtos/uC-FS/Source/fs_dir.c **** *                                   FS_ERR_NULL_PTR          Argument 'p_dir'/'p_dir_entry'passed a
 517:rtos/uC-FS/Source/fs_dir.c **** *                                   FS_ERR_INVALID_TYPE      Argument 'p_dir's TYPE is invalid or u
 518:rtos/uC-FS/Source/fs_dir.c **** *                                   FS_ERR_DIR_DIS           Directory module disabled.
 519:rtos/uC-FS/Source/fs_dir.c **** *
 520:rtos/uC-FS/Source/fs_dir.c **** *                                                            ---- RETURNED BY FSDir_AcquireLockChk(
 521:rtos/uC-FS/Source/fs_dir.c **** *                                   FS_ERR_DEV_CHNGD         Device has changed.
 522:rtos/uC-FS/Source/fs_dir.c **** *                                   FS_ERR_DIR_NOT_OPEN      Directory NOT open.
 523:rtos/uC-FS/Source/fs_dir.c **** *
 524:rtos/uC-FS/Source/fs_dir.c **** *                                                            --------- RETURNED BY FSSys_DirRd() --
 525:rtos/uC-FS/Source/fs_dir.c **** *                                   FS_ERR_EOF               End of directory reached.
 526:rtos/uC-FS/Source/fs_dir.c **** *                                   FS_ERR_DEV               Device access error.
 527:rtos/uC-FS/Source/fs_dir.c **** *                                   FS_ERR_BUF_NONE_AVAIL    Buffer not available.
 528:rtos/uC-FS/Source/fs_dir.c **** *
 529:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : none.
 530:rtos/uC-FS/Source/fs_dir.c **** *
 531:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : (1) See 'FSDir_ModuleInit()  Note #1'.
 532:rtos/uC-FS/Source/fs_dir.c **** *
 533:rtos/uC-FS/Source/fs_dir.c **** *               (2) Entries for "dot" (current directory) and "dot-dot" (parent directory) shall be
 534:rtos/uC-FS/Source/fs_dir.c **** *                   returned, if present.  No entry with an empty name shall be returned.
 535:rtos/uC-FS/Source/fs_dir.c **** *
 536:rtos/uC-FS/Source/fs_dir.c **** *               (3) The directory entry information is stored in a structure that may be overwritte
 537:rtos/uC-FS/Source/fs_dir.c **** *                   another call to 'FSDir_Rd()' on the same directory.
 538:rtos/uC-FS/Source/fs_dir.c **** *
 539:rtos/uC-FS/Source/fs_dir.c **** *               (4) If an entry is removed from or added to the directory after the directory has b
 540:rtos/uC-FS/Source/fs_dir.c **** *                   opened, information may or may not be returned for that entry.
 541:rtos/uC-FS/Source/fs_dir.c **** *
 542:rtos/uC-FS/Source/fs_dir.c **** *               (5) See 'fs_readdir()  Note(s)'.
 543:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
ARM GAS  /tmp/cc9zxjuG.s 			page 11


 544:rtos/uC-FS/Source/fs_dir.c **** */
 545:rtos/uC-FS/Source/fs_dir.c **** 
 546:rtos/uC-FS/Source/fs_dir.c **** void  FSDir_Rd (FS_DIR        *p_dir,
 547:rtos/uC-FS/Source/fs_dir.c ****                 FS_DIR_ENTRY  *p_dir_entry,
 548:rtos/uC-FS/Source/fs_dir.c ****                 FS_ERR        *p_err)
 549:rtos/uC-FS/Source/fs_dir.c **** {
 550:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 551:rtos/uC-FS/Source/fs_dir.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 552:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION(;);
 553:rtos/uC-FS/Source/fs_dir.c ****     }
 554:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir == (FS_DIR *)0) {                                 /* Validate dir ptr.               
 555:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NULL_PTR;
 556:rtos/uC-FS/Source/fs_dir.c ****         return;
 557:rtos/uC-FS/Source/fs_dir.c ****     }
 558:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir_entry == (FS_DIR_ENTRY *)0) {                     /* Validate dir entry ptr.         
 559:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NULL_PTR;
 560:rtos/uC-FS/Source/fs_dir.c ****         return;
 561:rtos/uC-FS/Source/fs_dir.c ****     }
 562:rtos/uC-FS/Source/fs_dir.c **** #endif
 563:rtos/uC-FS/Source/fs_dir.c **** 
 564:rtos/uC-FS/Source/fs_dir.c ****     if (FSDir_ModuleEn == DEF_DISABLED) {                       /* Dir module run-time dis'd (see N
 565:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 566:rtos/uC-FS/Source/fs_dir.c ****         return;
 567:rtos/uC-FS/Source/fs_dir.c ****     }
 568:rtos/uC-FS/Source/fs_dir.c **** 
 569:rtos/uC-FS/Source/fs_dir.c **** 
 570:rtos/uC-FS/Source/fs_dir.c **** 
 571:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- ACQUIRE DIR LO
 572:rtos/uC-FS/Source/fs_dir.c ****     (void)FSDir_AcquireLockChk(p_dir, DEF_NO, p_err);
 573:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 574:rtos/uC-FS/Source/fs_dir.c ****         return;
 575:rtos/uC-FS/Source/fs_dir.c ****     }
 576:rtos/uC-FS/Source/fs_dir.c **** 
 577:rtos/uC-FS/Source/fs_dir.c **** 
 578:rtos/uC-FS/Source/fs_dir.c **** 
 579:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* --------------------- READ DIR -
 580:rtos/uC-FS/Source/fs_dir.c ****     FSSys_DirRd(p_dir,
 581:rtos/uC-FS/Source/fs_dir.c ****                 p_dir_entry,
 582:rtos/uC-FS/Source/fs_dir.c ****                 p_err);
 583:rtos/uC-FS/Source/fs_dir.c **** 
 584:rtos/uC-FS/Source/fs_dir.c **** 
 585:rtos/uC-FS/Source/fs_dir.c **** 
 586:rtos/uC-FS/Source/fs_dir.c **** 
 587:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- RELEASE DIR LO
 588:rtos/uC-FS/Source/fs_dir.c ****     FSDir_ReleaseUnlock(p_dir);
 589:rtos/uC-FS/Source/fs_dir.c **** }
 590:rtos/uC-FS/Source/fs_dir.c **** 
 591:rtos/uC-FS/Source/fs_dir.c **** 
 592:rtos/uC-FS/Source/fs_dir.c **** /*
 593:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 594:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 595:rtos/uC-FS/Source/fs_dir.c **** *                                   DIRECTORY MANAGEMENT FUNCTIONS
 596:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 597:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 598:rtos/uC-FS/Source/fs_dir.c **** */
 599:rtos/uC-FS/Source/fs_dir.c **** 
 600:rtos/uC-FS/Source/fs_dir.c **** /*
ARM GAS  /tmp/cc9zxjuG.s 			page 12


 601:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 602:rtos/uC-FS/Source/fs_dir.c **** *                                          FSDir_GetDirCnt()
 603:rtos/uC-FS/Source/fs_dir.c **** *
 604:rtos/uC-FS/Source/fs_dir.c **** * Description : Get the number of open directories.
 605:rtos/uC-FS/Source/fs_dir.c **** *
 606:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : none.
 607:rtos/uC-FS/Source/fs_dir.c **** *
 608:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : The number of open directories.
 609:rtos/uC-FS/Source/fs_dir.c **** *
 610:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : none.
 611:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 612:rtos/uC-FS/Source/fs_dir.c **** */
 613:rtos/uC-FS/Source/fs_dir.c **** 
 614:rtos/uC-FS/Source/fs_dir.c **** FS_QTY  FSDir_GetDirCnt (void)
 615:rtos/uC-FS/Source/fs_dir.c **** {
 616:rtos/uC-FS/Source/fs_dir.c ****     FS_QTY  dir_cnt;
 617:rtos/uC-FS/Source/fs_dir.c ****     FS_ERR  err;
 618:rtos/uC-FS/Source/fs_dir.c **** 
 619:rtos/uC-FS/Source/fs_dir.c **** 
 620:rtos/uC-FS/Source/fs_dir.c ****     if (FSDir_ModuleEn == DEF_DISABLED) {                       /* Dir module run-time dis'd.      
 621:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 622:rtos/uC-FS/Source/fs_dir.c ****     }
 623:rtos/uC-FS/Source/fs_dir.c **** 
 624:rtos/uC-FS/Source/fs_dir.c **** 
 625:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------ ACQUIRE FS LO
 626:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Lock(&err);
 627:rtos/uC-FS/Source/fs_dir.c ****     if (err != FS_ERR_NONE) {
 628:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 629:rtos/uC-FS/Source/fs_dir.c ****     }
 630:rtos/uC-FS/Source/fs_dir.c **** 
 631:rtos/uC-FS/Source/fs_dir.c **** 
 632:rtos/uC-FS/Source/fs_dir.c **** 
 633:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* -------------------- GET DIR CNT
 634:rtos/uC-FS/Source/fs_dir.c ****     dir_cnt = FSDir_Cnt;
 635:rtos/uC-FS/Source/fs_dir.c **** 
 636:rtos/uC-FS/Source/fs_dir.c **** 
 637:rtos/uC-FS/Source/fs_dir.c **** 
 638:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------ RELEASE FS LO
 639:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Unlock();
 640:rtos/uC-FS/Source/fs_dir.c **** 
 641:rtos/uC-FS/Source/fs_dir.c ****     return (dir_cnt);
 642:rtos/uC-FS/Source/fs_dir.c **** }
 643:rtos/uC-FS/Source/fs_dir.c **** 
 644:rtos/uC-FS/Source/fs_dir.c **** 
 645:rtos/uC-FS/Source/fs_dir.c **** /*
 646:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 647:rtos/uC-FS/Source/fs_dir.c **** *                                        FSDir_GetDirCntMax()
 648:rtos/uC-FS/Source/fs_dir.c **** *
 649:rtos/uC-FS/Source/fs_dir.c **** * Description : Get the maximum possible number of open directories.
 650:rtos/uC-FS/Source/fs_dir.c **** *
 651:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : none.
 652:rtos/uC-FS/Source/fs_dir.c **** *
 653:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : The maximum number of open directories.
 654:rtos/uC-FS/Source/fs_dir.c **** *
 655:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : none.
 656:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 657:rtos/uC-FS/Source/fs_dir.c **** */
ARM GAS  /tmp/cc9zxjuG.s 			page 13


 658:rtos/uC-FS/Source/fs_dir.c **** 
 659:rtos/uC-FS/Source/fs_dir.c **** FS_QTY  FSDir_GetDirCntMax (void)
 660:rtos/uC-FS/Source/fs_dir.c **** {
 661:rtos/uC-FS/Source/fs_dir.c ****     FS_QTY  dir_cnt_max;
 662:rtos/uC-FS/Source/fs_dir.c **** 
 663:rtos/uC-FS/Source/fs_dir.c **** 
 664:rtos/uC-FS/Source/fs_dir.c ****     if (FSDir_ModuleEn == DEF_DISABLED) {                       /* Dir module run-time dis'd.      
 665:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 666:rtos/uC-FS/Source/fs_dir.c ****     }
 667:rtos/uC-FS/Source/fs_dir.c **** 
 668:rtos/uC-FS/Source/fs_dir.c **** 
 669:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------ GET DIR CNT M
 670:rtos/uC-FS/Source/fs_dir.c ****     dir_cnt_max = FSDir_DirCntMax;
 671:rtos/uC-FS/Source/fs_dir.c **** 
 672:rtos/uC-FS/Source/fs_dir.c ****     return (dir_cnt_max);
 673:rtos/uC-FS/Source/fs_dir.c **** }
 674:rtos/uC-FS/Source/fs_dir.c **** 
 675:rtos/uC-FS/Source/fs_dir.c **** 
 676:rtos/uC-FS/Source/fs_dir.c **** /*
 677:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 678:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 679:rtos/uC-FS/Source/fs_dir.c **** *                                         INTERNAL FUNCTIONS
 680:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 681:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 682:rtos/uC-FS/Source/fs_dir.c **** */
 683:rtos/uC-FS/Source/fs_dir.c **** 
 684:rtos/uC-FS/Source/fs_dir.c **** /*
 685:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 686:rtos/uC-FS/Source/fs_dir.c **** *                                         FSDir_ModuleInit()
 687:rtos/uC-FS/Source/fs_dir.c **** *
 688:rtos/uC-FS/Source/fs_dir.c **** * Description : Initialize File System Directory Management module.
 689:rtos/uC-FS/Source/fs_dir.c **** *
 690:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : dir_cnt     Number of directories to allocate.
 691:rtos/uC-FS/Source/fs_dir.c **** *
 692:rtos/uC-FS/Source/fs_dir.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 693:rtos/uC-FS/Source/fs_dir.c **** *               ----------  Argument validated by caller.
 694:rtos/uC-FS/Source/fs_dir.c **** *
 695:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NONE         Module initialized.
 696:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_MEM_ALLOC    Memory could not be allocated.
 697:rtos/uC-FS/Source/fs_dir.c **** *
 698:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : none.
 699:rtos/uC-FS/Source/fs_dir.c **** *
 700:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : (1) If no directories are configured, then the directory module is run-time disable
 701:rtos/uC-FS/Source/fs_dir.c **** *                   All interface functions will return errors.
 702:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 703:rtos/uC-FS/Source/fs_dir.c **** */
 704:rtos/uC-FS/Source/fs_dir.c **** 
 705:rtos/uC-FS/Source/fs_dir.c **** void  FSDir_ModuleInit (FS_QTY   dir_cnt,
 706:rtos/uC-FS/Source/fs_dir.c ****                         FS_ERR  *p_err)
 707:rtos/uC-FS/Source/fs_dir.c **** {
 708:rtos/uC-FS/Source/fs_dir.c ****     CPU_SIZE_T  octets_reqd;
 709:rtos/uC-FS/Source/fs_dir.c ****     LIB_ERR     pool_err;
 710:rtos/uC-FS/Source/fs_dir.c **** 
 711:rtos/uC-FS/Source/fs_dir.c **** 
 712:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_TRIAL_EN == DEF_ENABLED)                            /* Trial limitation: max 1 dir.    
 713:rtos/uC-FS/Source/fs_dir.c ****     if (dir_cnt > FS_TRIAL_MAX_DIR_CNT) {
 714:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_INVALID_CFG;
ARM GAS  /tmp/cc9zxjuG.s 			page 14


 715:rtos/uC-FS/Source/fs_dir.c ****         return;
 716:rtos/uC-FS/Source/fs_dir.c ****     }
 717:rtos/uC-FS/Source/fs_dir.c **** #endif
 718:rtos/uC-FS/Source/fs_dir.c **** 
 719:rtos/uC-FS/Source/fs_dir.c ****     FSDir_ModuleEn  = DEF_DISABLED;
 720:rtos/uC-FS/Source/fs_dir.c ****     FSDir_DirCntMax = 0u;
 721:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Cnt       = 0u;
 722:rtos/uC-FS/Source/fs_dir.c **** 
 723:rtos/uC-FS/Source/fs_dir.c ****     if (dir_cnt == 0u) {                                        /* Dir module run-time dis'd.      
 724:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NONE;
 725:rtos/uC-FS/Source/fs_dir.c ****         return;
 726:rtos/uC-FS/Source/fs_dir.c ****     }
 727:rtos/uC-FS/Source/fs_dir.c **** 
 728:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------- INIT DEV POO
 729:rtos/uC-FS/Source/fs_dir.c ****     Mem_PoolCreate(&FSDir_Pool,
 730:rtos/uC-FS/Source/fs_dir.c ****                     DEF_NULL,
 731:rtos/uC-FS/Source/fs_dir.c ****                     0,
 732:rtos/uC-FS/Source/fs_dir.c ****                     dir_cnt,
 733:rtos/uC-FS/Source/fs_dir.c ****                     sizeof(FS_DIR),
 734:rtos/uC-FS/Source/fs_dir.c ****                     sizeof(CPU_ALIGN),
 735:rtos/uC-FS/Source/fs_dir.c ****                    &octets_reqd,
 736:rtos/uC-FS/Source/fs_dir.c ****                    &pool_err);
 737:rtos/uC-FS/Source/fs_dir.c **** 
 738:rtos/uC-FS/Source/fs_dir.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
 739:rtos/uC-FS/Source/fs_dir.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 740:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ModuleInit(): Could not alloc mem for dirs: %d octets required.\r\n",
 741:rtos/uC-FS/Source/fs_dir.c ****         return;
 742:rtos/uC-FS/Source/fs_dir.c ****     }
 743:rtos/uC-FS/Source/fs_dir.c **** 
 744:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Tbl = (FS_DIR **)Mem_HeapAlloc(dir_cnt * sizeof(FS_DIR *),
 745:rtos/uC-FS/Source/fs_dir.c ****                                          sizeof(CPU_ALIGN),
 746:rtos/uC-FS/Source/fs_dir.c ****                                         &octets_reqd,
 747:rtos/uC-FS/Source/fs_dir.c ****                                         &pool_err);
 748:rtos/uC-FS/Source/fs_dir.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
 749:rtos/uC-FS/Source/fs_dir.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 750:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ModuleInit(): Could not alloc mem for dirs: %d octets required.\r\n",
 751:rtos/uC-FS/Source/fs_dir.c ****         return;
 752:rtos/uC-FS/Source/fs_dir.c ****     }
 753:rtos/uC-FS/Source/fs_dir.c **** 
 754:rtos/uC-FS/Source/fs_dir.c ****     Mem_Clr(FSDir_Tbl, dir_cnt * sizeof(FS_DIR *));
 755:rtos/uC-FS/Source/fs_dir.c **** 
 756:rtos/uC-FS/Source/fs_dir.c ****     FSDir_ModuleEn  = DEF_ENABLED;
 757:rtos/uC-FS/Source/fs_dir.c ****     FSDir_DirCntMax = dir_cnt;
 758:rtos/uC-FS/Source/fs_dir.c **** 
 759:rtos/uC-FS/Source/fs_dir.c ****    *p_err = FS_ERR_NONE;
 760:rtos/uC-FS/Source/fs_dir.c **** }
 761:rtos/uC-FS/Source/fs_dir.c **** 
 762:rtos/uC-FS/Source/fs_dir.c **** 
 763:rtos/uC-FS/Source/fs_dir.c **** /*
 764:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 765:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 766:rtos/uC-FS/Source/fs_dir.c **** *                                           LOCAL FUNCTIONS
 767:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 768:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 769:rtos/uC-FS/Source/fs_dir.c **** */
 770:rtos/uC-FS/Source/fs_dir.c **** 
 771:rtos/uC-FS/Source/fs_dir.c **** /*
ARM GAS  /tmp/cc9zxjuG.s 			page 15


 772:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 773:rtos/uC-FS/Source/fs_dir.c **** *                                       FSDir_AcquireLockChk()
 774:rtos/uC-FS/Source/fs_dir.c **** *
 775:rtos/uC-FS/Source/fs_dir.c **** * Description : Acquire directory reference & lock.
 776:rtos/uC-FS/Source/fs_dir.c **** *
 777:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir       Pointer to directory.
 778:rtos/uC-FS/Source/fs_dir.c **** *               ----------  Argument validated by caller.
 779:rtos/uC-FS/Source/fs_dir.c **** *
 780:rtos/uC-FS/Source/fs_dir.c **** *               chngd       Indicates whether device may have changed (unused):
 781:rtos/uC-FS/Source/fs_dir.c **** *
 782:rtos/uC-FS/Source/fs_dir.c **** *                               DEF_YES    Device may have changed.
 783:rtos/uC-FS/Source/fs_dir.c **** *                               DEF_NO     Device must NOT have changed.
 784:rtos/uC-FS/Source/fs_dir.c **** *
 785:rtos/uC-FS/Source/fs_dir.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 786:rtos/uC-FS/Source/fs_dir.c **** *               ----------  Argument validated by caller.
 787:rtos/uC-FS/Source/fs_dir.c **** *
 788:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NONE            Directory reference & lock acquired.
 789:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_DEV_CHNGD       Device has changed.
 790:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_DIR_NOT_OPEN    Directory is not open.
 791:rtos/uC-FS/Source/fs_dir.c **** *
 792:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : Pointer to a directory, if found.
 793:rtos/uC-FS/Source/fs_dir.c **** *               Pointer to NULL,        otherwise.
 794:rtos/uC-FS/Source/fs_dir.c **** *
 795:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : none.
 796:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 797:rtos/uC-FS/Source/fs_dir.c **** */
 798:rtos/uC-FS/Source/fs_dir.c **** 
 799:rtos/uC-FS/Source/fs_dir.c **** static  FS_DIR  *FSDir_AcquireLockChk (FS_DIR       *p_dir,
 800:rtos/uC-FS/Source/fs_dir.c ****                                        CPU_BOOLEAN   chngd,
 801:rtos/uC-FS/Source/fs_dir.c ****                                        FS_ERR       *p_err)
 802:rtos/uC-FS/Source/fs_dir.c **** {
 803:rtos/uC-FS/Source/fs_dir.c ****     CPU_BOOLEAN  lock_success;
 804:rtos/uC-FS/Source/fs_dir.c **** 
 805:rtos/uC-FS/Source/fs_dir.c **** 
 806:rtos/uC-FS/Source/fs_dir.c ****     (void)chngd;
 807:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- ACQUIRE DIR LO
 808:rtos/uC-FS/Source/fs_dir.c ****     p_dir = FSDir_Acquire(p_dir);                               /* Acquire dir ref.                
 809:rtos/uC-FS/Source/fs_dir.c **** 
 810:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir == (FS_DIR *)0) {                                 /* Rtn err if dir not found.       
 811:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_NOT_OPEN;
 812:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 813:rtos/uC-FS/Source/fs_dir.c ****     }
 814:rtos/uC-FS/Source/fs_dir.c **** 
 815:rtos/uC-FS/Source/fs_dir.c ****     lock_success = FSDir_Lock(p_dir);
 816:rtos/uC-FS/Source/fs_dir.c ****     if (lock_success != DEF_YES) {
 817:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_OS_LOCK;
 818:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 819:rtos/uC-FS/Source/fs_dir.c ****     }
 820:rtos/uC-FS/Source/fs_dir.c **** 
 821:rtos/uC-FS/Source/fs_dir.c **** 
 822:rtos/uC-FS/Source/fs_dir.c **** 
 823:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------- VALIDATE DIR
 824:rtos/uC-FS/Source/fs_dir.c ****     switch (p_dir->State) {
 825:rtos/uC-FS/Source/fs_dir.c ****         case FS_DIR_STATE_OPEN:
 826:rtos/uC-FS/Source/fs_dir.c ****         case FS_DIR_STATE_EOF:
 827:rtos/uC-FS/Source/fs_dir.c ****         case FS_DIR_STATE_ERR:
 828:rtos/uC-FS/Source/fs_dir.c ****             *p_err = FS_ERR_NONE;
ARM GAS  /tmp/cc9zxjuG.s 			page 16


 829:rtos/uC-FS/Source/fs_dir.c ****              return (p_dir);
 830:rtos/uC-FS/Source/fs_dir.c **** 
 831:rtos/uC-FS/Source/fs_dir.c **** 
 832:rtos/uC-FS/Source/fs_dir.c ****         case FS_DIR_STATE_CLOSED:                               /* Rtn NULL if dir not open.       
 833:rtos/uC-FS/Source/fs_dir.c ****         case FS_DIR_STATE_CLOSING:
 834:rtos/uC-FS/Source/fs_dir.c ****         case FS_DIR_STATE_OPENING:
 835:rtos/uC-FS/Source/fs_dir.c ****         default:
 836:rtos/uC-FS/Source/fs_dir.c ****             *p_err = FS_ERR_DIR_NOT_OPEN;
 837:rtos/uC-FS/Source/fs_dir.c ****              FSDir_ReleaseUnlock(p_dir);
 838:rtos/uC-FS/Source/fs_dir.c ****              return ((FS_DIR *)0);
 839:rtos/uC-FS/Source/fs_dir.c ****     }
 840:rtos/uC-FS/Source/fs_dir.c **** }
 841:rtos/uC-FS/Source/fs_dir.c **** 
 842:rtos/uC-FS/Source/fs_dir.c **** 
 843:rtos/uC-FS/Source/fs_dir.c **** /*
 844:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 845:rtos/uC-FS/Source/fs_dir.c **** *                                           FSDir_Acquire()
 846:rtos/uC-FS/Source/fs_dir.c **** *
 847:rtos/uC-FS/Source/fs_dir.c **** * Description : Acquire a reference to a directory.
 848:rtos/uC-FS/Source/fs_dir.c **** *
 849:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir       Pointer to directory.
 850:rtos/uC-FS/Source/fs_dir.c **** *               ----------  Argument validated by caller.
 851:rtos/uC-FS/Source/fs_dir.c **** *
 852:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : Pointer to a directory, if available.
 853:rtos/uC-FS/Source/fs_dir.c **** *               Pointer to NULL,        otherwise.
 854:rtos/uC-FS/Source/fs_dir.c **** *
 855:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : none.
 856:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 857:rtos/uC-FS/Source/fs_dir.c **** */
 858:rtos/uC-FS/Source/fs_dir.c **** 
 859:rtos/uC-FS/Source/fs_dir.c **** static  FS_DIR  *FSDir_Acquire (FS_DIR  *p_dir)
 860:rtos/uC-FS/Source/fs_dir.c **** {
 861:rtos/uC-FS/Source/fs_dir.c ****     FS_ERR  err;
 862:rtos/uC-FS/Source/fs_dir.c **** 
 863:rtos/uC-FS/Source/fs_dir.c **** 
 864:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------ ACQUIRE FS LO
 865:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Lock(&err);
 866:rtos/uC-FS/Source/fs_dir.c ****     if (err != FS_ERR_NONE) {
 867:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 868:rtos/uC-FS/Source/fs_dir.c ****     }
 869:rtos/uC-FS/Source/fs_dir.c **** 
 870:rtos/uC-FS/Source/fs_dir.c **** 
 871:rtos/uC-FS/Source/fs_dir.c **** 
 872:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* -------------------- INC REF CNT
 873:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir->RefCnt == 0u) {                                  /* Rtn NULL if dir not ref'd.      
 874:rtos/uC-FS/Source/fs_dir.c ****         FS_OS_Unlock();
 875:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 876:rtos/uC-FS/Source/fs_dir.c ****     }
 877:rtos/uC-FS/Source/fs_dir.c **** 
 878:rtos/uC-FS/Source/fs_dir.c ****     p_dir->RefCnt++;
 879:rtos/uC-FS/Source/fs_dir.c **** 
 880:rtos/uC-FS/Source/fs_dir.c **** 
 881:rtos/uC-FS/Source/fs_dir.c **** 
 882:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------ RELEASE FS LO
 883:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Unlock();
 884:rtos/uC-FS/Source/fs_dir.c **** 
 885:rtos/uC-FS/Source/fs_dir.c ****     return (p_dir);
ARM GAS  /tmp/cc9zxjuG.s 			page 17


 886:rtos/uC-FS/Source/fs_dir.c **** }
 887:rtos/uC-FS/Source/fs_dir.c **** 
 888:rtos/uC-FS/Source/fs_dir.c **** 
 889:rtos/uC-FS/Source/fs_dir.c **** /*
 890:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 891:rtos/uC-FS/Source/fs_dir.c **** *                                        FSDir_ReleaseUnlock()
 892:rtos/uC-FS/Source/fs_dir.c **** *
 893:rtos/uC-FS/Source/fs_dir.c **** * Description : Release directory reference & lock.
 894:rtos/uC-FS/Source/fs_dir.c **** *
 895:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir       Pointer to directory.
 896:rtos/uC-FS/Source/fs_dir.c **** *               -----       Argument validated by caller.
 897:rtos/uC-FS/Source/fs_dir.c **** *
 898:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : none.
 899:rtos/uC-FS/Source/fs_dir.c **** *
 900:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : none.
 901:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 902:rtos/uC-FS/Source/fs_dir.c **** */
 903:rtos/uC-FS/Source/fs_dir.c **** 
 904:rtos/uC-FS/Source/fs_dir.c **** static  void  FSDir_ReleaseUnlock (FS_DIR  *p_dir)
 905:rtos/uC-FS/Source/fs_dir.c **** {
 906:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Unlock(p_dir);
 907:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Release(p_dir);
 908:rtos/uC-FS/Source/fs_dir.c **** }
 909:rtos/uC-FS/Source/fs_dir.c **** 
 910:rtos/uC-FS/Source/fs_dir.c **** 
 911:rtos/uC-FS/Source/fs_dir.c **** /*
 912:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 913:rtos/uC-FS/Source/fs_dir.c **** *                                           FSDir_Release()
 914:rtos/uC-FS/Source/fs_dir.c **** *
 915:rtos/uC-FS/Source/fs_dir.c **** * Description : Release a reference to a directory.
 916:rtos/uC-FS/Source/fs_dir.c **** *
 917:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir       Pointer to directory.
 918:rtos/uC-FS/Source/fs_dir.c **** *               -----       Argument validated by caller.
 919:rtos/uC-FS/Source/fs_dir.c **** *
 920:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : none.
 921:rtos/uC-FS/Source/fs_dir.c **** *
 922:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : (1) A volume reference might have been acquired in 'FSDir_NameParseChk()'; the volu
 923:rtos/uC-FS/Source/fs_dir.c **** *                   reference would NOT have been acquired if the named volume did not exist or exi
 924:rtos/uC-FS/Source/fs_dir.c **** *                   but was not mounted.
 925:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 926:rtos/uC-FS/Source/fs_dir.c **** */
 927:rtos/uC-FS/Source/fs_dir.c **** 
 928:rtos/uC-FS/Source/fs_dir.c **** static  void  FSDir_Release (FS_DIR  *p_dir)
 929:rtos/uC-FS/Source/fs_dir.c **** {
 930:rtos/uC-FS/Source/fs_dir.c ****     FS_ERR   err;
 931:rtos/uC-FS/Source/fs_dir.c ****     FS_CTR   ref_cnt;
 932:rtos/uC-FS/Source/fs_dir.c ****     FS_VOL  *p_vol;
 933:rtos/uC-FS/Source/fs_dir.c **** 
 934:rtos/uC-FS/Source/fs_dir.c **** 
 935:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ------------------ ACQUIRE FS LO
 936:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Lock(&err);
 937:rtos/uC-FS/Source/fs_dir.c ****     if (err != FS_ERR_NONE) {
 938:rtos/uC-FS/Source/fs_dir.c ****         return;
 939:rtos/uC-FS/Source/fs_dir.c ****     }
 940:rtos/uC-FS/Source/fs_dir.c **** 
 941:rtos/uC-FS/Source/fs_dir.c **** 
 942:rtos/uC-FS/Source/fs_dir.c **** 
ARM GAS  /tmp/cc9zxjuG.s 			page 18


 943:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* -------------------- DEC REF CNT
 944:rtos/uC-FS/Source/fs_dir.c ****     ref_cnt = p_dir->RefCnt;
 945:rtos/uC-FS/Source/fs_dir.c ****     if (ref_cnt == 1u) {
 946:rtos/uC-FS/Source/fs_dir.c ****         p_vol = p_dir->VolPtr;
 947:rtos/uC-FS/Source/fs_dir.c ****         FSDir_ObjFree(p_dir);
 948:rtos/uC-FS/Source/fs_dir.c ****     } else if (ref_cnt > 0u) {
 949:rtos/uC-FS/Source/fs_dir.c ****         p_dir->RefCnt = ref_cnt - 1u;
 950:rtos/uC-FS/Source/fs_dir.c ****     } else {
 951:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_DBG(("FSDir_Release(): Release cnt dec'd to zero.\r\n"));
 952:rtos/uC-FS/Source/fs_dir.c ****     }
 953:rtos/uC-FS/Source/fs_dir.c **** 
 954:rtos/uC-FS/Source/fs_dir.c ****     FS_OS_Unlock();
 955:rtos/uC-FS/Source/fs_dir.c **** 
 956:rtos/uC-FS/Source/fs_dir.c **** 
 957:rtos/uC-FS/Source/fs_dir.c **** 
 958:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* -------------------- RELEASE VOL
 959:rtos/uC-FS/Source/fs_dir.c ****     if (ref_cnt == 1u) {
 960:rtos/uC-FS/Source/fs_dir.c ****         if (p_vol != (FS_VOL *)0) {
 961:rtos/uC-FS/Source/fs_dir.c ****             FSVol_Release(p_vol);                               /* Release vol (see Note #1).      
 962:rtos/uC-FS/Source/fs_dir.c ****         }
 963:rtos/uC-FS/Source/fs_dir.c ****     }
 964:rtos/uC-FS/Source/fs_dir.c **** }
 965:rtos/uC-FS/Source/fs_dir.c **** 
 966:rtos/uC-FS/Source/fs_dir.c **** 
 967:rtos/uC-FS/Source/fs_dir.c **** /*
 968:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 969:rtos/uC-FS/Source/fs_dir.c **** *                                            FSDir_Lock()
 970:rtos/uC-FS/Source/fs_dir.c **** *
 971:rtos/uC-FS/Source/fs_dir.c **** * Description : Acquire directory lock.
 972:rtos/uC-FS/Source/fs_dir.c **** *
 973:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir       Pointer to directory.
 974:rtos/uC-FS/Source/fs_dir.c **** *               -----       Argument validated by caller.
 975:rtos/uC-FS/Source/fs_dir.c **** *
 976:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : none.
 977:rtos/uC-FS/Source/fs_dir.c **** *
 978:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : none.
 979:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 980:rtos/uC-FS/Source/fs_dir.c **** */
 981:rtos/uC-FS/Source/fs_dir.c **** 
 982:rtos/uC-FS/Source/fs_dir.c **** static  CPU_BOOLEAN  FSDir_Lock (FS_DIR  *p_dir)
 983:rtos/uC-FS/Source/fs_dir.c **** {
 984:rtos/uC-FS/Source/fs_dir.c ****     CPU_BOOLEAN  locked;
 985:rtos/uC-FS/Source/fs_dir.c **** 
 986:rtos/uC-FS/Source/fs_dir.c **** 
 987:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 988:rtos/uC-FS/Source/fs_dir.c ****     locked = FSVol_Lock(p_dir->VolPtr);
 989:rtos/uC-FS/Source/fs_dir.c **** 
 990:rtos/uC-FS/Source/fs_dir.c ****     return (locked);
 991:rtos/uC-FS/Source/fs_dir.c **** }
 992:rtos/uC-FS/Source/fs_dir.c **** 
 993:rtos/uC-FS/Source/fs_dir.c **** 
 994:rtos/uC-FS/Source/fs_dir.c **** /*
 995:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
 996:rtos/uC-FS/Source/fs_dir.c **** *                                           FSDir_Unlock()
 997:rtos/uC-FS/Source/fs_dir.c **** *
 998:rtos/uC-FS/Source/fs_dir.c **** * Description : Release directory lock.
 999:rtos/uC-FS/Source/fs_dir.c **** *
ARM GAS  /tmp/cc9zxjuG.s 			page 19


1000:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir       Pointer to directory.
1001:rtos/uC-FS/Source/fs_dir.c **** *               -----       Argument validated by caller.
1002:rtos/uC-FS/Source/fs_dir.c **** *
1003:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : none.
1004:rtos/uC-FS/Source/fs_dir.c **** *
1005:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : none.
1006:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
1007:rtos/uC-FS/Source/fs_dir.c **** */
1008:rtos/uC-FS/Source/fs_dir.c **** 
1009:rtos/uC-FS/Source/fs_dir.c **** static  void  FSDir_Unlock (FS_DIR  *p_dir)
1010:rtos/uC-FS/Source/fs_dir.c **** {
1011:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- RELEASE DEV LO
1012:rtos/uC-FS/Source/fs_dir.c ****     FSVol_Unlock(p_dir->VolPtr);
1013:rtos/uC-FS/Source/fs_dir.c **** }
1014:rtos/uC-FS/Source/fs_dir.c **** 
1015:rtos/uC-FS/Source/fs_dir.c **** 
1016:rtos/uC-FS/Source/fs_dir.c **** /*
1017:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
1018:rtos/uC-FS/Source/fs_dir.c **** *                                           FSDir_ObjClr()
1019:rtos/uC-FS/Source/fs_dir.c **** *
1020:rtos/uC-FS/Source/fs_dir.c **** * Description : Clear a directory object.
1021:rtos/uC-FS/Source/fs_dir.c **** *
1022:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir       Pointer to directory.
1023:rtos/uC-FS/Source/fs_dir.c **** *               -----       Argument validated by caller.
1024:rtos/uC-FS/Source/fs_dir.c **** *
1025:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : none.
1026:rtos/uC-FS/Source/fs_dir.c **** *
1027:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : (1) The function caller MUST hold the file system lock.
1028:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
1029:rtos/uC-FS/Source/fs_dir.c **** */
1030:rtos/uC-FS/Source/fs_dir.c **** 
1031:rtos/uC-FS/Source/fs_dir.c **** static  void  FSDir_ObjClr (FS_DIR  *p_dir)
1032:rtos/uC-FS/Source/fs_dir.c **** {
  29              		.loc 1 1032 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1033:rtos/uC-FS/Source/fs_dir.c ****     p_dir->State          =  FS_DIR_STATE_CLOSED;
  34              		.loc 1 1033 5 view .LVU1
  35              		.loc 1 1033 27 is_stmt 0 view .LVU2
  36 0000 0023     		movs	r3, #0
  37 0002 0380     		strh	r3, [r0]	@ movhi
1034:rtos/uC-FS/Source/fs_dir.c ****     p_dir->RefCnt         =  0u;
  38              		.loc 1 1034 5 is_stmt 1 view .LVU3
  39              		.loc 1 1034 27 is_stmt 0 view .LVU4
  40 0004 4360     		str	r3, [r0, #4]
1035:rtos/uC-FS/Source/fs_dir.c ****     p_dir->RefreshCnt     =  0u;
  41              		.loc 1 1035 5 is_stmt 1 view .LVU5
  42              		.loc 1 1035 27 is_stmt 0 view .LVU6
  43 0006 8360     		str	r3, [r0, #8]
1036:rtos/uC-FS/Source/fs_dir.c **** 
1037:rtos/uC-FS/Source/fs_dir.c ****     p_dir->Offset         =  0u;
  44              		.loc 1 1037 5 is_stmt 1 view .LVU7
  45              		.loc 1 1037 27 is_stmt 0 view .LVU8
  46 0008 C360     		str	r3, [r0, #12]
1038:rtos/uC-FS/Source/fs_dir.c **** 
ARM GAS  /tmp/cc9zxjuG.s 			page 20


1039:rtos/uC-FS/Source/fs_dir.c ****     p_dir->VolPtr         = (FS_VOL *)0;
  47              		.loc 1 1039 5 is_stmt 1 view .LVU9
  48              		.loc 1 1039 27 is_stmt 0 view .LVU10
  49 000a 0361     		str	r3, [r0, #16]
1040:rtos/uC-FS/Source/fs_dir.c ****     p_dir->DataPtr        = (void   *)0;
  50              		.loc 1 1040 5 is_stmt 1 view .LVU11
  51              		.loc 1 1040 27 is_stmt 0 view .LVU12
  52 000c 4361     		str	r3, [r0, #20]
1041:rtos/uC-FS/Source/fs_dir.c **** 
1042:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_CTR_STAT_EN   == DEF_ENABLED)
1043:rtos/uC-FS/Source/fs_dir.c ****     p_dir->StatRdEntryCtr =  0u;
1044:rtos/uC-FS/Source/fs_dir.c **** #endif
1045:rtos/uC-FS/Source/fs_dir.c **** }
  53              		.loc 1 1045 1 view .LVU13
  54 000e 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE13:
  58              		.section	.text.FSDir_Acquire,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	FSDir_Acquire:
  66              	.LVL1:
  67              	.LFB8:
 860:rtos/uC-FS/Source/fs_dir.c ****     FS_ERR  err;
  68              		.loc 1 860 1 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 0, uses_anonymous_args = 0
 860:rtos/uC-FS/Source/fs_dir.c ****     FS_ERR  err;
  72              		.loc 1 860 1 is_stmt 0 view .LVU15
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
  78 0002 82B0     		sub	sp, sp, #8
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 16
  81 0004 0446     		mov	r4, r0
 861:rtos/uC-FS/Source/fs_dir.c **** 
  82              		.loc 1 861 5 is_stmt 1 view .LVU16
 865:rtos/uC-FS/Source/fs_dir.c ****     if (err != FS_ERR_NONE) {
  83              		.loc 1 865 5 view .LVU17
  84 0006 0DF10600 		add	r0, sp, #6
  85              	.LVL2:
 865:rtos/uC-FS/Source/fs_dir.c ****     if (err != FS_ERR_NONE) {
  86              		.loc 1 865 5 is_stmt 0 view .LVU18
  87 000a FFF7FEFF 		bl	FS_OS_Lock
  88              	.LVL3:
 866:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
  89              		.loc 1 866 5 is_stmt 1 view .LVU19
 866:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
  90              		.loc 1 866 13 is_stmt 0 view .LVU20
  91 000e BDF80630 		ldrh	r3, [sp, #6]
ARM GAS  /tmp/cc9zxjuG.s 			page 21


 866:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
  92              		.loc 1 866 8 view .LVU21
  93 0012 63B9     		cbnz	r3, .L5
 873:rtos/uC-FS/Source/fs_dir.c ****         FS_OS_Unlock();
  94              		.loc 1 873 5 is_stmt 1 view .LVU22
 873:rtos/uC-FS/Source/fs_dir.c ****         FS_OS_Unlock();
  95              		.loc 1 873 14 is_stmt 0 view .LVU23
  96 0014 6368     		ldr	r3, [r4, #4]
 873:rtos/uC-FS/Source/fs_dir.c ****         FS_OS_Unlock();
  97              		.loc 1 873 8 view .LVU24
  98 0016 33B1     		cbz	r3, .L7
 878:rtos/uC-FS/Source/fs_dir.c **** 
  99              		.loc 1 878 5 is_stmt 1 view .LVU25
 878:rtos/uC-FS/Source/fs_dir.c **** 
 100              		.loc 1 878 18 is_stmt 0 view .LVU26
 101 0018 0133     		adds	r3, r3, #1
 102 001a 6360     		str	r3, [r4, #4]
 883:rtos/uC-FS/Source/fs_dir.c **** 
 103              		.loc 1 883 5 is_stmt 1 view .LVU27
 104 001c FFF7FEFF 		bl	FS_OS_Unlock
 105              	.LVL4:
 885:rtos/uC-FS/Source/fs_dir.c **** }
 106              		.loc 1 885 5 view .LVU28
 885:rtos/uC-FS/Source/fs_dir.c **** }
 107              		.loc 1 885 12 is_stmt 0 view .LVU29
 108 0020 2046     		mov	r0, r4
 109              	.L2:
 886:rtos/uC-FS/Source/fs_dir.c **** 
 110              		.loc 1 886 1 view .LVU30
 111 0022 02B0     		add	sp, sp, #8
 112              	.LCFI2:
 113              		.cfi_remember_state
 114              		.cfi_def_cfa_offset 8
 115              		@ sp needed
 116 0024 10BD     		pop	{r4, pc}
 117              	.LVL5:
 118              	.L7:
 119              	.LCFI3:
 120              		.cfi_restore_state
 874:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 121              		.loc 1 874 9 is_stmt 1 view .LVU31
 122 0026 FFF7FEFF 		bl	FS_OS_Unlock
 123              	.LVL6:
 875:rtos/uC-FS/Source/fs_dir.c ****     }
 124              		.loc 1 875 9 view .LVU32
 875:rtos/uC-FS/Source/fs_dir.c ****     }
 125              		.loc 1 875 16 is_stmt 0 view .LVU33
 126 002a 0020     		movs	r0, #0
 127 002c F9E7     		b	.L2
 128              	.L5:
 867:rtos/uC-FS/Source/fs_dir.c ****     }
 129              		.loc 1 867 16 view .LVU34
 130 002e 0020     		movs	r0, #0
 131 0030 F7E7     		b	.L2
 132              		.cfi_endproc
 133              	.LFE8:
 135              		.section	.text.FSDir_Lock,"ax",%progbits
ARM GAS  /tmp/cc9zxjuG.s 			page 22


 136              		.align	1
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	FSDir_Lock:
 143              	.LVL7:
 144              	.LFB11:
 983:rtos/uC-FS/Source/fs_dir.c ****     CPU_BOOLEAN  locked;
 145              		.loc 1 983 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 983:rtos/uC-FS/Source/fs_dir.c ****     CPU_BOOLEAN  locked;
 149              		.loc 1 983 1 is_stmt 0 view .LVU36
 150 0000 08B5     		push	{r3, lr}
 151              	.LCFI4:
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 3, -8
 154              		.cfi_offset 14, -4
 984:rtos/uC-FS/Source/fs_dir.c **** 
 155              		.loc 1 984 5 is_stmt 1 view .LVU37
 988:rtos/uC-FS/Source/fs_dir.c **** 
 156              		.loc 1 988 5 view .LVU38
 988:rtos/uC-FS/Source/fs_dir.c **** 
 157              		.loc 1 988 14 is_stmt 0 view .LVU39
 158 0002 0069     		ldr	r0, [r0, #16]
 159              	.LVL8:
 988:rtos/uC-FS/Source/fs_dir.c **** 
 160              		.loc 1 988 14 view .LVU40
 161 0004 FFF7FEFF 		bl	FSVol_Lock
 162              	.LVL9:
 990:rtos/uC-FS/Source/fs_dir.c **** }
 163              		.loc 1 990 5 is_stmt 1 view .LVU41
 991:rtos/uC-FS/Source/fs_dir.c **** 
 164              		.loc 1 991 1 is_stmt 0 view .LVU42
 165 0008 08BD     		pop	{r3, pc}
 166              		.cfi_endproc
 167              	.LFE11:
 169              		.section	.text.FSDir_Unlock,"ax",%progbits
 170              		.align	1
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	FSDir_Unlock:
 177              	.LVL10:
 178              	.LFB12:
1010:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- RELEASE DEV LO
 179              		.loc 1 1010 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
1010:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- RELEASE DEV LO
 183              		.loc 1 1010 1 is_stmt 0 view .LVU44
 184 0000 08B5     		push	{r3, lr}
 185              	.LCFI5:
ARM GAS  /tmp/cc9zxjuG.s 			page 23


 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
1012:rtos/uC-FS/Source/fs_dir.c **** }
 189              		.loc 1 1012 5 is_stmt 1 view .LVU45
 190 0002 0069     		ldr	r0, [r0, #16]
 191              	.LVL11:
1012:rtos/uC-FS/Source/fs_dir.c **** }
 192              		.loc 1 1012 5 is_stmt 0 view .LVU46
 193 0004 FFF7FEFF 		bl	FSVol_Unlock
 194              	.LVL12:
1013:rtos/uC-FS/Source/fs_dir.c **** 
 195              		.loc 1 1013 1 view .LVU47
 196 0008 08BD     		pop	{r3, pc}
 197              		.cfi_endproc
 198              	.LFE12:
 200              		.section	.text.FSDir_ObjFree,"ax",%progbits
 201              		.align	1
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	FSDir_ObjFree:
 208              	.LVL13:
 209              	.LFB14:
1046:rtos/uC-FS/Source/fs_dir.c **** 
1047:rtos/uC-FS/Source/fs_dir.c **** 
1048:rtos/uC-FS/Source/fs_dir.c **** /*
1049:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
1050:rtos/uC-FS/Source/fs_dir.c **** *                                           FSDir_ObjFree()
1051:rtos/uC-FS/Source/fs_dir.c **** *
1052:rtos/uC-FS/Source/fs_dir.c **** * Description : Free a directory object.
1053:rtos/uC-FS/Source/fs_dir.c **** *
1054:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : p_dir       Pointer to a directory.
1055:rtos/uC-FS/Source/fs_dir.c **** *               -----       Argument validated by caller.
1056:rtos/uC-FS/Source/fs_dir.c **** *
1057:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : none.
1058:rtos/uC-FS/Source/fs_dir.c **** *
1059:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : (1) The function caller MUST hold the file system lock.
1060:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
1061:rtos/uC-FS/Source/fs_dir.c **** */
1062:rtos/uC-FS/Source/fs_dir.c **** 
1063:rtos/uC-FS/Source/fs_dir.c **** static  void  FSDir_ObjFree (FS_DIR  *p_dir)
1064:rtos/uC-FS/Source/fs_dir.c **** {
 210              		.loc 1 1064 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		.loc 1 1064 1 is_stmt 0 view .LVU49
 215 0000 10B5     		push	{r4, lr}
 216              	.LCFI6:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 4, -8
 219              		.cfi_offset 14, -4
 220 0002 82B0     		sub	sp, sp, #8
 221              	.LCFI7:
 222              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc9zxjuG.s 			page 24


 223 0004 0446     		mov	r4, r0
1065:rtos/uC-FS/Source/fs_dir.c ****     LIB_ERR  pool_err;
 224              		.loc 1 1065 5 is_stmt 1 view .LVU50
1066:rtos/uC-FS/Source/fs_dir.c ****     FS_QTY   dir_ix;
 225              		.loc 1 1066 5 view .LVU51
1067:rtos/uC-FS/Source/fs_dir.c **** 
1068:rtos/uC-FS/Source/fs_dir.c **** 
1069:rtos/uC-FS/Source/fs_dir.c ****     for (dir_ix = 0u; dir_ix < FSDir_DirCntMax; dir_ix++) {
 226              		.loc 1 1069 5 view .LVU52
 227              	.LVL14:
 228              		.loc 1 1069 17 is_stmt 0 view .LVU53
 229 0006 0023     		movs	r3, #0
 230              	.LVL15:
 231              	.L13:
 232              		.loc 1 1069 23 is_stmt 1 discriminator 1 view .LVU54
 233              		.loc 1 1069 30 is_stmt 0 discriminator 1 view .LVU55
 234 0008 0F4A     		ldr	r2, .L19
 235 000a 1288     		ldrh	r2, [r2]
 236              		.loc 1 1069 5 discriminator 1 view .LVU56
 237 000c 9A42     		cmp	r2, r3
 238 000e 0CD9     		bls	.L15
1070:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == p_dir) {
 239              		.loc 1 1070 9 is_stmt 1 view .LVU57
 240              		.loc 1 1070 22 is_stmt 0 view .LVU58
 241 0010 0E4A     		ldr	r2, .L19+4
 242 0012 1268     		ldr	r2, [r2]
 243 0014 02EB8301 		add	r1, r2, r3, lsl #2
 244 0018 52F82320 		ldr	r2, [r2, r3, lsl #2]
 245              		.loc 1 1070 12 view .LVU59
 246 001c A242     		cmp	r2, r4
 247 001e 02D0     		beq	.L18
1069:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == p_dir) {
 248              		.loc 1 1069 49 is_stmt 1 discriminator 2 view .LVU60
1069:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == p_dir) {
 249              		.loc 1 1069 55 is_stmt 0 discriminator 2 view .LVU61
 250 0020 0133     		adds	r3, r3, #1
 251              	.LVL16:
1069:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == p_dir) {
 252              		.loc 1 1069 55 discriminator 2 view .LVU62
 253 0022 9BB2     		uxth	r3, r3
 254              	.LVL17:
1069:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == p_dir) {
 255              		.loc 1 1069 55 discriminator 2 view .LVU63
 256 0024 F0E7     		b	.L13
 257              	.L18:
1071:rtos/uC-FS/Source/fs_dir.c ****             FSDir_Tbl[dir_ix] = DEF_NULL;
 258              		.loc 1 1071 13 is_stmt 1 view .LVU64
 259              		.loc 1 1071 31 is_stmt 0 view .LVU65
 260 0026 0023     		movs	r3, #0
 261              	.LVL18:
 262              		.loc 1 1071 31 view .LVU66
 263 0028 0B60     		str	r3, [r1]
1072:rtos/uC-FS/Source/fs_dir.c ****             break;
 264              		.loc 1 1072 13 is_stmt 1 view .LVU67
 265              	.L15:
1073:rtos/uC-FS/Source/fs_dir.c ****         }
1074:rtos/uC-FS/Source/fs_dir.c ****     }
ARM GAS  /tmp/cc9zxjuG.s 			page 25


1075:rtos/uC-FS/Source/fs_dir.c **** 
1076:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_DBG_MEM_CLR_EN == DEF_ENABLED)
1077:rtos/uC-FS/Source/fs_dir.c ****     FSDir_ObjClr(p_dir);
 266              		.loc 1 1077 5 view .LVU68
 267 002a 2046     		mov	r0, r4
 268              	.LVL19:
 269              		.loc 1 1077 5 is_stmt 0 view .LVU69
 270 002c FFF7FEFF 		bl	FSDir_ObjClr
 271              	.LVL20:
1078:rtos/uC-FS/Source/fs_dir.c **** #endif
1079:rtos/uC-FS/Source/fs_dir.c **** 
1080:rtos/uC-FS/Source/fs_dir.c ****     Mem_PoolBlkFree(        &FSDir_Pool,
 272              		.loc 1 1080 5 is_stmt 1 view .LVU70
 273 0030 0DF10602 		add	r2, sp, #6
 274 0034 2146     		mov	r1, r4
 275 0036 0648     		ldr	r0, .L19+8
 276 0038 FFF7FEFF 		bl	Mem_PoolBlkFree
 277              	.LVL21:
1081:rtos/uC-FS/Source/fs_dir.c ****                     (void *) p_dir,
1082:rtos/uC-FS/Source/fs_dir.c ****                             &pool_err);
1083:rtos/uC-FS/Source/fs_dir.c **** 
1084:rtos/uC-FS/Source/fs_dir.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_INFO)
1085:rtos/uC-FS/Source/fs_dir.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
1086:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ObjFree(): Could not free dir to pool.\r\n"));
1087:rtos/uC-FS/Source/fs_dir.c ****         return;
1088:rtos/uC-FS/Source/fs_dir.c ****     }
1089:rtos/uC-FS/Source/fs_dir.c **** #endif
1090:rtos/uC-FS/Source/fs_dir.c **** 
1091:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Cnt--;
 278              		.loc 1 1091 5 view .LVU71
 279              		.loc 1 1091 14 is_stmt 0 view .LVU72
 280 003c 054A     		ldr	r2, .L19+12
 281 003e 1388     		ldrh	r3, [r2]
 282 0040 013B     		subs	r3, r3, #1
 283 0042 1380     		strh	r3, [r2]	@ movhi
1092:rtos/uC-FS/Source/fs_dir.c **** }
 284              		.loc 1 1092 1 view .LVU73
 285 0044 02B0     		add	sp, sp, #8
 286              	.LCFI8:
 287              		.cfi_def_cfa_offset 8
 288              		@ sp needed
 289 0046 10BD     		pop	{r4, pc}
 290              	.LVL22:
 291              	.L20:
 292              		.loc 1 1092 1 view .LVU74
 293              		.align	2
 294              	.L19:
 295 0048 00000000 		.word	.LANCHOR1
 296 004c 00000000 		.word	.LANCHOR0
 297 0050 00000000 		.word	.LANCHOR2
 298 0054 00000000 		.word	.LANCHOR3
 299              		.cfi_endproc
 300              	.LFE14:
 302              		.section	.text.FSDir_Release,"ax",%progbits
 303              		.align	1
 304              		.syntax unified
 305              		.thumb
ARM GAS  /tmp/cc9zxjuG.s 			page 26


 306              		.thumb_func
 307              		.fpu fpv4-sp-d16
 309              	FSDir_Release:
 310              	.LVL23:
 311              	.LFB10:
 929:rtos/uC-FS/Source/fs_dir.c ****     FS_ERR   err;
 312              		.loc 1 929 1 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 929:rtos/uC-FS/Source/fs_dir.c ****     FS_ERR   err;
 316              		.loc 1 929 1 is_stmt 0 view .LVU76
 317 0000 70B5     		push	{r4, r5, r6, lr}
 318              	.LCFI9:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 4, -16
 321              		.cfi_offset 5, -12
 322              		.cfi_offset 6, -8
 323              		.cfi_offset 14, -4
 324 0002 82B0     		sub	sp, sp, #8
 325              	.LCFI10:
 326              		.cfi_def_cfa_offset 24
 327 0004 0446     		mov	r4, r0
 930:rtos/uC-FS/Source/fs_dir.c ****     FS_CTR   ref_cnt;
 328              		.loc 1 930 5 is_stmt 1 view .LVU77
 931:rtos/uC-FS/Source/fs_dir.c ****     FS_VOL  *p_vol;
 329              		.loc 1 931 5 view .LVU78
 932:rtos/uC-FS/Source/fs_dir.c **** 
 330              		.loc 1 932 5 view .LVU79
 936:rtos/uC-FS/Source/fs_dir.c ****     if (err != FS_ERR_NONE) {
 331              		.loc 1 936 5 view .LVU80
 332 0006 0DF10600 		add	r0, sp, #6
 333              	.LVL24:
 936:rtos/uC-FS/Source/fs_dir.c ****     if (err != FS_ERR_NONE) {
 334              		.loc 1 936 5 is_stmt 0 view .LVU81
 335 000a FFF7FEFF 		bl	FS_OS_Lock
 336              	.LVL25:
 937:rtos/uC-FS/Source/fs_dir.c ****         return;
 337              		.loc 1 937 5 is_stmt 1 view .LVU82
 937:rtos/uC-FS/Source/fs_dir.c ****         return;
 338              		.loc 1 937 13 is_stmt 0 view .LVU83
 339 000e BDF80630 		ldrh	r3, [sp, #6]
 937:rtos/uC-FS/Source/fs_dir.c ****         return;
 340              		.loc 1 937 8 view .LVU84
 341 0012 4BB9     		cbnz	r3, .L21
 944:rtos/uC-FS/Source/fs_dir.c ****     if (ref_cnt == 1u) {
 342              		.loc 1 944 5 is_stmt 1 view .LVU85
 944:rtos/uC-FS/Source/fs_dir.c ****     if (ref_cnt == 1u) {
 343              		.loc 1 944 13 is_stmt 0 view .LVU86
 344 0014 6568     		ldr	r5, [r4, #4]
 345              	.LVL26:
 945:rtos/uC-FS/Source/fs_dir.c ****         p_vol = p_dir->VolPtr;
 346              		.loc 1 945 5 is_stmt 1 view .LVU87
 945:rtos/uC-FS/Source/fs_dir.c ****         p_vol = p_dir->VolPtr;
 347              		.loc 1 945 8 is_stmt 0 view .LVU88
 348 0016 012D     		cmp	r5, #1
 349 0018 08D0     		beq	.L28
ARM GAS  /tmp/cc9zxjuG.s 			page 27


 948:rtos/uC-FS/Source/fs_dir.c ****         p_dir->RefCnt = ref_cnt - 1u;
 350              		.loc 1 948 12 is_stmt 1 view .LVU89
 948:rtos/uC-FS/Source/fs_dir.c ****         p_dir->RefCnt = ref_cnt - 1u;
 351              		.loc 1 948 15 is_stmt 0 view .LVU90
 352 001a 0DB1     		cbz	r5, .L25
 949:rtos/uC-FS/Source/fs_dir.c ****     } else {
 353              		.loc 1 949 9 is_stmt 1 view .LVU91
 949:rtos/uC-FS/Source/fs_dir.c ****     } else {
 354              		.loc 1 949 33 is_stmt 0 view .LVU92
 355 001c 6B1E     		subs	r3, r5, #1
 949:rtos/uC-FS/Source/fs_dir.c ****     } else {
 356              		.loc 1 949 23 view .LVU93
 357 001e 6360     		str	r3, [r4, #4]
 358              	.L25:
 359              	.LVL27:
 951:rtos/uC-FS/Source/fs_dir.c ****     }
 360              		.loc 1 951 74 is_stmt 1 view .LVU94
 954:rtos/uC-FS/Source/fs_dir.c **** 
 361              		.loc 1 954 5 view .LVU95
 362 0020 FFF7FEFF 		bl	FS_OS_Unlock
 363              	.LVL28:
 959:rtos/uC-FS/Source/fs_dir.c ****         if (p_vol != (FS_VOL *)0) {
 364              		.loc 1 959 5 view .LVU96
 959:rtos/uC-FS/Source/fs_dir.c ****         if (p_vol != (FS_VOL *)0) {
 365              		.loc 1 959 8 is_stmt 0 view .LVU97
 366 0024 012D     		cmp	r5, #1
 367 0026 06D0     		beq	.L29
 368              	.LVL29:
 369              	.L21:
 964:rtos/uC-FS/Source/fs_dir.c **** 
 370              		.loc 1 964 1 view .LVU98
 371 0028 02B0     		add	sp, sp, #8
 372              	.LCFI11:
 373              		.cfi_remember_state
 374              		.cfi_def_cfa_offset 16
 375              		@ sp needed
 376 002a 70BD     		pop	{r4, r5, r6, pc}
 377              	.LVL30:
 378              	.L28:
 379              	.LCFI12:
 380              		.cfi_restore_state
 946:rtos/uC-FS/Source/fs_dir.c ****         FSDir_ObjFree(p_dir);
 381              		.loc 1 946 9 is_stmt 1 view .LVU99
 946:rtos/uC-FS/Source/fs_dir.c ****         FSDir_ObjFree(p_dir);
 382              		.loc 1 946 15 is_stmt 0 view .LVU100
 383 002c 2669     		ldr	r6, [r4, #16]
 384              	.LVL31:
 947:rtos/uC-FS/Source/fs_dir.c ****     } else if (ref_cnt > 0u) {
 385              		.loc 1 947 9 is_stmt 1 view .LVU101
 386 002e 2046     		mov	r0, r4
 387 0030 FFF7FEFF 		bl	FSDir_ObjFree
 388              	.LVL32:
 389 0034 F4E7     		b	.L25
 390              	.L29:
 960:rtos/uC-FS/Source/fs_dir.c ****             FSVol_Release(p_vol);                               /* Release vol (see Note #1).      
 391              		.loc 1 960 9 view .LVU102
 960:rtos/uC-FS/Source/fs_dir.c ****             FSVol_Release(p_vol);                               /* Release vol (see Note #1).      
ARM GAS  /tmp/cc9zxjuG.s 			page 28


 392              		.loc 1 960 12 is_stmt 0 view .LVU103
 393 0036 002E     		cmp	r6, #0
 394 0038 F6D0     		beq	.L21
 961:rtos/uC-FS/Source/fs_dir.c ****         }
 395              		.loc 1 961 13 is_stmt 1 view .LVU104
 396 003a 3046     		mov	r0, r6
 397 003c FFF7FEFF 		bl	FSVol_Release
 398              	.LVL33:
 399 0040 F2E7     		b	.L21
 400              		.cfi_endproc
 401              	.LFE10:
 403              		.section	.text.FSDir_ReleaseUnlock,"ax",%progbits
 404              		.align	1
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	FSDir_ReleaseUnlock:
 411              	.LVL34:
 412              	.LFB9:
 905:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Unlock(p_dir);
 413              		.loc 1 905 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 905:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Unlock(p_dir);
 417              		.loc 1 905 1 is_stmt 0 view .LVU106
 418 0000 10B5     		push	{r4, lr}
 419              	.LCFI13:
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 4, -8
 422              		.cfi_offset 14, -4
 423 0002 0446     		mov	r4, r0
 906:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Release(p_dir);
 424              		.loc 1 906 5 is_stmt 1 view .LVU107
 425 0004 FFF7FEFF 		bl	FSDir_Unlock
 426              	.LVL35:
 907:rtos/uC-FS/Source/fs_dir.c **** }
 427              		.loc 1 907 5 view .LVU108
 428 0008 2046     		mov	r0, r4
 429 000a FFF7FEFF 		bl	FSDir_Release
 430              	.LVL36:
 908:rtos/uC-FS/Source/fs_dir.c **** 
 431              		.loc 1 908 1 is_stmt 0 view .LVU109
 432 000e 10BD     		pop	{r4, pc}
 908:rtos/uC-FS/Source/fs_dir.c **** 
 433              		.loc 1 908 1 view .LVU110
 434              		.cfi_endproc
 435              	.LFE9:
 437              		.section	.text.FSDir_AcquireLockChk,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	FSDir_AcquireLockChk:
 445              	.LVL37:
ARM GAS  /tmp/cc9zxjuG.s 			page 29


 446              	.LFB7:
 802:rtos/uC-FS/Source/fs_dir.c ****     CPU_BOOLEAN  lock_success;
 447              		.loc 1 802 1 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 802:rtos/uC-FS/Source/fs_dir.c ****     CPU_BOOLEAN  lock_success;
 451              		.loc 1 802 1 is_stmt 0 view .LVU112
 452 0000 38B5     		push	{r3, r4, r5, lr}
 453              	.LCFI14:
 454              		.cfi_def_cfa_offset 16
 455              		.cfi_offset 3, -16
 456              		.cfi_offset 4, -12
 457              		.cfi_offset 5, -8
 458              		.cfi_offset 14, -4
 459 0002 1546     		mov	r5, r2
 803:rtos/uC-FS/Source/fs_dir.c **** 
 460              		.loc 1 803 5 is_stmt 1 view .LVU113
 806:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* ----------------- ACQUIRE DIR LO
 461              		.loc 1 806 5 view .LVU114
 808:rtos/uC-FS/Source/fs_dir.c **** 
 462              		.loc 1 808 5 view .LVU115
 808:rtos/uC-FS/Source/fs_dir.c **** 
 463              		.loc 1 808 13 is_stmt 0 view .LVU116
 464 0004 FFF7FEFF 		bl	FSDir_Acquire
 465              	.LVL38:
 810:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_NOT_OPEN;
 466              		.loc 1 810 5 is_stmt 1 view .LVU117
 810:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_NOT_OPEN;
 467              		.loc 1 810 8 is_stmt 0 view .LVU118
 468 0008 0446     		mov	r4, r0
 469 000a 58B1     		cbz	r0, .L38
 815:rtos/uC-FS/Source/fs_dir.c ****     if (lock_success != DEF_YES) {
 470              		.loc 1 815 5 is_stmt 1 view .LVU119
 815:rtos/uC-FS/Source/fs_dir.c ****     if (lock_success != DEF_YES) {
 471              		.loc 1 815 20 is_stmt 0 view .LVU120
 472 000c FFF7FEFF 		bl	FSDir_Lock
 473              	.LVL39:
 816:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_OS_LOCK;
 474              		.loc 1 816 5 is_stmt 1 view .LVU121
 816:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_OS_LOCK;
 475              		.loc 1 816 8 is_stmt 0 view .LVU122
 476 0010 0128     		cmp	r0, #1
 477 0012 0BD1     		bne	.L39
 824:rtos/uC-FS/Source/fs_dir.c ****         case FS_DIR_STATE_OPEN:
 478              		.loc 1 824 5 is_stmt 1 view .LVU123
 824:rtos/uC-FS/Source/fs_dir.c ****         case FS_DIR_STATE_OPEN:
 479              		.loc 1 824 18 is_stmt 0 view .LVU124
 480 0014 2388     		ldrh	r3, [r4]
 824:rtos/uC-FS/Source/fs_dir.c ****         case FS_DIR_STATE_OPEN:
 481              		.loc 1 824 5 view .LVU125
 482 0016 033B     		subs	r3, r3, #3
 483 0018 022B     		cmp	r3, #2
 484 001a 0CD8     		bhi	.L36
 828:rtos/uC-FS/Source/fs_dir.c ****              return (p_dir);
 485              		.loc 1 828 13 is_stmt 1 view .LVU126
 828:rtos/uC-FS/Source/fs_dir.c ****              return (p_dir);
ARM GAS  /tmp/cc9zxjuG.s 			page 30


 486              		.loc 1 828 20 is_stmt 0 view .LVU127
 487 001c 0023     		movs	r3, #0
 488 001e 2B80     		strh	r3, [r5]	@ movhi
 829:rtos/uC-FS/Source/fs_dir.c **** 
 489              		.loc 1 829 14 is_stmt 1 view .LVU128
 490              	.LVL40:
 491              	.L32:
 840:rtos/uC-FS/Source/fs_dir.c **** 
 492              		.loc 1 840 1 is_stmt 0 view .LVU129
 493 0020 2046     		mov	r0, r4
 494 0022 38BD     		pop	{r3, r4, r5, pc}
 495              	.LVL41:
 496              	.L38:
 811:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 497              		.loc 1 811 8 is_stmt 1 view .LVU130
 811:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 498              		.loc 1 811 15 is_stmt 0 view .LVU131
 499 0024 4FF4FC73 		mov	r3, #504
 500 0028 2B80     		strh	r3, [r5]	@ movhi
 812:rtos/uC-FS/Source/fs_dir.c ****     }
 501              		.loc 1 812 9 is_stmt 1 view .LVU132
 812:rtos/uC-FS/Source/fs_dir.c ****     }
 502              		.loc 1 812 16 is_stmt 0 view .LVU133
 503 002a F9E7     		b	.L32
 504              	.LVL42:
 505              	.L39:
 817:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 506              		.loc 1 817 8 is_stmt 1 view .LVU134
 817:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 507              		.loc 1 817 15 is_stmt 0 view .LVU135
 508 002c 40F2DD53 		movw	r3, #1501
 509 0030 2B80     		strh	r3, [r5]	@ movhi
 818:rtos/uC-FS/Source/fs_dir.c ****     }
 510              		.loc 1 818 9 is_stmt 1 view .LVU136
 818:rtos/uC-FS/Source/fs_dir.c ****     }
 511              		.loc 1 818 16 is_stmt 0 view .LVU137
 512 0032 0024     		movs	r4, #0
 513              	.LVL43:
 818:rtos/uC-FS/Source/fs_dir.c ****     }
 514              		.loc 1 818 16 view .LVU138
 515 0034 F4E7     		b	.L32
 516              	.LVL44:
 517              	.L36:
 836:rtos/uC-FS/Source/fs_dir.c ****              FSDir_ReleaseUnlock(p_dir);
 518              		.loc 1 836 13 is_stmt 1 view .LVU139
 836:rtos/uC-FS/Source/fs_dir.c ****              FSDir_ReleaseUnlock(p_dir);
 519              		.loc 1 836 20 is_stmt 0 view .LVU140
 520 0036 4FF4FC73 		mov	r3, #504
 521 003a 2B80     		strh	r3, [r5]	@ movhi
 837:rtos/uC-FS/Source/fs_dir.c ****              return ((FS_DIR *)0);
 522              		.loc 1 837 14 is_stmt 1 view .LVU141
 523 003c 2046     		mov	r0, r4
 524              	.LVL45:
 837:rtos/uC-FS/Source/fs_dir.c ****              return ((FS_DIR *)0);
 525              		.loc 1 837 14 is_stmt 0 view .LVU142
 526 003e FFF7FEFF 		bl	FSDir_ReleaseUnlock
 527              	.LVL46:
ARM GAS  /tmp/cc9zxjuG.s 			page 31


 838:rtos/uC-FS/Source/fs_dir.c ****     }
 528              		.loc 1 838 14 is_stmt 1 view .LVU143
 838:rtos/uC-FS/Source/fs_dir.c ****     }
 529              		.loc 1 838 21 is_stmt 0 view .LVU144
 530 0042 0024     		movs	r4, #0
 531              	.LVL47:
 838:rtos/uC-FS/Source/fs_dir.c ****     }
 532              		.loc 1 838 21 view .LVU145
 533 0044 ECE7     		b	.L32
 534              		.cfi_endproc
 535              	.LFE7:
 537              		.section	.text.FSDir_NameParseChk,"ax",%progbits
 538              		.align	1
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu fpv4-sp-d16
 544              	FSDir_NameParseChk:
 545              	.LVL48:
 546              	.LFB16:
1093:rtos/uC-FS/Source/fs_dir.c **** 
1094:rtos/uC-FS/Source/fs_dir.c **** 
1095:rtos/uC-FS/Source/fs_dir.c **** /*
1096:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
1097:rtos/uC-FS/Source/fs_dir.c **** *                                           FSDir_ObjGet()
1098:rtos/uC-FS/Source/fs_dir.c **** *
1099:rtos/uC-FS/Source/fs_dir.c **** * Description : Allocate a directory object.
1100:rtos/uC-FS/Source/fs_dir.c **** *
1101:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : none.
1102:rtos/uC-FS/Source/fs_dir.c **** *
1103:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : Pointer to a directory, if NO errors.
1104:rtos/uC-FS/Source/fs_dir.c **** *               Pointer to NULL,        otherwise.
1105:rtos/uC-FS/Source/fs_dir.c **** *
1106:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : (1) The function caller MUST hold the file system lock.
1107:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
1108:rtos/uC-FS/Source/fs_dir.c **** */
1109:rtos/uC-FS/Source/fs_dir.c **** 
1110:rtos/uC-FS/Source/fs_dir.c **** static  FS_DIR  *FSDir_ObjGet (void)
1111:rtos/uC-FS/Source/fs_dir.c **** {
1112:rtos/uC-FS/Source/fs_dir.c ****     FS_DIR   *p_dir;
1113:rtos/uC-FS/Source/fs_dir.c ****     LIB_ERR   pool_err;
1114:rtos/uC-FS/Source/fs_dir.c ****     FS_QTY    dir_ix;
1115:rtos/uC-FS/Source/fs_dir.c **** 
1116:rtos/uC-FS/Source/fs_dir.c ****     for (dir_ix = 0u; dir_ix < FSDir_DirCntMax; dir_ix++) {
1117:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
1118:rtos/uC-FS/Source/fs_dir.c ****             break;
1119:rtos/uC-FS/Source/fs_dir.c ****         }
1120:rtos/uC-FS/Source/fs_dir.c ****     }
1121:rtos/uC-FS/Source/fs_dir.c ****     if (dir_ix >= FSDir_DirCntMax) {
1122:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ObjGet(): Could not alloc dir from pool. Opened dir limit reached.\r\
1123:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
1124:rtos/uC-FS/Source/fs_dir.c ****     }
1125:rtos/uC-FS/Source/fs_dir.c **** 
1126:rtos/uC-FS/Source/fs_dir.c ****     p_dir = (FS_DIR *)Mem_PoolBlkGet(&FSDir_Pool,
1127:rtos/uC-FS/Source/fs_dir.c ****                                       sizeof(FS_DIR),
1128:rtos/uC-FS/Source/fs_dir.c ****                                      &pool_err);
1129:rtos/uC-FS/Source/fs_dir.c ****     (void)pool_err;                                            /* Err ignored. Ret val chk'd instea
ARM GAS  /tmp/cc9zxjuG.s 			page 32


1130:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir == (FS_DIR *)0) {
1131:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ObjGet(): Could not alloc dir from pool. Opened directory limit reach
1132:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
1133:rtos/uC-FS/Source/fs_dir.c ****     }
1134:rtos/uC-FS/Source/fs_dir.c **** 
1135:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Tbl[dir_ix] = p_dir;
1136:rtos/uC-FS/Source/fs_dir.c **** 
1137:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Cnt++;
1138:rtos/uC-FS/Source/fs_dir.c **** 
1139:rtos/uC-FS/Source/fs_dir.c ****     FSDir_ObjClr(p_dir);
1140:rtos/uC-FS/Source/fs_dir.c **** 
1141:rtos/uC-FS/Source/fs_dir.c ****     return (p_dir);
1142:rtos/uC-FS/Source/fs_dir.c **** }
1143:rtos/uC-FS/Source/fs_dir.c **** 
1144:rtos/uC-FS/Source/fs_dir.c **** 
1145:rtos/uC-FS/Source/fs_dir.c **** /*
1146:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
1147:rtos/uC-FS/Source/fs_dir.c **** *                                        FSDir_NameParseChk()
1148:rtos/uC-FS/Source/fs_dir.c **** *
1149:rtos/uC-FS/Source/fs_dir.c **** * Description : Parse full directory name & get volume pointer & pointer to entry name.
1150:rtos/uC-FS/Source/fs_dir.c **** *
1151:rtos/uC-FS/Source/fs_dir.c **** * Argument(s) : name_full   Name of the entry.
1152:rtos/uC-FS/Source/fs_dir.c **** *               ----------  Argument validated by caller.
1153:rtos/uC-FS/Source/fs_dir.c **** *
1154:rtos/uC-FS/Source/fs_dir.c **** *               pp_vol      Pointer to volume pointer which will hold pointer to volume.
1155:rtos/uC-FS/Source/fs_dir.c **** *               ----------  Argument validated by caller.
1156:rtos/uC-FS/Source/fs_dir.c **** *
1157:rtos/uC-FS/Source/fs_dir.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1158:rtos/uC-FS/Source/fs_dir.c **** *               ----------  Argument validated by caller.
1159:rtos/uC-FS/Source/fs_dir.c **** *
1160:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NAME_INVALID          Entry name could not be parsed, lacks 
1161:rtos/uC-FS/Source/fs_dir.c **** *                                                                initial path separator character o
1162:rtos/uC-FS/Source/fs_dir.c **** *                                                                includes an invalid volume name.
1163:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_NAME_PATH_TOO_LONG    Entry name is too long.
1164:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_VOL_NOT_OPEN          Volume not opened.
1165:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_VOL_NOT_MOUNTED       Volume not mounted.
1166:rtos/uC-FS/Source/fs_dir.c **** *                               FS_ERR_OS_LOCK               OS Lock NOT acquired.
1167:rtos/uC-FS/Source/fs_dir.c **** *
1168:rtos/uC-FS/Source/fs_dir.c **** * Return(s)   : Pointer to start of entry name.
1169:rtos/uC-FS/Source/fs_dir.c **** *
1170:rtos/uC-FS/Source/fs_dir.c **** * Note(s)     : (1) If the volume name could not be parsed, the volume does not exist or no directo
1171:rtos/uC-FS/Source/fs_dir.c **** *                   name is specified, then NULL pointers are returned for BOTH the directory name 
1172:rtos/uC-FS/Source/fs_dir.c **** *                   the volume.  Otherwise, both the directory name & volume should be valid pointe
1173:rtos/uC-FS/Source/fs_dir.c **** *
1174:rtos/uC-FS/Source/fs_dir.c **** *               (2) The volume reference is released in 'FSDir_Release()' after the final reference
1175:rtos/uC-FS/Source/fs_dir.c **** *                   the directory has been released.
1176:rtos/uC-FS/Source/fs_dir.c **** ***************************************************************************************************
1177:rtos/uC-FS/Source/fs_dir.c **** */
1178:rtos/uC-FS/Source/fs_dir.c **** 
1179:rtos/uC-FS/Source/fs_dir.c **** static  CPU_CHAR  *FSDir_NameParseChk (CPU_CHAR   *name_full,
1180:rtos/uC-FS/Source/fs_dir.c ****                                        FS_VOL    **pp_vol,
1181:rtos/uC-FS/Source/fs_dir.c ****                                        FS_ERR     *p_err)
1182:rtos/uC-FS/Source/fs_dir.c **** {
 547              		.loc 1 1182 1 is_stmt 1 view -0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 16
 550              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc9zxjuG.s 			page 33


 551              		.loc 1 1182 1 is_stmt 0 view .LVU147
 552 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 553              	.LCFI15:
 554              		.cfi_def_cfa_offset 20
 555              		.cfi_offset 4, -20
 556              		.cfi_offset 5, -16
 557              		.cfi_offset 6, -12
 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 560 0002 85B0     		sub	sp, sp, #20
 561              	.LCFI16:
 562              		.cfi_def_cfa_offset 40
 563 0004 0F46     		mov	r7, r1
 564 0006 1646     		mov	r6, r2
1183:rtos/uC-FS/Source/fs_dir.c ****     CPU_SIZE_T   name_entry_len;
 565              		.loc 1 1183 5 is_stmt 1 view .LVU148
1184:rtos/uC-FS/Source/fs_dir.c ****     CPU_CHAR    *name_entry;
 566              		.loc 1 1184 5 view .LVU149
1185:rtos/uC-FS/Source/fs_dir.c ****     FS_VOL      *p_vol_temp;
 567              		.loc 1 1185 5 view .LVU150
1186:rtos/uC-FS/Source/fs_dir.c ****     CPU_CHAR     name_vol_temp[FS_CFG_MAX_VOL_NAME_LEN + 1u];
 568              		.loc 1 1186 5 view .LVU151
1187:rtos/uC-FS/Source/fs_dir.c ****     CPU_BOOLEAN  vol_lock_ok;
 569              		.loc 1 1187 5 view .LVU152
1188:rtos/uC-FS/Source/fs_dir.c **** 
1189:rtos/uC-FS/Source/fs_dir.c **** 
1190:rtos/uC-FS/Source/fs_dir.c ****    *pp_vol     = (FS_VOL *)0;
 570              		.loc 1 1190 4 view .LVU153
 571              		.loc 1 1190 16 is_stmt 0 view .LVU154
 572 0008 0023     		movs	r3, #0
 573 000a 0B60     		str	r3, [r1]
1191:rtos/uC-FS/Source/fs_dir.c ****     name_entry =  FS_PathParse(name_full,
 574              		.loc 1 1191 5 is_stmt 1 view .LVU155
 575              		.loc 1 1191 19 is_stmt 0 view .LVU156
 576 000c 01A9     		add	r1, sp, #4
 577              	.LVL49:
 578              		.loc 1 1191 19 view .LVU157
 579 000e FFF7FEFF 		bl	FS_PathParse
 580              	.LVL50:
1192:rtos/uC-FS/Source/fs_dir.c ****                                name_vol_temp,
1193:rtos/uC-FS/Source/fs_dir.c ****                                p_err);
1194:rtos/uC-FS/Source/fs_dir.c **** 
1195:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 581              		.loc 1 1195 5 is_stmt 1 view .LVU158
 582              		.loc 1 1195 9 is_stmt 0 view .LVU159
 583 0012 3388     		ldrh	r3, [r6]
 584              		.loc 1 1195 8 view .LVU160
 585 0014 002B     		cmp	r3, #0
 586 0016 58D1     		bne	.L53
 587 0018 0446     		mov	r4, r0
1196:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
1197:rtos/uC-FS/Source/fs_dir.c ****     }
1198:rtos/uC-FS/Source/fs_dir.c **** 
1199:rtos/uC-FS/Source/fs_dir.c ****     if (name_entry == (CPU_CHAR *)0) {                          /* If name could not be parsed ... 
 588              		.loc 1 1199 5 is_stmt 1 view .LVU161
 589              		.loc 1 1199 8 is_stmt 0 view .LVU162
 590 001a 08B3     		cbz	r0, .L55
ARM GAS  /tmp/cc9zxjuG.s 			page 34


1200:rtos/uC-FS/Source/fs_dir.c ****        *p_err =  FS_ERR_NAME_INVALID;
1201:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);                                 /* ... rtn NULL vol & file name.   
1202:rtos/uC-FS/Source/fs_dir.c ****     }
1203:rtos/uC-FS/Source/fs_dir.c **** 
1204:rtos/uC-FS/Source/fs_dir.c ****     if (*name_entry != FS_CHAR_PATH_SEP) {                      /* Require init path sep char.     
 591              		.loc 1 1204 5 is_stmt 1 view .LVU163
 592              		.loc 1 1204 9 is_stmt 0 view .LVU164
 593 001c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 594              		.loc 1 1204 8 view .LVU165
 595 001e 5C2B     		cmp	r3, #92
 596 0020 22D1     		bne	.L56
1205:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NAME_INVALID;
1206:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
1207:rtos/uC-FS/Source/fs_dir.c ****     }
1208:rtos/uC-FS/Source/fs_dir.c ****     name_entry++;                                               /* Ignore init path sep char       
 597              		.loc 1 1208 5 is_stmt 1 view .LVU166
 598              		.loc 1 1208 15 is_stmt 0 view .LVU167
 599 0022 0134     		adds	r4, r4, #1
 600              	.LVL51:
1209:rtos/uC-FS/Source/fs_dir.c **** 
1210:rtos/uC-FS/Source/fs_dir.c ****     name_entry_len = Str_Len_N(name_entry, FS_CFG_MAX_PATH_NAME_LEN + 1u);
 601              		.loc 1 1210 5 is_stmt 1 view .LVU168
 602              		.loc 1 1210 22 is_stmt 0 view .LVU169
 603 0024 40F20511 		movw	r1, #261
 604 0028 2046     		mov	r0, r4
 605 002a FFF7FEFF 		bl	Str_Len_N
 606              	.LVL52:
1211:rtos/uC-FS/Source/fs_dir.c ****     if (name_entry_len > FS_CFG_MAX_PATH_NAME_LEN) {            /* Rtn err if file name is too long
 607              		.loc 1 1211 5 is_stmt 1 view .LVU170
 608              		.loc 1 1211 8 is_stmt 0 view .LVU171
 609 002e B0F5827F 		cmp	r0, #260
 610 0032 20D8     		bhi	.L57
1212:rtos/uC-FS/Source/fs_dir.c ****        *p_err =  FS_ERR_NAME_PATH_TOO_LONG;
1213:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
1214:rtos/uC-FS/Source/fs_dir.c ****     }
1215:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* Acquire ref to vol (see Note #3)
1216:rtos/uC-FS/Source/fs_dir.c ****     p_vol_temp = (name_vol_temp[0] == (CPU_CHAR)ASCII_CHAR_NULL) ? FSVol_AcquireDflt()
 611              		.loc 1 1216 5 is_stmt 1 view .LVU172
 612              		.loc 1 1216 32 is_stmt 0 view .LVU173
 613 0034 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1217:rtos/uC-FS/Source/fs_dir.c ****                                                                  : FSVol_Acquire(name_vol_temp, p_e
 614              		.loc 1 1217 66 view .LVU174
 615 0038 13BB     		cbnz	r3, .L45
1216:rtos/uC-FS/Source/fs_dir.c ****                                                                  : FSVol_Acquire(name_vol_temp, p_e
 616              		.loc 1 1216 68 view .LVU175
 617 003a FFF7FEFF 		bl	FSVol_AcquireDflt
 618              	.LVL53:
1216:rtos/uC-FS/Source/fs_dir.c ****                                                                  : FSVol_Acquire(name_vol_temp, p_e
 619              		.loc 1 1216 68 view .LVU176
 620 003e 0546     		mov	r5, r0
 621              	.L46:
 622              	.LVL54:
1218:rtos/uC-FS/Source/fs_dir.c **** 
1219:rtos/uC-FS/Source/fs_dir.c ****     if (p_vol_temp == (FS_VOL *)0) {
 623              		.loc 1 1219 5 is_stmt 1 discriminator 1 view .LVU177
 624              		.loc 1 1219 8 is_stmt 0 discriminator 1 view .LVU178
 625 0040 25B3     		cbz	r5, .L58
ARM GAS  /tmp/cc9zxjuG.s 			page 35


1220:rtos/uC-FS/Source/fs_dir.c ****        *p_err =  FS_ERR_VOL_NOT_OPEN;
1221:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
1222:rtos/uC-FS/Source/fs_dir.c ****     }
1223:rtos/uC-FS/Source/fs_dir.c **** 
1224:rtos/uC-FS/Source/fs_dir.c ****     vol_lock_ok = FSVol_Lock(p_vol_temp);                       /* Lock vol.                       
 626              		.loc 1 1224 5 is_stmt 1 view .LVU179
 627              		.loc 1 1224 19 is_stmt 0 view .LVU180
 628 0042 2846     		mov	r0, r5
 629 0044 FFF7FEFF 		bl	FSVol_Lock
 630              	.LVL55:
1225:rtos/uC-FS/Source/fs_dir.c ****     if (vol_lock_ok == DEF_NO) {
 631              		.loc 1 1225 5 is_stmt 1 view .LVU181
 632              		.loc 1 1225 8 is_stmt 0 view .LVU182
 633 0048 28B3     		cbz	r0, .L59
1226:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_OS_LOCK;
1227:rtos/uC-FS/Source/fs_dir.c ****         FSVol_Release(p_vol_temp);
1228:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
1229:rtos/uC-FS/Source/fs_dir.c ****     }
1230:rtos/uC-FS/Source/fs_dir.c **** 
1231:rtos/uC-FS/Source/fs_dir.c ****     (void)FSVol_RefreshLocked(p_vol_temp, p_err);               /* Refresh vol.                    
 634              		.loc 1 1231 5 is_stmt 1 view .LVU183
 635              		.loc 1 1231 11 is_stmt 0 view .LVU184
 636 004a 3146     		mov	r1, r6
 637 004c 2846     		mov	r0, r5
 638              	.LVL56:
 639              		.loc 1 1231 11 view .LVU185
 640 004e FFF7FEFF 		bl	FSVol_RefreshLocked
 641              	.LVL57:
1232:rtos/uC-FS/Source/fs_dir.c **** 
1233:rtos/uC-FS/Source/fs_dir.c ****     switch (p_vol_temp->State) {
 642              		.loc 1 1233 5 is_stmt 1 view .LVU186
 643              		.loc 1 1233 23 is_stmt 0 view .LVU187
 644 0052 2B88     		ldrh	r3, [r5]
 645              		.loc 1 1233 5 view .LVU188
 646 0054 042B     		cmp	r3, #4
 647 0056 26D9     		bls	.L60
 648 0058 052B     		cmp	r3, #5
 649 005a 26D1     		bne	.L51
1234:rtos/uC-FS/Source/fs_dir.c ****         case FS_VOL_STATE_OPEN:                                 /* Rtn err if vol is not mounted.  
1235:rtos/uC-FS/Source/fs_dir.c ****         case FS_VOL_STATE_PRESENT:
1236:rtos/uC-FS/Source/fs_dir.c ****             *p_err = FS_ERR_VOL_NOT_MOUNTED;
1237:rtos/uC-FS/Source/fs_dir.c ****              FSVol_ReleaseUnlock(p_vol_temp);
1238:rtos/uC-FS/Source/fs_dir.c ****              return ((CPU_CHAR *)0);
1239:rtos/uC-FS/Source/fs_dir.c **** 
1240:rtos/uC-FS/Source/fs_dir.c **** 
1241:rtos/uC-FS/Source/fs_dir.c ****         case FS_VOL_STATE_MOUNTED:
1242:rtos/uC-FS/Source/fs_dir.c ****              break;
 650              		.loc 1 1242 14 is_stmt 1 view .LVU189
1243:rtos/uC-FS/Source/fs_dir.c **** 
1244:rtos/uC-FS/Source/fs_dir.c **** 
1245:rtos/uC-FS/Source/fs_dir.c ****         case FS_VOL_STATE_CLOSED:
1246:rtos/uC-FS/Source/fs_dir.c ****         case FS_VOL_STATE_CLOSING:
1247:rtos/uC-FS/Source/fs_dir.c ****         case FS_VOL_STATE_OPENING:                              /* Rtn err if vol is not open.     
1248:rtos/uC-FS/Source/fs_dir.c ****         default:
1249:rtos/uC-FS/Source/fs_dir.c ****             *p_err = FS_ERR_VOL_JOURNAL_NOT_OPEN;
1250:rtos/uC-FS/Source/fs_dir.c ****              FSVol_ReleaseUnlock(p_vol_temp);
1251:rtos/uC-FS/Source/fs_dir.c ****              return ((CPU_CHAR *)0);
ARM GAS  /tmp/cc9zxjuG.s 			page 36


1252:rtos/uC-FS/Source/fs_dir.c ****     }
1253:rtos/uC-FS/Source/fs_dir.c **** 
1254:rtos/uC-FS/Source/fs_dir.c ****    *pp_vol = p_vol_temp;
 651              		.loc 1 1254 4 view .LVU190
 652              		.loc 1 1254 12 is_stmt 0 view .LVU191
 653 005c 3D60     		str	r5, [r7]
1255:rtos/uC-FS/Source/fs_dir.c ****     return (name_entry);
 654              		.loc 1 1255 5 is_stmt 1 view .LVU192
 655              		.loc 1 1255 12 is_stmt 0 view .LVU193
 656 005e 07E0     		b	.L40
 657              	.LVL58:
 658              	.L55:
1200:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);                                 /* ... rtn NULL vol & file name.   
 659              		.loc 1 1200 8 is_stmt 1 view .LVU194
1200:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);                                 /* ... rtn NULL vol & file name.   
 660              		.loc 1 1200 15 is_stmt 0 view .LVU195
 661 0060 40F28733 		movw	r3, #903
 662 0064 3380     		strh	r3, [r6]	@ movhi
1201:rtos/uC-FS/Source/fs_dir.c ****     }
 663              		.loc 1 1201 9 is_stmt 1 view .LVU196
1201:rtos/uC-FS/Source/fs_dir.c ****     }
 664              		.loc 1 1201 16 is_stmt 0 view .LVU197
 665 0066 03E0     		b	.L40
 666              	.L56:
1205:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
 667              		.loc 1 1205 8 is_stmt 1 view .LVU198
1205:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
 668              		.loc 1 1205 15 is_stmt 0 view .LVU199
 669 0068 40F28733 		movw	r3, #903
 670 006c 3380     		strh	r3, [r6]	@ movhi
1206:rtos/uC-FS/Source/fs_dir.c ****     }
 671              		.loc 1 1206 9 is_stmt 1 view .LVU200
1206:rtos/uC-FS/Source/fs_dir.c ****     }
 672              		.loc 1 1206 16 is_stmt 0 view .LVU201
 673 006e 0024     		movs	r4, #0
 674              	.LVL59:
 675              	.L40:
1256:rtos/uC-FS/Source/fs_dir.c **** }
 676              		.loc 1 1256 1 view .LVU202
 677 0070 2046     		mov	r0, r4
 678 0072 05B0     		add	sp, sp, #20
 679              	.LCFI17:
 680              		.cfi_remember_state
 681              		.cfi_def_cfa_offset 20
 682              		@ sp needed
 683 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 684              	.LVL60:
 685              	.L57:
 686              	.LCFI18:
 687              		.cfi_restore_state
1212:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
 688              		.loc 1 1212 8 is_stmt 1 view .LVU203
1212:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
 689              		.loc 1 1212 15 is_stmt 0 view .LVU204
 690 0076 40F28A33 		movw	r3, #906
 691 007a 3380     		strh	r3, [r6]	@ movhi
1213:rtos/uC-FS/Source/fs_dir.c ****     }
ARM GAS  /tmp/cc9zxjuG.s 			page 37


 692              		.loc 1 1213 9 is_stmt 1 view .LVU205
1213:rtos/uC-FS/Source/fs_dir.c ****     }
 693              		.loc 1 1213 16 is_stmt 0 view .LVU206
 694 007c 0024     		movs	r4, #0
 695              	.LVL61:
1213:rtos/uC-FS/Source/fs_dir.c ****     }
 696              		.loc 1 1213 16 view .LVU207
 697 007e F7E7     		b	.L40
 698              	.LVL62:
 699              	.L45:
1217:rtos/uC-FS/Source/fs_dir.c **** 
 700              		.loc 1 1217 68 discriminator 1 view .LVU208
 701 0080 3146     		mov	r1, r6
 702 0082 01A8     		add	r0, sp, #4
 703              	.LVL63:
1217:rtos/uC-FS/Source/fs_dir.c **** 
 704              		.loc 1 1217 68 discriminator 1 view .LVU209
 705 0084 FFF7FEFF 		bl	FSVol_Acquire
 706              	.LVL64:
 707 0088 0546     		mov	r5, r0
 708 008a D9E7     		b	.L46
 709              	.LVL65:
 710              	.L58:
1220:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
 711              		.loc 1 1220 8 is_stmt 1 view .LVU210
1220:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
 712              		.loc 1 1220 15 is_stmt 0 view .LVU211
 713 008c 40F28553 		movw	r3, #1413
 714 0090 3380     		strh	r3, [r6]	@ movhi
1221:rtos/uC-FS/Source/fs_dir.c ****     }
 715              		.loc 1 1221 9 is_stmt 1 view .LVU212
1221:rtos/uC-FS/Source/fs_dir.c ****     }
 716              		.loc 1 1221 16 is_stmt 0 view .LVU213
 717 0092 2C46     		mov	r4, r5
 718              	.LVL66:
1221:rtos/uC-FS/Source/fs_dir.c ****     }
 719              		.loc 1 1221 16 view .LVU214
 720 0094 ECE7     		b	.L40
 721              	.LVL67:
 722              	.L59:
1226:rtos/uC-FS/Source/fs_dir.c ****         FSVol_Release(p_vol_temp);
 723              		.loc 1 1226 8 is_stmt 1 view .LVU215
1226:rtos/uC-FS/Source/fs_dir.c ****         FSVol_Release(p_vol_temp);
 724              		.loc 1 1226 15 is_stmt 0 view .LVU216
 725 0096 40F2DD53 		movw	r3, #1501
 726 009a 3380     		strh	r3, [r6]	@ movhi
1227:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
 727              		.loc 1 1227 9 is_stmt 1 view .LVU217
 728 009c 2846     		mov	r0, r5
 729              	.LVL68:
1227:rtos/uC-FS/Source/fs_dir.c ****         return ((CPU_CHAR *)0);
 730              		.loc 1 1227 9 is_stmt 0 view .LVU218
 731 009e FFF7FEFF 		bl	FSVol_Release
 732              	.LVL69:
1228:rtos/uC-FS/Source/fs_dir.c ****     }
 733              		.loc 1 1228 9 is_stmt 1 view .LVU219
1228:rtos/uC-FS/Source/fs_dir.c ****     }
ARM GAS  /tmp/cc9zxjuG.s 			page 38


 734              		.loc 1 1228 16 is_stmt 0 view .LVU220
 735 00a2 0024     		movs	r4, #0
 736              	.LVL70:
1228:rtos/uC-FS/Source/fs_dir.c ****     }
 737              		.loc 1 1228 16 view .LVU221
 738 00a4 E4E7     		b	.L40
 739              	.LVL71:
 740              	.L60:
1233:rtos/uC-FS/Source/fs_dir.c ****         case FS_VOL_STATE_OPEN:                                 /* Rtn err if vol is not mounted.  
 741              		.loc 1 1233 5 view .LVU222
 742 00a6 032B     		cmp	r3, #3
 743 00a8 07D2     		bcs	.L61
 744              	.L51:
1249:rtos/uC-FS/Source/fs_dir.c ****              FSVol_ReleaseUnlock(p_vol_temp);
 745              		.loc 1 1249 13 is_stmt 1 view .LVU223
1249:rtos/uC-FS/Source/fs_dir.c ****              FSVol_ReleaseUnlock(p_vol_temp);
 746              		.loc 1 1249 20 is_stmt 0 view .LVU224
 747 00aa 40F29353 		movw	r3, #1427
 748 00ae 3380     		strh	r3, [r6]	@ movhi
1250:rtos/uC-FS/Source/fs_dir.c ****              return ((CPU_CHAR *)0);
 749              		.loc 1 1250 14 is_stmt 1 view .LVU225
 750 00b0 2846     		mov	r0, r5
 751 00b2 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 752              	.LVL72:
1251:rtos/uC-FS/Source/fs_dir.c ****     }
 753              		.loc 1 1251 14 view .LVU226
1251:rtos/uC-FS/Source/fs_dir.c ****     }
 754              		.loc 1 1251 21 is_stmt 0 view .LVU227
 755 00b6 0024     		movs	r4, #0
 756              	.LVL73:
1251:rtos/uC-FS/Source/fs_dir.c ****     }
 757              		.loc 1 1251 21 view .LVU228
 758 00b8 DAE7     		b	.L40
 759              	.LVL74:
 760              	.L61:
1236:rtos/uC-FS/Source/fs_dir.c ****              FSVol_ReleaseUnlock(p_vol_temp);
 761              		.loc 1 1236 13 is_stmt 1 view .LVU229
1236:rtos/uC-FS/Source/fs_dir.c ****              FSVol_ReleaseUnlock(p_vol_temp);
 762              		.loc 1 1236 20 is_stmt 0 view .LVU230
 763 00ba 40F28653 		movw	r3, #1414
 764 00be 3380     		strh	r3, [r6]	@ movhi
1237:rtos/uC-FS/Source/fs_dir.c ****              return ((CPU_CHAR *)0);
 765              		.loc 1 1237 14 is_stmt 1 view .LVU231
 766 00c0 2846     		mov	r0, r5
 767 00c2 FFF7FEFF 		bl	FSVol_ReleaseUnlock
 768              	.LVL75:
1238:rtos/uC-FS/Source/fs_dir.c **** 
 769              		.loc 1 1238 14 view .LVU232
1238:rtos/uC-FS/Source/fs_dir.c **** 
 770              		.loc 1 1238 21 is_stmt 0 view .LVU233
 771 00c6 0024     		movs	r4, #0
 772              	.LVL76:
1238:rtos/uC-FS/Source/fs_dir.c **** 
 773              		.loc 1 1238 21 view .LVU234
 774 00c8 D2E7     		b	.L40
 775              	.LVL77:
 776              	.L53:
ARM GAS  /tmp/cc9zxjuG.s 			page 39


1196:rtos/uC-FS/Source/fs_dir.c ****     }
 777              		.loc 1 1196 16 view .LVU235
 778 00ca 0024     		movs	r4, #0
 779 00cc D0E7     		b	.L40
 780              		.cfi_endproc
 781              	.LFE16:
 783              		.section	.text.FSDir_ObjGet,"ax",%progbits
 784              		.align	1
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu fpv4-sp-d16
 790              	FSDir_ObjGet:
 791              	.LFB15:
1111:rtos/uC-FS/Source/fs_dir.c ****     FS_DIR   *p_dir;
 792              		.loc 1 1111 1 is_stmt 1 view -0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796 0000 30B5     		push	{r4, r5, lr}
 797              	.LCFI19:
 798              		.cfi_def_cfa_offset 12
 799              		.cfi_offset 4, -12
 800              		.cfi_offset 5, -8
 801              		.cfi_offset 14, -4
 802 0002 83B0     		sub	sp, sp, #12
 803              	.LCFI20:
 804              		.cfi_def_cfa_offset 24
1112:rtos/uC-FS/Source/fs_dir.c ****     LIB_ERR   pool_err;
 805              		.loc 1 1112 5 view .LVU237
1113:rtos/uC-FS/Source/fs_dir.c ****     FS_QTY    dir_ix;
 806              		.loc 1 1113 5 view .LVU238
1114:rtos/uC-FS/Source/fs_dir.c **** 
 807              		.loc 1 1114 5 view .LVU239
1116:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
 808              		.loc 1 1116 5 view .LVU240
 809              	.LVL78:
1116:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
 810              		.loc 1 1116 17 is_stmt 0 view .LVU241
 811 0004 0024     		movs	r4, #0
 812              	.LVL79:
 813              	.L63:
1116:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
 814              		.loc 1 1116 23 is_stmt 1 discriminator 1 view .LVU242
1116:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
 815              		.loc 1 1116 30 is_stmt 0 discriminator 1 view .LVU243
 816 0006 124B     		ldr	r3, .L69
 817 0008 1B88     		ldrh	r3, [r3]
1116:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
 818              		.loc 1 1116 5 discriminator 1 view .LVU244
 819 000a A342     		cmp	r3, r4
 820 000c 07D9     		bls	.L64
1117:rtos/uC-FS/Source/fs_dir.c ****             break;
 821              		.loc 1 1117 9 is_stmt 1 view .LVU245
1117:rtos/uC-FS/Source/fs_dir.c ****             break;
 822              		.loc 1 1117 22 is_stmt 0 view .LVU246
 823 000e 114A     		ldr	r2, .L69+4
ARM GAS  /tmp/cc9zxjuG.s 			page 40


 824 0010 1268     		ldr	r2, [r2]
 825 0012 52F82420 		ldr	r2, [r2, r4, lsl #2]
1117:rtos/uC-FS/Source/fs_dir.c ****             break;
 826              		.loc 1 1117 12 view .LVU247
 827 0016 12B1     		cbz	r2, .L64
1116:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
 828              		.loc 1 1116 49 is_stmt 1 discriminator 2 view .LVU248
1116:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
 829              		.loc 1 1116 55 is_stmt 0 discriminator 2 view .LVU249
 830 0018 0134     		adds	r4, r4, #1
 831              	.LVL80:
1116:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
 832              		.loc 1 1116 55 discriminator 2 view .LVU250
 833 001a A4B2     		uxth	r4, r4
 834              	.LVL81:
1116:rtos/uC-FS/Source/fs_dir.c ****         if (FSDir_Tbl[dir_ix] == DEF_NULL) {
 835              		.loc 1 1116 55 discriminator 2 view .LVU251
 836 001c F3E7     		b	.L63
 837              	.L64:
1121:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ObjGet(): Could not alloc dir from pool. Opened dir limit reached.\r\
 838              		.loc 1 1121 5 is_stmt 1 view .LVU252
1121:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ObjGet(): Could not alloc dir from pool. Opened dir limit reached.\r\
 839              		.loc 1 1121 8 is_stmt 0 view .LVU253
 840 001e A342     		cmp	r3, r4
 841 0020 14D9     		bls	.L67
1126:rtos/uC-FS/Source/fs_dir.c ****                                       sizeof(FS_DIR),
 842              		.loc 1 1126 5 is_stmt 1 view .LVU254
1126:rtos/uC-FS/Source/fs_dir.c ****                                       sizeof(FS_DIR),
 843              		.loc 1 1126 23 is_stmt 0 view .LVU255
 844 0022 0DF10602 		add	r2, sp, #6
 845 0026 1821     		movs	r1, #24
 846 0028 0B48     		ldr	r0, .L69+8
 847 002a FFF7FEFF 		bl	Mem_PoolBlkGet
 848              	.LVL82:
1129:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir == (FS_DIR *)0) {
 849              		.loc 1 1129 5 is_stmt 1 view .LVU256
1130:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ObjGet(): Could not alloc dir from pool. Opened directory limit reach
 850              		.loc 1 1130 5 view .LVU257
1130:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ObjGet(): Could not alloc dir from pool. Opened directory limit reach
 851              		.loc 1 1130 8 is_stmt 0 view .LVU258
 852 002e 0546     		mov	r5, r0
 853 0030 48B1     		cbz	r0, .L62
1135:rtos/uC-FS/Source/fs_dir.c **** 
 854              		.loc 1 1135 5 is_stmt 1 view .LVU259
1135:rtos/uC-FS/Source/fs_dir.c **** 
 855              		.loc 1 1135 14 is_stmt 0 view .LVU260
 856 0032 084B     		ldr	r3, .L69+4
 857 0034 1B68     		ldr	r3, [r3]
1135:rtos/uC-FS/Source/fs_dir.c **** 
 858              		.loc 1 1135 23 view .LVU261
 859 0036 43F82400 		str	r0, [r3, r4, lsl #2]
1137:rtos/uC-FS/Source/fs_dir.c **** 
 860              		.loc 1 1137 5 is_stmt 1 view .LVU262
1137:rtos/uC-FS/Source/fs_dir.c **** 
 861              		.loc 1 1137 14 is_stmt 0 view .LVU263
 862 003a 084A     		ldr	r2, .L69+12
 863 003c 1388     		ldrh	r3, [r2]
ARM GAS  /tmp/cc9zxjuG.s 			page 41


 864 003e 0133     		adds	r3, r3, #1
 865 0040 1380     		strh	r3, [r2]	@ movhi
1139:rtos/uC-FS/Source/fs_dir.c **** 
 866              		.loc 1 1139 5 is_stmt 1 view .LVU264
 867 0042 FFF7FEFF 		bl	FSDir_ObjClr
 868              	.LVL83:
1141:rtos/uC-FS/Source/fs_dir.c **** }
 869              		.loc 1 1141 5 view .LVU265
 870              	.L62:
1142:rtos/uC-FS/Source/fs_dir.c **** 
 871              		.loc 1 1142 1 is_stmt 0 view .LVU266
 872 0046 2846     		mov	r0, r5
 873 0048 03B0     		add	sp, sp, #12
 874              	.LCFI21:
 875              		.cfi_remember_state
 876              		.cfi_def_cfa_offset 12
 877              		@ sp needed
 878 004a 30BD     		pop	{r4, r5, pc}
 879              	.LVL84:
 880              	.L67:
 881              	.LCFI22:
 882              		.cfi_restore_state
1123:rtos/uC-FS/Source/fs_dir.c ****     }
 883              		.loc 1 1123 16 view .LVU267
 884 004c 0025     		movs	r5, #0
 885 004e FAE7     		b	.L62
 886              	.L70:
 887              		.align	2
 888              	.L69:
 889 0050 00000000 		.word	.LANCHOR1
 890 0054 00000000 		.word	.LANCHOR0
 891 0058 00000000 		.word	.LANCHOR2
 892 005c 00000000 		.word	.LANCHOR3
 893              		.cfi_endproc
 894              	.LFE15:
 896              		.section	.text.FSDir_Close,"ax",%progbits
 897              		.align	1
 898              		.global	FSDir_Close
 899              		.syntax unified
 900              		.thumb
 901              		.thumb_func
 902              		.fpu fpv4-sp-d16
 904              	FSDir_Close:
 905              	.LVL85:
 906              	.LFB0:
 188:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 907              		.loc 1 188 1 is_stmt 1 view -0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 188:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 911              		.loc 1 188 1 is_stmt 0 view .LVU269
 912 0000 38B5     		push	{r3, r4, r5, lr}
 913              	.LCFI23:
 914              		.cfi_def_cfa_offset 16
 915              		.cfi_offset 3, -16
 916              		.cfi_offset 4, -12
ARM GAS  /tmp/cc9zxjuG.s 			page 42


 917              		.cfi_offset 5, -8
 918              		.cfi_offset 14, -4
 919 0002 0446     		mov	r4, r0
 190:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION(;);
 920              		.loc 1 190 5 is_stmt 1 view .LVU270
 190:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION(;);
 921              		.loc 1 190 8 is_stmt 0 view .LVU271
 922 0004 0D46     		mov	r5, r1
 923 0006 39B1     		cbz	r1, .L77
 924              	.LVL86:
 925              	.L72:
 191:rtos/uC-FS/Source/fs_dir.c ****     }
 926              		.loc 1 191 9 is_stmt 1 discriminator 1 view .LVU272
 193:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NULL_PTR;
 927              		.loc 1 193 5 discriminator 1 view .LVU273
 193:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NULL_PTR;
 928              		.loc 1 193 8 is_stmt 0 discriminator 1 view .LVU274
 929 0008 4CB1     		cbz	r4, .L78
 199:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 930              		.loc 1 199 5 is_stmt 1 view .LVU275
 199:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 931              		.loc 1 199 24 is_stmt 0 view .LVU276
 932 000a 124B     		ldr	r3, .L79
 933 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 199:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 934              		.loc 1 199 8 view .LVU277
 935 000e 4BB9     		cbnz	r3, .L75
 200:rtos/uC-FS/Source/fs_dir.c ****         return;
 936              		.loc 1 200 8 is_stmt 1 view .LVU278
 200:rtos/uC-FS/Source/fs_dir.c ****         return;
 937              		.loc 1 200 15 is_stmt 0 view .LVU279
 938 0010 40F2F513 		movw	r3, #501
 939 0014 2B80     		strh	r3, [r5]	@ movhi
 201:rtos/uC-FS/Source/fs_dir.c ****     }
 940              		.loc 1 201 9 is_stmt 1 view .LVU280
 941              	.L71:
 225:rtos/uC-FS/Source/fs_dir.c **** 
 942              		.loc 1 225 1 is_stmt 0 view .LVU281
 943 0016 38BD     		pop	{r3, r4, r5, pc}
 944              	.LVL87:
 945              	.L77:
 191:rtos/uC-FS/Source/fs_dir.c ****     }
 946              		.loc 1 191 9 is_stmt 1 view .LVU282
 191:rtos/uC-FS/Source/fs_dir.c ****     }
 947              		.loc 1 191 9 view .LVU283
 948 0018 FFF7FEFF 		bl	CPU_SW_Exception
 949              	.LVL88:
 191:rtos/uC-FS/Source/fs_dir.c ****     }
 950              		.loc 1 191 9 is_stmt 0 view .LVU284
 951 001c F4E7     		b	.L72
 952              	.L78:
 194:rtos/uC-FS/Source/fs_dir.c ****         return;
 953              		.loc 1 194 8 is_stmt 1 view .LVU285
 194:rtos/uC-FS/Source/fs_dir.c ****         return;
 954              		.loc 1 194 15 is_stmt 0 view .LVU286
 955 001e 1323     		movs	r3, #19
 956 0020 2B80     		strh	r3, [r5]	@ movhi
ARM GAS  /tmp/cc9zxjuG.s 			page 43


 195:rtos/uC-FS/Source/fs_dir.c ****     }
 957              		.loc 1 195 9 is_stmt 1 view .LVU287
 958 0022 F8E7     		b	.L71
 959              	.L75:
 207:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 960              		.loc 1 207 5 view .LVU288
 207:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 961              		.loc 1 207 11 is_stmt 0 view .LVU289
 962 0024 2A46     		mov	r2, r5
 963 0026 0121     		movs	r1, #1
 964 0028 2046     		mov	r0, r4
 965 002a FFF7FEFF 		bl	FSDir_AcquireLockChk
 966              	.LVL89:
 208:rtos/uC-FS/Source/fs_dir.c ****         return;
 967              		.loc 1 208 5 is_stmt 1 view .LVU290
 208:rtos/uC-FS/Source/fs_dir.c ****         return;
 968              		.loc 1 208 9 is_stmt 0 view .LVU291
 969 002e 2B88     		ldrh	r3, [r5]
 208:rtos/uC-FS/Source/fs_dir.c ****         return;
 970              		.loc 1 208 8 view .LVU292
 971 0030 002B     		cmp	r3, #0
 972 0032 F0D1     		bne	.L71
 215:rtos/uC-FS/Source/fs_dir.c **** 
 973              		.loc 1 215 5 is_stmt 1 view .LVU293
 974 0034 2046     		mov	r0, r4
 975 0036 FFF7FEFF 		bl	FSSys_DirClose
 976              	.LVL90:
 217:rtos/uC-FS/Source/fs_dir.c ****     p_dir->State = FS_DIR_STATE_CLOSING;
 977              		.loc 1 217 5 view .LVU294
 978 003a 2146     		mov	r1, r4
 979 003c 2069     		ldr	r0, [r4, #16]
 980 003e FFF7FEFF 		bl	FSVol_DirRemove
 981              	.LVL91:
 218:rtos/uC-FS/Source/fs_dir.c **** 
 982              		.loc 1 218 5 view .LVU295
 218:rtos/uC-FS/Source/fs_dir.c **** 
 983              		.loc 1 218 18 is_stmt 0 view .LVU296
 984 0042 0123     		movs	r3, #1
 985 0044 2380     		strh	r3, [r4]	@ movhi
 223:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Release(p_dir);                                       /* Release dir ref init.           
 986              		.loc 1 223 5 is_stmt 1 view .LVU297
 987 0046 2046     		mov	r0, r4
 988 0048 FFF7FEFF 		bl	FSDir_ReleaseUnlock
 989              	.LVL92:
 224:rtos/uC-FS/Source/fs_dir.c **** }
 990              		.loc 1 224 5 view .LVU298
 991 004c 2046     		mov	r0, r4
 992 004e FFF7FEFF 		bl	FSDir_Release
 993              	.LVL93:
 994 0052 E0E7     		b	.L71
 995              	.L80:
 996              		.align	2
 997              	.L79:
 998 0054 00000000 		.word	.LANCHOR4
 999              		.cfi_endproc
 1000              	.LFE0:
 1002              		.section	.text.FSDir_IsOpen,"ax",%progbits
ARM GAS  /tmp/cc9zxjuG.s 			page 44


 1003              		.align	1
 1004              		.global	FSDir_IsOpen
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1008              		.fpu fpv4-sp-d16
 1010              	FSDir_IsOpen:
 1011              	.LVL94:
 1012              	.LFB1:
 262:rtos/uC-FS/Source/fs_dir.c ****     FS_DIR             *p_dir;
 1013              		.loc 1 262 1 view -0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 8
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 262:rtos/uC-FS/Source/fs_dir.c ****     FS_DIR             *p_dir;
 1017              		.loc 1 262 1 is_stmt 0 view .LVU300
 1018 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1019              	.LCFI24:
 1020              		.cfi_def_cfa_offset 20
 1021              		.cfi_offset 4, -20
 1022              		.cfi_offset 5, -16
 1023              		.cfi_offset 6, -12
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 83B0     		sub	sp, sp, #12
 1027              	.LCFI25:
 1028              		.cfi_def_cfa_offset 32
 1029 0004 0446     		mov	r4, r0
 263:rtos/uC-FS/Source/fs_dir.c ****     FS_QTY              max_ix;
 1030              		.loc 1 263 5 is_stmt 1 view .LVU301
 264:rtos/uC-FS/Source/fs_dir.c ****     CPU_INT32U          ix;
 1031              		.loc 1 264 5 view .LVU302
 265:rtos/uC-FS/Source/fs_dir.c ****     FS_FAT_FILE_DATA   *p_fat_file_data;
 1032              		.loc 1 265 5 view .LVU303
 266:rtos/uC-FS/Source/fs_dir.c ****     FS_VOL             *p_open_vol;
 1033              		.loc 1 266 5 view .LVU304
 267:rtos/uC-FS/Source/fs_dir.c ****     FS_VOL             *p_disk_vol;
 1034              		.loc 1 267 5 view .LVU305
 268:rtos/uC-FS/Source/fs_dir.c ****     FS_FAT_CLUS_NBR     open_dir_first_clus_nb;
 1035              		.loc 1 268 5 view .LVU306
 269:rtos/uC-FS/Source/fs_dir.c ****     FS_FAT_CLUS_NBR     disk_dir_first_clus_nb;
 1036              		.loc 1 269 5 view .LVU307
 270:rtos/uC-FS/Source/fs_dir.c ****     CPU_CHAR           *dir_name;
 1037              		.loc 1 270 5 view .LVU308
 271:rtos/uC-FS/Source/fs_dir.c ****     CPU_BOOLEAN         dir_open;
 1038              		.loc 1 271 5 view .LVU309
 272:rtos/uC-FS/Source/fs_dir.c **** 
 1039              		.loc 1 272 5 view .LVU310
 277:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION(DEF_YES);
 1040              		.loc 1 277 5 view .LVU311
 277:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION(DEF_YES);
 1041              		.loc 1 277 8 is_stmt 0 view .LVU312
 1042 0006 0D46     		mov	r5, r1
 1043 0008 61B1     		cbz	r1, .L95
 1044              	.LVL95:
 1045              	.L82:
 278:rtos/uC-FS/Source/fs_dir.c ****     }
ARM GAS  /tmp/cc9zxjuG.s 			page 45


 1046              		.loc 1 278 9 is_stmt 1 discriminator 1 view .LVU313
 280:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NAME_NULL;
 1047              		.loc 1 280 5 discriminator 1 view .LVU314
 280:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NAME_NULL;
 1048              		.loc 1 280 8 is_stmt 0 discriminator 1 view .LVU315
 1049 000a 74B1     		cbz	r4, .L96
 288:rtos/uC-FS/Source/fs_dir.c ****                                    &p_disk_vol,
 1050              		.loc 1 288 5 is_stmt 1 view .LVU316
 288:rtos/uC-FS/Source/fs_dir.c ****                                    &p_disk_vol,
 1051              		.loc 1 288 17 is_stmt 0 view .LVU317
 1052 000c 2A46     		mov	r2, r5
 1053 000e 01A9     		add	r1, sp, #4
 1054 0010 2046     		mov	r0, r4
 1055 0012 FFF7FEFF 		bl	FSDir_NameParseChk
 1056              	.LVL96:
 292:rtos/uC-FS/Source/fs_dir.c ****         *p_err  = FS_ERR_NONE;
 1057              		.loc 1 292 5 is_stmt 1 view .LVU318
 292:rtos/uC-FS/Source/fs_dir.c ****         *p_err  = FS_ERR_NONE;
 1058              		.loc 1 292 9 is_stmt 0 view .LVU319
 1059 0016 2B88     		ldrh	r3, [r5]
 292:rtos/uC-FS/Source/fs_dir.c ****         *p_err  = FS_ERR_NONE;
 1060              		.loc 1 292 8 view .LVU320
 1061 0018 63B1     		cbz	r3, .L85
 293:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_NO);
 1062              		.loc 1 293 9 is_stmt 1 view .LVU321
 293:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_NO);
 1063              		.loc 1 293 17 is_stmt 0 view .LVU322
 1064 001a 0024     		movs	r4, #0
 1065              	.LVL97:
 293:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_NO);
 1066              		.loc 1 293 17 view .LVU323
 1067 001c 2C80     		strh	r4, [r5]	@ movhi
 294:rtos/uC-FS/Source/fs_dir.c ****     }
 1068              		.loc 1 294 9 is_stmt 1 view .LVU324
 1069              	.LVL98:
 1070              	.L84:
 360:rtos/uC-FS/Source/fs_dir.c **** 
 1071              		.loc 1 360 1 is_stmt 0 view .LVU325
 1072 001e 2046     		mov	r0, r4
 1073 0020 03B0     		add	sp, sp, #12
 1074              	.LCFI26:
 1075              		.cfi_remember_state
 1076              		.cfi_def_cfa_offset 20
 1077              		@ sp needed
 1078 0022 F0BD     		pop	{r4, r5, r6, r7, pc}
 1079              	.LVL99:
 1080              	.L95:
 1081              	.LCFI27:
 1082              		.cfi_restore_state
 278:rtos/uC-FS/Source/fs_dir.c ****     }
 1083              		.loc 1 278 9 is_stmt 1 view .LVU326
 278:rtos/uC-FS/Source/fs_dir.c ****     }
 1084              		.loc 1 278 9 view .LVU327
 1085 0024 FFF7FEFF 		bl	CPU_SW_Exception
 1086              	.LVL100:
 278:rtos/uC-FS/Source/fs_dir.c ****     }
 1087              		.loc 1 278 9 is_stmt 0 view .LVU328
ARM GAS  /tmp/cc9zxjuG.s 			page 46


 1088 0028 EFE7     		b	.L82
 1089              	.L96:
 281:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_YES);
 1090              		.loc 1 281 8 is_stmt 1 view .LVU329
 281:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_YES);
 1091              		.loc 1 281 15 is_stmt 0 view .LVU330
 1092 002a 40F28933 		movw	r3, #905
 1093 002e 2B80     		strh	r3, [r5]	@ movhi
 282:rtos/uC-FS/Source/fs_dir.c ****     }
 1094              		.loc 1 282 9 is_stmt 1 view .LVU331
 282:rtos/uC-FS/Source/fs_dir.c ****     }
 1095              		.loc 1 282 16 is_stmt 0 view .LVU332
 1096 0030 0124     		movs	r4, #1
 1097              	.LVL101:
 282:rtos/uC-FS/Source/fs_dir.c ****     }
 1098              		.loc 1 282 16 view .LVU333
 1099 0032 F4E7     		b	.L84
 1100              	.LVL102:
 1101              	.L85:
 297:rtos/uC-FS/Source/fs_dir.c ****                                                          dir_name,
 1102              		.loc 1 297 5 is_stmt 1 view .LVU334
 297:rtos/uC-FS/Source/fs_dir.c ****                                                          dir_name,
 1103              		.loc 1 297 30 is_stmt 0 view .LVU335
 1104 0034 2A46     		mov	r2, r5
 1105 0036 0146     		mov	r1, r0
 1106 0038 0198     		ldr	r0, [sp, #4]
 1107              	.LVL103:
 297:rtos/uC-FS/Source/fs_dir.c ****                                                          dir_name,
 1108              		.loc 1 297 30 view .LVU336
 1109 003a FFF7FEFF 		bl	FS_FAT_LowFileFirstClusGet
 1110              	.LVL104:
 297:rtos/uC-FS/Source/fs_dir.c ****                                                          dir_name,
 1111              		.loc 1 297 30 view .LVU337
 1112 003e 0646     		mov	r6, r0
 1113              	.LVL105:
 300:rtos/uC-FS/Source/fs_dir.c ****     FSVol_Release(p_disk_vol);
 1114              		.loc 1 300 5 is_stmt 1 view .LVU338
 1115 0040 0198     		ldr	r0, [sp, #4]
 1116              	.LVL106:
 300:rtos/uC-FS/Source/fs_dir.c ****     FSVol_Release(p_disk_vol);
 1117              		.loc 1 300 5 is_stmt 0 view .LVU339
 1118 0042 FFF7FEFF 		bl	FSVol_Unlock
 1119              	.LVL107:
 301:rtos/uC-FS/Source/fs_dir.c **** 
 1120              		.loc 1 301 5 is_stmt 1 view .LVU340
 1121 0046 0198     		ldr	r0, [sp, #4]
 1122 0048 FFF7FEFF 		bl	FSVol_Release
 1123              	.LVL108:
 303:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_NONE:
 1124              		.loc 1 303 5 view .LVU341
 303:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_NONE:
 1125              		.loc 1 303 13 is_stmt 0 view .LVU342
 1126 004c 2B88     		ldrh	r3, [r5]
 303:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_NONE:
 1127              		.loc 1 303 5 view .LVU343
 1128 004e 3BB1     		cbz	r3, .L86
 1129 0050 A3F2C523 		subw	r3, r3, #709
ARM GAS  /tmp/cc9zxjuG.s 			page 47


 1130 0054 9BB2     		uxth	r3, r3
 1131 0056 022B     		cmp	r3, #2
 1132 0058 25D8     		bhi	.L91
 311:rtos/uC-FS/Source/fs_dir.c ****              return (DEF_NO);
 1133              		.loc 1 311 13 is_stmt 1 view .LVU344
 311:rtos/uC-FS/Source/fs_dir.c ****              return (DEF_NO);
 1134              		.loc 1 311 20 is_stmt 0 view .LVU345
 1135 005a 0024     		movs	r4, #0
 1136              	.LVL109:
 311:rtos/uC-FS/Source/fs_dir.c ****              return (DEF_NO);
 1137              		.loc 1 311 20 view .LVU346
 1138 005c 2C80     		strh	r4, [r5]	@ movhi
 312:rtos/uC-FS/Source/fs_dir.c **** 
 1139              		.loc 1 312 14 is_stmt 1 view .LVU347
 312:rtos/uC-FS/Source/fs_dir.c **** 
 1140              		.loc 1 312 21 is_stmt 0 view .LVU348
 1141 005e DEE7     		b	.L84
 1142              	.LVL110:
 1143              	.L86:
 305:rtos/uC-FS/Source/fs_dir.c **** 
 1144              		.loc 1 305 14 is_stmt 1 view .LVU349
 325:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 1145              		.loc 1 325 5 view .LVU350
 1146 0060 2846     		mov	r0, r5
 1147 0062 FFF7FEFF 		bl	FS_OS_Lock
 1148              	.LVL111:
 326:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_NO);
 1149              		.loc 1 326 5 view .LVU351
 326:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_NO);
 1150              		.loc 1 326 9 is_stmt 0 view .LVU352
 1151 0066 2B88     		ldrh	r3, [r5]
 326:rtos/uC-FS/Source/fs_dir.c ****         return (DEF_NO);
 1152              		.loc 1 326 8 view .LVU353
 1153 0068 FBB9     		cbnz	r3, .L92
 330:rtos/uC-FS/Source/fs_dir.c **** 
 1154              		.loc 1 330 5 is_stmt 1 view .LVU354
 330:rtos/uC-FS/Source/fs_dir.c **** 
 1155              		.loc 1 330 12 is_stmt 0 view .LVU355
 1156 006a 114B     		ldr	r3, .L97
 1157 006c 1F88     		ldrh	r7, [r3]
 1158              	.LVL112:
 332:rtos/uC-FS/Source/fs_dir.c ****     ix       = 0u;
 1159              		.loc 1 332 5 is_stmt 1 view .LVU356
 333:rtos/uC-FS/Source/fs_dir.c ****     while ((ix < max_ix) &&
 1160              		.loc 1 333 5 view .LVU357
 334:rtos/uC-FS/Source/fs_dir.c ****            (dir_open == DEF_NO)) {
 1161              		.loc 1 334 5 view .LVU358
 332:rtos/uC-FS/Source/fs_dir.c ****     ix       = 0u;
 1162              		.loc 1 332 14 is_stmt 0 view .LVU359
 1163 006e 0024     		movs	r4, #0
 1164              	.LVL113:
 333:rtos/uC-FS/Source/fs_dir.c ****     while ((ix < max_ix) &&
 1165              		.loc 1 333 14 view .LVU360
 1166 0070 2346     		mov	r3, r4
 334:rtos/uC-FS/Source/fs_dir.c ****            (dir_open == DEF_NO)) {
 1167              		.loc 1 334 11 view .LVU361
 1168 0072 00E0     		b	.L87
ARM GAS  /tmp/cc9zxjuG.s 			page 48


 1169              	.LVL114:
 1170              	.L88:
 351:rtos/uC-FS/Source/fs_dir.c ****     }
 1171              		.loc 1 351 9 is_stmt 1 view .LVU362
 351:rtos/uC-FS/Source/fs_dir.c ****     }
 1172              		.loc 1 351 11 is_stmt 0 view .LVU363
 1173 0074 0133     		adds	r3, r3, #1
 1174              	.LVL115:
 1175              	.L87:
 334:rtos/uC-FS/Source/fs_dir.c ****            (dir_open == DEF_NO)) {
 1176              		.loc 1 334 11 is_stmt 1 view .LVU364
 1177 0076 9F42     		cmp	r7, r3
 1178 0078 10D9     		bls	.L89
 334:rtos/uC-FS/Source/fs_dir.c ****            (dir_open == DEF_NO)) {
 1179              		.loc 1 334 26 is_stmt 0 discriminator 1 view .LVU365
 1180 007a 7CB9     		cbnz	r4, .L89
 336:rtos/uC-FS/Source/fs_dir.c **** 
 1181              		.loc 1 336 9 is_stmt 1 view .LVU366
 336:rtos/uC-FS/Source/fs_dir.c **** 
 1182              		.loc 1 336 26 is_stmt 0 view .LVU367
 1183 007c 0D4A     		ldr	r2, .L97+4
 1184 007e 1268     		ldr	r2, [r2]
 336:rtos/uC-FS/Source/fs_dir.c **** 
 1185              		.loc 1 336 15 view .LVU368
 1186 0080 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1187              	.LVL116:
 338:rtos/uC-FS/Source/fs_dir.c ****             p_open_vol = p_dir->VolPtr;
 1188              		.loc 1 338 9 is_stmt 1 view .LVU369
 338:rtos/uC-FS/Source/fs_dir.c ****             p_open_vol = p_dir->VolPtr;
 1189              		.loc 1 338 12 is_stmt 0 view .LVU370
 1190 0084 002A     		cmp	r2, #0
 1191 0086 F5D0     		beq	.L88
 339:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* Cmp vol ptr.                    
 1192              		.loc 1 339 13 is_stmt 1 view .LVU371
 339:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* Cmp vol ptr.                    
 1193              		.loc 1 339 24 is_stmt 0 view .LVU372
 1194 0088 1169     		ldr	r1, [r2, #16]
 1195              	.LVL117:
 341:rtos/uC-FS/Source/fs_dir.c ****                 p_fat_file_data        = (FS_FAT_FILE_DATA *)p_dir->DataPtr;
 1196              		.loc 1 341 13 is_stmt 1 view .LVU373
 341:rtos/uC-FS/Source/fs_dir.c ****                 p_fat_file_data        = (FS_FAT_FILE_DATA *)p_dir->DataPtr;
 1197              		.loc 1 341 28 is_stmt 0 view .LVU374
 1198 008a 0198     		ldr	r0, [sp, #4]
 341:rtos/uC-FS/Source/fs_dir.c ****                 p_fat_file_data        = (FS_FAT_FILE_DATA *)p_dir->DataPtr;
 1199              		.loc 1 341 16 view .LVU375
 1200 008c 8842     		cmp	r0, r1
 1201 008e F1D1     		bne	.L88
 342:rtos/uC-FS/Source/fs_dir.c ****                 open_dir_first_clus_nb =  p_fat_file_data->FileFirstClus;
 1202              		.loc 1 342 17 is_stmt 1 view .LVU376
 342:rtos/uC-FS/Source/fs_dir.c ****                 open_dir_first_clus_nb =  p_fat_file_data->FileFirstClus;
 1203              		.loc 1 342 40 is_stmt 0 view .LVU377
 1204 0090 5269     		ldr	r2, [r2, #20]
 1205              	.LVL118:
 343:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* Cmp 1st cluster address         
 1206              		.loc 1 343 17 is_stmt 1 view .LVU378
 343:rtos/uC-FS/Source/fs_dir.c ****                                                                 /* Cmp 1st cluster address         
 1207              		.loc 1 343 40 is_stmt 0 view .LVU379
ARM GAS  /tmp/cc9zxjuG.s 			page 49


 1208 0092 526A     		ldr	r2, [r2, #36]
 1209              	.LVL119:
 345:rtos/uC-FS/Source/fs_dir.c ****                     dir_open = DEF_YES;
 1210              		.loc 1 345 17 is_stmt 1 view .LVU380
 345:rtos/uC-FS/Source/fs_dir.c ****                     dir_open = DEF_YES;
 1211              		.loc 1 345 20 is_stmt 0 view .LVU381
 1212 0094 9642     		cmp	r6, r2
 1213 0096 EDD1     		bne	.L88
 346:rtos/uC-FS/Source/fs_dir.c ****                 }
 1214              		.loc 1 346 30 view .LVU382
 1215 0098 0124     		movs	r4, #1
 1216              	.LVL120:
 346:rtos/uC-FS/Source/fs_dir.c ****                 }
 1217              		.loc 1 346 30 view .LVU383
 1218 009a EBE7     		b	.L88
 1219              	.LVL121:
 1220              	.L89:
 354:rtos/uC-FS/Source/fs_dir.c **** 
 1221              		.loc 1 354 5 is_stmt 1 view .LVU384
 1222 009c FFF7FEFF 		bl	FS_OS_Unlock
 1223              	.LVL122:
 357:rtos/uC-FS/Source/fs_dir.c **** 
 1224              		.loc 1 357 4 view .LVU385
 357:rtos/uC-FS/Source/fs_dir.c **** 
 1225              		.loc 1 357 13 is_stmt 0 view .LVU386
 1226 00a0 0023     		movs	r3, #0
 1227 00a2 2B80     		strh	r3, [r5]	@ movhi
 359:rtos/uC-FS/Source/fs_dir.c **** }
 1228              		.loc 1 359 5 is_stmt 1 view .LVU387
 359:rtos/uC-FS/Source/fs_dir.c **** }
 1229              		.loc 1 359 12 is_stmt 0 view .LVU388
 1230 00a4 BBE7     		b	.L84
 1231              	.LVL123:
 1232              	.L91:
 303:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_NONE:
 1233              		.loc 1 303 5 view .LVU389
 1234 00a6 0024     		movs	r4, #0
 1235              	.LVL124:
 303:rtos/uC-FS/Source/fs_dir.c ****         case FS_ERR_NONE:
 1236              		.loc 1 303 5 view .LVU390
 1237 00a8 B9E7     		b	.L84
 1238              	.LVL125:
 1239              	.L92:
 327:rtos/uC-FS/Source/fs_dir.c ****     }
 1240              		.loc 1 327 16 view .LVU391
 1241 00aa 0024     		movs	r4, #0
 1242              	.LVL126:
 327:rtos/uC-FS/Source/fs_dir.c ****     }
 1243              		.loc 1 327 16 view .LVU392
 1244 00ac B7E7     		b	.L84
 1245              	.L98:
 1246 00ae 00BF     		.align	2
 1247              	.L97:
 1248 00b0 00000000 		.word	.LANCHOR3
 1249 00b4 00000000 		.word	.LANCHOR0
 1250              		.cfi_endproc
 1251              	.LFE1:
ARM GAS  /tmp/cc9zxjuG.s 			page 50


 1253              		.section	.text.FSDir_Open,"ax",%progbits
 1254              		.align	1
 1255              		.global	FSDir_Open
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1259              		.fpu fpv4-sp-d16
 1261              	FSDir_Open:
 1262              	.LVL127:
 1263              	.LFB2:
 403:rtos/uC-FS/Source/fs_dir.c ****     CPU_CHAR  *name_dir;
 1264              		.loc 1 403 1 is_stmt 1 view -0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 8
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 403:rtos/uC-FS/Source/fs_dir.c ****     CPU_CHAR  *name_dir;
 1268              		.loc 1 403 1 is_stmt 0 view .LVU394
 1269 0000 70B5     		push	{r4, r5, r6, lr}
 1270              	.LCFI28:
 1271              		.cfi_def_cfa_offset 16
 1272              		.cfi_offset 4, -16
 1273              		.cfi_offset 5, -12
 1274              		.cfi_offset 6, -8
 1275              		.cfi_offset 14, -4
 1276 0002 82B0     		sub	sp, sp, #8
 1277              	.LCFI29:
 1278              		.cfi_def_cfa_offset 24
 1279 0004 0546     		mov	r5, r0
 404:rtos/uC-FS/Source/fs_dir.c ****     CPU_CHAR  *name_full_temp;
 1280              		.loc 1 404 5 is_stmt 1 view .LVU395
 405:rtos/uC-FS/Source/fs_dir.c ****     FS_DIR    *p_dir;
 1281              		.loc 1 405 5 view .LVU396
 406:rtos/uC-FS/Source/fs_dir.c ****     FS_VOL    *p_vol;
 1282              		.loc 1 406 5 view .LVU397
 407:rtos/uC-FS/Source/fs_dir.c **** 
 1283              		.loc 1 407 5 view .LVU398
 411:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION((FS_DIR *)0);
 1284              		.loc 1 411 5 view .LVU399
 411:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION((FS_DIR *)0);
 1285              		.loc 1 411 8 is_stmt 0 view .LVU400
 1286 0006 0E46     		mov	r6, r1
 1287 0008 0029     		cmp	r1, #0
 1288 000a 34D0     		beq	.L109
 1289              	.LVL128:
 1290              	.L100:
 412:rtos/uC-FS/Source/fs_dir.c ****     }
 1291              		.loc 1 412 9 is_stmt 1 discriminator 1 view .LVU401
 414:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NAME_NULL;
 1292              		.loc 1 414 5 discriminator 1 view .LVU402
 414:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NAME_NULL;
 1293              		.loc 1 414 8 is_stmt 0 discriminator 1 view .LVU403
 1294 000c 002D     		cmp	r5, #0
 1295 000e 35D0     		beq	.L110
 420:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 1296              		.loc 1 420 5 is_stmt 1 view .LVU404
 420:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 1297              		.loc 1 420 24 is_stmt 0 view .LVU405
ARM GAS  /tmp/cc9zxjuG.s 			page 51


 1298 0010 294B     		ldr	r3, .L115
 1299 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 420:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 1300              		.loc 1 420 8 view .LVU406
 1301 0014 002B     		cmp	r3, #0
 1302 0016 36D0     		beq	.L111
 427:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 1303              		.loc 1 427 5 is_stmt 1 view .LVU407
 1304 0018 3046     		mov	r0, r6
 1305 001a FFF7FEFF 		bl	FS_OS_Lock
 1306              	.LVL129:
 428:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1307              		.loc 1 428 5 view .LVU408
 428:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1308              		.loc 1 428 9 is_stmt 0 view .LVU409
 1309 001e 3388     		ldrh	r3, [r6]
 428:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1310              		.loc 1 428 8 view .LVU410
 1311 0020 002B     		cmp	r3, #0
 1312 0022 47D1     		bne	.L107
 432:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir == (FS_DIR *)0) {
 1313              		.loc 1 432 5 is_stmt 1 view .LVU411
 432:rtos/uC-FS/Source/fs_dir.c ****     if (p_dir == (FS_DIR *)0) {
 1314              		.loc 1 432 13 is_stmt 0 view .LVU412
 1315 0024 FFF7FEFF 		bl	FSDir_ObjGet
 1316              	.LVL130:
 433:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_NONE_AVAIL;
 1317              		.loc 1 433 5 is_stmt 1 view .LVU413
 433:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_NONE_AVAIL;
 1318              		.loc 1 433 8 is_stmt 0 view .LVU414
 1319 0028 0446     		mov	r4, r0
 1320 002a 88B3     		cbz	r0, .L112
 439:rtos/uC-FS/Source/fs_dir.c ****     p_dir->State  =  FS_DIR_STATE_OPENING;
 1321              		.loc 1 439 5 is_stmt 1 view .LVU415
 439:rtos/uC-FS/Source/fs_dir.c ****     p_dir->State  =  FS_DIR_STATE_OPENING;
 1322              		.loc 1 439 19 is_stmt 0 view .LVU416
 1323 002c 0123     		movs	r3, #1
 1324 002e 4360     		str	r3, [r0, #4]
 440:rtos/uC-FS/Source/fs_dir.c ****     p_dir->VolPtr = (FS_VOL *)0;
 1325              		.loc 1 440 5 is_stmt 1 view .LVU417
 440:rtos/uC-FS/Source/fs_dir.c ****     p_dir->VolPtr = (FS_VOL *)0;
 1326              		.loc 1 440 19 is_stmt 0 view .LVU418
 1327 0030 0223     		movs	r3, #2
 1328 0032 0380     		strh	r3, [r0]	@ movhi
 441:rtos/uC-FS/Source/fs_dir.c **** 
 1329              		.loc 1 441 5 is_stmt 1 view .LVU419
 441:rtos/uC-FS/Source/fs_dir.c **** 
 1330              		.loc 1 441 19 is_stmt 0 view .LVU420
 1331 0034 0023     		movs	r3, #0
 1332 0036 0361     		str	r3, [r0, #16]
 443:rtos/uC-FS/Source/fs_dir.c **** 
 1333              		.loc 1 443 5 is_stmt 1 view .LVU421
 1334 0038 FFF7FEFF 		bl	FS_OS_Unlock
 1335              	.LVL131:
 455:rtos/uC-FS/Source/fs_dir.c **** #endif
 1336              		.loc 1 455 5 view .LVU422
 461:rtos/uC-FS/Source/fs_dir.c ****                                   &p_vol,
ARM GAS  /tmp/cc9zxjuG.s 			page 52


 1337              		.loc 1 461 5 view .LVU423
 461:rtos/uC-FS/Source/fs_dir.c ****                                   &p_vol,
 1338              		.loc 1 461 16 is_stmt 0 view .LVU424
 1339 003c 3246     		mov	r2, r6
 1340 003e 01A9     		add	r1, sp, #4
 1341 0040 2846     		mov	r0, r5
 1342 0042 FFF7FEFF 		bl	FSDir_NameParseChk
 1343              	.LVL132:
 1344 0046 0146     		mov	r1, r0
 1345              	.LVL133:
 464:rtos/uC-FS/Source/fs_dir.c ****     if (p_vol == (FS_VOL *)0) {                                 /* If no vol found ...             
 1346              		.loc 1 464 5 is_stmt 1 view .LVU425
 465:rtos/uC-FS/Source/fs_dir.c ****         FSDir_Release(p_dir);                                   /*                 ... release dir 
 1347              		.loc 1 465 5 view .LVU426
 465:rtos/uC-FS/Source/fs_dir.c ****         FSDir_Release(p_dir);                                   /*                 ... release dir 
 1348              		.loc 1 465 15 is_stmt 0 view .LVU427
 1349 0048 019D     		ldr	r5, [sp, #4]
 1350              	.LVL134:
 465:rtos/uC-FS/Source/fs_dir.c ****         FSDir_Release(p_dir);                                   /*                 ... release dir 
 1351              		.loc 1 465 8 view .LVU428
 1352 004a 3DB3     		cbz	r5, .L113
 473:rtos/uC-FS/Source/fs_dir.c **** 
 1353              		.loc 1 473 5 is_stmt 1 view .LVU429
 473:rtos/uC-FS/Source/fs_dir.c **** 
 1354              		.loc 1 473 19 is_stmt 0 view .LVU430
 1355 004c 2561     		str	r5, [r4, #16]
 475:rtos/uC-FS/Source/fs_dir.c ****                   name_dir,
 1356              		.loc 1 475 5 is_stmt 1 view .LVU431
 1357 004e 3246     		mov	r2, r6
 1358 0050 2046     		mov	r0, r4
 1359              	.LVL135:
 475:rtos/uC-FS/Source/fs_dir.c ****                   name_dir,
 1360              		.loc 1 475 5 is_stmt 0 view .LVU432
 1361 0052 FFF7FEFF 		bl	FSSys_DirOpen
 1362              	.LVL136:
 485:rtos/uC-FS/Source/fs_dir.c ****         p_dir->State = FS_DIR_STATE_CLOSING;
 1363              		.loc 1 485 5 is_stmt 1 view .LVU433
 485:rtos/uC-FS/Source/fs_dir.c ****         p_dir->State = FS_DIR_STATE_CLOSING;
 1364              		.loc 1 485 9 is_stmt 0 view .LVU434
 1365 0056 3388     		ldrh	r3, [r6]
 485:rtos/uC-FS/Source/fs_dir.c ****         p_dir->State = FS_DIR_STATE_CLOSING;
 1366              		.loc 1 485 8 view .LVU435
 1367 0058 2BBB     		cbnz	r3, .L114
 491:rtos/uC-FS/Source/fs_dir.c ****     p_dir->RefreshCnt = p_vol->RefreshCnt;
 1368              		.loc 1 491 5 is_stmt 1 view .LVU436
 491:rtos/uC-FS/Source/fs_dir.c ****     p_dir->RefreshCnt = p_vol->RefreshCnt;
 1369              		.loc 1 491 23 is_stmt 0 view .LVU437
 1370 005a 0323     		movs	r3, #3
 1371 005c 2380     		strh	r3, [r4]	@ movhi
 492:rtos/uC-FS/Source/fs_dir.c ****     FSVol_DirAdd(p_vol, p_dir);                                 /* Link file to vol dir list.      
 1372              		.loc 1 492 5 is_stmt 1 view .LVU438
 492:rtos/uC-FS/Source/fs_dir.c ****     FSVol_DirAdd(p_vol, p_dir);                                 /* Link file to vol dir list.      
 1373              		.loc 1 492 30 is_stmt 0 view .LVU439
 1374 005e 0198     		ldr	r0, [sp, #4]
 1375 0060 8368     		ldr	r3, [r0, #8]
 492:rtos/uC-FS/Source/fs_dir.c ****     FSVol_DirAdd(p_vol, p_dir);                                 /* Link file to vol dir list.      
 1376              		.loc 1 492 23 view .LVU440
ARM GAS  /tmp/cc9zxjuG.s 			page 53


 1377 0062 A360     		str	r3, [r4, #8]
 493:rtos/uC-FS/Source/fs_dir.c **** 
 1378              		.loc 1 493 5 is_stmt 1 view .LVU441
 1379 0064 2146     		mov	r1, r4
 1380 0066 FFF7FEFF 		bl	FSVol_DirAdd
 1381              	.LVL137:
 498:rtos/uC-FS/Source/fs_dir.c ****     return (p_dir);
 1382              		.loc 1 498 5 view .LVU442
 1383 006a 2046     		mov	r0, r4
 1384 006c FFF7FEFF 		bl	FSDir_Unlock
 1385              	.LVL138:
 499:rtos/uC-FS/Source/fs_dir.c **** }
 1386              		.loc 1 499 5 view .LVU443
 1387              	.L99:
 500:rtos/uC-FS/Source/fs_dir.c **** 
 1388              		.loc 1 500 1 is_stmt 0 view .LVU444
 1389 0070 2046     		mov	r0, r4
 1390 0072 02B0     		add	sp, sp, #8
 1391              	.LCFI30:
 1392              		.cfi_remember_state
 1393              		.cfi_def_cfa_offset 16
 1394              		@ sp needed
 1395 0074 70BD     		pop	{r4, r5, r6, pc}
 1396              	.LVL139:
 1397              	.L109:
 1398              	.LCFI31:
 1399              		.cfi_restore_state
 412:rtos/uC-FS/Source/fs_dir.c ****     }
 1400              		.loc 1 412 9 is_stmt 1 view .LVU445
 412:rtos/uC-FS/Source/fs_dir.c ****     }
 1401              		.loc 1 412 9 view .LVU446
 1402 0076 FFF7FEFF 		bl	CPU_SW_Exception
 1403              	.LVL140:
 412:rtos/uC-FS/Source/fs_dir.c ****     }
 1404              		.loc 1 412 9 is_stmt 0 view .LVU447
 1405 007a C7E7     		b	.L100
 1406              	.L110:
 415:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1407              		.loc 1 415 8 is_stmt 1 view .LVU448
 415:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1408              		.loc 1 415 15 is_stmt 0 view .LVU449
 1409 007c 40F28933 		movw	r3, #905
 1410 0080 3380     		strh	r3, [r6]	@ movhi
 416:rtos/uC-FS/Source/fs_dir.c ****     }
 1411              		.loc 1 416 9 is_stmt 1 view .LVU450
 416:rtos/uC-FS/Source/fs_dir.c ****     }
 1412              		.loc 1 416 16 is_stmt 0 view .LVU451
 1413 0082 2C46     		mov	r4, r5
 1414 0084 F4E7     		b	.L99
 1415              	.L111:
 421:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1416              		.loc 1 421 8 is_stmt 1 view .LVU452
 421:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1417              		.loc 1 421 15 is_stmt 0 view .LVU453
 1418 0086 40F2F513 		movw	r3, #501
 1419 008a 3380     		strh	r3, [r6]	@ movhi
 422:rtos/uC-FS/Source/fs_dir.c ****     }
ARM GAS  /tmp/cc9zxjuG.s 			page 54


 1420              		.loc 1 422 9 is_stmt 1 view .LVU454
 422:rtos/uC-FS/Source/fs_dir.c ****     }
 1421              		.loc 1 422 16 is_stmt 0 view .LVU455
 1422 008c 0024     		movs	r4, #0
 1423 008e EFE7     		b	.L99
 1424              	.LVL141:
 1425              	.L112:
 434:rtos/uC-FS/Source/fs_dir.c ****         FS_OS_Unlock();
 1426              		.loc 1 434 8 is_stmt 1 view .LVU456
 434:rtos/uC-FS/Source/fs_dir.c ****         FS_OS_Unlock();
 1427              		.loc 1 434 15 is_stmt 0 view .LVU457
 1428 0090 40F2F713 		movw	r3, #503
 1429 0094 3380     		strh	r3, [r6]	@ movhi
 435:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1430              		.loc 1 435 9 is_stmt 1 view .LVU458
 1431 0096 FFF7FEFF 		bl	FS_OS_Unlock
 1432              	.LVL142:
 436:rtos/uC-FS/Source/fs_dir.c ****     }
 1433              		.loc 1 436 9 view .LVU459
 436:rtos/uC-FS/Source/fs_dir.c ****     }
 1434              		.loc 1 436 16 is_stmt 0 view .LVU460
 1435 009a E9E7     		b	.L99
 1436              	.LVL143:
 1437              	.L113:
 466:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1438              		.loc 1 466 9 is_stmt 1 view .LVU461
 1439 009c 2046     		mov	r0, r4
 1440              	.LVL144:
 466:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1441              		.loc 1 466 9 is_stmt 0 view .LVU462
 1442 009e FFF7FEFF 		bl	FSDir_Release
 1443              	.LVL145:
 467:rtos/uC-FS/Source/fs_dir.c ****     }
 1444              		.loc 1 467 9 is_stmt 1 view .LVU463
 467:rtos/uC-FS/Source/fs_dir.c ****     }
 1445              		.loc 1 467 16 is_stmt 0 view .LVU464
 1446 00a2 2C46     		mov	r4, r5
 1447              	.LVL146:
 467:rtos/uC-FS/Source/fs_dir.c ****     }
 1448              		.loc 1 467 16 view .LVU465
 1449 00a4 E4E7     		b	.L99
 1450              	.LVL147:
 1451              	.L114:
 486:rtos/uC-FS/Source/fs_dir.c ****         FSDir_ReleaseUnlock(p_dir);
 1452              		.loc 1 486 9 is_stmt 1 view .LVU466
 486:rtos/uC-FS/Source/fs_dir.c ****         FSDir_ReleaseUnlock(p_dir);
 1453              		.loc 1 486 22 is_stmt 0 view .LVU467
 1454 00a6 0123     		movs	r3, #1
 1455 00a8 2380     		strh	r3, [r4]	@ movhi
 487:rtos/uC-FS/Source/fs_dir.c ****         return ((FS_DIR *)0);
 1456              		.loc 1 487 9 is_stmt 1 view .LVU468
 1457 00aa 2046     		mov	r0, r4
 1458 00ac FFF7FEFF 		bl	FSDir_ReleaseUnlock
 1459              	.LVL148:
 488:rtos/uC-FS/Source/fs_dir.c ****     }
 1460              		.loc 1 488 9 view .LVU469
 488:rtos/uC-FS/Source/fs_dir.c ****     }
ARM GAS  /tmp/cc9zxjuG.s 			page 55


 1461              		.loc 1 488 16 is_stmt 0 view .LVU470
 1462 00b0 0024     		movs	r4, #0
 1463              	.LVL149:
 488:rtos/uC-FS/Source/fs_dir.c ****     }
 1464              		.loc 1 488 16 view .LVU471
 1465 00b2 DDE7     		b	.L99
 1466              	.LVL150:
 1467              	.L107:
 429:rtos/uC-FS/Source/fs_dir.c ****     }
 1468              		.loc 1 429 16 view .LVU472
 1469 00b4 0024     		movs	r4, #0
 1470 00b6 DBE7     		b	.L99
 1471              	.L116:
 1472              		.align	2
 1473              	.L115:
 1474 00b8 00000000 		.word	.LANCHOR4
 1475              		.cfi_endproc
 1476              	.LFE2:
 1478              		.section	.text.FSDir_Rd,"ax",%progbits
 1479              		.align	1
 1480              		.global	FSDir_Rd
 1481              		.syntax unified
 1482              		.thumb
 1483              		.thumb_func
 1484              		.fpu fpv4-sp-d16
 1486              	FSDir_Rd:
 1487              	.LVL151:
 1488              	.LFB3:
 549:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 1489              		.loc 1 549 1 is_stmt 1 view -0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 0
 1492              		@ frame_needed = 0, uses_anonymous_args = 0
 549:rtos/uC-FS/Source/fs_dir.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 1493              		.loc 1 549 1 is_stmt 0 view .LVU474
 1494 0000 70B5     		push	{r4, r5, r6, lr}
 1495              	.LCFI32:
 1496              		.cfi_def_cfa_offset 16
 1497              		.cfi_offset 4, -16
 1498              		.cfi_offset 5, -12
 1499              		.cfi_offset 6, -8
 1500              		.cfi_offset 14, -4
 1501 0002 0446     		mov	r4, r0
 1502 0004 0D46     		mov	r5, r1
 551:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION(;);
 1503              		.loc 1 551 5 is_stmt 1 view .LVU475
 551:rtos/uC-FS/Source/fs_dir.c ****         CPU_SW_EXCEPTION(;);
 1504              		.loc 1 551 8 is_stmt 0 view .LVU476
 1505 0006 1646     		mov	r6, r2
 1506 0008 42B1     		cbz	r2, .L124
 1507              	.LVL152:
 1508              	.L118:
 552:rtos/uC-FS/Source/fs_dir.c ****     }
 1509              		.loc 1 552 9 is_stmt 1 discriminator 1 view .LVU477
 554:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NULL_PTR;
 1510              		.loc 1 554 5 discriminator 1 view .LVU478
 554:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NULL_PTR;
ARM GAS  /tmp/cc9zxjuG.s 			page 56


 1511              		.loc 1 554 8 is_stmt 0 discriminator 1 view .LVU479
 1512 000a 54B1     		cbz	r4, .L125
 558:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NULL_PTR;
 1513              		.loc 1 558 5 is_stmt 1 view .LVU480
 558:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NULL_PTR;
 1514              		.loc 1 558 8 is_stmt 0 view .LVU481
 1515 000c 65B1     		cbz	r5, .L126
 564:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 1516              		.loc 1 564 5 is_stmt 1 view .LVU482
 564:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 1517              		.loc 1 564 24 is_stmt 0 view .LVU483
 1518 000e 104B     		ldr	r3, .L127
 1519 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 564:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_DIR_DIS;
 1520              		.loc 1 564 8 view .LVU484
 1521 0012 63B9     		cbnz	r3, .L122
 565:rtos/uC-FS/Source/fs_dir.c ****         return;
 1522              		.loc 1 565 8 is_stmt 1 view .LVU485
 565:rtos/uC-FS/Source/fs_dir.c ****         return;
 1523              		.loc 1 565 15 is_stmt 0 view .LVU486
 1524 0014 40F2F513 		movw	r3, #501
 1525 0018 3380     		strh	r3, [r6]	@ movhi
 566:rtos/uC-FS/Source/fs_dir.c ****     }
 1526              		.loc 1 566 9 is_stmt 1 view .LVU487
 1527              	.L117:
 589:rtos/uC-FS/Source/fs_dir.c **** 
 1528              		.loc 1 589 1 is_stmt 0 view .LVU488
 1529 001a 70BD     		pop	{r4, r5, r6, pc}
 1530              	.LVL153:
 1531              	.L124:
 552:rtos/uC-FS/Source/fs_dir.c ****     }
 1532              		.loc 1 552 9 is_stmt 1 view .LVU489
 552:rtos/uC-FS/Source/fs_dir.c ****     }
 1533              		.loc 1 552 9 view .LVU490
 1534 001c FFF7FEFF 		bl	CPU_SW_Exception
 1535              	.LVL154:
 552:rtos/uC-FS/Source/fs_dir.c ****     }
 1536              		.loc 1 552 9 is_stmt 0 view .LVU491
 1537 0020 F3E7     		b	.L118
 1538              	.L125:
 555:rtos/uC-FS/Source/fs_dir.c ****         return;
 1539              		.loc 1 555 8 is_stmt 1 view .LVU492
 555:rtos/uC-FS/Source/fs_dir.c ****         return;
 1540              		.loc 1 555 15 is_stmt 0 view .LVU493
 1541 0022 1323     		movs	r3, #19
 1542 0024 3380     		strh	r3, [r6]	@ movhi
 556:rtos/uC-FS/Source/fs_dir.c ****     }
 1543              		.loc 1 556 9 is_stmt 1 view .LVU494
 1544 0026 F8E7     		b	.L117
 1545              	.L126:
 559:rtos/uC-FS/Source/fs_dir.c ****         return;
 1546              		.loc 1 559 8 view .LVU495
 559:rtos/uC-FS/Source/fs_dir.c ****         return;
 1547              		.loc 1 559 15 is_stmt 0 view .LVU496
 1548 0028 1323     		movs	r3, #19
 1549 002a 3380     		strh	r3, [r6]	@ movhi
 560:rtos/uC-FS/Source/fs_dir.c ****     }
ARM GAS  /tmp/cc9zxjuG.s 			page 57


 1550              		.loc 1 560 9 is_stmt 1 view .LVU497
 1551 002c F5E7     		b	.L117
 1552              	.L122:
 572:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 1553              		.loc 1 572 5 view .LVU498
 572:rtos/uC-FS/Source/fs_dir.c ****     if (*p_err != FS_ERR_NONE) {
 1554              		.loc 1 572 11 is_stmt 0 view .LVU499
 1555 002e 3246     		mov	r2, r6
 1556 0030 0021     		movs	r1, #0
 1557 0032 2046     		mov	r0, r4
 1558 0034 FFF7FEFF 		bl	FSDir_AcquireLockChk
 1559              	.LVL155:
 573:rtos/uC-FS/Source/fs_dir.c ****         return;
 1560              		.loc 1 573 5 is_stmt 1 view .LVU500
 573:rtos/uC-FS/Source/fs_dir.c ****         return;
 1561              		.loc 1 573 9 is_stmt 0 view .LVU501
 1562 0038 3388     		ldrh	r3, [r6]
 573:rtos/uC-FS/Source/fs_dir.c ****         return;
 1563              		.loc 1 573 8 view .LVU502
 1564 003a 002B     		cmp	r3, #0
 1565 003c EDD1     		bne	.L117
 580:rtos/uC-FS/Source/fs_dir.c ****                 p_dir_entry,
 1566              		.loc 1 580 5 is_stmt 1 view .LVU503
 1567 003e 3246     		mov	r2, r6
 1568 0040 2946     		mov	r1, r5
 1569 0042 2046     		mov	r0, r4
 1570 0044 FFF7FEFF 		bl	FSSys_DirRd
 1571              	.LVL156:
 588:rtos/uC-FS/Source/fs_dir.c **** }
 1572              		.loc 1 588 5 view .LVU504
 1573 0048 2046     		mov	r0, r4
 1574 004a FFF7FEFF 		bl	FSDir_ReleaseUnlock
 1575              	.LVL157:
 1576 004e E4E7     		b	.L117
 1577              	.L128:
 1578              		.align	2
 1579              	.L127:
 1580 0050 00000000 		.word	.LANCHOR4
 1581              		.cfi_endproc
 1582              	.LFE3:
 1584              		.section	.text.FSDir_GetDirCnt,"ax",%progbits
 1585              		.align	1
 1586              		.global	FSDir_GetDirCnt
 1587              		.syntax unified
 1588              		.thumb
 1589              		.thumb_func
 1590              		.fpu fpv4-sp-d16
 1592              	FSDir_GetDirCnt:
 1593              	.LFB4:
 615:rtos/uC-FS/Source/fs_dir.c ****     FS_QTY  dir_cnt;
 1594              		.loc 1 615 1 view -0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 8
 1597              		@ frame_needed = 0, uses_anonymous_args = 0
 1598 0000 10B5     		push	{r4, lr}
 1599              	.LCFI33:
 1600              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc9zxjuG.s 			page 58


 1601              		.cfi_offset 4, -8
 1602              		.cfi_offset 14, -4
 1603 0002 82B0     		sub	sp, sp, #8
 1604              	.LCFI34:
 1605              		.cfi_def_cfa_offset 16
 616:rtos/uC-FS/Source/fs_dir.c ****     FS_ERR  err;
 1606              		.loc 1 616 5 view .LVU506
 617:rtos/uC-FS/Source/fs_dir.c **** 
 1607              		.loc 1 617 5 view .LVU507
 620:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 1608              		.loc 1 620 5 view .LVU508
 620:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 1609              		.loc 1 620 24 is_stmt 0 view .LVU509
 1610 0004 0A4B     		ldr	r3, .L136
 1611 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 620:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 1612              		.loc 1 620 8 view .LVU510
 1613 0008 1BB9     		cbnz	r3, .L134
 621:rtos/uC-FS/Source/fs_dir.c ****     }
 1614              		.loc 1 621 16 view .LVU511
 1615 000a 0024     		movs	r4, #0
 1616              	.L130:
 642:rtos/uC-FS/Source/fs_dir.c **** 
 1617              		.loc 1 642 1 view .LVU512
 1618 000c 2046     		mov	r0, r4
 1619 000e 02B0     		add	sp, sp, #8
 1620              	.LCFI35:
 1621              		.cfi_remember_state
 1622              		.cfi_def_cfa_offset 8
 1623              		@ sp needed
 1624 0010 10BD     		pop	{r4, pc}
 1625              	.L134:
 1626              	.LCFI36:
 1627              		.cfi_restore_state
 626:rtos/uC-FS/Source/fs_dir.c ****     if (err != FS_ERR_NONE) {
 1628              		.loc 1 626 5 is_stmt 1 view .LVU513
 1629 0012 0DF10600 		add	r0, sp, #6
 1630 0016 FFF7FEFF 		bl	FS_OS_Lock
 1631              	.LVL158:
 627:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 1632              		.loc 1 627 5 view .LVU514
 627:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 1633              		.loc 1 627 13 is_stmt 0 view .LVU515
 1634 001a BDF80630 		ldrh	r3, [sp, #6]
 627:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 1635              		.loc 1 627 8 view .LVU516
 1636 001e 0BB1     		cbz	r3, .L135
 628:rtos/uC-FS/Source/fs_dir.c ****     }
 1637              		.loc 1 628 16 view .LVU517
 1638 0020 0024     		movs	r4, #0
 1639 0022 F3E7     		b	.L130
 1640              	.L135:
 634:rtos/uC-FS/Source/fs_dir.c **** 
 1641              		.loc 1 634 5 is_stmt 1 view .LVU518
 634:rtos/uC-FS/Source/fs_dir.c **** 
 1642              		.loc 1 634 13 is_stmt 0 view .LVU519
 1643 0024 034B     		ldr	r3, .L136+4
ARM GAS  /tmp/cc9zxjuG.s 			page 59


 1644 0026 1C88     		ldrh	r4, [r3]
 1645              	.LVL159:
 639:rtos/uC-FS/Source/fs_dir.c **** 
 1646              		.loc 1 639 5 is_stmt 1 view .LVU520
 1647 0028 FFF7FEFF 		bl	FS_OS_Unlock
 1648              	.LVL160:
 641:rtos/uC-FS/Source/fs_dir.c **** }
 1649              		.loc 1 641 5 view .LVU521
 641:rtos/uC-FS/Source/fs_dir.c **** }
 1650              		.loc 1 641 12 is_stmt 0 view .LVU522
 1651 002c EEE7     		b	.L130
 1652              	.L137:
 1653 002e 00BF     		.align	2
 1654              	.L136:
 1655 0030 00000000 		.word	.LANCHOR4
 1656 0034 00000000 		.word	.LANCHOR3
 1657              		.cfi_endproc
 1658              	.LFE4:
 1660              		.section	.text.FSDir_GetDirCntMax,"ax",%progbits
 1661              		.align	1
 1662              		.global	FSDir_GetDirCntMax
 1663              		.syntax unified
 1664              		.thumb
 1665              		.thumb_func
 1666              		.fpu fpv4-sp-d16
 1668              	FSDir_GetDirCntMax:
 1669              	.LFB5:
 660:rtos/uC-FS/Source/fs_dir.c ****     FS_QTY  dir_cnt_max;
 1670              		.loc 1 660 1 is_stmt 1 view -0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674              		@ link register save eliminated.
 661:rtos/uC-FS/Source/fs_dir.c **** 
 1675              		.loc 1 661 5 view .LVU524
 664:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 1676              		.loc 1 664 5 view .LVU525
 664:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 1677              		.loc 1 664 24 is_stmt 0 view .LVU526
 1678 0000 034B     		ldr	r3, .L141
 1679 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 664:rtos/uC-FS/Source/fs_dir.c ****         return (0u);
 1680              		.loc 1 664 8 view .LVU527
 1681 0004 13B1     		cbz	r3, .L140
 670:rtos/uC-FS/Source/fs_dir.c **** 
 1682              		.loc 1 670 5 is_stmt 1 view .LVU528
 670:rtos/uC-FS/Source/fs_dir.c **** 
 1683              		.loc 1 670 17 is_stmt 0 view .LVU529
 1684 0006 034B     		ldr	r3, .L141+4
 1685 0008 1888     		ldrh	r0, [r3]
 1686              	.LVL161:
 672:rtos/uC-FS/Source/fs_dir.c **** }
 1687              		.loc 1 672 5 is_stmt 1 view .LVU530
 672:rtos/uC-FS/Source/fs_dir.c **** }
 1688              		.loc 1 672 12 is_stmt 0 view .LVU531
 1689 000a 7047     		bx	lr
 1690              	.LVL162:
ARM GAS  /tmp/cc9zxjuG.s 			page 60


 1691              	.L140:
 665:rtos/uC-FS/Source/fs_dir.c ****     }
 1692              		.loc 1 665 16 view .LVU532
 1693 000c 0020     		movs	r0, #0
 673:rtos/uC-FS/Source/fs_dir.c **** 
 1694              		.loc 1 673 1 view .LVU533
 1695 000e 7047     		bx	lr
 1696              	.L142:
 1697              		.align	2
 1698              	.L141:
 1699 0010 00000000 		.word	.LANCHOR4
 1700 0014 00000000 		.word	.LANCHOR1
 1701              		.cfi_endproc
 1702              	.LFE5:
 1704              		.section	.text.FSDir_ModuleInit,"ax",%progbits
 1705              		.align	1
 1706              		.global	FSDir_ModuleInit
 1707              		.syntax unified
 1708              		.thumb
 1709              		.thumb_func
 1710              		.fpu fpv4-sp-d16
 1712              	FSDir_ModuleInit:
 1713              	.LVL163:
 1714              	.LFB6:
 707:rtos/uC-FS/Source/fs_dir.c ****     CPU_SIZE_T  octets_reqd;
 1715              		.loc 1 707 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 8
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 707:rtos/uC-FS/Source/fs_dir.c ****     CPU_SIZE_T  octets_reqd;
 1719              		.loc 1 707 1 is_stmt 0 view .LVU535
 1720 0000 70B5     		push	{r4, r5, r6, lr}
 1721              	.LCFI37:
 1722              		.cfi_def_cfa_offset 16
 1723              		.cfi_offset 4, -16
 1724              		.cfi_offset 5, -12
 1725              		.cfi_offset 6, -8
 1726              		.cfi_offset 14, -4
 1727 0002 86B0     		sub	sp, sp, #24
 1728              	.LCFI38:
 1729              		.cfi_def_cfa_offset 40
 1730 0004 0C46     		mov	r4, r1
 708:rtos/uC-FS/Source/fs_dir.c ****     LIB_ERR     pool_err;
 1731              		.loc 1 708 5 is_stmt 1 view .LVU536
 709:rtos/uC-FS/Source/fs_dir.c **** 
 1732              		.loc 1 709 5 view .LVU537
 719:rtos/uC-FS/Source/fs_dir.c ****     FSDir_DirCntMax = 0u;
 1733              		.loc 1 719 5 view .LVU538
 719:rtos/uC-FS/Source/fs_dir.c ****     FSDir_DirCntMax = 0u;
 1734              		.loc 1 719 21 is_stmt 0 view .LVU539
 1735 0006 0023     		movs	r3, #0
 1736 0008 204A     		ldr	r2, .L150
 1737 000a 1370     		strb	r3, [r2]
 720:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Cnt       = 0u;
 1738              		.loc 1 720 5 is_stmt 1 view .LVU540
 720:rtos/uC-FS/Source/fs_dir.c ****     FSDir_Cnt       = 0u;
 1739              		.loc 1 720 21 is_stmt 0 view .LVU541
ARM GAS  /tmp/cc9zxjuG.s 			page 61


 1740 000c 204A     		ldr	r2, .L150+4
 1741 000e 1380     		strh	r3, [r2]	@ movhi
 721:rtos/uC-FS/Source/fs_dir.c **** 
 1742              		.loc 1 721 5 is_stmt 1 view .LVU542
 721:rtos/uC-FS/Source/fs_dir.c **** 
 1743              		.loc 1 721 21 is_stmt 0 view .LVU543
 1744 0010 204A     		ldr	r2, .L150+8
 1745 0012 1380     		strh	r3, [r2]	@ movhi
 723:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NONE;
 1746              		.loc 1 723 5 is_stmt 1 view .LVU544
 723:rtos/uC-FS/Source/fs_dir.c ****        *p_err = FS_ERR_NONE;
 1747              		.loc 1 723 8 is_stmt 0 view .LVU545
 1748 0014 10B9     		cbnz	r0, .L144
 724:rtos/uC-FS/Source/fs_dir.c ****         return;
 1749              		.loc 1 724 8 is_stmt 1 view .LVU546
 724:rtos/uC-FS/Source/fs_dir.c ****         return;
 1750              		.loc 1 724 15 is_stmt 0 view .LVU547
 1751 0016 0B80     		strh	r3, [r1]	@ movhi
 725:rtos/uC-FS/Source/fs_dir.c ****     }
 1752              		.loc 1 725 9 is_stmt 1 view .LVU548
 1753              	.LVL164:
 1754              	.L143:
 760:rtos/uC-FS/Source/fs_dir.c **** 
 1755              		.loc 1 760 1 is_stmt 0 view .LVU549
 1756 0018 06B0     		add	sp, sp, #24
 1757              	.LCFI39:
 1758              		.cfi_remember_state
 1759              		.cfi_def_cfa_offset 16
 1760              		@ sp needed
 1761 001a 70BD     		pop	{r4, r5, r6, pc}
 1762              	.LVL165:
 1763              	.L144:
 1764              	.LCFI40:
 1765              		.cfi_restore_state
 760:rtos/uC-FS/Source/fs_dir.c **** 
 1766              		.loc 1 760 1 view .LVU550
 1767 001c 0546     		mov	r5, r0
 729:rtos/uC-FS/Source/fs_dir.c ****                     DEF_NULL,
 1768              		.loc 1 729 5 is_stmt 1 view .LVU551
 1769 001e 0DF11203 		add	r3, sp, #18
 1770 0022 0393     		str	r3, [sp, #12]
 1771 0024 05AB     		add	r3, sp, #20
 1772 0026 0293     		str	r3, [sp, #8]
 1773 0028 0423     		movs	r3, #4
 1774 002a 0193     		str	r3, [sp, #4]
 1775 002c 1823     		movs	r3, #24
 1776 002e 0093     		str	r3, [sp]
 1777 0030 0346     		mov	r3, r0
 1778 0032 0022     		movs	r2, #0
 1779 0034 1146     		mov	r1, r2
 1780              	.LVL166:
 729:rtos/uC-FS/Source/fs_dir.c ****                     DEF_NULL,
 1781              		.loc 1 729 5 is_stmt 0 view .LVU552
 1782 0036 1848     		ldr	r0, .L150+12
 1783              	.LVL167:
 729:rtos/uC-FS/Source/fs_dir.c ****                     DEF_NULL,
 1784              		.loc 1 729 5 view .LVU553
ARM GAS  /tmp/cc9zxjuG.s 			page 62


 1785 0038 FFF7FEFF 		bl	Mem_PoolCreate
 1786              	.LVL168:
 738:rtos/uC-FS/Source/fs_dir.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1787              		.loc 1 738 5 is_stmt 1 view .LVU554
 738:rtos/uC-FS/Source/fs_dir.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1788              		.loc 1 738 18 is_stmt 0 view .LVU555
 1789 003c BDF81220 		ldrh	r2, [sp, #18]
 738:rtos/uC-FS/Source/fs_dir.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1790              		.loc 1 738 8 view .LVU556
 1791 0040 42F21073 		movw	r3, #10000
 1792 0044 9A42     		cmp	r2, r3
 1793 0046 02D0     		beq	.L146
 739:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ModuleInit(): Could not alloc mem for dirs: %d octets required.\r\n",
 1794              		.loc 1 739 8 is_stmt 1 view .LVU557
 739:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ModuleInit(): Could not alloc mem for dirs: %d octets required.\r\n",
 1795              		.loc 1 739 16 is_stmt 0 view .LVU558
 1796 0048 1123     		movs	r3, #17
 1797 004a 2380     		strh	r3, [r4]	@ movhi
 740:rtos/uC-FS/Source/fs_dir.c ****         return;
 1798              		.loc 1 740 114 is_stmt 1 view .LVU559
 741:rtos/uC-FS/Source/fs_dir.c ****     }
 1799              		.loc 1 741 9 view .LVU560
 1800 004c E4E7     		b	.L143
 1801              	.L146:
 744:rtos/uC-FS/Source/fs_dir.c ****                                          sizeof(CPU_ALIGN),
 1802              		.loc 1 744 5 view .LVU561
 744:rtos/uC-FS/Source/fs_dir.c ****                                          sizeof(CPU_ALIGN),
 1803              		.loc 1 744 28 is_stmt 0 view .LVU562
 1804 004e AE00     		lsls	r6, r5, #2
 1805 0050 0DF11203 		add	r3, sp, #18
 1806 0054 05AA     		add	r2, sp, #20
 1807 0056 0421     		movs	r1, #4
 1808 0058 3046     		mov	r0, r6
 1809 005a FFF7FEFF 		bl	Mem_HeapAlloc
 1810              	.LVL169:
 744:rtos/uC-FS/Source/fs_dir.c ****                                          sizeof(CPU_ALIGN),
 1811              		.loc 1 744 15 view .LVU563
 1812 005e 0F4B     		ldr	r3, .L150+16
 1813 0060 1860     		str	r0, [r3]
 748:rtos/uC-FS/Source/fs_dir.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1814              		.loc 1 748 5 is_stmt 1 view .LVU564
 748:rtos/uC-FS/Source/fs_dir.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1815              		.loc 1 748 18 is_stmt 0 view .LVU565
 1816 0062 BDF81220 		ldrh	r2, [sp, #18]
 748:rtos/uC-FS/Source/fs_dir.c ****        *p_err  = FS_ERR_MEM_ALLOC;
 1817              		.loc 1 748 8 view .LVU566
 1818 0066 42F21073 		movw	r3, #10000
 1819 006a 9A42     		cmp	r2, r3
 1820 006c 02D0     		beq	.L147
 749:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ModuleInit(): Could not alloc mem for dirs: %d octets required.\r\n",
 1821              		.loc 1 749 8 is_stmt 1 view .LVU567
 749:rtos/uC-FS/Source/fs_dir.c ****         FS_TRACE_INFO(("FSDir_ModuleInit(): Could not alloc mem for dirs: %d octets required.\r\n",
 1822              		.loc 1 749 16 is_stmt 0 view .LVU568
 1823 006e 1123     		movs	r3, #17
 1824 0070 2380     		strh	r3, [r4]	@ movhi
 750:rtos/uC-FS/Source/fs_dir.c ****         return;
 1825              		.loc 1 750 114 is_stmt 1 view .LVU569
ARM GAS  /tmp/cc9zxjuG.s 			page 63


 751:rtos/uC-FS/Source/fs_dir.c ****     }
 1826              		.loc 1 751 9 view .LVU570
 1827 0072 D1E7     		b	.L143
 1828              	.L147:
 754:rtos/uC-FS/Source/fs_dir.c **** 
 1829              		.loc 1 754 5 view .LVU571
 1830 0074 3146     		mov	r1, r6
 1831 0076 FFF7FEFF 		bl	Mem_Clr
 1832              	.LVL170:
 756:rtos/uC-FS/Source/fs_dir.c ****     FSDir_DirCntMax = dir_cnt;
 1833              		.loc 1 756 5 view .LVU572
 756:rtos/uC-FS/Source/fs_dir.c ****     FSDir_DirCntMax = dir_cnt;
 1834              		.loc 1 756 21 is_stmt 0 view .LVU573
 1835 007a 044B     		ldr	r3, .L150
 1836 007c 0122     		movs	r2, #1
 1837 007e 1A70     		strb	r2, [r3]
 757:rtos/uC-FS/Source/fs_dir.c **** 
 1838              		.loc 1 757 5 is_stmt 1 view .LVU574
 757:rtos/uC-FS/Source/fs_dir.c **** 
 1839              		.loc 1 757 21 is_stmt 0 view .LVU575
 1840 0080 034B     		ldr	r3, .L150+4
 1841 0082 1D80     		strh	r5, [r3]	@ movhi
 759:rtos/uC-FS/Source/fs_dir.c **** }
 1842              		.loc 1 759 4 is_stmt 1 view .LVU576
 759:rtos/uC-FS/Source/fs_dir.c **** }
 1843              		.loc 1 759 11 is_stmt 0 view .LVU577
 1844 0084 0023     		movs	r3, #0
 1845 0086 2380     		strh	r3, [r4]	@ movhi
 1846 0088 C6E7     		b	.L143
 1847              	.L151:
 1848 008a 00BF     		.align	2
 1849              	.L150:
 1850 008c 00000000 		.word	.LANCHOR4
 1851 0090 00000000 		.word	.LANCHOR1
 1852 0094 00000000 		.word	.LANCHOR3
 1853 0098 00000000 		.word	.LANCHOR2
 1854 009c 00000000 		.word	.LANCHOR0
 1855              		.cfi_endproc
 1856              	.LFE6:
 1858              		.section	.bss.FSDir_Cnt,"aw",%nobits
 1859              		.align	1
 1860              		.set	.LANCHOR3,. + 0
 1863              	FSDir_Cnt:
 1864 0000 0000     		.space	2
 1865              		.section	.bss.FSDir_DirCntMax,"aw",%nobits
 1866              		.align	1
 1867              		.set	.LANCHOR1,. + 0
 1870              	FSDir_DirCntMax:
 1871 0000 0000     		.space	2
 1872              		.section	.bss.FSDir_ModuleEn,"aw",%nobits
 1873              		.set	.LANCHOR4,. + 0
 1876              	FSDir_ModuleEn:
 1877 0000 00       		.space	1
 1878              		.section	.bss.FSDir_Pool,"aw",%nobits
 1879              		.align	2
 1880              		.set	.LANCHOR2,. + 0
 1883              	FSDir_Pool:
ARM GAS  /tmp/cc9zxjuG.s 			page 64


 1884 0000 00000000 		.space	24
 1884      00000000 
 1884      00000000 
 1884      00000000 
 1884      00000000 
 1885              		.section	.bss.FSDir_Tbl,"aw",%nobits
 1886              		.align	2
 1887              		.set	.LANCHOR0,. + 0
 1890              	FSDir_Tbl:
 1891 0000 00000000 		.space	4
 1892              		.text
 1893              	.Letext0:
 1894              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 1895              		.file 3 "rtos/uC-LIB/lib_def.h"
 1896              		.file 4 "rtos/uC-Clk/Source/clk.h"
 1897              		.file 5 "rtos/uC-LIB/lib_mem.h"
 1898              		.file 6 "rtos/uC-FS/Source/fs_type.h"
 1899              		.file 7 "rtos/uC-FS/Source/fs_dev.h"
 1900              		.file 8 "rtos/uC-FS/Source/fs_dir.h"
 1901              		.file 9 "rtos/uC-FS/Source/fs_entry.h"
 1902              		.file 10 "rtos/uC-FS/Source/fs_vol.h"
 1903              		.file 11 "rtos/uC-FS/Source/fs_err.h"
 1904              		.file 12 "rtos/uC-FS/Source/fs_ctr.h"
 1905              		.file 13 "rtos/uC-FS/Source/../FAT/fs_fat_type.h"
 1906              		.file 14 "rtos/uC-FS/Source/../FAT/fs_fat.h"
 1907              		.file 15 "rtos/uC-FS/Source/fs.h"
 1908              		.file 16 "rtos/uC-LIB/lib_str.h"
 1909              		.file 17 "rtos/uC-CPU/cpu_core.h"
 1910              		.file 18 "rtos/uC-FS/Source/fs_sys.h"
ARM GAS  /tmp/cc9zxjuG.s 			page 65


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fs_dir.c
     /tmp/cc9zxjuG.s:18     .text.FSDir_ObjClr:0000000000000000 $t
     /tmp/cc9zxjuG.s:25     .text.FSDir_ObjClr:0000000000000000 FSDir_ObjClr
     /tmp/cc9zxjuG.s:59     .text.FSDir_Acquire:0000000000000000 $t
     /tmp/cc9zxjuG.s:65     .text.FSDir_Acquire:0000000000000000 FSDir_Acquire
     /tmp/cc9zxjuG.s:136    .text.FSDir_Lock:0000000000000000 $t
     /tmp/cc9zxjuG.s:142    .text.FSDir_Lock:0000000000000000 FSDir_Lock
     /tmp/cc9zxjuG.s:170    .text.FSDir_Unlock:0000000000000000 $t
     /tmp/cc9zxjuG.s:176    .text.FSDir_Unlock:0000000000000000 FSDir_Unlock
     /tmp/cc9zxjuG.s:201    .text.FSDir_ObjFree:0000000000000000 $t
     /tmp/cc9zxjuG.s:207    .text.FSDir_ObjFree:0000000000000000 FSDir_ObjFree
     /tmp/cc9zxjuG.s:295    .text.FSDir_ObjFree:0000000000000048 $d
     /tmp/cc9zxjuG.s:303    .text.FSDir_Release:0000000000000000 $t
     /tmp/cc9zxjuG.s:309    .text.FSDir_Release:0000000000000000 FSDir_Release
     /tmp/cc9zxjuG.s:404    .text.FSDir_ReleaseUnlock:0000000000000000 $t
     /tmp/cc9zxjuG.s:410    .text.FSDir_ReleaseUnlock:0000000000000000 FSDir_ReleaseUnlock
     /tmp/cc9zxjuG.s:438    .text.FSDir_AcquireLockChk:0000000000000000 $t
     /tmp/cc9zxjuG.s:444    .text.FSDir_AcquireLockChk:0000000000000000 FSDir_AcquireLockChk
     /tmp/cc9zxjuG.s:538    .text.FSDir_NameParseChk:0000000000000000 $t
     /tmp/cc9zxjuG.s:544    .text.FSDir_NameParseChk:0000000000000000 FSDir_NameParseChk
     /tmp/cc9zxjuG.s:784    .text.FSDir_ObjGet:0000000000000000 $t
     /tmp/cc9zxjuG.s:790    .text.FSDir_ObjGet:0000000000000000 FSDir_ObjGet
     /tmp/cc9zxjuG.s:889    .text.FSDir_ObjGet:0000000000000050 $d
     /tmp/cc9zxjuG.s:897    .text.FSDir_Close:0000000000000000 $t
     /tmp/cc9zxjuG.s:904    .text.FSDir_Close:0000000000000000 FSDir_Close
     /tmp/cc9zxjuG.s:998    .text.FSDir_Close:0000000000000054 $d
     /tmp/cc9zxjuG.s:1003   .text.FSDir_IsOpen:0000000000000000 $t
     /tmp/cc9zxjuG.s:1010   .text.FSDir_IsOpen:0000000000000000 FSDir_IsOpen
     /tmp/cc9zxjuG.s:1248   .text.FSDir_IsOpen:00000000000000b0 $d
     /tmp/cc9zxjuG.s:1254   .text.FSDir_Open:0000000000000000 $t
     /tmp/cc9zxjuG.s:1261   .text.FSDir_Open:0000000000000000 FSDir_Open
     /tmp/cc9zxjuG.s:1474   .text.FSDir_Open:00000000000000b8 $d
     /tmp/cc9zxjuG.s:1479   .text.FSDir_Rd:0000000000000000 $t
     /tmp/cc9zxjuG.s:1486   .text.FSDir_Rd:0000000000000000 FSDir_Rd
     /tmp/cc9zxjuG.s:1580   .text.FSDir_Rd:0000000000000050 $d
     /tmp/cc9zxjuG.s:1585   .text.FSDir_GetDirCnt:0000000000000000 $t
     /tmp/cc9zxjuG.s:1592   .text.FSDir_GetDirCnt:0000000000000000 FSDir_GetDirCnt
     /tmp/cc9zxjuG.s:1655   .text.FSDir_GetDirCnt:0000000000000030 $d
     /tmp/cc9zxjuG.s:1661   .text.FSDir_GetDirCntMax:0000000000000000 $t
     /tmp/cc9zxjuG.s:1668   .text.FSDir_GetDirCntMax:0000000000000000 FSDir_GetDirCntMax
     /tmp/cc9zxjuG.s:1699   .text.FSDir_GetDirCntMax:0000000000000010 $d
     /tmp/cc9zxjuG.s:1705   .text.FSDir_ModuleInit:0000000000000000 $t
     /tmp/cc9zxjuG.s:1712   .text.FSDir_ModuleInit:0000000000000000 FSDir_ModuleInit
     /tmp/cc9zxjuG.s:1850   .text.FSDir_ModuleInit:000000000000008c $d
     /tmp/cc9zxjuG.s:1859   .bss.FSDir_Cnt:0000000000000000 $d
     /tmp/cc9zxjuG.s:1863   .bss.FSDir_Cnt:0000000000000000 FSDir_Cnt
     /tmp/cc9zxjuG.s:1866   .bss.FSDir_DirCntMax:0000000000000000 $d
     /tmp/cc9zxjuG.s:1870   .bss.FSDir_DirCntMax:0000000000000000 FSDir_DirCntMax
     /tmp/cc9zxjuG.s:1876   .bss.FSDir_ModuleEn:0000000000000000 FSDir_ModuleEn
     /tmp/cc9zxjuG.s:1877   .bss.FSDir_ModuleEn:0000000000000000 $d
     /tmp/cc9zxjuG.s:1879   .bss.FSDir_Pool:0000000000000000 $d
     /tmp/cc9zxjuG.s:1883   .bss.FSDir_Pool:0000000000000000 FSDir_Pool
     /tmp/cc9zxjuG.s:1886   .bss.FSDir_Tbl:0000000000000000 $d
     /tmp/cc9zxjuG.s:1890   .bss.FSDir_Tbl:0000000000000000 FSDir_Tbl
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
ARM GAS  /tmp/cc9zxjuG.s 			page 66


                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.fs.h.42.4f6311a594ee5619f1ee7a9392eb7faa
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.fs_def.h.42.653ad677c23ef93c522ec84af681385d
                           .group:0000000000000000 wm4.fs_cfg.h.116.da4f8e9d0b9040a97ef3bf26c61e90fd
                           .group:0000000000000000 wm4.clk.h.99.39403db6a27321e53b261bbe20b56e1d
                           .group:0000000000000000 wm4.lib_str.h.60.32f6cabaf9bf142bd5051c414a220578
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_str.h.174.5879a17e9fe25aed81d2c99c1603a671
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366
                           .group:0000000000000000 wm4.fs_cfg_fs.h.176.c85074fbe881bfa594608376a65f4dc2
                           .group:0000000000000000 wm4.fs_type.h.42.0906d0337a2df5da9e27cec176b255f1
                           .group:0000000000000000 wm4.lib_mem.h.65.5ae3d762676d2043783018a38f269058
                           .group:0000000000000000 wm4.fs_type.h.139.acab71eb554f7e54c56a7894094211e6
                           .group:0000000000000000 wm4.fs_err.h.42.d52bfed31dff3d1419c5cf09952dee67
                           .group:0000000000000000 wm4.fs.h.97.1d629f0ba32b5622ab4e01a254bd98e8
                           .group:0000000000000000 wm4.fs_ctr.h.42.9d1398cac157503ac8af114819f7782b
                           .group:0000000000000000 wm4.fs_entry.h.42.9d70c930b2952a9ef63a0a4e9d586c20
                           .group:0000000000000000 wm4.fs_dir.h.81.1bdecde7a8c5f66d3e35b7c2d379936d
                           .group:0000000000000000 wm4.fs_file.h.42.74c26597bc17b842069a1de9e164f613
                           .group:0000000000000000 wm4.fs_vol.h.42.b307128eec61fcaf68a96ce7f965d41e
                           .group:0000000000000000 wm4.fs_dev.h.42.010e15055e38efd3492ae3a9a504ffd0
                           .group:0000000000000000 wm4.fs_util.h.64.fe7812d6ca4c430dea2d2e705fd73c11
                           .group:0000000000000000 wm4.fs_fat_type.h.44.5030ef39a150a8f4f55331616cd38bbd
                           .group:0000000000000000 wm4.fs_fat.h.103.89adf2d396ea9a0dd44def3a42712dd1

UNDEFINED SYMBOLS
FS_OS_Lock
FS_OS_Unlock
FSVol_Lock
FSVol_Unlock
Mem_PoolBlkFree
FSVol_Release
FS_PathParse
Str_Len_N
FSVol_AcquireDflt
FSVol_RefreshLocked
FSVol_Acquire
FSVol_ReleaseUnlock
Mem_PoolBlkGet
CPU_SW_Exception
FSSys_DirClose
FSVol_DirRemove
FS_FAT_LowFileFirstClusGet
FSSys_DirOpen
FSVol_DirAdd
FSSys_DirRd
Mem_PoolCreate
Mem_HeapAlloc
Mem_Clr

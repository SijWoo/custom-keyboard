ARM GAS  /tmp/cct1pkgW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"clk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Clk_IsLeapYr,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Clk_IsLeapYr:
  26              	.LVL0:
  27              	.LFB31:
  28              		.file 1 "rtos/uC-Clk/Source/clk.c"
   1:rtos/uC-Clk/Source/clk.c **** /*
   2:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
   3:rtos/uC-Clk/Source/clk.c **** *                                               uC/Clk
   4:rtos/uC-Clk/Source/clk.c **** *                                          Clock / Calendar
   5:rtos/uC-Clk/Source/clk.c **** *
   6:rtos/uC-Clk/Source/clk.c **** *                         (c) Copyright 2005-2019; Silicon Laboratories Inc.,
   7:rtos/uC-Clk/Source/clk.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-Clk/Source/clk.c **** *
   9:rtos/uC-Clk/Source/clk.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-Clk/Source/clk.c **** *
  11:rtos/uC-Clk/Source/clk.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-Clk/Source/clk.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-Clk/Source/clk.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-Clk/Source/clk.c **** *                  license, you may not use this software.
  15:rtos/uC-Clk/Source/clk.c **** *
  16:rtos/uC-Clk/Source/clk.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-Clk/Source/clk.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-Clk/Source/clk.c **** *
  19:rtos/uC-Clk/Source/clk.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-Clk/Source/clk.c **** *
  21:rtos/uC-Clk/Source/clk.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
  23:rtos/uC-Clk/Source/clk.c **** */
  24:rtos/uC-Clk/Source/clk.c **** 
  25:rtos/uC-Clk/Source/clk.c **** /*
  26:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
  27:rtos/uC-Clk/Source/clk.c **** *
  28:rtos/uC-Clk/Source/clk.c **** *                                          CLOCK / CALENDAR
  29:rtos/uC-Clk/Source/clk.c **** *
  30:rtos/uC-Clk/Source/clk.c **** * Filename : clk.c
ARM GAS  /tmp/cct1pkgW.s 			page 2


  31:rtos/uC-Clk/Source/clk.c **** * Version  : V3.09.07
  32:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
  33:rtos/uC-Clk/Source/clk.c **** * Note(s)  : (1) Assumes the following versions (or more recent) of software modules are included
  34:rtos/uC-Clk/Source/clk.c **** *                in the project build :
  35:rtos/uC-Clk/Source/clk.c **** *
  36:rtos/uC-Clk/Source/clk.c **** *                (a) uC/CPU V1.25
  37:rtos/uC-Clk/Source/clk.c **** *                (b) uC/LIB V1.29
  38:rtos/uC-Clk/Source/clk.c **** *
  39:rtos/uC-Clk/Source/clk.c **** *
  40:rtos/uC-Clk/Source/clk.c **** *            (2) (a) Clock module is based on Coordinated Universal Time (UTC) and supports the
  41:rtos/uC-Clk/Source/clk.c **** *                    following features :
  42:rtos/uC-Clk/Source/clk.c **** *
  43:rtos/uC-Clk/Source/clk.c **** *                    (1) Time zones
  44:rtos/uC-Clk/Source/clk.c **** *                    (2) Leap years
  45:rtos/uC-Clk/Source/clk.c **** *                    (3) Leap seconds
  46:rtos/uC-Clk/Source/clk.c **** *
  47:rtos/uC-Clk/Source/clk.c **** *                (b) Clock module does NOT support Daylight (Savings) Time. If you want to handle
  48:rtos/uC-Clk/Source/clk.c **** *                    Daylight Time in your application, set time zone offset accordingly.
  49:rtos/uC-Clk/Source/clk.c **** *
  50:rtos/uC-Clk/Source/clk.c **** *                (c) Timestamp and Coordinated Universal Time (UTC) related links :
  51:rtos/uC-Clk/Source/clk.c **** *
  52:rtos/uC-Clk/Source/clk.c **** *                    (1) http://www.timeanddate.com/time/aboututc.html
  53:rtos/uC-Clk/Source/clk.c **** *                    (2) http://www.allanstime.com/Publications/DWA/Science_Timekeeping/TheScienceO
  54:rtos/uC-Clk/Source/clk.c **** *                    (3) http://www.cl.cam.ac.uk/~mgk25/time/metrologia-leapsecond.pdf
  55:rtos/uC-Clk/Source/clk.c **** *                    (4) http://www.navcen.uscg.gov/pdf/cgsicMeetings/45/29a%20UTCLeapSecond.ppt
  56:rtos/uC-Clk/Source/clk.c **** *
  57:rtos/uC-Clk/Source/clk.c **** *
  58:rtos/uC-Clk/Source/clk.c **** *            (3) (a) Clock module implements a software-maintained clock/calendar when 'CLK_CFG_EXT
  59:rtos/uC-Clk/Source/clk.c **** *                    is disabled (see Note #4).
  60:rtos/uC-Clk/Source/clk.c **** *
  61:rtos/uC-Clk/Source/clk.c **** *                (b) (1) Software-maintained clock/calendar is based on a periodic delay or timeout
  62:rtos/uC-Clk/Source/clk.c **** *                        when 'CLK_CFG_SIGNAL_EN' is disabled.
  63:rtos/uC-Clk/Source/clk.c **** *
  64:rtos/uC-Clk/Source/clk.c **** *                    (2) Software-maintained clock/calendar is based on a periodic signal or timer
  65:rtos/uC-Clk/Source/clk.c **** *                        when 'CLK_CFG_SIGNAL_EN' is enabled.
  66:rtos/uC-Clk/Source/clk.c **** *
  67:rtos/uC-Clk/Source/clk.c **** *                (c) When software-maintained clock is enabled, Clock module's OS-dependent files a
  68:rtos/uC-Clk/Source/clk.c **** *                    respective OS-application configuration MUST be included in the build.
  69:rtos/uC-Clk/Source/clk.c **** *
  70:rtos/uC-Clk/Source/clk.c **** *
  71:rtos/uC-Clk/Source/clk.c **** *            (4) (a) Clock module initializes, gets and sets its timestamp via an External timestam
  72:rtos/uC-Clk/Source/clk.c **** *                    when 'CLK_CFG_EXT_EN' is enabled.
  73:rtos/uC-Clk/Source/clk.c **** *
  74:rtos/uC-Clk/Source/clk.c **** *                (b) (1) External timestamp can be maintained either in :
  75:rtos/uC-Clk/Source/clk.c **** *
  76:rtos/uC-Clk/Source/clk.c **** *                        (A) Hardware (e.g. via a hardware clock chip)
  77:rtos/uC-Clk/Source/clk.c **** *                        (B) From another application (e.g. SNTPc)
  78:rtos/uC-Clk/Source/clk.c **** *
  79:rtos/uC-Clk/Source/clk.c **** *                    (2) External timestamp is accessed by application/BSP functions defined by the
  80:rtos/uC-Clk/Source/clk.c **** *                        developer that MUST follow the functional requirements of the particular
  81:rtos/uC-Clk/Source/clk.c **** *                        hardware/application(s).
  82:rtos/uC-Clk/Source/clk.c **** *
  83:rtos/uC-Clk/Source/clk.c **** *                        See also 'net.h  Clk_ExtTS_Init()',
  84:rtos/uC-Clk/Source/clk.c **** *                                 'net.h  Clk_ExtTS_Get()',
  85:rtos/uC-Clk/Source/clk.c **** *                               & 'net.h  Clk_ExtTS_Set()'.
  86:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
  87:rtos/uC-Clk/Source/clk.c **** */
ARM GAS  /tmp/cct1pkgW.s 			page 3


  88:rtos/uC-Clk/Source/clk.c **** 
  89:rtos/uC-Clk/Source/clk.c **** /*
  90:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
  91:rtos/uC-Clk/Source/clk.c **** *                                             INCLUDE FILES
  92:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
  93:rtos/uC-Clk/Source/clk.c **** */
  94:rtos/uC-Clk/Source/clk.c **** 
  95:rtos/uC-Clk/Source/clk.c **** #define    MICRIUM_SOURCE
  96:rtos/uC-Clk/Source/clk.c **** #define    CLK_MODULE
  97:rtos/uC-Clk/Source/clk.c **** #include  "clk.h"
  98:rtos/uC-Clk/Source/clk.c **** 
  99:rtos/uC-Clk/Source/clk.c **** 
 100:rtos/uC-Clk/Source/clk.c **** /*
 101:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 102:rtos/uC-Clk/Source/clk.c **** *                                            LOCAL DEFINES
 103:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 104:rtos/uC-Clk/Source/clk.c **** */
 105:rtos/uC-Clk/Source/clk.c **** 
 106:rtos/uC-Clk/Source/clk.c **** 
 107:rtos/uC-Clk/Source/clk.c **** /*
 108:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 109:rtos/uC-Clk/Source/clk.c **** *                                           LOCAL CONSTANTS
 110:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 111:rtos/uC-Clk/Source/clk.c **** */
 112:rtos/uC-Clk/Source/clk.c **** 
 113:rtos/uC-Clk/Source/clk.c **** 
 114:rtos/uC-Clk/Source/clk.c **** /*
 115:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 116:rtos/uC-Clk/Source/clk.c **** *                                          LOCAL DATA TYPES
 117:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 118:rtos/uC-Clk/Source/clk.c **** */
 119:rtos/uC-Clk/Source/clk.c **** 
 120:rtos/uC-Clk/Source/clk.c **** 
 121:rtos/uC-Clk/Source/clk.c **** /*
 122:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 123:rtos/uC-Clk/Source/clk.c **** *                                            LOCAL TABLES
 124:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 125:rtos/uC-Clk/Source/clk.c **** */
 126:rtos/uC-Clk/Source/clk.c **** 
 127:rtos/uC-Clk/Source/clk.c **** static  const  CLK_DAY  Clk_DaysInYr[2u] = {
 128:rtos/uC-Clk/Source/clk.c ****     DEF_TIME_NBR_DAY_PER_YR, DEF_TIME_NBR_DAY_PER_YR_LEAP
 129:rtos/uC-Clk/Source/clk.c **** };
 130:rtos/uC-Clk/Source/clk.c **** 
 131:rtos/uC-Clk/Source/clk.c **** static  const  CLK_DAY  Clk_DaysInMonth[2u][CLK_MONTH_PER_YR] = {
 132:rtos/uC-Clk/Source/clk.c ****   /* Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec */
 133:rtos/uC-Clk/Source/clk.c ****    { 31u, 28u, 31u, 30u, 31u, 30u, 31u, 31u, 30u, 31u, 30u, 31u },
 134:rtos/uC-Clk/Source/clk.c ****    { 31u, 29u, 31u, 30u, 31u, 30u, 31u, 31u, 30u, 31u, 30u, 31u }
 135:rtos/uC-Clk/Source/clk.c **** };
 136:rtos/uC-Clk/Source/clk.c **** 
 137:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_STR_CONV_EN == DEF_ENABLED)
 138:rtos/uC-Clk/Source/clk.c **** static  const  CPU_CHAR *  const  Clk_StrMonth[CLK_MONTH_PER_YR] = {
 139:rtos/uC-Clk/Source/clk.c ****                     /*           1 */
 140:rtos/uC-Clk/Source/clk.c ****                     /* 01234567890 */
 141:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"January",
 142:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"February",
 143:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"March",
 144:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"April",
ARM GAS  /tmp/cct1pkgW.s 			page 4


 145:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"May",
 146:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"June",
 147:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"July",
 148:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"August",
 149:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"September",
 150:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"October",
 151:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"November",
 152:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"December"
 153:rtos/uC-Clk/Source/clk.c **** };
 154:rtos/uC-Clk/Source/clk.c **** 
 155:rtos/uC-Clk/Source/clk.c **** static  const  CPU_CHAR *  const  Clk_StrDayOfWk[DEF_TIME_NBR_DAY_PER_WK] = {
 156:rtos/uC-Clk/Source/clk.c ****                     /*           1 */
 157:rtos/uC-Clk/Source/clk.c ****                     /* 01234567890 */
 158:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"Sunday",
 159:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"Monday",
 160:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"Tuesday",
 161:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"Wednesday",
 162:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"Thursday",
 163:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"Friday",
 164:rtos/uC-Clk/Source/clk.c ****    (const  CPU_CHAR *)"Saturday"
 165:rtos/uC-Clk/Source/clk.c **** };
 166:rtos/uC-Clk/Source/clk.c **** #endif
 167:rtos/uC-Clk/Source/clk.c **** 
 168:rtos/uC-Clk/Source/clk.c **** 
 169:rtos/uC-Clk/Source/clk.c **** /*
 170:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 171:rtos/uC-Clk/Source/clk.c **** *                                       LOCAL GLOBAL VARIABLES
 172:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 173:rtos/uC-Clk/Source/clk.c **** */
 174:rtos/uC-Clk/Source/clk.c **** 
 175:rtos/uC-Clk/Source/clk.c **** #if    (CLK_CFG_EXT_EN    != DEF_ENABLED)
 176:rtos/uC-Clk/Source/clk.c **** static  CLK_TS_SEC    Clk_TS_UTC_sec;
 177:rtos/uC-Clk/Source/clk.c **** #if    (CLK_CFG_SIGNAL_EN == DEF_ENABLED)
 178:rtos/uC-Clk/Source/clk.c **** static  CLK_TICK_CTR  Clk_TickCtr;
 179:rtos/uC-Clk/Source/clk.c **** #endif
 180:rtos/uC-Clk/Source/clk.c **** #endif
 181:rtos/uC-Clk/Source/clk.c **** static  CLK_TZ_SEC    Clk_TZ_sec;
 182:rtos/uC-Clk/Source/clk.c **** 
 183:rtos/uC-Clk/Source/clk.c **** static  CLK_YR        Clk_CacheYr;
 184:rtos/uC-Clk/Source/clk.c **** static  CLK_MONTH     Clk_CacheMonth;
 185:rtos/uC-Clk/Source/clk.c **** static  CLK_NBR_DAYS  Clk_CacheYrDays;
 186:rtos/uC-Clk/Source/clk.c **** static  CLK_DAY       Clk_CacheMonthDays;
 187:rtos/uC-Clk/Source/clk.c **** static  CPU_INT08U    Clk_CacheLeapYr;
 188:rtos/uC-Clk/Source/clk.c **** 
 189:rtos/uC-Clk/Source/clk.c **** 
 190:rtos/uC-Clk/Source/clk.c **** /*
 191:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 192:rtos/uC-Clk/Source/clk.c **** *                                      LOCAL FUNCTIONS PROTOTYPES
 193:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 194:rtos/uC-Clk/Source/clk.c **** */
 195:rtos/uC-Clk/Source/clk.c **** 
 196:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsLeapYr              (CLK_YR          yr);
 197:rtos/uC-Clk/Source/clk.c **** 
 198:rtos/uC-Clk/Source/clk.c **** 
 199:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsDateValid           (CLK_YR          yr,
 200:rtos/uC-Clk/Source/clk.c ****                                                 CLK_MONTH       month,
 201:rtos/uC-Clk/Source/clk.c ****                                                 CLK_DAY         day,
ARM GAS  /tmp/cct1pkgW.s 			page 5


 202:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr_start,
 203:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr_end);
 204:rtos/uC-Clk/Source/clk.c **** 
 205:rtos/uC-Clk/Source/clk.c **** 
 206:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsDayOfYrValid        (CLK_YR          yr,
 207:rtos/uC-Clk/Source/clk.c ****                                                 CLK_DAY         day_of_yr);
 208:rtos/uC-Clk/Source/clk.c **** 
 209:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsDayOfWkValid        (CLK_DAY         day_of_wk);
 210:rtos/uC-Clk/Source/clk.c **** 
 211:rtos/uC-Clk/Source/clk.c **** 
 212:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsTimeValid           (CLK_HR          hr,
 213:rtos/uC-Clk/Source/clk.c ****                                                 CLK_MONTH       min,
 214:rtos/uC-Clk/Source/clk.c ****                                                 CLK_DAY         sec);
 215:rtos/uC-Clk/Source/clk.c **** 
 216:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsTZValid             (CLK_TZ_SEC      tz_sec);
 217:rtos/uC-Clk/Source/clk.c **** 
 218:rtos/uC-Clk/Source/clk.c **** 
 219:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsDateTimeValidHandler(CLK_DATE_TIME  *p_date_time,
 220:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr_start,
 221:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr_end);
 222:rtos/uC-Clk/Source/clk.c **** 
 223:rtos/uC-Clk/Source/clk.c **** 
 224:rtos/uC-Clk/Source/clk.c **** 
 225:rtos/uC-Clk/Source/clk.c **** static  CLK_DAY      Clk_GetDayOfYrHandler     (CLK_YR          yr,
 226:rtos/uC-Clk/Source/clk.c ****                                                 CLK_MONTH       month,
 227:rtos/uC-Clk/Source/clk.c ****                                                 CLK_DAY         day);
 228:rtos/uC-Clk/Source/clk.c **** 
 229:rtos/uC-Clk/Source/clk.c **** static  CLK_DAY      Clk_GetDayOfWkHandler     (CLK_YR          yr,
 230:rtos/uC-Clk/Source/clk.c ****                                                 CLK_MONTH       month,
 231:rtos/uC-Clk/Source/clk.c ****                                                 CLK_DAY         day);
 232:rtos/uC-Clk/Source/clk.c **** 
 233:rtos/uC-Clk/Source/clk.c **** 
 234:rtos/uC-Clk/Source/clk.c **** static  void         Clk_SetTZ_Handler         (CLK_TZ_SEC      tz_sec);
 235:rtos/uC-Clk/Source/clk.c **** 
 236:rtos/uC-Clk/Source/clk.c **** 
 237:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_TS_ToDateTimeHandler  (CLK_TS_SEC      ts_sec,
 238:rtos/uC-Clk/Source/clk.c ****                                                 CLK_TZ_SEC      tz_sec,
 239:rtos/uC-Clk/Source/clk.c ****                                                 CLK_DATE_TIME  *p_date_time,
 240:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr_start,
 241:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr_end);
 242:rtos/uC-Clk/Source/clk.c **** 
 243:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_DateTimeToTS_Handler  (CLK_TS_SEC     *p_ts_sec,
 244:rtos/uC-Clk/Source/clk.c ****                                                 CLK_DATE_TIME  *p_date_time,
 245:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr_start);
 246:rtos/uC-Clk/Source/clk.c **** 
 247:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_DateTimeMakeHandler   (CLK_DATE_TIME  *p_date_time,
 248:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr,
 249:rtos/uC-Clk/Source/clk.c ****                                                 CLK_MONTH       month,
 250:rtos/uC-Clk/Source/clk.c ****                                                 CLK_DAY         day,
 251:rtos/uC-Clk/Source/clk.c ****                                                 CLK_HR          hr,
 252:rtos/uC-Clk/Source/clk.c ****                                                 CLK_MIN         min,
 253:rtos/uC-Clk/Source/clk.c ****                                                 CLK_SEC         sec,
 254:rtos/uC-Clk/Source/clk.c ****                                                 CLK_TZ_SEC      tz_sec,
 255:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr_start,
 256:rtos/uC-Clk/Source/clk.c ****                                                 CLK_YR          yr_end);
 257:rtos/uC-Clk/Source/clk.c **** 
 258:rtos/uC-Clk/Source/clk.c **** 
ARM GAS  /tmp/cct1pkgW.s 			page 6


 259:rtos/uC-Clk/Source/clk.c **** /*
 260:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 261:rtos/uC-Clk/Source/clk.c **** *                                     LOCAL CONFIGURATION ERRORS
 262:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 263:rtos/uC-Clk/Source/clk.c **** */
 264:rtos/uC-Clk/Source/clk.c **** 
 265:rtos/uC-Clk/Source/clk.c **** 
 266:rtos/uC-Clk/Source/clk.c **** /*
 267:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 268:rtos/uC-Clk/Source/clk.c **** *                                             Clk_Init()
 269:rtos/uC-Clk/Source/clk.c **** *
 270:rtos/uC-Clk/Source/clk.c **** * Description : (1) Initialize Clock module :
 271:rtos/uC-Clk/Source/clk.c **** *
 272:rtos/uC-Clk/Source/clk.c **** *                   (a) Initialize clock :
 273:rtos/uC-Clk/Source/clk.c **** *                       (1) External timestamp, if available
 274:rtos/uC-Clk/Source/clk.c **** *                       (2) Clock/operating system initialization
 275:rtos/uC-Clk/Source/clk.c **** *
 276:rtos/uC-Clk/Source/clk.c **** *                   (b) Initialize Clock module variables
 277:rtos/uC-Clk/Source/clk.c **** *
 278:rtos/uC-Clk/Source/clk.c **** *
 279:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_err       Pointer to variable that will receive the return error code from this f
 280:rtos/uC-Clk/Source/clk.c **** *
 281:rtos/uC-Clk/Source/clk.c **** *                               CLK_ERR_NONE                    Clock successfully initialized.
 282:rtos/uC-Clk/Source/clk.c **** *
 283:rtos/uC-Clk/Source/clk.c **** *                                                               -------- RETURNED BY Clk_OS_Init() 
 284:rtos/uC-Clk/Source/clk.c **** *                               CLK_OS_ERR_INIT_SIGNAL          Clock OS signal  NOT successfully i
 285:rtos/uC-Clk/Source/clk.c **** *                               CLK_OS_ERR_INIT_TASK            Clock OS task    NOT successfully i
 286:rtos/uC-Clk/Source/clk.c **** *                               CLK_OS_ERR_INIT_NAME            Clock OS name(s) NOT successfully i
 287:rtos/uC-Clk/Source/clk.c **** *
 288:rtos/uC-Clk/Source/clk.c **** * Return(s)   : none.
 289:rtos/uC-Clk/Source/clk.c **** *
 290:rtos/uC-Clk/Source/clk.c **** * Note(s)     : none.
 291:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 292:rtos/uC-Clk/Source/clk.c **** */
 293:rtos/uC-Clk/Source/clk.c **** 
 294:rtos/uC-Clk/Source/clk.c **** void  Clk_Init (CLK_ERR  *p_err)
 295:rtos/uC-Clk/Source/clk.c **** {
 296:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE ERR P
 297:rtos/uC-Clk/Source/clk.c ****     if (p_err == (CLK_ERR *)0) {
 298:rtos/uC-Clk/Source/clk.c ****         return;
 299:rtos/uC-Clk/Source/clk.c ****     }
 300:rtos/uC-Clk/Source/clk.c **** #endif
 301:rtos/uC-Clk/Source/clk.c **** 
 302:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_EXT_EN == DEF_ENABLED)                             /* ------------------- INIT EXT TS 
 303:rtos/uC-Clk/Source/clk.c ****     Clk_ExtTS_Init();
 304:rtos/uC-Clk/Source/clk.c **** 
 305:rtos/uC-Clk/Source/clk.c **** #else                                                           /* ------------------- CLK/OS INIT 
 306:rtos/uC-Clk/Source/clk.c ****     Clk_OS_Init(p_err);
 307:rtos/uC-Clk/Source/clk.c ****     if (*p_err != CLK_OS_ERR_NONE) {
 308:rtos/uC-Clk/Source/clk.c ****          return;
 309:rtos/uC-Clk/Source/clk.c ****     }
 310:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- INIT CLK VARIAB
 311:rtos/uC-Clk/Source/clk.c ****     Clk_TS_UTC_sec = CLK_TS_SEC_NONE;                           /* Clk epoch = 2000-01-01 00:00:00 
 312:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_SIGNAL_EN == DEF_ENABLED)
 313:rtos/uC-Clk/Source/clk.c ****     Clk_TickCtr         = CLK_TICK_NONE;
 314:rtos/uC-Clk/Source/clk.c **** #endif
 315:rtos/uC-Clk/Source/clk.c **** #endif
ARM GAS  /tmp/cct1pkgW.s 			page 7


 316:rtos/uC-Clk/Source/clk.c ****     Clk_TZ_sec          = CLK_CFG_TZ_DFLT_SEC;                  /* Clk TZ = UTC offset             
 317:rtos/uC-Clk/Source/clk.c ****     Clk_CacheMonth      = CLK_MONTH_NONE;
 318:rtos/uC-Clk/Source/clk.c ****     Clk_CacheMonthDays  = CLK_DAY_NONE;
 319:rtos/uC-Clk/Source/clk.c ****     Clk_CacheYr         = CLK_YR_NONE;
 320:rtos/uC-Clk/Source/clk.c ****     Clk_CacheYrDays     = CLK_DAY_NONE;
 321:rtos/uC-Clk/Source/clk.c ****     Clk_CacheLeapYr     = 0u;
 322:rtos/uC-Clk/Source/clk.c **** 
 323:rtos/uC-Clk/Source/clk.c **** 
 324:rtos/uC-Clk/Source/clk.c ****    *p_err = CLK_ERR_NONE;
 325:rtos/uC-Clk/Source/clk.c **** }
 326:rtos/uC-Clk/Source/clk.c **** 
 327:rtos/uC-Clk/Source/clk.c **** 
 328:rtos/uC-Clk/Source/clk.c **** /*
 329:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 330:rtos/uC-Clk/Source/clk.c **** *                                          Clk_TaskHandler()
 331:rtos/uC-Clk/Source/clk.c **** *
 332:rtos/uC-Clk/Source/clk.c **** * Description : (1) Handle Clock Signal :
 333:rtos/uC-Clk/Source/clk.c **** *
 334:rtos/uC-Clk/Source/clk.c **** *                  (a) Wait for a signal
 335:rtos/uC-Clk/Source/clk.c **** *                  (b) Update timestamp
 336:rtos/uC-Clk/Source/clk.c **** *
 337:rtos/uC-Clk/Source/clk.c **** *
 338:rtos/uC-Clk/Source/clk.c **** * Argument(s) : none.
 339:rtos/uC-Clk/Source/clk.c **** *
 340:rtos/uC-Clk/Source/clk.c **** * Return(s)   : none.
 341:rtos/uC-Clk/Source/clk.c **** *
 342:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) 'Clk_TS_UTC_sec' MUST ALWAYS be accessed exclusively in critical sections.
 343:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 344:rtos/uC-Clk/Source/clk.c **** */
 345:rtos/uC-Clk/Source/clk.c **** 
 346:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_EXT_EN != DEF_ENABLED)
 347:rtos/uC-Clk/Source/clk.c **** void  Clk_TaskHandler (void)
 348:rtos/uC-Clk/Source/clk.c **** {
 349:rtos/uC-Clk/Source/clk.c ****     CLK_ERR  err;
 350:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 351:rtos/uC-Clk/Source/clk.c **** 
 352:rtos/uC-Clk/Source/clk.c **** 
 353:rtos/uC-Clk/Source/clk.c ****     while (DEF_ON) {
 354:rtos/uC-Clk/Source/clk.c ****                                                                 /* --------------- WAIT FOR CLK SIG
 355:rtos/uC-Clk/Source/clk.c ****         do {
 356:rtos/uC-Clk/Source/clk.c ****             Clk_OS_Wait(&err);
 357:rtos/uC-Clk/Source/clk.c ****         } while (err != CLK_OS_ERR_NONE);
 358:rtos/uC-Clk/Source/clk.c **** 
 359:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------------- UPDATE TS -
 360:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_ENTER();
 361:rtos/uC-Clk/Source/clk.c ****         if (Clk_TS_UTC_sec < CLK_TS_SEC_MAX) {
 362:rtos/uC-Clk/Source/clk.c ****             Clk_TS_UTC_sec++;
 363:rtos/uC-Clk/Source/clk.c ****         }
 364:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
 365:rtos/uC-Clk/Source/clk.c ****     }
 366:rtos/uC-Clk/Source/clk.c **** }
 367:rtos/uC-Clk/Source/clk.c **** #endif
 368:rtos/uC-Clk/Source/clk.c **** 
 369:rtos/uC-Clk/Source/clk.c **** 
 370:rtos/uC-Clk/Source/clk.c **** /*
 371:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 372:rtos/uC-Clk/Source/clk.c **** *                                           Clk_SignalClk()
ARM GAS  /tmp/cct1pkgW.s 			page 8


 373:rtos/uC-Clk/Source/clk.c **** *
 374:rtos/uC-Clk/Source/clk.c **** * Description : (1) Increment the clock tick counter :
 375:rtos/uC-Clk/Source/clk.c **** *
 376:rtos/uC-Clk/Source/clk.c **** *                   (a) Increment the clock tick counter
 377:rtos/uC-Clk/Source/clk.c **** *                   (b) Signal the clock task when one second has elapsed
 378:rtos/uC-Clk/Source/clk.c **** *
 379:rtos/uC-Clk/Source/clk.c **** *
 380:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_err       Pointer to variable that will receive the return error code from this f
 381:rtos/uC-Clk/Source/clk.c **** *
 382:rtos/uC-Clk/Source/clk.c **** *                               CLK_ERR_NONE                    Clock     successfully signaled.
 383:rtos/uC-Clk/Source/clk.c **** *
 384:rtos/uC-Clk/Source/clk.c **** *                                                               - RETURNED BY Clk_OS_Signal() : -
 385:rtos/uC-Clk/Source/clk.c **** *                               CLK_OS_ERR_SIGNAL               Clock NOT successfully signaled.
 386:rtos/uC-Clk/Source/clk.c **** *
 387:rtos/uC-Clk/Source/clk.c **** * Return(s)   : none.
 388:rtos/uC-Clk/Source/clk.c **** *
 389:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) CLK_CFG_SIGNAL_FREQ_HZ must be set to the number of times Clk_SignalClk() will 
 390:rtos/uC-Clk/Source/clk.c **** *                   called every second.
 391:rtos/uC-Clk/Source/clk.c **** *
 392:rtos/uC-Clk/Source/clk.c **** *               (2) 'Clk_TickCtr' MUST ALWAYS be accessed exclusively in critical sections.
 393:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 394:rtos/uC-Clk/Source/clk.c **** */
 395:rtos/uC-Clk/Source/clk.c **** 
 396:rtos/uC-Clk/Source/clk.c **** #if ((CLK_CFG_EXT_EN    != DEF_ENABLED) &&  \
 397:rtos/uC-Clk/Source/clk.c ****      (CLK_CFG_SIGNAL_EN == DEF_ENABLED))
 398:rtos/uC-Clk/Source/clk.c **** void  Clk_SignalClk (CLK_ERR  *p_err)
 399:rtos/uC-Clk/Source/clk.c **** {
 400:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  signal;
 401:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 402:rtos/uC-Clk/Source/clk.c **** 
 403:rtos/uC-Clk/Source/clk.c **** 
 404:rtos/uC-Clk/Source/clk.c ****     signal = DEF_NO;
 405:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_ENTER();                                       /* See Note #2.                    
 406:rtos/uC-Clk/Source/clk.c ****     Clk_TickCtr++;
 407:rtos/uC-Clk/Source/clk.c ****     if (Clk_TickCtr >= CLK_CFG_SIGNAL_FREQ_HZ) {
 408:rtos/uC-Clk/Source/clk.c ****         Clk_TickCtr -= CLK_CFG_SIGNAL_FREQ_HZ;                  /* See Note #1.                    
 409:rtos/uC-Clk/Source/clk.c ****         signal       = DEF_YES;
 410:rtos/uC-Clk/Source/clk.c ****     }
 411:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 412:rtos/uC-Clk/Source/clk.c **** 
 413:rtos/uC-Clk/Source/clk.c ****     if (signal == DEF_YES) {
 414:rtos/uC-Clk/Source/clk.c ****         Clk_OS_Signal(p_err);
 415:rtos/uC-Clk/Source/clk.c ****         if (*p_err != CLK_OS_ERR_NONE) {
 416:rtos/uC-Clk/Source/clk.c ****              return;
 417:rtos/uC-Clk/Source/clk.c ****         }
 418:rtos/uC-Clk/Source/clk.c ****     }
 419:rtos/uC-Clk/Source/clk.c **** 
 420:rtos/uC-Clk/Source/clk.c ****    *p_err = CLK_ERR_NONE;
 421:rtos/uC-Clk/Source/clk.c **** }
 422:rtos/uC-Clk/Source/clk.c **** #endif
 423:rtos/uC-Clk/Source/clk.c **** 
 424:rtos/uC-Clk/Source/clk.c **** 
 425:rtos/uC-Clk/Source/clk.c **** /*
 426:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 427:rtos/uC-Clk/Source/clk.c **** *                                             Clk_GetTS()
 428:rtos/uC-Clk/Source/clk.c **** *
 429:rtos/uC-Clk/Source/clk.c **** * Description : Get current Clock timestamp.
ARM GAS  /tmp/cct1pkgW.s 			page 9


 430:rtos/uC-Clk/Source/clk.c **** *
 431:rtos/uC-Clk/Source/clk.c **** * Argument(s) : none.
 432:rtos/uC-Clk/Source/clk.c **** *
 433:rtos/uC-Clk/Source/clk.c **** * Return(s)   : Current timestamp (in seconds, UTC+00).
 434:rtos/uC-Clk/Source/clk.c **** *
 435:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Internal Clock timestamp ('Clk_TS_UTC_sec') SHOULD be set for UTC+00. Thus any
 436:rtos/uC-Clk/Source/clk.c **** *                   local time zone offset MUST be applied after calling Clk_GetTS().
 437:rtos/uC-Clk/Source/clk.c **** *
 438:rtos/uC-Clk/Source/clk.c **** *               (2) 'Clk_TS_UTC_sec' MUST ALWAYS be accessed exclusively in critical sections.
 439:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 440:rtos/uC-Clk/Source/clk.c **** */
 441:rtos/uC-Clk/Source/clk.c **** 
 442:rtos/uC-Clk/Source/clk.c **** CLK_TS_SEC  Clk_GetTS (void)
 443:rtos/uC-Clk/Source/clk.c **** {
 444:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC  ts_sec;
 445:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_EXT_EN != DEF_ENABLED)
 446:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 447:rtos/uC-Clk/Source/clk.c **** 
 448:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------------- GET TS --
 449:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_ENTER();
 450:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_TS_UTC_sec;
 451:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 452:rtos/uC-Clk/Source/clk.c **** #else
 453:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_ExtTS_Get();
 454:rtos/uC-Clk/Source/clk.c **** #endif
 455:rtos/uC-Clk/Source/clk.c **** 
 456:rtos/uC-Clk/Source/clk.c ****     return (ts_sec);
 457:rtos/uC-Clk/Source/clk.c **** }
 458:rtos/uC-Clk/Source/clk.c **** 
 459:rtos/uC-Clk/Source/clk.c **** 
 460:rtos/uC-Clk/Source/clk.c **** /*
 461:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 462:rtos/uC-Clk/Source/clk.c **** *                                             Clk_SetTS()
 463:rtos/uC-Clk/Source/clk.c **** *
 464:rtos/uC-Clk/Source/clk.c **** * Description : Set Clock timestamp.
 465:rtos/uC-Clk/Source/clk.c **** *
 466:rtos/uC-Clk/Source/clk.c **** * Argument(s) : ts_sec      Current timestamp to set (in seconds, UTC+00).
 467:rtos/uC-Clk/Source/clk.c **** *
 468:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp is successfully set.
 469:rtos/uC-Clk/Source/clk.c **** *
 470:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
 471:rtos/uC-Clk/Source/clk.c **** *
 472:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Internal Clock timestamp ('Clk_TS_UTC_sec') SHOULD be set for UTC+00 and should
 473:rtos/uC-Clk/Source/clk.c **** *                   NOT include any local time zone offset.
 474:rtos/uC-Clk/Source/clk.c **** *
 475:rtos/uC-Clk/Source/clk.c **** *               (2) 'Clk_TS_UTC_sec' MUST ALWAYS be accessed exclusively in critical sections.
 476:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 477:rtos/uC-Clk/Source/clk.c **** */
 478:rtos/uC-Clk/Source/clk.c **** 
 479:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_SetTS (CLK_TS_SEC  ts_sec)
 480:rtos/uC-Clk/Source/clk.c **** {
 481:rtos/uC-Clk/Source/clk.c ****      CPU_BOOLEAN  valid;
 482:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_EXT_EN != DEF_ENABLED)
 483:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 484:rtos/uC-Clk/Source/clk.c **** 
 485:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------------- SET TS --
 486:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_ENTER();
ARM GAS  /tmp/cct1pkgW.s 			page 10


 487:rtos/uC-Clk/Source/clk.c ****     Clk_TS_UTC_sec = ts_sec;
 488:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 489:rtos/uC-Clk/Source/clk.c **** 
 490:rtos/uC-Clk/Source/clk.c ****     valid          = DEF_OK;
 491:rtos/uC-Clk/Source/clk.c **** #else
 492:rtos/uC-Clk/Source/clk.c ****     valid          = Clk_ExtTS_Set(ts_sec);
 493:rtos/uC-Clk/Source/clk.c **** #endif
 494:rtos/uC-Clk/Source/clk.c **** 
 495:rtos/uC-Clk/Source/clk.c ****     return (valid);
 496:rtos/uC-Clk/Source/clk.c **** }
 497:rtos/uC-Clk/Source/clk.c **** 
 498:rtos/uC-Clk/Source/clk.c **** 
 499:rtos/uC-Clk/Source/clk.c **** /*
 500:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 501:rtos/uC-Clk/Source/clk.c **** *                                             Clk_GetTZ()
 502:rtos/uC-Clk/Source/clk.c **** *
 503:rtos/uC-Clk/Source/clk.c **** * Description : Get Clock time zone offset.
 504:rtos/uC-Clk/Source/clk.c **** *
 505:rtos/uC-Clk/Source/clk.c **** * Argument(s) : none.
 506:rtos/uC-Clk/Source/clk.c **** *
 507:rtos/uC-Clk/Source/clk.c **** * Return(s)   : Time zone offset (in seconds, +|- from UTC).
 508:rtos/uC-Clk/Source/clk.c **** *
 509:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
 510:rtos/uC-Clk/Source/clk.c **** *
 511:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
 512:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minutes
 513:rtos/uC-Clk/Source/clk.c **** *
 514:rtos/uC-Clk/Source/clk.c **** *               (2) 'Clk_TZ_sec' MUST ALWAYS be accessed exclusively in critical sections.
 515:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 516:rtos/uC-Clk/Source/clk.c **** */
 517:rtos/uC-Clk/Source/clk.c **** 
 518:rtos/uC-Clk/Source/clk.c **** CLK_TZ_SEC  Clk_GetTZ (void)
 519:rtos/uC-Clk/Source/clk.c **** {
 520:rtos/uC-Clk/Source/clk.c ****     CLK_TZ_SEC  tz_sec;
 521:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 522:rtos/uC-Clk/Source/clk.c **** 
 523:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------------- GET TZ --
 524:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_ENTER();
 525:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_TZ_sec;
 526:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 527:rtos/uC-Clk/Source/clk.c **** 
 528:rtos/uC-Clk/Source/clk.c ****     return (tz_sec);
 529:rtos/uC-Clk/Source/clk.c **** }
 530:rtos/uC-Clk/Source/clk.c **** 
 531:rtos/uC-Clk/Source/clk.c **** 
 532:rtos/uC-Clk/Source/clk.c **** /*
 533:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 534:rtos/uC-Clk/Source/clk.c **** *                                             Clk_SetTZ()
 535:rtos/uC-Clk/Source/clk.c **** *
 536:rtos/uC-Clk/Source/clk.c **** * Description : Set Clock time zone offset.
 537:rtos/uC-Clk/Source/clk.c **** *
 538:rtos/uC-Clk/Source/clk.c **** * Argument(s) : tz_sec      Time zone offset (in seconds, +|- from UTC).
 539:rtos/uC-Clk/Source/clk.c **** *
 540:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if time zone is valid and set.
 541:rtos/uC-Clk/Source/clk.c **** *
 542:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
 543:rtos/uC-Clk/Source/clk.c **** *
ARM GAS  /tmp/cct1pkgW.s 			page 11


 544:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
 545:rtos/uC-Clk/Source/clk.c **** *
 546:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
 547:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minutes
 548:rtos/uC-Clk/Source/clk.c **** *
 549:rtos/uC-Clk/Source/clk.c **** *               (2) Time zone is not applied on the current Clock timestamp.
 550:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 551:rtos/uC-Clk/Source/clk.c **** */
 552:rtos/uC-Clk/Source/clk.c **** 
 553:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_SetTZ (CLK_TZ_SEC  tz_sec)
 554:rtos/uC-Clk/Source/clk.c **** {
 555:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 556:rtos/uC-Clk/Source/clk.c **** 
 557:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------- VALIDATE TZ 
 558:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsTZValid(tz_sec);
 559:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 560:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 561:rtos/uC-Clk/Source/clk.c ****     }
 562:rtos/uC-Clk/Source/clk.c **** 
 563:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------------- SET TZ --
 564:rtos/uC-Clk/Source/clk.c ****     Clk_SetTZ_Handler(tz_sec);
 565:rtos/uC-Clk/Source/clk.c **** 
 566:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
 567:rtos/uC-Clk/Source/clk.c **** }
 568:rtos/uC-Clk/Source/clk.c **** 
 569:rtos/uC-Clk/Source/clk.c **** 
 570:rtos/uC-Clk/Source/clk.c **** /*
 571:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 572:rtos/uC-Clk/Source/clk.c **** *                                          Clk_GetDateTime()
 573:rtos/uC-Clk/Source/clk.c **** *
 574:rtos/uC-Clk/Source/clk.c **** * Description : Get current Clock timestamp as a date/time structure.
 575:rtos/uC-Clk/Source/clk.c **** *
 576:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that will receive the date/time structure.
 577:rtos/uC-Clk/Source/clk.c **** *
 578:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp is valid & date/time structure successfully returned.
 579:rtos/uC-Clk/Source/clk.c **** *
 580:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
 581:rtos/uC-Clk/Source/clk.c **** *
 582:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Internal Clock time zone offset ('Clk_TZ_sec') is used to calculate the
 583:rtos/uC-Clk/Source/clk.c **** *                   local date/time ('p_date_time') returned. Thus local date/time is returned
 584:rtos/uC-Clk/Source/clk.c **** *                   at UTC+TZ, where Clock time zone offset (TZ) is returned as local time zone
 585:rtos/uC-Clk/Source/clk.c **** *                   offset ('p_date_time->TZ_sec').
 586:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 587:rtos/uC-Clk/Source/clk.c **** */
 588:rtos/uC-Clk/Source/clk.c **** 
 589:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_GetDateTime (CLK_DATE_TIME  *p_date_time)
 590:rtos/uC-Clk/Source/clk.c **** {
 591:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 592:rtos/uC-Clk/Source/clk.c ****     CLK_TZ_SEC   tz_sec;
 593:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 594:rtos/uC-Clk/Source/clk.c **** 
 595:rtos/uC-Clk/Source/clk.c **** 
 596:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Validated in Clk_TS_ToDateTime()
 597:rtos/uC-Clk/Source/clk.c ****     if (p_date_time == (CLK_DATE_TIME *)0) {                    /* -------------- VALIDATE DATE/TIM
 598:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 599:rtos/uC-Clk/Source/clk.c ****     }
 600:rtos/uC-Clk/Source/clk.c **** #endif
ARM GAS  /tmp/cct1pkgW.s 			page 12


 601:rtos/uC-Clk/Source/clk.c **** 
 602:rtos/uC-Clk/Source/clk.c **** 
 603:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_GetTS();                                       /* ---------------------- GET TS --
 604:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_GetTZ();                                       /* ---------------------- GET TZ --
 605:rtos/uC-Clk/Source/clk.c **** 
 606:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------- CONV CLK TS TO DAT
 607:rtos/uC-Clk/Source/clk.c ****     valid  = Clk_TS_ToDateTime(ts_sec,
 608:rtos/uC-Clk/Source/clk.c ****                                tz_sec,
 609:rtos/uC-Clk/Source/clk.c ****                                p_date_time);
 610:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 611:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 612:rtos/uC-Clk/Source/clk.c ****     }
 613:rtos/uC-Clk/Source/clk.c **** 
 614:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
 615:rtos/uC-Clk/Source/clk.c **** }
 616:rtos/uC-Clk/Source/clk.c **** 
 617:rtos/uC-Clk/Source/clk.c **** 
 618:rtos/uC-Clk/Source/clk.c **** /*
 619:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 620:rtos/uC-Clk/Source/clk.c **** *                                          Clk_SetDateTime()
 621:rtos/uC-Clk/Source/clk.c **** *
 622:rtos/uC-Clk/Source/clk.c **** * Description : Set Clock timestamp from a date/time structure.
 623:rtos/uC-Clk/Source/clk.c **** *
 624:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that contains the date/time structure.
 625:rtos/uC-Clk/Source/clk.c **** *
 626:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if Clock date/time successfully set.
 627:rtos/uC-Clk/Source/clk.c **** *
 628:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
 629:rtos/uC-Clk/Source/clk.c **** *
 630:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) (a) Date/time ('p_date_time') SHOULD be set to local time with correct time zon
 631:rtos/uC-Clk/Source/clk.c **** *                       offset ('p_date_time->TZ_sec'). Clk_SetDateTime() removes the time zone off
 632:rtos/uC-Clk/Source/clk.c **** *                       from the date/time to calculate the Clock timestamp at UTC+00.
 633:rtos/uC-Clk/Source/clk.c **** *
 634:rtos/uC-Clk/Source/clk.c **** *                   (b) Internal Clock time zone offset ('Clk_TZ_sec') is set to the local time zon
 635:rtos/uC-Clk/Source/clk.c **** *                       offset ('p_date_time->TZ_sec').
 636:rtos/uC-Clk/Source/clk.c **** *
 637:rtos/uC-Clk/Source/clk.c **** *                   (c) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
 638:rtos/uC-Clk/Source/clk.c **** *
 639:rtos/uC-Clk/Source/clk.c **** *                       (1) Between  +|- 12 hours (+|- 43200 seconds)
 640:rtos/uC-Clk/Source/clk.c **** *                       (2) Multiples of 15 minutes
 641:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 642:rtos/uC-Clk/Source/clk.c **** */
 643:rtos/uC-Clk/Source/clk.c **** 
 644:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_SetDateTime (CLK_DATE_TIME  *p_date_time)
 645:rtos/uC-Clk/Source/clk.c **** {
 646:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 647:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 648:rtos/uC-Clk/Source/clk.c **** 
 649:rtos/uC-Clk/Source/clk.c **** 
 650:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Validated in Clk_DateTimeToTS().
 651:rtos/uC-Clk/Source/clk.c ****     if (p_date_time == (CLK_DATE_TIME *)0) {                    /* -------------- VALIDATE DATE/TIM
 652:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 653:rtos/uC-Clk/Source/clk.c ****     }
 654:rtos/uC-Clk/Source/clk.c **** #endif
 655:rtos/uC-Clk/Source/clk.c **** 
 656:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------- CONV DATE/TIME TO 
 657:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeToTS(&ts_sec, p_date_time);             /* Validates date/time & TZ (see No
ARM GAS  /tmp/cct1pkgW.s 			page 13


 658:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 659:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Date/time is not valid"));
 660:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 661:rtos/uC-Clk/Source/clk.c ****     }
 662:rtos/uC-Clk/Source/clk.c **** 
 663:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------------- SET TS --
 664:rtos/uC-Clk/Source/clk.c ****     valid = Clk_SetTS(ts_sec);                                  /* See Note #1a.                   
 665:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 666:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 667:rtos/uC-Clk/Source/clk.c ****     }
 668:rtos/uC-Clk/Source/clk.c **** 
 669:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------------- SET TZ --
 670:rtos/uC-Clk/Source/clk.c ****     Clk_SetTZ_Handler(p_date_time->TZ_sec);                     /* See Note #1b.                   
 671:rtos/uC-Clk/Source/clk.c **** 
 672:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
 673:rtos/uC-Clk/Source/clk.c **** }
 674:rtos/uC-Clk/Source/clk.c **** 
 675:rtos/uC-Clk/Source/clk.c **** 
 676:rtos/uC-Clk/Source/clk.c **** /*
 677:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 678:rtos/uC-Clk/Source/clk.c **** *                                         Clk_TS_ToDateTime()
 679:rtos/uC-Clk/Source/clk.c **** *
 680:rtos/uC-Clk/Source/clk.c **** * Description : Convert Clock timestamp to date/time structure.
 681:rtos/uC-Clk/Source/clk.c **** *
 682:rtos/uC-Clk/Source/clk.c **** * Argument(s) : ts_sec          Timestamp to convert (in seconds,          UTC+00).
 683:rtos/uC-Clk/Source/clk.c **** *
 684:rtos/uC-Clk/Source/clk.c **** *               tz_sec          Time zone offset     (in seconds, +|- from UTC).
 685:rtos/uC-Clk/Source/clk.c **** *
 686:rtos/uC-Clk/Source/clk.c **** *               p_date_time     Pointer to variable that will receive the date/time structure.
 687:rtos/uC-Clk/Source/clk.c **** *
 688:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if date/time structure successfully returned.
 689:rtos/uC-Clk/Source/clk.c **** *
 690:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
 691:rtos/uC-Clk/Source/clk.c **** *
 692:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) (a) Timestamp ('ts_sec') MUST be set for UTC+00 & SHOULD NOT include the time
 693:rtos/uC-Clk/Source/clk.c **** *                       zone offset ('tz_sec') since Clk_TS_ToDateTime() includes the time zone
 694:rtos/uC-Clk/Source/clk.c **** *                       offset in its date/time calculation. Thus the time zone offset SHOULD NOT
 695:rtos/uC-Clk/Source/clk.c **** *                       be applied before or after calling Clk_TS_ToDateTime().
 696:rtos/uC-Clk/Source/clk.c **** *
 697:rtos/uC-Clk/Source/clk.c **** *                   (b) Time zone field of the date/time structure ('p_date_time->TZ_sec') is set
 698:rtos/uC-Clk/Source/clk.c **** *                       to the value of the time zone argument ('tz_sec').
 699:rtos/uC-Clk/Source/clk.c **** *
 700:rtos/uC-Clk/Source/clk.c **** *                   (c) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
 701:rtos/uC-Clk/Source/clk.c **** *
 702:rtos/uC-Clk/Source/clk.c **** *                       (1) Between  +|- 12 hours (+|- 43200 seconds)
 703:rtos/uC-Clk/Source/clk.c **** *                       (2) Multiples of 15 minutes
 704:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 705:rtos/uC-Clk/Source/clk.c **** */
 706:rtos/uC-Clk/Source/clk.c **** 
 707:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_TS_ToDateTime (CLK_TS_SEC      ts_sec,
 708:rtos/uC-Clk/Source/clk.c ****                                 CLK_TZ_SEC      tz_sec,
 709:rtos/uC-Clk/Source/clk.c ****                                 CLK_DATE_TIME  *p_date_time)
 710:rtos/uC-Clk/Source/clk.c **** {
 711:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 712:rtos/uC-Clk/Source/clk.c **** 
 713:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------- CONV CLK TS TO DAT
 714:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("\n\rConvert TS to Date/time:\n\r"
ARM GAS  /tmp/cct1pkgW.s 			page 14


 715:rtos/uC-Clk/Source/clk.c ****                    "    TS to convert= %u\n\n\r",
 716:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)ts_sec));
 717:rtos/uC-Clk/Source/clk.c **** 
 718:rtos/uC-Clk/Source/clk.c ****     valid = Clk_TS_ToDateTimeHandler(ts_sec,
 719:rtos/uC-Clk/Source/clk.c ****                                      tz_sec,
 720:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 721:rtos/uC-Clk/Source/clk.c ****                                      CLK_EPOCH_YR_START,
 722:rtos/uC-Clk/Source/clk.c ****                                      CLK_EPOCH_YR_END);
 723:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 724:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Date/time conversion has failed\n\r"));
 725:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 726:rtos/uC-Clk/Source/clk.c ****     }
 727:rtos/uC-Clk/Source/clk.c **** 
 728:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
 729:rtos/uC-Clk/Source/clk.c **** }
 730:rtos/uC-Clk/Source/clk.c **** 
 731:rtos/uC-Clk/Source/clk.c **** 
 732:rtos/uC-Clk/Source/clk.c **** /*
 733:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 734:rtos/uC-Clk/Source/clk.c **** *                                         Clk_DateTimeToTS()
 735:rtos/uC-Clk/Source/clk.c **** *
 736:rtos/uC-Clk/Source/clk.c **** * Description : Convert date/time structure to Clock timestamp.
 737:rtos/uC-Clk/Source/clk.c **** *
 738:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_ts_sec        Pointer to variable that will receive the Clock timestamp :
 739:rtos/uC-Clk/Source/clk.c **** *
 740:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
 741:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
 742:rtos/uC-Clk/Source/clk.c **** *
 743:rtos/uC-Clk/Source/clk.c **** *               p_date_time     Pointer to variable that contains date/time structure to convert.
 744:rtos/uC-Clk/Source/clk.c **** *
 745:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully returned.
 746:rtos/uC-Clk/Source/clk.c **** *
 747:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
 748:rtos/uC-Clk/Source/clk.c **** *
 749:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Date/time structure ('p_date_time') MUST be representable in Clock timestamp.
 750:rtos/uC-Clk/Source/clk.c **** *                   Thus date to convert MUST be :
 751:rtos/uC-Clk/Source/clk.c **** *
 752:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_EPOCH_YR_START
 753:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_EPOCH_YR_END
 754:rtos/uC-Clk/Source/clk.c **** *
 755:rtos/uC-Clk/Source/clk.c **** *               (2) (a) Date/time ('p_date_time') SHOULD be set to local time with correct time zon
 756:rtos/uC-Clk/Source/clk.c **** *                       offset ('p_date_time->TZ_sec'). Clk_DateTimeToTS() removes the time zone
 757:rtos/uC-Clk/Source/clk.c **** *                       offset from the date/time to calculate & return a Clock timestamp at UTC+00
 758:rtos/uC-Clk/Source/clk.c **** *
 759:rtos/uC-Clk/Source/clk.c **** *                   (b) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
 760:rtos/uC-Clk/Source/clk.c **** *
 761:rtos/uC-Clk/Source/clk.c **** *                       (1) Between  +|- 12 hours (+|- 43200 seconds)
 762:rtos/uC-Clk/Source/clk.c **** *                       (2) Multiples of 15 minutes
 763:rtos/uC-Clk/Source/clk.c **** *
 764:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all other
 765:rtos/uC-Clk/Source/clk.c **** *                   validation or function handling in case of any error(s).
 766:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 767:rtos/uC-Clk/Source/clk.c **** */
 768:rtos/uC-Clk/Source/clk.c **** 
 769:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_DateTimeToTS (CLK_TS_SEC     *p_ts_sec,
 770:rtos/uC-Clk/Source/clk.c ****                                CLK_DATE_TIME  *p_date_time)
 771:rtos/uC-Clk/Source/clk.c **** {
ARM GAS  /tmp/cct1pkgW.s 			page 15


 772:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 773:rtos/uC-Clk/Source/clk.c **** 
 774:rtos/uC-Clk/Source/clk.c **** 
 775:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE TS PT
 776:rtos/uC-Clk/Source/clk.c ****     if (p_ts_sec == (CLK_TS_SEC *)0) {
 777:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 778:rtos/uC-Clk/Source/clk.c ****     }
 779:rtos/uC-Clk/Source/clk.c **** #endif
 780:rtos/uC-Clk/Source/clk.c **** 
 781:rtos/uC-Clk/Source/clk.c ****    *p_ts_sec = CLK_TS_SEC_NONE;                                 /* Init to ts none for err (see Not
 782:rtos/uC-Clk/Source/clk.c **** 
 783:rtos/uC-Clk/Source/clk.c **** 
 784:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Validated in Clk_IsDateTimeValid
 785:rtos/uC-Clk/Source/clk.c ****     if (p_date_time == (CLK_DATE_TIME *)0) {                    /* -------------- VALIDATE DATE/TIM
 786:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 787:rtos/uC-Clk/Source/clk.c ****     }
 788:rtos/uC-Clk/Source/clk.c **** #endif
 789:rtos/uC-Clk/Source/clk.c **** 
 790:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DATE/T
 791:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDateTimeValid(p_date_time);
 792:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 793:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 794:rtos/uC-Clk/Source/clk.c ****     }
 795:rtos/uC-Clk/Source/clk.c **** 
 796:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------- CONV DATE/TIME TO 
 797:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Convert Date/time to TS:\n\r"));
 798:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeToTS_Handler(p_ts_sec,
 799:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 800:rtos/uC-Clk/Source/clk.c ****                                      CLK_EPOCH_YR_START);
 801:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 802:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 803:rtos/uC-Clk/Source/clk.c ****     }
 804:rtos/uC-Clk/Source/clk.c **** 
 805:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
 806:rtos/uC-Clk/Source/clk.c **** }
 807:rtos/uC-Clk/Source/clk.c **** 
 808:rtos/uC-Clk/Source/clk.c **** 
 809:rtos/uC-Clk/Source/clk.c **** /*
 810:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 811:rtos/uC-Clk/Source/clk.c **** *                                         Clk_DateTimeMake()
 812:rtos/uC-Clk/Source/clk.c **** *
 813:rtos/uC-Clk/Source/clk.c **** * Description : Build a valid Clock epoch date/time structure.
 814:rtos/uC-Clk/Source/clk.c **** *
 815:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that will receive the date/time structure.
 816:rtos/uC-Clk/Source/clk.c **** *
 817:rtos/uC-Clk/Source/clk.c **** *               yr              Year    value [CLK_EPOCH_YR_START to CLK_EPOCH_YR_END) [see Note #1
 818:rtos/uC-Clk/Source/clk.c **** *
 819:rtos/uC-Clk/Source/clk.c **** *               month           Month   value [     CLK_MONTH_JAN to    CLK_MONTH_DEC].
 820:rtos/uC-Clk/Source/clk.c **** *
 821:rtos/uC-Clk/Source/clk.c **** *               day             Day     value [                 1 to               31].
 822:rtos/uC-Clk/Source/clk.c **** *
 823:rtos/uC-Clk/Source/clk.c **** *               hr              Hours   value [                 0 to               23].
 824:rtos/uC-Clk/Source/clk.c **** *
 825:rtos/uC-Clk/Source/clk.c **** *               min             Minutes value [                 0 to               59].
 826:rtos/uC-Clk/Source/clk.c **** *
 827:rtos/uC-Clk/Source/clk.c **** *               sec             Seconds value [                 0 to               60] (see Note #3
 828:rtos/uC-Clk/Source/clk.c **** *
ARM GAS  /tmp/cct1pkgW.s 			page 16


 829:rtos/uC-Clk/Source/clk.c **** *               tz_sec          Time zone offset (in seconds, +|- from UTC) [-43200 to 43200].
 830:rtos/uC-Clk/Source/clk.c **** *
 831:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if date/time structure successfully returned.
 832:rtos/uC-Clk/Source/clk.c **** *
 833:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
 834:rtos/uC-Clk/Source/clk.c **** *
 835:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Date/time structure ('p_date_time') MUST be representable in Clock timestamp.
 836:rtos/uC-Clk/Source/clk.c **** *                   Thus date to convert MUST be :
 837:rtos/uC-Clk/Source/clk.c **** *
 838:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_EPOCH_YR_START
 839:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_EPOCH_YR_END
 840:rtos/uC-Clk/Source/clk.c **** *
 841:rtos/uC-Clk/Source/clk.c **** *               (2) Day of week ('p_date_time->DayOfWk') and Day of year ('p_date_time->DayOfYr')
 842:rtos/uC-Clk/Source/clk.c **** *                   are internally calculated and set in the date/time structure if date is valid.
 843:rtos/uC-Clk/Source/clk.c **** *
 844:rtos/uC-Clk/Source/clk.c **** *               (3) Seconds value of 60 is valid to be compatible with leap second adjustment and
 845:rtos/uC-Clk/Source/clk.c **** *                   the atomic clock time structure.
 846:rtos/uC-Clk/Source/clk.c **** *
 847:rtos/uC-Clk/Source/clk.c **** *               (4) Time zone is based ('tz_sec') on Coordinated Universal Time (UTC) & has valid
 848:rtos/uC-Clk/Source/clk.c **** *                   values :
 849:rtos/uC-Clk/Source/clk.c **** *
 850:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
 851:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minutes
 852:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 853:rtos/uC-Clk/Source/clk.c **** */
 854:rtos/uC-Clk/Source/clk.c **** 
 855:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_DateTimeMake (CLK_DATE_TIME  *p_date_time,
 856:rtos/uC-Clk/Source/clk.c ****                                CLK_YR          yr,
 857:rtos/uC-Clk/Source/clk.c ****                                CLK_MONTH       month,
 858:rtos/uC-Clk/Source/clk.c ****                                CLK_DAY         day,
 859:rtos/uC-Clk/Source/clk.c ****                                CLK_HR          hr,
 860:rtos/uC-Clk/Source/clk.c ****                                CLK_MIN         min,
 861:rtos/uC-Clk/Source/clk.c ****                                CLK_SEC         sec,
 862:rtos/uC-Clk/Source/clk.c ****                                CLK_TZ_SEC      tz_sec)
 863:rtos/uC-Clk/Source/clk.c **** {
 864:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 865:rtos/uC-Clk/Source/clk.c **** 
 866:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------- VALIDATE & CONV CLK D
 867:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeMakeHandler(p_date_time,
 868:rtos/uC-Clk/Source/clk.c ****                                     yr,
 869:rtos/uC-Clk/Source/clk.c ****                                     month,
 870:rtos/uC-Clk/Source/clk.c ****                                     day,
 871:rtos/uC-Clk/Source/clk.c ****                                     hr,
 872:rtos/uC-Clk/Source/clk.c ****                                     min,
 873:rtos/uC-Clk/Source/clk.c ****                                     sec,
 874:rtos/uC-Clk/Source/clk.c ****                                     tz_sec,
 875:rtos/uC-Clk/Source/clk.c ****                                     CLK_EPOCH_YR_START,
 876:rtos/uC-Clk/Source/clk.c ****                                     CLK_EPOCH_YR_END);
 877:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 878:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 879:rtos/uC-Clk/Source/clk.c ****     }
 880:rtos/uC-Clk/Source/clk.c **** 
 881:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
 882:rtos/uC-Clk/Source/clk.c **** }
 883:rtos/uC-Clk/Source/clk.c **** 
 884:rtos/uC-Clk/Source/clk.c **** 
 885:rtos/uC-Clk/Source/clk.c **** /*
ARM GAS  /tmp/cct1pkgW.s 			page 17


 886:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 887:rtos/uC-Clk/Source/clk.c **** *                                       Clk_IsDateTimeValid()
 888:rtos/uC-Clk/Source/clk.c **** *
 889:rtos/uC-Clk/Source/clk.c **** * Description : Determine if date/time structure is valid in Clock epoch.
 890:rtos/uC-Clk/Source/clk.c **** *
 891:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that contains the date/time structure to valida
 892:rtos/uC-Clk/Source/clk.c **** *
 893:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, if date/time structure is valid.
 894:rtos/uC-Clk/Source/clk.c **** *
 895:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  otherwise.
 896:rtos/uC-Clk/Source/clk.c **** *
 897:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Date/time structure ('p_date_time') MUST be representable in Clock epoch. Thus
 898:rtos/uC-Clk/Source/clk.c **** *                   date to validate MUST be :
 899:rtos/uC-Clk/Source/clk.c **** *
 900:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_EPOCH_YR_START
 901:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_EPOCH_YR_END
 902:rtos/uC-Clk/Source/clk.c **** *
 903:rtos/uC-Clk/Source/clk.c **** *               (2) Time zone is based ('p_date_time->TZ_sec') on Coordinated Universal Time (UTC)
 904:rtos/uC-Clk/Source/clk.c **** *                   & has valid values :
 905:rtos/uC-Clk/Source/clk.c **** *
 906:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
 907:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minutes
 908:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 909:rtos/uC-Clk/Source/clk.c **** */
 910:rtos/uC-Clk/Source/clk.c **** 
 911:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_IsDateTimeValid (CLK_DATE_TIME  *p_date_time)
 912:rtos/uC-Clk/Source/clk.c **** {
 913:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 914:rtos/uC-Clk/Source/clk.c **** 
 915:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- VALIDATE CLK DATE
 916:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Validate Clock date/time: "));
 917:rtos/uC-Clk/Source/clk.c **** 
 918:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDateTimeValidHandler(p_date_time,
 919:rtos/uC-Clk/Source/clk.c ****                                        CLK_EPOCH_YR_START,
 920:rtos/uC-Clk/Source/clk.c ****                                        CLK_EPOCH_YR_END);
 921:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 922:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Fail\n\r"));
 923:rtos/uC-Clk/Source/clk.c ****         return  (DEF_NO);
 924:rtos/uC-Clk/Source/clk.c ****     }
 925:rtos/uC-Clk/Source/clk.c **** 
 926:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Ok\n\r"));
 927:rtos/uC-Clk/Source/clk.c **** 
 928:rtos/uC-Clk/Source/clk.c ****     return (DEF_YES);
 929:rtos/uC-Clk/Source/clk.c **** }
 930:rtos/uC-Clk/Source/clk.c **** 
 931:rtos/uC-Clk/Source/clk.c **** 
 932:rtos/uC-Clk/Source/clk.c **** /*
 933:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 934:rtos/uC-Clk/Source/clk.c **** *                                          Clk_GetDayOfWk()
 935:rtos/uC-Clk/Source/clk.c **** *
 936:rtos/uC-Clk/Source/clk.c **** * Description : Get the day of week.
 937:rtos/uC-Clk/Source/clk.c **** *
 938:rtos/uC-Clk/Source/clk.c **** * Argument(s) : yr          Year  value [1900 to 2135] (see Note #1).
 939:rtos/uC-Clk/Source/clk.c **** *
 940:rtos/uC-Clk/Source/clk.c **** *               month       Month value [   1 to   12] / [CLK_MONTH_JAN to CLK_MONTH_DEC].
 941:rtos/uC-Clk/Source/clk.c **** *
 942:rtos/uC-Clk/Source/clk.c **** *               day         Day   value [   1 to   31].
ARM GAS  /tmp/cct1pkgW.s 			page 18


 943:rtos/uC-Clk/Source/clk.c **** *
 944:rtos/uC-Clk/Source/clk.c **** * Return(s)   : Day of week [1 to 7] / [CLK_DAY_OF_WK_SUN to CLK_DAY_OF_WK_SAT], if NO error(s).
 945:rtos/uC-Clk/Source/clk.c **** *
 946:rtos/uC-Clk/Source/clk.c **** *               CLK_DAY_OF_WK_NONE,                                              otherwise.
 947:rtos/uC-Clk/Source/clk.c **** *
 948:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) It's only possible to get a day of week of an epoch supported by Clock :
 949:rtos/uC-Clk/Source/clk.c **** *
 950:rtos/uC-Clk/Source/clk.c **** *                   (a) Earliest year is the NTP   epoch start year, thus Year ('yr') MUST be great
 951:rtos/uC-Clk/Source/clk.c **** *                       than or equal to 'CLK_NTP_EPOCH_YR_START'.
 952:rtos/uC-Clk/Source/clk.c **** *
 953:rtos/uC-Clk/Source/clk.c **** *                   (b) Latest   year is the Clock epoch end   year, thus Year ('yr') MUST be less
 954:rtos/uC-Clk/Source/clk.c **** *                       than 'CLK_EPOCH_YR_END'.
 955:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 956:rtos/uC-Clk/Source/clk.c **** */
 957:rtos/uC-Clk/Source/clk.c **** 
 958:rtos/uC-Clk/Source/clk.c **** CLK_DAY  Clk_GetDayOfWk (CLK_YR     yr,
 959:rtos/uC-Clk/Source/clk.c ****                          CLK_MONTH  month,
 960:rtos/uC-Clk/Source/clk.c ****                          CLK_DAY    day)
 961:rtos/uC-Clk/Source/clk.c **** {
 962:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      day_of_wk;
 963:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 964:rtos/uC-Clk/Source/clk.c **** 
 965:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ VALIDATE DATE
 966:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDateValid(yr,
 967:rtos/uC-Clk/Source/clk.c ****                             month,
 968:rtos/uC-Clk/Source/clk.c ****                             day,
 969:rtos/uC-Clk/Source/clk.c ****                             CLK_NTP_EPOCH_YR_START,
 970:rtos/uC-Clk/Source/clk.c ****                             CLK_EPOCH_YR_END);
 971:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 972:rtos/uC-Clk/Source/clk.c ****         return (CLK_DAY_OF_WK_NONE);
 973:rtos/uC-Clk/Source/clk.c ****     }
 974:rtos/uC-Clk/Source/clk.c **** 
 975:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ GET DAY OF WK
 976:rtos/uC-Clk/Source/clk.c ****     day_of_wk = Clk_GetDayOfWkHandler(yr, month, day);
 977:rtos/uC-Clk/Source/clk.c **** 
 978:rtos/uC-Clk/Source/clk.c ****     return (day_of_wk);
 979:rtos/uC-Clk/Source/clk.c **** }
 980:rtos/uC-Clk/Source/clk.c **** 
 981:rtos/uC-Clk/Source/clk.c **** 
 982:rtos/uC-Clk/Source/clk.c **** /*
 983:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
 984:rtos/uC-Clk/Source/clk.c **** *                                          Clk_GetDayOfYr()
 985:rtos/uC-Clk/Source/clk.c **** *
 986:rtos/uC-Clk/Source/clk.c **** * Description : Get the day of year.
 987:rtos/uC-Clk/Source/clk.c **** *
 988:rtos/uC-Clk/Source/clk.c **** * Argument(s) : yr          Year  value [1900 to 2135] (see Note #1).
 989:rtos/uC-Clk/Source/clk.c **** *
 990:rtos/uC-Clk/Source/clk.c **** *               month       Month value [   1 to   12] / [CLK_MONTH_JAN to CLK_MONTH_DEC].
 991:rtos/uC-Clk/Source/clk.c **** *
 992:rtos/uC-Clk/Source/clk.c **** *               day         Day   value [   1 to   31].
 993:rtos/uC-Clk/Source/clk.c **** *
 994:rtos/uC-Clk/Source/clk.c **** * Return(s)   : Day of year [1 to 366], if NO error(s).
 995:rtos/uC-Clk/Source/clk.c **** *
 996:rtos/uC-Clk/Source/clk.c **** *               CLK_DAY_OF_WK_NONE,     otherwise.
 997:rtos/uC-Clk/Source/clk.c **** *
 998:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) It's only possible to get a day of year of an epoch supported by Clock :
 999:rtos/uC-Clk/Source/clk.c **** *
ARM GAS  /tmp/cct1pkgW.s 			page 19


1000:rtos/uC-Clk/Source/clk.c **** *                   (a) Earliest year is the NTP   epoch start year, thus Year ('yr') MUST be great
1001:rtos/uC-Clk/Source/clk.c **** *                       than or equal to 'CLK_NTP_EPOCH_YR_START'.
1002:rtos/uC-Clk/Source/clk.c **** *
1003:rtos/uC-Clk/Source/clk.c **** *                   (b) Latest   year is the Clock epoch end   year, thus Year ('yr') MUST be less
1004:rtos/uC-Clk/Source/clk.c **** *                       than 'CLK_EPOCH_YR_END'.
1005:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1006:rtos/uC-Clk/Source/clk.c **** */
1007:rtos/uC-Clk/Source/clk.c **** 
1008:rtos/uC-Clk/Source/clk.c **** CLK_DAY  Clk_GetDayOfYr (CLK_YR     yr,
1009:rtos/uC-Clk/Source/clk.c ****                          CLK_MONTH  month,
1010:rtos/uC-Clk/Source/clk.c ****                          CLK_DAY    day)
1011:rtos/uC-Clk/Source/clk.c **** {
1012:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      day_of_wk;
1013:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
1014:rtos/uC-Clk/Source/clk.c **** 
1015:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ VALIDATE DATE
1016:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDateValid(yr,
1017:rtos/uC-Clk/Source/clk.c ****                             month,
1018:rtos/uC-Clk/Source/clk.c ****                             day,
1019:rtos/uC-Clk/Source/clk.c ****                             CLK_NTP_EPOCH_YR_START,
1020:rtos/uC-Clk/Source/clk.c ****                             CLK_EPOCH_YR_END);
1021:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
1022:rtos/uC-Clk/Source/clk.c ****         return (CLK_DAY_OF_WK_NONE);
1023:rtos/uC-Clk/Source/clk.c ****     }
1024:rtos/uC-Clk/Source/clk.c **** 
1025:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ GET DAY OF YR
1026:rtos/uC-Clk/Source/clk.c ****     day_of_wk = Clk_GetDayOfYrHandler(yr, month, day);
1027:rtos/uC-Clk/Source/clk.c **** 
1028:rtos/uC-Clk/Source/clk.c ****     return (day_of_wk);
1029:rtos/uC-Clk/Source/clk.c **** }
1030:rtos/uC-Clk/Source/clk.c **** 
1031:rtos/uC-Clk/Source/clk.c **** 
1032:rtos/uC-Clk/Source/clk.c **** /*
1033:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1034:rtos/uC-Clk/Source/clk.c **** *                                         Clk_DateTimeToStr()
1035:rtos/uC-Clk/Source/clk.c **** *
1036:rtos/uC-Clk/Source/clk.c **** * Description : Converts a date/time structure to an ASCII string.
1037:rtos/uC-Clk/Source/clk.c **** *
1038:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that contains the date/time structure to conver
1039:rtos/uC-Clk/Source/clk.c **** *
1040:rtos/uC-Clk/Source/clk.c **** *               fmt             Desired string format :
1041:rtos/uC-Clk/Source/clk.c **** *
1042:rtos/uC-Clk/Source/clk.c **** *                                   CLK_STR_FMT_YYYY_MM_DD_HH_MM_SS_UTC     "YYYY-MM-DD HH:MM:SS UT
1043:rtos/uC-Clk/Source/clk.c **** *                                   CLK_STR_FMT_YYYY_MM_DD_HH_MM_SS         "YYYY-MM-DD HH:MM:SS"
1044:rtos/uC-Clk/Source/clk.c **** *                                   CLK_STR_FMT_MM_DD_YY_HH_MM_SS           "MM-DD-YY HH:MM:SS"
1045:rtos/uC-Clk/Source/clk.c **** *                                   CLK_STR_FMT_YYYY_MM_DD                  "YYYY-MM-DD"
1046:rtos/uC-Clk/Source/clk.c **** *                                   CLK_STR_FMT_MM_DD_YY                    "MM-DD-YY"
1047:rtos/uC-Clk/Source/clk.c **** *                                   CLK_STR_FMT_DAY_MONTH_DD_YYYY           "Day Month DD, YYYY"
1048:rtos/uC-Clk/Source/clk.c **** *                                   CLK_STR_FMT_DAY_MONTH_DD_HH_MM_SS_YYYY  "Day Mon DD HH:MM:SS YY
1049:rtos/uC-Clk/Source/clk.c **** *                                   CLK_STR_FMT_HH_MM_SS                    "HH:MM:SS"
1050:rtos/uC-Clk/Source/clk.c **** *                                   CLK_STR_FMT_HH_MM_SS_AM_PM              "HH:MM:SS AM|PM"
1051:rtos/uC-Clk/Source/clk.c **** *
1052:rtos/uC-Clk/Source/clk.c **** *               p_str           Pointer to buffer that will receive the formated string (see Note #
1053:rtos/uC-Clk/Source/clk.c **** *
1054:rtos/uC-Clk/Source/clk.c **** *               str_len         Maximum number of characters the string can contains.
1055:rtos/uC-Clk/Source/clk.c **** *
1056:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if string successfully returned.
ARM GAS  /tmp/cct1pkgW.s 			page 20


1057:rtos/uC-Clk/Source/clk.c **** *
1058:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
1059:rtos/uC-Clk/Source/clk.c **** *
1060:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) It's only possible to convert date supported by Clock :
1061:rtos/uC-Clk/Source/clk.c **** *
1062:rtos/uC-Clk/Source/clk.c **** *                   (a) Earliest year is the NTP   epoch start year, thus Year ('yr') MUST be great
1063:rtos/uC-Clk/Source/clk.c **** *                       than or equal to 'CLK_NTP_EPOCH_YR_START'.
1064:rtos/uC-Clk/Source/clk.c **** *
1065:rtos/uC-Clk/Source/clk.c **** *                   (b) Latest   year is the Clock epoch end   year, thus Year ('yr') MUST be less
1066:rtos/uC-Clk/Source/clk.c **** *                       than 'CLK_EPOCH_YR_END'.
1067:rtos/uC-Clk/Source/clk.c **** *
1068:rtos/uC-Clk/Source/clk.c **** *               (2) The size of the string buffer that will receive the returned string address MUS
1069:rtos/uC-Clk/Source/clk.c **** *                   greater than or equal to CLK_STR_FMT_MAX_LEN.
1070:rtos/uC-Clk/Source/clk.c **** *
1071:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all other
1072:rtos/uC-Clk/Source/clk.c **** *                   validation or function handling in case of any error(s).
1073:rtos/uC-Clk/Source/clk.c **** *
1074:rtos/uC-Clk/Source/clk.c **** *               (4) Absolute value of the time zone offset is stored into 'CLK_TS_SEC' data type to
1075:rtos/uC-Clk/Source/clk.c **** *                   compliant with unsigned integer verification/operations.
1076:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1077:rtos/uC-Clk/Source/clk.c **** */
1078:rtos/uC-Clk/Source/clk.c **** 
1079:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_STR_CONV_EN == DEF_ENABLED)
1080:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_DateTimeToStr (CLK_DATE_TIME  *p_date_time,
1081:rtos/uC-Clk/Source/clk.c ****                                 CLK_STR_FMT     fmt,
1082:rtos/uC-Clk/Source/clk.c ****                                 CPU_CHAR       *p_str,
1083:rtos/uC-Clk/Source/clk.c ****                                 CPU_SIZE_T      str_len)
1084:rtos/uC-Clk/Source/clk.c **** {
1085:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      yr   [CLK_STR_DIG_YR_LEN     + 1u];
1086:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      month[CLK_STR_DIG_MONTH_LEN  + 1u];
1087:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      day  [CLK_STR_DIG_DAY_LEN    + 1u];
1088:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      hr   [CLK_STR_DIG_HR_LEN     + 1u];
1089:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      min  [CLK_STR_DIG_MIN_LEN    + 1u];
1090:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      sec  [CLK_STR_DIG_SEC_LEN    + 1u];
1091:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      tz   [CLK_STR_DIG_TZ_MAX_LEN + 1u];
1092:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      am_pm[CLK_STR_AM_PM_LEN      + 1u];
1093:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR     *p_yr;
1094:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   valid;
1095:rtos/uC-Clk/Source/clk.c ****     CLK_HR        half_day_hr;
1096:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    tz_hr_abs;                                     /* See Note #4.                   
1097:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    tz_min_abs;                                    /* See Note #4.                   
1098:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    tz_sec_rem_abs;                                /* See Note #4.                   
1099:rtos/uC-Clk/Source/clk.c **** 
1100:rtos/uC-Clk/Source/clk.c **** 
1101:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE STR P
1102:rtos/uC-Clk/Source/clk.c ****     if (p_str == (CPU_CHAR *)0) {
1103:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1104:rtos/uC-Clk/Source/clk.c ****     }
1105:rtos/uC-Clk/Source/clk.c ****     if (str_len < sizeof((CPU_CHAR)'\0')) {
1106:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1107:rtos/uC-Clk/Source/clk.c ****     }
1108:rtos/uC-Clk/Source/clk.c **** #endif
1109:rtos/uC-Clk/Source/clk.c **** 
1110:rtos/uC-Clk/Source/clk.c ****    *p_str = '\0';                                               /* Init to NULL str for err (see No
1111:rtos/uC-Clk/Source/clk.c **** 
1112:rtos/uC-Clk/Source/clk.c **** 
1113:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE STR L
ARM GAS  /tmp/cct1pkgW.s 			page 21


1114:rtos/uC-Clk/Source/clk.c ****     switch (fmt) {
1115:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_YYYY_MM_DD_HH_MM_SS_UTC:
1116:rtos/uC-Clk/Source/clk.c ****              if (str_len < CLK_STR_FMT_YYYY_MM_DD_HH_MM_SS_UTC_LEN) {
1117:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
1118:rtos/uC-Clk/Source/clk.c ****              }
1119:rtos/uC-Clk/Source/clk.c ****              break;
1120:rtos/uC-Clk/Source/clk.c **** 
1121:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_YYYY_MM_DD_HH_MM_SS:
1122:rtos/uC-Clk/Source/clk.c ****              if (str_len < CLK_STR_FMT_YYYY_MM_DD_HH_MM_SS_LEN) {
1123:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
1124:rtos/uC-Clk/Source/clk.c ****              }
1125:rtos/uC-Clk/Source/clk.c ****              break;
1126:rtos/uC-Clk/Source/clk.c **** 
1127:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_MM_DD_YY_HH_MM_SS:
1128:rtos/uC-Clk/Source/clk.c ****              if (str_len < CLK_STR_FMT_MM_DD_YY_HH_MM_SS_LEN) {
1129:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
1130:rtos/uC-Clk/Source/clk.c ****              }
1131:rtos/uC-Clk/Source/clk.c ****              break;
1132:rtos/uC-Clk/Source/clk.c **** 
1133:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_YYYY_MM_DD:
1134:rtos/uC-Clk/Source/clk.c ****              if (str_len < CLK_STR_FMT_YYYY_MM_DD_LEN) {
1135:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
1136:rtos/uC-Clk/Source/clk.c ****              }
1137:rtos/uC-Clk/Source/clk.c ****              break;
1138:rtos/uC-Clk/Source/clk.c **** 
1139:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_MM_DD_YY:
1140:rtos/uC-Clk/Source/clk.c ****              if (str_len < CLK_STR_FMT_MM_DD_YY_LEN) {
1141:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
1142:rtos/uC-Clk/Source/clk.c ****              }
1143:rtos/uC-Clk/Source/clk.c ****              break;
1144:rtos/uC-Clk/Source/clk.c **** 
1145:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_DAY_MONTH_DD_YYYY:
1146:rtos/uC-Clk/Source/clk.c ****              if (str_len < CLK_STR_FMT_DAY_MONTH_DD_YYYY_MAX_LEN) {
1147:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
1148:rtos/uC-Clk/Source/clk.c ****              }
1149:rtos/uC-Clk/Source/clk.c ****              break;
1150:rtos/uC-Clk/Source/clk.c **** 
1151:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_DAY_MONTH_DD_HH_MM_SS_YYYY:
1152:rtos/uC-Clk/Source/clk.c ****              if (str_len < CLK_STR_FMT_DAY_MONTH_DD_HH_MM_SS_YYYY_LEN) {
1153:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
1154:rtos/uC-Clk/Source/clk.c ****              }
1155:rtos/uC-Clk/Source/clk.c ****              break;
1156:rtos/uC-Clk/Source/clk.c **** 
1157:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_HH_MM_SS:
1158:rtos/uC-Clk/Source/clk.c ****              if (str_len < CLK_STR_FMT_HH_MM_SS_LEN) {
1159:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
1160:rtos/uC-Clk/Source/clk.c ****              }
1161:rtos/uC-Clk/Source/clk.c ****              break;
1162:rtos/uC-Clk/Source/clk.c **** 
1163:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_HH_MM_SS_AM_PM:
1164:rtos/uC-Clk/Source/clk.c ****              if (str_len < CLK_STR_FMT_HH_MM_SS_AM_PM_LEN) {
1165:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
1166:rtos/uC-Clk/Source/clk.c ****              }
1167:rtos/uC-Clk/Source/clk.c ****              break;
1168:rtos/uC-Clk/Source/clk.c **** 
1169:rtos/uC-Clk/Source/clk.c ****         default:
1170:rtos/uC-Clk/Source/clk.c ****              return (DEF_FAIL);
ARM GAS  /tmp/cct1pkgW.s 			page 22


1171:rtos/uC-Clk/Source/clk.c ****     }
1172:rtos/uC-Clk/Source/clk.c **** #else
1173:rtos/uC-Clk/Source/clk.c ****   (void)str_len;                                               /* Prevent 'variable unused' compile
1174:rtos/uC-Clk/Source/clk.c **** #endif
1175:rtos/uC-Clk/Source/clk.c **** 
1176:rtos/uC-Clk/Source/clk.c **** 
1177:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DATE/T
1178:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Validated in Clk_IsDateTimeValid
1179:rtos/uC-Clk/Source/clk.c ****     if (p_date_time == (CLK_DATE_TIME *)0) {
1180:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1181:rtos/uC-Clk/Source/clk.c ****     }
1182:rtos/uC-Clk/Source/clk.c **** #endif
1183:rtos/uC-Clk/Source/clk.c **** 
1184:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDateTimeValidHandler(p_date_time,
1185:rtos/uC-Clk/Source/clk.c ****                                        CLK_NTP_EPOCH_YR_START,
1186:rtos/uC-Clk/Source/clk.c ****                                        CLK_EPOCH_YR_END);
1187:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
1188:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
1189:rtos/uC-Clk/Source/clk.c ****     }
1190:rtos/uC-Clk/Source/clk.c **** 
1191:rtos/uC-Clk/Source/clk.c **** 
1192:rtos/uC-Clk/Source/clk.c **** 
1193:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- CREATE DATE/TIME 
1194:rtos/uC-Clk/Source/clk.c ****    (void)Str_FmtNbr_Int32U((CPU_INT32U )p_date_time->Yr,        /* Create yr str.                  
1195:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_YR_LEN,
1196:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )DEF_NBR_BASE_DEC,
1197:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR   )'\0',
1198:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_NO,
1199:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_YES,
1200:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR  *)yr);
1201:rtos/uC-Clk/Source/clk.c **** 
1202:rtos/uC-Clk/Source/clk.c ****    (void)Str_FmtNbr_Int32U((CPU_INT32U )p_date_time->Month,     /* Create month (dig) str.         
1203:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_MONTH_LEN,
1204:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )DEF_NBR_BASE_DEC,
1205:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR   )'0',
1206:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_NO,
1207:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_YES,
1208:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR  *)month);
1209:rtos/uC-Clk/Source/clk.c **** 
1210:rtos/uC-Clk/Source/clk.c ****    (void)Str_FmtNbr_Int32U((CPU_INT32U )p_date_time->Day,       /* Create day str.                 
1211:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_DAY_LEN,
1212:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )DEF_NBR_BASE_DEC,
1213:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR   )'0',
1214:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_NO,
1215:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_YES,
1216:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR  *)day);
1217:rtos/uC-Clk/Source/clk.c **** 
1218:rtos/uC-Clk/Source/clk.c ****    (void)Str_FmtNbr_Int32U((CPU_INT32U )p_date_time->Hr,        /* Create hr str.                  
1219:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_HR_LEN,
1220:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )DEF_NBR_BASE_DEC,
1221:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR   )'0',
1222:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_NO,
1223:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_YES,
1224:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR  *)hr);
1225:rtos/uC-Clk/Source/clk.c **** 
1226:rtos/uC-Clk/Source/clk.c ****    (void)Str_FmtNbr_Int32U((CPU_INT32U )p_date_time->Min,       /* Create min str.                 
1227:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_MIN_LEN,
ARM GAS  /tmp/cct1pkgW.s 			page 23


1228:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )DEF_NBR_BASE_DEC,
1229:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR   )'0',
1230:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_NO,
1231:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_YES,
1232:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR  *)min);
1233:rtos/uC-Clk/Source/clk.c **** 
1234:rtos/uC-Clk/Source/clk.c ****    (void)Str_FmtNbr_Int32U((CPU_INT32U )p_date_time->Sec,       /* Create sec str.                 
1235:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_SEC_LEN,
1236:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )DEF_NBR_BASE_DEC,
1237:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR   )'0',
1238:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_NO,
1239:rtos/uC-Clk/Source/clk.c ****                            (CPU_BOOLEAN)DEF_YES,
1240:rtos/uC-Clk/Source/clk.c ****                            (CPU_CHAR  *)sec);
1241:rtos/uC-Clk/Source/clk.c **** 
1242:rtos/uC-Clk/Source/clk.c **** 
1243:rtos/uC-Clk/Source/clk.c **** 
1244:rtos/uC-Clk/Source/clk.c ****     switch (fmt) {                                              /* ---------------- FMT DATE/TIME S
1245:rtos/uC-Clk/Source/clk.c **** 
1246:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_YYYY_MM_DD_HH_MM_SS_UTC:               /* ------ BUILD STR "YYYY-MM-DD HH:
1247:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : YYYY-MM-DD HH:MM:SS UTC+TZ (+|-hh:mm)\n\r"));
1248:rtos/uC-Clk/Source/clk.c **** 
1249:rtos/uC-Clk/Source/clk.c ****             (void)Str_Copy_N(p_str, yr,     CLK_STR_DIG_YR_LEN + 1u);
1250:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",    1u);
1251:rtos/uC-Clk/Source/clk.c **** 
1252:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, month,  CLK_STR_DIG_MONTH_LEN);
1253:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",    1u);
1254:rtos/uC-Clk/Source/clk.c **** 
1255:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, day,    CLK_STR_DIG_DAY_LEN);
1256:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",    1u);
1257:rtos/uC-Clk/Source/clk.c **** 
1258:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, hr,     CLK_STR_DIG_HR_LEN);
1259:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",    1u);
1260:rtos/uC-Clk/Source/clk.c **** 
1261:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, min,    CLK_STR_DIG_MIN_LEN);
1262:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",    1u);
1263:rtos/uC-Clk/Source/clk.c **** 
1264:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, sec,    CLK_STR_DIG_SEC_LEN);
1265:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",    1u);
1266:rtos/uC-Clk/Source/clk.c **** 
1267:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "UTC",  3u);
1268:rtos/uC-Clk/Source/clk.c **** 
1269:rtos/uC-Clk/Source/clk.c ****              if (p_date_time->TZ_sec >= 0) {
1270:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Cat_N(p_str, "+", 1u);
1271:rtos/uC-Clk/Source/clk.c ****              } else {
1272:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Cat_N(p_str, "-", 1u);
1273:rtos/uC-Clk/Source/clk.c ****              }
1274:rtos/uC-Clk/Source/clk.c **** 
1275:rtos/uC-Clk/Source/clk.c ****              tz_sec_rem_abs = DEF_ABS(p_date_time->TZ_sec);
1276:rtos/uC-Clk/Source/clk.c ****              tz_hr_abs      = tz_sec_rem_abs / DEF_TIME_NBR_SEC_PER_HR;
1277:rtos/uC-Clk/Source/clk.c ****              tz_sec_rem_abs = tz_sec_rem_abs % DEF_TIME_NBR_SEC_PER_HR;
1278:rtos/uC-Clk/Source/clk.c ****             (void)Str_FmtNbr_Int32U((CPU_INT32S )tz_hr_abs,
1279:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_TZ_HR_LEN,
1280:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )DEF_NBR_BASE_DEC,
1281:rtos/uC-Clk/Source/clk.c ****                                     (CPU_CHAR   )'0',
1282:rtos/uC-Clk/Source/clk.c ****                                     (CPU_BOOLEAN)DEF_NO,
1283:rtos/uC-Clk/Source/clk.c ****                                     (CPU_BOOLEAN)DEF_YES,
1284:rtos/uC-Clk/Source/clk.c ****                                     (CPU_CHAR  *)tz);
ARM GAS  /tmp/cct1pkgW.s 			page 24


1285:rtos/uC-Clk/Source/clk.c **** 
1286:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(p_str, tz,  CLK_STR_DIG_TZ_HR_LEN);
1287:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(p_str, ":", 1u);
1288:rtos/uC-Clk/Source/clk.c **** 
1289:rtos/uC-Clk/Source/clk.c ****              tz_min_abs = tz_sec_rem_abs / DEF_TIME_NBR_SEC_PER_MIN;
1290:rtos/uC-Clk/Source/clk.c ****             (void)Str_FmtNbr_Int32U((CPU_INT32S )tz_min_abs,
1291:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_TZ_MIN_LEN,
1292:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )DEF_NBR_BASE_DEC,
1293:rtos/uC-Clk/Source/clk.c ****                                     (CPU_CHAR   )'0',
1294:rtos/uC-Clk/Source/clk.c ****                                     (CPU_BOOLEAN)DEF_NO,
1295:rtos/uC-Clk/Source/clk.c ****                                     (CPU_BOOLEAN)DEF_YES,
1296:rtos/uC-Clk/Source/clk.c ****                                     (CPU_CHAR  *)tz);
1297:rtos/uC-Clk/Source/clk.c **** 
1298:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(p_str, tz,  CLK_STR_DIG_TZ_MIN_LEN);
1299:rtos/uC-Clk/Source/clk.c ****              break;
1300:rtos/uC-Clk/Source/clk.c **** 
1301:rtos/uC-Clk/Source/clk.c **** 
1302:rtos/uC-Clk/Source/clk.c **** 
1303:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_YYYY_MM_DD_HH_MM_SS:                   /* --------- BUILD STR "YYYY-MM-DD 
1304:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : YYYY-MM-DD HH:MM:SS\n\r"));
1305:rtos/uC-Clk/Source/clk.c **** 
1306:rtos/uC-Clk/Source/clk.c ****             (void)Str_Copy_N(p_str, yr,    CLK_STR_DIG_YR_LEN + 1u);
1307:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
1308:rtos/uC-Clk/Source/clk.c **** 
1309:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, month, CLK_STR_DIG_MONTH_LEN);
1310:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
1311:rtos/uC-Clk/Source/clk.c **** 
1312:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, day,   CLK_STR_DIG_DAY_LEN);
1313:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
1314:rtos/uC-Clk/Source/clk.c **** 
1315:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, hr,    CLK_STR_DIG_HR_LEN);
1316:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
1317:rtos/uC-Clk/Source/clk.c **** 
1318:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, min,   CLK_STR_DIG_MIN_LEN);
1319:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
1320:rtos/uC-Clk/Source/clk.c **** 
1321:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, sec,   CLK_STR_DIG_SEC_LEN);
1322:rtos/uC-Clk/Source/clk.c ****              break;
1323:rtos/uC-Clk/Source/clk.c **** 
1324:rtos/uC-Clk/Source/clk.c **** 
1325:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_MM_DD_YY_HH_MM_SS:                     /* ---------- BUILD STR "MM-DD-YY H
1326:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : MM-DD-YY HH:MM:SS\n\r"));
1327:rtos/uC-Clk/Source/clk.c **** 
1328:rtos/uC-Clk/Source/clk.c ****             (void)Str_Copy_N(p_str, month, CLK_STR_DIG_MONTH_LEN + 1u);
1329:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
1330:rtos/uC-Clk/Source/clk.c **** 
1331:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, day,   CLK_STR_DIG_DAY_LEN);
1332:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
1333:rtos/uC-Clk/Source/clk.c **** 
1334:rtos/uC-Clk/Source/clk.c ****              p_yr = yr + CLK_STR_DIG_YR_TRUNC_LEN;
1335:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, p_yr,  CLK_STR_DIG_YR_TRUNC_LEN);
1336:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
1337:rtos/uC-Clk/Source/clk.c **** 
1338:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, hr,    CLK_STR_DIG_HR_LEN);
1339:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
1340:rtos/uC-Clk/Source/clk.c **** 
1341:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, min,   CLK_STR_DIG_MIN_LEN);
ARM GAS  /tmp/cct1pkgW.s 			page 25


1342:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
1343:rtos/uC-Clk/Source/clk.c **** 
1344:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, sec,   CLK_STR_DIG_SEC_LEN);
1345:rtos/uC-Clk/Source/clk.c ****              break;
1346:rtos/uC-Clk/Source/clk.c **** 
1347:rtos/uC-Clk/Source/clk.c **** 
1348:rtos/uC-Clk/Source/clk.c **** 
1349:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_YYYY_MM_DD:                            /* -------------- BUILD STR "YYYY-M
1350:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : YYYY-MM-DD\n\r"));
1351:rtos/uC-Clk/Source/clk.c **** 
1352:rtos/uC-Clk/Source/clk.c ****             (void)Str_Copy_N(p_str, yr,    CLK_STR_DIG_YR_LEN + 1u);
1353:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
1354:rtos/uC-Clk/Source/clk.c **** 
1355:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, month, CLK_STR_DIG_MONTH_LEN);
1356:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str,  "-",  1u);
1357:rtos/uC-Clk/Source/clk.c **** 
1358:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, day,   CLK_STR_DIG_DAY_LEN);
1359:rtos/uC-Clk/Source/clk.c ****              break;
1360:rtos/uC-Clk/Source/clk.c **** 
1361:rtos/uC-Clk/Source/clk.c **** 
1362:rtos/uC-Clk/Source/clk.c **** 
1363:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_MM_DD_YY:                              /* --------------- BUILD STR ""MM-D
1364:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : MM-DD-YY\n\r"));
1365:rtos/uC-Clk/Source/clk.c **** 
1366:rtos/uC-Clk/Source/clk.c ****             (void)Str_Copy_N(p_str, month, CLK_STR_DIG_MONTH_LEN + 1u);
1367:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
1368:rtos/uC-Clk/Source/clk.c **** 
1369:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, day,   CLK_STR_DIG_DAY_LEN);
1370:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
1371:rtos/uC-Clk/Source/clk.c **** 
1372:rtos/uC-Clk/Source/clk.c ****              p_yr = yr + CLK_STR_DIG_YR_TRUNC_LEN;
1373:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, p_yr,  CLK_STR_DIG_YR_TRUNC_LEN);
1374:rtos/uC-Clk/Source/clk.c ****              break;
1375:rtos/uC-Clk/Source/clk.c **** 
1376:rtos/uC-Clk/Source/clk.c **** 
1377:rtos/uC-Clk/Source/clk.c **** 
1378:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_DAY_MONTH_DD_YYYY:                     /* ---------- BUILD STR "Day Month 
1379:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : Day Month DD, YYYY\n\r"));
1380:rtos/uC-Clk/Source/clk.c **** 
1381:rtos/uC-Clk/Source/clk.c ****             (void)Str_Copy_N((CPU_CHAR *)p_str,
1382:rtos/uC-Clk/Source/clk.c ****                              (CPU_CHAR *)Clk_StrDayOfWk[p_date_time->DayOfWk - CLK_FIRST_DAY_OF_WK]
1383:rtos/uC-Clk/Source/clk.c ****                              (CPU_SIZE_T)CLK_STR_DAY_OF_WK_MAX_LEN + 1u);
1384:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(  p_str, " ",  1u);
1385:rtos/uC-Clk/Source/clk.c **** 
1386:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N( (CPU_CHAR *)p_str,
1387:rtos/uC-Clk/Source/clk.c ****                              (CPU_CHAR *)Clk_StrMonth[p_date_time->Month - CLK_FIRST_DAY_OF_MONTH],
1388:rtos/uC-Clk/Source/clk.c ****                              (CPU_SIZE_T)CLK_STR_MONTH_MAX_LEN);
1389:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(  p_str, " ",  1u);
1390:rtos/uC-Clk/Source/clk.c **** 
1391:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(  p_str, day,  CLK_STR_DIG_DAY_LEN);
1392:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(  p_str, ", ", 2u);
1393:rtos/uC-Clk/Source/clk.c **** 
1394:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(  p_str, yr,   CLK_STR_DIG_YR_LEN);
1395:rtos/uC-Clk/Source/clk.c ****              break;
1396:rtos/uC-Clk/Source/clk.c **** 
1397:rtos/uC-Clk/Source/clk.c **** 
1398:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_DAY_MONTH_DD_HH_MM_SS_YYYY:            /* ------- BUILD STR "Day Mon DD HH
ARM GAS  /tmp/cct1pkgW.s 			page 26


1399:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : Day Mon DD HH:MM:SS YYYY\n\r"));
1400:rtos/uC-Clk/Source/clk.c **** 
1401:rtos/uC-Clk/Source/clk.c ****             (void)Str_Copy_N((CPU_CHAR *)p_str,
1402:rtos/uC-Clk/Source/clk.c ****                              (CPU_CHAR *)Clk_StrDayOfWk[p_date_time->DayOfWk - CLK_FIRST_DAY_OF_WK]
1403:rtos/uC-Clk/Source/clk.c ****                              (CPU_SIZE_T)CLK_STR_DAY_OF_WK_TRUNC_LEN + 1u);
1404:rtos/uC-Clk/Source/clk.c ****              p_str[3] = '\0';
1405:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
1406:rtos/uC-Clk/Source/clk.c **** 
1407:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N((CPU_CHAR  *)p_str,
1408:rtos/uC-Clk/Source/clk.c ****                             (CPU_CHAR  *)Clk_StrMonth[p_date_time->Month - CLK_FIRST_DAY_OF_MONTH],
1409:rtos/uC-Clk/Source/clk.c ****                             (CPU_SIZE_T )CLK_STR_MONTH_TRUNC_LEN);
1410:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
1411:rtos/uC-Clk/Source/clk.c **** 
1412:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, day, CLK_STR_DIG_DAY_LEN);
1413:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
1414:rtos/uC-Clk/Source/clk.c **** 
1415:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, hr,  CLK_STR_DIG_HR_LEN);
1416:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
1417:rtos/uC-Clk/Source/clk.c **** 
1418:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, min, CLK_STR_DIG_MIN_LEN);
1419:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
1420:rtos/uC-Clk/Source/clk.c **** 
1421:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, sec, CLK_STR_DIG_SEC_LEN);
1422:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
1423:rtos/uC-Clk/Source/clk.c **** 
1424:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, yr,  CLK_STR_DIG_YR_LEN);
1425:rtos/uC-Clk/Source/clk.c ****              break;
1426:rtos/uC-Clk/Source/clk.c **** 
1427:rtos/uC-Clk/Source/clk.c **** 
1428:rtos/uC-Clk/Source/clk.c **** 
1429:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_HH_MM_SS:                              /* --------------- BUILD STR "HH:MM
1430:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : HH:MM:SS\n\r"));
1431:rtos/uC-Clk/Source/clk.c **** 
1432:rtos/uC-Clk/Source/clk.c ****             (void)Str_Copy_N(p_str, hr,  CLK_STR_DIG_HR_LEN + 1u);
1433:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
1434:rtos/uC-Clk/Source/clk.c **** 
1435:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, min, CLK_STR_DIG_MIN_LEN);
1436:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
1437:rtos/uC-Clk/Source/clk.c **** 
1438:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, sec, CLK_STR_DIG_SEC_LEN);
1439:rtos/uC-Clk/Source/clk.c ****              break;
1440:rtos/uC-Clk/Source/clk.c **** 
1441:rtos/uC-Clk/Source/clk.c **** 
1442:rtos/uC-Clk/Source/clk.c **** 
1443:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_HH_MM_SS_AM_PM:                        /* ------------ BUILD STR "HH:MM:SS
1444:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : HH:MM:SS AM|PM\n\r"));
1445:rtos/uC-Clk/Source/clk.c **** 
1446:rtos/uC-Clk/Source/clk.c ****              if (p_date_time->Hr < CLK_HR_PER_HALF_DAY) {       /* Chk for AM or PM.               
1447:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Copy_N(am_pm, "AM", CLK_STR_AM_PM_LEN + 1u);
1448:rtos/uC-Clk/Source/clk.c ****                  if (p_date_time->Hr == 0u) {
1449:rtos/uC-Clk/Source/clk.c ****                      half_day_hr = CLK_HR_PER_HALF_DAY;
1450:rtos/uC-Clk/Source/clk.c ****                  } else {
1451:rtos/uC-Clk/Source/clk.c ****                      half_day_hr = p_date_time->Hr;
1452:rtos/uC-Clk/Source/clk.c ****                  }
1453:rtos/uC-Clk/Source/clk.c ****              } else {
1454:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Copy_N(am_pm, "PM", CLK_STR_AM_PM_LEN + 1u);
1455:rtos/uC-Clk/Source/clk.c ****                  half_day_hr = p_date_time->Hr - CLK_HR_PER_HALF_DAY;
ARM GAS  /tmp/cct1pkgW.s 			page 27


1456:rtos/uC-Clk/Source/clk.c ****              }
1457:rtos/uC-Clk/Source/clk.c **** 
1458:rtos/uC-Clk/Source/clk.c ****             (void)Str_FmtNbr_Int32U((CPU_INT32U )half_day_hr,
1459:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_HR_LEN,
1460:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )DEF_NBR_BASE_DEC,
1461:rtos/uC-Clk/Source/clk.c ****                                     (CPU_CHAR   )'0',
1462:rtos/uC-Clk/Source/clk.c ****                                     (CPU_BOOLEAN)DEF_NO,
1463:rtos/uC-Clk/Source/clk.c ****                                     (CPU_BOOLEAN)DEF_YES,
1464:rtos/uC-Clk/Source/clk.c ****                                     (CPU_CHAR  *)hr);
1465:rtos/uC-Clk/Source/clk.c **** 
1466:rtos/uC-Clk/Source/clk.c ****             (void)Str_Copy_N(p_str, hr,    CLK_STR_DIG_HR_LEN + 1u);
1467:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
1468:rtos/uC-Clk/Source/clk.c **** 
1469:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, min,   CLK_STR_DIG_MIN_LEN);
1470:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
1471:rtos/uC-Clk/Source/clk.c **** 
1472:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, sec,   CLK_STR_DIG_SEC_LEN);
1473:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
1474:rtos/uC-Clk/Source/clk.c **** 
1475:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, am_pm, CLK_STR_AM_PM_LEN);
1476:rtos/uC-Clk/Source/clk.c ****              break;
1477:rtos/uC-Clk/Source/clk.c **** 
1478:rtos/uC-Clk/Source/clk.c **** 
1479:rtos/uC-Clk/Source/clk.c **** 
1480:rtos/uC-Clk/Source/clk.c ****         default:                                                /* ------------------- INVALID FMT 
1481:rtos/uC-Clk/Source/clk.c ****              CLK_TRACE_DBG(("Date/time to string : Invalid format\n\r"));
1482:rtos/uC-Clk/Source/clk.c ****              return (DEF_FAIL);
1483:rtos/uC-Clk/Source/clk.c ****     }
1484:rtos/uC-Clk/Source/clk.c **** 
1485:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    %s\n\r", p_str));
1486:rtos/uC-Clk/Source/clk.c **** 
1487:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
1488:rtos/uC-Clk/Source/clk.c **** }
1489:rtos/uC-Clk/Source/clk.c **** #endif
1490:rtos/uC-Clk/Source/clk.c **** 
1491:rtos/uC-Clk/Source/clk.c **** 
1492:rtos/uC-Clk/Source/clk.c **** /*
1493:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1494:rtos/uC-Clk/Source/clk.c **** *                                           Clk_GetTS_NTP()
1495:rtos/uC-Clk/Source/clk.c **** *
1496:rtos/uC-Clk/Source/clk.c **** * Description : Get current Clock timestamp as an NTP timestamp.
1497:rtos/uC-Clk/Source/clk.c **** *
1498:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_ts_ntp_sec    Pointer to variable that will receive the NTP timestamp :
1499:rtos/uC-Clk/Source/clk.c **** *
1500:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
1501:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
1502:rtos/uC-Clk/Source/clk.c **** *
1503:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully returned.
1504:rtos/uC-Clk/Source/clk.c **** *
1505:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
1506:rtos/uC-Clk/Source/clk.c **** *
1507:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) (a) NTP timestamp is converted from the internal Clock timestamp which SHOULD
1508:rtos/uC-Clk/Source/clk.c **** *                       be set for UTC+00. Thus the NTP timestamp is returned at UTC+00.
1509:rtos/uC-Clk/Source/clk.c **** *
1510:rtos/uC-Clk/Source/clk.c **** *                   (b) NTP timestamp does NOT include the internal Clock time zone. Thus any
1511:rtos/uC-Clk/Source/clk.c **** *                       local time zone offset MUST be applied after calling Clk_GetTS_NTP().
1512:rtos/uC-Clk/Source/clk.c **** *
ARM GAS  /tmp/cct1pkgW.s 			page 28


1513:rtos/uC-Clk/Source/clk.c **** *               (2) NTP timestamp will eventually overflow, thus it's not possible to get NTP
1514:rtos/uC-Clk/Source/clk.c **** *                   timestamp for years on or after CLK_NTP_EPOCH_YR_END.
1515:rtos/uC-Clk/Source/clk.c **** *
1516:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all
1517:rtos/uC-Clk/Source/clk.c **** *                   other validation or function handling in case of any error(s).
1518:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1519:rtos/uC-Clk/Source/clk.c **** */
1520:rtos/uC-Clk/Source/clk.c **** 
1521:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_NTP_EN == DEF_ENABLED)
1522:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_GetTS_NTP (CLK_TS_SEC  *p_ts_ntp_sec)
1523:rtos/uC-Clk/Source/clk.c **** {
1524:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
1525:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
1526:rtos/uC-Clk/Source/clk.c **** 
1527:rtos/uC-Clk/Source/clk.c **** 
1528:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Validated & init'd in Clk_TS_ToT
1529:rtos/uC-Clk/Source/clk.c ****     if (p_ts_ntp_sec == (CLK_TS_SEC *)0) {                      /* ----------------- VALIDATE TS PT
1530:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1531:rtos/uC-Clk/Source/clk.c ****     }
1532:rtos/uC-Clk/Source/clk.c **** 
1533:rtos/uC-Clk/Source/clk.c ****    *p_ts_ntp_sec = CLK_TS_SEC_NONE;                             /* Init to ts none for err (see Not
1534:rtos/uC-Clk/Source/clk.c **** #endif
1535:rtos/uC-Clk/Source/clk.c **** 
1536:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------------- GET CLK TS 
1537:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_GetTS();
1538:rtos/uC-Clk/Source/clk.c **** 
1539:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- CONV CLK TS TO NT
1540:rtos/uC-Clk/Source/clk.c ****     valid  = Clk_TS_ToTS_NTP(ts_sec, p_ts_ntp_sec);
1541:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
1542:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
1543:rtos/uC-Clk/Source/clk.c ****     }
1544:rtos/uC-Clk/Source/clk.c **** 
1545:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
1546:rtos/uC-Clk/Source/clk.c **** }
1547:rtos/uC-Clk/Source/clk.c **** #endif
1548:rtos/uC-Clk/Source/clk.c **** 
1549:rtos/uC-Clk/Source/clk.c **** 
1550:rtos/uC-Clk/Source/clk.c **** /*
1551:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1552:rtos/uC-Clk/Source/clk.c **** *                                           Clk_SetTS_NTP()
1553:rtos/uC-Clk/Source/clk.c **** *
1554:rtos/uC-Clk/Source/clk.c **** * Description : Set Clock timestamp from an NTP timestamp.
1555:rtos/uC-Clk/Source/clk.c **** *
1556:rtos/uC-Clk/Source/clk.c **** * Argument(s) : ts_ntp_sec      Current NTP timestamp to set (in seconds, UTC+00).
1557:rtos/uC-Clk/Source/clk.c **** *
1558:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully set.
1559:rtos/uC-Clk/Source/clk.c **** *
1560:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
1561:rtos/uC-Clk/Source/clk.c **** *
1562:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Internal Clock timestamp SHOULD be set for UTC+00 and should NOT include any lo
1563:rtos/uC-Clk/Source/clk.c **** *                   time zone offset.
1564:rtos/uC-Clk/Source/clk.c **** *
1565:rtos/uC-Clk/Source/clk.c **** *               (2) Only years supported by Clock & NTP can be set, thus the timestamp date MUST be
1566:rtos/uC-Clk/Source/clk.c **** *
1567:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_EPOCH_YR_START
1568:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_NTP_EPOCH_YR_END
1569:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
ARM GAS  /tmp/cct1pkgW.s 			page 29


1570:rtos/uC-Clk/Source/clk.c **** */
1571:rtos/uC-Clk/Source/clk.c **** 
1572:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_NTP_EN == DEF_ENABLED)
1573:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_SetTS_NTP (CLK_TS_SEC  ts_ntp_sec)
1574:rtos/uC-Clk/Source/clk.c **** {
1575:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
1576:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
1577:rtos/uC-Clk/Source/clk.c **** 
1578:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- CONV NTP TS TO CL
1579:rtos/uC-Clk/Source/clk.c ****     valid = Clk_TS_NTP_ToTS(&ts_sec, ts_ntp_sec);
1580:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
1581:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
1582:rtos/uC-Clk/Source/clk.c ****     }
1583:rtos/uC-Clk/Source/clk.c **** 
1584:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------------- SET CLK TS 
1585:rtos/uC-Clk/Source/clk.c ****     Clk_SetTS(ts_sec);
1586:rtos/uC-Clk/Source/clk.c **** 
1587:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
1588:rtos/uC-Clk/Source/clk.c **** }
1589:rtos/uC-Clk/Source/clk.c **** #endif
1590:rtos/uC-Clk/Source/clk.c **** 
1591:rtos/uC-Clk/Source/clk.c **** 
1592:rtos/uC-Clk/Source/clk.c **** /*
1593:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1594:rtos/uC-Clk/Source/clk.c **** *                                          Clk_TS_ToTS_NTP()
1595:rtos/uC-Clk/Source/clk.c **** *
1596:rtos/uC-Clk/Source/clk.c **** * Description : Convert Clock timestamp to NTP timestamp.
1597:rtos/uC-Clk/Source/clk.c **** *
1598:rtos/uC-Clk/Source/clk.c **** * Argument(s) : ts_sec          Timestamp to convert (in seconds, UTC+00).
1599:rtos/uC-Clk/Source/clk.c **** *
1600:rtos/uC-Clk/Source/clk.c **** *               p_ts_ntp_sec    Pointer to variable that will receive the NTP timestamp :
1601:rtos/uC-Clk/Source/clk.c **** *
1602:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
1603:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
1604:rtos/uC-Clk/Source/clk.c **** *
1605:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully converted.
1606:rtos/uC-Clk/Source/clk.c **** *
1607:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
1608:rtos/uC-Clk/Source/clk.c **** *
1609:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Returned timestamp does NOT include any time zone offset. Thus any local time
1610:rtos/uC-Clk/Source/clk.c **** *                   zone offset SHOULD be applied before or after calling Clk_TS_ToTS_NTP().
1611:rtos/uC-Clk/Source/clk.c **** *
1612:rtos/uC-Clk/Source/clk.c **** *               (2) Only years supported by Clock & NTP can be converted, thus the timestamp date
1613:rtos/uC-Clk/Source/clk.c **** *                   MUST be :
1614:rtos/uC-Clk/Source/clk.c **** *
1615:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_EPOCH_YR_START
1616:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_NTP_EPOCH_YR_END
1617:rtos/uC-Clk/Source/clk.c **** *
1618:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all
1619:rtos/uC-Clk/Source/clk.c **** *                   other validation or function handling in case of any error(s).
1620:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1621:rtos/uC-Clk/Source/clk.c **** */
1622:rtos/uC-Clk/Source/clk.c **** 
1623:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_NTP_EN == DEF_ENABLED)
1624:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_TS_ToTS_NTP (CLK_TS_SEC   ts_sec,
1625:rtos/uC-Clk/Source/clk.c ****                               CLK_TS_SEC  *p_ts_ntp_sec)
1626:rtos/uC-Clk/Source/clk.c **** {
ARM GAS  /tmp/cct1pkgW.s 			page 30


1627:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC  ts_ntp_sec;
1628:rtos/uC-Clk/Source/clk.c **** 
1629:rtos/uC-Clk/Source/clk.c **** 
1630:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE TS PT
1631:rtos/uC-Clk/Source/clk.c ****     if (p_ts_ntp_sec == (CLK_TS_SEC *)0) {
1632:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1633:rtos/uC-Clk/Source/clk.c ****     }
1634:rtos/uC-Clk/Source/clk.c **** #endif
1635:rtos/uC-Clk/Source/clk.c **** 
1636:rtos/uC-Clk/Source/clk.c ****    *p_ts_ntp_sec = CLK_TS_SEC_NONE;                             /* Init to ts none for err (see Not
1637:rtos/uC-Clk/Source/clk.c **** 
1638:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("\n\rConvert TS to NTP TS:\n\r"
1639:rtos/uC-Clk/Source/clk.c ****                    "    TS = %u\n\r", (unsigned int)ts_sec));
1640:rtos/uC-Clk/Source/clk.c **** 
1641:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- CONV CLK TS TO NT
1642:rtos/uC-Clk/Source/clk.c ****     ts_ntp_sec = ts_sec + CLK_NTP_EPOCH_OFFSET_SEC;
1643:rtos/uC-Clk/Source/clk.c ****     if (ts_ntp_sec < CLK_NTP_EPOCH_OFFSET_SEC) {                /* Chk for ovf.                    
1644:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    NTP TS conversion has failed\n\r"));
1645:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1646:rtos/uC-Clk/Source/clk.c ****     }
1647:rtos/uC-Clk/Source/clk.c **** 
1648:rtos/uC-Clk/Source/clk.c ****    *p_ts_ntp_sec = ts_ntp_sec;
1649:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    NTP TS converted = %u\n\r", (unsigned int)*p_ts_ntp_sec));
1650:rtos/uC-Clk/Source/clk.c **** 
1651:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
1652:rtos/uC-Clk/Source/clk.c **** }
1653:rtos/uC-Clk/Source/clk.c **** #endif
1654:rtos/uC-Clk/Source/clk.c **** 
1655:rtos/uC-Clk/Source/clk.c **** 
1656:rtos/uC-Clk/Source/clk.c **** /*
1657:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1658:rtos/uC-Clk/Source/clk.c **** *                                          Clk_TS_NTP_ToTS()
1659:rtos/uC-Clk/Source/clk.c **** *
1660:rtos/uC-Clk/Source/clk.c **** * Description : Convert NTP timestamp to Clock timestamp.
1661:rtos/uC-Clk/Source/clk.c **** *
1662:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_ts_sec        Pointer to variable that will receive the Clock timestamp :
1663:rtos/uC-Clk/Source/clk.c **** *
1664:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
1665:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
1666:rtos/uC-Clk/Source/clk.c **** *
1667:rtos/uC-Clk/Source/clk.c **** *               ts_ntp_sec      NTP timestamp value to convert (in seconds, UTC+00).
1668:rtos/uC-Clk/Source/clk.c **** *
1669:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully converted.
1670:rtos/uC-Clk/Source/clk.c **** *
1671:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
1672:rtos/uC-Clk/Source/clk.c **** *
1673:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Returned timestamp does NOT include any time zone offset. Thus any local time
1674:rtos/uC-Clk/Source/clk.c **** *                   zone offset SHOULD be applied before or after calling Clk_TS_NTP_ToTS().
1675:rtos/uC-Clk/Source/clk.c **** *
1676:rtos/uC-Clk/Source/clk.c **** *               (2) Only years supported by Clock & NTP can be converted, thus the timestamp date
1677:rtos/uC-Clk/Source/clk.c **** *                   MUST be :
1678:rtos/uC-Clk/Source/clk.c **** *
1679:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_EPOCH_YR_START
1680:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_NTP_EPOCH_YR_END
1681:rtos/uC-Clk/Source/clk.c **** *
1682:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all other
1683:rtos/uC-Clk/Source/clk.c **** *                   validation or function handling in case of any error(s).
ARM GAS  /tmp/cct1pkgW.s 			page 31


1684:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1685:rtos/uC-Clk/Source/clk.c **** */
1686:rtos/uC-Clk/Source/clk.c **** 
1687:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_NTP_EN == DEF_ENABLED)
1688:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_TS_NTP_ToTS (CLK_TS_SEC  *p_ts_sec,
1689:rtos/uC-Clk/Source/clk.c ****                               CLK_TS_SEC   ts_ntp_sec)
1690:rtos/uC-Clk/Source/clk.c **** {
1691:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE TS PT
1692:rtos/uC-Clk/Source/clk.c ****     if (p_ts_sec == (CLK_TS_SEC *)0) {
1693:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1694:rtos/uC-Clk/Source/clk.c ****     }
1695:rtos/uC-Clk/Source/clk.c **** #endif
1696:rtos/uC-Clk/Source/clk.c **** 
1697:rtos/uC-Clk/Source/clk.c ****    *p_ts_sec = CLK_TS_SEC_NONE;                                 /* Init to ts none for err (see Not
1698:rtos/uC-Clk/Source/clk.c **** 
1699:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Convert NTP TS to TS:\n\r"
1700:rtos/uC-Clk/Source/clk.c ****                    "    NTP TS = %u\n\r", (unsigned int)ts_ntp_sec));
1701:rtos/uC-Clk/Source/clk.c **** 
1702:rtos/uC-Clk/Source/clk.c ****     if (ts_ntp_sec < CLK_NTP_EPOCH_OFFSET_SEC) {                /* Chk for ovf.                    
1703:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("TS overflow\n\r"));
1704:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1705:rtos/uC-Clk/Source/clk.c ****     }
1706:rtos/uC-Clk/Source/clk.c **** 
1707:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- CONV NTP TS TO CL
1708:rtos/uC-Clk/Source/clk.c ****    *p_ts_sec = ts_ntp_sec - CLK_NTP_EPOCH_OFFSET_SEC;
1709:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    TS converted = %u\n\r", (unsigned int)*p_ts_sec));
1710:rtos/uC-Clk/Source/clk.c **** 
1711:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
1712:rtos/uC-Clk/Source/clk.c **** }
1713:rtos/uC-Clk/Source/clk.c **** #endif
1714:rtos/uC-Clk/Source/clk.c **** 
1715:rtos/uC-Clk/Source/clk.c **** 
1716:rtos/uC-Clk/Source/clk.c **** /*
1717:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1718:rtos/uC-Clk/Source/clk.c **** *                                       Clk_TS_NTP_ToDateTime()
1719:rtos/uC-Clk/Source/clk.c **** *
1720:rtos/uC-Clk/Source/clk.c **** * Description : Convert NTP timestamp to date/time structure.
1721:rtos/uC-Clk/Source/clk.c **** *
1722:rtos/uC-Clk/Source/clk.c **** * Argument(s) : ts_ntp_sec      Timestamp to convert (in seconds,          UTC+00).
1723:rtos/uC-Clk/Source/clk.c **** *
1724:rtos/uC-Clk/Source/clk.c **** *               tz_sec          Time zone offset     (in seconds, +|- from UTC).
1725:rtos/uC-Clk/Source/clk.c **** *
1726:rtos/uC-Clk/Source/clk.c **** *               p_date_time     Pointer to variable that will receive the date/time structure.
1727:rtos/uC-Clk/Source/clk.c **** *
1728:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if date/time structure successfully returned.
1729:rtos/uC-Clk/Source/clk.c **** *
1730:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
1731:rtos/uC-Clk/Source/clk.c **** *
1732:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) (a) Timestamp ('ts_ntp_sec') MUST be set for UTC+00 & SHOULD NOT include the ti
1733:rtos/uC-Clk/Source/clk.c **** *                       zone offset ('tz_sec') since Clk_TS_NTP_ToDateTime() includes the time zone
1734:rtos/uC-Clk/Source/clk.c **** *                       offset in its date/time calculation. Thus the time zone offset SHOULD NOT b
1735:rtos/uC-Clk/Source/clk.c **** *                       applied before or after calling Clk_TS_NTP_ToDateTime().
1736:rtos/uC-Clk/Source/clk.c **** *
1737:rtos/uC-Clk/Source/clk.c **** *                   (b) Time zone field of the date/time structure ('p_date_time->TZ_sec') is set t
1738:rtos/uC-Clk/Source/clk.c **** *                       the value of the time zone argument ('tz_sec').
1739:rtos/uC-Clk/Source/clk.c **** *
1740:rtos/uC-Clk/Source/clk.c **** *                   (c) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
ARM GAS  /tmp/cct1pkgW.s 			page 32


1741:rtos/uC-Clk/Source/clk.c **** *
1742:rtos/uC-Clk/Source/clk.c **** *                       (1) Between  +|- 12 hours (+|- 43200 seconds)
1743:rtos/uC-Clk/Source/clk.c **** *                       (2) Multiples of 15 minutes
1744:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1745:rtos/uC-Clk/Source/clk.c **** */
1746:rtos/uC-Clk/Source/clk.c **** 
1747:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_NTP_EN == DEF_ENABLED)
1748:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_TS_NTP_ToDateTime (CLK_TS_SEC      ts_ntp_sec,
1749:rtos/uC-Clk/Source/clk.c ****                                     CLK_TZ_SEC      tz_sec,
1750:rtos/uC-Clk/Source/clk.c ****                                     CLK_DATE_TIME  *p_date_time)
1751:rtos/uC-Clk/Source/clk.c **** {
1752:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
1753:rtos/uC-Clk/Source/clk.c **** 
1754:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------- CONV NTP TS TO DAT
1755:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("\n\rConvert TS NTP to Date/time:\n\r"
1756:rtos/uC-Clk/Source/clk.c ****                    "    TS to convert= %u\n\r\n\r",
1757:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)ts_ntp_sec));
1758:rtos/uC-Clk/Source/clk.c **** 
1759:rtos/uC-Clk/Source/clk.c ****     valid = Clk_TS_ToDateTimeHandler(ts_ntp_sec,
1760:rtos/uC-Clk/Source/clk.c ****                                      tz_sec,
1761:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
1762:rtos/uC-Clk/Source/clk.c ****                                      CLK_NTP_EPOCH_YR_START,
1763:rtos/uC-Clk/Source/clk.c ****                                      CLK_NTP_EPOCH_YR_END);
1764:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
1765:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Date/time conversion has failed\n\r"));
1766:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
1767:rtos/uC-Clk/Source/clk.c ****     }
1768:rtos/uC-Clk/Source/clk.c **** 
1769:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
1770:rtos/uC-Clk/Source/clk.c **** }
1771:rtos/uC-Clk/Source/clk.c **** #endif
1772:rtos/uC-Clk/Source/clk.c **** 
1773:rtos/uC-Clk/Source/clk.c **** 
1774:rtos/uC-Clk/Source/clk.c **** /*
1775:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1776:rtos/uC-Clk/Source/clk.c **** *                                       Clk_DateTimeToTS_NTP()
1777:rtos/uC-Clk/Source/clk.c **** *
1778:rtos/uC-Clk/Source/clk.c **** * Description : Convert a date/time structure to NTP timestamp.
1779:rtos/uC-Clk/Source/clk.c **** *
1780:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_ts_ntp_sec    Pointer to variable that will receive the NTP timestamp :
1781:rtos/uC-Clk/Source/clk.c **** *
1782:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
1783:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
1784:rtos/uC-Clk/Source/clk.c **** *
1785:rtos/uC-Clk/Source/clk.c **** *               p_date_time     Pointer to variable that contains date/time structure to convert.
1786:rtos/uC-Clk/Source/clk.c **** *
1787:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully returned.
1788:rtos/uC-Clk/Source/clk.c **** *
1789:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
1790:rtos/uC-Clk/Source/clk.c **** *
1791:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Date/time structure ('p_date_time') MUST be representable in NTP timestamp.
1792:rtos/uC-Clk/Source/clk.c **** *                   Thus date to convert MUST be :
1793:rtos/uC-Clk/Source/clk.c **** *
1794:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_NTP_EPOCH_YR_START
1795:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_NTP_EPOCH_YR_END
1796:rtos/uC-Clk/Source/clk.c **** *
1797:rtos/uC-Clk/Source/clk.c **** *               (2) (a) Date/time ('p_date_time') SHOULD be set to local time with correct time zon
ARM GAS  /tmp/cct1pkgW.s 			page 33


1798:rtos/uC-Clk/Source/clk.c **** *                       offset ('p_date_time->TZ_sec'). Clk_DateTimeToTS_NTP() removes the time zon
1799:rtos/uC-Clk/Source/clk.c **** *                       offset from the date/time to calculate & return a Clock timestamp at UTC+00
1800:rtos/uC-Clk/Source/clk.c **** *
1801:rtos/uC-Clk/Source/clk.c **** *                   (b) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
1802:rtos/uC-Clk/Source/clk.c **** *
1803:rtos/uC-Clk/Source/clk.c **** *                       (1) Between  +|- 12 hours (+|- 43200 seconds)
1804:rtos/uC-Clk/Source/clk.c **** *                       (2) Multiples of 15 minutes
1805:rtos/uC-Clk/Source/clk.c **** *
1806:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all other
1807:rtos/uC-Clk/Source/clk.c **** *                   validation or function handling in case of any error(s).
1808:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1809:rtos/uC-Clk/Source/clk.c **** */
1810:rtos/uC-Clk/Source/clk.c **** 
1811:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_NTP_EN == DEF_ENABLED)
1812:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_DateTimeToTS_NTP (CLK_TS_SEC     *p_ts_ntp_sec,
1813:rtos/uC-Clk/Source/clk.c ****                                    CLK_DATE_TIME  *p_date_time)
1814:rtos/uC-Clk/Source/clk.c **** {
1815:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
1816:rtos/uC-Clk/Source/clk.c **** 
1817:rtos/uC-Clk/Source/clk.c **** 
1818:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE TS PT
1819:rtos/uC-Clk/Source/clk.c ****     if (p_ts_ntp_sec == (CLK_TS_SEC *)0) {
1820:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1821:rtos/uC-Clk/Source/clk.c ****     }
1822:rtos/uC-Clk/Source/clk.c **** #endif
1823:rtos/uC-Clk/Source/clk.c **** 
1824:rtos/uC-Clk/Source/clk.c ****    *p_ts_ntp_sec = CLK_TS_SEC_NONE;                             /* Init to ts none for err (see Not
1825:rtos/uC-Clk/Source/clk.c **** 
1826:rtos/uC-Clk/Source/clk.c **** 
1827:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Validated in Clk_IsNTP_DateTimeV
1828:rtos/uC-Clk/Source/clk.c ****     if (p_date_time == (CLK_DATE_TIME *)0) {                    /* -------------- VALIDATE DATE/TIM
1829:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
1830:rtos/uC-Clk/Source/clk.c ****     }
1831:rtos/uC-Clk/Source/clk.c **** #endif
1832:rtos/uC-Clk/Source/clk.c **** 
1833:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DATE/T
1834:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsNTP_DateTimeValid(p_date_time);
1835:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
1836:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
1837:rtos/uC-Clk/Source/clk.c ****     }
1838:rtos/uC-Clk/Source/clk.c **** 
1839:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------- CONV DATE/TIME TO 
1840:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Convert Date/time to TS:\n\r"));
1841:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeToTS_Handler(p_ts_ntp_sec,
1842:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
1843:rtos/uC-Clk/Source/clk.c ****                                      CLK_NTP_EPOCH_YR_START);
1844:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
1845:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
1846:rtos/uC-Clk/Source/clk.c ****     }
1847:rtos/uC-Clk/Source/clk.c **** 
1848:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
1849:rtos/uC-Clk/Source/clk.c **** }
1850:rtos/uC-Clk/Source/clk.c **** #endif
1851:rtos/uC-Clk/Source/clk.c **** 
1852:rtos/uC-Clk/Source/clk.c **** 
1853:rtos/uC-Clk/Source/clk.c **** /*
1854:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
ARM GAS  /tmp/cct1pkgW.s 			page 34


1855:rtos/uC-Clk/Source/clk.c **** *                                       Clk_NTP_DateTimeMake()
1856:rtos/uC-Clk/Source/clk.c **** *
1857:rtos/uC-Clk/Source/clk.c **** * Description : Build a valid NTP epoch date/time structure.
1858:rtos/uC-Clk/Source/clk.c **** *
1859:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that will receive the date/time structure.
1860:rtos/uC-Clk/Source/clk.c **** *
1861:rtos/uC-Clk/Source/clk.c **** *               yr              Year    value [CLK_NTP_EPOCH_YR_START to CLK_NTP_EPOCH_YR_END) (see
1862:rtos/uC-Clk/Source/clk.c **** *
1863:rtos/uC-Clk/Source/clk.c **** *               month           Month   value [         CLK_MONTH_JAN to        CLK_MONTH_DEC].
1864:rtos/uC-Clk/Source/clk.c **** *
1865:rtos/uC-Clk/Source/clk.c **** *               day             Day     value [                     1 to                   31].
1866:rtos/uC-Clk/Source/clk.c **** *
1867:rtos/uC-Clk/Source/clk.c **** *               hr              Hours   value [                     0 to                   23].
1868:rtos/uC-Clk/Source/clk.c **** *
1869:rtos/uC-Clk/Source/clk.c **** *               min             Minutes value [                     0 to                   59].
1870:rtos/uC-Clk/Source/clk.c **** *
1871:rtos/uC-Clk/Source/clk.c **** *               sec             Seconds value [                     0 to                   60] (see
1872:rtos/uC-Clk/Source/clk.c **** *
1873:rtos/uC-Clk/Source/clk.c **** *               tz_sec          Time zone offset (in seconds, +|- from UTC) [-43200 to 43200].
1874:rtos/uC-Clk/Source/clk.c **** *
1875:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if date/time structure successfully returned.
1876:rtos/uC-Clk/Source/clk.c **** *
1877:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
1878:rtos/uC-Clk/Source/clk.c **** *
1879:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Date/time structure ('p_date_time') MUST be representable in NTP timestamp.
1880:rtos/uC-Clk/Source/clk.c **** *                   Thus date to convert MUST be :
1881:rtos/uC-Clk/Source/clk.c **** *
1882:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_NTP_EPOCH_YR_START
1883:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_NTP_EPOCH_YR_END
1884:rtos/uC-Clk/Source/clk.c **** *
1885:rtos/uC-Clk/Source/clk.c **** *               (2) Day of week ('p_date_time->DayOfWk') and Day of year ('p_date_time->DayOfYr')
1886:rtos/uC-Clk/Source/clk.c **** *                   are internally calculated and set in the date/time structure if date is valid.
1887:rtos/uC-Clk/Source/clk.c **** *
1888:rtos/uC-Clk/Source/clk.c **** *               (3) Seconds value of 60 is valid to be compatible with leap second adjustment and
1889:rtos/uC-Clk/Source/clk.c **** *                   the atomic clock time structure.
1890:rtos/uC-Clk/Source/clk.c **** *
1891:rtos/uC-Clk/Source/clk.c **** *               (4) Time zone is based ('tz_sec') on Coordinated Universal Time (UTC) & has valid
1892:rtos/uC-Clk/Source/clk.c **** *                   values :
1893:rtos/uC-Clk/Source/clk.c **** *
1894:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
1895:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minutes
1896:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1897:rtos/uC-Clk/Source/clk.c **** */
1898:rtos/uC-Clk/Source/clk.c **** 
1899:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_NTP_EN == DEF_ENABLED)
1900:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_NTP_DateTimeMake (CLK_DATE_TIME  *p_date_time,
1901:rtos/uC-Clk/Source/clk.c ****                                    CLK_YR          yr,
1902:rtos/uC-Clk/Source/clk.c ****                                    CLK_MONTH       month,
1903:rtos/uC-Clk/Source/clk.c ****                                    CLK_DAY         day,
1904:rtos/uC-Clk/Source/clk.c ****                                    CLK_HR          hr,
1905:rtos/uC-Clk/Source/clk.c ****                                    CLK_MIN         min,
1906:rtos/uC-Clk/Source/clk.c ****                                    CLK_SEC         sec,
1907:rtos/uC-Clk/Source/clk.c ****                                    CLK_TZ_SEC      tz_sec)
1908:rtos/uC-Clk/Source/clk.c **** {
1909:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
1910:rtos/uC-Clk/Source/clk.c **** 
1911:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------- VALIDATE & CONV NTP D
ARM GAS  /tmp/cct1pkgW.s 			page 35


1912:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeMakeHandler(p_date_time,
1913:rtos/uC-Clk/Source/clk.c ****                                     yr,
1914:rtos/uC-Clk/Source/clk.c ****                                     month,
1915:rtos/uC-Clk/Source/clk.c ****                                     day,
1916:rtos/uC-Clk/Source/clk.c ****                                     hr,
1917:rtos/uC-Clk/Source/clk.c ****                                     min,
1918:rtos/uC-Clk/Source/clk.c ****                                     sec,
1919:rtos/uC-Clk/Source/clk.c ****                                     tz_sec,
1920:rtos/uC-Clk/Source/clk.c ****                                     CLK_NTP_EPOCH_YR_START,
1921:rtos/uC-Clk/Source/clk.c ****                                     CLK_NTP_EPOCH_YR_END);
1922:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
1923:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
1924:rtos/uC-Clk/Source/clk.c ****     }
1925:rtos/uC-Clk/Source/clk.c **** 
1926:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
1927:rtos/uC-Clk/Source/clk.c **** }
1928:rtos/uC-Clk/Source/clk.c **** #endif
1929:rtos/uC-Clk/Source/clk.c **** 
1930:rtos/uC-Clk/Source/clk.c **** 
1931:rtos/uC-Clk/Source/clk.c **** /*
1932:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1933:rtos/uC-Clk/Source/clk.c **** *                                      Clk_IsNTP_DateTimeValid()
1934:rtos/uC-Clk/Source/clk.c **** *
1935:rtos/uC-Clk/Source/clk.c **** * Description : Determine if date/time structure is valid in NTP epoch.
1936:rtos/uC-Clk/Source/clk.c **** *
1937:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that contains the date/time structure to valida
1938:rtos/uC-Clk/Source/clk.c **** *
1939:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, if date/time structure is valid.
1940:rtos/uC-Clk/Source/clk.c **** *
1941:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  otherwise.
1942:rtos/uC-Clk/Source/clk.c **** *
1943:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Date/time structure ('p_date_time') MUST be representable in NTP epoch. Thus
1944:rtos/uC-Clk/Source/clk.c **** *                   date to validate MUST be :
1945:rtos/uC-Clk/Source/clk.c **** *
1946:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_NTP_EPOCH_YR_START
1947:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_NTP_EPOCH_YR_END
1948:rtos/uC-Clk/Source/clk.c **** *
1949:rtos/uC-Clk/Source/clk.c **** *               (2) Time zone is based ('p_date_time->TZ_sec') on Coordinated Universal Time (UTC)
1950:rtos/uC-Clk/Source/clk.c **** *                   & has valid values :
1951:rtos/uC-Clk/Source/clk.c **** *
1952:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
1953:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minutes
1954:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1955:rtos/uC-Clk/Source/clk.c **** */
1956:rtos/uC-Clk/Source/clk.c **** 
1957:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_NTP_EN == DEF_ENABLED)
1958:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_IsNTP_DateTimeValid (CLK_DATE_TIME  *p_date_time)
1959:rtos/uC-Clk/Source/clk.c **** {
1960:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
1961:rtos/uC-Clk/Source/clk.c **** 
1962:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- VALIDATE NTP DATE
1963:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Validate NTP date/time: "));
1964:rtos/uC-Clk/Source/clk.c **** 
1965:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDateTimeValidHandler(p_date_time,
1966:rtos/uC-Clk/Source/clk.c ****                                        CLK_NTP_EPOCH_YR_START,
1967:rtos/uC-Clk/Source/clk.c ****                                        CLK_NTP_EPOCH_YR_END);
1968:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
ARM GAS  /tmp/cct1pkgW.s 			page 36


1969:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Fail\n\r"));
1970:rtos/uC-Clk/Source/clk.c ****         return  (DEF_NO);
1971:rtos/uC-Clk/Source/clk.c ****     }
1972:rtos/uC-Clk/Source/clk.c **** 
1973:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Ok\n\r"));
1974:rtos/uC-Clk/Source/clk.c **** 
1975:rtos/uC-Clk/Source/clk.c ****     return (DEF_YES);
1976:rtos/uC-Clk/Source/clk.c **** }
1977:rtos/uC-Clk/Source/clk.c **** #endif
1978:rtos/uC-Clk/Source/clk.c **** 
1979:rtos/uC-Clk/Source/clk.c **** 
1980:rtos/uC-Clk/Source/clk.c **** /*
1981:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
1982:rtos/uC-Clk/Source/clk.c **** *                                          Clk_GetTS_Unix()
1983:rtos/uC-Clk/Source/clk.c **** *
1984:rtos/uC-Clk/Source/clk.c **** * Description : Get current Clock timestamp as a Unix timestamp.
1985:rtos/uC-Clk/Source/clk.c **** *
1986:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_ts_unix_sec   Pointer to variable that will receive the Unix timestamp :
1987:rtos/uC-Clk/Source/clk.c **** *
1988:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
1989:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
1990:rtos/uC-Clk/Source/clk.c **** *
1991:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully returned.
1992:rtos/uC-Clk/Source/clk.c **** *
1993:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
1994:rtos/uC-Clk/Source/clk.c **** *
1995:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) (a) Unix timestamp is converted from the internal Clock timestamp which SHOULD
1996:rtos/uC-Clk/Source/clk.c **** *                       be set for UTC+00. Thus the Unix timestamp is returned at UTC+00.
1997:rtos/uC-Clk/Source/clk.c **** *
1998:rtos/uC-Clk/Source/clk.c **** *                   (b) Unix timestamp does NOT include the internal Clock time zone. Thus any
1999:rtos/uC-Clk/Source/clk.c **** *                       local time zone offset MUST be applied after calling Clk_GetTS_Unix().
2000:rtos/uC-Clk/Source/clk.c **** *
2001:rtos/uC-Clk/Source/clk.c **** *               (2) Unix timestamp will eventually overflow, thus it's not possible to get Unix
2002:rtos/uC-Clk/Source/clk.c **** *                   timestamp for years on or after CLK_UNIX_EPOCH_YR_END.
2003:rtos/uC-Clk/Source/clk.c **** *
2004:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all
2005:rtos/uC-Clk/Source/clk.c **** *                   other validation or function handling in case of any error(s).
2006:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2007:rtos/uC-Clk/Source/clk.c **** */
2008:rtos/uC-Clk/Source/clk.c **** 
2009:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_UNIX_EN == DEF_ENABLED)
2010:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_GetTS_Unix (CLK_TS_SEC  *p_ts_unix_sec)
2011:rtos/uC-Clk/Source/clk.c **** {
2012:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
2013:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
2014:rtos/uC-Clk/Source/clk.c **** 
2015:rtos/uC-Clk/Source/clk.c **** 
2016:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Validated & init'd in Clk_TS_ToT
2017:rtos/uC-Clk/Source/clk.c ****     if (p_ts_unix_sec == (CLK_TS_SEC *)0) {                     /* ----------------- VALIDATE TS PT
2018:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
2019:rtos/uC-Clk/Source/clk.c ****     }
2020:rtos/uC-Clk/Source/clk.c **** 
2021:rtos/uC-Clk/Source/clk.c ****    *p_ts_unix_sec = CLK_TS_SEC_NONE;                            /* Init to ts none for err (see Not
2022:rtos/uC-Clk/Source/clk.c **** #endif
2023:rtos/uC-Clk/Source/clk.c **** 
2024:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------------- GET CLK TS 
2025:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_GetTS();
ARM GAS  /tmp/cct1pkgW.s 			page 37


2026:rtos/uC-Clk/Source/clk.c **** 
2027:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- CONV CLK TS TO UN
2028:rtos/uC-Clk/Source/clk.c ****     valid  = Clk_TS_ToTS_Unix(ts_sec, p_ts_unix_sec);
2029:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
2030:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
2031:rtos/uC-Clk/Source/clk.c ****     }
2032:rtos/uC-Clk/Source/clk.c **** 
2033:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
2034:rtos/uC-Clk/Source/clk.c **** }
2035:rtos/uC-Clk/Source/clk.c **** #endif
2036:rtos/uC-Clk/Source/clk.c **** 
2037:rtos/uC-Clk/Source/clk.c **** 
2038:rtos/uC-Clk/Source/clk.c **** /*
2039:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2040:rtos/uC-Clk/Source/clk.c **** *                                          Clk_SetTS_Unix()
2041:rtos/uC-Clk/Source/clk.c **** *
2042:rtos/uC-Clk/Source/clk.c **** * Description : Set Clock timestamp from a Unix timestamp.
2043:rtos/uC-Clk/Source/clk.c **** *
2044:rtos/uC-Clk/Source/clk.c **** * Argument(s) : ts_unix_sec     Current Unix timestamp to set (in seconds, UTC+00).
2045:rtos/uC-Clk/Source/clk.c **** *
2046:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully set.
2047:rtos/uC-Clk/Source/clk.c **** *
2048:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
2049:rtos/uC-Clk/Source/clk.c **** *
2050:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Internal Clock timestamp SHOULD be set for UTC+00 and should NOT include any lo
2051:rtos/uC-Clk/Source/clk.c **** *                   time zone offset.
2052:rtos/uC-Clk/Source/clk.c **** *
2053:rtos/uC-Clk/Source/clk.c **** *               (2) Only years supported by Clock & Unix can be set, thus the timestamp date MUST b
2054:rtos/uC-Clk/Source/clk.c **** *
2055:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_EPOCH_YR_START
2056:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_UNIX_EPOCH_YR_END
2057:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2058:rtos/uC-Clk/Source/clk.c **** */
2059:rtos/uC-Clk/Source/clk.c **** 
2060:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_UNIX_EN == DEF_ENABLED)
2061:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_SetTS_Unix (CLK_TS_SEC  ts_unix_sec)
2062:rtos/uC-Clk/Source/clk.c **** {
2063:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
2064:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
2065:rtos/uC-Clk/Source/clk.c **** 
2066:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- CONV UNIX TS TO C
2067:rtos/uC-Clk/Source/clk.c ****     valid = Clk_TS_UnixToTS(&ts_sec, ts_unix_sec);
2068:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
2069:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
2070:rtos/uC-Clk/Source/clk.c ****     }
2071:rtos/uC-Clk/Source/clk.c **** 
2072:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------------- SET CLK TS 
2073:rtos/uC-Clk/Source/clk.c ****     Clk_SetTS(ts_sec);
2074:rtos/uC-Clk/Source/clk.c **** 
2075:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
2076:rtos/uC-Clk/Source/clk.c **** }
2077:rtos/uC-Clk/Source/clk.c **** #endif
2078:rtos/uC-Clk/Source/clk.c **** 
2079:rtos/uC-Clk/Source/clk.c **** 
2080:rtos/uC-Clk/Source/clk.c **** /*
2081:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2082:rtos/uC-Clk/Source/clk.c **** *                                         Clk_TS_ToTS_Unix()
ARM GAS  /tmp/cct1pkgW.s 			page 38


2083:rtos/uC-Clk/Source/clk.c **** *
2084:rtos/uC-Clk/Source/clk.c **** * Description : Convert Clock timestamp to Unix timestamp.
2085:rtos/uC-Clk/Source/clk.c **** *
2086:rtos/uC-Clk/Source/clk.c **** * Argument(s) : ts_sec          Timestamp to convert (in seconds, UTC+00).
2087:rtos/uC-Clk/Source/clk.c **** *
2088:rtos/uC-Clk/Source/clk.c **** *               p_ts_unix_sec   Pointer to variable that will receive the Unix timestamp :
2089:rtos/uC-Clk/Source/clk.c **** *
2090:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
2091:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
2092:rtos/uC-Clk/Source/clk.c **** *
2093:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully converted.
2094:rtos/uC-Clk/Source/clk.c **** *
2095:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
2096:rtos/uC-Clk/Source/clk.c **** *
2097:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Returned timestamp does NOT include any time zone offset. Thus any local time
2098:rtos/uC-Clk/Source/clk.c **** *                   zone offset SHOULD be applied before or after calling Clk_TS_ToTS_Unix().
2099:rtos/uC-Clk/Source/clk.c **** *
2100:rtos/uC-Clk/Source/clk.c **** *               (2) Only years supported by Clock & Unix can be converted, thus the timestamp date
2101:rtos/uC-Clk/Source/clk.c **** *                   MUST be :
2102:rtos/uC-Clk/Source/clk.c **** *
2103:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_EPOCH_YR_START
2104:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_UNIX_EPOCH_YR_END
2105:rtos/uC-Clk/Source/clk.c **** *
2106:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all other
2107:rtos/uC-Clk/Source/clk.c **** *                   validation or function handling in case of any error(s).
2108:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2109:rtos/uC-Clk/Source/clk.c **** */
2110:rtos/uC-Clk/Source/clk.c **** 
2111:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_UNIX_EN == DEF_ENABLED)
2112:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_TS_ToTS_Unix (CLK_TS_SEC   ts_sec,
2113:rtos/uC-Clk/Source/clk.c ****                                CLK_TS_SEC  *p_ts_unix_sec)
2114:rtos/uC-Clk/Source/clk.c **** {
2115:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC  ts_unix_sec;
2116:rtos/uC-Clk/Source/clk.c **** 
2117:rtos/uC-Clk/Source/clk.c **** 
2118:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE TS PT
2119:rtos/uC-Clk/Source/clk.c ****     if (p_ts_unix_sec == (CLK_TS_SEC *)0) {
2120:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
2121:rtos/uC-Clk/Source/clk.c ****     }
2122:rtos/uC-Clk/Source/clk.c **** #endif
2123:rtos/uC-Clk/Source/clk.c **** 
2124:rtos/uC-Clk/Source/clk.c ****    *p_ts_unix_sec = CLK_TS_SEC_NONE;                            /* Init to ts none for err (see Not
2125:rtos/uC-Clk/Source/clk.c **** 
2126:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("\n\rConvert TS to Unix TS:\n\r"
2127:rtos/uC-Clk/Source/clk.c ****                    "    TS = %u\n\r", (unsigned int)ts_sec));
2128:rtos/uC-Clk/Source/clk.c **** 
2129:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- CONV CLK TS TO UN
2130:rtos/uC-Clk/Source/clk.c ****     ts_unix_sec = ts_sec + CLK_UNIX_EPOCH_OFFSET_SEC;
2131:rtos/uC-Clk/Source/clk.c ****     if (ts_unix_sec < CLK_UNIX_EPOCH_OFFSET_SEC) {              /* Chk for ovf.                    
2132:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Unix TS conversion has failed\n\r"));
2133:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
2134:rtos/uC-Clk/Source/clk.c ****     }
2135:rtos/uC-Clk/Source/clk.c **** 
2136:rtos/uC-Clk/Source/clk.c ****    *p_ts_unix_sec = ts_unix_sec;
2137:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    Unix TS converted = %u\n\r", (unsigned int)*p_ts_unix_sec));
2138:rtos/uC-Clk/Source/clk.c **** 
2139:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
ARM GAS  /tmp/cct1pkgW.s 			page 39


2140:rtos/uC-Clk/Source/clk.c **** }
2141:rtos/uC-Clk/Source/clk.c **** #endif
2142:rtos/uC-Clk/Source/clk.c **** 
2143:rtos/uC-Clk/Source/clk.c **** 
2144:rtos/uC-Clk/Source/clk.c **** /*
2145:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2146:rtos/uC-Clk/Source/clk.c **** *                                          Clk_TS_UnixToTS()
2147:rtos/uC-Clk/Source/clk.c **** *
2148:rtos/uC-Clk/Source/clk.c **** * Description : Convert Unix timestamp to Clock timestamp.
2149:rtos/uC-Clk/Source/clk.c **** *
2150:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_ts_sec        Pointer to variable that will receive the Clock timestamp :
2151:rtos/uC-Clk/Source/clk.c **** *
2152:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
2153:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
2154:rtos/uC-Clk/Source/clk.c **** *
2155:rtos/uC-Clk/Source/clk.c **** *               ts_unix_sec     Unix timestamp value to convert (in seconds, UTC+00).
2156:rtos/uC-Clk/Source/clk.c **** *
2157:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully converted.
2158:rtos/uC-Clk/Source/clk.c **** *
2159:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
2160:rtos/uC-Clk/Source/clk.c **** *
2161:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Returned timestamp does NOT include any time zone offset. Thus any local time
2162:rtos/uC-Clk/Source/clk.c **** *                   zone offset SHOULD be applied before or after calling Clk_TS_UnixToTS().
2163:rtos/uC-Clk/Source/clk.c **** *
2164:rtos/uC-Clk/Source/clk.c **** *               (2) Only years supported by Clock & Unix can be converted, thus the timestamp date
2165:rtos/uC-Clk/Source/clk.c **** *                   MUST be :
2166:rtos/uC-Clk/Source/clk.c **** *
2167:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_EPOCH_YR_START
2168:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_UNIX_EPOCH_YR_END
2169:rtos/uC-Clk/Source/clk.c **** *
2170:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all other
2171:rtos/uC-Clk/Source/clk.c **** *                   validation or function handling in case of any error(s).
2172:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2173:rtos/uC-Clk/Source/clk.c **** */
2174:rtos/uC-Clk/Source/clk.c **** 
2175:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_UNIX_EN == DEF_ENABLED)
2176:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_TS_UnixToTS (CLK_TS_SEC  *p_ts_sec,
2177:rtos/uC-Clk/Source/clk.c ****                               CLK_TS_SEC   ts_unix_sec)
2178:rtos/uC-Clk/Source/clk.c **** {
2179:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE TS PT
2180:rtos/uC-Clk/Source/clk.c ****     if (p_ts_sec == (CLK_TS_SEC *)0) {
2181:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
2182:rtos/uC-Clk/Source/clk.c ****     }
2183:rtos/uC-Clk/Source/clk.c **** #endif
2184:rtos/uC-Clk/Source/clk.c **** 
2185:rtos/uC-Clk/Source/clk.c ****    *p_ts_sec = CLK_TS_SEC_NONE;                                 /* Init to ts none for err (see Not
2186:rtos/uC-Clk/Source/clk.c **** 
2187:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Convert Unix TS to TS:\n\r"
2188:rtos/uC-Clk/Source/clk.c ****                    "    Unix TS = %u\n\r", (unsigned int)ts_unix_sec));
2189:rtos/uC-Clk/Source/clk.c **** 
2190:rtos/uC-Clk/Source/clk.c ****     if (ts_unix_sec < CLK_UNIX_EPOCH_OFFSET_SEC) {              /* Chk for ovf.                    
2191:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("TS overflow\n\r"));
2192:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
2193:rtos/uC-Clk/Source/clk.c ****     }
2194:rtos/uC-Clk/Source/clk.c **** 
2195:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- CONV UNIX TS TO C
2196:rtos/uC-Clk/Source/clk.c ****    *p_ts_sec = ts_unix_sec - CLK_UNIX_EPOCH_OFFSET_SEC;
ARM GAS  /tmp/cct1pkgW.s 			page 40


2197:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    TS converted = %u\n\r", (unsigned int)*p_ts_sec));
2198:rtos/uC-Clk/Source/clk.c **** 
2199:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
2200:rtos/uC-Clk/Source/clk.c **** }
2201:rtos/uC-Clk/Source/clk.c **** #endif
2202:rtos/uC-Clk/Source/clk.c **** 
2203:rtos/uC-Clk/Source/clk.c **** 
2204:rtos/uC-Clk/Source/clk.c **** /*
2205:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2206:rtos/uC-Clk/Source/clk.c **** *                                       Clk_TS_UnixToDateTime()
2207:rtos/uC-Clk/Source/clk.c **** *
2208:rtos/uC-Clk/Source/clk.c **** * Description : Convert Unix timestamp to a date/time structure.
2209:rtos/uC-Clk/Source/clk.c **** *
2210:rtos/uC-Clk/Source/clk.c **** * Argument(s) : ts_unix_sec     Timestamp to convert (in seconds,          UTC+00).
2211:rtos/uC-Clk/Source/clk.c **** *
2212:rtos/uC-Clk/Source/clk.c **** *               tz_sec          Time zone offset     (in seconds, +|- from UTC).
2213:rtos/uC-Clk/Source/clk.c **** *
2214:rtos/uC-Clk/Source/clk.c **** *               p_date_time     Pointer to variable that will receive the date/time structure.
2215:rtos/uC-Clk/Source/clk.c **** *
2216:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if date/time structure successfully returned.
2217:rtos/uC-Clk/Source/clk.c **** *
2218:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
2219:rtos/uC-Clk/Source/clk.c **** *
2220:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) (a) Timestamp ('ts_unix_sec') MUST be set for UTC+00 & SHOULD NOT include the t
2221:rtos/uC-Clk/Source/clk.c **** *                       zone offset ('tz_sec') since Clk_TS_UnixToDateTime() includes the time zone
2222:rtos/uC-Clk/Source/clk.c **** *                       offset in its date/time calculation. Thus the time zone offset SHOULD NOT b
2223:rtos/uC-Clk/Source/clk.c **** *                       applied before or after calling Clk_TS_UnixToDateTime().
2224:rtos/uC-Clk/Source/clk.c **** *
2225:rtos/uC-Clk/Source/clk.c **** *                   (b) Time zone field of the date/time structure ('p_date_time->TZ_sec') is set t
2226:rtos/uC-Clk/Source/clk.c **** *                       the value of the time zone argument ('tz_sec').
2227:rtos/uC-Clk/Source/clk.c **** *
2228:rtos/uC-Clk/Source/clk.c **** *                   (c) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
2229:rtos/uC-Clk/Source/clk.c **** *
2230:rtos/uC-Clk/Source/clk.c **** *                       (1) Between  +|- 12 hours (+|- 43200 seconds)
2231:rtos/uC-Clk/Source/clk.c **** *                       (2) Multiples of 15 minutes
2232:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2233:rtos/uC-Clk/Source/clk.c **** */
2234:rtos/uC-Clk/Source/clk.c **** 
2235:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_UNIX_EN == DEF_ENABLED)
2236:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_TS_UnixToDateTime (CLK_TS_SEC      ts_unix_sec,
2237:rtos/uC-Clk/Source/clk.c ****                                     CLK_TZ_SEC      tz_sec,
2238:rtos/uC-Clk/Source/clk.c ****                                     CLK_DATE_TIME  *p_date_time)
2239:rtos/uC-Clk/Source/clk.c **** {
2240:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
2241:rtos/uC-Clk/Source/clk.c **** 
2242:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------ CONV UNIX TS TO DAT
2243:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("\n\rConvert TS Unix to Date/time:\n\r"
2244:rtos/uC-Clk/Source/clk.c ****                    "    TS to convert= %u\n\n\r",
2245:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)ts_unix_sec));
2246:rtos/uC-Clk/Source/clk.c **** 
2247:rtos/uC-Clk/Source/clk.c ****     valid = Clk_TS_ToDateTimeHandler(ts_unix_sec,
2248:rtos/uC-Clk/Source/clk.c ****                                      tz_sec,
2249:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
2250:rtos/uC-Clk/Source/clk.c ****                                      CLK_UNIX_EPOCH_YR_START,
2251:rtos/uC-Clk/Source/clk.c ****                                      CLK_UNIX_EPOCH_YR_END);
2252:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
2253:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Date/time conversion has failed\n\r"));
ARM GAS  /tmp/cct1pkgW.s 			page 41


2254:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
2255:rtos/uC-Clk/Source/clk.c ****     }
2256:rtos/uC-Clk/Source/clk.c **** 
2257:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
2258:rtos/uC-Clk/Source/clk.c **** }
2259:rtos/uC-Clk/Source/clk.c **** #endif
2260:rtos/uC-Clk/Source/clk.c **** 
2261:rtos/uC-Clk/Source/clk.c **** 
2262:rtos/uC-Clk/Source/clk.c **** /*
2263:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2264:rtos/uC-Clk/Source/clk.c **** *                                       Clk_DateTimeToTS_Unix()
2265:rtos/uC-Clk/Source/clk.c **** *
2266:rtos/uC-Clk/Source/clk.c **** * Description : Convert a date/time structure to Unix timestamp.
2267:rtos/uC-Clk/Source/clk.c **** *
2268:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_ts_sec        Pointer to variable that will receive the Unix timestamp :
2269:rtos/uC-Clk/Source/clk.c **** *
2270:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
2271:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
2272:rtos/uC-Clk/Source/clk.c **** *
2273:rtos/uC-Clk/Source/clk.c **** *               p_date_time     Pointer to variable that contains date/time structure to convert.
2274:rtos/uC-Clk/Source/clk.c **** *
2275:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp successfully returned.
2276:rtos/uC-Clk/Source/clk.c **** *
2277:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
2278:rtos/uC-Clk/Source/clk.c **** *
2279:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Date/time structure ('p_date_time') MUST be representable in Unix timestamp.
2280:rtos/uC-Clk/Source/clk.c **** *                   Thus date to convert MUST be :
2281:rtos/uC-Clk/Source/clk.c **** *
2282:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_UNIX_EPOCH_YR_START
2283:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_UNIX_EPOCH_YR_END
2284:rtos/uC-Clk/Source/clk.c **** *
2285:rtos/uC-Clk/Source/clk.c **** *               (2) (a) Date/time ('p_date_time') SHOULD be set to local time with correct  time zo
2286:rtos/uC-Clk/Source/clk.c **** *                       offset ('p_date_time->TZ_sec'). Clk_DateTimeToTS_Unix() removes the time zo
2287:rtos/uC-Clk/Source/clk.c **** *                       offset from the date/time to calculate & return a Clock timestamp at UTC+00
2288:rtos/uC-Clk/Source/clk.c **** *
2289:rtos/uC-Clk/Source/clk.c **** *                   (b) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
2290:rtos/uC-Clk/Source/clk.c **** *
2291:rtos/uC-Clk/Source/clk.c **** *                       (1) Between  +|- 12 hours (+|- 43200 seconds)
2292:rtos/uC-Clk/Source/clk.c **** *                       (2) Multiples of 15 minutes
2293:rtos/uC-Clk/Source/clk.c **** *
2294:rtos/uC-Clk/Source/clk.c **** *               (3) Pointers to variables that return values MUST be initialized PRIOR to all other
2295:rtos/uC-Clk/Source/clk.c **** *                   validation or function handling in case of any error(s).
2296:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2297:rtos/uC-Clk/Source/clk.c **** */
2298:rtos/uC-Clk/Source/clk.c **** 
2299:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_UNIX_EN == DEF_ENABLED)
2300:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_DateTimeToTS_Unix (CLK_TS_SEC     *p_ts_unix_sec,
2301:rtos/uC-Clk/Source/clk.c ****                                     CLK_DATE_TIME  *p_date_time)
2302:rtos/uC-Clk/Source/clk.c **** {
2303:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
2304:rtos/uC-Clk/Source/clk.c **** 
2305:rtos/uC-Clk/Source/clk.c **** 
2306:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE TS PT
2307:rtos/uC-Clk/Source/clk.c ****     if (p_ts_unix_sec == (CLK_TS_SEC *)0) {
2308:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
2309:rtos/uC-Clk/Source/clk.c ****     }
2310:rtos/uC-Clk/Source/clk.c **** #endif
ARM GAS  /tmp/cct1pkgW.s 			page 42


2311:rtos/uC-Clk/Source/clk.c **** 
2312:rtos/uC-Clk/Source/clk.c ****    *p_ts_unix_sec = CLK_TS_SEC_NONE;                            /* Init to ts none for err (see Not
2313:rtos/uC-Clk/Source/clk.c **** 
2314:rtos/uC-Clk/Source/clk.c **** 
2315:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Validated in Clk_IsUnixDateTimeV
2316:rtos/uC-Clk/Source/clk.c ****     if (p_date_time == (CLK_DATE_TIME *)0) {                    /* -------------- VALIDATE DATE/TIM
2317:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
2318:rtos/uC-Clk/Source/clk.c ****     }
2319:rtos/uC-Clk/Source/clk.c **** #endif
2320:rtos/uC-Clk/Source/clk.c **** 
2321:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DATE/T
2322:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsUnixDateTimeValid(p_date_time);
2323:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
2324:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
2325:rtos/uC-Clk/Source/clk.c ****     }
2326:rtos/uC-Clk/Source/clk.c **** 
2327:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------ CONV DATE/TIME TO U
2328:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Convert Date/time to TS:\n\r"));
2329:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeToTS_Handler(p_ts_unix_sec,
2330:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
2331:rtos/uC-Clk/Source/clk.c ****                                      CLK_UNIX_EPOCH_YR_START);
2332:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
2333:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
2334:rtos/uC-Clk/Source/clk.c ****     }
2335:rtos/uC-Clk/Source/clk.c **** 
2336:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
2337:rtos/uC-Clk/Source/clk.c **** }
2338:rtos/uC-Clk/Source/clk.c **** #endif
2339:rtos/uC-Clk/Source/clk.c **** 
2340:rtos/uC-Clk/Source/clk.c **** 
2341:rtos/uC-Clk/Source/clk.c **** /*
2342:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2343:rtos/uC-Clk/Source/clk.c **** *                                       Clk_UnixDateTimeMake()
2344:rtos/uC-Clk/Source/clk.c **** *
2345:rtos/uC-Clk/Source/clk.c **** * Description : Build a valid Unix epoch date/time structure.
2346:rtos/uC-Clk/Source/clk.c **** *
2347:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that will receive the date/time structure.
2348:rtos/uC-Clk/Source/clk.c **** *
2349:rtos/uC-Clk/Source/clk.c **** *               yr              Year    value [CLK_UNIX_EPOCH_YR_START to CLK_UNIX_EPOCH_YR_END) (s
2350:rtos/uC-Clk/Source/clk.c **** *
2351:rtos/uC-Clk/Source/clk.c **** *               month           Month   value [          CLK_MONTH_JAN to         CLK_MONTH_DEC].
2352:rtos/uC-Clk/Source/clk.c **** *
2353:rtos/uC-Clk/Source/clk.c **** *               day             Day     value [                      1 to                    31].
2354:rtos/uC-Clk/Source/clk.c **** *
2355:rtos/uC-Clk/Source/clk.c **** *               hr              Hours   value [                      0 to                    23].
2356:rtos/uC-Clk/Source/clk.c **** *
2357:rtos/uC-Clk/Source/clk.c **** *               min             Minutes value [                      0 to                    59].
2358:rtos/uC-Clk/Source/clk.c **** *
2359:rtos/uC-Clk/Source/clk.c **** *               sec             Seconds value [                      0 to                    60] (s
2360:rtos/uC-Clk/Source/clk.c **** *
2361:rtos/uC-Clk/Source/clk.c **** *               tz_sec          Time zone offset (in seconds, +|- from UTC) [-43200 to 43200].
2362:rtos/uC-Clk/Source/clk.c **** *
2363:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if date/time structure successfully returned.
2364:rtos/uC-Clk/Source/clk.c **** *
2365:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
2366:rtos/uC-Clk/Source/clk.c **** *
2367:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Date/time structure ('p_date_time') MUST be representable in Unix timestamp.
ARM GAS  /tmp/cct1pkgW.s 			page 43


2368:rtos/uC-Clk/Source/clk.c **** *                   Thus date to convert MUST be :
2369:rtos/uC-Clk/Source/clk.c **** *
2370:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_UNIX_EPOCH_YR_START
2371:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_UNIX_EPOCH_YR_END
2372:rtos/uC-Clk/Source/clk.c **** *
2373:rtos/uC-Clk/Source/clk.c **** *               (2) Day of week ('p_date_time->DayOfWk') and Day of year ('p_date_time->DayOfYr')
2374:rtos/uC-Clk/Source/clk.c **** *                   are internally calculated and set in the date/time structure if date is valid.
2375:rtos/uC-Clk/Source/clk.c **** *
2376:rtos/uC-Clk/Source/clk.c **** *               (3) Seconds value of 60 is valid to be compatible with leap second adjustment and
2377:rtos/uC-Clk/Source/clk.c **** *                   the atomic clock time structure.
2378:rtos/uC-Clk/Source/clk.c **** *
2379:rtos/uC-Clk/Source/clk.c **** *               (4) Time zone is based ('tz_sec') on Coordinated Universal Time (UTC) & has valid
2380:rtos/uC-Clk/Source/clk.c **** *                   values :
2381:rtos/uC-Clk/Source/clk.c **** *
2382:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
2383:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minutes
2384:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2385:rtos/uC-Clk/Source/clk.c **** */
2386:rtos/uC-Clk/Source/clk.c **** 
2387:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_UNIX_EN == DEF_ENABLED)
2388:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_UnixDateTimeMake (CLK_DATE_TIME  *p_date_time,
2389:rtos/uC-Clk/Source/clk.c ****                                    CLK_YR          yr,
2390:rtos/uC-Clk/Source/clk.c ****                                    CLK_MONTH       month,
2391:rtos/uC-Clk/Source/clk.c ****                                    CLK_DAY         day,
2392:rtos/uC-Clk/Source/clk.c ****                                    CLK_HR          hr,
2393:rtos/uC-Clk/Source/clk.c ****                                    CLK_MIN         min,
2394:rtos/uC-Clk/Source/clk.c ****                                    CLK_SEC         sec,
2395:rtos/uC-Clk/Source/clk.c ****                                    CLK_TZ_SEC      tz_sec)
2396:rtos/uC-Clk/Source/clk.c **** {
2397:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
2398:rtos/uC-Clk/Source/clk.c **** 
2399:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------- VALIDATE & CONV UNIX 
2400:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeMakeHandler(p_date_time,
2401:rtos/uC-Clk/Source/clk.c ****                                     yr,
2402:rtos/uC-Clk/Source/clk.c ****                                     month,
2403:rtos/uC-Clk/Source/clk.c ****                                     day,
2404:rtos/uC-Clk/Source/clk.c ****                                     hr,
2405:rtos/uC-Clk/Source/clk.c ****                                     min,
2406:rtos/uC-Clk/Source/clk.c ****                                     sec,
2407:rtos/uC-Clk/Source/clk.c ****                                     tz_sec,
2408:rtos/uC-Clk/Source/clk.c ****                                     CLK_UNIX_EPOCH_YR_START,
2409:rtos/uC-Clk/Source/clk.c ****                                     CLK_UNIX_EPOCH_YR_END);
2410:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
2411:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
2412:rtos/uC-Clk/Source/clk.c ****     }
2413:rtos/uC-Clk/Source/clk.c **** 
2414:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
2415:rtos/uC-Clk/Source/clk.c **** }
2416:rtos/uC-Clk/Source/clk.c **** #endif
2417:rtos/uC-Clk/Source/clk.c **** 
2418:rtos/uC-Clk/Source/clk.c **** 
2419:rtos/uC-Clk/Source/clk.c **** /*
2420:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2421:rtos/uC-Clk/Source/clk.c **** *                                      Clk_IsUnixDateTimeValid()
2422:rtos/uC-Clk/Source/clk.c **** *
2423:rtos/uC-Clk/Source/clk.c **** * Description : Determine if date/time structure is valid in Unix epoch.
2424:rtos/uC-Clk/Source/clk.c **** *
ARM GAS  /tmp/cct1pkgW.s 			page 44


2425:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that contains the date/time structure to valida
2426:rtos/uC-Clk/Source/clk.c **** *
2427:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, if date/time structure is valid.
2428:rtos/uC-Clk/Source/clk.c **** *
2429:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  otherwise.
2430:rtos/uC-Clk/Source/clk.c **** *
2431:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Date/time structure ('p_date_time') MUST be representable in Unix epoch. Thus
2432:rtos/uC-Clk/Source/clk.c **** *                   date to validate MUST be :
2433:rtos/uC-Clk/Source/clk.c **** *
2434:rtos/uC-Clk/Source/clk.c **** *                   (a) >= CLK_UNIX_EPOCH_YR_START
2435:rtos/uC-Clk/Source/clk.c **** *                   (b) <  CLK_UNIX_EPOCH_YR_END
2436:rtos/uC-Clk/Source/clk.c **** *
2437:rtos/uC-Clk/Source/clk.c **** *               (2) Time zone is based ('p_date_time->TZ_sec') on Coordinated Universal Time (UTC)
2438:rtos/uC-Clk/Source/clk.c **** *                   & has valid values :
2439:rtos/uC-Clk/Source/clk.c **** *
2440:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
2441:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minutes
2442:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2443:rtos/uC-Clk/Source/clk.c **** */
2444:rtos/uC-Clk/Source/clk.c **** 
2445:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_UNIX_EN == DEF_ENABLED)
2446:rtos/uC-Clk/Source/clk.c **** CPU_BOOLEAN  Clk_IsUnixDateTimeValid (CLK_DATE_TIME  *p_date_time)
2447:rtos/uC-Clk/Source/clk.c **** {
2448:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
2449:rtos/uC-Clk/Source/clk.c **** 
2450:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------- VALIDATE UNIX DATE
2451:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Validate Unix date/time: "));
2452:rtos/uC-Clk/Source/clk.c **** 
2453:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDateTimeValidHandler(p_date_time,
2454:rtos/uC-Clk/Source/clk.c ****                                        CLK_UNIX_EPOCH_YR_START,
2455:rtos/uC-Clk/Source/clk.c ****                                        CLK_UNIX_EPOCH_YR_END);
2456:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
2457:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Fail\n\r"));
2458:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
2459:rtos/uC-Clk/Source/clk.c ****     }
2460:rtos/uC-Clk/Source/clk.c **** 
2461:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Ok\n\r"));
2462:rtos/uC-Clk/Source/clk.c **** 
2463:rtos/uC-Clk/Source/clk.c ****     return (DEF_YES);
2464:rtos/uC-Clk/Source/clk.c **** }
2465:rtos/uC-Clk/Source/clk.c **** #endif
2466:rtos/uC-Clk/Source/clk.c **** 
2467:rtos/uC-Clk/Source/clk.c **** 
2468:rtos/uC-Clk/Source/clk.c **** /*
2469:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2470:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2471:rtos/uC-Clk/Source/clk.c **** *                                           LOCAL FUNCTIONS
2472:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2473:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2474:rtos/uC-Clk/Source/clk.c **** */
2475:rtos/uC-Clk/Source/clk.c **** 
2476:rtos/uC-Clk/Source/clk.c **** 
2477:rtos/uC-Clk/Source/clk.c **** /*
2478:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2479:rtos/uC-Clk/Source/clk.c **** *                                           Clk_IsLeapYr()
2480:rtos/uC-Clk/Source/clk.c **** *
2481:rtos/uC-Clk/Source/clk.c **** * Description : Determines if year is a leap year.
ARM GAS  /tmp/cct1pkgW.s 			page 45


2482:rtos/uC-Clk/Source/clk.c **** *
2483:rtos/uC-Clk/Source/clk.c **** * Argument(s) : yr          Year value [1900 to  2135].
2484:rtos/uC-Clk/Source/clk.c **** *
2485:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, if 'yr' is     a leap year.
2486:rtos/uC-Clk/Source/clk.c **** *
2487:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  if 'yr' is NOT a leap year.
2488:rtos/uC-Clk/Source/clk.c **** *
2489:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) (a) Most years that are evenly divisible by 4 are leap years; ...
2490:rtos/uC-Clk/Source/clk.c **** *                   (b) (1) except years that are evenly divisible by 100,        ...
2491:rtos/uC-Clk/Source/clk.c **** *                       (2) unless they  are also evenly divisible by 400.
2492:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2493:rtos/uC-Clk/Source/clk.c **** */
2494:rtos/uC-Clk/Source/clk.c **** 
2495:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsLeapYr (CLK_YR  yr)
2496:rtos/uC-Clk/Source/clk.c **** {
  29              		.loc 1 2496 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
2497:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  leap_yr;
  34              		.loc 1 2497 5 view .LVU1
2498:rtos/uC-Clk/Source/clk.c **** 
2499:rtos/uC-Clk/Source/clk.c **** 
2500:rtos/uC-Clk/Source/clk.c ****     leap_yr = ( ((yr %   4u) == 0u) &&                          /* Chk for leap yr (see Note #1).  
  35              		.loc 1 2500 5 view .LVU2
  36              		.loc 1 2500 13 is_stmt 0 view .LVU3
  37 0000 10F0030F 		tst	r0, #3
  38 0004 14D1     		bne	.L3
2501:rtos/uC-Clk/Source/clk.c ****                (((yr % 100u) != 0u) || ((yr % 400u) == 0u))) ? DEF_YES : DEF_NO;
  39              		.loc 1 2501 30 discriminator 1 view .LVU4
  40 0006 0D4B     		ldr	r3, .L6
  41 0008 A3FB0023 		umull	r2, r3, r3, r0
  42 000c 5B09     		lsrs	r3, r3, #5
  43 000e 6422     		movs	r2, #100
  44 0010 02FB1303 		mls	r3, r2, r3, r0
  45 0014 9BB2     		uxth	r3, r3
2500:rtos/uC-Clk/Source/clk.c ****                (((yr % 100u) != 0u) || ((yr % 400u) == 0u))) ? DEF_YES : DEF_NO;
  46              		.loc 1 2500 37 discriminator 1 view .LVU5
  47 0016 6BB9     		cbnz	r3, .L4
  48              		.loc 1 2501 53 view .LVU6
  49 0018 084B     		ldr	r3, .L6
  50 001a A3FB0023 		umull	r2, r3, r3, r0
  51 001e DB09     		lsrs	r3, r3, #7
  52 0020 4FF4C872 		mov	r2, #400
  53 0024 02FB1300 		mls	r0, r2, r3, r0
  54              	.LVL1:
  55              		.loc 1 2501 53 view .LVU7
  56 0028 80B2     		uxth	r0, r0
  57              		.loc 1 2501 37 view .LVU8
  58 002a 28B1     		cbz	r0, .L5
2500:rtos/uC-Clk/Source/clk.c ****                (((yr % 100u) != 0u) || ((yr % 400u) == 0u))) ? DEF_YES : DEF_NO;
  59              		.loc 1 2500 13 view .LVU9
  60 002c 0020     		movs	r0, #0
  61 002e 7047     		bx	lr
  62              	.LVL2:
  63              	.L3:
ARM GAS  /tmp/cct1pkgW.s 			page 46


2500:rtos/uC-Clk/Source/clk.c ****                (((yr % 100u) != 0u) || ((yr % 400u) == 0u))) ? DEF_YES : DEF_NO;
  64              		.loc 1 2500 13 view .LVU10
  65 0030 0020     		movs	r0, #0
  66              	.LVL3:
2500:rtos/uC-Clk/Source/clk.c ****                (((yr % 100u) != 0u) || ((yr % 400u) == 0u))) ? DEF_YES : DEF_NO;
  67              		.loc 1 2500 13 view .LVU11
  68 0032 7047     		bx	lr
  69              	.LVL4:
  70              	.L4:
2500:rtos/uC-Clk/Source/clk.c ****                (((yr % 100u) != 0u) || ((yr % 400u) == 0u))) ? DEF_YES : DEF_NO;
  71              		.loc 1 2500 13 view .LVU12
  72 0034 0120     		movs	r0, #1
  73              	.LVL5:
2500:rtos/uC-Clk/Source/clk.c ****                (((yr % 100u) != 0u) || ((yr % 400u) == 0u))) ? DEF_YES : DEF_NO;
  74              		.loc 1 2500 13 view .LVU13
  75 0036 7047     		bx	lr
  76              	.L5:
  77 0038 0120     		movs	r0, #1
  78              	.LVL6:
2502:rtos/uC-Clk/Source/clk.c **** 
2503:rtos/uC-Clk/Source/clk.c ****     return (leap_yr);
  79              		.loc 1 2503 5 is_stmt 1 view .LVU14
2504:rtos/uC-Clk/Source/clk.c **** }
  80              		.loc 1 2504 1 is_stmt 0 view .LVU15
  81 003a 7047     		bx	lr
  82              	.L7:
  83              		.align	2
  84              	.L6:
  85 003c 1F85EB51 		.word	1374389535
  86              		.cfi_endproc
  87              	.LFE31:
  89              		.section	.text.Clk_IsDateValid,"ax",%progbits
  90              		.align	1
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv4-sp-d16
  96              	Clk_IsDateValid:
  97              	.LVL7:
  98              	.LFB32:
2505:rtos/uC-Clk/Source/clk.c **** 
2506:rtos/uC-Clk/Source/clk.c **** 
2507:rtos/uC-Clk/Source/clk.c **** /*
2508:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2509:rtos/uC-Clk/Source/clk.c **** *                                          Clk_IsDateValid()
2510:rtos/uC-Clk/Source/clk.c **** *
2511:rtos/uC-Clk/Source/clk.c **** * Description : Determine if date values are valid.
2512:rtos/uC-Clk/Source/clk.c **** *
2513:rtos/uC-Clk/Source/clk.c **** * Argument(s) : yr          Year  value [yr_start to  yr_end].
2514:rtos/uC-Clk/Source/clk.c **** *
2515:rtos/uC-Clk/Source/clk.c **** *               month       Month value [       1 to      12] / [CLK_MONTH_JAN to CLK_MONTH_DEC].
2516:rtos/uC-Clk/Source/clk.c **** *
2517:rtos/uC-Clk/Source/clk.c **** *               day         Day   value [       1 to      31].
2518:rtos/uC-Clk/Source/clk.c **** *
2519:rtos/uC-Clk/Source/clk.c **** *               yr_start    Start year of the epoch.
2520:rtos/uC-Clk/Source/clk.c **** *
2521:rtos/uC-Clk/Source/clk.c **** *               yr_end      End   year of the epoch.
ARM GAS  /tmp/cct1pkgW.s 			page 47


2522:rtos/uC-Clk/Source/clk.c **** *
2523:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, if date is valid.
2524:rtos/uC-Clk/Source/clk.c **** *
2525:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  otherwise.
2526:rtos/uC-Clk/Source/clk.c **** *
2527:rtos/uC-Clk/Source/clk.c **** * Note(s)     : none.
2528:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2529:rtos/uC-Clk/Source/clk.c **** */
2530:rtos/uC-Clk/Source/clk.c **** 
2531:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsDateValid (CLK_YR     yr,
2532:rtos/uC-Clk/Source/clk.c ****                                       CLK_MONTH  month,
2533:rtos/uC-Clk/Source/clk.c ****                                       CLK_DAY    day,
2534:rtos/uC-Clk/Source/clk.c ****                                       CLK_YR     yr_start,
2535:rtos/uC-Clk/Source/clk.c ****                                       CLK_YR     yr_end)
2536:rtos/uC-Clk/Source/clk.c **** {
  99              		.loc 1 2536 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 4, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
2537:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  leap_yr;
 103              		.loc 1 2537 5 view .LVU17
2538:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U   leap_yr_ix;
 104              		.loc 1 2538 5 view .LVU18
2539:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      days_in_month;
 105              		.loc 1 2539 5 view .LVU19
2540:rtos/uC-Clk/Source/clk.c **** 
2541:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------- VALIDATE YR 
2542:rtos/uC-Clk/Source/clk.c ****     if ((yr <  yr_start) ||
 106              		.loc 1 2542 5 view .LVU20
 107              		.loc 1 2542 8 is_stmt 0 view .LVU21
 108 0000 9842     		cmp	r0, r3
 109 0002 1CD3     		bcc	.L11
2536:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  leap_yr;
 110              		.loc 1 2536 1 discriminator 1 view .LVU22
 111 0004 38B5     		push	{r3, r4, r5, lr}
 112              	.LCFI0:
 113              		.cfi_def_cfa_offset 16
 114              		.cfi_offset 3, -16
 115              		.cfi_offset 4, -12
 116              		.cfi_offset 5, -8
 117              		.cfi_offset 14, -4
 118 0006 0D46     		mov	r5, r1
 119 0008 1446     		mov	r4, r2
 120              		.loc 1 2542 26 discriminator 1 view .LVU23
 121 000a BDF81030 		ldrh	r3, [sp, #16]
 122              	.LVL8:
 123              		.loc 1 2542 26 discriminator 1 view .LVU24
 124 000e 9842     		cmp	r0, r3
 125 0010 17D2     		bcs	.L12
2543:rtos/uC-Clk/Source/clk.c ****         (yr >= yr_end  )) {
2544:rtos/uC-Clk/Source/clk.c ****          CLK_TRACE_DBG(("Invalid year, must be > %u & < %u\n\r",
2545:rtos/uC-Clk/Source/clk.c ****                         (unsigned int)yr_end,
2546:rtos/uC-Clk/Source/clk.c ****                         (unsigned int)yr_start));
2547:rtos/uC-Clk/Source/clk.c ****          return (DEF_NO);
2548:rtos/uC-Clk/Source/clk.c ****     }
2549:rtos/uC-Clk/Source/clk.c **** 
2550:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ VALIDATE MONT
ARM GAS  /tmp/cct1pkgW.s 			page 48


2551:rtos/uC-Clk/Source/clk.c ****     if ((month < CLK_FIRST_MONTH_OF_YR) ||
 126              		.loc 1 2551 5 is_stmt 1 view .LVU25
 127              		.loc 1 2551 41 is_stmt 0 view .LVU26
 128 0012 4B1E     		subs	r3, r1, #1
 129 0014 DBB2     		uxtb	r3, r3
 130              		.loc 1 2551 8 view .LVU27
 131 0016 0B2B     		cmp	r3, #11
 132 0018 15D8     		bhi	.L13
2552:rtos/uC-Clk/Source/clk.c ****         (month > CLK_MONTH_PER_YR     )) {
2553:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Invalid year, must be >= %u & < %u\n\r",
2554:rtos/uC-Clk/Source/clk.c ****                        (unsigned int)CLK_FIRST_MONTH_OF_YR,
2555:rtos/uC-Clk/Source/clk.c ****                        (unsigned int)CLK_MONTH_PER_YR));
2556:rtos/uC-Clk/Source/clk.c ****         return (DEF_NO);
2557:rtos/uC-Clk/Source/clk.c ****     }
2558:rtos/uC-Clk/Source/clk.c **** 
2559:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------- VALIDATE DAY
2560:rtos/uC-Clk/Source/clk.c ****     leap_yr       =  Clk_IsLeapYr(yr);
 133              		.loc 1 2560 5 is_stmt 1 view .LVU28
 134              		.loc 1 2560 22 is_stmt 0 view .LVU29
 135 001a FFF7FEFF 		bl	Clk_IsLeapYr
 136              	.LVL9:
2561:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix    = (leap_yr == DEF_YES) ? 1u : 0u;
 137              		.loc 1 2561 5 is_stmt 1 view .LVU30
 138              		.loc 1 2561 19 is_stmt 0 view .LVU31
 139 001e 0128     		cmp	r0, #1
 140 0020 00D0     		beq	.L10
 141 0022 0020     		movs	r0, #0
 142              	.LVL10:
 143              	.L10:
2562:rtos/uC-Clk/Source/clk.c ****     days_in_month =  Clk_DaysInMonth[leap_yr_ix][month - CLK_FIRST_MONTH_OF_YR];
 144              		.loc 1 2562 5 is_stmt 1 discriminator 4 view .LVU32
 145              		.loc 1 2562 56 is_stmt 0 discriminator 4 view .LVU33
 146 0024 691E     		subs	r1, r5, #1
 147              		.loc 1 2562 19 discriminator 4 view .LVU34
 148 0026 00EB4000 		add	r0, r0, r0, lsl #1
 149              	.LVL11:
 150              		.loc 1 2562 19 discriminator 4 view .LVU35
 151 002a 01EB8001 		add	r1, r1, r0, lsl #2
 152 002e 094B     		ldr	r3, .L21
 153 0030 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 154              	.LVL12:
2563:rtos/uC-Clk/Source/clk.c ****     if ((day < CLK_FIRST_DAY_OF_MONTH) ||
 155              		.loc 1 2563 5 is_stmt 1 discriminator 4 view .LVU36
 156              		.loc 1 2563 8 is_stmt 0 discriminator 4 view .LVU37
 157 0034 4CB1     		cbz	r4, .L15
 158              		.loc 1 2563 40 discriminator 1 view .LVU38
 159 0036 A342     		cmp	r3, r4
 160 0038 09D3     		bcc	.L16
2564:rtos/uC-Clk/Source/clk.c ****         (day > days_in_month         )) {
2565:rtos/uC-Clk/Source/clk.c ****          CLK_TRACE_DBG(("Invalid day, must be > %u & < %u\n\r",
2566:rtos/uC-Clk/Source/clk.c ****                         (unsigned int)CLK_FIRST_DAY_OF_MONTH,
2567:rtos/uC-Clk/Source/clk.c ****                         (unsigned int)days_in_month));
2568:rtos/uC-Clk/Source/clk.c ****          return (DEF_NO);
2569:rtos/uC-Clk/Source/clk.c ****     }
2570:rtos/uC-Clk/Source/clk.c **** 
2571:rtos/uC-Clk/Source/clk.c **** 
2572:rtos/uC-Clk/Source/clk.c ****     return (DEF_YES);
ARM GAS  /tmp/cct1pkgW.s 			page 49


 161              		.loc 1 2572 12 view .LVU39
 162 003a 0120     		movs	r0, #1
 163 003c 02E0     		b	.L9
 164              	.LVL13:
 165              	.L11:
 166              	.LCFI1:
 167              		.cfi_def_cfa_offset 0
 168              		.cfi_restore 3
 169              		.cfi_restore 4
 170              		.cfi_restore 5
 171              		.cfi_restore 14
2547:rtos/uC-Clk/Source/clk.c ****     }
 172              		.loc 1 2547 17 view .LVU40
 173 003e 0020     		movs	r0, #0
 174              	.LVL14:
2573:rtos/uC-Clk/Source/clk.c **** }
 175              		.loc 1 2573 1 view .LVU41
 176 0040 7047     		bx	lr
 177              	.LVL15:
 178              	.L12:
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 16
 181              		.cfi_offset 3, -16
 182              		.cfi_offset 4, -12
 183              		.cfi_offset 5, -8
 184              		.cfi_offset 14, -4
2547:rtos/uC-Clk/Source/clk.c ****     }
 185              		.loc 1 2547 17 view .LVU42
 186 0042 0020     		movs	r0, #0
 187              	.LVL16:
 188              	.L9:
 189              		.loc 1 2573 1 view .LVU43
 190 0044 38BD     		pop	{r3, r4, r5, pc}
 191              	.LVL17:
 192              	.L13:
2556:rtos/uC-Clk/Source/clk.c ****     }
 193              		.loc 1 2556 16 view .LVU44
 194 0046 0020     		movs	r0, #0
 195              	.LVL18:
2556:rtos/uC-Clk/Source/clk.c ****     }
 196              		.loc 1 2556 16 view .LVU45
 197 0048 FCE7     		b	.L9
 198              	.LVL19:
 199              	.L15:
2568:rtos/uC-Clk/Source/clk.c ****     }
 200              		.loc 1 2568 17 view .LVU46
 201 004a 0020     		movs	r0, #0
 202 004c FAE7     		b	.L9
 203              	.L16:
 204 004e 0020     		movs	r0, #0
 205 0050 F8E7     		b	.L9
 206              	.L22:
 207 0052 00BF     		.align	2
 208              	.L21:
 209 0054 00000000 		.word	.LANCHOR0
 210              		.cfi_endproc
 211              	.LFE32:
ARM GAS  /tmp/cct1pkgW.s 			page 50


 213              		.section	.text.Clk_IsDayOfYrValid,"ax",%progbits
 214              		.align	1
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv4-sp-d16
 220              	Clk_IsDayOfYrValid:
 221              	.LVL20:
 222              	.LFB33:
2574:rtos/uC-Clk/Source/clk.c **** 
2575:rtos/uC-Clk/Source/clk.c **** 
2576:rtos/uC-Clk/Source/clk.c **** /*
2577:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2578:rtos/uC-Clk/Source/clk.c **** *                                        Clk_IsDayOfYrValid()
2579:rtos/uC-Clk/Source/clk.c **** *
2580:rtos/uC-Clk/Source/clk.c **** * Description : Determine if day of year is valid.
2581:rtos/uC-Clk/Source/clk.c **** *
2582:rtos/uC-Clk/Source/clk.c **** * Argument(s) : yr          Year        value [1900 to 2135].
2583:rtos/uC-Clk/Source/clk.c **** *
2584:rtos/uC-Clk/Source/clk.c **** *               day_of_yr   Day of year value [1    to   31].
2585:rtos/uC-Clk/Source/clk.c **** *
2586:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, if day of year is valid.
2587:rtos/uC-Clk/Source/clk.c **** *
2588:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  otherwise.
2589:rtos/uC-Clk/Source/clk.c **** *
2590:rtos/uC-Clk/Source/clk.c **** * Note(s)     : none.
2591:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2592:rtos/uC-Clk/Source/clk.c **** */
2593:rtos/uC-Clk/Source/clk.c **** 
2594:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsDayOfYrValid (CLK_YR   yr,
2595:rtos/uC-Clk/Source/clk.c ****                                          CLK_DAY  day_of_yr)
2596:rtos/uC-Clk/Source/clk.c **** {
 223              		.loc 1 2596 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		.loc 1 2596 1 is_stmt 0 view .LVU48
 228 0000 10B5     		push	{r4, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 233 0002 0C46     		mov	r4, r1
2597:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  leap_yr;
 234              		.loc 1 2597 5 is_stmt 1 view .LVU49
2598:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U   leap_yr_ix;
 235              		.loc 1 2598 5 view .LVU50
2599:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      yr_days_max;
 236              		.loc 1 2599 5 view .LVU51
2600:rtos/uC-Clk/Source/clk.c **** 
2601:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DAY OF
2602:rtos/uC-Clk/Source/clk.c ****     leap_yr     =  Clk_IsLeapYr(yr);
 237              		.loc 1 2602 5 view .LVU52
 238              		.loc 1 2602 20 is_stmt 0 view .LVU53
 239 0004 FFF7FEFF 		bl	Clk_IsLeapYr
 240              	.LVL21:
2603:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix  = (leap_yr == DEF_YES) ? 1u : 0u;
ARM GAS  /tmp/cct1pkgW.s 			page 51


 241              		.loc 1 2603 5 is_stmt 1 view .LVU54
 242              		.loc 1 2603 17 is_stmt 0 view .LVU55
 243 0008 0128     		cmp	r0, #1
 244 000a 00D0     		beq	.L24
 245 000c 0020     		movs	r0, #0
 246              	.LVL22:
 247              	.L24:
2604:rtos/uC-Clk/Source/clk.c ****     yr_days_max =  Clk_DaysInYr[leap_yr_ix];
 248              		.loc 1 2604 5 is_stmt 1 discriminator 4 view .LVU56
 249              		.loc 1 2604 17 is_stmt 0 discriminator 4 view .LVU57
 250 000e 064B     		ldr	r3, .L30
 251 0010 33F81030 		ldrh	r3, [r3, r0, lsl #1]
 252              	.LVL23:
2605:rtos/uC-Clk/Source/clk.c ****     if ((day_of_yr < CLK_FIRST_DAY_OF_YR) ||
 253              		.loc 1 2605 5 is_stmt 1 discriminator 4 view .LVU58
 254              		.loc 1 2605 8 is_stmt 0 discriminator 4 view .LVU59
 255 0014 1CB1     		cbz	r4, .L27
 256              		.loc 1 2605 43 discriminator 1 view .LVU60
 257 0016 A342     		cmp	r3, r4
 258 0018 03D3     		bcc	.L28
2606:rtos/uC-Clk/Source/clk.c ****         (day_of_yr > yr_days_max        )) {
2607:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Invalid day of year, must be >= %u & < %u\n\r",
2608:rtos/uC-Clk/Source/clk.c ****                        (unsigned int)CLK_FIRST_DAY_OF_YR,
2609:rtos/uC-Clk/Source/clk.c ****                        (unsigned int)yr_days_max));
2610:rtos/uC-Clk/Source/clk.c ****         return (DEF_NO);
2611:rtos/uC-Clk/Source/clk.c ****     }
2612:rtos/uC-Clk/Source/clk.c **** 
2613:rtos/uC-Clk/Source/clk.c ****     return (DEF_YES);
 259              		.loc 1 2613 12 view .LVU61
 260 001a 0120     		movs	r0, #1
 261              	.LVL24:
 262              	.L25:
2614:rtos/uC-Clk/Source/clk.c **** }
 263              		.loc 1 2614 1 view .LVU62
 264 001c 10BD     		pop	{r4, pc}
 265              	.LVL25:
 266              	.L27:
2610:rtos/uC-Clk/Source/clk.c ****     }
 267              		.loc 1 2610 16 view .LVU63
 268 001e 0020     		movs	r0, #0
 269              	.LVL26:
2610:rtos/uC-Clk/Source/clk.c ****     }
 270              		.loc 1 2610 16 view .LVU64
 271 0020 FCE7     		b	.L25
 272              	.LVL27:
 273              	.L28:
2610:rtos/uC-Clk/Source/clk.c ****     }
 274              		.loc 1 2610 16 view .LVU65
 275 0022 0020     		movs	r0, #0
 276              	.LVL28:
2610:rtos/uC-Clk/Source/clk.c ****     }
 277              		.loc 1 2610 16 view .LVU66
 278 0024 FAE7     		b	.L25
 279              	.L31:
 280 0026 00BF     		.align	2
 281              	.L30:
 282 0028 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/cct1pkgW.s 			page 52


 283              		.cfi_endproc
 284              	.LFE33:
 286              		.section	.text.Clk_IsDayOfWkValid,"ax",%progbits
 287              		.align	1
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	Clk_IsDayOfWkValid:
 294              	.LVL29:
 295              	.LFB34:
2615:rtos/uC-Clk/Source/clk.c **** 
2616:rtos/uC-Clk/Source/clk.c **** 
2617:rtos/uC-Clk/Source/clk.c **** /*
2618:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2619:rtos/uC-Clk/Source/clk.c **** *                                        Clk_IsDayOfWkValid()
2620:rtos/uC-Clk/Source/clk.c **** *
2621:rtos/uC-Clk/Source/clk.c **** * Description : Determine if day of week is valid.
2622:rtos/uC-Clk/Source/clk.c **** *
2623:rtos/uC-Clk/Source/clk.c **** * Argument(s) : day_of_wk   Day of week value [1 to 7] / [CLK_DAY_OF_WK_SUN to CLK_DAY_OF_WK_SAT].
2624:rtos/uC-Clk/Source/clk.c **** *
2625:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, if day of week is valid.
2626:rtos/uC-Clk/Source/clk.c **** *
2627:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  otherwise.
2628:rtos/uC-Clk/Source/clk.c **** *
2629:rtos/uC-Clk/Source/clk.c **** * Note(s)     : none.
2630:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2631:rtos/uC-Clk/Source/clk.c **** */
2632:rtos/uC-Clk/Source/clk.c **** 
2633:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsDayOfWkValid (CLK_DAY  day_of_wk)
2634:rtos/uC-Clk/Source/clk.c **** {
 296              		.loc 1 2634 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
2635:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DAY OF
2636:rtos/uC-Clk/Source/clk.c ****     if ((day_of_wk < CLK_FIRST_DAY_OF_WK    ) ||
 301              		.loc 1 2636 5 view .LVU68
 302              		.loc 1 2636 47 is_stmt 0 view .LVU69
 303 0000 0138     		subs	r0, r0, #1
 304              	.LVL30:
 305              		.loc 1 2636 47 view .LVU70
 306 0002 80B2     		uxth	r0, r0
 307              		.loc 1 2636 8 view .LVU71
 308 0004 0628     		cmp	r0, #6
 309 0006 01D8     		bhi	.L34
2637:rtos/uC-Clk/Source/clk.c ****         (day_of_wk > DEF_TIME_NBR_DAY_PER_WK)) {
2638:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Invalid day of week, must be >= %u & < %u\n\r",
2639:rtos/uC-Clk/Source/clk.c ****                        (unsigned int)CLK_FIRST_DAY_OF_WK,
2640:rtos/uC-Clk/Source/clk.c ****                        (unsigned int)DEF_TIME_NBR_DAY_PER_WK));
2641:rtos/uC-Clk/Source/clk.c ****         return (DEF_NO);
2642:rtos/uC-Clk/Source/clk.c ****     }
2643:rtos/uC-Clk/Source/clk.c **** 
2644:rtos/uC-Clk/Source/clk.c ****     return (DEF_YES);
 310              		.loc 1 2644 12 view .LVU72
 311 0008 0120     		movs	r0, #1
ARM GAS  /tmp/cct1pkgW.s 			page 53


 312 000a 7047     		bx	lr
 313              	.L34:
2641:rtos/uC-Clk/Source/clk.c ****     }
 314              		.loc 1 2641 16 view .LVU73
 315 000c 0020     		movs	r0, #0
2645:rtos/uC-Clk/Source/clk.c **** }
 316              		.loc 1 2645 1 view .LVU74
 317 000e 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE34:
 321              		.section	.text.Clk_IsTimeValid,"ax",%progbits
 322              		.align	1
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	Clk_IsTimeValid:
 329              	.LVL31:
 330              	.LFB35:
2646:rtos/uC-Clk/Source/clk.c **** 
2647:rtos/uC-Clk/Source/clk.c **** 
2648:rtos/uC-Clk/Source/clk.c **** /*
2649:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2650:rtos/uC-Clk/Source/clk.c **** *                                          Clk_IsTimeValid()
2651:rtos/uC-Clk/Source/clk.c **** *
2652:rtos/uC-Clk/Source/clk.c **** * Description : Determine if time values are valid.
2653:rtos/uC-Clk/Source/clk.c **** *
2654:rtos/uC-Clk/Source/clk.c **** * Argument(s) : hr          Hours   value [0 to 23].
2655:rtos/uC-Clk/Source/clk.c **** *
2656:rtos/uC-Clk/Source/clk.c **** *               min         Minutes value [0 to 59].
2657:rtos/uC-Clk/Source/clk.c **** *
2658:rtos/uC-Clk/Source/clk.c **** *               sec         Seconds value [0 to 60] (see Note #1).
2659:rtos/uC-Clk/Source/clk.c **** *
2660:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, if time is valid.
2661:rtos/uC-Clk/Source/clk.c **** *
2662:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  otherwise.
2663:rtos/uC-Clk/Source/clk.c **** *
2664:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Seconds value of 60 is valid to be compatible with leap second adjustment and
2665:rtos/uC-Clk/Source/clk.c **** *                   the atomic clock time structure.
2666:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2667:rtos/uC-Clk/Source/clk.c **** */
2668:rtos/uC-Clk/Source/clk.c **** 
2669:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsTimeValid (CLK_HR     hr,
2670:rtos/uC-Clk/Source/clk.c ****                                       CLK_MONTH  min,
2671:rtos/uC-Clk/Source/clk.c ****                                       CLK_DAY    sec)
2672:rtos/uC-Clk/Source/clk.c **** {
 331              		.loc 1 2672 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
2673:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ VALIDATE HOUR
2674:rtos/uC-Clk/Source/clk.c ****     if (hr  >= DEF_TIME_NBR_HR_PER_DAY) {
 336              		.loc 1 2674 5 view .LVU76
 337              		.loc 1 2674 8 is_stmt 0 view .LVU77
 338 0000 1728     		cmp	r0, #23
 339 0002 05D8     		bhi	.L37
ARM GAS  /tmp/cct1pkgW.s 			page 54


2675:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Invalid hour, must be < %u\n\r",    (unsigned int)DEF_TIME_NBR_HR_PER_DAY))
2676:rtos/uC-Clk/Source/clk.c ****         return (DEF_NO);
2677:rtos/uC-Clk/Source/clk.c ****     }
2678:rtos/uC-Clk/Source/clk.c **** 
2679:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------- VALIDATE MIN
2680:rtos/uC-Clk/Source/clk.c ****     if (min >= DEF_TIME_NBR_MIN_PER_HR) {
 340              		.loc 1 2680 5 is_stmt 1 view .LVU78
 341              		.loc 1 2680 8 is_stmt 0 view .LVU79
 342 0004 3B29     		cmp	r1, #59
 343 0006 05D8     		bhi	.L38
2681:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Invalid minute, must be < %u\n\r",  (unsigned int)DEF_TIME_NBR_MIN_PER_HR))
2682:rtos/uC-Clk/Source/clk.c ****         return (DEF_NO);
2683:rtos/uC-Clk/Source/clk.c ****     }
2684:rtos/uC-Clk/Source/clk.c **** 
2685:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------- VALIDATE SEC
2686:rtos/uC-Clk/Source/clk.c ****     if (sec >  DEF_TIME_NBR_SEC_PER_MIN) {
 344              		.loc 1 2686 5 is_stmt 1 view .LVU80
 345              		.loc 1 2686 8 is_stmt 0 view .LVU81
 346 0008 3C2A     		cmp	r2, #60
 347 000a 05D8     		bhi	.L39
2687:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Invalid second, must be =< %u\n\r", (unsigned int)DEF_TIME_NBR_SEC_PER_MIN)
2688:rtos/uC-Clk/Source/clk.c ****         return (DEF_NO);
2689:rtos/uC-Clk/Source/clk.c ****     }
2690:rtos/uC-Clk/Source/clk.c **** 
2691:rtos/uC-Clk/Source/clk.c ****     return (DEF_YES);
 348              		.loc 1 2691 12 view .LVU82
 349 000c 0120     		movs	r0, #1
 350              	.LVL32:
 351              		.loc 1 2691 12 view .LVU83
 352 000e 7047     		bx	lr
 353              	.LVL33:
 354              	.L37:
2676:rtos/uC-Clk/Source/clk.c ****     }
 355              		.loc 1 2676 16 view .LVU84
 356 0010 0020     		movs	r0, #0
 357              	.LVL34:
2676:rtos/uC-Clk/Source/clk.c ****     }
 358              		.loc 1 2676 16 view .LVU85
 359 0012 7047     		bx	lr
 360              	.LVL35:
 361              	.L38:
2682:rtos/uC-Clk/Source/clk.c ****     }
 362              		.loc 1 2682 16 view .LVU86
 363 0014 0020     		movs	r0, #0
 364              	.LVL36:
2682:rtos/uC-Clk/Source/clk.c ****     }
 365              		.loc 1 2682 16 view .LVU87
 366 0016 7047     		bx	lr
 367              	.LVL37:
 368              	.L39:
2688:rtos/uC-Clk/Source/clk.c ****     }
 369              		.loc 1 2688 16 view .LVU88
 370 0018 0020     		movs	r0, #0
 371              	.LVL38:
2692:rtos/uC-Clk/Source/clk.c **** }
 372              		.loc 1 2692 1 view .LVU89
 373 001a 7047     		bx	lr
ARM GAS  /tmp/cct1pkgW.s 			page 55


 374              		.cfi_endproc
 375              	.LFE35:
 377              		.section	.text.Clk_IsTZValid,"ax",%progbits
 378              		.align	1
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv4-sp-d16
 384              	Clk_IsTZValid:
 385              	.LVL39:
 386              	.LFB36:
2693:rtos/uC-Clk/Source/clk.c **** 
2694:rtos/uC-Clk/Source/clk.c **** 
2695:rtos/uC-Clk/Source/clk.c **** /*
2696:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2697:rtos/uC-Clk/Source/clk.c **** *                                           Clk_IsTZValid()
2698:rtos/uC-Clk/Source/clk.c **** *
2699:rtos/uC-Clk/Source/clk.c **** * Description : Determine if time zone is valid.
2700:rtos/uC-Clk/Source/clk.c **** *
2701:rtos/uC-Clk/Source/clk.c **** * Argument(s) : tz_sec      Time zone offset (in seconds, +|- from UTC) [-43200 to 43200].
2702:rtos/uC-Clk/Source/clk.c **** *
2703:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, if time zone is valid.
2704:rtos/uC-Clk/Source/clk.c **** *
2705:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  otherwise.
2706:rtos/uC-Clk/Source/clk.c **** *
2707:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Time zone is based ('tz_sec') on Coordinated Universal Time (UTC) & has valid v
2708:rtos/uC-Clk/Source/clk.c **** *
2709:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
2710:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minutes
2711:rtos/uC-Clk/Source/clk.c **** *
2712:rtos/uC-Clk/Source/clk.c **** *               (2) Absolute value of the time zone offset is stored into 'CLK_TS_SEC' data type to
2713:rtos/uC-Clk/Source/clk.c **** *                   compliant with unsigned integer verification/operations.
2714:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2715:rtos/uC-Clk/Source/clk.c **** */
2716:rtos/uC-Clk/Source/clk.c **** 
2717:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsTZValid (CLK_TZ_SEC  tz_sec)
2718:rtos/uC-Clk/Source/clk.c **** {
 387              		.loc 1 2718 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
2719:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC  tz_sec_abs;                                     /* See Note #2.                    
 392              		.loc 1 2719 5 view .LVU91
2720:rtos/uC-Clk/Source/clk.c **** 
2721:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------- VALIDATE TZ PRECI
2722:rtos/uC-Clk/Source/clk.c ****     tz_sec_abs = DEF_ABS(tz_sec);
 393              		.loc 1 2722 5 view .LVU92
 394              		.loc 1 2722 18 is_stmt 0 view .LVU93
 395 0000 0028     		cmp	r0, #0
 396 0002 B8BF     		it	lt
 397 0004 4042     		rsblt	r0, r0, #0
 398              	.LVL40:
2723:rtos/uC-Clk/Source/clk.c ****     if ((tz_sec_abs % CLK_TZ_SEC_PRECISION) != 0u) {            /* See Note #1b.                   
 399              		.loc 1 2723 5 is_stmt 1 view .LVU94
 400              		.loc 1 2723 21 is_stmt 0 view .LVU95
 401 0006 094B     		ldr	r3, .L44
ARM GAS  /tmp/cct1pkgW.s 			page 56


 402 0008 A3FB0023 		umull	r2, r3, r3, r0
 403 000c 5B0A     		lsrs	r3, r3, #9
 404 000e 4FF46172 		mov	r2, #900
 405 0012 02FB1303 		mls	r3, r2, r3, r0
 406              		.loc 1 2723 8 view .LVU96
 407 0016 2BB9     		cbnz	r3, .L42
2724:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Invalid time zone, must be multiple of %d seconds\n\r",
2725:rtos/uC-Clk/Source/clk.c ****                        (  signed int)CLK_TZ_SEC_PRECISION));
2726:rtos/uC-Clk/Source/clk.c ****         return (DEF_NO);
2727:rtos/uC-Clk/Source/clk.c ****     }
2728:rtos/uC-Clk/Source/clk.c **** 
2729:rtos/uC-Clk/Source/clk.c ****                                                                 /* --------------- VALIDATE TZ MIN-
2730:rtos/uC-Clk/Source/clk.c ****     if (tz_sec_abs > CLK_TZ_SEC_MAX) {                          /* See Note #1a.                   
 408              		.loc 1 2730 5 is_stmt 1 view .LVU97
 409              		.loc 1 2730 8 is_stmt 0 view .LVU98
 410 0018 4AF6C003 		movw	r3, #43200
 411 001c 9842     		cmp	r0, r3
 412 001e 03D8     		bhi	.L43
2731:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Invalid time zone, must be > %d & < %u\n\r",
2732:rtos/uC-Clk/Source/clk.c ****                        (  signed int)CLK_TZ_SEC_MIN,
2733:rtos/uC-Clk/Source/clk.c ****                        (unsigned int)CLK_TZ_SEC_MAX));
2734:rtos/uC-Clk/Source/clk.c ****         return (DEF_NO);
2735:rtos/uC-Clk/Source/clk.c ****     }
2736:rtos/uC-Clk/Source/clk.c **** 
2737:rtos/uC-Clk/Source/clk.c ****     return (DEF_YES);
 413              		.loc 1 2737 12 view .LVU99
 414 0020 0120     		movs	r0, #1
 415              	.LVL41:
 416              		.loc 1 2737 12 view .LVU100
 417 0022 7047     		bx	lr
 418              	.LVL42:
 419              	.L42:
2726:rtos/uC-Clk/Source/clk.c ****     }
 420              		.loc 1 2726 16 view .LVU101
 421 0024 0020     		movs	r0, #0
 422              	.LVL43:
2726:rtos/uC-Clk/Source/clk.c ****     }
 423              		.loc 1 2726 16 view .LVU102
 424 0026 7047     		bx	lr
 425              	.LVL44:
 426              	.L43:
2734:rtos/uC-Clk/Source/clk.c ****     }
 427              		.loc 1 2734 16 view .LVU103
 428 0028 0020     		movs	r0, #0
 429              	.LVL45:
2738:rtos/uC-Clk/Source/clk.c **** }
 430              		.loc 1 2738 1 view .LVU104
 431 002a 7047     		bx	lr
 432              	.L45:
 433              		.align	2
 434              	.L44:
 435 002c C5B3A291 		.word	-1851608123
 436              		.cfi_endproc
 437              	.LFE36:
 439              		.section	.text.Clk_IsDateTimeValidHandler,"ax",%progbits
 440              		.align	1
 441              		.syntax unified
ARM GAS  /tmp/cct1pkgW.s 			page 57


 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv4-sp-d16
 446              	Clk_IsDateTimeValidHandler:
 447              	.LVL46:
 448              	.LFB37:
2739:rtos/uC-Clk/Source/clk.c **** 
2740:rtos/uC-Clk/Source/clk.c **** 
2741:rtos/uC-Clk/Source/clk.c **** /*
2742:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2743:rtos/uC-Clk/Source/clk.c **** *                                    Clk_IsDateTimeValidHandler()
2744:rtos/uC-Clk/Source/clk.c **** *
2745:rtos/uC-Clk/Source/clk.c **** * Description : Determine if date/time structure is valid.
2746:rtos/uC-Clk/Source/clk.c **** *
2747:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that contains the date/time structure to valida
2748:rtos/uC-Clk/Source/clk.c **** *
2749:rtos/uC-Clk/Source/clk.c **** *               yr_start        Start year of the epoch.
2750:rtos/uC-Clk/Source/clk.c **** *
2751:rtos/uC-Clk/Source/clk.c **** *               yr_end          End   year of the epoch.
2752:rtos/uC-Clk/Source/clk.c **** *
2753:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_YES, date/time structure is valid.
2754:rtos/uC-Clk/Source/clk.c **** *
2755:rtos/uC-Clk/Source/clk.c **** *               DEF_NO,  otherwise.
2756:rtos/uC-Clk/Source/clk.c **** *
2757:rtos/uC-Clk/Source/clk.c **** * Note(s)     : none.
2758:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2759:rtos/uC-Clk/Source/clk.c **** */
2760:rtos/uC-Clk/Source/clk.c **** 
2761:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_IsDateTimeValidHandler (CLK_DATE_TIME  *p_date_time,
2762:rtos/uC-Clk/Source/clk.c ****                                                  CLK_YR          yr_start,
2763:rtos/uC-Clk/Source/clk.c ****                                                  CLK_YR          yr_end)
2764:rtos/uC-Clk/Source/clk.c **** {
 449              		.loc 1 2764 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
2765:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 453              		.loc 1 2765 5 view .LVU106
2766:rtos/uC-Clk/Source/clk.c **** 
2767:rtos/uC-Clk/Source/clk.c **** 
2768:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* -------------- VALIDATE DATE/TIM
2769:rtos/uC-Clk/Source/clk.c ****     if (p_date_time == (CLK_DATE_TIME *)0) {
 454              		.loc 1 2769 5 view .LVU107
 455              		.loc 1 2769 8 is_stmt 0 view .LVU108
 456 0000 28B3     		cbz	r0, .L48
2764:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 457              		.loc 1 2764 1 view .LVU109
 458 0002 30B5     		push	{r4, r5, lr}
 459              	.LCFI4:
 460              		.cfi_def_cfa_offset 12
 461              		.cfi_offset 4, -12
 462              		.cfi_offset 5, -8
 463              		.cfi_offset 14, -4
 464 0004 83B0     		sub	sp, sp, #12
 465              	.LCFI5:
 466              		.cfi_def_cfa_offset 24
 467 0006 0B46     		mov	r3, r1
ARM GAS  /tmp/cct1pkgW.s 			page 58


 468 0008 0446     		mov	r4, r0
2770:rtos/uC-Clk/Source/clk.c ****         return (DEF_NO);
2771:rtos/uC-Clk/Source/clk.c ****     }
2772:rtos/uC-Clk/Source/clk.c **** #endif
2773:rtos/uC-Clk/Source/clk.c **** 
2774:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ VALIDATE DATE
2775:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDateValid(p_date_time->Yr, p_date_time->Month, p_date_time->Day, yr_start, yr_end
 469              		.loc 1 2775 5 is_stmt 1 view .LVU110
 470              		.loc 1 2775 13 is_stmt 0 view .LVU111
 471 000a 0588     		ldrh	r5, [r0]
 472 000c 0092     		str	r2, [sp]
 473 000e 8288     		ldrh	r2, [r0, #4]
 474              	.LVL47:
 475              		.loc 1 2775 13 view .LVU112
 476 0010 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 477              	.LVL48:
 478              		.loc 1 2775 13 view .LVU113
 479 0012 2846     		mov	r0, r5
 480              	.LVL49:
 481              		.loc 1 2775 13 view .LVU114
 482 0014 FFF7FEFF 		bl	Clk_IsDateValid
 483              	.LVL50:
2776:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 484              		.loc 1 2776 5 is_stmt 1 view .LVU115
 485              		.loc 1 2776 8 is_stmt 0 view .LVU116
 486 0018 0128     		cmp	r0, #1
 487 001a 1AD1     		bne	.L49
2777:rtos/uC-Clk/Source/clk.c ****         return  (DEF_NO);
2778:rtos/uC-Clk/Source/clk.c ****     }
2779:rtos/uC-Clk/Source/clk.c **** 
2780:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ VALIDATE TIME
2781:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsTimeValid(p_date_time->Hr, p_date_time->Min, p_date_time->Sec);
 488              		.loc 1 2781 5 is_stmt 1 view .LVU117
 489              		.loc 1 2781 13 is_stmt 0 view .LVU118
 490 001c 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 491 001e E17A     		ldrb	r1, [r4, #11]	@ zero_extendqisi2
 492 0020 A07A     		ldrb	r0, [r4, #10]	@ zero_extendqisi2
 493              	.LVL51:
 494              		.loc 1 2781 13 view .LVU119
 495 0022 FFF7FEFF 		bl	Clk_IsTimeValid
 496              	.LVL52:
2782:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 497              		.loc 1 2782 5 is_stmt 1 view .LVU120
 498              		.loc 1 2782 8 is_stmt 0 view .LVU121
 499 0026 0128     		cmp	r0, #1
 500 0028 16D1     		bne	.L50
2783:rtos/uC-Clk/Source/clk.c ****         return  (DEF_NO);
2784:rtos/uC-Clk/Source/clk.c ****     }
2785:rtos/uC-Clk/Source/clk.c **** 
2786:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DAY OF
2787:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDayOfWkValid(p_date_time->DayOfWk);
 501              		.loc 1 2787 5 is_stmt 1 view .LVU122
 502              		.loc 1 2787 13 is_stmt 0 view .LVU123
 503 002a E088     		ldrh	r0, [r4, #6]
 504              	.LVL53:
 505              		.loc 1 2787 13 view .LVU124
 506 002c FFF7FEFF 		bl	Clk_IsDayOfWkValid
ARM GAS  /tmp/cct1pkgW.s 			page 59


 507              	.LVL54:
2788:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 508              		.loc 1 2788 5 is_stmt 1 view .LVU125
 509              		.loc 1 2788 8 is_stmt 0 view .LVU126
 510 0030 0128     		cmp	r0, #1
 511 0032 13D1     		bne	.L51
2789:rtos/uC-Clk/Source/clk.c ****         return  (DEF_NO);
2790:rtos/uC-Clk/Source/clk.c ****     }
2791:rtos/uC-Clk/Source/clk.c **** 
2792:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DAY OF
2793:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDayOfYrValid(p_date_time->Yr, p_date_time->DayOfYr);
 512              		.loc 1 2793 5 is_stmt 1 view .LVU127
 513              		.loc 1 2793 13 is_stmt 0 view .LVU128
 514 0034 2189     		ldrh	r1, [r4, #8]
 515 0036 2846     		mov	r0, r5
 516              	.LVL55:
 517              		.loc 1 2793 13 view .LVU129
 518 0038 FFF7FEFF 		bl	Clk_IsDayOfYrValid
 519              	.LVL56:
2794:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 520              		.loc 1 2794 5 is_stmt 1 view .LVU130
 521              		.loc 1 2794 8 is_stmt 0 view .LVU131
 522 003c 0128     		cmp	r0, #1
 523 003e 0FD1     		bne	.L52
2795:rtos/uC-Clk/Source/clk.c ****         return  (DEF_NO);
2796:rtos/uC-Clk/Source/clk.c ****     }
2797:rtos/uC-Clk/Source/clk.c **** 
2798:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------- VALIDATE TZ 
2799:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsTZValid(p_date_time->TZ_sec);
 524              		.loc 1 2799 5 is_stmt 1 view .LVU132
 525              		.loc 1 2799 13 is_stmt 0 view .LVU133
 526 0040 2069     		ldr	r0, [r4, #16]
 527              	.LVL57:
 528              		.loc 1 2799 13 view .LVU134
 529 0042 FFF7FEFF 		bl	Clk_IsTZValid
 530              	.LVL58:
2800:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 531              		.loc 1 2800 5 is_stmt 1 view .LVU135
 532              		.loc 1 2800 8 is_stmt 0 view .LVU136
 533 0046 0128     		cmp	r0, #1
 534 0048 04D0     		beq	.L47
2801:rtos/uC-Clk/Source/clk.c ****         return  (DEF_NO);
 535              		.loc 1 2801 17 view .LVU137
 536 004a 0020     		movs	r0, #0
 537              	.LVL59:
 538              		.loc 1 2801 17 view .LVU138
 539 004c 02E0     		b	.L47
 540              	.LVL60:
 541              	.L48:
 542              	.LCFI6:
 543              		.cfi_def_cfa_offset 0
 544              		.cfi_restore 4
 545              		.cfi_restore 5
 546              		.cfi_restore 14
2770:rtos/uC-Clk/Source/clk.c ****     }
 547              		.loc 1 2770 16 view .LVU139
 548 004e 0020     		movs	r0, #0
ARM GAS  /tmp/cct1pkgW.s 			page 60


 549              	.LVL61:
2802:rtos/uC-Clk/Source/clk.c ****     }
2803:rtos/uC-Clk/Source/clk.c **** 
2804:rtos/uC-Clk/Source/clk.c **** 
2805:rtos/uC-Clk/Source/clk.c ****     return (DEF_YES);
2806:rtos/uC-Clk/Source/clk.c **** }
 550              		.loc 1 2806 1 view .LVU140
 551 0050 7047     		bx	lr
 552              	.LVL62:
 553              	.L49:
 554              	.LCFI7:
 555              		.cfi_def_cfa_offset 24
 556              		.cfi_offset 4, -12
 557              		.cfi_offset 5, -8
 558              		.cfi_offset 14, -4
2777:rtos/uC-Clk/Source/clk.c ****     }
 559              		.loc 1 2777 17 view .LVU141
 560 0052 0020     		movs	r0, #0
 561              	.LVL63:
 562              	.L47:
 563              		.loc 1 2806 1 view .LVU142
 564 0054 03B0     		add	sp, sp, #12
 565              	.LCFI8:
 566              		.cfi_remember_state
 567              		.cfi_def_cfa_offset 12
 568              		@ sp needed
 569 0056 30BD     		pop	{r4, r5, pc}
 570              	.LVL64:
 571              	.L50:
 572              	.LCFI9:
 573              		.cfi_restore_state
2783:rtos/uC-Clk/Source/clk.c ****     }
 574              		.loc 1 2783 17 view .LVU143
 575 0058 0020     		movs	r0, #0
 576              	.LVL65:
2783:rtos/uC-Clk/Source/clk.c ****     }
 577              		.loc 1 2783 17 view .LVU144
 578 005a FBE7     		b	.L47
 579              	.LVL66:
 580              	.L51:
2789:rtos/uC-Clk/Source/clk.c ****     }
 581              		.loc 1 2789 17 view .LVU145
 582 005c 0020     		movs	r0, #0
 583              	.LVL67:
2789:rtos/uC-Clk/Source/clk.c ****     }
 584              		.loc 1 2789 17 view .LVU146
 585 005e F9E7     		b	.L47
 586              	.LVL68:
 587              	.L52:
2795:rtos/uC-Clk/Source/clk.c ****     }
 588              		.loc 1 2795 17 view .LVU147
 589 0060 0020     		movs	r0, #0
 590              	.LVL69:
2795:rtos/uC-Clk/Source/clk.c ****     }
 591              		.loc 1 2795 17 view .LVU148
 592 0062 F7E7     		b	.L47
 593              		.cfi_endproc
ARM GAS  /tmp/cct1pkgW.s 			page 61


 594              	.LFE37:
 596              		.section	.text.Clk_DateTimeToTS_Handler,"ax",%progbits
 597              		.align	1
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu fpv4-sp-d16
 603              	Clk_DateTimeToTS_Handler:
 604              	.LVL70:
 605              	.LFB42:
2807:rtos/uC-Clk/Source/clk.c **** 
2808:rtos/uC-Clk/Source/clk.c **** 
2809:rtos/uC-Clk/Source/clk.c **** /*
2810:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2811:rtos/uC-Clk/Source/clk.c **** *                                       Clk_GetDayOfYrHandler()
2812:rtos/uC-Clk/Source/clk.c **** *
2813:rtos/uC-Clk/Source/clk.c **** * Description : Get the day of year.
2814:rtos/uC-Clk/Source/clk.c **** *
2815:rtos/uC-Clk/Source/clk.c **** * Argument(s) : yr          Year  value [1900 to 2135].
2816:rtos/uC-Clk/Source/clk.c **** *               --          Argument checked in Clk_TS_ToDateTimeHandler(),
2817:rtos/uC-Clk/Source/clk.c **** *                                               Clk_DateTimeMakeHandler().
2818:rtos/uC-Clk/Source/clk.c **** *
2819:rtos/uC-Clk/Source/clk.c **** *               month       Month value [1 to 12] / [CLK_MONTH_JAN to CLK_MONTH_DEC].
2820:rtos/uC-Clk/Source/clk.c **** *               -----       Argument checked in Clk_TS_ToDateTimeHandler(),
2821:rtos/uC-Clk/Source/clk.c **** *                                               Clk_DateTimeMakeHandler().
2822:rtos/uC-Clk/Source/clk.c **** *
2823:rtos/uC-Clk/Source/clk.c **** *               day         Day   value [1 to 31].
2824:rtos/uC-Clk/Source/clk.c **** *               ---         Argument checked in Clk_TS_ToDateTimeHandler(),
2825:rtos/uC-Clk/Source/clk.c **** *                                               Clk_DateTimeMakeHandler().
2826:rtos/uC-Clk/Source/clk.c **** *
2827:rtos/uC-Clk/Source/clk.c **** * Return(s)   : Day of year [1 to 366].
2828:rtos/uC-Clk/Source/clk.c **** *
2829:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Since global performance can be affected by the calculation of the days of year
2830:rtos/uC-Clk/Source/clk.c **** *                   caches have been implemented:
2831:rtos/uC-Clk/Source/clk.c **** *
2832:rtos/uC-Clk/Source/clk.c **** *                   (a) Clk_CacheMonth store the month requested.
2833:rtos/uC-Clk/Source/clk.c **** *
2834:rtos/uC-Clk/Source/clk.c **** *                   (b) Clk_CacheMonthDays store the number of days calculated for the month stored
2835:rtos/uC-Clk/Source/clk.c **** *                       Clk_CacheMonth
2836:rtos/uC-Clk/Source/clk.c **** *
2837:rtos/uC-Clk/Source/clk.c **** *                   (c) Clk_CacheLeapYr stores if the previous year was a leap year or not.
2838:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2839:rtos/uC-Clk/Source/clk.c **** */
2840:rtos/uC-Clk/Source/clk.c **** 
2841:rtos/uC-Clk/Source/clk.c **** static  CLK_DAY  Clk_GetDayOfYrHandler (CLK_YR     yr,
2842:rtos/uC-Clk/Source/clk.c ****                                         CLK_MONTH  month,
2843:rtos/uC-Clk/Source/clk.c ****                                         CLK_DAY    day)
2844:rtos/uC-Clk/Source/clk.c **** {
2845:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  leap_yr;
2846:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U   leap_yr_ix;
2847:rtos/uC-Clk/Source/clk.c ****     CLK_MONTH    month_ix;
2848:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      day_of_yr;
2849:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      days_month;
2850:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      days_in_month;
2851:rtos/uC-Clk/Source/clk.c ****     CLK_MONTH    cached_month;
2852:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      cached_month_days;
2853:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U   cached_leap_yr;
ARM GAS  /tmp/cct1pkgW.s 			page 62


2854:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
2855:rtos/uC-Clk/Source/clk.c **** 
2856:rtos/uC-Clk/Source/clk.c **** 
2857:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Day of year of  %u, %u, %u = ",
2858:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)day,
2859:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)month,
2860:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)yr));
2861:rtos/uC-Clk/Source/clk.c **** 
2862:rtos/uC-Clk/Source/clk.c ****     day_of_yr  =  day - CLK_FIRST_DAY_OF_MONTH;
2863:rtos/uC-Clk/Source/clk.c ****     leap_yr    =  Clk_IsLeapYr(yr);
2864:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix = (leap_yr == DEF_YES) ? 1u : 0u;
2865:rtos/uC-Clk/Source/clk.c **** 
2866:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_ENTER();
2867:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
2868:rtos/uC-Clk/Source/clk.c ****     cached_month_days = Clk_CacheMonthDays;
2869:rtos/uC-Clk/Source/clk.c ****     cached_leap_yr    = Clk_CacheLeapYr;
2870:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
2871:rtos/uC-Clk/Source/clk.c ****                                                                 /* Check if cached values can be us
2872:rtos/uC-Clk/Source/clk.c ****     if ((cached_month   != month) ||                            /* See Note #1a.                   
2873:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #1c.                   
2874:rtos/uC-Clk/Source/clk.c ****         days_month = 0u;
2875:rtos/uC-Clk/Source/clk.c ****         for (month_ix = CLK_FIRST_MONTH_OF_YR; month_ix < month; month_ix++) {
2876:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
2877:rtos/uC-Clk/Source/clk.c ****             days_month    += days_in_month;
2878:rtos/uC-Clk/Source/clk.c ****         }
2879:rtos/uC-Clk/Source/clk.c **** 
2880:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_ENTER();
2881:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #1a.                   
2882:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonthDays = days_month;                        /* See Note #1b.                   
2883:rtos/uC-Clk/Source/clk.c ****         Clk_CacheLeapYr    = leap_yr;
2884:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
2885:rtos/uC-Clk/Source/clk.c **** 
2886:rtos/uC-Clk/Source/clk.c ****     } else {
2887:rtos/uC-Clk/Source/clk.c ****         days_month = cached_month_days;                         /* See Note #1b.                   
2888:rtos/uC-Clk/Source/clk.c ****     }
2889:rtos/uC-Clk/Source/clk.c **** 
2890:rtos/uC-Clk/Source/clk.c ****     day_of_yr += days_month;
2891:rtos/uC-Clk/Source/clk.c ****     day_of_yr += CLK_FIRST_DAY_OF_YR;
2892:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Day of year = %u\n\r", (unsigned int)day_of_yr));
2893:rtos/uC-Clk/Source/clk.c **** 
2894:rtos/uC-Clk/Source/clk.c ****     return (day_of_yr);
2895:rtos/uC-Clk/Source/clk.c **** }
2896:rtos/uC-Clk/Source/clk.c **** 
2897:rtos/uC-Clk/Source/clk.c **** 
2898:rtos/uC-Clk/Source/clk.c **** /*
2899:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2900:rtos/uC-Clk/Source/clk.c **** *                                       Clk_GetDayOfWkHandler()
2901:rtos/uC-Clk/Source/clk.c **** *
2902:rtos/uC-Clk/Source/clk.c **** * Description : Get the day of week.
2903:rtos/uC-Clk/Source/clk.c **** *
2904:rtos/uC-Clk/Source/clk.c **** * Argument(s) : yr          Year  value [1900 to 2135].
2905:rtos/uC-Clk/Source/clk.c **** *               --          Argument checked in Clk_GetDayOfWk(),
2906:rtos/uC-Clk/Source/clk.c **** *                                               Clk_TS_ToDateTimeHandler(),
2907:rtos/uC-Clk/Source/clk.c **** *                                               Clk_DateTimeMakeHandler().
2908:rtos/uC-Clk/Source/clk.c **** *
2909:rtos/uC-Clk/Source/clk.c **** *               month       Month value [1 to 12] / [CLK_MONTH_JAN to CLK_MONTH_DEC].
2910:rtos/uC-Clk/Source/clk.c **** *               -----       Argument checked in Clk_GetDayOfWk(),
ARM GAS  /tmp/cct1pkgW.s 			page 63


2911:rtos/uC-Clk/Source/clk.c **** *                                               Clk_TS_ToDateTimeHandler(),
2912:rtos/uC-Clk/Source/clk.c **** *                                               Clk_DateTimeMakeHandler().
2913:rtos/uC-Clk/Source/clk.c **** *
2914:rtos/uC-Clk/Source/clk.c **** *               day         Day   value [1 to 31].
2915:rtos/uC-Clk/Source/clk.c **** *               ---         Argument checked in Clk_GetDayOfWk(),
2916:rtos/uC-Clk/Source/clk.c **** *                                               Clk_TS_ToDateTimeHandler(),
2917:rtos/uC-Clk/Source/clk.c **** *                                               Clk_DateTimeMakeHandler().
2918:rtos/uC-Clk/Source/clk.c **** *
2919:rtos/uC-Clk/Source/clk.c **** * Return(s)   : Day of week [1 to 7] / [CLK_DAY_OF_WK_SUN to CLK_DAY_OF_WK_SAT].
2920:rtos/uC-Clk/Source/clk.c **** *
2921:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Finds the day of week at the earliest supported year (NTP) and its first day of
2922:rtos/uC-Clk/Source/clk.c **** *
2923:rtos/uC-Clk/Source/clk.c **** *                   (a) CLK_NTP_EPOCH_YR_START
2924:rtos/uC-Clk/Source/clk.c **** *                   (b) CLK_NTP_EPOCH_DAY_OF_WK
2925:rtos/uC-Clk/Source/clk.c **** *
2926:rtos/uC-Clk/Source/clk.c **** *               (2) Since global performance can be affected by the calculation of the days of week
2927:rtos/uC-Clk/Source/clk.c **** *                   caches have been implemented:
2928:rtos/uC-Clk/Source/clk.c **** *
2929:rtos/uC-Clk/Source/clk.c **** *                   (a) Clk_CacheMonth store the last month requested.
2930:rtos/uC-Clk/Source/clk.c **** *
2931:rtos/uC-Clk/Source/clk.c **** *                   (b) Clk_CacheMonthDays store the last number of days calculated for the month s
2932:rtos/uC-Clk/Source/clk.c **** *                       Clk_CacheMonth.
2933:rtos/uC-Clk/Source/clk.c **** *
2934:rtos/uC-Clk/Source/clk.c **** *                   (c) Clk_CacheYr store the last year requested.
2935:rtos/uC-Clk/Source/clk.c **** *
2936:rtos/uC-Clk/Source/clk.c **** *                   (d) Clk_CacheYrDays store the last number of days calculated for the year store
2937:rtos/uC-Clk/Source/clk.c **** *                       Clk_CacheYr.
2938:rtos/uC-Clk/Source/clk.c **** *
2939:rtos/uC-Clk/Source/clk.c **** *                   (e) Clk_CacheLeapYr stores if the previous year was a leap year or not.
2940:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
2941:rtos/uC-Clk/Source/clk.c **** */
2942:rtos/uC-Clk/Source/clk.c **** 
2943:rtos/uC-Clk/Source/clk.c **** static  CLK_DAY  Clk_GetDayOfWkHandler (CLK_YR     yr,
2944:rtos/uC-Clk/Source/clk.c ****                                         CLK_MONTH  month,
2945:rtos/uC-Clk/Source/clk.c ****                                         CLK_DAY    day)
2946:rtos/uC-Clk/Source/clk.c **** {
2947:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   leap_yr;
2948:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U    leap_yr_ix;
2949:rtos/uC-Clk/Source/clk.c ****     CLK_YR        yr_ix;
2950:rtos/uC-Clk/Source/clk.c ****     CLK_MONTH     month_ix;
2951:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       day_of_wk;
2952:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       days_in_month;
2953:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       days_month;
2954:rtos/uC-Clk/Source/clk.c ****     CLK_NBR_DAYS  days_yr;
2955:rtos/uC-Clk/Source/clk.c ****     CLK_NBR_DAYS  days;
2956:rtos/uC-Clk/Source/clk.c ****     CLK_YR        cached_yr;
2957:rtos/uC-Clk/Source/clk.c ****     CLK_NBR_DAYS  cached_yr_days;
2958:rtos/uC-Clk/Source/clk.c ****     CLK_MONTH     cached_month;
2959:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       cached_month_days;
2960:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U    cached_leap_yr;
2961:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
2962:rtos/uC-Clk/Source/clk.c **** 
2963:rtos/uC-Clk/Source/clk.c **** 
2964:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Day of week of  %u, %u, %u = ",
2965:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)day,
2966:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)month,
2967:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)yr));
ARM GAS  /tmp/cct1pkgW.s 			page 64


2968:rtos/uC-Clk/Source/clk.c **** 
2969:rtos/uC-Clk/Source/clk.c ****     days       =  day - CLK_FIRST_DAY_OF_MONTH;
2970:rtos/uC-Clk/Source/clk.c ****     leap_yr    =  Clk_IsLeapYr(yr);
2971:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix = (leap_yr == DEF_YES) ? 1u : 0u;
2972:rtos/uC-Clk/Source/clk.c **** 
2973:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_ENTER();
2974:rtos/uC-Clk/Source/clk.c ****     cached_yr         = Clk_CacheYr;
2975:rtos/uC-Clk/Source/clk.c ****     cached_yr_days    = Clk_CacheYrDays;
2976:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
2977:rtos/uC-Clk/Source/clk.c ****     cached_month_days = Clk_CacheMonthDays;
2978:rtos/uC-Clk/Source/clk.c ****     cached_leap_yr    = Clk_CacheLeapYr;
2979:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
2980:rtos/uC-Clk/Source/clk.c **** 
2981:rtos/uC-Clk/Source/clk.c ****                                                                 /* Check if cached values can be us
2982:rtos/uC-Clk/Source/clk.c ****     if ((cached_month   != month) ||                            /* See Note #2a.                   
2983:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #2e.                   
2984:rtos/uC-Clk/Source/clk.c ****         days_month = 0u;
2985:rtos/uC-Clk/Source/clk.c ****         for (month_ix = CLK_FIRST_MONTH_OF_YR; month_ix < month; month_ix++) {
2986:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
2987:rtos/uC-Clk/Source/clk.c ****             days_month    += days_in_month;
2988:rtos/uC-Clk/Source/clk.c ****         }
2989:rtos/uC-Clk/Source/clk.c **** 
2990:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_ENTER();
2991:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #2a.                   
2992:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonthDays = days_month;                        /* See Note #2b.                   
2993:rtos/uC-Clk/Source/clk.c ****         Clk_CacheLeapYr    = leap_yr;
2994:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
2995:rtos/uC-Clk/Source/clk.c **** 
2996:rtos/uC-Clk/Source/clk.c ****     } else {
2997:rtos/uC-Clk/Source/clk.c ****         days_month = cached_month_days;                         /* See Note #2b.                   
2998:rtos/uC-Clk/Source/clk.c ****     }
2999:rtos/uC-Clk/Source/clk.c **** 
3000:rtos/uC-Clk/Source/clk.c **** 
3001:rtos/uC-Clk/Source/clk.c ****     if (cached_yr != yr) {                                      /* See Note #2c.                   
3002:rtos/uC-Clk/Source/clk.c ****         days_yr    = 0u;
3003:rtos/uC-Clk/Source/clk.c ****                                                                 /* See Note #1a.                   
3004:rtos/uC-Clk/Source/clk.c ****         for (yr_ix = CLK_NTP_EPOCH_YR_START; yr_ix < yr; yr_ix++) {
3005:rtos/uC-Clk/Source/clk.c ****             leap_yr     =  Clk_IsLeapYr(yr_ix);
3006:rtos/uC-Clk/Source/clk.c ****             leap_yr_ix  = (leap_yr == DEF_YES) ? 1u : 0u;
3007:rtos/uC-Clk/Source/clk.c ****             days_yr    +=  Clk_DaysInYr[leap_yr_ix];
3008:rtos/uC-Clk/Source/clk.c ****         }
3009:rtos/uC-Clk/Source/clk.c **** 
3010:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_ENTER();
3011:rtos/uC-Clk/Source/clk.c ****         Clk_CacheYr     = yr;                                   /* See Note #2c.                   
3012:rtos/uC-Clk/Source/clk.c ****         Clk_CacheYrDays = days_yr;                              /* See Note #2d.                   
3013:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
3014:rtos/uC-Clk/Source/clk.c **** 
3015:rtos/uC-Clk/Source/clk.c ****     } else {
3016:rtos/uC-Clk/Source/clk.c ****         days_yr = cached_yr_days;                               /* See Note #2b.                   
3017:rtos/uC-Clk/Source/clk.c ****     }
3018:rtos/uC-Clk/Source/clk.c **** 
3019:rtos/uC-Clk/Source/clk.c **** 
3020:rtos/uC-Clk/Source/clk.c ****     days      += days_month;
3021:rtos/uC-Clk/Source/clk.c ****     days      += days_yr;
3022:rtos/uC-Clk/Source/clk.c ****     days      += CLK_NTP_EPOCH_DAY_OF_WK;                       /* See Note #1b.                   
3023:rtos/uC-Clk/Source/clk.c ****     days      -= CLK_FIRST_DAY_OF_WK;
3024:rtos/uC-Clk/Source/clk.c ****     day_of_wk  = days % DEF_TIME_NBR_DAY_PER_WK;
ARM GAS  /tmp/cct1pkgW.s 			page 65


3025:rtos/uC-Clk/Source/clk.c ****     day_of_wk += CLK_FIRST_DAY_OF_WK;
3026:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Day of week = %u)\n\r", (unsigned int)day_of_wk));
3027:rtos/uC-Clk/Source/clk.c **** 
3028:rtos/uC-Clk/Source/clk.c ****     return (day_of_wk);
3029:rtos/uC-Clk/Source/clk.c **** }
3030:rtos/uC-Clk/Source/clk.c **** 
3031:rtos/uC-Clk/Source/clk.c **** 
3032:rtos/uC-Clk/Source/clk.c **** /*
3033:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
3034:rtos/uC-Clk/Source/clk.c **** *                                         Clk_SetTZ_Handler()
3035:rtos/uC-Clk/Source/clk.c **** *
3036:rtos/uC-Clk/Source/clk.c **** * Description : Set Clock time zone offset.
3037:rtos/uC-Clk/Source/clk.c **** *
3038:rtos/uC-Clk/Source/clk.c **** * Argument(s) : tz_sec      Time zone offset (in seconds, +|- from UTC).
3039:rtos/uC-Clk/Source/clk.c **** *               ------      Argument checked by Clk_SetTZ(),
3040:rtos/uC-Clk/Source/clk.c **** *                                               Clk_SetDateTime().
3041:rtos/uC-Clk/Source/clk.c **** *
3042:rtos/uC-Clk/Source/clk.c **** * Return(s)   : none.
3043:rtos/uC-Clk/Source/clk.c **** *
3044:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) 'Clk_TZ_sec' MUST ALWAYS be accessed exclusively in critical sections.
3045:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
3046:rtos/uC-Clk/Source/clk.c **** */
3047:rtos/uC-Clk/Source/clk.c **** 
3048:rtos/uC-Clk/Source/clk.c **** static  void  Clk_SetTZ_Handler (CLK_TZ_SEC  tz_sec)
3049:rtos/uC-Clk/Source/clk.c **** {
3050:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
3051:rtos/uC-Clk/Source/clk.c **** 
3052:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------------- SET TZ --
3053:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_ENTER();
3054:rtos/uC-Clk/Source/clk.c ****     Clk_TZ_sec = tz_sec;
3055:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
3056:rtos/uC-Clk/Source/clk.c **** }
3057:rtos/uC-Clk/Source/clk.c **** 
3058:rtos/uC-Clk/Source/clk.c **** 
3059:rtos/uC-Clk/Source/clk.c **** /*
3060:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
3061:rtos/uC-Clk/Source/clk.c **** *                                     Clk_TS_ToDateTimeHandler()
3062:rtos/uC-Clk/Source/clk.c **** *
3063:rtos/uC-Clk/Source/clk.c **** * Description : Convert any type of timestamp to date/time structure.
3064:rtos/uC-Clk/Source/clk.c **** *
3065:rtos/uC-Clk/Source/clk.c **** * Argument(s) : ts_sec          Timestamp to convert (in seconds,          UTC+00).
3066:rtos/uC-Clk/Source/clk.c **** *
3067:rtos/uC-Clk/Source/clk.c **** *               tz_sec          Time zone offset     (in seconds, +|- from UTC).
3068:rtos/uC-Clk/Source/clk.c **** *
3069:rtos/uC-Clk/Source/clk.c **** *               p_date_time     Pointer to variable that contains the date/time structure to valida
3070:rtos/uC-Clk/Source/clk.c **** *
3071:rtos/uC-Clk/Source/clk.c **** *               yr_start        Start year of the epoch.
3072:rtos/uC-Clk/Source/clk.c **** *
3073:rtos/uC-Clk/Source/clk.c **** *               yr_end          End   year of the epoch.
3074:rtos/uC-Clk/Source/clk.c **** *
3075:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if date/time structure is valid.
3076:rtos/uC-Clk/Source/clk.c **** *
3077:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
3078:rtos/uC-Clk/Source/clk.c **** *
3079:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) (a) Timestamp ('ts_sec') MUST be set for UTC+00 & SHOULD NOT include the time
3080:rtos/uC-Clk/Source/clk.c **** *                       zone offset ('tz_sec') since Clk_TS_ToDateTimeHandler() includes the time
3081:rtos/uC-Clk/Source/clk.c **** *                       zone offset in its date/time calculation. Thus the time zone offset SHOULD
ARM GAS  /tmp/cct1pkgW.s 			page 66


3082:rtos/uC-Clk/Source/clk.c **** *                       NOT be applied before or after calling Clk_TS_ToDateTimeHandler().
3083:rtos/uC-Clk/Source/clk.c **** *
3084:rtos/uC-Clk/Source/clk.c **** *                   (b) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
3085:rtos/uC-Clk/Source/clk.c **** *
3086:rtos/uC-Clk/Source/clk.c **** *                       (1) Between  +|- 12 hours (+|- 43200 seconds)
3087:rtos/uC-Clk/Source/clk.c **** *                       (2) Multiples of 15 minutes
3088:rtos/uC-Clk/Source/clk.c **** *
3089:rtos/uC-Clk/Source/clk.c **** *                   (c) Timestamp MUST be adjusted by adding timezone offset ('tz_sec') :
3090:rtos/uC-Clk/Source/clk.c **** *
3091:rtos/uC-Clk/Source/clk.c **** *                       (1) For negative timezone offset, it's subtracted
3092:rtos/uC-Clk/Source/clk.c **** *                       (2) For positive timezone offset, it's added
3093:rtos/uC-Clk/Source/clk.c **** *
3094:rtos/uC-Clk/Source/clk.c **** *                   (d) Time zone field of the date/time structure ('p_date_time->TZ_sec') is set
3095:rtos/uC-Clk/Source/clk.c **** *                       to the value of time zone argument ('tz_sec').
3096:rtos/uC-Clk/Source/clk.c **** *
3097:rtos/uC-Clk/Source/clk.c **** *               (2) Absolute value of the time zone offset is stored into 'CLK_TS_SEC' data type to
3098:rtos/uC-Clk/Source/clk.c **** *                   compliant with unsigned integer verification/operations.
3099:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
3100:rtos/uC-Clk/Source/clk.c **** */
3101:rtos/uC-Clk/Source/clk.c **** 
3102:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_TS_ToDateTimeHandler (CLK_TS_SEC      ts_sec,
3103:rtos/uC-Clk/Source/clk.c ****                                                CLK_TZ_SEC      tz_sec,
3104:rtos/uC-Clk/Source/clk.c ****                                                CLK_DATE_TIME  *p_date_time,
3105:rtos/uC-Clk/Source/clk.c ****                                                CLK_YR          yr_start,
3106:rtos/uC-Clk/Source/clk.c ****                                                CLK_YR          yr_end)
3107:rtos/uC-Clk/Source/clk.c **** {
3108:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    ts_sec_rem;
3109:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    tz_sec_abs;                                   /* See Note #2.                    
3110:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    sec_to_remove;
3111:rtos/uC-Clk/Source/clk.c ****     CLK_NBR_DAYS  days_in_yr;
3112:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       days_in_month;
3113:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U    leap_yr_ix;
3114:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   leap_yr;
3115:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   valid;
3116:rtos/uC-Clk/Source/clk.c **** 
3117:rtos/uC-Clk/Source/clk.c **** 
3118:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* -------------- VALIDATE DATE/TIM
3119:rtos/uC-Clk/Source/clk.c ****     if (p_date_time == (CLK_DATE_TIME *)0) {
3120:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
3121:rtos/uC-Clk/Source/clk.c ****     }
3122:rtos/uC-Clk/Source/clk.c **** #endif
3123:rtos/uC-Clk/Source/clk.c **** 
3124:rtos/uC-Clk/Source/clk.c **** 
3125:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------ ADJ INIT TS FOR TZ 
3126:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem = ts_sec;
3127:rtos/uC-Clk/Source/clk.c ****     tz_sec_abs = DEF_ABS(tz_sec);
3128:rtos/uC-Clk/Source/clk.c ****     if (tz_sec < 0) {
3129:rtos/uC-Clk/Source/clk.c ****         if (ts_sec_rem < tz_sec_abs) {                          /* Chk for ovf when tz is neg.     
3130:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too small to substract time zone offset\n\r"));
3131:rtos/uC-Clk/Source/clk.c ****             return (DEF_FAIL);
3132:rtos/uC-Clk/Source/clk.c ****         }
3133:rtos/uC-Clk/Source/clk.c ****         ts_sec_rem -= tz_sec_abs;                               /* See Note #1c1.                  
3134:rtos/uC-Clk/Source/clk.c **** 
3135:rtos/uC-Clk/Source/clk.c ****     } else {
3136:rtos/uC-Clk/Source/clk.c ****         ts_sec_rem += tz_sec_abs;                               /* See Note #1c2.                  
3137:rtos/uC-Clk/Source/clk.c ****         if (ts_sec_rem < tz_sec_abs) {                          /* Chk for ovf when tz is pos.     
3138:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too big to add time zone offset\n\r"));
ARM GAS  /tmp/cct1pkgW.s 			page 67


3139:rtos/uC-Clk/Source/clk.c ****             return (DEF_FAIL);
3140:rtos/uC-Clk/Source/clk.c ****         }
3141:rtos/uC-Clk/Source/clk.c ****     }
3142:rtos/uC-Clk/Source/clk.c **** 
3143:rtos/uC-Clk/Source/clk.c **** 
3144:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------------- GET YR --
3145:rtos/uC-Clk/Source/clk.c ****     p_date_time->Yr =  yr_start;
3146:rtos/uC-Clk/Source/clk.c ****     leap_yr         =  Clk_IsLeapYr(p_date_time->Yr);
3147:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix      = (leap_yr == DEF_YES) ? 1u : 0u;
3148:rtos/uC-Clk/Source/clk.c ****     days_in_yr      =  Clk_DaysInYr[leap_yr_ix];
3149:rtos/uC-Clk/Source/clk.c ****     sec_to_remove   =  days_in_yr * DEF_TIME_NBR_SEC_PER_DAY;
3150:rtos/uC-Clk/Source/clk.c ****     while ((ts_sec_rem      >= sec_to_remove) &&
3151:rtos/uC-Clk/Source/clk.c ****            (p_date_time->Yr <  yr_end)) {
3152:rtos/uC-Clk/Source/clk.c ****         ts_sec_rem    -=  sec_to_remove;
3153:rtos/uC-Clk/Source/clk.c ****         p_date_time->Yr++;
3154:rtos/uC-Clk/Source/clk.c ****         leap_yr        =  Clk_IsLeapYr(p_date_time->Yr);
3155:rtos/uC-Clk/Source/clk.c ****         leap_yr_ix     = (leap_yr == DEF_YES) ? 1u : 0u;
3156:rtos/uC-Clk/Source/clk.c ****         days_in_yr     =  Clk_DaysInYr[leap_yr_ix];
3157:rtos/uC-Clk/Source/clk.c ****         sec_to_remove  =  days_in_yr * DEF_TIME_NBR_SEC_PER_DAY;
3158:rtos/uC-Clk/Source/clk.c ****     }
3159:rtos/uC-Clk/Source/clk.c **** 
3160:rtos/uC-Clk/Source/clk.c ****     if (p_date_time->Yr >= yr_end) {
3161:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Year conversion has failed\n\r"));
3162:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
3163:rtos/uC-Clk/Source/clk.c ****     }
3164:rtos/uC-Clk/Source/clk.c **** 
3165:rtos/uC-Clk/Source/clk.c ****                                                                 /* -------------------- GET MONTH -
3166:rtos/uC-Clk/Source/clk.c ****     p_date_time->Month =  CLK_FIRST_MONTH_OF_YR;
3167:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Already determined in 'GET YR'. 
3168:rtos/uC-Clk/Source/clk.c ****     leap_yr            =  Clk_IsLeapYr(p_date_time->Yr);
3169:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix         = (leap_yr == DEF_YES) ? 1u : 0u;
3170:rtos/uC-Clk/Source/clk.c **** #endif
3171:rtos/uC-Clk/Source/clk.c ****     days_in_month      =  Clk_DaysInMonth[leap_yr_ix][p_date_time->Month - CLK_FIRST_MONTH_OF_YR];
3172:rtos/uC-Clk/Source/clk.c ****     sec_to_remove      =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
3173:rtos/uC-Clk/Source/clk.c ****     while ((ts_sec_rem         >= sec_to_remove) &&
3174:rtos/uC-Clk/Source/clk.c ****            (p_date_time->Month <  CLK_MONTH_PER_YR)) {
3175:rtos/uC-Clk/Source/clk.c ****         ts_sec_rem    -=  sec_to_remove;
3176:rtos/uC-Clk/Source/clk.c ****         p_date_time->Month++;
3177:rtos/uC-Clk/Source/clk.c ****         days_in_month  =  Clk_DaysInMonth[leap_yr_ix][p_date_time->Month - CLK_FIRST_MONTH_OF_YR];
3178:rtos/uC-Clk/Source/clk.c ****         sec_to_remove  =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
3179:rtos/uC-Clk/Source/clk.c ****     }
3180:rtos/uC-Clk/Source/clk.c **** 
3181:rtos/uC-Clk/Source/clk.c ****     if (p_date_time->Month > CLK_MONTH_PER_YR) {
3182:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Month conversion has failed\n\r"));
3183:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
3184:rtos/uC-Clk/Source/clk.c ****     }
3185:rtos/uC-Clk/Source/clk.c **** 
3186:rtos/uC-Clk/Source/clk.c ****                                                                 /* --------------------- GET DAY --
3187:rtos/uC-Clk/Source/clk.c ****     sec_to_remove     = DEF_TIME_NBR_SEC_PER_DAY;
3188:rtos/uC-Clk/Source/clk.c ****     p_date_time->Day  = ts_sec_rem / sec_to_remove;
3189:rtos/uC-Clk/Source/clk.c ****     p_date_time->Day += CLK_FIRST_DAY_OF_MONTH;
3190:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem        = ts_sec_rem % sec_to_remove;
3191:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Already determined in 'GET MONTH
3192:rtos/uC-Clk/Source/clk.c ****     days_in_month     = Clk_DaysInMonth[leap_yr_ix][p_date_time->Month - CLK_FIRST_MONTH_OF_YR];
3193:rtos/uC-Clk/Source/clk.c **** #endif
3194:rtos/uC-Clk/Source/clk.c **** 
3195:rtos/uC-Clk/Source/clk.c ****     if (p_date_time->Day > days_in_month) {
ARM GAS  /tmp/cct1pkgW.s 			page 68


3196:rtos/uC-Clk/Source/clk.c ****          CLK_TRACE_DBG(("    Day conversion has failed\n\r"));
3197:rtos/uC-Clk/Source/clk.c ****          return (DEF_FAIL);
3198:rtos/uC-Clk/Source/clk.c ****     }
3199:rtos/uC-Clk/Source/clk.c **** 
3200:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ GET DAY OF WK
3201:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfWk = Clk_GetDayOfWkHandler(p_date_time->Yr,
3202:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
3203:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Day);
3204:rtos/uC-Clk/Source/clk.c ****     valid                = Clk_IsDayOfWkValid(p_date_time->DayOfWk);
3205:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
3206:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Day of week conversion has failed\n\r"));
3207:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
3208:rtos/uC-Clk/Source/clk.c ****     }
3209:rtos/uC-Clk/Source/clk.c **** 
3210:rtos/uC-Clk/Source/clk.c **** 
3211:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfYr = Clk_GetDayOfYrHandler(p_date_time->Yr,
3212:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
3213:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Day);
3214:rtos/uC-Clk/Source/clk.c ****     valid                = Clk_IsDayOfYrValid(p_date_time->Yr,
3215:rtos/uC-Clk/Source/clk.c ****                                               p_date_time->DayOfYr);
3216:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
3217:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Day of year conversion has failed\n\r"));
3218:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
3219:rtos/uC-Clk/Source/clk.c ****     }
3220:rtos/uC-Clk/Source/clk.c **** 
3221:rtos/uC-Clk/Source/clk.c ****                                                                 /* --------------------- GET HR ---
3222:rtos/uC-Clk/Source/clk.c ****     sec_to_remove       = DEF_TIME_NBR_SEC_PER_HR;
3223:rtos/uC-Clk/Source/clk.c ****     p_date_time->Hr     = ts_sec_rem / sec_to_remove;
3224:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem          = ts_sec_rem % sec_to_remove;
3225:rtos/uC-Clk/Source/clk.c **** 
3226:rtos/uC-Clk/Source/clk.c ****                                                                 /* --------------------- GET MIN --
3227:rtos/uC-Clk/Source/clk.c ****     sec_to_remove       = DEF_TIME_NBR_SEC_PER_MIN;
3228:rtos/uC-Clk/Source/clk.c ****     p_date_time->Min    = ts_sec_rem / sec_to_remove;
3229:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem          = ts_sec_rem % sec_to_remove;
3230:rtos/uC-Clk/Source/clk.c **** 
3231:rtos/uC-Clk/Source/clk.c ****                                                                 /* --------------------- GET SEC --
3232:rtos/uC-Clk/Source/clk.c ****     p_date_time->Sec    = ts_sec_rem;
3233:rtos/uC-Clk/Source/clk.c **** 
3234:rtos/uC-Clk/Source/clk.c ****                                                                 /* --------------------- GET TZ ---
3235:rtos/uC-Clk/Source/clk.c ****     p_date_time->TZ_sec = tz_sec;
3236:rtos/uC-Clk/Source/clk.c **** 
3237:rtos/uC-Clk/Source/clk.c **** 
3238:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ VALIDATE TIME
3239:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsTimeValid(p_date_time->Hr, p_date_time->Min, p_date_time->Sec);
3240:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
3241:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Time conversion has failed\n\r"));
3242:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
3243:rtos/uC-Clk/Source/clk.c ****     }
3244:rtos/uC-Clk/Source/clk.c **** 
3245:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Date/time converted:  \n\r"
3246:rtos/uC-Clk/Source/clk.c ****                    "     Year         = %u\n\r"
3247:rtos/uC-Clk/Source/clk.c ****                    "     Month        = %u\n\r"
3248:rtos/uC-Clk/Source/clk.c ****                    "     Day          = %u\n\r"
3249:rtos/uC-Clk/Source/clk.c ****                    "     Hour         = %u\n\r"
3250:rtos/uC-Clk/Source/clk.c ****                    "     Minutes      = %u\n\r"
3251:rtos/uC-Clk/Source/clk.c ****                    "     Seconds      = %u\n\r"
3252:rtos/uC-Clk/Source/clk.c ****                    "     Time zone    = %d\n\r",
ARM GAS  /tmp/cct1pkgW.s 			page 69


3253:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Yr,
3254:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Month,
3255:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Day,
3256:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Hr,
3257:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Min,
3258:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Sec,
3259:rtos/uC-Clk/Source/clk.c ****                    (  signed int)p_date_time->TZ_sec));
3260:rtos/uC-Clk/Source/clk.c **** 
3261:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
3262:rtos/uC-Clk/Source/clk.c **** }
3263:rtos/uC-Clk/Source/clk.c **** 
3264:rtos/uC-Clk/Source/clk.c **** 
3265:rtos/uC-Clk/Source/clk.c **** /*
3266:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
3267:rtos/uC-Clk/Source/clk.c **** *                                     Clk_DateTimeToTS_Handler()
3268:rtos/uC-Clk/Source/clk.c **** *
3269:rtos/uC-Clk/Source/clk.c **** * Description : Convert date/time structure to any type of timestamp.
3270:rtos/uC-Clk/Source/clk.c **** *
3271:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_ts_sec        Pointer to variable that will receive the timestamp :
3272:rtos/uC-Clk/Source/clk.c **** *               --------
3273:rtos/uC-Clk/Source/clk.c **** *                                   In seconds UTC+00,  if NO error(s);
3274:rtos/uC-Clk/Source/clk.c **** *                                   CLK_TS_SEC_NONE,    otherwise.
3275:rtos/uC-Clk/Source/clk.c **** *
3276:rtos/uC-Clk/Source/clk.c **** *                               Argument checked in Clk_DateTimeToTS(),
3277:rtos/uC-Clk/Source/clk.c **** *                                                   Clk_DateTimeToTS_NTP(),
3278:rtos/uC-Clk/Source/clk.c **** *                                                   Clk_DateTimeToTS_Unix().
3279:rtos/uC-Clk/Source/clk.c **** *
3280:rtos/uC-Clk/Source/clk.c **** *               p_date_time     Pointer to variable that contains the date/time structure to valida
3281:rtos/uC-Clk/Source/clk.c **** *               -----------     Argument checked in Clk_DateTimeToTS(),
3282:rtos/uC-Clk/Source/clk.c **** *                                                   Clk_DateTimeToTS_NTP(),
3283:rtos/uC-Clk/Source/clk.c **** *                                                   Clk_DateTimeToTS_Unix().
3284:rtos/uC-Clk/Source/clk.c **** *
3285:rtos/uC-Clk/Source/clk.c **** *               yr_start        Start year of the epoch.
3286:rtos/uC-Clk/Source/clk.c **** *
3287:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if timestamp is valid.
3288:rtos/uC-Clk/Source/clk.c **** *
3289:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
3290:rtos/uC-Clk/Source/clk.c **** *
3291:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) (a) Date/time ('p_date_time') SHOULD be set to local time with correct time zon
3292:rtos/uC-Clk/Source/clk.c **** *                       offset ('p_date_time->TZ_sec'). Clk_DateTimeToTS_Handler() removes the time
3293:rtos/uC-Clk/Source/clk.c **** *                       zone offset from the date/time to calculate & return a Clock timestamp at
3294:rtos/uC-Clk/Source/clk.c **** *                       UTC+00.
3295:rtos/uC-Clk/Source/clk.c **** 
3296:rtos/uC-Clk/Source/clk.c **** *                   (b) Time zone is based on Coordinated Universal Time (UTC) & has valid values :
3297:rtos/uC-Clk/Source/clk.c **** *
3298:rtos/uC-Clk/Source/clk.c **** *                       (1) Between  +|- 12 hours (+|- 43200 seconds)
3299:rtos/uC-Clk/Source/clk.c **** *                       (2) Multiples of 15 minutes
3300:rtos/uC-Clk/Source/clk.c **** *
3301:rtos/uC-Clk/Source/clk.c **** *                   (c) Timestamp MUST be adjusted by subtracting timezone offset ('p_date_time->TZ
3302:rtos/uC-Clk/Source/clk.c **** *
3303:rtos/uC-Clk/Source/clk.c **** *                       (1) For negative timezone offset, it's added
3304:rtos/uC-Clk/Source/clk.c **** *                       (2) For positive timezone offset, it's subtracted
3305:rtos/uC-Clk/Source/clk.c **** *
3306:rtos/uC-Clk/Source/clk.c **** *               (2) Pointers to variables that return values MUST be initialized PRIOR to all other
3307:rtos/uC-Clk/Source/clk.c **** *                   validation or function handling in case of any error(s).
3308:rtos/uC-Clk/Source/clk.c **** *
3309:rtos/uC-Clk/Source/clk.c **** *                   (a) However, some pointers may already be initialized by calling functions. The
ARM GAS  /tmp/cct1pkgW.s 			page 70


3310:rtos/uC-Clk/Source/clk.c **** *                       pointers do NOT need to be re-initialized but are shown for completeness.
3311:rtos/uC-Clk/Source/clk.c **** *
3312:rtos/uC-Clk/Source/clk.c **** *               (3) Absolute value of the time zone offset is stored into 'CLK_TS_SEC' data type to
3313:rtos/uC-Clk/Source/clk.c **** *                   compliant with unsigned integer verification/operations.
3314:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
3315:rtos/uC-Clk/Source/clk.c **** */
3316:rtos/uC-Clk/Source/clk.c **** 
3317:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_DateTimeToTS_Handler (CLK_TS_SEC     *p_ts_sec,
3318:rtos/uC-Clk/Source/clk.c ****                                                CLK_DATE_TIME  *p_date_time,
3319:rtos/uC-Clk/Source/clk.c ****                                                CLK_YR          yr_start)
3320:rtos/uC-Clk/Source/clk.c **** {
 606              		.loc 1 3320 1 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		.loc 1 3320 1 is_stmt 0 view .LVU150
 611 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 612              	.LCFI10:
 613              		.cfi_def_cfa_offset 24
 614              		.cfi_offset 4, -24
 615              		.cfi_offset 5, -20
 616              		.cfi_offset 6, -16
 617              		.cfi_offset 7, -12
 618              		.cfi_offset 8, -8
 619              		.cfi_offset 14, -4
 620 0004 8046     		mov	r8, r0
 621 0006 0E46     		mov	r6, r1
 622 0008 1446     		mov	r4, r2
3321:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   leap_yr;
 623              		.loc 1 3321 5 is_stmt 1 view .LVU151
3322:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U    leap_yr_ix;
 624              		.loc 1 3322 5 view .LVU152
3323:rtos/uC-Clk/Source/clk.c ****     CLK_YR        yr_ix;
 625              		.loc 1 3323 5 view .LVU153
3324:rtos/uC-Clk/Source/clk.c ****     CLK_MONTH     month_ix;
 626              		.loc 1 3324 5 view .LVU154
3325:rtos/uC-Clk/Source/clk.c ****     CLK_NBR_DAYS  nbr_days;
 627              		.loc 1 3325 5 view .LVU155
3326:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    ts_sec;
 628              		.loc 1 3326 5 view .LVU156
3327:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    tz_sec_abs;                                   /* See Note #3.                    
 629              		.loc 1 3327 5 view .LVU157
3328:rtos/uC-Clk/Source/clk.c **** 
3329:rtos/uC-Clk/Source/clk.c **** 
3330:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* See Note #2a.                   
3331:rtos/uC-Clk/Source/clk.c ****    *p_ts_sec = CLK_TS_SEC_NONE;                                 /* Init to ts none for err (see Not
3332:rtos/uC-Clk/Source/clk.c **** #endif
3333:rtos/uC-Clk/Source/clk.c **** 
3334:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Date/time converted:  \n\r"
3335:rtos/uC-Clk/Source/clk.c ****                    "     Year         = %u\n\r"
3336:rtos/uC-Clk/Source/clk.c ****                    "     Month        = %u\n\r"
3337:rtos/uC-Clk/Source/clk.c ****                    "     Day          = %u\n\r"
3338:rtos/uC-Clk/Source/clk.c ****                    "     Hour         = %u\n\r"
3339:rtos/uC-Clk/Source/clk.c ****                    "     Minutes      = %u\n\r"
3340:rtos/uC-Clk/Source/clk.c ****                    "     Seconds      = %u\n\r"
3341:rtos/uC-Clk/Source/clk.c ****                    "     Time zone    = %d\n\r",
3342:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Yr,
ARM GAS  /tmp/cct1pkgW.s 			page 71


3343:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Month,
3344:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Day,
3345:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Hr,
3346:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Min,
3347:rtos/uC-Clk/Source/clk.c ****                    (unsigned int)p_date_time->Sec,
3348:rtos/uC-Clk/Source/clk.c ****                    (  signed int)p_date_time->TZ_sec));
 630              		.loc 1 3348 55 view .LVU158
3349:rtos/uC-Clk/Source/clk.c **** 
3350:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------- CONV DATE/TIME TO 
3351:rtos/uC-Clk/Source/clk.c ****     nbr_days   =  p_date_time->Day - CLK_FIRST_DAY_OF_MONTH;
 631              		.loc 1 3351 5 view .LVU159
 632              		.loc 1 3351 30 is_stmt 0 view .LVU160
 633 000a 8D88     		ldrh	r5, [r1, #4]
 634              		.loc 1 3351 16 view .LVU161
 635 000c 013D     		subs	r5, r5, #1
 636              	.LVL71:
3352:rtos/uC-Clk/Source/clk.c ****     leap_yr    =  Clk_IsLeapYr(p_date_time->Yr);
 637              		.loc 1 3352 5 is_stmt 1 view .LVU162
 638              		.loc 1 3352 19 is_stmt 0 view .LVU163
 639 000e 0F88     		ldrh	r7, [r1]
 640 0010 3846     		mov	r0, r7
 641              	.LVL72:
 642              		.loc 1 3352 19 view .LVU164
 643 0012 FFF7FEFF 		bl	Clk_IsLeapYr
 644              	.LVL73:
3353:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix = (leap_yr == DEF_YES) ? 1u : 0u;
 645              		.loc 1 3353 5 is_stmt 1 view .LVU165
 646              		.loc 1 3353 16 is_stmt 0 view .LVU166
 647 0016 0128     		cmp	r0, #1
 648 0018 00D0     		beq	.L59
 649 001a 0020     		movs	r0, #0
 650              	.LVL74:
 651              	.L59:
3354:rtos/uC-Clk/Source/clk.c ****     for (month_ix = CLK_FIRST_MONTH_OF_YR; month_ix < p_date_time->Month; month_ix++) {
 652              		.loc 1 3354 5 is_stmt 1 discriminator 4 view .LVU167
 653              		.loc 1 3354 19 is_stmt 0 discriminator 4 view .LVU168
 654 001c 0123     		movs	r3, #1
 655              	.LVL75:
 656              	.L60:
 657              		.loc 1 3354 44 is_stmt 1 discriminator 1 view .LVU169
 658              		.loc 1 3354 66 is_stmt 0 discriminator 1 view .LVU170
 659 001e B278     		ldrb	r2, [r6, #2]	@ zero_extendqisi2
 660              		.loc 1 3354 5 discriminator 1 view .LVU171
 661 0020 9A42     		cmp	r2, r3
 662 0022 11D9     		bls	.L62
3355:rtos/uC-Clk/Source/clk.c ****         nbr_days += Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 663              		.loc 1 3355 9 is_stmt 1 discriminator 3 view .LVU172
 664              		.loc 1 3355 58 is_stmt 0 discriminator 3 view .LVU173
 665 0024 5A1E     		subs	r2, r3, #1
 666              		.loc 1 3355 48 discriminator 3 view .LVU174
 667 0026 00EB4001 		add	r1, r0, r0, lsl #1
 668 002a 02EB8102 		add	r2, r2, r1, lsl #2
 669 002e 1D49     		ldr	r1, .L75
 670 0030 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 671              		.loc 1 3355 18 discriminator 3 view .LVU175
 672 0034 1544     		add	r5, r5, r2
 673              	.LVL76:
ARM GAS  /tmp/cct1pkgW.s 			page 72


3354:rtos/uC-Clk/Source/clk.c ****     for (month_ix = CLK_FIRST_MONTH_OF_YR; month_ix < p_date_time->Month; month_ix++) {
 674              		.loc 1 3354 75 is_stmt 1 discriminator 3 view .LVU176
3354:rtos/uC-Clk/Source/clk.c ****     for (month_ix = CLK_FIRST_MONTH_OF_YR; month_ix < p_date_time->Month; month_ix++) {
 675              		.loc 1 3354 83 is_stmt 0 discriminator 3 view .LVU177
 676 0036 0133     		adds	r3, r3, #1
 677              	.LVL77:
3354:rtos/uC-Clk/Source/clk.c ****     for (month_ix = CLK_FIRST_MONTH_OF_YR; month_ix < p_date_time->Month; month_ix++) {
 678              		.loc 1 3354 83 discriminator 3 view .LVU178
 679 0038 DBB2     		uxtb	r3, r3
 680              	.LVL78:
3354:rtos/uC-Clk/Source/clk.c ****     for (month_ix = CLK_FIRST_MONTH_OF_YR; month_ix < p_date_time->Month; month_ix++) {
 681              		.loc 1 3354 83 discriminator 3 view .LVU179
 682 003a F0E7     		b	.L60
 683              	.LVL79:
 684              	.L63:
3356:rtos/uC-Clk/Source/clk.c ****     }
3357:rtos/uC-Clk/Source/clk.c **** 
3358:rtos/uC-Clk/Source/clk.c ****     for (yr_ix = yr_start; yr_ix < p_date_time->Yr; yr_ix++) {
3359:rtos/uC-Clk/Source/clk.c ****         leap_yr     =  Clk_IsLeapYr(yr_ix);
3360:rtos/uC-Clk/Source/clk.c ****         leap_yr_ix  = (leap_yr == DEF_YES) ? 1u : 0u;
3361:rtos/uC-Clk/Source/clk.c ****         nbr_days   +=  Clk_DaysInYr[leap_yr_ix];
 685              		.loc 1 3361 9 is_stmt 1 discriminator 4 view .LVU180
 686              		.loc 1 3361 36 is_stmt 0 discriminator 4 view .LVU181
 687 003c 1A4B     		ldr	r3, .L75+4
 688 003e 33F81030 		ldrh	r3, [r3, r0, lsl #1]
 689              		.loc 1 3361 20 discriminator 4 view .LVU182
 690 0042 1D44     		add	r5, r5, r3
 691              	.LVL80:
3358:rtos/uC-Clk/Source/clk.c ****         leap_yr     =  Clk_IsLeapYr(yr_ix);
 692              		.loc 1 3358 53 is_stmt 1 discriminator 4 view .LVU183
3358:rtos/uC-Clk/Source/clk.c ****         leap_yr     =  Clk_IsLeapYr(yr_ix);
 693              		.loc 1 3358 58 is_stmt 0 discriminator 4 view .LVU184
 694 0044 0134     		adds	r4, r4, #1
 695              	.LVL81:
3358:rtos/uC-Clk/Source/clk.c ****         leap_yr     =  Clk_IsLeapYr(yr_ix);
 696              		.loc 1 3358 58 discriminator 4 view .LVU185
 697 0046 A4B2     		uxth	r4, r4
 698              	.LVL82:
 699              	.L62:
3358:rtos/uC-Clk/Source/clk.c ****         leap_yr     =  Clk_IsLeapYr(yr_ix);
 700              		.loc 1 3358 28 is_stmt 1 discriminator 2 view .LVU186
3358:rtos/uC-Clk/Source/clk.c ****         leap_yr     =  Clk_IsLeapYr(yr_ix);
 701              		.loc 1 3358 5 is_stmt 0 discriminator 2 view .LVU187
 702 0048 A742     		cmp	r7, r4
 703 004a 06D9     		bls	.L73
3359:rtos/uC-Clk/Source/clk.c ****         leap_yr_ix  = (leap_yr == DEF_YES) ? 1u : 0u;
 704              		.loc 1 3359 9 is_stmt 1 view .LVU188
3359:rtos/uC-Clk/Source/clk.c ****         leap_yr_ix  = (leap_yr == DEF_YES) ? 1u : 0u;
 705              		.loc 1 3359 24 is_stmt 0 view .LVU189
 706 004c 2046     		mov	r0, r4
 707              	.LVL83:
3359:rtos/uC-Clk/Source/clk.c ****         leap_yr_ix  = (leap_yr == DEF_YES) ? 1u : 0u;
 708              		.loc 1 3359 24 view .LVU190
 709 004e FFF7FEFF 		bl	Clk_IsLeapYr
 710              	.LVL84:
3360:rtos/uC-Clk/Source/clk.c ****         nbr_days   +=  Clk_DaysInYr[leap_yr_ix];
 711              		.loc 1 3360 9 is_stmt 1 view .LVU191
ARM GAS  /tmp/cct1pkgW.s 			page 73


3360:rtos/uC-Clk/Source/clk.c ****         nbr_days   +=  Clk_DaysInYr[leap_yr_ix];
 712              		.loc 1 3360 21 is_stmt 0 view .LVU192
 713 0052 0128     		cmp	r0, #1
 714 0054 F2D0     		beq	.L63
 715 0056 0020     		movs	r0, #0
 716              	.LVL85:
3360:rtos/uC-Clk/Source/clk.c ****         nbr_days   +=  Clk_DaysInYr[leap_yr_ix];
 717              		.loc 1 3360 21 view .LVU193
 718 0058 F0E7     		b	.L63
 719              	.LVL86:
 720              	.L73:
3362:rtos/uC-Clk/Source/clk.c ****     }
3363:rtos/uC-Clk/Source/clk.c **** 
3364:rtos/uC-Clk/Source/clk.c ****     ts_sec  = nbr_days         * DEF_TIME_NBR_SEC_PER_DAY;
 721              		.loc 1 3364 5 is_stmt 1 view .LVU194
3365:rtos/uC-Clk/Source/clk.c ****     ts_sec += p_date_time->Hr  * DEF_TIME_NBR_SEC_PER_HR;
 722              		.loc 1 3365 5 view .LVU195
 723              		.loc 1 3365 26 is_stmt 0 view .LVU196
 724 005a B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
 725              		.loc 1 3365 32 view .LVU197
 726 005c 4FF46163 		mov	r3, #3600
 727 0060 03FB02F3 		mul	r3, r3, r2
 728              		.loc 1 3365 12 view .LVU198
 729 0064 114A     		ldr	r2, .L75+8
 730 0066 02FB0535 		mla	r5, r2, r5, r3
 731              	.LVL87:
3366:rtos/uC-Clk/Source/clk.c ****     ts_sec += p_date_time->Min * DEF_TIME_NBR_SEC_PER_MIN;
 732              		.loc 1 3366 5 is_stmt 1 view .LVU199
 733              		.loc 1 3366 26 is_stmt 0 view .LVU200
 734 006a F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 735              		.loc 1 3366 32 view .LVU201
 736 006c C3EB0313 		rsb	r3, r3, r3, lsl #4
 737              		.loc 1 3366 12 view .LVU202
 738 0070 05EB8305 		add	r5, r5, r3, lsl #2
 739              	.LVL88:
3367:rtos/uC-Clk/Source/clk.c ****     ts_sec += p_date_time->Sec;
 740              		.loc 1 3367 5 is_stmt 1 view .LVU203
 741              		.loc 1 3367 26 is_stmt 0 view .LVU204
 742 0074 337B     		ldrb	r3, [r6, #12]	@ zero_extendqisi2
 743              		.loc 1 3367 12 view .LVU205
 744 0076 1D44     		add	r5, r5, r3
 745              	.LVL89:
3368:rtos/uC-Clk/Source/clk.c **** 
3369:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------ ADJ FINAL TS FOR TZ
3370:rtos/uC-Clk/Source/clk.c ****     tz_sec_abs = DEF_ABS(p_date_time->TZ_sec);
 746              		.loc 1 3370 5 is_stmt 1 view .LVU206
 747              		.loc 1 3370 18 is_stmt 0 view .LVU207
 748 0078 3369     		ldr	r3, [r6, #16]
 749 007a 83EAE372 		eor	r2, r3, r3, asr #31
 750 007e A2EBE372 		sub	r2, r2, r3, asr #31
 751              	.LVL90:
3371:rtos/uC-Clk/Source/clk.c ****     if (p_date_time->TZ_sec < 0) {
 752              		.loc 1 3371 5 is_stmt 1 view .LVU208
 753              		.loc 1 3371 8 is_stmt 0 view .LVU209
 754 0082 002B     		cmp	r3, #0
 755 0084 07DB     		blt	.L74
3372:rtos/uC-Clk/Source/clk.c ****         ts_sec += tz_sec_abs;                                   /* See Note #1c1.                  
ARM GAS  /tmp/cct1pkgW.s 			page 74


3373:rtos/uC-Clk/Source/clk.c ****         if (ts_sec < tz_sec_abs) {                              /* Chk for ovf when tz is neg.     
3374:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too big to add time zone offset\n\r"));
3375:rtos/uC-Clk/Source/clk.c ****             return (DEF_FAIL);
3376:rtos/uC-Clk/Source/clk.c ****         }
3377:rtos/uC-Clk/Source/clk.c **** 
3378:rtos/uC-Clk/Source/clk.c ****     } else {
3379:rtos/uC-Clk/Source/clk.c ****         if (ts_sec < tz_sec_abs) {                              /* Chk for ovf when tz is pos.     
 756              		.loc 1 3379 9 is_stmt 1 view .LVU210
 757              		.loc 1 3379 12 is_stmt 0 view .LVU211
 758 0086 9542     		cmp	r5, r2
 759 0088 09D3     		bcc	.L71
3380:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too small to substract time zone offset\n\r"));
3381:rtos/uC-Clk/Source/clk.c ****             return (DEF_FAIL);
3382:rtos/uC-Clk/Source/clk.c ****         }
3383:rtos/uC-Clk/Source/clk.c ****         ts_sec -= tz_sec_abs;                                   /* See Note #1c2.                  
 760              		.loc 1 3383 9 is_stmt 1 view .LVU212
 761              		.loc 1 3383 16 is_stmt 0 view .LVU213
 762 008a AD1A     		subs	r5, r5, r2
 763              	.LVL91:
 764              	.L67:
3384:rtos/uC-Clk/Source/clk.c ****     }
3385:rtos/uC-Clk/Source/clk.c **** 
3386:rtos/uC-Clk/Source/clk.c ****    *p_ts_sec = ts_sec;
 765              		.loc 1 3386 4 is_stmt 1 view .LVU214
 766              		.loc 1 3386 14 is_stmt 0 view .LVU215
 767 008c C8F80050 		str	r5, [r8]
3387:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    TS converted       = %u\n\r", (unsigned int)*p_ts_sec));
 768              		.loc 1 3387 80 is_stmt 1 view .LVU216
3388:rtos/uC-Clk/Source/clk.c **** 
3389:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
 769              		.loc 1 3389 5 view .LVU217
 770              		.loc 1 3389 12 is_stmt 0 view .LVU218
 771 0090 0120     		movs	r0, #1
 772              	.LVL92:
 773              	.L66:
3390:rtos/uC-Clk/Source/clk.c **** }
 774              		.loc 1 3390 1 view .LVU219
 775 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 776              	.LVL93:
 777              	.L74:
3372:rtos/uC-Clk/Source/clk.c ****         if (ts_sec < tz_sec_abs) {                              /* Chk for ovf when tz is neg.     
 778              		.loc 1 3372 9 is_stmt 1 view .LVU220
3373:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too big to add time zone offset\n\r"));
 779              		.loc 1 3373 9 view .LVU221
3373:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too big to add time zone offset\n\r"));
 780              		.loc 1 3373 12 is_stmt 0 view .LVU222
 781 0096 AD18     		adds	r5, r5, r2
 782              	.LVL94:
3373:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too big to add time zone offset\n\r"));
 783              		.loc 1 3373 12 view .LVU223
 784 0098 F8D3     		bcc	.L67
3375:rtos/uC-Clk/Source/clk.c ****         }
 785              		.loc 1 3375 20 view .LVU224
 786 009a 0020     		movs	r0, #0
 787              	.LVL95:
3375:rtos/uC-Clk/Source/clk.c ****         }
 788              		.loc 1 3375 20 view .LVU225
ARM GAS  /tmp/cct1pkgW.s 			page 75


 789 009c F9E7     		b	.L66
 790              	.LVL96:
 791              	.L71:
3381:rtos/uC-Clk/Source/clk.c ****         }
 792              		.loc 1 3381 20 view .LVU226
 793 009e 0020     		movs	r0, #0
 794              	.LVL97:
3381:rtos/uC-Clk/Source/clk.c ****         }
 795              		.loc 1 3381 20 view .LVU227
 796 00a0 F7E7     		b	.L66
 797              	.L76:
 798 00a2 00BF     		.align	2
 799              	.L75:
 800 00a4 00000000 		.word	.LANCHOR0
 801 00a8 00000000 		.word	.LANCHOR1
 802 00ac 80510100 		.word	86400
 803              		.cfi_endproc
 804              	.LFE42:
 806              		.section	.text.Clk_SetTZ_Handler,"ax",%progbits
 807              		.align	1
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 811              		.fpu fpv4-sp-d16
 813              	Clk_SetTZ_Handler:
 814              	.LVL98:
 815              	.LFB40:
3049:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 816              		.loc 1 3049 1 is_stmt 1 view -0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
3049:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 820              		.loc 1 3049 1 is_stmt 0 view .LVU229
 821 0000 10B5     		push	{r4, lr}
 822              	.LCFI11:
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 4, -8
 825              		.cfi_offset 14, -4
 826 0002 0446     		mov	r4, r0
3050:rtos/uC-Clk/Source/clk.c **** 
 827              		.loc 1 3050 5 is_stmt 1 view .LVU230
 828              	.LVL99:
3053:rtos/uC-Clk/Source/clk.c ****     Clk_TZ_sec = tz_sec;
 829              		.loc 1 3053 5 view .LVU231
3053:rtos/uC-Clk/Source/clk.c ****     Clk_TZ_sec = tz_sec;
 830              		.loc 1 3053 5 view .LVU232
3053:rtos/uC-Clk/Source/clk.c ****     Clk_TZ_sec = tz_sec;
 831              		.loc 1 3053 5 view .LVU233
 832 0004 4020     		movs	r0, #64
 833              	.LVL100:
3053:rtos/uC-Clk/Source/clk.c ****     Clk_TZ_sec = tz_sec;
 834              		.loc 1 3053 5 is_stmt 0 view .LVU234
 835 0006 FFF7FEFF 		bl	CPU_SR_Save
 836              	.LVL101:
3053:rtos/uC-Clk/Source/clk.c ****     Clk_TZ_sec = tz_sec;
 837              		.loc 1 3053 5 is_stmt 1 view .LVU235
ARM GAS  /tmp/cct1pkgW.s 			page 76


3053:rtos/uC-Clk/Source/clk.c ****     Clk_TZ_sec = tz_sec;
 838              		.loc 1 3053 5 view .LVU236
3054:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 839              		.loc 1 3054 5 view .LVU237
3054:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 840              		.loc 1 3054 16 is_stmt 0 view .LVU238
 841 000a 024B     		ldr	r3, .L79
 842 000c 1C60     		str	r4, [r3]
3055:rtos/uC-Clk/Source/clk.c **** }
 843              		.loc 1 3055 5 is_stmt 1 view .LVU239
3055:rtos/uC-Clk/Source/clk.c **** }
 844              		.loc 1 3055 5 view .LVU240
3055:rtos/uC-Clk/Source/clk.c **** }
 845              		.loc 1 3055 5 view .LVU241
 846 000e FFF7FEFF 		bl	CPU_SR_Restore
 847              	.LVL102:
3055:rtos/uC-Clk/Source/clk.c **** }
 848              		.loc 1 3055 5 view .LVU242
3055:rtos/uC-Clk/Source/clk.c **** }
 849              		.loc 1 3055 5 view .LVU243
3056:rtos/uC-Clk/Source/clk.c **** 
 850              		.loc 1 3056 1 is_stmt 0 view .LVU244
 851 0012 10BD     		pop	{r4, pc}
 852              	.LVL103:
 853              	.L80:
3056:rtos/uC-Clk/Source/clk.c **** 
 854              		.loc 1 3056 1 view .LVU245
 855              		.align	2
 856              	.L79:
 857 0014 00000000 		.word	.LANCHOR2
 858              		.cfi_endproc
 859              	.LFE40:
 861              		.section	.text.Clk_GetDayOfWkHandler,"ax",%progbits
 862              		.align	1
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 866              		.fpu fpv4-sp-d16
 868              	Clk_GetDayOfWkHandler:
 869              	.LVL104:
 870              	.LFB39:
2946:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   leap_yr;
 871              		.loc 1 2946 1 is_stmt 1 view -0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 8
 874              		@ frame_needed = 0, uses_anonymous_args = 0
2946:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   leap_yr;
 875              		.loc 1 2946 1 is_stmt 0 view .LVU247
 876 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 877              	.LCFI12:
 878              		.cfi_def_cfa_offset 36
 879              		.cfi_offset 4, -36
 880              		.cfi_offset 5, -32
 881              		.cfi_offset 6, -28
 882              		.cfi_offset 7, -24
 883              		.cfi_offset 8, -20
 884              		.cfi_offset 9, -16
ARM GAS  /tmp/cct1pkgW.s 			page 77


 885              		.cfi_offset 10, -12
 886              		.cfi_offset 11, -8
 887              		.cfi_offset 14, -4
 888 0004 83B0     		sub	sp, sp, #12
 889              	.LCFI13:
 890              		.cfi_def_cfa_offset 48
 891 0006 8046     		mov	r8, r0
 892 0008 0F46     		mov	r7, r1
2947:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U    leap_yr_ix;
 893              		.loc 1 2947 5 is_stmt 1 view .LVU248
2948:rtos/uC-Clk/Source/clk.c ****     CLK_YR        yr_ix;
 894              		.loc 1 2948 5 view .LVU249
2949:rtos/uC-Clk/Source/clk.c ****     CLK_MONTH     month_ix;
 895              		.loc 1 2949 5 view .LVU250
2950:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       day_of_wk;
 896              		.loc 1 2950 5 view .LVU251
2951:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       days_in_month;
 897              		.loc 1 2951 5 view .LVU252
2952:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       days_month;
 898              		.loc 1 2952 5 view .LVU253
2953:rtos/uC-Clk/Source/clk.c ****     CLK_NBR_DAYS  days_yr;
 899              		.loc 1 2953 5 view .LVU254
2954:rtos/uC-Clk/Source/clk.c ****     CLK_NBR_DAYS  days;
 900              		.loc 1 2954 5 view .LVU255
2955:rtos/uC-Clk/Source/clk.c ****     CLK_YR        cached_yr;
 901              		.loc 1 2955 5 view .LVU256
2956:rtos/uC-Clk/Source/clk.c ****     CLK_NBR_DAYS  cached_yr_days;
 902              		.loc 1 2956 5 view .LVU257
2957:rtos/uC-Clk/Source/clk.c ****     CLK_MONTH     cached_month;
 903              		.loc 1 2957 5 view .LVU258
2958:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       cached_month_days;
 904              		.loc 1 2958 5 view .LVU259
2959:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U    cached_leap_yr;
 905              		.loc 1 2959 5 view .LVU260
2960:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 906              		.loc 1 2960 5 view .LVU261
2961:rtos/uC-Clk/Source/clk.c **** 
 907              		.loc 1 2961 5 view .LVU262
 908              	.LVL105:
2967:rtos/uC-Clk/Source/clk.c **** 
 909              		.loc 1 2967 38 view .LVU263
2969:rtos/uC-Clk/Source/clk.c ****     leap_yr    =  Clk_IsLeapYr(yr);
 910              		.loc 1 2969 5 view .LVU264
2969:rtos/uC-Clk/Source/clk.c ****     leap_yr    =  Clk_IsLeapYr(yr);
 911              		.loc 1 2969 16 is_stmt 0 view .LVU265
 912 000a 02F1FF3B 		add	fp, r2, #-1
 913              	.LVL106:
2970:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix = (leap_yr == DEF_YES) ? 1u : 0u;
 914              		.loc 1 2970 5 is_stmt 1 view .LVU266
2970:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix = (leap_yr == DEF_YES) ? 1u : 0u;
 915              		.loc 1 2970 19 is_stmt 0 view .LVU267
 916 000e FFF7FEFF 		bl	Clk_IsLeapYr
 917              	.LVL107:
2970:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix = (leap_yr == DEF_YES) ? 1u : 0u;
 918              		.loc 1 2970 19 view .LVU268
 919 0012 8146     		mov	r9, r0
 920              	.LVL108:
ARM GAS  /tmp/cct1pkgW.s 			page 78


2971:rtos/uC-Clk/Source/clk.c **** 
 921              		.loc 1 2971 5 is_stmt 1 view .LVU269
2971:rtos/uC-Clk/Source/clk.c **** 
 922              		.loc 1 2971 16 is_stmt 0 view .LVU270
 923 0014 0128     		cmp	r0, #1
 924 0016 17D0     		beq	.L97
 925 0018 0026     		movs	r6, #0
 926              	.L82:
 927              	.LVL109:
2973:rtos/uC-Clk/Source/clk.c ****     cached_yr         = Clk_CacheYr;
 928              		.loc 1 2973 5 is_stmt 1 discriminator 4 view .LVU271
2973:rtos/uC-Clk/Source/clk.c ****     cached_yr         = Clk_CacheYr;
 929              		.loc 1 2973 5 discriminator 4 view .LVU272
2973:rtos/uC-Clk/Source/clk.c ****     cached_yr         = Clk_CacheYr;
 930              		.loc 1 2973 5 discriminator 4 view .LVU273
 931 001a 4020     		movs	r0, #64
 932              	.LVL110:
2973:rtos/uC-Clk/Source/clk.c ****     cached_yr         = Clk_CacheYr;
 933              		.loc 1 2973 5 is_stmt 0 discriminator 4 view .LVU274
 934 001c FFF7FEFF 		bl	CPU_SR_Save
 935              	.LVL111:
2973:rtos/uC-Clk/Source/clk.c ****     cached_yr         = Clk_CacheYr;
 936              		.loc 1 2973 5 is_stmt 1 discriminator 4 view .LVU275
2973:rtos/uC-Clk/Source/clk.c ****     cached_yr         = Clk_CacheYr;
 937              		.loc 1 2973 5 discriminator 4 view .LVU276
2974:rtos/uC-Clk/Source/clk.c ****     cached_yr_days    = Clk_CacheYrDays;
 938              		.loc 1 2974 5 discriminator 4 view .LVU277
2974:rtos/uC-Clk/Source/clk.c ****     cached_yr_days    = Clk_CacheYrDays;
 939              		.loc 1 2974 23 is_stmt 0 discriminator 4 view .LVU278
 940 0020 344B     		ldr	r3, .L100
 941 0022 1B88     		ldrh	r3, [r3]
 942 0024 0093     		str	r3, [sp]
 943              	.LVL112:
2975:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
 944              		.loc 1 2975 5 is_stmt 1 discriminator 4 view .LVU279
2975:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
 945              		.loc 1 2975 23 is_stmt 0 discriminator 4 view .LVU280
 946 0026 344B     		ldr	r3, .L100+4
 947 0028 1D68     		ldr	r5, [r3]
 948              	.LVL113:
2976:rtos/uC-Clk/Source/clk.c ****     cached_month_days = Clk_CacheMonthDays;
 949              		.loc 1 2976 5 is_stmt 1 discriminator 4 view .LVU281
2976:rtos/uC-Clk/Source/clk.c ****     cached_month_days = Clk_CacheMonthDays;
 950              		.loc 1 2976 23 is_stmt 0 discriminator 4 view .LVU282
 951 002a 344B     		ldr	r3, .L100+8
 952 002c 93F800A0 		ldrb	r10, [r3]	@ zero_extendqisi2
 953              	.LVL114:
2977:rtos/uC-Clk/Source/clk.c ****     cached_leap_yr    = Clk_CacheLeapYr;
 954              		.loc 1 2977 5 is_stmt 1 discriminator 4 view .LVU283
2977:rtos/uC-Clk/Source/clk.c ****     cached_leap_yr    = Clk_CacheLeapYr;
 955              		.loc 1 2977 23 is_stmt 0 discriminator 4 view .LVU284
 956 0030 334B     		ldr	r3, .L100+12
 957 0032 1C88     		ldrh	r4, [r3]
 958              	.LVL115:
2978:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 959              		.loc 1 2978 5 is_stmt 1 discriminator 4 view .LVU285
2978:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
ARM GAS  /tmp/cct1pkgW.s 			page 79


 960              		.loc 1 2978 23 is_stmt 0 discriminator 4 view .LVU286
 961 0034 334B     		ldr	r3, .L100+16
 962 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 0038 0193     		str	r3, [sp, #4]
 964              	.LVL116:
2979:rtos/uC-Clk/Source/clk.c **** 
 965              		.loc 1 2979 5 is_stmt 1 discriminator 4 view .LVU287
2979:rtos/uC-Clk/Source/clk.c **** 
 966              		.loc 1 2979 5 discriminator 4 view .LVU288
2979:rtos/uC-Clk/Source/clk.c **** 
 967              		.loc 1 2979 5 discriminator 4 view .LVU289
 968 003a FFF7FEFF 		bl	CPU_SR_Restore
 969              	.LVL117:
2979:rtos/uC-Clk/Source/clk.c **** 
 970              		.loc 1 2979 5 discriminator 4 view .LVU290
2979:rtos/uC-Clk/Source/clk.c **** 
 971              		.loc 1 2979 5 discriminator 4 view .LVU291
2982:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #2e.                   
 972              		.loc 1 2982 5 discriminator 4 view .LVU292
2982:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #2e.                   
 973              		.loc 1 2982 8 is_stmt 0 discriminator 4 view .LVU293
 974 003e BA45     		cmp	r10, r7
 975 0040 04D0     		beq	.L98
 976 0042 0024     		movs	r4, #0
 977              	.LVL118:
2982:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #2e.                   
 978              		.loc 1 2982 8 discriminator 4 view .LVU294
 979 0044 0123     		movs	r3, #1
 980 0046 13E0     		b	.L85
 981              	.LVL119:
 982              	.L97:
2971:rtos/uC-Clk/Source/clk.c **** 
 983              		.loc 1 2971 16 view .LVU295
 984 0048 0646     		mov	r6, r0
 985 004a E6E7     		b	.L82
 986              	.LVL120:
 987              	.L98:
2982:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #2e.                   
 988              		.loc 1 2982 35 discriminator 1 view .LVU296
 989 004c 019B     		ldr	r3, [sp, #4]
 990 004e 9945     		cmp	r9, r3
 991 0050 1CD0     		beq	.L84
 992 0052 0024     		movs	r4, #0
 993              	.LVL121:
2982:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #2e.                   
 994              		.loc 1 2982 35 discriminator 1 view .LVU297
 995 0054 0123     		movs	r3, #1
 996 0056 0BE0     		b	.L85
 997              	.LVL122:
 998              	.L86:
2986:rtos/uC-Clk/Source/clk.c ****             days_month    += days_in_month;
 999              		.loc 1 2986 13 is_stmt 1 discriminator 3 view .LVU298
2986:rtos/uC-Clk/Source/clk.c ****             days_month    += days_in_month;
 1000              		.loc 1 2986 67 is_stmt 0 discriminator 3 view .LVU299
 1001 0058 5A1E     		subs	r2, r3, #1
2986:rtos/uC-Clk/Source/clk.c ****             days_month    += days_in_month;
 1002              		.loc 1 2986 28 discriminator 3 view .LVU300
ARM GAS  /tmp/cct1pkgW.s 			page 80


 1003 005a 06EB4601 		add	r1, r6, r6, lsl #1
 1004 005e 02EB8102 		add	r2, r2, r1, lsl #2
 1005 0062 2949     		ldr	r1, .L100+20
 1006 0064 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 1007              	.LVL123:
2987:rtos/uC-Clk/Source/clk.c ****         }
 1008              		.loc 1 2987 13 is_stmt 1 discriminator 3 view .LVU301
2987:rtos/uC-Clk/Source/clk.c ****         }
 1009              		.loc 1 2987 27 is_stmt 0 discriminator 3 view .LVU302
 1010 0068 1444     		add	r4, r4, r2
 1011              	.LVL124:
2987:rtos/uC-Clk/Source/clk.c ****         }
 1012              		.loc 1 2987 27 discriminator 3 view .LVU303
 1013 006a A4B2     		uxth	r4, r4
 1014              	.LVL125:
2985:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1015              		.loc 1 2985 66 is_stmt 1 discriminator 3 view .LVU304
2985:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1016              		.loc 1 2985 74 is_stmt 0 discriminator 3 view .LVU305
 1017 006c 0133     		adds	r3, r3, #1
 1018              	.LVL126:
2985:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1019              		.loc 1 2985 74 discriminator 3 view .LVU306
 1020 006e DBB2     		uxtb	r3, r3
 1021              	.LVL127:
 1022              	.L85:
2985:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1023              		.loc 1 2985 48 is_stmt 1 discriminator 1 view .LVU307
2985:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1024              		.loc 1 2985 9 is_stmt 0 discriminator 1 view .LVU308
 1025 0070 BB42     		cmp	r3, r7
 1026 0072 F1D3     		bcc	.L86
2990:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #2a.                   
 1027              		.loc 1 2990 9 is_stmt 1 view .LVU309
2990:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #2a.                   
 1028              		.loc 1 2990 9 view .LVU310
2990:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #2a.                   
 1029              		.loc 1 2990 9 view .LVU311
 1030 0074 4020     		movs	r0, #64
 1031 0076 FFF7FEFF 		bl	CPU_SR_Save
 1032              	.LVL128:
2990:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #2a.                   
 1033              		.loc 1 2990 9 view .LVU312
2990:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #2a.                   
 1034              		.loc 1 2990 9 view .LVU313
2991:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonthDays = days_month;                        /* See Note #2b.                   
 1035              		.loc 1 2991 9 view .LVU314
2991:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonthDays = days_month;                        /* See Note #2b.                   
 1036              		.loc 1 2991 28 is_stmt 0 view .LVU315
 1037 007a 204B     		ldr	r3, .L100+8
 1038 007c 1F70     		strb	r7, [r3]
2992:rtos/uC-Clk/Source/clk.c ****         Clk_CacheLeapYr    = leap_yr;
 1039              		.loc 1 2992 9 is_stmt 1 view .LVU316
2992:rtos/uC-Clk/Source/clk.c ****         Clk_CacheLeapYr    = leap_yr;
 1040              		.loc 1 2992 28 is_stmt 0 view .LVU317
 1041 007e 204B     		ldr	r3, .L100+12
 1042 0080 1C80     		strh	r4, [r3]	@ movhi
ARM GAS  /tmp/cct1pkgW.s 			page 81


2993:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
 1043              		.loc 1 2993 9 is_stmt 1 view .LVU318
2993:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
 1044              		.loc 1 2993 28 is_stmt 0 view .LVU319
 1045 0082 204B     		ldr	r3, .L100+16
 1046 0084 83F80090 		strb	r9, [r3]
2994:rtos/uC-Clk/Source/clk.c **** 
 1047              		.loc 1 2994 9 is_stmt 1 view .LVU320
2994:rtos/uC-Clk/Source/clk.c **** 
 1048              		.loc 1 2994 9 view .LVU321
2994:rtos/uC-Clk/Source/clk.c **** 
 1049              		.loc 1 2994 9 view .LVU322
 1050 0088 FFF7FEFF 		bl	CPU_SR_Restore
 1051              	.LVL129:
2994:rtos/uC-Clk/Source/clk.c **** 
 1052              		.loc 1 2994 9 view .LVU323
2994:rtos/uC-Clk/Source/clk.c **** 
 1053              		.loc 1 2994 9 view .LVU324
 1054              	.L84:
3001:rtos/uC-Clk/Source/clk.c ****         days_yr    = 0u;
 1055              		.loc 1 3001 5 view .LVU325
3001:rtos/uC-Clk/Source/clk.c ****         days_yr    = 0u;
 1056              		.loc 1 3001 8 is_stmt 0 view .LVU326
 1057 008c 009B     		ldr	r3, [sp]
 1058 008e 9845     		cmp	r8, r3
 1059 0090 1CD0     		beq	.L88
3002:rtos/uC-Clk/Source/clk.c ****                                                                 /* See Note #1a.                   
 1060              		.loc 1 3002 20 view .LVU327
 1061 0092 0025     		movs	r5, #0
 1062              	.LVL130:
3004:rtos/uC-Clk/Source/clk.c ****             leap_yr     =  Clk_IsLeapYr(yr_ix);
 1063              		.loc 1 3004 20 view .LVU328
 1064 0094 40F26C76 		movw	r6, #1900
 1065              	.LVL131:
3004:rtos/uC-Clk/Source/clk.c ****             leap_yr     =  Clk_IsLeapYr(yr_ix);
 1066              		.loc 1 3004 20 view .LVU329
 1067 0098 05E0     		b	.L87
 1068              	.LVL132:
 1069              	.L89:
3007:rtos/uC-Clk/Source/clk.c ****         }
 1070              		.loc 1 3007 13 is_stmt 1 discriminator 4 view .LVU330
3007:rtos/uC-Clk/Source/clk.c ****         }
 1071              		.loc 1 3007 40 is_stmt 0 discriminator 4 view .LVU331
 1072 009a 1C4B     		ldr	r3, .L100+24
 1073 009c 33F81030 		ldrh	r3, [r3, r0, lsl #1]
3007:rtos/uC-Clk/Source/clk.c ****         }
 1074              		.loc 1 3007 24 discriminator 4 view .LVU332
 1075 00a0 1D44     		add	r5, r5, r3
 1076              	.LVL133:
3004:rtos/uC-Clk/Source/clk.c ****             leap_yr     =  Clk_IsLeapYr(yr_ix);
 1077              		.loc 1 3004 58 is_stmt 1 discriminator 4 view .LVU333
3004:rtos/uC-Clk/Source/clk.c ****             leap_yr     =  Clk_IsLeapYr(yr_ix);
 1078              		.loc 1 3004 63 is_stmt 0 discriminator 4 view .LVU334
 1079 00a2 0136     		adds	r6, r6, #1
 1080              	.LVL134:
3004:rtos/uC-Clk/Source/clk.c ****             leap_yr     =  Clk_IsLeapYr(yr_ix);
 1081              		.loc 1 3004 63 discriminator 4 view .LVU335
ARM GAS  /tmp/cct1pkgW.s 			page 82


 1082 00a4 B6B2     		uxth	r6, r6
 1083              	.LVL135:
 1084              	.L87:
3004:rtos/uC-Clk/Source/clk.c ****             leap_yr     =  Clk_IsLeapYr(yr_ix);
 1085              		.loc 1 3004 46 is_stmt 1 discriminator 2 view .LVU336
3004:rtos/uC-Clk/Source/clk.c ****             leap_yr     =  Clk_IsLeapYr(yr_ix);
 1086              		.loc 1 3004 9 is_stmt 0 discriminator 2 view .LVU337
 1087 00a6 4645     		cmp	r6, r8
 1088 00a8 06D2     		bcs	.L99
3005:rtos/uC-Clk/Source/clk.c ****             leap_yr_ix  = (leap_yr == DEF_YES) ? 1u : 0u;
 1089              		.loc 1 3005 13 is_stmt 1 view .LVU338
3005:rtos/uC-Clk/Source/clk.c ****             leap_yr_ix  = (leap_yr == DEF_YES) ? 1u : 0u;
 1090              		.loc 1 3005 28 is_stmt 0 view .LVU339
 1091 00aa 3046     		mov	r0, r6
 1092 00ac FFF7FEFF 		bl	Clk_IsLeapYr
 1093              	.LVL136:
3006:rtos/uC-Clk/Source/clk.c ****             days_yr    +=  Clk_DaysInYr[leap_yr_ix];
 1094              		.loc 1 3006 13 is_stmt 1 view .LVU340
3006:rtos/uC-Clk/Source/clk.c ****             days_yr    +=  Clk_DaysInYr[leap_yr_ix];
 1095              		.loc 1 3006 25 is_stmt 0 view .LVU341
 1096 00b0 0128     		cmp	r0, #1
 1097 00b2 F2D0     		beq	.L89
 1098 00b4 0020     		movs	r0, #0
 1099              	.LVL137:
3006:rtos/uC-Clk/Source/clk.c ****             days_yr    +=  Clk_DaysInYr[leap_yr_ix];
 1100              		.loc 1 3006 25 view .LVU342
 1101 00b6 F0E7     		b	.L89
 1102              	.L99:
3010:rtos/uC-Clk/Source/clk.c ****         Clk_CacheYr     = yr;                                   /* See Note #2c.                   
 1103              		.loc 1 3010 9 is_stmt 1 view .LVU343
3010:rtos/uC-Clk/Source/clk.c ****         Clk_CacheYr     = yr;                                   /* See Note #2c.                   
 1104              		.loc 1 3010 9 view .LVU344
3010:rtos/uC-Clk/Source/clk.c ****         Clk_CacheYr     = yr;                                   /* See Note #2c.                   
 1105              		.loc 1 3010 9 view .LVU345
 1106 00b8 4020     		movs	r0, #64
 1107 00ba FFF7FEFF 		bl	CPU_SR_Save
 1108              	.LVL138:
3010:rtos/uC-Clk/Source/clk.c ****         Clk_CacheYr     = yr;                                   /* See Note #2c.                   
 1109              		.loc 1 3010 9 view .LVU346
3010:rtos/uC-Clk/Source/clk.c ****         Clk_CacheYr     = yr;                                   /* See Note #2c.                   
 1110              		.loc 1 3010 9 view .LVU347
3011:rtos/uC-Clk/Source/clk.c ****         Clk_CacheYrDays = days_yr;                              /* See Note #2d.                   
 1111              		.loc 1 3011 9 view .LVU348
3011:rtos/uC-Clk/Source/clk.c ****         Clk_CacheYrDays = days_yr;                              /* See Note #2d.                   
 1112              		.loc 1 3011 25 is_stmt 0 view .LVU349
 1113 00be 0D4B     		ldr	r3, .L100
 1114 00c0 A3F80080 		strh	r8, [r3]	@ movhi
3012:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
 1115              		.loc 1 3012 9 is_stmt 1 view .LVU350
3012:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
 1116              		.loc 1 3012 25 is_stmt 0 view .LVU351
 1117 00c4 0C4B     		ldr	r3, .L100+4
 1118 00c6 1D60     		str	r5, [r3]
3013:rtos/uC-Clk/Source/clk.c **** 
 1119              		.loc 1 3013 9 is_stmt 1 view .LVU352
3013:rtos/uC-Clk/Source/clk.c **** 
 1120              		.loc 1 3013 9 view .LVU353
ARM GAS  /tmp/cct1pkgW.s 			page 83


3013:rtos/uC-Clk/Source/clk.c **** 
 1121              		.loc 1 3013 9 view .LVU354
 1122 00c8 FFF7FEFF 		bl	CPU_SR_Restore
 1123              	.LVL139:
3013:rtos/uC-Clk/Source/clk.c **** 
 1124              		.loc 1 3013 9 view .LVU355
3013:rtos/uC-Clk/Source/clk.c **** 
 1125              		.loc 1 3013 9 view .LVU356
 1126              	.L88:
3020:rtos/uC-Clk/Source/clk.c ****     days      += days_yr;
 1127              		.loc 1 3020 5 view .LVU357
3020:rtos/uC-Clk/Source/clk.c ****     days      += days_yr;
 1128              		.loc 1 3020 15 is_stmt 0 view .LVU358
 1129 00cc 5C44     		add	r4, r4, fp
 1130              	.LVL140:
3021:rtos/uC-Clk/Source/clk.c ****     days      += CLK_NTP_EPOCH_DAY_OF_WK;                       /* See Note #1b.                   
 1131              		.loc 1 3021 5 is_stmt 1 view .LVU359
3021:rtos/uC-Clk/Source/clk.c ****     days      += CLK_NTP_EPOCH_DAY_OF_WK;                       /* See Note #1b.                   
 1132              		.loc 1 3021 15 is_stmt 0 view .LVU360
 1133 00ce 2C44     		add	r4, r4, r5
 1134              	.LVL141:
3022:rtos/uC-Clk/Source/clk.c ****     days      -= CLK_FIRST_DAY_OF_WK;
 1135              		.loc 1 3022 5 is_stmt 1 view .LVU361
3023:rtos/uC-Clk/Source/clk.c ****     day_of_wk  = days % DEF_TIME_NBR_DAY_PER_WK;
 1136              		.loc 1 3023 5 view .LVU362
3023:rtos/uC-Clk/Source/clk.c ****     day_of_wk  = days % DEF_TIME_NBR_DAY_PER_WK;
 1137              		.loc 1 3023 15 is_stmt 0 view .LVU363
 1138 00d0 0134     		adds	r4, r4, #1
 1139              	.LVL142:
3024:rtos/uC-Clk/Source/clk.c ****     day_of_wk += CLK_FIRST_DAY_OF_WK;
 1140              		.loc 1 3024 5 is_stmt 1 view .LVU364
3024:rtos/uC-Clk/Source/clk.c ****     day_of_wk += CLK_FIRST_DAY_OF_WK;
 1141              		.loc 1 3024 23 is_stmt 0 view .LVU365
 1142 00d2 0F48     		ldr	r0, .L100+28
 1143 00d4 A0FB0430 		umull	r3, r0, r0, r4
 1144 00d8 231A     		subs	r3, r4, r0
 1145 00da 00EB5300 		add	r0, r0, r3, lsr #1
 1146 00de 8008     		lsrs	r0, r0, #2
 1147 00e0 C0EBC000 		rsb	r0, r0, r0, lsl #3
 1148 00e4 201A     		subs	r0, r4, r0
3024:rtos/uC-Clk/Source/clk.c ****     day_of_wk += CLK_FIRST_DAY_OF_WK;
 1149              		.loc 1 3024 16 view .LVU366
 1150 00e6 80B2     		uxth	r0, r0
 1151              	.LVL143:
3025:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Day of week = %u)\n\r", (unsigned int)day_of_wk));
 1152              		.loc 1 3025 5 is_stmt 1 view .LVU367
3025:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Day of week = %u)\n\r", (unsigned int)day_of_wk));
 1153              		.loc 1 3025 15 is_stmt 0 view .LVU368
 1154 00e8 0130     		adds	r0, r0, #1
 1155              	.LVL144:
3026:rtos/uC-Clk/Source/clk.c **** 
 1156              		.loc 1 3026 70 is_stmt 1 view .LVU369
3028:rtos/uC-Clk/Source/clk.c **** }
 1157              		.loc 1 3028 5 view .LVU370
3029:rtos/uC-Clk/Source/clk.c **** 
 1158              		.loc 1 3029 1 is_stmt 0 view .LVU371
 1159 00ea 80B2     		uxth	r0, r0
ARM GAS  /tmp/cct1pkgW.s 			page 84


3029:rtos/uC-Clk/Source/clk.c **** 
 1160              		.loc 1 3029 1 view .LVU372
 1161 00ec 03B0     		add	sp, sp, #12
 1162              	.LCFI14:
 1163              		.cfi_def_cfa_offset 36
 1164              	.LVL145:
3029:rtos/uC-Clk/Source/clk.c **** 
 1165              		.loc 1 3029 1 view .LVU373
 1166              		@ sp needed
 1167 00ee BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1168              	.LVL146:
 1169              	.L101:
3029:rtos/uC-Clk/Source/clk.c **** 
 1170              		.loc 1 3029 1 view .LVU374
 1171 00f2 00BF     		.align	2
 1172              	.L100:
 1173 00f4 00000000 		.word	.LANCHOR3
 1174 00f8 00000000 		.word	.LANCHOR4
 1175 00fc 00000000 		.word	.LANCHOR5
 1176 0100 00000000 		.word	.LANCHOR6
 1177 0104 00000000 		.word	.LANCHOR7
 1178 0108 00000000 		.word	.LANCHOR0
 1179 010c 00000000 		.word	.LANCHOR1
 1180 0110 25499224 		.word	613566757
 1181              		.cfi_endproc
 1182              	.LFE39:
 1184              		.section	.text.Clk_GetDayOfYrHandler,"ax",%progbits
 1185              		.align	1
 1186              		.syntax unified
 1187              		.thumb
 1188              		.thumb_func
 1189              		.fpu fpv4-sp-d16
 1191              	Clk_GetDayOfYrHandler:
 1192              	.LVL147:
 1193              	.LFB38:
2844:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  leap_yr;
 1194              		.loc 1 2844 1 is_stmt 1 view -0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 0, uses_anonymous_args = 0
2844:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  leap_yr;
 1198              		.loc 1 2844 1 is_stmt 0 view .LVU376
 1199 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1200              	.LCFI15:
 1201              		.cfi_def_cfa_offset 32
 1202              		.cfi_offset 4, -32
 1203              		.cfi_offset 5, -28
 1204              		.cfi_offset 6, -24
 1205              		.cfi_offset 7, -20
 1206              		.cfi_offset 8, -16
 1207              		.cfi_offset 9, -12
 1208              		.cfi_offset 10, -8
 1209              		.cfi_offset 14, -4
 1210 0004 0D46     		mov	r5, r1
2845:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U   leap_yr_ix;
 1211              		.loc 1 2845 5 is_stmt 1 view .LVU377
2846:rtos/uC-Clk/Source/clk.c ****     CLK_MONTH    month_ix;
ARM GAS  /tmp/cct1pkgW.s 			page 85


 1212              		.loc 1 2846 5 view .LVU378
2847:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      day_of_yr;
 1213              		.loc 1 2847 5 view .LVU379
2848:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      days_month;
 1214              		.loc 1 2848 5 view .LVU380
2849:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      days_in_month;
 1215              		.loc 1 2849 5 view .LVU381
2850:rtos/uC-Clk/Source/clk.c ****     CLK_MONTH    cached_month;
 1216              		.loc 1 2850 5 view .LVU382
2851:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      cached_month_days;
 1217              		.loc 1 2851 5 view .LVU383
2852:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U   cached_leap_yr;
 1218              		.loc 1 2852 5 view .LVU384
2853:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 1219              		.loc 1 2853 5 view .LVU385
2854:rtos/uC-Clk/Source/clk.c **** 
 1220              		.loc 1 2854 5 view .LVU386
 1221              	.LVL148:
2860:rtos/uC-Clk/Source/clk.c **** 
 1222              		.loc 1 2860 38 view .LVU387
2862:rtos/uC-Clk/Source/clk.c ****     leap_yr    =  Clk_IsLeapYr(yr);
 1223              		.loc 1 2862 5 view .LVU388
2862:rtos/uC-Clk/Source/clk.c ****     leap_yr    =  Clk_IsLeapYr(yr);
 1224              		.loc 1 2862 16 is_stmt 0 view .LVU389
 1225 0006 561E     		subs	r6, r2, #1
 1226 0008 B6B2     		uxth	r6, r6
 1227              	.LVL149:
2863:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix = (leap_yr == DEF_YES) ? 1u : 0u;
 1228              		.loc 1 2863 5 is_stmt 1 view .LVU390
2863:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix = (leap_yr == DEF_YES) ? 1u : 0u;
 1229              		.loc 1 2863 19 is_stmt 0 view .LVU391
 1230 000a FFF7FEFF 		bl	Clk_IsLeapYr
 1231              	.LVL150:
2863:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix = (leap_yr == DEF_YES) ? 1u : 0u;
 1232              		.loc 1 2863 19 view .LVU392
 1233 000e 0746     		mov	r7, r0
 1234              	.LVL151:
2864:rtos/uC-Clk/Source/clk.c **** 
 1235              		.loc 1 2864 5 is_stmt 1 view .LVU393
2864:rtos/uC-Clk/Source/clk.c **** 
 1236              		.loc 1 2864 16 is_stmt 0 view .LVU394
 1237 0010 0128     		cmp	r0, #1
 1238 0012 14D0     		beq	.L112
 1239 0014 0024     		movs	r4, #0
 1240              	.L103:
 1241              	.LVL152:
2866:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
 1242              		.loc 1 2866 5 is_stmt 1 discriminator 4 view .LVU395
2866:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
 1243              		.loc 1 2866 5 discriminator 4 view .LVU396
2866:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
 1244              		.loc 1 2866 5 discriminator 4 view .LVU397
 1245 0016 4020     		movs	r0, #64
 1246              	.LVL153:
2866:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
 1247              		.loc 1 2866 5 is_stmt 0 discriminator 4 view .LVU398
 1248 0018 FFF7FEFF 		bl	CPU_SR_Save
ARM GAS  /tmp/cct1pkgW.s 			page 86


 1249              	.LVL154:
2866:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
 1250              		.loc 1 2866 5 is_stmt 1 discriminator 4 view .LVU399
2866:rtos/uC-Clk/Source/clk.c ****     cached_month      = Clk_CacheMonth;
 1251              		.loc 1 2866 5 discriminator 4 view .LVU400
2867:rtos/uC-Clk/Source/clk.c ****     cached_month_days = Clk_CacheMonthDays;
 1252              		.loc 1 2867 5 discriminator 4 view .LVU401
2867:rtos/uC-Clk/Source/clk.c ****     cached_month_days = Clk_CacheMonthDays;
 1253              		.loc 1 2867 23 is_stmt 0 discriminator 4 view .LVU402
 1254 001c 1D4B     		ldr	r3, .L114
 1255 001e 93F80090 		ldrb	r9, [r3]	@ zero_extendqisi2
 1256              	.LVL155:
2868:rtos/uC-Clk/Source/clk.c ****     cached_leap_yr    = Clk_CacheLeapYr;
 1257              		.loc 1 2868 5 is_stmt 1 discriminator 4 view .LVU403
2868:rtos/uC-Clk/Source/clk.c ****     cached_leap_yr    = Clk_CacheLeapYr;
 1258              		.loc 1 2868 23 is_stmt 0 discriminator 4 view .LVU404
 1259 0022 1D4B     		ldr	r3, .L114+4
 1260 0024 B3F80080 		ldrh	r8, [r3]
 1261              	.LVL156:
2869:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 1262              		.loc 1 2869 5 is_stmt 1 discriminator 4 view .LVU405
2869:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 1263              		.loc 1 2869 23 is_stmt 0 discriminator 4 view .LVU406
 1264 0028 1C4B     		ldr	r3, .L114+8
 1265 002a 93F800A0 		ldrb	r10, [r3]	@ zero_extendqisi2
 1266              	.LVL157:
2870:rtos/uC-Clk/Source/clk.c ****                                                                 /* Check if cached values can be us
 1267              		.loc 1 2870 5 is_stmt 1 discriminator 4 view .LVU407
2870:rtos/uC-Clk/Source/clk.c ****                                                                 /* Check if cached values can be us
 1268              		.loc 1 2870 5 discriminator 4 view .LVU408
2870:rtos/uC-Clk/Source/clk.c ****                                                                 /* Check if cached values can be us
 1269              		.loc 1 2870 5 discriminator 4 view .LVU409
 1270 002e FFF7FEFF 		bl	CPU_SR_Restore
 1271              	.LVL158:
2870:rtos/uC-Clk/Source/clk.c ****                                                                 /* Check if cached values can be us
 1272              		.loc 1 2870 5 discriminator 4 view .LVU410
2870:rtos/uC-Clk/Source/clk.c ****                                                                 /* Check if cached values can be us
 1273              		.loc 1 2870 5 discriminator 4 view .LVU411
2872:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #1c.                   
 1274              		.loc 1 2872 5 discriminator 4 view .LVU412
2872:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #1c.                   
 1275              		.loc 1 2872 8 is_stmt 0 discriminator 4 view .LVU413
 1276 0032 A945     		cmp	r9, r5
 1277 0034 05D0     		beq	.L113
 1278 0036 4FF00008 		mov	r8, #0
 1279              	.LVL159:
2872:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #1c.                   
 1280              		.loc 1 2872 8 discriminator 4 view .LVU414
 1281 003a 0123     		movs	r3, #1
 1282 003c 14E0     		b	.L106
 1283              	.LVL160:
 1284              	.L112:
2864:rtos/uC-Clk/Source/clk.c **** 
 1285              		.loc 1 2864 16 view .LVU415
 1286 003e 0446     		mov	r4, r0
 1287 0040 E9E7     		b	.L103
 1288              	.LVL161:
ARM GAS  /tmp/cct1pkgW.s 			page 87


 1289              	.L113:
2872:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #1c.                   
 1290              		.loc 1 2872 35 discriminator 1 view .LVU416
 1291 0042 5745     		cmp	r7, r10
 1292 0044 1ED0     		beq	.L105
 1293 0046 4FF00008 		mov	r8, #0
 1294              	.LVL162:
2872:rtos/uC-Clk/Source/clk.c ****         (cached_leap_yr != leap_yr)) {                          /* See Note #1c.                   
 1295              		.loc 1 2872 35 discriminator 1 view .LVU417
 1296 004a 0123     		movs	r3, #1
 1297 004c 0CE0     		b	.L106
 1298              	.LVL163:
 1299              	.L107:
2876:rtos/uC-Clk/Source/clk.c ****             days_month    += days_in_month;
 1300              		.loc 1 2876 13 is_stmt 1 discriminator 3 view .LVU418
2876:rtos/uC-Clk/Source/clk.c ****             days_month    += days_in_month;
 1301              		.loc 1 2876 67 is_stmt 0 discriminator 3 view .LVU419
 1302 004e 5A1E     		subs	r2, r3, #1
2876:rtos/uC-Clk/Source/clk.c ****             days_month    += days_in_month;
 1303              		.loc 1 2876 28 discriminator 3 view .LVU420
 1304 0050 04EB4401 		add	r1, r4, r4, lsl #1
 1305 0054 02EB8102 		add	r2, r2, r1, lsl #2
 1306 0058 1149     		ldr	r1, .L114+12
 1307 005a 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 1308              	.LVL164:
2877:rtos/uC-Clk/Source/clk.c ****         }
 1309              		.loc 1 2877 13 is_stmt 1 discriminator 3 view .LVU421
2877:rtos/uC-Clk/Source/clk.c ****         }
 1310              		.loc 1 2877 27 is_stmt 0 discriminator 3 view .LVU422
 1311 005e 4244     		add	r2, r2, r8
 1312              	.LVL165:
2877:rtos/uC-Clk/Source/clk.c ****         }
 1313              		.loc 1 2877 27 discriminator 3 view .LVU423
 1314 0060 1FFA82F8 		uxth	r8, r2
 1315              	.LVL166:
2875:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1316              		.loc 1 2875 66 is_stmt 1 discriminator 3 view .LVU424
2875:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1317              		.loc 1 2875 74 is_stmt 0 discriminator 3 view .LVU425
 1318 0064 0133     		adds	r3, r3, #1
 1319              	.LVL167:
2875:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1320              		.loc 1 2875 74 discriminator 3 view .LVU426
 1321 0066 DBB2     		uxtb	r3, r3
 1322              	.LVL168:
 1323              	.L106:
2875:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1324              		.loc 1 2875 48 is_stmt 1 discriminator 1 view .LVU427
2875:rtos/uC-Clk/Source/clk.c ****             days_in_month  = Clk_DaysInMonth[leap_yr_ix][month_ix - CLK_FIRST_MONTH_OF_YR];
 1325              		.loc 1 2875 9 is_stmt 0 discriminator 1 view .LVU428
 1326 0068 AB42     		cmp	r3, r5
 1327 006a F0D3     		bcc	.L107
2880:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #1a.                   
 1328              		.loc 1 2880 9 is_stmt 1 view .LVU429
2880:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #1a.                   
 1329              		.loc 1 2880 9 view .LVU430
2880:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #1a.                   
ARM GAS  /tmp/cct1pkgW.s 			page 88


 1330              		.loc 1 2880 9 view .LVU431
 1331 006c 4020     		movs	r0, #64
 1332 006e FFF7FEFF 		bl	CPU_SR_Save
 1333              	.LVL169:
2880:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #1a.                   
 1334              		.loc 1 2880 9 view .LVU432
2880:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonth     = month;                             /* See Note #1a.                   
 1335              		.loc 1 2880 9 view .LVU433
2881:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonthDays = days_month;                        /* See Note #1b.                   
 1336              		.loc 1 2881 9 view .LVU434
2881:rtos/uC-Clk/Source/clk.c ****         Clk_CacheMonthDays = days_month;                        /* See Note #1b.                   
 1337              		.loc 1 2881 28 is_stmt 0 view .LVU435
 1338 0072 084B     		ldr	r3, .L114
 1339 0074 1D70     		strb	r5, [r3]
2882:rtos/uC-Clk/Source/clk.c ****         Clk_CacheLeapYr    = leap_yr;
 1340              		.loc 1 2882 9 is_stmt 1 view .LVU436
2882:rtos/uC-Clk/Source/clk.c ****         Clk_CacheLeapYr    = leap_yr;
 1341              		.loc 1 2882 28 is_stmt 0 view .LVU437
 1342 0076 084B     		ldr	r3, .L114+4
 1343 0078 A3F80080 		strh	r8, [r3]	@ movhi
2883:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
 1344              		.loc 1 2883 9 is_stmt 1 view .LVU438
2883:rtos/uC-Clk/Source/clk.c ****         CPU_CRITICAL_EXIT();
 1345              		.loc 1 2883 28 is_stmt 0 view .LVU439
 1346 007c 074B     		ldr	r3, .L114+8
 1347 007e 1F70     		strb	r7, [r3]
2884:rtos/uC-Clk/Source/clk.c **** 
 1348              		.loc 1 2884 9 is_stmt 1 view .LVU440
2884:rtos/uC-Clk/Source/clk.c **** 
 1349              		.loc 1 2884 9 view .LVU441
2884:rtos/uC-Clk/Source/clk.c **** 
 1350              		.loc 1 2884 9 view .LVU442
 1351 0080 FFF7FEFF 		bl	CPU_SR_Restore
 1352              	.LVL170:
2884:rtos/uC-Clk/Source/clk.c **** 
 1353              		.loc 1 2884 9 view .LVU443
2884:rtos/uC-Clk/Source/clk.c **** 
 1354              		.loc 1 2884 9 view .LVU444
 1355              	.L105:
2890:rtos/uC-Clk/Source/clk.c ****     day_of_yr += CLK_FIRST_DAY_OF_YR;
 1356              		.loc 1 2890 5 view .LVU445
2890:rtos/uC-Clk/Source/clk.c ****     day_of_yr += CLK_FIRST_DAY_OF_YR;
 1357              		.loc 1 2890 15 is_stmt 0 view .LVU446
 1358 0084 08EB0600 		add	r0, r8, r6
 1359 0088 80B2     		uxth	r0, r0
 1360              	.LVL171:
2891:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Day of year = %u\n\r", (unsigned int)day_of_yr));
 1361              		.loc 1 2891 5 is_stmt 1 view .LVU447
2891:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("Day of year = %u\n\r", (unsigned int)day_of_yr));
 1362              		.loc 1 2891 15 is_stmt 0 view .LVU448
 1363 008a 0130     		adds	r0, r0, #1
 1364              	.LVL172:
2892:rtos/uC-Clk/Source/clk.c **** 
 1365              		.loc 1 2892 69 is_stmt 1 view .LVU449
2894:rtos/uC-Clk/Source/clk.c **** }
 1366              		.loc 1 2894 5 view .LVU450
2895:rtos/uC-Clk/Source/clk.c **** 
ARM GAS  /tmp/cct1pkgW.s 			page 89


 1367              		.loc 1 2895 1 is_stmt 0 view .LVU451
 1368 008c 80B2     		uxth	r0, r0
2895:rtos/uC-Clk/Source/clk.c **** 
 1369              		.loc 1 2895 1 view .LVU452
 1370 008e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1371              	.LVL173:
 1372              	.L115:
2895:rtos/uC-Clk/Source/clk.c **** 
 1373              		.loc 1 2895 1 view .LVU453
 1374 0092 00BF     		.align	2
 1375              	.L114:
 1376 0094 00000000 		.word	.LANCHOR5
 1377 0098 00000000 		.word	.LANCHOR6
 1378 009c 00000000 		.word	.LANCHOR7
 1379 00a0 00000000 		.word	.LANCHOR0
 1380              		.cfi_endproc
 1381              	.LFE38:
 1383              		.section	.text.Clk_TS_ToDateTimeHandler,"ax",%progbits
 1384              		.align	1
 1385              		.syntax unified
 1386              		.thumb
 1387              		.thumb_func
 1388              		.fpu fpv4-sp-d16
 1390              	Clk_TS_ToDateTimeHandler:
 1391              	.LVL174:
 1392              	.LFB41:
3107:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    ts_sec_rem;
 1393              		.loc 1 3107 1 is_stmt 1 view -0
 1394              		.cfi_startproc
 1395              		@ args = 4, pretend = 0, frame = 0
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
3107:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    ts_sec_rem;
 1397              		.loc 1 3107 1 is_stmt 0 view .LVU455
 1398 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1399              	.LCFI16:
 1400              		.cfi_def_cfa_offset 24
 1401              		.cfi_offset 3, -24
 1402              		.cfi_offset 4, -20
 1403              		.cfi_offset 5, -16
 1404              		.cfi_offset 6, -12
 1405              		.cfi_offset 7, -8
 1406              		.cfi_offset 14, -4
 1407 0002 BDF81870 		ldrh	r7, [sp, #24]
3108:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    tz_sec_abs;                                   /* See Note #2.                    
 1408              		.loc 1 3108 5 is_stmt 1 view .LVU456
3109:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    sec_to_remove;
 1409              		.loc 1 3109 5 view .LVU457
3110:rtos/uC-Clk/Source/clk.c ****     CLK_NBR_DAYS  days_in_yr;
 1410              		.loc 1 3110 5 view .LVU458
3111:rtos/uC-Clk/Source/clk.c ****     CLK_DAY       days_in_month;
 1411              		.loc 1 3111 5 view .LVU459
3112:rtos/uC-Clk/Source/clk.c ****     CPU_INT08U    leap_yr_ix;
 1412              		.loc 1 3112 5 view .LVU460
3113:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   leap_yr;
 1413              		.loc 1 3113 5 view .LVU461
3114:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   valid;
 1414              		.loc 1 3114 5 view .LVU462
ARM GAS  /tmp/cct1pkgW.s 			page 90


3115:rtos/uC-Clk/Source/clk.c **** 
 1415              		.loc 1 3115 5 view .LVU463
3119:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 1416              		.loc 1 3119 5 view .LVU464
3119:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 1417              		.loc 1 3119 8 is_stmt 0 view .LVU465
 1418 0006 002A     		cmp	r2, #0
 1419 0008 00F09F80 		beq	.L128
 1420 000c 0446     		mov	r4, r0
 1421 000e 0E46     		mov	r6, r1
 1422 0010 1846     		mov	r0, r3
 1423              	.LVL175:
3119:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 1424              		.loc 1 3119 8 view .LVU466
 1425 0012 1546     		mov	r5, r2
3126:rtos/uC-Clk/Source/clk.c ****     tz_sec_abs = DEF_ABS(tz_sec);
 1426              		.loc 1 3126 5 is_stmt 1 view .LVU467
 1427              	.LVL176:
3127:rtos/uC-Clk/Source/clk.c ****     if (tz_sec < 0) {
 1428              		.loc 1 3127 5 view .LVU468
3127:rtos/uC-Clk/Source/clk.c ****     if (tz_sec < 0) {
 1429              		.loc 1 3127 18 is_stmt 0 view .LVU469
 1430 0014 81EAE173 		eor	r3, r1, r1, asr #31
 1431              	.LVL177:
3127:rtos/uC-Clk/Source/clk.c ****     if (tz_sec < 0) {
 1432              		.loc 1 3127 18 view .LVU470
 1433 0018 A3EBE173 		sub	r3, r3, r1, asr #31
 1434              	.LVL178:
3128:rtos/uC-Clk/Source/clk.c ****         if (ts_sec_rem < tz_sec_abs) {                          /* Chk for ovf when tz is neg.     
 1435              		.loc 1 3128 5 is_stmt 1 view .LVU471
3128:rtos/uC-Clk/Source/clk.c ****         if (ts_sec_rem < tz_sec_abs) {                          /* Chk for ovf when tz is neg.     
 1436              		.loc 1 3128 8 is_stmt 0 view .LVU472
 1437 001c 0029     		cmp	r1, #0
 1438 001e 0FDB     		blt	.L140
3136:rtos/uC-Clk/Source/clk.c ****         if (ts_sec_rem < tz_sec_abs) {                          /* Chk for ovf when tz is pos.     
 1439              		.loc 1 3136 9 is_stmt 1 view .LVU473
 1440              	.LVL179:
3137:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too big to add time zone offset\n\r"));
 1441              		.loc 1 3137 9 view .LVU474
3137:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too big to add time zone offset\n\r"));
 1442              		.loc 1 3137 12 is_stmt 0 view .LVU475
 1443 0020 E418     		adds	r4, r4, r3
 1444              	.LVL180:
3137:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too big to add time zone offset\n\r"));
 1445              		.loc 1 3137 12 view .LVU476
 1446 0022 80F09680 		bcs	.L130
 1447              	.LVL181:
 1448              	.L119:
3145:rtos/uC-Clk/Source/clk.c ****     leap_yr         =  Clk_IsLeapYr(p_date_time->Yr);
 1449              		.loc 1 3145 5 is_stmt 1 view .LVU477
3145:rtos/uC-Clk/Source/clk.c ****     leap_yr         =  Clk_IsLeapYr(p_date_time->Yr);
 1450              		.loc 1 3145 21 is_stmt 0 view .LVU478
 1451 0026 2880     		strh	r0, [r5]	@ movhi
3146:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix      = (leap_yr == DEF_YES) ? 1u : 0u;
 1452              		.loc 1 3146 5 is_stmt 1 view .LVU479
3146:rtos/uC-Clk/Source/clk.c ****     leap_yr_ix      = (leap_yr == DEF_YES) ? 1u : 0u;
 1453              		.loc 1 3146 24 is_stmt 0 view .LVU480
ARM GAS  /tmp/cct1pkgW.s 			page 91


 1454 0028 FFF7FEFF 		bl	Clk_IsLeapYr
 1455              	.LVL182:
3147:rtos/uC-Clk/Source/clk.c ****     days_in_yr      =  Clk_DaysInYr[leap_yr_ix];
 1456              		.loc 1 3147 5 is_stmt 1 view .LVU481
3147:rtos/uC-Clk/Source/clk.c ****     days_in_yr      =  Clk_DaysInYr[leap_yr_ix];
 1457              		.loc 1 3147 21 is_stmt 0 view .LVU482
 1458 002c 0128     		cmp	r0, #1
 1459 002e 00D0     		beq	.L120
 1460 0030 0020     		movs	r0, #0
 1461              	.LVL183:
 1462              	.L120:
3148:rtos/uC-Clk/Source/clk.c ****     sec_to_remove   =  days_in_yr * DEF_TIME_NBR_SEC_PER_DAY;
 1463              		.loc 1 3148 5 is_stmt 1 discriminator 4 view .LVU483
3148:rtos/uC-Clk/Source/clk.c ****     sec_to_remove   =  days_in_yr * DEF_TIME_NBR_SEC_PER_DAY;
 1464              		.loc 1 3148 36 is_stmt 0 discriminator 4 view .LVU484
 1465 0032 4C4B     		ldr	r3, .L143
 1466 0034 33F81030 		ldrh	r3, [r3, r0, lsl #1]
 1467              	.LVL184:
3149:rtos/uC-Clk/Source/clk.c ****     while ((ts_sec_rem      >= sec_to_remove) &&
 1468              		.loc 1 3149 5 is_stmt 1 discriminator 4 view .LVU485
3149:rtos/uC-Clk/Source/clk.c ****     while ((ts_sec_rem      >= sec_to_remove) &&
 1469              		.loc 1 3149 21 is_stmt 0 discriminator 4 view .LVU486
 1470 0038 4B4A     		ldr	r2, .L143+4
 1471 003a 02FB03F2 		mul	r2, r2, r3
 1472              	.LVL185:
3150:rtos/uC-Clk/Source/clk.c ****            (p_date_time->Yr <  yr_end)) {
 1473              		.loc 1 3150 5 is_stmt 1 discriminator 4 view .LVU487
3150:rtos/uC-Clk/Source/clk.c ****            (p_date_time->Yr <  yr_end)) {
 1474              		.loc 1 3150 11 is_stmt 0 discriminator 4 view .LVU488
 1475 003e 0AE0     		b	.L121
 1476              	.LVL186:
 1477              	.L140:
3129:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too small to substract time zone offset\n\r"));
 1478              		.loc 1 3129 9 is_stmt 1 view .LVU489
3129:rtos/uC-Clk/Source/clk.c ****             CLK_TRACE_DBG(("    Timestamp is too small to substract time zone offset\n\r"));
 1479              		.loc 1 3129 12 is_stmt 0 view .LVU490
 1480 0040 9C42     		cmp	r4, r3
 1481 0042 C0F08480 		bcc	.L129
3133:rtos/uC-Clk/Source/clk.c **** 
 1482              		.loc 1 3133 9 is_stmt 1 view .LVU491
3133:rtos/uC-Clk/Source/clk.c **** 
 1483              		.loc 1 3133 20 is_stmt 0 view .LVU492
 1484 0046 E41A     		subs	r4, r4, r3
 1485              	.LVL187:
3133:rtos/uC-Clk/Source/clk.c **** 
 1486              		.loc 1 3133 20 view .LVU493
 1487 0048 EDE7     		b	.L119
 1488              	.LVL188:
 1489              	.L122:
3156:rtos/uC-Clk/Source/clk.c ****         sec_to_remove  =  days_in_yr * DEF_TIME_NBR_SEC_PER_DAY;
 1490              		.loc 1 3156 9 is_stmt 1 discriminator 4 view .LVU494
3156:rtos/uC-Clk/Source/clk.c ****         sec_to_remove  =  days_in_yr * DEF_TIME_NBR_SEC_PER_DAY;
 1491              		.loc 1 3156 39 is_stmt 0 discriminator 4 view .LVU495
 1492 004a 464B     		ldr	r3, .L143
 1493 004c 33F81030 		ldrh	r3, [r3, r0, lsl #1]
 1494              	.LVL189:
3157:rtos/uC-Clk/Source/clk.c ****     }
ARM GAS  /tmp/cct1pkgW.s 			page 92


 1495              		.loc 1 3157 9 is_stmt 1 discriminator 4 view .LVU496
3157:rtos/uC-Clk/Source/clk.c ****     }
 1496              		.loc 1 3157 24 is_stmt 0 discriminator 4 view .LVU497
 1497 0050 454A     		ldr	r2, .L143+4
 1498 0052 02FB03F2 		mul	r2, r2, r3
 1499              	.LVL190:
 1500              	.L121:
3150:rtos/uC-Clk/Source/clk.c ****            (p_date_time->Yr <  yr_end)) {
 1501              		.loc 1 3150 11 is_stmt 1 view .LVU498
 1502 0056 9442     		cmp	r4, r2
 1503 0058 0CD3     		bcc	.L123
3151:rtos/uC-Clk/Source/clk.c ****         ts_sec_rem    -=  sec_to_remove;
 1504              		.loc 1 3151 24 is_stmt 0 discriminator 1 view .LVU499
 1505 005a 2B88     		ldrh	r3, [r5]
 1506              	.LVL191:
3150:rtos/uC-Clk/Source/clk.c ****            (p_date_time->Yr <  yr_end)) {
 1507              		.loc 1 3150 47 discriminator 1 view .LVU500
 1508 005c BB42     		cmp	r3, r7
 1509 005e 09D2     		bcs	.L123
3152:rtos/uC-Clk/Source/clk.c ****         p_date_time->Yr++;
 1510              		.loc 1 3152 9 is_stmt 1 view .LVU501
3152:rtos/uC-Clk/Source/clk.c ****         p_date_time->Yr++;
 1511              		.loc 1 3152 23 is_stmt 0 view .LVU502
 1512 0060 A41A     		subs	r4, r4, r2
 1513              	.LVL192:
3153:rtos/uC-Clk/Source/clk.c ****         leap_yr        =  Clk_IsLeapYr(p_date_time->Yr);
 1514              		.loc 1 3153 9 is_stmt 1 view .LVU503
3153:rtos/uC-Clk/Source/clk.c ****         leap_yr        =  Clk_IsLeapYr(p_date_time->Yr);
 1515              		.loc 1 3153 24 is_stmt 0 view .LVU504
 1516 0062 581C     		adds	r0, r3, #1
 1517              	.LVL193:
3153:rtos/uC-Clk/Source/clk.c ****         leap_yr        =  Clk_IsLeapYr(p_date_time->Yr);
 1518              		.loc 1 3153 24 view .LVU505
 1519 0064 80B2     		uxth	r0, r0
 1520 0066 2880     		strh	r0, [r5]	@ movhi
3154:rtos/uC-Clk/Source/clk.c ****         leap_yr_ix     = (leap_yr == DEF_YES) ? 1u : 0u;
 1521              		.loc 1 3154 9 is_stmt 1 view .LVU506
3154:rtos/uC-Clk/Source/clk.c ****         leap_yr_ix     = (leap_yr == DEF_YES) ? 1u : 0u;
 1522              		.loc 1 3154 27 is_stmt 0 view .LVU507
 1523 0068 FFF7FEFF 		bl	Clk_IsLeapYr
 1524              	.LVL194:
3155:rtos/uC-Clk/Source/clk.c ****         days_in_yr     =  Clk_DaysInYr[leap_yr_ix];
 1525              		.loc 1 3155 9 is_stmt 1 view .LVU508
3155:rtos/uC-Clk/Source/clk.c ****         days_in_yr     =  Clk_DaysInYr[leap_yr_ix];
 1526              		.loc 1 3155 24 is_stmt 0 view .LVU509
 1527 006c 0128     		cmp	r0, #1
 1528 006e ECD0     		beq	.L122
 1529 0070 0020     		movs	r0, #0
 1530              	.LVL195:
3155:rtos/uC-Clk/Source/clk.c ****         days_in_yr     =  Clk_DaysInYr[leap_yr_ix];
 1531              		.loc 1 3155 24 view .LVU510
 1532 0072 EAE7     		b	.L122
 1533              	.LVL196:
 1534              	.L123:
3160:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Year conversion has failed\n\r"));
 1535              		.loc 1 3160 5 is_stmt 1 view .LVU511
3160:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Year conversion has failed\n\r"));
ARM GAS  /tmp/cct1pkgW.s 			page 93


 1536              		.loc 1 3160 20 is_stmt 0 view .LVU512
 1537 0074 B5F800C0 		ldrh	ip, [r5]
3160:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Year conversion has failed\n\r"));
 1538              		.loc 1 3160 8 view .LVU513
 1539 0078 BC45     		cmp	ip, r7
 1540 007a 6CD2     		bcs	.L133
3166:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Already determined in 'GET YR'. 
 1541              		.loc 1 3166 5 is_stmt 1 view .LVU514
3166:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Already determined in 'GET YR'. 
 1542              		.loc 1 3166 24 is_stmt 0 view .LVU515
 1543 007c 0123     		movs	r3, #1
 1544 007e AB70     		strb	r3, [r5, #2]
3171:rtos/uC-Clk/Source/clk.c ****     sec_to_remove      =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
 1545              		.loc 1 3171 5 is_stmt 1 view .LVU516
3171:rtos/uC-Clk/Source/clk.c ****     sec_to_remove      =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
 1546              		.loc 1 3171 54 is_stmt 0 view .LVU517
 1547 0080 0146     		mov	r1, r0
3171:rtos/uC-Clk/Source/clk.c ****     sec_to_remove      =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
 1548              		.loc 1 3171 24 view .LVU518
 1549 0082 00EB4003 		add	r3, r0, r0, lsl #1
 1550 0086 394A     		ldr	r2, .L143+8
 1551              	.LVL197:
3171:rtos/uC-Clk/Source/clk.c ****     sec_to_remove      =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
 1552              		.loc 1 3171 24 view .LVU519
 1553 0088 32F83300 		ldrh	r0, [r2, r3, lsl #3]
 1554              	.LVL198:
3172:rtos/uC-Clk/Source/clk.c ****     while ((ts_sec_rem         >= sec_to_remove) &&
 1555              		.loc 1 3172 5 is_stmt 1 view .LVU520
3172:rtos/uC-Clk/Source/clk.c ****     while ((ts_sec_rem         >= sec_to_remove) &&
 1556              		.loc 1 3172 24 is_stmt 0 view .LVU521
 1557 008c 364A     		ldr	r2, .L143+4
 1558 008e 02FB00F2 		mul	r2, r2, r0
 1559              	.LVL199:
3173:rtos/uC-Clk/Source/clk.c ****            (p_date_time->Month <  CLK_MONTH_PER_YR)) {
 1560              		.loc 1 3173 5 is_stmt 1 view .LVU522
 1561              	.L125:
3173:rtos/uC-Clk/Source/clk.c ****            (p_date_time->Month <  CLK_MONTH_PER_YR)) {
 1562              		.loc 1 3173 11 view .LVU523
 1563 0092 9442     		cmp	r4, r2
 1564 0094 12D3     		bcc	.L126
3174:rtos/uC-Clk/Source/clk.c ****         ts_sec_rem    -=  sec_to_remove;
 1565              		.loc 1 3174 24 is_stmt 0 discriminator 1 view .LVU524
 1566 0096 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
3173:rtos/uC-Clk/Source/clk.c ****            (p_date_time->Month <  CLK_MONTH_PER_YR)) {
 1567              		.loc 1 3173 50 discriminator 1 view .LVU525
 1568 0098 0B2B     		cmp	r3, #11
 1569 009a 0FD8     		bhi	.L126
3175:rtos/uC-Clk/Source/clk.c ****         p_date_time->Month++;
 1570              		.loc 1 3175 9 is_stmt 1 view .LVU526
3175:rtos/uC-Clk/Source/clk.c ****         p_date_time->Month++;
 1571              		.loc 1 3175 23 is_stmt 0 view .LVU527
 1572 009c A41A     		subs	r4, r4, r2
 1573              	.LVL200:
3176:rtos/uC-Clk/Source/clk.c ****         days_in_month  =  Clk_DaysInMonth[leap_yr_ix][p_date_time->Month - CLK_FIRST_MONTH_OF_YR];
 1574              		.loc 1 3176 9 is_stmt 1 view .LVU528
3176:rtos/uC-Clk/Source/clk.c ****         days_in_month  =  Clk_DaysInMonth[leap_yr_ix][p_date_time->Month - CLK_FIRST_MONTH_OF_YR];
 1575              		.loc 1 3176 27 is_stmt 0 view .LVU529
ARM GAS  /tmp/cct1pkgW.s 			page 94


 1576 009e 0133     		adds	r3, r3, #1
 1577 00a0 DBB2     		uxtb	r3, r3
 1578 00a2 AB70     		strb	r3, [r5, #2]
3177:rtos/uC-Clk/Source/clk.c ****         sec_to_remove  =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
 1579              		.loc 1 3177 9 is_stmt 1 view .LVU530
3177:rtos/uC-Clk/Source/clk.c ****         sec_to_remove  =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
 1580              		.loc 1 3177 74 is_stmt 0 view .LVU531
 1581 00a4 013B     		subs	r3, r3, #1
3177:rtos/uC-Clk/Source/clk.c ****         sec_to_remove  =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
 1582              		.loc 1 3177 24 view .LVU532
 1583 00a6 01EB4102 		add	r2, r1, r1, lsl #1
 1584              	.LVL201:
3177:rtos/uC-Clk/Source/clk.c ****         sec_to_remove  =  days_in_month * DEF_TIME_NBR_SEC_PER_DAY;
 1585              		.loc 1 3177 24 view .LVU533
 1586 00aa 03EB8203 		add	r3, r3, r2, lsl #2
 1587 00ae 2F4A     		ldr	r2, .L143+8
 1588 00b0 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 1589              	.LVL202:
3178:rtos/uC-Clk/Source/clk.c ****     }
 1590              		.loc 1 3178 9 is_stmt 1 view .LVU534
3178:rtos/uC-Clk/Source/clk.c ****     }
 1591              		.loc 1 3178 24 is_stmt 0 view .LVU535
 1592 00b4 2C4A     		ldr	r2, .L143+4
 1593 00b6 02FB00F2 		mul	r2, r2, r0
 1594              	.LVL203:
3178:rtos/uC-Clk/Source/clk.c ****     }
 1595              		.loc 1 3178 24 view .LVU536
 1596 00ba EAE7     		b	.L125
 1597              	.L126:
3181:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Month conversion has failed\n\r"));
 1598              		.loc 1 3181 5 is_stmt 1 view .LVU537
3181:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Month conversion has failed\n\r"));
 1599              		.loc 1 3181 20 is_stmt 0 view .LVU538
 1600 00bc A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
3181:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Month conversion has failed\n\r"));
 1601              		.loc 1 3181 8 view .LVU539
 1602 00be 0C29     		cmp	r1, #12
 1603 00c0 4BD8     		bhi	.L134
3187:rtos/uC-Clk/Source/clk.c ****     p_date_time->Day  = ts_sec_rem / sec_to_remove;
 1604              		.loc 1 3187 5 is_stmt 1 view .LVU540
 1605              	.LVL204:
3188:rtos/uC-Clk/Source/clk.c ****     p_date_time->Day += CLK_FIRST_DAY_OF_MONTH;
 1606              		.loc 1 3188 5 view .LVU541
3188:rtos/uC-Clk/Source/clk.c ****     p_date_time->Day += CLK_FIRST_DAY_OF_MONTH;
 1607              		.loc 1 3188 36 is_stmt 0 view .LVU542
 1608 00c2 2B4B     		ldr	r3, .L143+12
 1609 00c4 A3FB0423 		umull	r2, r3, r3, r4
 1610 00c8 1F0C     		lsrs	r7, r3, #16
3188:rtos/uC-Clk/Source/clk.c ****     p_date_time->Day += CLK_FIRST_DAY_OF_MONTH;
 1611              		.loc 1 3188 23 view .LVU543
 1612 00ca 3A46     		mov	r2, r7
3189:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem        = ts_sec_rem % sec_to_remove;
 1613              		.loc 1 3189 5 is_stmt 1 view .LVU544
3189:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem        = ts_sec_rem % sec_to_remove;
 1614              		.loc 1 3189 22 is_stmt 0 view .LVU545
 1615 00cc 0132     		adds	r2, r2, #1
 1616 00ce 92B2     		uxth	r2, r2
ARM GAS  /tmp/cct1pkgW.s 			page 95


 1617 00d0 AA80     		strh	r2, [r5, #4]	@ movhi
3190:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Already determined in 'GET MONTH
 1618              		.loc 1 3190 5 is_stmt 1 view .LVU546
3190:rtos/uC-Clk/Source/clk.c **** #if 0                                                           /* Already determined in 'GET MONTH
 1619              		.loc 1 3190 23 is_stmt 0 view .LVU547
 1620 00d2 254B     		ldr	r3, .L143+4
 1621 00d4 03FB1744 		mls	r4, r3, r7, r4
 1622              	.LVL205:
3195:rtos/uC-Clk/Source/clk.c ****          CLK_TRACE_DBG(("    Day conversion has failed\n\r"));
 1623              		.loc 1 3195 5 is_stmt 1 view .LVU548
3195:rtos/uC-Clk/Source/clk.c ****          CLK_TRACE_DBG(("    Day conversion has failed\n\r"));
 1624              		.loc 1 3195 8 is_stmt 0 view .LVU549
 1625 00d8 8242     		cmp	r2, r0
 1626 00da 01D9     		bls	.L141
3197:rtos/uC-Clk/Source/clk.c ****     }
 1627              		.loc 1 3197 17 view .LVU550
 1628 00dc 0020     		movs	r0, #0
 1629              	.LVL206:
3197:rtos/uC-Clk/Source/clk.c ****     }
 1630              		.loc 1 3197 17 view .LVU551
 1631 00de 3BE0     		b	.L117
 1632              	.LVL207:
 1633              	.L141:
3201:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
 1634              		.loc 1 3201 5 is_stmt 1 view .LVU552
3201:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
 1635              		.loc 1 3201 28 is_stmt 0 view .LVU553
 1636 00e0 6046     		mov	r0, ip
 1637              	.LVL208:
3201:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
 1638              		.loc 1 3201 28 view .LVU554
 1639 00e2 FFF7FEFF 		bl	Clk_GetDayOfWkHandler
 1640              	.LVL209:
3201:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
 1641              		.loc 1 3201 26 view .LVU555
 1642 00e6 E880     		strh	r0, [r5, #6]	@ movhi
3204:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 1643              		.loc 1 3204 5 is_stmt 1 view .LVU556
3204:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 1644              		.loc 1 3204 28 is_stmt 0 view .LVU557
 1645 00e8 FFF7FEFF 		bl	Clk_IsDayOfWkValid
 1646              	.LVL210:
3205:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Day of week conversion has failed\n\r"));
 1647              		.loc 1 3205 5 is_stmt 1 view .LVU558
3205:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Day of week conversion has failed\n\r"));
 1648              		.loc 1 3205 8 is_stmt 0 view .LVU559
 1649 00ec 0128     		cmp	r0, #1
 1650 00ee 01D0     		beq	.L142
3207:rtos/uC-Clk/Source/clk.c ****     }
 1651              		.loc 1 3207 16 view .LVU560
 1652 00f0 0020     		movs	r0, #0
 1653              	.LVL211:
3207:rtos/uC-Clk/Source/clk.c ****     }
 1654              		.loc 1 3207 16 view .LVU561
 1655 00f2 31E0     		b	.L117
 1656              	.LVL212:
 1657              	.L142:
ARM GAS  /tmp/cct1pkgW.s 			page 96


3211:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
 1658              		.loc 1 3211 5 is_stmt 1 view .LVU562
3211:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
 1659              		.loc 1 3211 28 is_stmt 0 view .LVU563
 1660 00f4 AA88     		ldrh	r2, [r5, #4]
 1661 00f6 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 1662 00f8 2888     		ldrh	r0, [r5]
 1663              	.LVL213:
3211:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
 1664              		.loc 1 3211 28 view .LVU564
 1665 00fa FFF7FEFF 		bl	Clk_GetDayOfYrHandler
 1666              	.LVL214:
 1667 00fe 0146     		mov	r1, r0
3211:rtos/uC-Clk/Source/clk.c ****                                                  p_date_time->Month,
 1668              		.loc 1 3211 26 view .LVU565
 1669 0100 2881     		strh	r0, [r5, #8]	@ movhi
3214:rtos/uC-Clk/Source/clk.c ****                                               p_date_time->DayOfYr);
 1670              		.loc 1 3214 5 is_stmt 1 view .LVU566
3214:rtos/uC-Clk/Source/clk.c ****                                               p_date_time->DayOfYr);
 1671              		.loc 1 3214 28 is_stmt 0 view .LVU567
 1672 0102 2888     		ldrh	r0, [r5]
 1673 0104 FFF7FEFF 		bl	Clk_IsDayOfYrValid
 1674              	.LVL215:
3216:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Day of year conversion has failed\n\r"));
 1675              		.loc 1 3216 5 is_stmt 1 view .LVU568
3216:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Day of year conversion has failed\n\r"));
 1676              		.loc 1 3216 8 is_stmt 0 view .LVU569
 1677 0108 0128     		cmp	r0, #1
 1678 010a 28D1     		bne	.L137
3222:rtos/uC-Clk/Source/clk.c ****     p_date_time->Hr     = ts_sec_rem / sec_to_remove;
 1679              		.loc 1 3222 5 is_stmt 1 view .LVU570
 1680              	.LVL216:
3223:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem          = ts_sec_rem % sec_to_remove;
 1681              		.loc 1 3223 5 view .LVU571
3223:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem          = ts_sec_rem % sec_to_remove;
 1682              		.loc 1 3223 38 is_stmt 0 view .LVU572
 1683 010c 1948     		ldr	r0, .L143+16
 1684              	.LVL217:
3223:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem          = ts_sec_rem % sec_to_remove;
 1685              		.loc 1 3223 38 view .LVU573
 1686 010e A0FB0430 		umull	r3, r0, r0, r4
 1687 0112 C30A     		lsrs	r3, r0, #11
3223:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem          = ts_sec_rem % sec_to_remove;
 1688              		.loc 1 3223 25 view .LVU574
 1689 0114 C0F3C720 		ubfx	r0, r0, #11, #8
 1690 0118 A872     		strb	r0, [r5, #10]
3224:rtos/uC-Clk/Source/clk.c **** 
 1691              		.loc 1 3224 5 is_stmt 1 view .LVU575
3224:rtos/uC-Clk/Source/clk.c **** 
 1692              		.loc 1 3224 25 is_stmt 0 view .LVU576
 1693 011a 4FF46162 		mov	r2, #3600
 1694 011e 02FB1344 		mls	r4, r2, r3, r4
 1695              	.LVL218:
3227:rtos/uC-Clk/Source/clk.c ****     p_date_time->Min    = ts_sec_rem / sec_to_remove;
 1696              		.loc 1 3227 5 is_stmt 1 view .LVU577
3228:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem          = ts_sec_rem % sec_to_remove;
 1697              		.loc 1 3228 5 view .LVU578
ARM GAS  /tmp/cct1pkgW.s 			page 97


3228:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem          = ts_sec_rem % sec_to_remove;
 1698              		.loc 1 3228 38 is_stmt 0 view .LVU579
 1699 0122 1549     		ldr	r1, .L143+20
 1700 0124 A1FB0431 		umull	r3, r1, r1, r4
 1701 0128 4B09     		lsrs	r3, r1, #5
3228:rtos/uC-Clk/Source/clk.c ****     ts_sec_rem          = ts_sec_rem % sec_to_remove;
 1702              		.loc 1 3228 25 view .LVU580
 1703 012a C1F34711 		ubfx	r1, r1, #5, #8
 1704 012e E972     		strb	r1, [r5, #11]
3229:rtos/uC-Clk/Source/clk.c **** 
 1705              		.loc 1 3229 5 is_stmt 1 view .LVU581
3229:rtos/uC-Clk/Source/clk.c **** 
 1706              		.loc 1 3229 25 is_stmt 0 view .LVU582
 1707 0130 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1708 0134 A4EB8304 		sub	r4, r4, r3, lsl #2
 1709              	.LVL219:
3232:rtos/uC-Clk/Source/clk.c **** 
 1710              		.loc 1 3232 5 is_stmt 1 view .LVU583
3232:rtos/uC-Clk/Source/clk.c **** 
 1711              		.loc 1 3232 25 is_stmt 0 view .LVU584
 1712 0138 E2B2     		uxtb	r2, r4
 1713 013a 2A73     		strb	r2, [r5, #12]
3235:rtos/uC-Clk/Source/clk.c **** 
 1714              		.loc 1 3235 5 is_stmt 1 view .LVU585
3235:rtos/uC-Clk/Source/clk.c **** 
 1715              		.loc 1 3235 25 is_stmt 0 view .LVU586
 1716 013c 2E61     		str	r6, [r5, #16]
3239:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 1717              		.loc 1 3239 5 is_stmt 1 view .LVU587
3239:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 1718              		.loc 1 3239 13 is_stmt 0 view .LVU588
 1719 013e FFF7FEFF 		bl	Clk_IsTimeValid
 1720              	.LVL220:
3240:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Time conversion has failed\n\r"));
 1721              		.loc 1 3240 5 is_stmt 1 view .LVU589
3240:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Time conversion has failed\n\r"));
 1722              		.loc 1 3240 8 is_stmt 0 view .LVU590
 1723 0142 0128     		cmp	r0, #1
 1724 0144 08D0     		beq	.L117
3242:rtos/uC-Clk/Source/clk.c ****     }
 1725              		.loc 1 3242 17 view .LVU591
 1726 0146 0020     		movs	r0, #0
 1727              	.LVL221:
3242:rtos/uC-Clk/Source/clk.c ****     }
 1728              		.loc 1 3242 17 view .LVU592
 1729 0148 06E0     		b	.L117
 1730              	.LVL222:
 1731              	.L128:
3120:rtos/uC-Clk/Source/clk.c ****     }
 1732              		.loc 1 3120 16 view .LVU593
 1733 014a 0020     		movs	r0, #0
 1734              	.LVL223:
3120:rtos/uC-Clk/Source/clk.c ****     }
 1735              		.loc 1 3120 16 view .LVU594
 1736 014c 04E0     		b	.L117
 1737              	.LVL224:
 1738              	.L129:
ARM GAS  /tmp/cct1pkgW.s 			page 98


3131:rtos/uC-Clk/Source/clk.c ****         }
 1739              		.loc 1 3131 20 view .LVU595
 1740 014e 0020     		movs	r0, #0
 1741 0150 02E0     		b	.L117
 1742              	.LVL225:
 1743              	.L130:
3139:rtos/uC-Clk/Source/clk.c ****         }
 1744              		.loc 1 3139 20 view .LVU596
 1745 0152 0020     		movs	r0, #0
 1746 0154 00E0     		b	.L117
 1747              	.LVL226:
 1748              	.L133:
3162:rtos/uC-Clk/Source/clk.c ****     }
 1749              		.loc 1 3162 16 view .LVU597
 1750 0156 0020     		movs	r0, #0
 1751              	.LVL227:
 1752              	.L117:
3262:rtos/uC-Clk/Source/clk.c **** 
 1753              		.loc 1 3262 1 view .LVU598
 1754 0158 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1755              	.LVL228:
 1756              	.L134:
3183:rtos/uC-Clk/Source/clk.c ****     }
 1757              		.loc 1 3183 16 view .LVU599
 1758 015a 0020     		movs	r0, #0
 1759              	.LVL229:
3183:rtos/uC-Clk/Source/clk.c ****     }
 1760              		.loc 1 3183 16 view .LVU600
 1761 015c FCE7     		b	.L117
 1762              	.LVL230:
 1763              	.L137:
3218:rtos/uC-Clk/Source/clk.c ****     }
 1764              		.loc 1 3218 16 view .LVU601
 1765 015e 0020     		movs	r0, #0
 1766              	.LVL231:
3218:rtos/uC-Clk/Source/clk.c ****     }
 1767              		.loc 1 3218 16 view .LVU602
 1768 0160 FAE7     		b	.L117
 1769              	.L144:
 1770 0162 00BF     		.align	2
 1771              	.L143:
 1772 0164 00000000 		.word	.LANCHOR1
 1773 0168 80510100 		.word	86400
 1774 016c 00000000 		.word	.LANCHOR0
 1775 0170 07452EC2 		.word	-1037155065
 1776 0174 C5B3A291 		.word	-1851608123
 1777 0178 89888888 		.word	-2004318071
 1778              		.cfi_endproc
 1779              	.LFE41:
 1781              		.section	.text.Clk_DateTimeMakeHandler,"ax",%progbits
 1782              		.align	1
 1783              		.syntax unified
 1784              		.thumb
 1785              		.thumb_func
 1786              		.fpu fpv4-sp-d16
 1788              	Clk_DateTimeMakeHandler:
 1789              	.LVL232:
ARM GAS  /tmp/cct1pkgW.s 			page 99


 1790              	.LFB43:
3391:rtos/uC-Clk/Source/clk.c **** 
3392:rtos/uC-Clk/Source/clk.c **** 
3393:rtos/uC-Clk/Source/clk.c **** /*
3394:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
3395:rtos/uC-Clk/Source/clk.c **** *                                     Clk_DateTimeMakeHandler()
3396:rtos/uC-Clk/Source/clk.c **** *
3397:rtos/uC-Clk/Source/clk.c **** * Description : Build a valid epoch date/time structure.
3398:rtos/uC-Clk/Source/clk.c **** *
3399:rtos/uC-Clk/Source/clk.c **** * Argument(s) : p_date_time     Pointer to variable that will receive the date/time structure.
3400:rtos/uC-Clk/Source/clk.c **** *
3401:rtos/uC-Clk/Source/clk.c **** *               yr              Year    value [yr_start      to yr_end).
3402:rtos/uC-Clk/Source/clk.c **** *
3403:rtos/uC-Clk/Source/clk.c **** *               month           Month   value [CLK_MONTH_JAN to CLK_MONTH_DEC].
3404:rtos/uC-Clk/Source/clk.c **** *
3405:rtos/uC-Clk/Source/clk.c **** *               day             Day     value [            1 to            31].
3406:rtos/uC-Clk/Source/clk.c **** *
3407:rtos/uC-Clk/Source/clk.c **** *               hr              Hours   value [            0 to            23].
3408:rtos/uC-Clk/Source/clk.c **** *
3409:rtos/uC-Clk/Source/clk.c **** *               min             Minutes value [            0 to            59].
3410:rtos/uC-Clk/Source/clk.c **** *
3411:rtos/uC-Clk/Source/clk.c **** *               sec             Seconds value [            0 to            60] (see Note #2).
3412:rtos/uC-Clk/Source/clk.c **** *
3413:rtos/uC-Clk/Source/clk.c **** *               tz_sec          Time zone offset (in seconds, +|- from UTC) [-43200 to 43200].
3414:rtos/uC-Clk/Source/clk.c **** *
3415:rtos/uC-Clk/Source/clk.c **** *               yr_start        Start year of the epoch.
3416:rtos/uC-Clk/Source/clk.c **** *
3417:rtos/uC-Clk/Source/clk.c **** *               yr_end          End   year of the epoch.
3418:rtos/uC-Clk/Source/clk.c **** *
3419:rtos/uC-Clk/Source/clk.c **** * Return(s)   : DEF_OK,   if date/time structure is valid.
3420:rtos/uC-Clk/Source/clk.c **** *
3421:rtos/uC-Clk/Source/clk.c **** *               DEF_FAIL, otherwise.
3422:rtos/uC-Clk/Source/clk.c **** *
3423:rtos/uC-Clk/Source/clk.c **** * Note(s)     : (1) Day of week ('p_date_time->DayOfWk') and Day of year ('p_date_time->DayOfYr')
3424:rtos/uC-Clk/Source/clk.c **** *                   are internally calculated and set in the date/time structure if date is valid.
3425:rtos/uC-Clk/Source/clk.c **** *
3426:rtos/uC-Clk/Source/clk.c **** *               (2) Seconds value of 60 is valid to be compatible with leap second adjustment and
3427:rtos/uC-Clk/Source/clk.c **** *                   the atomic clock time structure.
3428:rtos/uC-Clk/Source/clk.c **** *
3429:rtos/uC-Clk/Source/clk.c **** *               (3) Time zone is based ('tz_sec') on Coordinated Universal Time (UTC) & has valid
3430:rtos/uC-Clk/Source/clk.c **** *                   values :
3431:rtos/uC-Clk/Source/clk.c **** *
3432:rtos/uC-Clk/Source/clk.c **** *                   (a) Between  +|- 12 hours (+|- 43200 seconds)
3433:rtos/uC-Clk/Source/clk.c **** *                   (b) Multiples of 15 minute
3434:rtos/uC-Clk/Source/clk.c **** ***************************************************************************************************
3435:rtos/uC-Clk/Source/clk.c **** */
3436:rtos/uC-Clk/Source/clk.c **** 
3437:rtos/uC-Clk/Source/clk.c **** static  CPU_BOOLEAN  Clk_DateTimeMakeHandler (CLK_DATE_TIME  *p_date_time,
3438:rtos/uC-Clk/Source/clk.c ****                                               CLK_YR          yr,
3439:rtos/uC-Clk/Source/clk.c ****                                               CLK_MONTH       month,
3440:rtos/uC-Clk/Source/clk.c ****                                               CLK_DAY         day,
3441:rtos/uC-Clk/Source/clk.c ****                                               CLK_HR          hr,
3442:rtos/uC-Clk/Source/clk.c ****                                               CLK_MIN         min,
3443:rtos/uC-Clk/Source/clk.c ****                                               CLK_SEC         sec,
3444:rtos/uC-Clk/Source/clk.c ****                                               CLK_TZ_SEC      tz_sec,
3445:rtos/uC-Clk/Source/clk.c ****                                               CLK_YR          yr_start,
3446:rtos/uC-Clk/Source/clk.c ****                                               CLK_YR          yr_end)
ARM GAS  /tmp/cct1pkgW.s 			page 100


3447:rtos/uC-Clk/Source/clk.c **** {
 1791              		.loc 1 3447 1 is_stmt 1 view -0
 1792              		.cfi_startproc
 1793              		@ args = 24, pretend = 0, frame = 0
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 1795              		.loc 1 3447 1 is_stmt 0 view .LVU604
 1796 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1797              	.LCFI17:
 1798              		.cfi_def_cfa_offset 32
 1799              		.cfi_offset 4, -32
 1800              		.cfi_offset 5, -28
 1801              		.cfi_offset 6, -24
 1802              		.cfi_offset 7, -20
 1803              		.cfi_offset 8, -16
 1804              		.cfi_offset 9, -12
 1805              		.cfi_offset 10, -8
 1806              		.cfi_offset 14, -4
 1807 0004 82B0     		sub	sp, sp, #8
 1808              	.LCFI18:
 1809              		.cfi_def_cfa_offset 40
 1810 0006 9DF828A0 		ldrb	r10, [sp, #40]	@ zero_extendqisi2
 1811 000a 9DF82C90 		ldrb	r9, [sp, #44]	@ zero_extendqisi2
 1812 000e 9DF83080 		ldrb	r8, [sp, #48]	@ zero_extendqisi2
3448:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 1813              		.loc 1 3448 5 is_stmt 1 view .LVU605
3449:rtos/uC-Clk/Source/clk.c **** 
3450:rtos/uC-Clk/Source/clk.c **** 
3451:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* -------------- VALIDATE DATE/TIM
3452:rtos/uC-Clk/Source/clk.c ****     if (p_date_time == (CLK_DATE_TIME *)0) {
 1814              		.loc 1 3452 5 view .LVU606
 1815              		.loc 1 3452 8 is_stmt 0 view .LVU607
 1816 0012 0028     		cmp	r0, #0
 1817 0014 43D0     		beq	.L147
 1818 0016 0C46     		mov	r4, r1
 1819 0018 1546     		mov	r5, r2
 1820 001a 1E46     		mov	r6, r3
 1821 001c 0746     		mov	r7, r0
3453:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
3454:rtos/uC-Clk/Source/clk.c ****     }
3455:rtos/uC-Clk/Source/clk.c **** #endif
3456:rtos/uC-Clk/Source/clk.c **** 
3457:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ VALIDATE DATE
3458:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDateValid(yr, month, day, yr_start, yr_end);
 1822              		.loc 1 3458 5 is_stmt 1 view .LVU608
 1823              		.loc 1 3458 13 is_stmt 0 view .LVU609
 1824 001e BDF83C30 		ldrh	r3, [sp, #60]
 1825              	.LVL233:
 1826              		.loc 1 3458 13 view .LVU610
 1827 0022 0093     		str	r3, [sp]
 1828 0024 BDF83830 		ldrh	r3, [sp, #56]
 1829 0028 3246     		mov	r2, r6
 1830              	.LVL234:
 1831              		.loc 1 3458 13 view .LVU611
 1832 002a 2946     		mov	r1, r5
 1833              	.LVL235:
 1834              		.loc 1 3458 13 view .LVU612
 1835 002c 2046     		mov	r0, r4
ARM GAS  /tmp/cct1pkgW.s 			page 101


 1836              	.LVL236:
 1837              		.loc 1 3458 13 view .LVU613
 1838 002e FFF7FEFF 		bl	Clk_IsDateValid
 1839              	.LVL237:
3459:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1840              		.loc 1 3459 5 is_stmt 1 view .LVU614
 1841              		.loc 1 3459 8 is_stmt 0 view .LVU615
 1842 0032 0128     		cmp	r0, #1
 1843 0034 03D0     		beq	.L154
3460:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 1844              		.loc 1 3460 17 view .LVU616
 1845 0036 0020     		movs	r0, #0
 1846              	.LVL238:
 1847              	.L146:
3461:rtos/uC-Clk/Source/clk.c ****     }
3462:rtos/uC-Clk/Source/clk.c **** 
3463:rtos/uC-Clk/Source/clk.c ****     p_date_time->Yr      = yr;
3464:rtos/uC-Clk/Source/clk.c ****     p_date_time->Month   = month;
3465:rtos/uC-Clk/Source/clk.c ****     p_date_time->Day     = day;
3466:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfWk = Clk_GetDayOfWkHandler(yr, month, day);
3467:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfYr = Clk_GetDayOfYrHandler(yr, month, day);
3468:rtos/uC-Clk/Source/clk.c **** 
3469:rtos/uC-Clk/Source/clk.c **** 
3470:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DAY OF
3471:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDayOfWkValid(p_date_time->DayOfWk);
3472:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
3473:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
3474:rtos/uC-Clk/Source/clk.c ****     }
3475:rtos/uC-Clk/Source/clk.c **** 
3476:rtos/uC-Clk/Source/clk.c ****                                                                 /* ---------------- VALIDATE DAY OF
3477:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsDayOfYrValid(yr, p_date_time->DayOfYr);
3478:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
3479:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
3480:rtos/uC-Clk/Source/clk.c ****     }
3481:rtos/uC-Clk/Source/clk.c **** 
3482:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------ VALIDATE TIME
3483:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsTimeValid(hr, min, sec);
3484:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
3485:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
3486:rtos/uC-Clk/Source/clk.c ****     }
3487:rtos/uC-Clk/Source/clk.c **** 
3488:rtos/uC-Clk/Source/clk.c ****     p_date_time->Hr  = hr;
3489:rtos/uC-Clk/Source/clk.c ****     p_date_time->Min = min;
3490:rtos/uC-Clk/Source/clk.c ****     p_date_time->Sec = sec;
3491:rtos/uC-Clk/Source/clk.c **** 
3492:rtos/uC-Clk/Source/clk.c ****                                                                 /* ------------------- VALIDATE TZ 
3493:rtos/uC-Clk/Source/clk.c ****     valid = Clk_IsTZValid(tz_sec);
3494:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
3495:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
3496:rtos/uC-Clk/Source/clk.c ****     }
3497:rtos/uC-Clk/Source/clk.c **** 
3498:rtos/uC-Clk/Source/clk.c ****     p_date_time->TZ_sec = tz_sec;
3499:rtos/uC-Clk/Source/clk.c **** 
3500:rtos/uC-Clk/Source/clk.c ****     return (DEF_OK);
3501:rtos/uC-Clk/Source/clk.c **** }
 1848              		.loc 1 3501 1 view .LVU617
 1849 0038 02B0     		add	sp, sp, #8
ARM GAS  /tmp/cct1pkgW.s 			page 102


 1850              	.LCFI19:
 1851              		.cfi_remember_state
 1852              		.cfi_def_cfa_offset 32
 1853              		@ sp needed
 1854 003a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1855              	.LVL239:
 1856              	.L154:
 1857              	.LCFI20:
 1858              		.cfi_restore_state
3463:rtos/uC-Clk/Source/clk.c ****     p_date_time->Month   = month;
 1859              		.loc 1 3463 5 is_stmt 1 view .LVU618
3463:rtos/uC-Clk/Source/clk.c ****     p_date_time->Month   = month;
 1860              		.loc 1 3463 26 is_stmt 0 view .LVU619
 1861 003e 3C80     		strh	r4, [r7]	@ movhi
3464:rtos/uC-Clk/Source/clk.c ****     p_date_time->Day     = day;
 1862              		.loc 1 3464 5 is_stmt 1 view .LVU620
3464:rtos/uC-Clk/Source/clk.c ****     p_date_time->Day     = day;
 1863              		.loc 1 3464 26 is_stmt 0 view .LVU621
 1864 0040 BD70     		strb	r5, [r7, #2]
3465:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfWk = Clk_GetDayOfWkHandler(yr, month, day);
 1865              		.loc 1 3465 5 is_stmt 1 view .LVU622
3465:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfWk = Clk_GetDayOfWkHandler(yr, month, day);
 1866              		.loc 1 3465 26 is_stmt 0 view .LVU623
 1867 0042 BE80     		strh	r6, [r7, #4]	@ movhi
3466:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfYr = Clk_GetDayOfYrHandler(yr, month, day);
 1868              		.loc 1 3466 5 is_stmt 1 view .LVU624
3466:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfYr = Clk_GetDayOfYrHandler(yr, month, day);
 1869              		.loc 1 3466 28 is_stmt 0 view .LVU625
 1870 0044 3246     		mov	r2, r6
 1871 0046 2946     		mov	r1, r5
 1872 0048 2046     		mov	r0, r4
 1873              	.LVL240:
3466:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfYr = Clk_GetDayOfYrHandler(yr, month, day);
 1874              		.loc 1 3466 28 view .LVU626
 1875 004a FFF7FEFF 		bl	Clk_GetDayOfWkHandler
 1876              	.LVL241:
3466:rtos/uC-Clk/Source/clk.c ****     p_date_time->DayOfYr = Clk_GetDayOfYrHandler(yr, month, day);
 1877              		.loc 1 3466 26 view .LVU627
 1878 004e F880     		strh	r0, [r7, #6]	@ movhi
3467:rtos/uC-Clk/Source/clk.c **** 
 1879              		.loc 1 3467 5 is_stmt 1 view .LVU628
3467:rtos/uC-Clk/Source/clk.c **** 
 1880              		.loc 1 3467 28 is_stmt 0 view .LVU629
 1881 0050 3246     		mov	r2, r6
 1882 0052 2946     		mov	r1, r5
 1883 0054 2046     		mov	r0, r4
 1884 0056 FFF7FEFF 		bl	Clk_GetDayOfYrHandler
 1885              	.LVL242:
 1886 005a 0546     		mov	r5, r0
3467:rtos/uC-Clk/Source/clk.c **** 
 1887              		.loc 1 3467 26 view .LVU630
 1888 005c 3881     		strh	r0, [r7, #8]	@ movhi
3471:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1889              		.loc 1 3471 5 is_stmt 1 view .LVU631
3471:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1890              		.loc 1 3471 13 is_stmt 0 view .LVU632
 1891 005e F888     		ldrh	r0, [r7, #6]
ARM GAS  /tmp/cct1pkgW.s 			page 103


 1892 0060 FFF7FEFF 		bl	Clk_IsDayOfWkValid
 1893              	.LVL243:
3472:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 1894              		.loc 1 3472 5 is_stmt 1 view .LVU633
3472:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 1895              		.loc 1 3472 8 is_stmt 0 view .LVU634
 1896 0064 0128     		cmp	r0, #1
 1897 0066 1CD1     		bne	.L149
3477:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1898              		.loc 1 3477 5 is_stmt 1 view .LVU635
3477:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1899              		.loc 1 3477 13 is_stmt 0 view .LVU636
 1900 0068 2946     		mov	r1, r5
 1901 006a 2046     		mov	r0, r4
 1902              	.LVL244:
3477:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1903              		.loc 1 3477 13 view .LVU637
 1904 006c FFF7FEFF 		bl	Clk_IsDayOfYrValid
 1905              	.LVL245:
3478:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 1906              		.loc 1 3478 5 is_stmt 1 view .LVU638
3478:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 1907              		.loc 1 3478 8 is_stmt 0 view .LVU639
 1908 0070 0128     		cmp	r0, #1
 1909 0072 18D1     		bne	.L150
3483:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1910              		.loc 1 3483 5 is_stmt 1 view .LVU640
3483:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1911              		.loc 1 3483 13 is_stmt 0 view .LVU641
 1912 0074 4246     		mov	r2, r8
 1913 0076 4946     		mov	r1, r9
 1914 0078 5046     		mov	r0, r10
 1915              	.LVL246:
3483:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1916              		.loc 1 3483 13 view .LVU642
 1917 007a FFF7FEFF 		bl	Clk_IsTimeValid
 1918              	.LVL247:
3484:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 1919              		.loc 1 3484 5 is_stmt 1 view .LVU643
3484:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 1920              		.loc 1 3484 8 is_stmt 0 view .LVU644
 1921 007e 0128     		cmp	r0, #1
 1922 0080 13D1     		bne	.L151
3488:rtos/uC-Clk/Source/clk.c ****     p_date_time->Min = min;
 1923              		.loc 1 3488 5 is_stmt 1 view .LVU645
3488:rtos/uC-Clk/Source/clk.c ****     p_date_time->Min = min;
 1924              		.loc 1 3488 22 is_stmt 0 view .LVU646
 1925 0082 87F80AA0 		strb	r10, [r7, #10]
3489:rtos/uC-Clk/Source/clk.c ****     p_date_time->Sec = sec;
 1926              		.loc 1 3489 5 is_stmt 1 view .LVU647
3489:rtos/uC-Clk/Source/clk.c ****     p_date_time->Sec = sec;
 1927              		.loc 1 3489 22 is_stmt 0 view .LVU648
 1928 0086 87F80B90 		strb	r9, [r7, #11]
3490:rtos/uC-Clk/Source/clk.c **** 
 1929              		.loc 1 3490 5 is_stmt 1 view .LVU649
3490:rtos/uC-Clk/Source/clk.c **** 
 1930              		.loc 1 3490 22 is_stmt 0 view .LVU650
ARM GAS  /tmp/cct1pkgW.s 			page 104


 1931 008a 87F80C80 		strb	r8, [r7, #12]
3493:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1932              		.loc 1 3493 5 is_stmt 1 view .LVU651
3493:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1933              		.loc 1 3493 13 is_stmt 0 view .LVU652
 1934 008e 0D98     		ldr	r0, [sp, #52]
 1935              	.LVL248:
3493:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 1936              		.loc 1 3493 13 view .LVU653
 1937 0090 FFF7FEFF 		bl	Clk_IsTZValid
 1938              	.LVL249:
3494:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 1939              		.loc 1 3494 5 is_stmt 1 view .LVU654
3494:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 1940              		.loc 1 3494 8 is_stmt 0 view .LVU655
 1941 0094 0128     		cmp	r0, #1
 1942 0096 0AD1     		bne	.L152
3498:rtos/uC-Clk/Source/clk.c **** 
 1943              		.loc 1 3498 5 is_stmt 1 view .LVU656
3498:rtos/uC-Clk/Source/clk.c **** 
 1944              		.loc 1 3498 25 is_stmt 0 view .LVU657
 1945 0098 0D9B     		ldr	r3, [sp, #52]
 1946 009a 3B61     		str	r3, [r7, #16]
3500:rtos/uC-Clk/Source/clk.c **** }
 1947              		.loc 1 3500 5 is_stmt 1 view .LVU658
3500:rtos/uC-Clk/Source/clk.c **** }
 1948              		.loc 1 3500 12 is_stmt 0 view .LVU659
 1949 009c CCE7     		b	.L146
 1950              	.LVL250:
 1951              	.L147:
3453:rtos/uC-Clk/Source/clk.c ****     }
 1952              		.loc 1 3453 16 view .LVU660
 1953 009e 0020     		movs	r0, #0
 1954              	.LVL251:
3453:rtos/uC-Clk/Source/clk.c ****     }
 1955              		.loc 1 3453 16 view .LVU661
 1956 00a0 CAE7     		b	.L146
 1957              	.LVL252:
 1958              	.L149:
3473:rtos/uC-Clk/Source/clk.c ****     }
 1959              		.loc 1 3473 17 view .LVU662
 1960 00a2 0020     		movs	r0, #0
 1961              	.LVL253:
3473:rtos/uC-Clk/Source/clk.c ****     }
 1962              		.loc 1 3473 17 view .LVU663
 1963 00a4 C8E7     		b	.L146
 1964              	.LVL254:
 1965              	.L150:
3479:rtos/uC-Clk/Source/clk.c ****     }
 1966              		.loc 1 3479 17 view .LVU664
 1967 00a6 0020     		movs	r0, #0
 1968              	.LVL255:
3479:rtos/uC-Clk/Source/clk.c ****     }
 1969              		.loc 1 3479 17 view .LVU665
 1970 00a8 C6E7     		b	.L146
 1971              	.LVL256:
 1972              	.L151:
ARM GAS  /tmp/cct1pkgW.s 			page 105


3485:rtos/uC-Clk/Source/clk.c ****     }
 1973              		.loc 1 3485 17 view .LVU666
 1974 00aa 0020     		movs	r0, #0
 1975              	.LVL257:
3485:rtos/uC-Clk/Source/clk.c ****     }
 1976              		.loc 1 3485 17 view .LVU667
 1977 00ac C4E7     		b	.L146
 1978              	.LVL258:
 1979              	.L152:
3495:rtos/uC-Clk/Source/clk.c ****     }
 1980              		.loc 1 3495 17 view .LVU668
 1981 00ae 0020     		movs	r0, #0
 1982              	.LVL259:
3495:rtos/uC-Clk/Source/clk.c ****     }
 1983              		.loc 1 3495 17 view .LVU669
 1984 00b0 C2E7     		b	.L146
 1985              		.cfi_endproc
 1986              	.LFE43:
 1988              		.section	.text.Clk_Init,"ax",%progbits
 1989              		.align	1
 1990              		.global	Clk_Init
 1991              		.syntax unified
 1992              		.thumb
 1993              		.thumb_func
 1994              		.fpu fpv4-sp-d16
 1996              	Clk_Init:
 1997              	.LVL260:
 1998              	.LFB0:
 295:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE ERR P
 1999              		.loc 1 295 1 is_stmt 1 view -0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 0
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
 297:rtos/uC-Clk/Source/clk.c ****         return;
 2003              		.loc 1 297 5 view .LVU671
 297:rtos/uC-Clk/Source/clk.c ****         return;
 2004              		.loc 1 297 8 is_stmt 0 view .LVU672
 2005 0000 B8B1     		cbz	r0, .L158
 295:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE ERR P
 2006              		.loc 1 295 1 view .LVU673
 2007 0002 10B5     		push	{r4, lr}
 2008              	.LCFI21:
 2009              		.cfi_def_cfa_offset 8
 2010              		.cfi_offset 4, -8
 2011              		.cfi_offset 14, -4
 2012 0004 0446     		mov	r4, r0
 306:rtos/uC-Clk/Source/clk.c ****     if (*p_err != CLK_OS_ERR_NONE) {
 2013              		.loc 1 306 5 is_stmt 1 view .LVU674
 2014 0006 FFF7FEFF 		bl	Clk_OS_Init
 2015              	.LVL261:
 307:rtos/uC-Clk/Source/clk.c ****          return;
 2016              		.loc 1 307 5 view .LVU675
 307:rtos/uC-Clk/Source/clk.c ****          return;
 2017              		.loc 1 307 9 is_stmt 0 view .LVU676
 2018 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 307:rtos/uC-Clk/Source/clk.c ****          return;
 2019              		.loc 1 307 8 view .LVU677
ARM GAS  /tmp/cct1pkgW.s 			page 106


 2020 000c 642B     		cmp	r3, #100
 2021 000e 0FD1     		bne	.L155
 311:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_SIGNAL_EN == DEF_ENABLED)
 2022              		.loc 1 311 5 is_stmt 1 view .LVU678
 311:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_SIGNAL_EN == DEF_ENABLED)
 2023              		.loc 1 311 20 is_stmt 0 view .LVU679
 2024 0010 0023     		movs	r3, #0
 2025 0012 084A     		ldr	r2, .L161
 2026 0014 1360     		str	r3, [r2]
 316:rtos/uC-Clk/Source/clk.c ****     Clk_CacheMonth      = CLK_MONTH_NONE;
 2027              		.loc 1 316 5 is_stmt 1 view .LVU680
 316:rtos/uC-Clk/Source/clk.c ****     Clk_CacheMonth      = CLK_MONTH_NONE;
 2028              		.loc 1 316 25 is_stmt 0 view .LVU681
 2029 0016 084A     		ldr	r2, .L161+4
 2030 0018 1360     		str	r3, [r2]
 317:rtos/uC-Clk/Source/clk.c ****     Clk_CacheMonthDays  = CLK_DAY_NONE;
 2031              		.loc 1 317 5 is_stmt 1 view .LVU682
 317:rtos/uC-Clk/Source/clk.c ****     Clk_CacheMonthDays  = CLK_DAY_NONE;
 2032              		.loc 1 317 25 is_stmt 0 view .LVU683
 2033 001a 084A     		ldr	r2, .L161+8
 2034 001c 1370     		strb	r3, [r2]
 318:rtos/uC-Clk/Source/clk.c ****     Clk_CacheYr         = CLK_YR_NONE;
 2035              		.loc 1 318 5 is_stmt 1 view .LVU684
 318:rtos/uC-Clk/Source/clk.c ****     Clk_CacheYr         = CLK_YR_NONE;
 2036              		.loc 1 318 25 is_stmt 0 view .LVU685
 2037 001e 084A     		ldr	r2, .L161+12
 2038 0020 1380     		strh	r3, [r2]	@ movhi
 319:rtos/uC-Clk/Source/clk.c ****     Clk_CacheYrDays     = CLK_DAY_NONE;
 2039              		.loc 1 319 5 is_stmt 1 view .LVU686
 319:rtos/uC-Clk/Source/clk.c ****     Clk_CacheYrDays     = CLK_DAY_NONE;
 2040              		.loc 1 319 25 is_stmt 0 view .LVU687
 2041 0022 084A     		ldr	r2, .L161+16
 2042 0024 1380     		strh	r3, [r2]	@ movhi
 320:rtos/uC-Clk/Source/clk.c ****     Clk_CacheLeapYr     = 0u;
 2043              		.loc 1 320 5 is_stmt 1 view .LVU688
 320:rtos/uC-Clk/Source/clk.c ****     Clk_CacheLeapYr     = 0u;
 2044              		.loc 1 320 25 is_stmt 0 view .LVU689
 2045 0026 084A     		ldr	r2, .L161+20
 2046 0028 1360     		str	r3, [r2]
 321:rtos/uC-Clk/Source/clk.c **** 
 2047              		.loc 1 321 5 is_stmt 1 view .LVU690
 321:rtos/uC-Clk/Source/clk.c **** 
 2048              		.loc 1 321 25 is_stmt 0 view .LVU691
 2049 002a 084A     		ldr	r2, .L161+24
 2050 002c 1370     		strb	r3, [r2]
 324:rtos/uC-Clk/Source/clk.c **** }
 2051              		.loc 1 324 4 is_stmt 1 view .LVU692
 324:rtos/uC-Clk/Source/clk.c **** }
 2052              		.loc 1 324 11 is_stmt 0 view .LVU693
 2053 002e 2370     		strb	r3, [r4]
 2054              	.L155:
 325:rtos/uC-Clk/Source/clk.c **** 
 2055              		.loc 1 325 1 view .LVU694
 2056 0030 10BD     		pop	{r4, pc}
 2057              	.LVL262:
 2058              	.L158:
 2059              	.LCFI22:
ARM GAS  /tmp/cct1pkgW.s 			page 107


 2060              		.cfi_def_cfa_offset 0
 2061              		.cfi_restore 4
 2062              		.cfi_restore 14
 325:rtos/uC-Clk/Source/clk.c **** 
 2063              		.loc 1 325 1 view .LVU695
 2064 0032 7047     		bx	lr
 2065              	.L162:
 2066              		.align	2
 2067              	.L161:
 2068 0034 00000000 		.word	.LANCHOR8
 2069 0038 00000000 		.word	.LANCHOR2
 2070 003c 00000000 		.word	.LANCHOR5
 2071 0040 00000000 		.word	.LANCHOR6
 2072 0044 00000000 		.word	.LANCHOR3
 2073 0048 00000000 		.word	.LANCHOR4
 2074 004c 00000000 		.word	.LANCHOR7
 2075              		.cfi_endproc
 2076              	.LFE0:
 2078              		.section	.text.Clk_TaskHandler,"ax",%progbits
 2079              		.align	1
 2080              		.global	Clk_TaskHandler
 2081              		.syntax unified
 2082              		.thumb
 2083              		.thumb_func
 2084              		.fpu fpv4-sp-d16
 2086              	Clk_TaskHandler:
 2087              	.LFB1:
 348:rtos/uC-Clk/Source/clk.c ****     CLK_ERR  err;
 2088              		.loc 1 348 1 is_stmt 1 view -0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 8
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 2092 0000 00B5     		push	{lr}
 2093              	.LCFI23:
 2094              		.cfi_def_cfa_offset 4
 2095              		.cfi_offset 14, -4
 2096 0002 83B0     		sub	sp, sp, #12
 2097              	.LCFI24:
 2098              		.cfi_def_cfa_offset 16
 2099 0004 01E0     		b	.L164
 2100              	.LVL263:
 2101              	.L165:
 364:rtos/uC-Clk/Source/clk.c ****     }
 2102              		.loc 1 364 9 view .LVU697
 364:rtos/uC-Clk/Source/clk.c ****     }
 2103              		.loc 1 364 9 view .LVU698
 364:rtos/uC-Clk/Source/clk.c ****     }
 2104              		.loc 1 364 9 view .LVU699
 2105 0006 FFF7FEFF 		bl	CPU_SR_Restore
 2106              	.LVL264:
 364:rtos/uC-Clk/Source/clk.c ****     }
 2107              		.loc 1 364 9 view .LVU700
 364:rtos/uC-Clk/Source/clk.c ****     }
 2108              		.loc 1 364 9 view .LVU701
 353:rtos/uC-Clk/Source/clk.c ****                                                                 /* --------------- WAIT FOR CLK SIG
 2109              		.loc 1 353 11 view .LVU702
 2110              	.L164:
ARM GAS  /tmp/cct1pkgW.s 			page 108


 353:rtos/uC-Clk/Source/clk.c ****                                                                 /* --------------- WAIT FOR CLK SIG
 2111              		.loc 1 353 5 discriminator 1 view .LVU703
 355:rtos/uC-Clk/Source/clk.c ****             Clk_OS_Wait(&err);
 2112              		.loc 1 355 9 discriminator 1 view .LVU704
 356:rtos/uC-Clk/Source/clk.c ****         } while (err != CLK_OS_ERR_NONE);
 2113              		.loc 1 356 13 discriminator 1 view .LVU705
 2114 000a 0DF10700 		add	r0, sp, #7
 2115 000e FFF7FEFF 		bl	Clk_OS_Wait
 2116              	.LVL265:
 357:rtos/uC-Clk/Source/clk.c **** 
 2117              		.loc 1 357 17 discriminator 1 view .LVU706
 357:rtos/uC-Clk/Source/clk.c **** 
 2118              		.loc 1 357 22 is_stmt 0 discriminator 1 view .LVU707
 2119 0012 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 357:rtos/uC-Clk/Source/clk.c **** 
 2120              		.loc 1 357 9 discriminator 1 view .LVU708
 2121 0016 642B     		cmp	r3, #100
 2122 0018 F7D1     		bne	.L164
 360:rtos/uC-Clk/Source/clk.c ****         if (Clk_TS_UTC_sec < CLK_TS_SEC_MAX) {
 2123              		.loc 1 360 9 is_stmt 1 view .LVU709
 360:rtos/uC-Clk/Source/clk.c ****         if (Clk_TS_UTC_sec < CLK_TS_SEC_MAX) {
 2124              		.loc 1 360 9 view .LVU710
 360:rtos/uC-Clk/Source/clk.c ****         if (Clk_TS_UTC_sec < CLK_TS_SEC_MAX) {
 2125              		.loc 1 360 9 view .LVU711
 2126 001a 4020     		movs	r0, #64
 2127 001c FFF7FEFF 		bl	CPU_SR_Save
 2128              	.LVL266:
 360:rtos/uC-Clk/Source/clk.c ****         if (Clk_TS_UTC_sec < CLK_TS_SEC_MAX) {
 2129              		.loc 1 360 9 view .LVU712
 360:rtos/uC-Clk/Source/clk.c ****         if (Clk_TS_UTC_sec < CLK_TS_SEC_MAX) {
 2130              		.loc 1 360 9 view .LVU713
 361:rtos/uC-Clk/Source/clk.c ****             Clk_TS_UTC_sec++;
 2131              		.loc 1 361 9 view .LVU714
 361:rtos/uC-Clk/Source/clk.c ****             Clk_TS_UTC_sec++;
 2132              		.loc 1 361 28 is_stmt 0 view .LVU715
 2133 0020 044B     		ldr	r3, .L168
 2134 0022 1B68     		ldr	r3, [r3]
 361:rtos/uC-Clk/Source/clk.c ****             Clk_TS_UTC_sec++;
 2135              		.loc 1 361 12 view .LVU716
 2136 0024 B3F1FF3F 		cmp	r3, #-1
 2137 0028 EDD0     		beq	.L165
 362:rtos/uC-Clk/Source/clk.c ****         }
 2138              		.loc 1 362 13 is_stmt 1 view .LVU717
 362:rtos/uC-Clk/Source/clk.c ****         }
 2139              		.loc 1 362 27 is_stmt 0 view .LVU718
 2140 002a 0133     		adds	r3, r3, #1
 2141 002c 014A     		ldr	r2, .L168
 2142 002e 1360     		str	r3, [r2]
 2143 0030 E9E7     		b	.L165
 2144              	.L169:
 2145 0032 00BF     		.align	2
 2146              	.L168:
 2147 0034 00000000 		.word	.LANCHOR8
 2148              		.cfi_endproc
 2149              	.LFE1:
 2151              		.section	.text.Clk_GetTS,"ax",%progbits
 2152              		.align	1
ARM GAS  /tmp/cct1pkgW.s 			page 109


 2153              		.global	Clk_GetTS
 2154              		.syntax unified
 2155              		.thumb
 2156              		.thumb_func
 2157              		.fpu fpv4-sp-d16
 2159              	Clk_GetTS:
 2160              	.LFB2:
 443:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC  ts_sec;
 2161              		.loc 1 443 1 is_stmt 1 view -0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 0
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165 0000 10B5     		push	{r4, lr}
 2166              	.LCFI25:
 2167              		.cfi_def_cfa_offset 8
 2168              		.cfi_offset 4, -8
 2169              		.cfi_offset 14, -4
 444:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_EXT_EN != DEF_ENABLED)
 2170              		.loc 1 444 5 view .LVU720
 446:rtos/uC-Clk/Source/clk.c **** 
 2171              		.loc 1 446 5 view .LVU721
 2172              	.LVL267:
 449:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_TS_UTC_sec;
 2173              		.loc 1 449 5 view .LVU722
 449:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_TS_UTC_sec;
 2174              		.loc 1 449 5 view .LVU723
 449:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_TS_UTC_sec;
 2175              		.loc 1 449 5 view .LVU724
 2176 0002 4020     		movs	r0, #64
 2177 0004 FFF7FEFF 		bl	CPU_SR_Save
 2178              	.LVL268:
 449:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_TS_UTC_sec;
 2179              		.loc 1 449 5 view .LVU725
 449:rtos/uC-Clk/Source/clk.c ****     ts_sec = Clk_TS_UTC_sec;
 2180              		.loc 1 449 5 view .LVU726
 450:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 2181              		.loc 1 450 5 view .LVU727
 450:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 2182              		.loc 1 450 12 is_stmt 0 view .LVU728
 2183 0008 024B     		ldr	r3, .L172
 2184 000a 1C68     		ldr	r4, [r3]
 2185              	.LVL269:
 451:rtos/uC-Clk/Source/clk.c **** #else
 2186              		.loc 1 451 5 is_stmt 1 view .LVU729
 451:rtos/uC-Clk/Source/clk.c **** #else
 2187              		.loc 1 451 5 view .LVU730
 451:rtos/uC-Clk/Source/clk.c **** #else
 2188              		.loc 1 451 5 view .LVU731
 2189 000c FFF7FEFF 		bl	CPU_SR_Restore
 2190              	.LVL270:
 451:rtos/uC-Clk/Source/clk.c **** #else
 2191              		.loc 1 451 5 view .LVU732
 451:rtos/uC-Clk/Source/clk.c **** #else
 2192              		.loc 1 451 5 view .LVU733
 456:rtos/uC-Clk/Source/clk.c **** }
 2193              		.loc 1 456 5 view .LVU734
 457:rtos/uC-Clk/Source/clk.c **** 
ARM GAS  /tmp/cct1pkgW.s 			page 110


 2194              		.loc 1 457 1 is_stmt 0 view .LVU735
 2195 0010 2046     		mov	r0, r4
 2196 0012 10BD     		pop	{r4, pc}
 2197              	.LVL271:
 2198              	.L173:
 457:rtos/uC-Clk/Source/clk.c **** 
 2199              		.loc 1 457 1 view .LVU736
 2200              		.align	2
 2201              	.L172:
 2202 0014 00000000 		.word	.LANCHOR8
 2203              		.cfi_endproc
 2204              	.LFE2:
 2206              		.section	.text.Clk_SetTS,"ax",%progbits
 2207              		.align	1
 2208              		.global	Clk_SetTS
 2209              		.syntax unified
 2210              		.thumb
 2211              		.thumb_func
 2212              		.fpu fpv4-sp-d16
 2214              	Clk_SetTS:
 2215              	.LVL272:
 2216              	.LFB3:
 480:rtos/uC-Clk/Source/clk.c ****      CPU_BOOLEAN  valid;
 2217              		.loc 1 480 1 is_stmt 1 view -0
 2218              		.cfi_startproc
 2219              		@ args = 0, pretend = 0, frame = 0
 2220              		@ frame_needed = 0, uses_anonymous_args = 0
 480:rtos/uC-Clk/Source/clk.c ****      CPU_BOOLEAN  valid;
 2221              		.loc 1 480 1 is_stmt 0 view .LVU738
 2222 0000 10B5     		push	{r4, lr}
 2223              	.LCFI26:
 2224              		.cfi_def_cfa_offset 8
 2225              		.cfi_offset 4, -8
 2226              		.cfi_offset 14, -4
 2227 0002 0446     		mov	r4, r0
 481:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_EXT_EN != DEF_ENABLED)
 2228              		.loc 1 481 6 is_stmt 1 view .LVU739
 483:rtos/uC-Clk/Source/clk.c **** 
 2229              		.loc 1 483 5 view .LVU740
 2230              	.LVL273:
 486:rtos/uC-Clk/Source/clk.c ****     Clk_TS_UTC_sec = ts_sec;
 2231              		.loc 1 486 5 view .LVU741
 486:rtos/uC-Clk/Source/clk.c ****     Clk_TS_UTC_sec = ts_sec;
 2232              		.loc 1 486 5 view .LVU742
 486:rtos/uC-Clk/Source/clk.c ****     Clk_TS_UTC_sec = ts_sec;
 2233              		.loc 1 486 5 view .LVU743
 2234 0004 4020     		movs	r0, #64
 2235              	.LVL274:
 486:rtos/uC-Clk/Source/clk.c ****     Clk_TS_UTC_sec = ts_sec;
 2236              		.loc 1 486 5 is_stmt 0 view .LVU744
 2237 0006 FFF7FEFF 		bl	CPU_SR_Save
 2238              	.LVL275:
 486:rtos/uC-Clk/Source/clk.c ****     Clk_TS_UTC_sec = ts_sec;
 2239              		.loc 1 486 5 is_stmt 1 view .LVU745
 486:rtos/uC-Clk/Source/clk.c ****     Clk_TS_UTC_sec = ts_sec;
 2240              		.loc 1 486 5 view .LVU746
 487:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
ARM GAS  /tmp/cct1pkgW.s 			page 111


 2241              		.loc 1 487 5 view .LVU747
 487:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 2242              		.loc 1 487 20 is_stmt 0 view .LVU748
 2243 000a 034B     		ldr	r3, .L176
 2244 000c 1C60     		str	r4, [r3]
 488:rtos/uC-Clk/Source/clk.c **** 
 2245              		.loc 1 488 5 is_stmt 1 view .LVU749
 488:rtos/uC-Clk/Source/clk.c **** 
 2246              		.loc 1 488 5 view .LVU750
 488:rtos/uC-Clk/Source/clk.c **** 
 2247              		.loc 1 488 5 view .LVU751
 2248 000e FFF7FEFF 		bl	CPU_SR_Restore
 2249              	.LVL276:
 488:rtos/uC-Clk/Source/clk.c **** 
 2250              		.loc 1 488 5 view .LVU752
 488:rtos/uC-Clk/Source/clk.c **** 
 2251              		.loc 1 488 5 view .LVU753
 490:rtos/uC-Clk/Source/clk.c **** #else
 2252              		.loc 1 490 5 view .LVU754
 495:rtos/uC-Clk/Source/clk.c **** }
 2253              		.loc 1 495 5 view .LVU755
 496:rtos/uC-Clk/Source/clk.c **** 
 2254              		.loc 1 496 1 is_stmt 0 view .LVU756
 2255 0012 0120     		movs	r0, #1
 2256 0014 10BD     		pop	{r4, pc}
 2257              	.LVL277:
 2258              	.L177:
 496:rtos/uC-Clk/Source/clk.c **** 
 2259              		.loc 1 496 1 view .LVU757
 2260 0016 00BF     		.align	2
 2261              	.L176:
 2262 0018 00000000 		.word	.LANCHOR8
 2263              		.cfi_endproc
 2264              	.LFE3:
 2266              		.section	.text.Clk_GetTZ,"ax",%progbits
 2267              		.align	1
 2268              		.global	Clk_GetTZ
 2269              		.syntax unified
 2270              		.thumb
 2271              		.thumb_func
 2272              		.fpu fpv4-sp-d16
 2274              	Clk_GetTZ:
 2275              	.LFB4:
 519:rtos/uC-Clk/Source/clk.c ****     CLK_TZ_SEC  tz_sec;
 2276              		.loc 1 519 1 is_stmt 1 view -0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 0
 2279              		@ frame_needed = 0, uses_anonymous_args = 0
 2280 0000 10B5     		push	{r4, lr}
 2281              	.LCFI27:
 2282              		.cfi_def_cfa_offset 8
 2283              		.cfi_offset 4, -8
 2284              		.cfi_offset 14, -4
 520:rtos/uC-Clk/Source/clk.c ****     CPU_SR_ALLOC();
 2285              		.loc 1 520 5 view .LVU759
 521:rtos/uC-Clk/Source/clk.c **** 
 2286              		.loc 1 521 5 view .LVU760
ARM GAS  /tmp/cct1pkgW.s 			page 112


 2287              	.LVL278:
 524:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_TZ_sec;
 2288              		.loc 1 524 5 view .LVU761
 524:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_TZ_sec;
 2289              		.loc 1 524 5 view .LVU762
 524:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_TZ_sec;
 2290              		.loc 1 524 5 view .LVU763
 2291 0002 4020     		movs	r0, #64
 2292 0004 FFF7FEFF 		bl	CPU_SR_Save
 2293              	.LVL279:
 524:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_TZ_sec;
 2294              		.loc 1 524 5 view .LVU764
 524:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_TZ_sec;
 2295              		.loc 1 524 5 view .LVU765
 525:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 2296              		.loc 1 525 5 view .LVU766
 525:rtos/uC-Clk/Source/clk.c ****     CPU_CRITICAL_EXIT();
 2297              		.loc 1 525 12 is_stmt 0 view .LVU767
 2298 0008 024B     		ldr	r3, .L180
 2299 000a 1C68     		ldr	r4, [r3]
 2300              	.LVL280:
 526:rtos/uC-Clk/Source/clk.c **** 
 2301              		.loc 1 526 5 is_stmt 1 view .LVU768
 526:rtos/uC-Clk/Source/clk.c **** 
 2302              		.loc 1 526 5 view .LVU769
 526:rtos/uC-Clk/Source/clk.c **** 
 2303              		.loc 1 526 5 view .LVU770
 2304 000c FFF7FEFF 		bl	CPU_SR_Restore
 2305              	.LVL281:
 526:rtos/uC-Clk/Source/clk.c **** 
 2306              		.loc 1 526 5 view .LVU771
 526:rtos/uC-Clk/Source/clk.c **** 
 2307              		.loc 1 526 5 view .LVU772
 528:rtos/uC-Clk/Source/clk.c **** }
 2308              		.loc 1 528 5 view .LVU773
 529:rtos/uC-Clk/Source/clk.c **** 
 2309              		.loc 1 529 1 is_stmt 0 view .LVU774
 2310 0010 2046     		mov	r0, r4
 2311 0012 10BD     		pop	{r4, pc}
 2312              	.LVL282:
 2313              	.L181:
 529:rtos/uC-Clk/Source/clk.c **** 
 2314              		.loc 1 529 1 view .LVU775
 2315              		.align	2
 2316              	.L180:
 2317 0014 00000000 		.word	.LANCHOR2
 2318              		.cfi_endproc
 2319              	.LFE4:
 2321              		.section	.text.Clk_SetTZ,"ax",%progbits
 2322              		.align	1
 2323              		.global	Clk_SetTZ
 2324              		.syntax unified
 2325              		.thumb
 2326              		.thumb_func
 2327              		.fpu fpv4-sp-d16
 2329              	Clk_SetTZ:
 2330              	.LVL283:
ARM GAS  /tmp/cct1pkgW.s 			page 113


 2331              	.LFB5:
 554:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2332              		.loc 1 554 1 is_stmt 1 view -0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 0
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 554:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2336              		.loc 1 554 1 is_stmt 0 view .LVU777
 2337 0000 38B5     		push	{r3, r4, r5, lr}
 2338              	.LCFI28:
 2339              		.cfi_def_cfa_offset 16
 2340              		.cfi_offset 3, -16
 2341              		.cfi_offset 4, -12
 2342              		.cfi_offset 5, -8
 2343              		.cfi_offset 14, -4
 2344 0002 0546     		mov	r5, r0
 555:rtos/uC-Clk/Source/clk.c **** 
 2345              		.loc 1 555 5 is_stmt 1 view .LVU778
 558:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 2346              		.loc 1 558 5 view .LVU779
 558:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_YES) {
 2347              		.loc 1 558 13 is_stmt 0 view .LVU780
 2348 0004 FFF7FEFF 		bl	Clk_IsTZValid
 2349              	.LVL284:
 559:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2350              		.loc 1 559 5 is_stmt 1 view .LVU781
 559:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2351              		.loc 1 559 8 is_stmt 0 view .LVU782
 2352 0008 0128     		cmp	r0, #1
 2353 000a 02D0     		beq	.L186
 560:rtos/uC-Clk/Source/clk.c ****     }
 2354              		.loc 1 560 17 view .LVU783
 2355 000c 0024     		movs	r4, #0
 2356              	.LVL285:
 2357              	.L183:
 567:rtos/uC-Clk/Source/clk.c **** 
 2358              		.loc 1 567 1 view .LVU784
 2359 000e 2046     		mov	r0, r4
 2360 0010 38BD     		pop	{r3, r4, r5, pc}
 2361              	.LVL286:
 2362              	.L186:
 567:rtos/uC-Clk/Source/clk.c **** 
 2363              		.loc 1 567 1 view .LVU785
 2364 0012 0446     		mov	r4, r0
 564:rtos/uC-Clk/Source/clk.c **** 
 2365              		.loc 1 564 5 is_stmt 1 view .LVU786
 2366 0014 2846     		mov	r0, r5
 2367              	.LVL287:
 564:rtos/uC-Clk/Source/clk.c **** 
 2368              		.loc 1 564 5 is_stmt 0 view .LVU787
 2369 0016 FFF7FEFF 		bl	Clk_SetTZ_Handler
 2370              	.LVL288:
 566:rtos/uC-Clk/Source/clk.c **** }
 2371              		.loc 1 566 5 is_stmt 1 view .LVU788
 566:rtos/uC-Clk/Source/clk.c **** }
 2372              		.loc 1 566 12 is_stmt 0 view .LVU789
 2373 001a F8E7     		b	.L183
ARM GAS  /tmp/cct1pkgW.s 			page 114


 2374              		.cfi_endproc
 2375              	.LFE5:
 2377              		.section	.text.Clk_TS_ToDateTime,"ax",%progbits
 2378              		.align	1
 2379              		.global	Clk_TS_ToDateTime
 2380              		.syntax unified
 2381              		.thumb
 2382              		.thumb_func
 2383              		.fpu fpv4-sp-d16
 2385              	Clk_TS_ToDateTime:
 2386              	.LVL289:
 2387              	.LFB8:
 710:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2388              		.loc 1 710 1 is_stmt 1 view -0
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 0
 2391              		@ frame_needed = 0, uses_anonymous_args = 0
 710:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2392              		.loc 1 710 1 is_stmt 0 view .LVU791
 2393 0000 00B5     		push	{lr}
 2394              	.LCFI29:
 2395              		.cfi_def_cfa_offset 4
 2396              		.cfi_offset 14, -4
 2397 0002 83B0     		sub	sp, sp, #12
 2398              	.LCFI30:
 2399              		.cfi_def_cfa_offset 16
 711:rtos/uC-Clk/Source/clk.c **** 
 2400              		.loc 1 711 5 is_stmt 1 view .LVU792
 716:rtos/uC-Clk/Source/clk.c **** 
 2401              		.loc 1 716 42 view .LVU793
 718:rtos/uC-Clk/Source/clk.c ****                                      tz_sec,
 2402              		.loc 1 718 5 view .LVU794
 718:rtos/uC-Clk/Source/clk.c ****                                      tz_sec,
 2403              		.loc 1 718 13 is_stmt 0 view .LVU795
 2404 0004 40F65803 		movw	r3, #2136
 2405 0008 0093     		str	r3, [sp]
 2406 000a 4FF4FA63 		mov	r3, #2000
 2407 000e FFF7FEFF 		bl	Clk_TS_ToDateTimeHandler
 2408              	.LVL290:
 723:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Date/time conversion has failed\n\r"));
 2409              		.loc 1 723 5 is_stmt 1 view .LVU796
 723:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Date/time conversion has failed\n\r"));
 2410              		.loc 1 723 8 is_stmt 0 view .LVU797
 2411 0012 0128     		cmp	r0, #1
 2412 0014 00D0     		beq	.L188
 725:rtos/uC-Clk/Source/clk.c ****     }
 2413              		.loc 1 725 17 view .LVU798
 2414 0016 0020     		movs	r0, #0
 2415              	.LVL291:
 2416              	.L188:
 729:rtos/uC-Clk/Source/clk.c **** 
 2417              		.loc 1 729 1 view .LVU799
 2418 0018 03B0     		add	sp, sp, #12
 2419              	.LCFI31:
 2420              		.cfi_def_cfa_offset 4
 2421              		@ sp needed
 2422 001a 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/cct1pkgW.s 			page 115


 2423              		.cfi_endproc
 2424              	.LFE8:
 2426              		.section	.text.Clk_GetDateTime,"ax",%progbits
 2427              		.align	1
 2428              		.global	Clk_GetDateTime
 2429              		.syntax unified
 2430              		.thumb
 2431              		.thumb_func
 2432              		.fpu fpv4-sp-d16
 2434              	Clk_GetDateTime:
 2435              	.LVL292:
 2436              	.LFB6:
 590:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 2437              		.loc 1 590 1 is_stmt 1 view -0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 0
 2440              		@ frame_needed = 0, uses_anonymous_args = 0
 590:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 2441              		.loc 1 590 1 is_stmt 0 view .LVU801
 2442 0000 38B5     		push	{r3, r4, r5, lr}
 2443              	.LCFI32:
 2444              		.cfi_def_cfa_offset 16
 2445              		.cfi_offset 3, -16
 2446              		.cfi_offset 4, -12
 2447              		.cfi_offset 5, -8
 2448              		.cfi_offset 14, -4
 2449 0002 0546     		mov	r5, r0
 591:rtos/uC-Clk/Source/clk.c ****     CLK_TZ_SEC   tz_sec;
 2450              		.loc 1 591 5 is_stmt 1 view .LVU802
 592:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2451              		.loc 1 592 5 view .LVU803
 593:rtos/uC-Clk/Source/clk.c **** 
 2452              		.loc 1 593 5 view .LVU804
 603:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_GetTZ();                                       /* ---------------------- GET TZ --
 2453              		.loc 1 603 5 view .LVU805
 603:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_GetTZ();                                       /* ---------------------- GET TZ --
 2454              		.loc 1 603 14 is_stmt 0 view .LVU806
 2455 0004 FFF7FEFF 		bl	Clk_GetTS
 2456              	.LVL293:
 603:rtos/uC-Clk/Source/clk.c ****     tz_sec = Clk_GetTZ();                                       /* ---------------------- GET TZ --
 2457              		.loc 1 603 14 view .LVU807
 2458 0008 0446     		mov	r4, r0
 2459              	.LVL294:
 604:rtos/uC-Clk/Source/clk.c **** 
 2460              		.loc 1 604 5 is_stmt 1 view .LVU808
 604:rtos/uC-Clk/Source/clk.c **** 
 2461              		.loc 1 604 14 is_stmt 0 view .LVU809
 2462 000a FFF7FEFF 		bl	Clk_GetTZ
 2463              	.LVL295:
 604:rtos/uC-Clk/Source/clk.c **** 
 2464              		.loc 1 604 14 view .LVU810
 2465 000e 0146     		mov	r1, r0
 2466              	.LVL296:
 607:rtos/uC-Clk/Source/clk.c ****                                tz_sec,
 2467              		.loc 1 607 5 is_stmt 1 view .LVU811
 607:rtos/uC-Clk/Source/clk.c ****                                tz_sec,
 2468              		.loc 1 607 14 is_stmt 0 view .LVU812
ARM GAS  /tmp/cct1pkgW.s 			page 116


 2469 0010 2A46     		mov	r2, r5
 2470 0012 2046     		mov	r0, r4
 2471              	.LVL297:
 607:rtos/uC-Clk/Source/clk.c ****                                tz_sec,
 2472              		.loc 1 607 14 view .LVU813
 2473 0014 FFF7FEFF 		bl	Clk_TS_ToDateTime
 2474              	.LVL298:
 610:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2475              		.loc 1 610 5 is_stmt 1 view .LVU814
 610:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2476              		.loc 1 610 8 is_stmt 0 view .LVU815
 2477 0018 0128     		cmp	r0, #1
 2478 001a 00D0     		beq	.L192
 611:rtos/uC-Clk/Source/clk.c ****     }
 2479              		.loc 1 611 17 view .LVU816
 2480 001c 0020     		movs	r0, #0
 2481              	.LVL299:
 2482              	.L192:
 615:rtos/uC-Clk/Source/clk.c **** 
 2483              		.loc 1 615 1 view .LVU817
 2484 001e 38BD     		pop	{r3, r4, r5, pc}
 615:rtos/uC-Clk/Source/clk.c **** 
 2485              		.loc 1 615 1 view .LVU818
 2486              		.cfi_endproc
 2487              	.LFE6:
 2489              		.section	.text.Clk_DateTimeMake,"ax",%progbits
 2490              		.align	1
 2491              		.global	Clk_DateTimeMake
 2492              		.syntax unified
 2493              		.thumb
 2494              		.thumb_func
 2495              		.fpu fpv4-sp-d16
 2497              	Clk_DateTimeMake:
 2498              	.LVL300:
 2499              	.LFB10:
 863:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2500              		.loc 1 863 1 is_stmt 1 view -0
 2501              		.cfi_startproc
 2502              		@ args = 16, pretend = 0, frame = 0
 2503              		@ frame_needed = 0, uses_anonymous_args = 0
 863:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2504              		.loc 1 863 1 is_stmt 0 view .LVU820
 2505 0000 10B5     		push	{r4, lr}
 2506              	.LCFI33:
 2507              		.cfi_def_cfa_offset 8
 2508              		.cfi_offset 4, -8
 2509              		.cfi_offset 14, -4
 2510 0002 86B0     		sub	sp, sp, #24
 2511              	.LCFI34:
 2512              		.cfi_def_cfa_offset 32
 864:rtos/uC-Clk/Source/clk.c **** 
 2513              		.loc 1 864 5 is_stmt 1 view .LVU821
 867:rtos/uC-Clk/Source/clk.c ****                                     yr,
 2514              		.loc 1 867 5 view .LVU822
 867:rtos/uC-Clk/Source/clk.c ****                                     yr,
 2515              		.loc 1 867 13 is_stmt 0 view .LVU823
 2516 0004 40F65804 		movw	r4, #2136
ARM GAS  /tmp/cct1pkgW.s 			page 117


 2517 0008 0594     		str	r4, [sp, #20]
 2518 000a 4FF4FA64 		mov	r4, #2000
 2519 000e 0494     		str	r4, [sp, #16]
 2520 0010 0B9C     		ldr	r4, [sp, #44]
 2521 0012 0394     		str	r4, [sp, #12]
 2522 0014 9DF82840 		ldrb	r4, [sp, #40]	@ zero_extendqisi2
 2523 0018 0294     		str	r4, [sp, #8]
 2524 001a 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 2525 001e 0194     		str	r4, [sp, #4]
 2526 0020 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
 2527 0024 0094     		str	r4, [sp]
 2528 0026 FFF7FEFF 		bl	Clk_DateTimeMakeHandler
 2529              	.LVL301:
 877:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2530              		.loc 1 877 5 is_stmt 1 view .LVU824
 877:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2531              		.loc 1 877 8 is_stmt 0 view .LVU825
 2532 002a 0128     		cmp	r0, #1
 2533 002c 00D0     		beq	.L196
 878:rtos/uC-Clk/Source/clk.c ****     }
 2534              		.loc 1 878 17 view .LVU826
 2535 002e 0020     		movs	r0, #0
 2536              	.LVL302:
 2537              	.L196:
 882:rtos/uC-Clk/Source/clk.c **** 
 2538              		.loc 1 882 1 view .LVU827
 2539 0030 06B0     		add	sp, sp, #24
 2540              	.LCFI35:
 2541              		.cfi_def_cfa_offset 8
 2542              		@ sp needed
 2543 0032 10BD     		pop	{r4, pc}
 882:rtos/uC-Clk/Source/clk.c **** 
 2544              		.loc 1 882 1 view .LVU828
 2545              		.cfi_endproc
 2546              	.LFE10:
 2548              		.section	.text.Clk_IsDateTimeValid,"ax",%progbits
 2549              		.align	1
 2550              		.global	Clk_IsDateTimeValid
 2551              		.syntax unified
 2552              		.thumb
 2553              		.thumb_func
 2554              		.fpu fpv4-sp-d16
 2556              	Clk_IsDateTimeValid:
 2557              	.LVL303:
 2558              	.LFB11:
 912:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2559              		.loc 1 912 1 is_stmt 1 view -0
 2560              		.cfi_startproc
 2561              		@ args = 0, pretend = 0, frame = 0
 2562              		@ frame_needed = 0, uses_anonymous_args = 0
 912:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2563              		.loc 1 912 1 is_stmt 0 view .LVU830
 2564 0000 08B5     		push	{r3, lr}
 2565              	.LCFI36:
 2566              		.cfi_def_cfa_offset 8
 2567              		.cfi_offset 3, -8
 2568              		.cfi_offset 14, -4
ARM GAS  /tmp/cct1pkgW.s 			page 118


 913:rtos/uC-Clk/Source/clk.c **** 
 2569              		.loc 1 913 5 is_stmt 1 view .LVU831
 916:rtos/uC-Clk/Source/clk.c **** 
 2570              		.loc 1 916 50 view .LVU832
 918:rtos/uC-Clk/Source/clk.c ****                                        CLK_EPOCH_YR_START,
 2571              		.loc 1 918 5 view .LVU833
 918:rtos/uC-Clk/Source/clk.c ****                                        CLK_EPOCH_YR_START,
 2572              		.loc 1 918 13 is_stmt 0 view .LVU834
 2573 0002 40F65802 		movw	r2, #2136
 2574 0006 4FF4FA61 		mov	r1, #2000
 2575 000a FFF7FEFF 		bl	Clk_IsDateTimeValidHandler
 2576              	.LVL304:
 921:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Fail\n\r"));
 2577              		.loc 1 921 5 is_stmt 1 view .LVU835
 921:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Fail\n\r"));
 2578              		.loc 1 921 8 is_stmt 0 view .LVU836
 2579 000e 0128     		cmp	r0, #1
 2580 0010 00D0     		beq	.L200
 923:rtos/uC-Clk/Source/clk.c ****     }
 2581              		.loc 1 923 17 view .LVU837
 2582 0012 0020     		movs	r0, #0
 2583              	.LVL305:
 2584              	.L200:
 929:rtos/uC-Clk/Source/clk.c **** 
 2585              		.loc 1 929 1 view .LVU838
 2586 0014 08BD     		pop	{r3, pc}
 2587              		.cfi_endproc
 2588              	.LFE11:
 2590              		.section	.text.Clk_DateTimeToTS,"ax",%progbits
 2591              		.align	1
 2592              		.global	Clk_DateTimeToTS
 2593              		.syntax unified
 2594              		.thumb
 2595              		.thumb_func
 2596              		.fpu fpv4-sp-d16
 2598              	Clk_DateTimeToTS:
 2599              	.LVL306:
 2600              	.LFB9:
 771:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2601              		.loc 1 771 1 is_stmt 1 view -0
 2602              		.cfi_startproc
 2603              		@ args = 0, pretend = 0, frame = 0
 2604              		@ frame_needed = 0, uses_anonymous_args = 0
 772:rtos/uC-Clk/Source/clk.c **** 
 2605              		.loc 1 772 5 view .LVU840
 776:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 2606              		.loc 1 776 5 view .LVU841
 776:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 2607              		.loc 1 776 8 is_stmt 0 view .LVU842
 2608 0000 A8B1     		cbz	r0, .L205
 771:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2609              		.loc 1 771 1 view .LVU843
 2610 0002 38B5     		push	{r3, r4, r5, lr}
 2611              	.LCFI37:
 2612              		.cfi_def_cfa_offset 16
 2613              		.cfi_offset 3, -16
 2614              		.cfi_offset 4, -12
ARM GAS  /tmp/cct1pkgW.s 			page 119


 2615              		.cfi_offset 5, -8
 2616              		.cfi_offset 14, -4
 2617 0004 0C46     		mov	r4, r1
 2618 0006 0546     		mov	r5, r0
 781:rtos/uC-Clk/Source/clk.c **** 
 2619              		.loc 1 781 4 is_stmt 1 view .LVU844
 781:rtos/uC-Clk/Source/clk.c **** 
 2620              		.loc 1 781 14 is_stmt 0 view .LVU845
 2621 0008 0023     		movs	r3, #0
 2622 000a 0360     		str	r3, [r0]
 791:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 2623              		.loc 1 791 5 is_stmt 1 view .LVU846
 791:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 2624              		.loc 1 791 13 is_stmt 0 view .LVU847
 2625 000c 0846     		mov	r0, r1
 2626              	.LVL307:
 791:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 2627              		.loc 1 791 13 view .LVU848
 2628 000e FFF7FEFF 		bl	Clk_IsDateTimeValid
 2629              	.LVL308:
 792:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2630              		.loc 1 792 5 is_stmt 1 view .LVU849
 792:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2631              		.loc 1 792 8 is_stmt 0 view .LVU850
 2632 0012 0128     		cmp	r0, #1
 2633 0014 01D0     		beq	.L212
 793:rtos/uC-Clk/Source/clk.c ****     }
 2634              		.loc 1 793 17 view .LVU851
 2635 0016 0020     		movs	r0, #0
 2636              	.LVL309:
 2637              	.L204:
 806:rtos/uC-Clk/Source/clk.c **** 
 2638              		.loc 1 806 1 view .LVU852
 2639 0018 38BD     		pop	{r3, r4, r5, pc}
 2640              	.LVL310:
 2641              	.L212:
 797:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeToTS_Handler(p_ts_sec,
 2642              		.loc 1 797 52 is_stmt 1 view .LVU853
 798:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 2643              		.loc 1 798 5 view .LVU854
 798:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 2644              		.loc 1 798 13 is_stmt 0 view .LVU855
 2645 001a 4FF4FA62 		mov	r2, #2000
 2646 001e 2146     		mov	r1, r4
 2647 0020 2846     		mov	r0, r5
 2648              	.LVL311:
 798:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 2649              		.loc 1 798 13 view .LVU856
 2650 0022 FFF7FEFF 		bl	Clk_DateTimeToTS_Handler
 2651              	.LVL312:
 801:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2652              		.loc 1 801 5 is_stmt 1 view .LVU857
 801:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2653              		.loc 1 801 8 is_stmt 0 view .LVU858
 2654 0026 0128     		cmp	r0, #1
 2655 0028 F6D0     		beq	.L204
 802:rtos/uC-Clk/Source/clk.c ****     }
ARM GAS  /tmp/cct1pkgW.s 			page 120


 2656              		.loc 1 802 17 view .LVU859
 2657 002a 0020     		movs	r0, #0
 2658              	.LVL313:
 802:rtos/uC-Clk/Source/clk.c ****     }
 2659              		.loc 1 802 17 view .LVU860
 2660 002c F4E7     		b	.L204
 2661              	.LVL314:
 2662              	.L205:
 2663              	.LCFI38:
 2664              		.cfi_def_cfa_offset 0
 2665              		.cfi_restore 3
 2666              		.cfi_restore 4
 2667              		.cfi_restore 5
 2668              		.cfi_restore 14
 777:rtos/uC-Clk/Source/clk.c ****     }
 2669              		.loc 1 777 16 view .LVU861
 2670 002e 0020     		movs	r0, #0
 2671              	.LVL315:
 806:rtos/uC-Clk/Source/clk.c **** 
 2672              		.loc 1 806 1 view .LVU862
 2673 0030 7047     		bx	lr
 2674              		.cfi_endproc
 2675              	.LFE9:
 2677              		.section	.text.Clk_SetDateTime,"ax",%progbits
 2678              		.align	1
 2679              		.global	Clk_SetDateTime
 2680              		.syntax unified
 2681              		.thumb
 2682              		.thumb_func
 2683              		.fpu fpv4-sp-d16
 2685              	Clk_SetDateTime:
 2686              	.LVL316:
 2687              	.LFB7:
 645:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 2688              		.loc 1 645 1 is_stmt 1 view -0
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 8
 2691              		@ frame_needed = 0, uses_anonymous_args = 0
 645:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 2692              		.loc 1 645 1 is_stmt 0 view .LVU864
 2693 0000 30B5     		push	{r4, r5, lr}
 2694              	.LCFI39:
 2695              		.cfi_def_cfa_offset 12
 2696              		.cfi_offset 4, -12
 2697              		.cfi_offset 5, -8
 2698              		.cfi_offset 14, -4
 2699 0002 83B0     		sub	sp, sp, #12
 2700              	.LCFI40:
 2701              		.cfi_def_cfa_offset 24
 2702 0004 0446     		mov	r4, r0
 646:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2703              		.loc 1 646 5 is_stmt 1 view .LVU865
 647:rtos/uC-Clk/Source/clk.c **** 
 2704              		.loc 1 647 5 view .LVU866
 657:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 2705              		.loc 1 657 5 view .LVU867
 657:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
ARM GAS  /tmp/cct1pkgW.s 			page 121


 2706              		.loc 1 657 13 is_stmt 0 view .LVU868
 2707 0006 0146     		mov	r1, r0
 2708 0008 01A8     		add	r0, sp, #4
 2709              	.LVL317:
 657:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 2710              		.loc 1 657 13 view .LVU869
 2711 000a FFF7FEFF 		bl	Clk_DateTimeToTS
 2712              	.LVL318:
 658:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Date/time is not valid"));
 2713              		.loc 1 658 5 is_stmt 1 view .LVU870
 658:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Date/time is not valid"));
 2714              		.loc 1 658 8 is_stmt 0 view .LVU871
 2715 000e 0128     		cmp	r0, #1
 2716 0010 03D0     		beq	.L218
 660:rtos/uC-Clk/Source/clk.c ****     }
 2717              		.loc 1 660 17 view .LVU872
 2718 0012 0025     		movs	r5, #0
 2719              	.LVL319:
 2720              	.L214:
 673:rtos/uC-Clk/Source/clk.c **** 
 2721              		.loc 1 673 1 view .LVU873
 2722 0014 2846     		mov	r0, r5
 2723 0016 03B0     		add	sp, sp, #12
 2724              	.LCFI41:
 2725              		.cfi_remember_state
 2726              		.cfi_def_cfa_offset 12
 2727              		@ sp needed
 2728 0018 30BD     		pop	{r4, r5, pc}
 2729              	.LVL320:
 2730              	.L218:
 2731              	.LCFI42:
 2732              		.cfi_restore_state
 664:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 2733              		.loc 1 664 5 is_stmt 1 view .LVU874
 664:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 2734              		.loc 1 664 13 is_stmt 0 view .LVU875
 2735 001a 0198     		ldr	r0, [sp, #4]
 2736              	.LVL321:
 664:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 2737              		.loc 1 664 13 view .LVU876
 2738 001c FFF7FEFF 		bl	Clk_SetTS
 2739              	.LVL322:
 2740 0020 0546     		mov	r5, r0
 2741              	.LVL323:
 665:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2742              		.loc 1 665 5 is_stmt 1 view .LVU877
 665:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 2743              		.loc 1 665 8 is_stmt 0 view .LVU878
 2744 0022 0128     		cmp	r0, #1
 2745 0024 01D0     		beq	.L219
 666:rtos/uC-Clk/Source/clk.c ****     }
 2746              		.loc 1 666 17 view .LVU879
 2747 0026 0025     		movs	r5, #0
 2748 0028 F4E7     		b	.L214
 2749              	.L219:
 670:rtos/uC-Clk/Source/clk.c **** 
 2750              		.loc 1 670 5 is_stmt 1 view .LVU880
ARM GAS  /tmp/cct1pkgW.s 			page 122


 2751 002a 2069     		ldr	r0, [r4, #16]
 2752              	.LVL324:
 670:rtos/uC-Clk/Source/clk.c **** 
 2753              		.loc 1 670 5 is_stmt 0 view .LVU881
 2754 002c FFF7FEFF 		bl	Clk_SetTZ_Handler
 2755              	.LVL325:
 672:rtos/uC-Clk/Source/clk.c **** }
 2756              		.loc 1 672 5 is_stmt 1 view .LVU882
 672:rtos/uC-Clk/Source/clk.c **** }
 2757              		.loc 1 672 12 is_stmt 0 view .LVU883
 2758 0030 F0E7     		b	.L214
 2759              		.cfi_endproc
 2760              	.LFE7:
 2762              		.section	.text.Clk_GetDayOfWk,"ax",%progbits
 2763              		.align	1
 2764              		.global	Clk_GetDayOfWk
 2765              		.syntax unified
 2766              		.thumb
 2767              		.thumb_func
 2768              		.fpu fpv4-sp-d16
 2770              	Clk_GetDayOfWk:
 2771              	.LVL326:
 2772              	.LFB12:
 961:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      day_of_wk;
 2773              		.loc 1 961 1 is_stmt 1 view -0
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 0
 2776              		@ frame_needed = 0, uses_anonymous_args = 0
 961:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      day_of_wk;
 2777              		.loc 1 961 1 is_stmt 0 view .LVU885
 2778 0000 70B5     		push	{r4, r5, r6, lr}
 2779              	.LCFI43:
 2780              		.cfi_def_cfa_offset 16
 2781              		.cfi_offset 4, -16
 2782              		.cfi_offset 5, -12
 2783              		.cfi_offset 6, -8
 2784              		.cfi_offset 14, -4
 2785 0002 82B0     		sub	sp, sp, #8
 2786              	.LCFI44:
 2787              		.cfi_def_cfa_offset 24
 2788 0004 0446     		mov	r4, r0
 2789 0006 0D46     		mov	r5, r1
 2790 0008 1646     		mov	r6, r2
 962:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2791              		.loc 1 962 5 is_stmt 1 view .LVU886
 963:rtos/uC-Clk/Source/clk.c **** 
 2792              		.loc 1 963 5 view .LVU887
 966:rtos/uC-Clk/Source/clk.c ****                             month,
 2793              		.loc 1 966 5 view .LVU888
 966:rtos/uC-Clk/Source/clk.c ****                             month,
 2794              		.loc 1 966 13 is_stmt 0 view .LVU889
 2795 000a 40F65803 		movw	r3, #2136
 2796 000e 0093     		str	r3, [sp]
 2797 0010 40F26C73 		movw	r3, #1900
 2798 0014 FFF7FEFF 		bl	Clk_IsDateValid
 2799              	.LVL327:
 971:rtos/uC-Clk/Source/clk.c ****         return (CLK_DAY_OF_WK_NONE);
ARM GAS  /tmp/cct1pkgW.s 			page 123


 2800              		.loc 1 971 5 is_stmt 1 view .LVU890
 971:rtos/uC-Clk/Source/clk.c ****         return (CLK_DAY_OF_WK_NONE);
 2801              		.loc 1 971 8 is_stmt 0 view .LVU891
 2802 0018 0128     		cmp	r0, #1
 2803 001a 02D0     		beq	.L224
 972:rtos/uC-Clk/Source/clk.c ****     }
 2804              		.loc 1 972 16 view .LVU892
 2805 001c 0020     		movs	r0, #0
 2806              	.LVL328:
 2807              	.L221:
 979:rtos/uC-Clk/Source/clk.c **** 
 2808              		.loc 1 979 1 view .LVU893
 2809 001e 02B0     		add	sp, sp, #8
 2810              	.LCFI45:
 2811              		.cfi_remember_state
 2812              		.cfi_def_cfa_offset 16
 2813              		@ sp needed
 2814 0020 70BD     		pop	{r4, r5, r6, pc}
 2815              	.LVL329:
 2816              	.L224:
 2817              	.LCFI46:
 2818              		.cfi_restore_state
 976:rtos/uC-Clk/Source/clk.c **** 
 2819              		.loc 1 976 5 is_stmt 1 view .LVU894
 976:rtos/uC-Clk/Source/clk.c **** 
 2820              		.loc 1 976 17 is_stmt 0 view .LVU895
 2821 0022 3246     		mov	r2, r6
 2822 0024 2946     		mov	r1, r5
 2823 0026 2046     		mov	r0, r4
 2824              	.LVL330:
 976:rtos/uC-Clk/Source/clk.c **** 
 2825              		.loc 1 976 17 view .LVU896
 2826 0028 FFF7FEFF 		bl	Clk_GetDayOfWkHandler
 2827              	.LVL331:
 978:rtos/uC-Clk/Source/clk.c **** }
 2828              		.loc 1 978 5 is_stmt 1 view .LVU897
 978:rtos/uC-Clk/Source/clk.c **** }
 2829              		.loc 1 978 12 is_stmt 0 view .LVU898
 2830 002c F7E7     		b	.L221
 2831              		.cfi_endproc
 2832              	.LFE12:
 2834              		.section	.text.Clk_GetDayOfYr,"ax",%progbits
 2835              		.align	1
 2836              		.global	Clk_GetDayOfYr
 2837              		.syntax unified
 2838              		.thumb
 2839              		.thumb_func
 2840              		.fpu fpv4-sp-d16
 2842              	Clk_GetDayOfYr:
 2843              	.LVL332:
 2844              	.LFB13:
1011:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      day_of_wk;
 2845              		.loc 1 1011 1 is_stmt 1 view -0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
1011:rtos/uC-Clk/Source/clk.c ****     CLK_DAY      day_of_wk;
ARM GAS  /tmp/cct1pkgW.s 			page 124


 2849              		.loc 1 1011 1 is_stmt 0 view .LVU900
 2850 0000 70B5     		push	{r4, r5, r6, lr}
 2851              	.LCFI47:
 2852              		.cfi_def_cfa_offset 16
 2853              		.cfi_offset 4, -16
 2854              		.cfi_offset 5, -12
 2855              		.cfi_offset 6, -8
 2856              		.cfi_offset 14, -4
 2857 0002 82B0     		sub	sp, sp, #8
 2858              	.LCFI48:
 2859              		.cfi_def_cfa_offset 24
 2860 0004 0446     		mov	r4, r0
 2861 0006 0D46     		mov	r5, r1
 2862 0008 1646     		mov	r6, r2
1012:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 2863              		.loc 1 1012 5 is_stmt 1 view .LVU901
1013:rtos/uC-Clk/Source/clk.c **** 
 2864              		.loc 1 1013 5 view .LVU902
1016:rtos/uC-Clk/Source/clk.c ****                             month,
 2865              		.loc 1 1016 5 view .LVU903
1016:rtos/uC-Clk/Source/clk.c ****                             month,
 2866              		.loc 1 1016 13 is_stmt 0 view .LVU904
 2867 000a 40F65803 		movw	r3, #2136
 2868 000e 0093     		str	r3, [sp]
 2869 0010 40F26C73 		movw	r3, #1900
 2870 0014 FFF7FEFF 		bl	Clk_IsDateValid
 2871              	.LVL333:
1021:rtos/uC-Clk/Source/clk.c ****         return (CLK_DAY_OF_WK_NONE);
 2872              		.loc 1 1021 5 is_stmt 1 view .LVU905
1021:rtos/uC-Clk/Source/clk.c ****         return (CLK_DAY_OF_WK_NONE);
 2873              		.loc 1 1021 8 is_stmt 0 view .LVU906
 2874 0018 0128     		cmp	r0, #1
 2875 001a 02D0     		beq	.L229
1022:rtos/uC-Clk/Source/clk.c ****     }
 2876              		.loc 1 1022 16 view .LVU907
 2877 001c 0020     		movs	r0, #0
 2878              	.LVL334:
 2879              	.L226:
1029:rtos/uC-Clk/Source/clk.c **** 
 2880              		.loc 1 1029 1 view .LVU908
 2881 001e 02B0     		add	sp, sp, #8
 2882              	.LCFI49:
 2883              		.cfi_remember_state
 2884              		.cfi_def_cfa_offset 16
 2885              		@ sp needed
 2886 0020 70BD     		pop	{r4, r5, r6, pc}
 2887              	.LVL335:
 2888              	.L229:
 2889              	.LCFI50:
 2890              		.cfi_restore_state
1026:rtos/uC-Clk/Source/clk.c **** 
 2891              		.loc 1 1026 5 is_stmt 1 view .LVU909
1026:rtos/uC-Clk/Source/clk.c **** 
 2892              		.loc 1 1026 17 is_stmt 0 view .LVU910
 2893 0022 3246     		mov	r2, r6
 2894 0024 2946     		mov	r1, r5
 2895 0026 2046     		mov	r0, r4
ARM GAS  /tmp/cct1pkgW.s 			page 125


 2896              	.LVL336:
1026:rtos/uC-Clk/Source/clk.c **** 
 2897              		.loc 1 1026 17 view .LVU911
 2898 0028 FFF7FEFF 		bl	Clk_GetDayOfYrHandler
 2899              	.LVL337:
1028:rtos/uC-Clk/Source/clk.c **** }
 2900              		.loc 1 1028 5 is_stmt 1 view .LVU912
1028:rtos/uC-Clk/Source/clk.c **** }
 2901              		.loc 1 1028 12 is_stmt 0 view .LVU913
 2902 002c F7E7     		b	.L226
 2903              		.cfi_endproc
 2904              	.LFE13:
 2906              		.section	.rodata.Clk_DateTimeToStr.str1.4,"aMS",%progbits,1
 2907              		.align	2
 2908              	.LC0:
 2909 0000 2D00     		.ascii	"-\000"
 2910 0002 0000     		.align	2
 2911              	.LC1:
 2912 0004 2000     		.ascii	" \000"
 2913 0006 0000     		.align	2
 2914              	.LC2:
 2915 0008 3A00     		.ascii	":\000"
 2916 000a 0000     		.align	2
 2917              	.LC3:
 2918 000c 55544300 		.ascii	"UTC\000"
 2919              		.align	2
 2920              	.LC4:
 2921 0010 2B00     		.ascii	"+\000"
 2922 0012 0000     		.align	2
 2923              	.LC5:
 2924 0014 2C2000   		.ascii	", \000"
 2925 0017 00       		.align	2
 2926              	.LC6:
 2927 0018 414D00   		.ascii	"AM\000"
 2928 001b 00       		.align	2
 2929              	.LC7:
 2930 001c 504D00   		.ascii	"PM\000"
 2931              		.section	.text.Clk_DateTimeToStr,"ax",%progbits
 2932              		.align	1
 2933              		.global	Clk_DateTimeToStr
 2934              		.syntax unified
 2935              		.thumb
 2936              		.thumb_func
 2937              		.fpu fpv4-sp-d16
 2939              	Clk_DateTimeToStr:
 2940              	.LVL338:
 2941              	.LFB14:
1084:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      yr   [CLK_STR_DIG_YR_LEN     + 1u];
 2942              		.loc 1 1084 1 is_stmt 1 view -0
 2943              		.cfi_startproc
 2944              		@ args = 0, pretend = 0, frame = 40
 2945              		@ frame_needed = 0, uses_anonymous_args = 0
1084:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      yr   [CLK_STR_DIG_YR_LEN     + 1u];
 2946              		.loc 1 1084 1 is_stmt 0 view .LVU915
 2947 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2948              	.LCFI51:
 2949              		.cfi_def_cfa_offset 28
ARM GAS  /tmp/cct1pkgW.s 			page 126


 2950              		.cfi_offset 4, -28
 2951              		.cfi_offset 5, -24
 2952              		.cfi_offset 6, -20
 2953              		.cfi_offset 7, -16
 2954              		.cfi_offset 8, -12
 2955              		.cfi_offset 9, -8
 2956              		.cfi_offset 14, -4
 2957 0004 8FB0     		sub	sp, sp, #60
 2958              	.LCFI52:
 2959              		.cfi_def_cfa_offset 88
1085:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      month[CLK_STR_DIG_MONTH_LEN  + 1u];
 2960              		.loc 1 1085 5 is_stmt 1 view .LVU916
1086:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      day  [CLK_STR_DIG_DAY_LEN    + 1u];
 2961              		.loc 1 1086 5 view .LVU917
1087:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      hr   [CLK_STR_DIG_HR_LEN     + 1u];
 2962              		.loc 1 1087 5 view .LVU918
1088:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      min  [CLK_STR_DIG_MIN_LEN    + 1u];
 2963              		.loc 1 1088 5 view .LVU919
1089:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      sec  [CLK_STR_DIG_SEC_LEN    + 1u];
 2964              		.loc 1 1089 5 view .LVU920
1090:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      tz   [CLK_STR_DIG_TZ_MAX_LEN + 1u];
 2965              		.loc 1 1090 5 view .LVU921
1091:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR      am_pm[CLK_STR_AM_PM_LEN      + 1u];
 2966              		.loc 1 1091 5 view .LVU922
1092:rtos/uC-Clk/Source/clk.c ****     CPU_CHAR     *p_yr;
 2967              		.loc 1 1092 5 view .LVU923
1093:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN   valid;
 2968              		.loc 1 1093 5 view .LVU924
1094:rtos/uC-Clk/Source/clk.c ****     CLK_HR        half_day_hr;
 2969              		.loc 1 1094 5 view .LVU925
1095:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    tz_hr_abs;                                     /* See Note #4.                   
 2970              		.loc 1 1095 5 view .LVU926
1096:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    tz_min_abs;                                    /* See Note #4.                   
 2971              		.loc 1 1096 5 view .LVU927
1097:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC    tz_sec_rem_abs;                                /* See Note #4.                   
 2972              		.loc 1 1097 5 view .LVU928
1098:rtos/uC-Clk/Source/clk.c **** 
 2973              		.loc 1 1098 5 view .LVU929
1102:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 2974              		.loc 1 1102 5 view .LVU930
1102:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 2975              		.loc 1 1102 8 is_stmt 0 view .LVU931
 2976 0006 002A     		cmp	r2, #0
 2977 0008 00F0C382 		beq	.L257
 2978 000c 0446     		mov	r4, r0
 2979 000e 0F46     		mov	r7, r1
 2980 0010 1646     		mov	r6, r2
1105:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 2981              		.loc 1 1105 5 is_stmt 1 view .LVU932
1105:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 2982              		.loc 1 1105 8 is_stmt 0 view .LVU933
 2983 0012 002B     		cmp	r3, #0
 2984 0014 00F0BF82 		beq	.L258
1110:rtos/uC-Clk/Source/clk.c **** 
 2985              		.loc 1 1110 4 is_stmt 1 view .LVU934
1110:rtos/uC-Clk/Source/clk.c **** 
 2986              		.loc 1 1110 11 is_stmt 0 view .LVU935
ARM GAS  /tmp/cct1pkgW.s 			page 127


 2987 0018 0022     		movs	r2, #0
 2988              	.LVL339:
1110:rtos/uC-Clk/Source/clk.c **** 
 2989              		.loc 1 1110 11 view .LVU936
 2990 001a 3270     		strb	r2, [r6]
1114:rtos/uC-Clk/Source/clk.c ****         case CLK_STR_FMT_YYYY_MM_DD_HH_MM_SS_UTC:
 2991              		.loc 1 1114 5 is_stmt 1 view .LVU937
 2992 001c 4A1E     		subs	r2, r1, #1
 2993 001e 082A     		cmp	r2, #8
 2994 0020 00F2BE82 		bhi	.L259
 2995 0024 DFE802F0 		tbb	[pc, r2]
 2996              	.LVL340:
 2997              	.L233:
 2998 0028 05       		.byte	(.L241-.L233)/2
 2999 0029 14       		.byte	(.L240-.L233)/2
 3000 002a 18       		.byte	(.L239-.L233)/2
 3001 002b 1C       		.byte	(.L238-.L233)/2
 3002 002c 20       		.byte	(.L237-.L233)/2
 3003 002d 24       		.byte	(.L236-.L233)/2
 3004 002e 28       		.byte	(.L235-.L233)/2
 3005 002f 2C       		.byte	(.L234-.L233)/2
 3006 0030 30       		.byte	(.L232-.L233)/2
 3007 0031 00       		.p2align 1
 3008              	.L241:
1116:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3009              		.loc 1 1116 14 view .LVU938
1116:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3010              		.loc 1 1116 17 is_stmt 0 view .LVU939
 3011 0032 1D2B     		cmp	r3, #29
 3012 0034 40F2B682 		bls	.L272
 3013              	.L242:
1184:rtos/uC-Clk/Source/clk.c ****                                        CLK_NTP_EPOCH_YR_START,
 3014              		.loc 1 1184 5 is_stmt 1 view .LVU940
1184:rtos/uC-Clk/Source/clk.c ****                                        CLK_NTP_EPOCH_YR_START,
 3015              		.loc 1 1184 13 is_stmt 0 view .LVU941
 3016 0038 40F65802 		movw	r2, #2136
 3017 003c 40F26C71 		movw	r1, #1900
 3018 0040 2046     		mov	r0, r4
 3019              	.LVL341:
1184:rtos/uC-Clk/Source/clk.c ****                                        CLK_NTP_EPOCH_YR_START,
 3020              		.loc 1 1184 13 view .LVU942
 3021 0042 FFF7FEFF 		bl	Clk_IsDateTimeValidHandler
 3022              	.LVL342:
1184:rtos/uC-Clk/Source/clk.c ****                                        CLK_NTP_EPOCH_YR_START,
 3023              		.loc 1 1184 13 view .LVU943
 3024 0046 0546     		mov	r5, r0
 3025              	.LVL343:
1187:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 3026              		.loc 1 1187 5 is_stmt 1 view .LVU944
1187:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 3027              		.loc 1 1187 8 is_stmt 0 view .LVU945
 3028 0048 0128     		cmp	r0, #1
 3029 004a 21D0     		beq	.L273
1188:rtos/uC-Clk/Source/clk.c ****     }
 3030              		.loc 1 1188 17 view .LVU946
 3031 004c 0025     		movs	r5, #0
 3032 004e A3E2     		b	.L231
ARM GAS  /tmp/cct1pkgW.s 			page 128


 3033              	.LVL344:
 3034              	.L240:
1122:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3035              		.loc 1 1122 14 is_stmt 1 view .LVU947
1122:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3036              		.loc 1 1122 17 is_stmt 0 view .LVU948
 3037 0050 132B     		cmp	r3, #19
 3038 0052 F1D8     		bhi	.L242
1123:rtos/uC-Clk/Source/clk.c ****              }
 3039              		.loc 1 1123 25 view .LVU949
 3040 0054 0025     		movs	r5, #0
 3041 0056 9FE2     		b	.L231
 3042              	.L239:
1128:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3043              		.loc 1 1128 14 is_stmt 1 view .LVU950
1128:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3044              		.loc 1 1128 17 is_stmt 0 view .LVU951
 3045 0058 112B     		cmp	r3, #17
 3046 005a EDD8     		bhi	.L242
1129:rtos/uC-Clk/Source/clk.c ****              }
 3047              		.loc 1 1129 25 view .LVU952
 3048 005c 0025     		movs	r5, #0
 3049 005e 9BE2     		b	.L231
 3050              	.L238:
1134:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3051              		.loc 1 1134 14 is_stmt 1 view .LVU953
1134:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3052              		.loc 1 1134 17 is_stmt 0 view .LVU954
 3053 0060 0A2B     		cmp	r3, #10
 3054 0062 E9D8     		bhi	.L242
1135:rtos/uC-Clk/Source/clk.c ****              }
 3055              		.loc 1 1135 25 view .LVU955
 3056 0064 0025     		movs	r5, #0
 3057 0066 97E2     		b	.L231
 3058              	.L237:
1140:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3059              		.loc 1 1140 14 is_stmt 1 view .LVU956
1140:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3060              		.loc 1 1140 17 is_stmt 0 view .LVU957
 3061 0068 082B     		cmp	r3, #8
 3062 006a E5D8     		bhi	.L242
1141:rtos/uC-Clk/Source/clk.c ****              }
 3063              		.loc 1 1141 25 view .LVU958
 3064 006c 0025     		movs	r5, #0
 3065 006e 93E2     		b	.L231
 3066              	.L236:
1146:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3067              		.loc 1 1146 14 is_stmt 1 view .LVU959
1146:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3068              		.loc 1 1146 17 is_stmt 0 view .LVU960
 3069 0070 1C2B     		cmp	r3, #28
 3070 0072 E1D8     		bhi	.L242
1147:rtos/uC-Clk/Source/clk.c ****              }
 3071              		.loc 1 1147 25 view .LVU961
 3072 0074 0025     		movs	r5, #0
 3073 0076 8FE2     		b	.L231
 3074              	.L235:
ARM GAS  /tmp/cct1pkgW.s 			page 129


1152:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3075              		.loc 1 1152 14 is_stmt 1 view .LVU962
1152:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3076              		.loc 1 1152 17 is_stmt 0 view .LVU963
 3077 0078 182B     		cmp	r3, #24
 3078 007a DDD8     		bhi	.L242
1153:rtos/uC-Clk/Source/clk.c ****              }
 3079              		.loc 1 1153 25 view .LVU964
 3080 007c 0025     		movs	r5, #0
 3081 007e 8BE2     		b	.L231
 3082              	.L234:
1158:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3083              		.loc 1 1158 14 is_stmt 1 view .LVU965
1158:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3084              		.loc 1 1158 17 is_stmt 0 view .LVU966
 3085 0080 082B     		cmp	r3, #8
 3086 0082 D9D8     		bhi	.L242
1159:rtos/uC-Clk/Source/clk.c ****              }
 3087              		.loc 1 1159 25 view .LVU967
 3088 0084 0025     		movs	r5, #0
 3089 0086 87E2     		b	.L231
 3090              	.L232:
1164:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3091              		.loc 1 1164 14 is_stmt 1 view .LVU968
1164:rtos/uC-Clk/Source/clk.c ****                  return (DEF_FAIL);
 3092              		.loc 1 1164 17 is_stmt 0 view .LVU969
 3093 0088 0E2B     		cmp	r3, #14
 3094 008a D5D8     		bhi	.L242
1165:rtos/uC-Clk/Source/clk.c ****              }
 3095              		.loc 1 1165 25 view .LVU970
 3096 008c 0025     		movs	r5, #0
 3097 008e 83E2     		b	.L231
 3098              	.LVL345:
 3099              	.L273:
1194:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_YR_LEN,
 3100              		.loc 1 1194 4 is_stmt 1 view .LVU971
1194:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_YR_LEN,
 3101              		.loc 1 1194 10 is_stmt 0 view .LVU972
 3102 0090 0CAB     		add	r3, sp, #48
 3103 0092 0293     		str	r3, [sp, #8]
 3104 0094 4FF00109 		mov	r9, #1
 3105 0098 CDF80490 		str	r9, [sp, #4]
 3106 009c 4FF00008 		mov	r8, #0
 3107 00a0 CDF80080 		str	r8, [sp]
 3108 00a4 4346     		mov	r3, r8
 3109 00a6 0A22     		movs	r2, #10
 3110 00a8 0421     		movs	r1, #4
 3111 00aa 2088     		ldrh	r0, [r4]
 3112              	.LVL346:
1194:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_YR_LEN,
 3113              		.loc 1 1194 10 view .LVU973
 3114 00ac FFF7FEFF 		bl	Str_FmtNbr_Int32U
 3115              	.LVL347:
1202:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_MONTH_LEN,
 3116              		.loc 1 1202 4 is_stmt 1 view .LVU974
1202:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_MONTH_LEN,
 3117              		.loc 1 1202 10 is_stmt 0 view .LVU975
ARM GAS  /tmp/cct1pkgW.s 			page 130


 3118 00b0 0BAB     		add	r3, sp, #44
 3119 00b2 0293     		str	r3, [sp, #8]
 3120 00b4 CDF80490 		str	r9, [sp, #4]
 3121 00b8 CDF80080 		str	r8, [sp]
 3122 00bc 3023     		movs	r3, #48
 3123 00be 0A22     		movs	r2, #10
 3124 00c0 0221     		movs	r1, #2
 3125 00c2 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 3126 00c4 FFF7FEFF 		bl	Str_FmtNbr_Int32U
 3127              	.LVL348:
1210:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_DAY_LEN,
 3128              		.loc 1 1210 4 is_stmt 1 view .LVU976
1210:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_DAY_LEN,
 3129              		.loc 1 1210 10 is_stmt 0 view .LVU977
 3130 00c8 0AAB     		add	r3, sp, #40
 3131 00ca 0293     		str	r3, [sp, #8]
 3132 00cc CDF80490 		str	r9, [sp, #4]
 3133 00d0 CDF80080 		str	r8, [sp]
 3134 00d4 3023     		movs	r3, #48
 3135 00d6 0A22     		movs	r2, #10
 3136 00d8 0221     		movs	r1, #2
 3137 00da A088     		ldrh	r0, [r4, #4]
 3138 00dc FFF7FEFF 		bl	Str_FmtNbr_Int32U
 3139              	.LVL349:
1218:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_HR_LEN,
 3140              		.loc 1 1218 4 is_stmt 1 view .LVU978
1218:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_HR_LEN,
 3141              		.loc 1 1218 10 is_stmt 0 view .LVU979
 3142 00e0 09AB     		add	r3, sp, #36
 3143 00e2 0293     		str	r3, [sp, #8]
 3144 00e4 CDF80490 		str	r9, [sp, #4]
 3145 00e8 CDF80080 		str	r8, [sp]
 3146 00ec 3023     		movs	r3, #48
 3147 00ee 0A22     		movs	r2, #10
 3148 00f0 0221     		movs	r1, #2
 3149 00f2 A07A     		ldrb	r0, [r4, #10]	@ zero_extendqisi2
 3150 00f4 FFF7FEFF 		bl	Str_FmtNbr_Int32U
 3151              	.LVL350:
1226:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_MIN_LEN,
 3152              		.loc 1 1226 4 is_stmt 1 view .LVU980
1226:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_MIN_LEN,
 3153              		.loc 1 1226 10 is_stmt 0 view .LVU981
 3154 00f8 08AB     		add	r3, sp, #32
 3155 00fa 0293     		str	r3, [sp, #8]
 3156 00fc CDF80490 		str	r9, [sp, #4]
 3157 0100 CDF80080 		str	r8, [sp]
 3158 0104 3023     		movs	r3, #48
 3159 0106 0A22     		movs	r2, #10
 3160 0108 0221     		movs	r1, #2
 3161 010a E07A     		ldrb	r0, [r4, #11]	@ zero_extendqisi2
 3162 010c FFF7FEFF 		bl	Str_FmtNbr_Int32U
 3163              	.LVL351:
1234:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_SEC_LEN,
 3164              		.loc 1 1234 4 is_stmt 1 view .LVU982
1234:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_SEC_LEN,
 3165              		.loc 1 1234 10 is_stmt 0 view .LVU983
 3166 0110 07AB     		add	r3, sp, #28
ARM GAS  /tmp/cct1pkgW.s 			page 131


 3167 0112 0293     		str	r3, [sp, #8]
 3168 0114 CDF80490 		str	r9, [sp, #4]
 3169 0118 CDF80080 		str	r8, [sp]
 3170 011c 3023     		movs	r3, #48
 3171 011e 0A22     		movs	r2, #10
 3172 0120 0221     		movs	r1, #2
 3173 0122 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 3174 0124 FFF7FEFF 		bl	Str_FmtNbr_Int32U
 3175              	.LVL352:
1244:rtos/uC-Clk/Source/clk.c **** 
 3176              		.loc 1 1244 5 is_stmt 1 view .LVU984
 3177 0128 7B1E     		subs	r3, r7, #1
 3178 012a 082B     		cmp	r3, #8
 3179 012c 00F23C82 		bhi	.L270
 3180 0130 DFE813F0 		tbh	[pc, r3, lsl #1]
 3181              	.L244:
 3182 0134 0900     		.2byte	(.L252-.L244)/2
 3183 0136 9400     		.2byte	(.L251-.L244)/2
 3184 0138 CE00     		.2byte	(.L250-.L244)/2
 3185 013a 0901     		.2byte	(.L249-.L244)/2
 3186 013c 2401     		.2byte	(.L248-.L244)/2
 3187 013e 4001     		.2byte	(.L247-.L244)/2
 3188 0140 6D01     		.2byte	(.L246-.L244)/2
 3189 0142 D001     		.2byte	(.L245-.L244)/2
 3190 0144 EB01     		.2byte	(.L243-.L244)/2
 3191              		.p2align 1
 3192              	.L252:
1247:rtos/uC-Clk/Source/clk.c **** 
 3193              		.loc 1 1247 96 view .LVU985
1249:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",    1u);
 3194              		.loc 1 1249 13 view .LVU986
1249:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",    1u);
 3195              		.loc 1 1249 19 is_stmt 0 view .LVU987
 3196 0146 0522     		movs	r2, #5
 3197 0148 0CA9     		add	r1, sp, #48
 3198 014a 3046     		mov	r0, r6
 3199 014c FFF7FEFF 		bl	Str_Copy_N
 3200              	.LVL353:
1250:rtos/uC-Clk/Source/clk.c **** 
 3201              		.loc 1 1250 13 is_stmt 1 view .LVU988
1250:rtos/uC-Clk/Source/clk.c **** 
 3202              		.loc 1 1250 19 is_stmt 0 view .LVU989
 3203 0150 D64D     		ldr	r5, .L274
 3204 0152 0122     		movs	r2, #1
 3205 0154 2946     		mov	r1, r5
 3206 0156 3046     		mov	r0, r6
 3207 0158 FFF7FEFF 		bl	Str_Cat_N
 3208              	.LVL354:
1252:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",    1u);
 3209              		.loc 1 1252 13 is_stmt 1 view .LVU990
1252:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",    1u);
 3210              		.loc 1 1252 19 is_stmt 0 view .LVU991
 3211 015c 0222     		movs	r2, #2
 3212 015e 0BA9     		add	r1, sp, #44
 3213 0160 3046     		mov	r0, r6
 3214 0162 FFF7FEFF 		bl	Str_Cat_N
 3215              	.LVL355:
ARM GAS  /tmp/cct1pkgW.s 			page 132


1253:rtos/uC-Clk/Source/clk.c **** 
 3216              		.loc 1 1253 13 is_stmt 1 view .LVU992
1253:rtos/uC-Clk/Source/clk.c **** 
 3217              		.loc 1 1253 19 is_stmt 0 view .LVU993
 3218 0166 0122     		movs	r2, #1
 3219 0168 2946     		mov	r1, r5
 3220 016a 3046     		mov	r0, r6
 3221 016c FFF7FEFF 		bl	Str_Cat_N
 3222              	.LVL356:
1255:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",    1u);
 3223              		.loc 1 1255 13 is_stmt 1 view .LVU994
1255:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",    1u);
 3224              		.loc 1 1255 19 is_stmt 0 view .LVU995
 3225 0170 0222     		movs	r2, #2
 3226 0172 0AA9     		add	r1, sp, #40
 3227 0174 3046     		mov	r0, r6
 3228 0176 FFF7FEFF 		bl	Str_Cat_N
 3229              	.LVL357:
1256:rtos/uC-Clk/Source/clk.c **** 
 3230              		.loc 1 1256 13 is_stmt 1 view .LVU996
1256:rtos/uC-Clk/Source/clk.c **** 
 3231              		.loc 1 1256 19 is_stmt 0 view .LVU997
 3232 017a CD4D     		ldr	r5, .L274+4
 3233 017c 0122     		movs	r2, #1
 3234 017e 2946     		mov	r1, r5
 3235 0180 3046     		mov	r0, r6
 3236 0182 FFF7FEFF 		bl	Str_Cat_N
 3237              	.LVL358:
1258:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",    1u);
 3238              		.loc 1 1258 13 is_stmt 1 view .LVU998
1258:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",    1u);
 3239              		.loc 1 1258 19 is_stmt 0 view .LVU999
 3240 0186 0222     		movs	r2, #2
 3241 0188 09A9     		add	r1, sp, #36
 3242 018a 3046     		mov	r0, r6
 3243 018c FFF7FEFF 		bl	Str_Cat_N
 3244              	.LVL359:
1259:rtos/uC-Clk/Source/clk.c **** 
 3245              		.loc 1 1259 13 is_stmt 1 view .LVU1000
1259:rtos/uC-Clk/Source/clk.c **** 
 3246              		.loc 1 1259 19 is_stmt 0 view .LVU1001
 3247 0190 DFF82C83 		ldr	r8, .L274+20
 3248 0194 0122     		movs	r2, #1
 3249 0196 4146     		mov	r1, r8
 3250 0198 3046     		mov	r0, r6
 3251 019a FFF7FEFF 		bl	Str_Cat_N
 3252              	.LVL360:
1261:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",    1u);
 3253              		.loc 1 1261 13 is_stmt 1 view .LVU1002
1261:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",    1u);
 3254              		.loc 1 1261 19 is_stmt 0 view .LVU1003
 3255 019e 0222     		movs	r2, #2
 3256 01a0 08A9     		add	r1, sp, #32
 3257 01a2 3046     		mov	r0, r6
 3258 01a4 FFF7FEFF 		bl	Str_Cat_N
 3259              	.LVL361:
1262:rtos/uC-Clk/Source/clk.c **** 
ARM GAS  /tmp/cct1pkgW.s 			page 133


 3260              		.loc 1 1262 13 is_stmt 1 view .LVU1004
1262:rtos/uC-Clk/Source/clk.c **** 
 3261              		.loc 1 1262 19 is_stmt 0 view .LVU1005
 3262 01a8 0122     		movs	r2, #1
 3263 01aa 4146     		mov	r1, r8
 3264 01ac 3046     		mov	r0, r6
 3265 01ae FFF7FEFF 		bl	Str_Cat_N
 3266              	.LVL362:
1264:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",    1u);
 3267              		.loc 1 1264 13 is_stmt 1 view .LVU1006
1264:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",    1u);
 3268              		.loc 1 1264 19 is_stmt 0 view .LVU1007
 3269 01b2 0222     		movs	r2, #2
 3270 01b4 07A9     		add	r1, sp, #28
 3271 01b6 3046     		mov	r0, r6
 3272 01b8 FFF7FEFF 		bl	Str_Cat_N
 3273              	.LVL363:
1265:rtos/uC-Clk/Source/clk.c **** 
 3274              		.loc 1 1265 13 is_stmt 1 view .LVU1008
1265:rtos/uC-Clk/Source/clk.c **** 
 3275              		.loc 1 1265 19 is_stmt 0 view .LVU1009
 3276 01bc 0122     		movs	r2, #1
 3277 01be 2946     		mov	r1, r5
 3278 01c0 3046     		mov	r0, r6
 3279 01c2 FFF7FEFF 		bl	Str_Cat_N
 3280              	.LVL364:
1267:rtos/uC-Clk/Source/clk.c **** 
 3281              		.loc 1 1267 13 is_stmt 1 view .LVU1010
1267:rtos/uC-Clk/Source/clk.c **** 
 3282              		.loc 1 1267 19 is_stmt 0 view .LVU1011
 3283 01c6 0322     		movs	r2, #3
 3284 01c8 BA49     		ldr	r1, .L274+8
 3285 01ca 3046     		mov	r0, r6
 3286 01cc FFF7FEFF 		bl	Str_Cat_N
 3287              	.LVL365:
1269:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Cat_N(p_str, "+", 1u);
 3288              		.loc 1 1269 14 is_stmt 1 view .LVU1012
1269:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Cat_N(p_str, "+", 1u);
 3289              		.loc 1 1269 29 is_stmt 0 view .LVU1013
 3290 01d0 2369     		ldr	r3, [r4, #16]
1269:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Cat_N(p_str, "+", 1u);
 3291              		.loc 1 1269 17 view .LVU1014
 3292 01d2 002B     		cmp	r3, #0
 3293 01d4 3CDB     		blt	.L253
1270:rtos/uC-Clk/Source/clk.c ****              } else {
 3294              		.loc 1 1270 17 is_stmt 1 view .LVU1015
1270:rtos/uC-Clk/Source/clk.c ****              } else {
 3295              		.loc 1 1270 23 is_stmt 0 view .LVU1016
 3296 01d6 0122     		movs	r2, #1
 3297 01d8 B749     		ldr	r1, .L274+12
 3298 01da 3046     		mov	r0, r6
 3299 01dc FFF7FEFF 		bl	Str_Cat_N
 3300              	.LVL366:
 3301              	.L254:
1275:rtos/uC-Clk/Source/clk.c ****              tz_hr_abs      = tz_sec_rem_abs / DEF_TIME_NBR_SEC_PER_HR;
 3302              		.loc 1 1275 14 is_stmt 1 view .LVU1017
1275:rtos/uC-Clk/Source/clk.c ****              tz_hr_abs      = tz_sec_rem_abs / DEF_TIME_NBR_SEC_PER_HR;
ARM GAS  /tmp/cct1pkgW.s 			page 134


 3303              		.loc 1 1275 31 is_stmt 0 view .LVU1018
 3304 01e0 2369     		ldr	r3, [r4, #16]
 3305 01e2 002B     		cmp	r3, #0
 3306 01e4 B8BF     		it	lt
 3307 01e6 5B42     		rsblt	r3, r3, #0
 3308              	.LVL367:
1276:rtos/uC-Clk/Source/clk.c ****              tz_sec_rem_abs = tz_sec_rem_abs % DEF_TIME_NBR_SEC_PER_HR;
 3309              		.loc 1 1276 14 is_stmt 1 view .LVU1019
1276:rtos/uC-Clk/Source/clk.c ****              tz_sec_rem_abs = tz_sec_rem_abs % DEF_TIME_NBR_SEC_PER_HR;
 3310              		.loc 1 1276 29 is_stmt 0 view .LVU1020
 3311 01e8 B448     		ldr	r0, .L274+16
 3312 01ea A0FB0320 		umull	r2, r0, r0, r3
 3313 01ee C00A     		lsrs	r0, r0, #11
 3314              	.LVL368:
1277:rtos/uC-Clk/Source/clk.c ****             (void)Str_FmtNbr_Int32U((CPU_INT32S )tz_hr_abs,
 3315              		.loc 1 1277 14 is_stmt 1 view .LVU1021
1277:rtos/uC-Clk/Source/clk.c ****             (void)Str_FmtNbr_Int32U((CPU_INT32S )tz_hr_abs,
 3316              		.loc 1 1277 29 is_stmt 0 view .LVU1022
 3317 01f0 4FF46164 		mov	r4, #3600
 3318              	.LVL369:
1277:rtos/uC-Clk/Source/clk.c ****             (void)Str_FmtNbr_Int32U((CPU_INT32S )tz_hr_abs,
 3319              		.loc 1 1277 29 view .LVU1023
 3320 01f4 04FB1034 		mls	r4, r4, r0, r3
 3321              	.LVL370:
1278:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_TZ_HR_LEN,
 3322              		.loc 1 1278 13 is_stmt 1 view .LVU1024
1278:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_TZ_HR_LEN,
 3323              		.loc 1 1278 19 is_stmt 0 view .LVU1025
 3324 01f8 06AB     		add	r3, sp, #24
 3325 01fa 0293     		str	r3, [sp, #8]
 3326 01fc 0125     		movs	r5, #1
 3327 01fe 0195     		str	r5, [sp, #4]
 3328 0200 4FF00008 		mov	r8, #0
 3329 0204 CDF80080 		str	r8, [sp]
 3330 0208 3023     		movs	r3, #48
 3331 020a 0A22     		movs	r2, #10
 3332 020c 0221     		movs	r1, #2
 3333 020e FFF7FEFF 		bl	Str_FmtNbr_Int32U
 3334              	.LVL371:
1286:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(p_str, ":", 1u);
 3335              		.loc 1 1286 13 is_stmt 1 view .LVU1026
1286:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(p_str, ":", 1u);
 3336              		.loc 1 1286 19 is_stmt 0 view .LVU1027
 3337 0212 0222     		movs	r2, #2
 3338 0214 06A9     		add	r1, sp, #24
 3339 0216 3046     		mov	r0, r6
 3340 0218 FFF7FEFF 		bl	Str_Cat_N
 3341              	.LVL372:
1287:rtos/uC-Clk/Source/clk.c **** 
 3342              		.loc 1 1287 13 is_stmt 1 view .LVU1028
1287:rtos/uC-Clk/Source/clk.c **** 
 3343              		.loc 1 1287 19 is_stmt 0 view .LVU1029
 3344 021c 2A46     		mov	r2, r5
 3345 021e A849     		ldr	r1, .L274+20
 3346 0220 3046     		mov	r0, r6
 3347 0222 FFF7FEFF 		bl	Str_Cat_N
 3348              	.LVL373:
ARM GAS  /tmp/cct1pkgW.s 			page 135


1289:rtos/uC-Clk/Source/clk.c ****             (void)Str_FmtNbr_Int32U((CPU_INT32S )tz_min_abs,
 3349              		.loc 1 1289 14 is_stmt 1 view .LVU1030
1289:rtos/uC-Clk/Source/clk.c ****             (void)Str_FmtNbr_Int32U((CPU_INT32S )tz_min_abs,
 3350              		.loc 1 1289 25 is_stmt 0 view .LVU1031
 3351 0226 A748     		ldr	r0, .L274+24
 3352 0228 A0FB0430 		umull	r3, r0, r0, r4
 3353              	.LVL374:
1290:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_TZ_MIN_LEN,
 3354              		.loc 1 1290 13 is_stmt 1 view .LVU1032
1290:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_TZ_MIN_LEN,
 3355              		.loc 1 1290 19 is_stmt 0 view .LVU1033
 3356 022c 06AB     		add	r3, sp, #24
 3357 022e 0293     		str	r3, [sp, #8]
 3358 0230 0195     		str	r5, [sp, #4]
 3359 0232 CDF80080 		str	r8, [sp]
 3360 0236 3023     		movs	r3, #48
 3361 0238 0A22     		movs	r2, #10
 3362 023a 0221     		movs	r1, #2
 3363 023c 4009     		lsrs	r0, r0, #5
 3364              	.LVL375:
1290:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_TZ_MIN_LEN,
 3365              		.loc 1 1290 19 view .LVU1034
 3366 023e FFF7FEFF 		bl	Str_FmtNbr_Int32U
 3367              	.LVL376:
1298:rtos/uC-Clk/Source/clk.c ****              break;
 3368              		.loc 1 1298 13 is_stmt 1 view .LVU1035
1298:rtos/uC-Clk/Source/clk.c ****              break;
 3369              		.loc 1 1298 19 is_stmt 0 view .LVU1036
 3370 0242 0222     		movs	r2, #2
 3371 0244 06A9     		add	r1, sp, #24
 3372 0246 3046     		mov	r0, r6
 3373 0248 FFF7FEFF 		bl	Str_Cat_N
 3374              	.LVL377:
1299:rtos/uC-Clk/Source/clk.c **** 
 3375              		.loc 1 1299 14 is_stmt 1 view .LVU1037
1487:rtos/uC-Clk/Source/clk.c **** }
 3376              		.loc 1 1487 12 is_stmt 0 view .LVU1038
 3377 024c 3D46     		mov	r5, r7
1299:rtos/uC-Clk/Source/clk.c **** 
 3378              		.loc 1 1299 14 view .LVU1039
 3379 024e A3E1     		b	.L231
 3380              	.LVL378:
 3381              	.L253:
1272:rtos/uC-Clk/Source/clk.c ****              }
 3382              		.loc 1 1272 17 is_stmt 1 view .LVU1040
1272:rtos/uC-Clk/Source/clk.c ****              }
 3383              		.loc 1 1272 23 is_stmt 0 view .LVU1041
 3384 0250 0122     		movs	r2, #1
 3385 0252 9649     		ldr	r1, .L274
 3386 0254 3046     		mov	r0, r6
 3387 0256 FFF7FEFF 		bl	Str_Cat_N
 3388              	.LVL379:
 3389 025a C1E7     		b	.L254
 3390              	.L251:
1304:rtos/uC-Clk/Source/clk.c **** 
 3391              		.loc 1 1304 78 is_stmt 1 view .LVU1042
1306:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
ARM GAS  /tmp/cct1pkgW.s 			page 136


 3392              		.loc 1 1306 13 view .LVU1043
1306:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3393              		.loc 1 1306 19 is_stmt 0 view .LVU1044
 3394 025c 0522     		movs	r2, #5
 3395 025e 0CA9     		add	r1, sp, #48
 3396 0260 3046     		mov	r0, r6
 3397 0262 FFF7FEFF 		bl	Str_Copy_N
 3398              	.LVL380:
1307:rtos/uC-Clk/Source/clk.c **** 
 3399              		.loc 1 1307 13 is_stmt 1 view .LVU1045
1307:rtos/uC-Clk/Source/clk.c **** 
 3400              		.loc 1 1307 19 is_stmt 0 view .LVU1046
 3401 0266 914C     		ldr	r4, .L274
 3402              	.LVL381:
1307:rtos/uC-Clk/Source/clk.c **** 
 3403              		.loc 1 1307 19 view .LVU1047
 3404 0268 0122     		movs	r2, #1
 3405 026a 2146     		mov	r1, r4
 3406 026c 3046     		mov	r0, r6
 3407 026e FFF7FEFF 		bl	Str_Cat_N
 3408              	.LVL382:
1309:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3409              		.loc 1 1309 13 is_stmt 1 view .LVU1048
1309:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3410              		.loc 1 1309 19 is_stmt 0 view .LVU1049
 3411 0272 0222     		movs	r2, #2
 3412 0274 0BA9     		add	r1, sp, #44
 3413 0276 3046     		mov	r0, r6
 3414 0278 FFF7FEFF 		bl	Str_Cat_N
 3415              	.LVL383:
1310:rtos/uC-Clk/Source/clk.c **** 
 3416              		.loc 1 1310 13 is_stmt 1 view .LVU1050
1310:rtos/uC-Clk/Source/clk.c **** 
 3417              		.loc 1 1310 19 is_stmt 0 view .LVU1051
 3418 027c 0122     		movs	r2, #1
 3419 027e 2146     		mov	r1, r4
 3420 0280 3046     		mov	r0, r6
 3421 0282 FFF7FEFF 		bl	Str_Cat_N
 3422              	.LVL384:
1312:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
 3423              		.loc 1 1312 13 is_stmt 1 view .LVU1052
1312:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
 3424              		.loc 1 1312 19 is_stmt 0 view .LVU1053
 3425 0286 0222     		movs	r2, #2
 3426 0288 0AA9     		add	r1, sp, #40
 3427 028a 3046     		mov	r0, r6
 3428 028c FFF7FEFF 		bl	Str_Cat_N
 3429              	.LVL385:
1313:rtos/uC-Clk/Source/clk.c **** 
 3430              		.loc 1 1313 13 is_stmt 1 view .LVU1054
1313:rtos/uC-Clk/Source/clk.c **** 
 3431              		.loc 1 1313 19 is_stmt 0 view .LVU1055
 3432 0290 0122     		movs	r2, #1
 3433 0292 8749     		ldr	r1, .L274+4
 3434 0294 3046     		mov	r0, r6
 3435 0296 FFF7FEFF 		bl	Str_Cat_N
 3436              	.LVL386:
ARM GAS  /tmp/cct1pkgW.s 			page 137


1315:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3437              		.loc 1 1315 13 is_stmt 1 view .LVU1056
1315:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3438              		.loc 1 1315 19 is_stmt 0 view .LVU1057
 3439 029a 0222     		movs	r2, #2
 3440 029c 09A9     		add	r1, sp, #36
 3441 029e 3046     		mov	r0, r6
 3442 02a0 FFF7FEFF 		bl	Str_Cat_N
 3443              	.LVL387:
1316:rtos/uC-Clk/Source/clk.c **** 
 3444              		.loc 1 1316 13 is_stmt 1 view .LVU1058
1316:rtos/uC-Clk/Source/clk.c **** 
 3445              		.loc 1 1316 19 is_stmt 0 view .LVU1059
 3446 02a4 864C     		ldr	r4, .L274+20
 3447 02a6 0122     		movs	r2, #1
 3448 02a8 2146     		mov	r1, r4
 3449 02aa 3046     		mov	r0, r6
 3450 02ac FFF7FEFF 		bl	Str_Cat_N
 3451              	.LVL388:
1318:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3452              		.loc 1 1318 13 is_stmt 1 view .LVU1060
1318:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3453              		.loc 1 1318 19 is_stmt 0 view .LVU1061
 3454 02b0 0222     		movs	r2, #2
 3455 02b2 08A9     		add	r1, sp, #32
 3456 02b4 3046     		mov	r0, r6
 3457 02b6 FFF7FEFF 		bl	Str_Cat_N
 3458              	.LVL389:
1319:rtos/uC-Clk/Source/clk.c **** 
 3459              		.loc 1 1319 13 is_stmt 1 view .LVU1062
1319:rtos/uC-Clk/Source/clk.c **** 
 3460              		.loc 1 1319 19 is_stmt 0 view .LVU1063
 3461 02ba 0122     		movs	r2, #1
 3462 02bc 2146     		mov	r1, r4
 3463 02be 3046     		mov	r0, r6
 3464 02c0 FFF7FEFF 		bl	Str_Cat_N
 3465              	.LVL390:
1321:rtos/uC-Clk/Source/clk.c ****              break;
 3466              		.loc 1 1321 13 is_stmt 1 view .LVU1064
1321:rtos/uC-Clk/Source/clk.c ****              break;
 3467              		.loc 1 1321 19 is_stmt 0 view .LVU1065
 3468 02c4 0222     		movs	r2, #2
 3469 02c6 07A9     		add	r1, sp, #28
 3470 02c8 3046     		mov	r0, r6
 3471 02ca FFF7FEFF 		bl	Str_Cat_N
 3472              	.LVL391:
1322:rtos/uC-Clk/Source/clk.c **** 
 3473              		.loc 1 1322 14 is_stmt 1 view .LVU1066
 3474 02ce 63E1     		b	.L231
 3475              	.LVL392:
 3476              	.L250:
1326:rtos/uC-Clk/Source/clk.c **** 
 3477              		.loc 1 1326 76 view .LVU1067
1328:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3478              		.loc 1 1328 13 view .LVU1068
1328:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3479              		.loc 1 1328 19 is_stmt 0 view .LVU1069
ARM GAS  /tmp/cct1pkgW.s 			page 138


 3480 02d0 0322     		movs	r2, #3
 3481 02d2 0BA9     		add	r1, sp, #44
 3482 02d4 3046     		mov	r0, r6
 3483 02d6 FFF7FEFF 		bl	Str_Copy_N
 3484              	.LVL393:
1329:rtos/uC-Clk/Source/clk.c **** 
 3485              		.loc 1 1329 13 is_stmt 1 view .LVU1070
1329:rtos/uC-Clk/Source/clk.c **** 
 3486              		.loc 1 1329 19 is_stmt 0 view .LVU1071
 3487 02da 744C     		ldr	r4, .L274
 3488              	.LVL394:
1329:rtos/uC-Clk/Source/clk.c **** 
 3489              		.loc 1 1329 19 view .LVU1072
 3490 02dc 0122     		movs	r2, #1
 3491 02de 2146     		mov	r1, r4
 3492 02e0 3046     		mov	r0, r6
 3493 02e2 FFF7FEFF 		bl	Str_Cat_N
 3494              	.LVL395:
1331:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3495              		.loc 1 1331 13 is_stmt 1 view .LVU1073
1331:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3496              		.loc 1 1331 19 is_stmt 0 view .LVU1074
 3497 02e6 0222     		movs	r2, #2
 3498 02e8 0AA9     		add	r1, sp, #40
 3499 02ea 3046     		mov	r0, r6
 3500 02ec FFF7FEFF 		bl	Str_Cat_N
 3501              	.LVL396:
1332:rtos/uC-Clk/Source/clk.c **** 
 3502              		.loc 1 1332 13 is_stmt 1 view .LVU1075
1332:rtos/uC-Clk/Source/clk.c **** 
 3503              		.loc 1 1332 19 is_stmt 0 view .LVU1076
 3504 02f0 0122     		movs	r2, #1
 3505 02f2 2146     		mov	r1, r4
 3506 02f4 3046     		mov	r0, r6
 3507 02f6 FFF7FEFF 		bl	Str_Cat_N
 3508              	.LVL397:
1334:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, p_yr,  CLK_STR_DIG_YR_TRUNC_LEN);
 3509              		.loc 1 1334 14 is_stmt 1 view .LVU1077
1335:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
 3510              		.loc 1 1335 13 view .LVU1078
1335:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
 3511              		.loc 1 1335 19 is_stmt 0 view .LVU1079
 3512 02fa 0222     		movs	r2, #2
 3513 02fc 0DF13201 		add	r1, sp, #50
 3514              	.LVL398:
1335:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
 3515              		.loc 1 1335 19 view .LVU1080
 3516 0300 3046     		mov	r0, r6
 3517 0302 FFF7FEFF 		bl	Str_Cat_N
 3518              	.LVL399:
1336:rtos/uC-Clk/Source/clk.c **** 
 3519              		.loc 1 1336 13 is_stmt 1 view .LVU1081
1336:rtos/uC-Clk/Source/clk.c **** 
 3520              		.loc 1 1336 19 is_stmt 0 view .LVU1082
 3521 0306 0122     		movs	r2, #1
 3522 0308 6949     		ldr	r1, .L274+4
 3523 030a 3046     		mov	r0, r6
ARM GAS  /tmp/cct1pkgW.s 			page 139


 3524 030c FFF7FEFF 		bl	Str_Cat_N
 3525              	.LVL400:
1338:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3526              		.loc 1 1338 13 is_stmt 1 view .LVU1083
1338:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3527              		.loc 1 1338 19 is_stmt 0 view .LVU1084
 3528 0310 0222     		movs	r2, #2
 3529 0312 09A9     		add	r1, sp, #36
 3530 0314 3046     		mov	r0, r6
 3531 0316 FFF7FEFF 		bl	Str_Cat_N
 3532              	.LVL401:
1339:rtos/uC-Clk/Source/clk.c **** 
 3533              		.loc 1 1339 13 is_stmt 1 view .LVU1085
1339:rtos/uC-Clk/Source/clk.c **** 
 3534              		.loc 1 1339 19 is_stmt 0 view .LVU1086
 3535 031a 694C     		ldr	r4, .L274+20
 3536 031c 0122     		movs	r2, #1
 3537 031e 2146     		mov	r1, r4
 3538 0320 3046     		mov	r0, r6
 3539 0322 FFF7FEFF 		bl	Str_Cat_N
 3540              	.LVL402:
1341:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3541              		.loc 1 1341 13 is_stmt 1 view .LVU1087
1341:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3542              		.loc 1 1341 19 is_stmt 0 view .LVU1088
 3543 0326 0222     		movs	r2, #2
 3544 0328 08A9     		add	r1, sp, #32
 3545 032a 3046     		mov	r0, r6
 3546 032c FFF7FEFF 		bl	Str_Cat_N
 3547              	.LVL403:
1342:rtos/uC-Clk/Source/clk.c **** 
 3548              		.loc 1 1342 13 is_stmt 1 view .LVU1089
1342:rtos/uC-Clk/Source/clk.c **** 
 3549              		.loc 1 1342 19 is_stmt 0 view .LVU1090
 3550 0330 0122     		movs	r2, #1
 3551 0332 2146     		mov	r1, r4
 3552 0334 3046     		mov	r0, r6
 3553 0336 FFF7FEFF 		bl	Str_Cat_N
 3554              	.LVL404:
1344:rtos/uC-Clk/Source/clk.c ****              break;
 3555              		.loc 1 1344 13 is_stmt 1 view .LVU1091
1344:rtos/uC-Clk/Source/clk.c ****              break;
 3556              		.loc 1 1344 19 is_stmt 0 view .LVU1092
 3557 033a 0222     		movs	r2, #2
 3558 033c 07A9     		add	r1, sp, #28
 3559 033e 3046     		mov	r0, r6
 3560 0340 FFF7FEFF 		bl	Str_Cat_N
 3561              	.LVL405:
1345:rtos/uC-Clk/Source/clk.c **** 
 3562              		.loc 1 1345 14 is_stmt 1 view .LVU1093
 3563 0344 28E1     		b	.L231
 3564              	.LVL406:
 3565              	.L249:
1350:rtos/uC-Clk/Source/clk.c **** 
 3566              		.loc 1 1350 69 view .LVU1094
1352:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3567              		.loc 1 1352 13 view .LVU1095
ARM GAS  /tmp/cct1pkgW.s 			page 140


1352:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3568              		.loc 1 1352 19 is_stmt 0 view .LVU1096
 3569 0346 0522     		movs	r2, #5
 3570 0348 0CA9     		add	r1, sp, #48
 3571 034a 3046     		mov	r0, r6
 3572 034c FFF7FEFF 		bl	Str_Copy_N
 3573              	.LVL407:
1353:rtos/uC-Clk/Source/clk.c **** 
 3574              		.loc 1 1353 13 is_stmt 1 view .LVU1097
1353:rtos/uC-Clk/Source/clk.c **** 
 3575              		.loc 1 1353 19 is_stmt 0 view .LVU1098
 3576 0350 564C     		ldr	r4, .L274
 3577              	.LVL408:
1353:rtos/uC-Clk/Source/clk.c **** 
 3578              		.loc 1 1353 19 view .LVU1099
 3579 0352 0122     		movs	r2, #1
 3580 0354 2146     		mov	r1, r4
 3581 0356 3046     		mov	r0, r6
 3582 0358 FFF7FEFF 		bl	Str_Cat_N
 3583              	.LVL409:
1355:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str,  "-",  1u);
 3584              		.loc 1 1355 13 is_stmt 1 view .LVU1100
1355:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str,  "-",  1u);
 3585              		.loc 1 1355 19 is_stmt 0 view .LVU1101
 3586 035c 0222     		movs	r2, #2
 3587 035e 0BA9     		add	r1, sp, #44
 3588 0360 3046     		mov	r0, r6
 3589 0362 FFF7FEFF 		bl	Str_Cat_N
 3590              	.LVL410:
1356:rtos/uC-Clk/Source/clk.c **** 
 3591              		.loc 1 1356 13 is_stmt 1 view .LVU1102
1356:rtos/uC-Clk/Source/clk.c **** 
 3592              		.loc 1 1356 19 is_stmt 0 view .LVU1103
 3593 0366 0122     		movs	r2, #1
 3594 0368 2146     		mov	r1, r4
 3595 036a 3046     		mov	r0, r6
 3596 036c FFF7FEFF 		bl	Str_Cat_N
 3597              	.LVL411:
1358:rtos/uC-Clk/Source/clk.c ****              break;
 3598              		.loc 1 1358 13 is_stmt 1 view .LVU1104
1358:rtos/uC-Clk/Source/clk.c ****              break;
 3599              		.loc 1 1358 19 is_stmt 0 view .LVU1105
 3600 0370 0222     		movs	r2, #2
 3601 0372 0AA9     		add	r1, sp, #40
 3602 0374 3046     		mov	r0, r6
 3603 0376 FFF7FEFF 		bl	Str_Cat_N
 3604              	.LVL412:
1359:rtos/uC-Clk/Source/clk.c **** 
 3605              		.loc 1 1359 14 is_stmt 1 view .LVU1106
 3606 037a 0DE1     		b	.L231
 3607              	.LVL413:
 3608              	.L248:
1364:rtos/uC-Clk/Source/clk.c **** 
 3609              		.loc 1 1364 67 view .LVU1107
1366:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3610              		.loc 1 1366 13 view .LVU1108
1366:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
ARM GAS  /tmp/cct1pkgW.s 			page 141


 3611              		.loc 1 1366 19 is_stmt 0 view .LVU1109
 3612 037c 0322     		movs	r2, #3
 3613 037e 0BA9     		add	r1, sp, #44
 3614 0380 3046     		mov	r0, r6
 3615 0382 FFF7FEFF 		bl	Str_Copy_N
 3616              	.LVL414:
1367:rtos/uC-Clk/Source/clk.c **** 
 3617              		.loc 1 1367 13 is_stmt 1 view .LVU1110
1367:rtos/uC-Clk/Source/clk.c **** 
 3618              		.loc 1 1367 19 is_stmt 0 view .LVU1111
 3619 0386 494C     		ldr	r4, .L274
 3620              	.LVL415:
1367:rtos/uC-Clk/Source/clk.c **** 
 3621              		.loc 1 1367 19 view .LVU1112
 3622 0388 0122     		movs	r2, #1
 3623 038a 2146     		mov	r1, r4
 3624 038c 3046     		mov	r0, r6
 3625 038e FFF7FEFF 		bl	Str_Cat_N
 3626              	.LVL416:
1369:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3627              		.loc 1 1369 13 is_stmt 1 view .LVU1113
1369:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, "-",   1u);
 3628              		.loc 1 1369 19 is_stmt 0 view .LVU1114
 3629 0392 0222     		movs	r2, #2
 3630 0394 0AA9     		add	r1, sp, #40
 3631 0396 3046     		mov	r0, r6
 3632 0398 FFF7FEFF 		bl	Str_Cat_N
 3633              	.LVL417:
1370:rtos/uC-Clk/Source/clk.c **** 
 3634              		.loc 1 1370 13 is_stmt 1 view .LVU1115
1370:rtos/uC-Clk/Source/clk.c **** 
 3635              		.loc 1 1370 19 is_stmt 0 view .LVU1116
 3636 039c 0122     		movs	r2, #1
 3637 039e 2146     		mov	r1, r4
 3638 03a0 3046     		mov	r0, r6
 3639 03a2 FFF7FEFF 		bl	Str_Cat_N
 3640              	.LVL418:
1372:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, p_yr,  CLK_STR_DIG_YR_TRUNC_LEN);
 3641              		.loc 1 1372 14 is_stmt 1 view .LVU1117
1373:rtos/uC-Clk/Source/clk.c ****              break;
 3642              		.loc 1 1373 13 view .LVU1118
1373:rtos/uC-Clk/Source/clk.c ****              break;
 3643              		.loc 1 1373 19 is_stmt 0 view .LVU1119
 3644 03a6 0222     		movs	r2, #2
 3645 03a8 0DF13201 		add	r1, sp, #50
 3646              	.LVL419:
1373:rtos/uC-Clk/Source/clk.c ****              break;
 3647              		.loc 1 1373 19 view .LVU1120
 3648 03ac 3046     		mov	r0, r6
 3649 03ae FFF7FEFF 		bl	Str_Cat_N
 3650              	.LVL420:
1374:rtos/uC-Clk/Source/clk.c **** 
 3651              		.loc 1 1374 14 is_stmt 1 view .LVU1121
 3652 03b2 F1E0     		b	.L231
 3653              	.LVL421:
 3654              	.L247:
1379:rtos/uC-Clk/Source/clk.c **** 
ARM GAS  /tmp/cct1pkgW.s 			page 142


 3655              		.loc 1 1379 77 view .LVU1122
1381:rtos/uC-Clk/Source/clk.c ****                              (CPU_CHAR *)Clk_StrDayOfWk[p_date_time->DayOfWk - CLK_FIRST_DAY_OF_WK]
 3656              		.loc 1 1381 13 view .LVU1123
1382:rtos/uC-Clk/Source/clk.c ****                              (CPU_SIZE_T)CLK_STR_DAY_OF_WK_MAX_LEN + 1u);
 3657              		.loc 1 1382 68 is_stmt 0 view .LVU1124
 3658 03b4 E388     		ldrh	r3, [r4, #6]
1382:rtos/uC-Clk/Source/clk.c ****                              (CPU_SIZE_T)CLK_STR_DAY_OF_WK_MAX_LEN + 1u);
 3659              		.loc 1 1382 78 view .LVU1125
 3660 03b6 013B     		subs	r3, r3, #1
1381:rtos/uC-Clk/Source/clk.c ****                              (CPU_CHAR *)Clk_StrDayOfWk[p_date_time->DayOfWk - CLK_FIRST_DAY_OF_WK]
 3661              		.loc 1 1381 19 view .LVU1126
 3662 03b8 0A22     		movs	r2, #10
 3663 03ba 4349     		ldr	r1, .L274+28
 3664 03bc 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3665 03c0 3046     		mov	r0, r6
 3666 03c2 FFF7FEFF 		bl	Str_Copy_N
 3667              	.LVL422:
1384:rtos/uC-Clk/Source/clk.c **** 
 3668              		.loc 1 1384 13 is_stmt 1 view .LVU1127
1384:rtos/uC-Clk/Source/clk.c **** 
 3669              		.loc 1 1384 19 is_stmt 0 view .LVU1128
 3670 03c6 3A4F     		ldr	r7, .L274+4
 3671 03c8 0122     		movs	r2, #1
 3672 03ca 3946     		mov	r1, r7
 3673 03cc 3046     		mov	r0, r6
 3674 03ce FFF7FEFF 		bl	Str_Cat_N
 3675              	.LVL423:
1386:rtos/uC-Clk/Source/clk.c ****                              (CPU_CHAR *)Clk_StrMonth[p_date_time->Month - CLK_FIRST_DAY_OF_MONTH],
 3676              		.loc 1 1386 13 is_stmt 1 view .LVU1129
1387:rtos/uC-Clk/Source/clk.c ****                              (CPU_SIZE_T)CLK_STR_MONTH_MAX_LEN);
 3677              		.loc 1 1387 66 is_stmt 0 view .LVU1130
 3678 03d2 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
1387:rtos/uC-Clk/Source/clk.c ****                              (CPU_SIZE_T)CLK_STR_MONTH_MAX_LEN);
 3679              		.loc 1 1387 74 view .LVU1131
 3680 03d4 013B     		subs	r3, r3, #1
1386:rtos/uC-Clk/Source/clk.c ****                              (CPU_CHAR *)Clk_StrMonth[p_date_time->Month - CLK_FIRST_DAY_OF_MONTH],
 3681              		.loc 1 1386 19 view .LVU1132
 3682 03d6 0922     		movs	r2, #9
 3683 03d8 3C49     		ldr	r1, .L274+32
 3684 03da 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3685 03de 3046     		mov	r0, r6
 3686 03e0 FFF7FEFF 		bl	Str_Cat_N
 3687              	.LVL424:
1389:rtos/uC-Clk/Source/clk.c **** 
 3688              		.loc 1 1389 13 is_stmt 1 view .LVU1133
1389:rtos/uC-Clk/Source/clk.c **** 
 3689              		.loc 1 1389 19 is_stmt 0 view .LVU1134
 3690 03e4 0122     		movs	r2, #1
 3691 03e6 3946     		mov	r1, r7
 3692 03e8 3046     		mov	r0, r6
 3693 03ea FFF7FEFF 		bl	Str_Cat_N
 3694              	.LVL425:
1391:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(  p_str, ", ", 2u);
 3695              		.loc 1 1391 13 is_stmt 1 view .LVU1135
1391:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N(  p_str, ", ", 2u);
 3696              		.loc 1 1391 19 is_stmt 0 view .LVU1136
 3697 03ee 0222     		movs	r2, #2
ARM GAS  /tmp/cct1pkgW.s 			page 143


 3698 03f0 0AA9     		add	r1, sp, #40
 3699 03f2 3046     		mov	r0, r6
 3700 03f4 FFF7FEFF 		bl	Str_Cat_N
 3701              	.LVL426:
1392:rtos/uC-Clk/Source/clk.c **** 
 3702              		.loc 1 1392 13 is_stmt 1 view .LVU1137
1392:rtos/uC-Clk/Source/clk.c **** 
 3703              		.loc 1 1392 19 is_stmt 0 view .LVU1138
 3704 03f8 0222     		movs	r2, #2
 3705 03fa 3549     		ldr	r1, .L274+36
 3706 03fc 3046     		mov	r0, r6
 3707 03fe FFF7FEFF 		bl	Str_Cat_N
 3708              	.LVL427:
1394:rtos/uC-Clk/Source/clk.c ****              break;
 3709              		.loc 1 1394 13 is_stmt 1 view .LVU1139
1394:rtos/uC-Clk/Source/clk.c ****              break;
 3710              		.loc 1 1394 19 is_stmt 0 view .LVU1140
 3711 0402 0422     		movs	r2, #4
 3712 0404 0CA9     		add	r1, sp, #48
 3713 0406 3046     		mov	r0, r6
 3714 0408 FFF7FEFF 		bl	Str_Cat_N
 3715              	.LVL428:
1395:rtos/uC-Clk/Source/clk.c **** 
 3716              		.loc 1 1395 14 is_stmt 1 view .LVU1141
 3717 040c C4E0     		b	.L231
 3718              	.L246:
1399:rtos/uC-Clk/Source/clk.c **** 
 3719              		.loc 1 1399 83 view .LVU1142
1401:rtos/uC-Clk/Source/clk.c ****                              (CPU_CHAR *)Clk_StrDayOfWk[p_date_time->DayOfWk - CLK_FIRST_DAY_OF_WK]
 3720              		.loc 1 1401 13 view .LVU1143
1402:rtos/uC-Clk/Source/clk.c ****                              (CPU_SIZE_T)CLK_STR_DAY_OF_WK_TRUNC_LEN + 1u);
 3721              		.loc 1 1402 68 is_stmt 0 view .LVU1144
 3722 040e E388     		ldrh	r3, [r4, #6]
1402:rtos/uC-Clk/Source/clk.c ****                              (CPU_SIZE_T)CLK_STR_DAY_OF_WK_TRUNC_LEN + 1u);
 3723              		.loc 1 1402 78 view .LVU1145
 3724 0410 013B     		subs	r3, r3, #1
1401:rtos/uC-Clk/Source/clk.c ****                              (CPU_CHAR *)Clk_StrDayOfWk[p_date_time->DayOfWk - CLK_FIRST_DAY_OF_WK]
 3725              		.loc 1 1401 19 view .LVU1146
 3726 0412 0422     		movs	r2, #4
 3727 0414 2C49     		ldr	r1, .L274+28
 3728 0416 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3729 041a 3046     		mov	r0, r6
 3730 041c FFF7FEFF 		bl	Str_Copy_N
 3731              	.LVL429:
1404:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
 3732              		.loc 1 1404 14 is_stmt 1 view .LVU1147
1404:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
 3733              		.loc 1 1404 23 is_stmt 0 view .LVU1148
 3734 0420 0023     		movs	r3, #0
 3735 0422 F370     		strb	r3, [r6, #3]
1405:rtos/uC-Clk/Source/clk.c **** 
 3736              		.loc 1 1405 13 is_stmt 1 view .LVU1149
1405:rtos/uC-Clk/Source/clk.c **** 
 3737              		.loc 1 1405 19 is_stmt 0 view .LVU1150
 3738 0424 224F     		ldr	r7, .L274+4
 3739 0426 0122     		movs	r2, #1
 3740 0428 3946     		mov	r1, r7
ARM GAS  /tmp/cct1pkgW.s 			page 144


 3741 042a 3046     		mov	r0, r6
 3742 042c FFF7FEFF 		bl	Str_Cat_N
 3743              	.LVL430:
1407:rtos/uC-Clk/Source/clk.c ****                             (CPU_CHAR  *)Clk_StrMonth[p_date_time->Month - CLK_FIRST_DAY_OF_MONTH],
 3744              		.loc 1 1407 13 is_stmt 1 view .LVU1151
1408:rtos/uC-Clk/Source/clk.c ****                             (CPU_SIZE_T )CLK_STR_MONTH_TRUNC_LEN);
 3745              		.loc 1 1408 66 is_stmt 0 view .LVU1152
 3746 0430 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
1408:rtos/uC-Clk/Source/clk.c ****                             (CPU_SIZE_T )CLK_STR_MONTH_TRUNC_LEN);
 3747              		.loc 1 1408 74 view .LVU1153
 3748 0432 013B     		subs	r3, r3, #1
1407:rtos/uC-Clk/Source/clk.c ****                             (CPU_CHAR  *)Clk_StrMonth[p_date_time->Month - CLK_FIRST_DAY_OF_MONTH],
 3749              		.loc 1 1407 19 view .LVU1154
 3750 0434 0322     		movs	r2, #3
 3751 0436 2549     		ldr	r1, .L274+32
 3752 0438 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3753 043c 3046     		mov	r0, r6
 3754 043e FFF7FEFF 		bl	Str_Cat_N
 3755              	.LVL431:
1410:rtos/uC-Clk/Source/clk.c **** 
 3756              		.loc 1 1410 13 is_stmt 1 view .LVU1155
1410:rtos/uC-Clk/Source/clk.c **** 
 3757              		.loc 1 1410 19 is_stmt 0 view .LVU1156
 3758 0442 0122     		movs	r2, #1
 3759 0444 3946     		mov	r1, r7
 3760 0446 3046     		mov	r0, r6
 3761 0448 FFF7FEFF 		bl	Str_Cat_N
 3762              	.LVL432:
1412:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
 3763              		.loc 1 1412 13 is_stmt 1 view .LVU1157
1412:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
 3764              		.loc 1 1412 19 is_stmt 0 view .LVU1158
 3765 044c 0222     		movs	r2, #2
 3766 044e 0AA9     		add	r1, sp, #40
 3767 0450 3046     		mov	r0, r6
 3768 0452 FFF7FEFF 		bl	Str_Cat_N
 3769              	.LVL433:
1413:rtos/uC-Clk/Source/clk.c **** 
 3770              		.loc 1 1413 13 is_stmt 1 view .LVU1159
1413:rtos/uC-Clk/Source/clk.c **** 
 3771              		.loc 1 1413 19 is_stmt 0 view .LVU1160
 3772 0456 0122     		movs	r2, #1
 3773 0458 3946     		mov	r1, r7
 3774 045a 3046     		mov	r0, r6
 3775 045c FFF7FEFF 		bl	Str_Cat_N
 3776              	.LVL434:
1415:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
 3777              		.loc 1 1415 13 is_stmt 1 view .LVU1161
1415:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
 3778              		.loc 1 1415 19 is_stmt 0 view .LVU1162
 3779 0460 0222     		movs	r2, #2
 3780 0462 09A9     		add	r1, sp, #36
 3781 0464 3046     		mov	r0, r6
 3782 0466 FFF7FEFF 		bl	Str_Cat_N
 3783              	.LVL435:
1416:rtos/uC-Clk/Source/clk.c **** 
 3784              		.loc 1 1416 13 is_stmt 1 view .LVU1163
ARM GAS  /tmp/cct1pkgW.s 			page 145


1416:rtos/uC-Clk/Source/clk.c **** 
 3785              		.loc 1 1416 19 is_stmt 0 view .LVU1164
 3786 046a 154C     		ldr	r4, .L274+20
 3787              	.LVL436:
1416:rtos/uC-Clk/Source/clk.c **** 
 3788              		.loc 1 1416 19 view .LVU1165
 3789 046c 0122     		movs	r2, #1
 3790 046e 2146     		mov	r1, r4
 3791 0470 3046     		mov	r0, r6
 3792 0472 FFF7FEFF 		bl	Str_Cat_N
 3793              	.LVL437:
1418:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
 3794              		.loc 1 1418 13 is_stmt 1 view .LVU1166
1418:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
 3795              		.loc 1 1418 19 is_stmt 0 view .LVU1167
 3796 0476 0222     		movs	r2, #2
 3797 0478 08A9     		add	r1, sp, #32
 3798 047a 3046     		mov	r0, r6
 3799 047c FFF7FEFF 		bl	Str_Cat_N
 3800              	.LVL438:
1419:rtos/uC-Clk/Source/clk.c **** 
 3801              		.loc 1 1419 13 is_stmt 1 view .LVU1168
1419:rtos/uC-Clk/Source/clk.c **** 
 3802              		.loc 1 1419 19 is_stmt 0 view .LVU1169
 3803 0480 0122     		movs	r2, #1
 3804 0482 2146     		mov	r1, r4
 3805 0484 3046     		mov	r0, r6
 3806 0486 FFF7FEFF 		bl	Str_Cat_N
 3807              	.LVL439:
1421:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
 3808              		.loc 1 1421 13 is_stmt 1 view .LVU1170
1421:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ", 1u);
 3809              		.loc 1 1421 19 is_stmt 0 view .LVU1171
 3810 048a 0222     		movs	r2, #2
 3811 048c 07A9     		add	r1, sp, #28
 3812 048e 3046     		mov	r0, r6
 3813 0490 FFF7FEFF 		bl	Str_Cat_N
 3814              	.LVL440:
1422:rtos/uC-Clk/Source/clk.c **** 
 3815              		.loc 1 1422 13 is_stmt 1 view .LVU1172
1422:rtos/uC-Clk/Source/clk.c **** 
 3816              		.loc 1 1422 19 is_stmt 0 view .LVU1173
 3817 0494 0122     		movs	r2, #1
 3818 0496 3946     		mov	r1, r7
 3819 0498 3046     		mov	r0, r6
 3820 049a FFF7FEFF 		bl	Str_Cat_N
 3821              	.LVL441:
1424:rtos/uC-Clk/Source/clk.c ****              break;
 3822              		.loc 1 1424 13 is_stmt 1 view .LVU1174
1424:rtos/uC-Clk/Source/clk.c ****              break;
 3823              		.loc 1 1424 19 is_stmt 0 view .LVU1175
 3824 049e 0422     		movs	r2, #4
 3825 04a0 0CA9     		add	r1, sp, #48
 3826 04a2 3046     		mov	r0, r6
 3827 04a4 FFF7FEFF 		bl	Str_Cat_N
 3828              	.LVL442:
1425:rtos/uC-Clk/Source/clk.c **** 
ARM GAS  /tmp/cct1pkgW.s 			page 146


 3829              		.loc 1 1425 14 is_stmt 1 view .LVU1176
 3830 04a8 76E0     		b	.L231
 3831              	.L275:
 3832 04aa 00BF     		.align	2
 3833              	.L274:
 3834 04ac 00000000 		.word	.LC0
 3835 04b0 04000000 		.word	.LC1
 3836 04b4 0C000000 		.word	.LC3
 3837 04b8 10000000 		.word	.LC4
 3838 04bc C5B3A291 		.word	-1851608123
 3839 04c0 08000000 		.word	.LC2
 3840 04c4 89888888 		.word	-2004318071
 3841 04c8 00000000 		.word	.LANCHOR9
 3842 04cc 00000000 		.word	.LANCHOR10
 3843 04d0 14000000 		.word	.LC5
 3844              	.LVL443:
 3845              	.L245:
1430:rtos/uC-Clk/Source/clk.c **** 
 3846              		.loc 1 1430 67 view .LVU1177
1432:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
 3847              		.loc 1 1432 13 view .LVU1178
1432:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
 3848              		.loc 1 1432 19 is_stmt 0 view .LVU1179
 3849 04d4 0322     		movs	r2, #3
 3850 04d6 09A9     		add	r1, sp, #36
 3851 04d8 3046     		mov	r0, r6
 3852 04da FFF7FEFF 		bl	Str_Copy_N
 3853              	.LVL444:
1433:rtos/uC-Clk/Source/clk.c **** 
 3854              		.loc 1 1433 13 is_stmt 1 view .LVU1180
1433:rtos/uC-Clk/Source/clk.c **** 
 3855              		.loc 1 1433 19 is_stmt 0 view .LVU1181
 3856 04de 334C     		ldr	r4, .L276
 3857              	.LVL445:
1433:rtos/uC-Clk/Source/clk.c **** 
 3858              		.loc 1 1433 19 view .LVU1182
 3859 04e0 0122     		movs	r2, #1
 3860 04e2 2146     		mov	r1, r4
 3861 04e4 3046     		mov	r0, r6
 3862 04e6 FFF7FEFF 		bl	Str_Cat_N
 3863              	.LVL446:
1435:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
 3864              		.loc 1 1435 13 is_stmt 1 view .LVU1183
1435:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":", 1u);
 3865              		.loc 1 1435 19 is_stmt 0 view .LVU1184
 3866 04ea 0222     		movs	r2, #2
 3867 04ec 08A9     		add	r1, sp, #32
 3868 04ee 3046     		mov	r0, r6
 3869 04f0 FFF7FEFF 		bl	Str_Cat_N
 3870              	.LVL447:
1436:rtos/uC-Clk/Source/clk.c **** 
 3871              		.loc 1 1436 13 is_stmt 1 view .LVU1185
1436:rtos/uC-Clk/Source/clk.c **** 
 3872              		.loc 1 1436 19 is_stmt 0 view .LVU1186
 3873 04f4 0122     		movs	r2, #1
 3874 04f6 2146     		mov	r1, r4
 3875 04f8 3046     		mov	r0, r6
ARM GAS  /tmp/cct1pkgW.s 			page 147


 3876 04fa FFF7FEFF 		bl	Str_Cat_N
 3877              	.LVL448:
1438:rtos/uC-Clk/Source/clk.c ****              break;
 3878              		.loc 1 1438 13 is_stmt 1 view .LVU1187
1438:rtos/uC-Clk/Source/clk.c ****              break;
 3879              		.loc 1 1438 19 is_stmt 0 view .LVU1188
 3880 04fe 0222     		movs	r2, #2
 3881 0500 07A9     		add	r1, sp, #28
 3882 0502 3046     		mov	r0, r6
 3883 0504 FFF7FEFF 		bl	Str_Cat_N
 3884              	.LVL449:
1439:rtos/uC-Clk/Source/clk.c **** 
 3885              		.loc 1 1439 14 is_stmt 1 view .LVU1189
 3886 0508 46E0     		b	.L231
 3887              	.LVL450:
 3888              	.L243:
1444:rtos/uC-Clk/Source/clk.c **** 
 3889              		.loc 1 1444 73 view .LVU1190
1446:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Copy_N(am_pm, "AM", CLK_STR_AM_PM_LEN + 1u);
 3890              		.loc 1 1446 14 view .LVU1191
1446:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Copy_N(am_pm, "AM", CLK_STR_AM_PM_LEN + 1u);
 3891              		.loc 1 1446 29 is_stmt 0 view .LVU1192
 3892 050a A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
1446:rtos/uC-Clk/Source/clk.c ****                 (void)Str_Copy_N(am_pm, "AM", CLK_STR_AM_PM_LEN + 1u);
 3893              		.loc 1 1446 17 view .LVU1193
 3894 050c 0B2B     		cmp	r3, #11
 3895 050e 08D8     		bhi	.L255
1447:rtos/uC-Clk/Source/clk.c ****                  if (p_date_time->Hr == 0u) {
 3896              		.loc 1 1447 17 is_stmt 1 view .LVU1194
1447:rtos/uC-Clk/Source/clk.c ****                  if (p_date_time->Hr == 0u) {
 3897              		.loc 1 1447 23 is_stmt 0 view .LVU1195
 3898 0510 0322     		movs	r2, #3
 3899 0512 2749     		ldr	r1, .L276+4
 3900 0514 05A8     		add	r0, sp, #20
 3901 0516 FFF7FEFF 		bl	Str_Copy_N
 3902              	.LVL451:
1448:rtos/uC-Clk/Source/clk.c ****                      half_day_hr = CLK_HR_PER_HALF_DAY;
 3903              		.loc 1 1448 18 is_stmt 1 view .LVU1196
1448:rtos/uC-Clk/Source/clk.c ****                      half_day_hr = CLK_HR_PER_HALF_DAY;
 3904              		.loc 1 1448 33 is_stmt 0 view .LVU1197
 3905 051a A07A     		ldrb	r0, [r4, #10]	@ zero_extendqisi2
1448:rtos/uC-Clk/Source/clk.c ****                      half_day_hr = CLK_HR_PER_HALF_DAY;
 3906              		.loc 1 1448 21 view .LVU1198
 3907 051c 48B9     		cbnz	r0, .L256
1449:rtos/uC-Clk/Source/clk.c ****                  } else {
 3908              		.loc 1 1449 34 view .LVU1199
 3909 051e 0C20     		movs	r0, #12
 3910 0520 07E0     		b	.L256
 3911              	.L255:
1454:rtos/uC-Clk/Source/clk.c ****                  half_day_hr = p_date_time->Hr - CLK_HR_PER_HALF_DAY;
 3912              		.loc 1 1454 17 is_stmt 1 view .LVU1200
1454:rtos/uC-Clk/Source/clk.c ****                  half_day_hr = p_date_time->Hr - CLK_HR_PER_HALF_DAY;
 3913              		.loc 1 1454 23 is_stmt 0 view .LVU1201
 3914 0522 0322     		movs	r2, #3
 3915 0524 2349     		ldr	r1, .L276+8
 3916 0526 05A8     		add	r0, sp, #20
 3917 0528 FFF7FEFF 		bl	Str_Copy_N
ARM GAS  /tmp/cct1pkgW.s 			page 148


 3918              	.LVL452:
1455:rtos/uC-Clk/Source/clk.c ****              }
 3919              		.loc 1 1455 18 is_stmt 1 view .LVU1202
1455:rtos/uC-Clk/Source/clk.c ****              }
 3920              		.loc 1 1455 43 is_stmt 0 view .LVU1203
 3921 052c A07A     		ldrb	r0, [r4, #10]	@ zero_extendqisi2
1455:rtos/uC-Clk/Source/clk.c ****              }
 3922              		.loc 1 1455 30 view .LVU1204
 3923 052e 0C38     		subs	r0, r0, #12
 3924 0530 C0B2     		uxtb	r0, r0
 3925              	.LVL453:
 3926              	.L256:
1458:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_HR_LEN,
 3927              		.loc 1 1458 13 is_stmt 1 view .LVU1205
1458:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_HR_LEN,
 3928              		.loc 1 1458 19 is_stmt 0 view .LVU1206
 3929 0532 09AF     		add	r7, sp, #36
 3930 0534 0297     		str	r7, [sp, #8]
 3931 0536 0124     		movs	r4, #1
 3932              	.LVL454:
1458:rtos/uC-Clk/Source/clk.c ****                                     (CPU_INT08U )CLK_STR_DIG_HR_LEN,
 3933              		.loc 1 1458 19 view .LVU1207
 3934 0538 0194     		str	r4, [sp, #4]
 3935 053a 0023     		movs	r3, #0
 3936 053c 0093     		str	r3, [sp]
 3937 053e 3023     		movs	r3, #48
 3938 0540 0A22     		movs	r2, #10
 3939 0542 0221     		movs	r1, #2
 3940 0544 FFF7FEFF 		bl	Str_FmtNbr_Int32U
 3941              	.LVL455:
1466:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3942              		.loc 1 1466 13 is_stmt 1 view .LVU1208
1466:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3943              		.loc 1 1466 19 is_stmt 0 view .LVU1209
 3944 0548 0322     		movs	r2, #3
 3945 054a 3946     		mov	r1, r7
 3946 054c 3046     		mov	r0, r6
 3947 054e FFF7FEFF 		bl	Str_Copy_N
 3948              	.LVL456:
1467:rtos/uC-Clk/Source/clk.c **** 
 3949              		.loc 1 1467 13 is_stmt 1 view .LVU1210
1467:rtos/uC-Clk/Source/clk.c **** 
 3950              		.loc 1 1467 19 is_stmt 0 view .LVU1211
 3951 0552 164F     		ldr	r7, .L276
 3952 0554 2246     		mov	r2, r4
 3953 0556 3946     		mov	r1, r7
 3954 0558 3046     		mov	r0, r6
 3955 055a FFF7FEFF 		bl	Str_Cat_N
 3956              	.LVL457:
1469:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3957              		.loc 1 1469 13 is_stmt 1 view .LVU1212
1469:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, ":",   1u);
 3958              		.loc 1 1469 19 is_stmt 0 view .LVU1213
 3959 055e 0222     		movs	r2, #2
 3960 0560 08A9     		add	r1, sp, #32
 3961 0562 3046     		mov	r0, r6
 3962 0564 FFF7FEFF 		bl	Str_Cat_N
ARM GAS  /tmp/cct1pkgW.s 			page 149


 3963              	.LVL458:
1470:rtos/uC-Clk/Source/clk.c **** 
 3964              		.loc 1 1470 13 is_stmt 1 view .LVU1214
1470:rtos/uC-Clk/Source/clk.c **** 
 3965              		.loc 1 1470 19 is_stmt 0 view .LVU1215
 3966 0568 2246     		mov	r2, r4
 3967 056a 3946     		mov	r1, r7
 3968 056c 3046     		mov	r0, r6
 3969 056e FFF7FEFF 		bl	Str_Cat_N
 3970              	.LVL459:
1472:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
 3971              		.loc 1 1472 13 is_stmt 1 view .LVU1216
1472:rtos/uC-Clk/Source/clk.c ****             (void)Str_Cat_N (p_str, " ",   1u);
 3972              		.loc 1 1472 19 is_stmt 0 view .LVU1217
 3973 0572 0222     		movs	r2, #2
 3974 0574 07A9     		add	r1, sp, #28
 3975 0576 3046     		mov	r0, r6
 3976 0578 FFF7FEFF 		bl	Str_Cat_N
 3977              	.LVL460:
1473:rtos/uC-Clk/Source/clk.c **** 
 3978              		.loc 1 1473 13 is_stmt 1 view .LVU1218
1473:rtos/uC-Clk/Source/clk.c **** 
 3979              		.loc 1 1473 19 is_stmt 0 view .LVU1219
 3980 057c 2246     		mov	r2, r4
 3981 057e 0E49     		ldr	r1, .L276+12
 3982 0580 3046     		mov	r0, r6
 3983 0582 FFF7FEFF 		bl	Str_Cat_N
 3984              	.LVL461:
1475:rtos/uC-Clk/Source/clk.c ****              break;
 3985              		.loc 1 1475 13 is_stmt 1 view .LVU1220
1475:rtos/uC-Clk/Source/clk.c ****              break;
 3986              		.loc 1 1475 19 is_stmt 0 view .LVU1221
 3987 0586 0222     		movs	r2, #2
 3988 0588 05A9     		add	r1, sp, #20
 3989 058a 3046     		mov	r0, r6
 3990 058c FFF7FEFF 		bl	Str_Cat_N
 3991              	.LVL462:
1476:rtos/uC-Clk/Source/clk.c **** 
 3992              		.loc 1 1476 14 is_stmt 1 view .LVU1222
 3993 0590 02E0     		b	.L231
 3994              	.LVL463:
 3995              	.L257:
1103:rtos/uC-Clk/Source/clk.c ****     }
 3996              		.loc 1 1103 16 is_stmt 0 view .LVU1223
 3997 0592 0025     		movs	r5, #0
 3998 0594 00E0     		b	.L231
 3999              	.L258:
1106:rtos/uC-Clk/Source/clk.c ****     }
 4000              		.loc 1 1106 16 view .LVU1224
 4001 0596 0025     		movs	r5, #0
 4002              	.LVL464:
 4003              	.L231:
1488:rtos/uC-Clk/Source/clk.c **** #endif
 4004              		.loc 1 1488 1 view .LVU1225
 4005 0598 2846     		mov	r0, r5
 4006 059a 0FB0     		add	sp, sp, #60
 4007              	.LCFI53:
ARM GAS  /tmp/cct1pkgW.s 			page 150


 4008              		.cfi_remember_state
 4009              		.cfi_def_cfa_offset 28
 4010              		@ sp needed
 4011 059c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4012              	.LVL465:
 4013              	.L259:
1110:rtos/uC-Clk/Source/clk.c **** 
 4014              		.loc 1 1110 11 view .LVU1226
 4015 05a0 0025     		movs	r5, #0
 4016 05a2 F9E7     		b	.L231
 4017              	.L272:
 4018              	.LCFI54:
 4019              		.cfi_restore_state
1117:rtos/uC-Clk/Source/clk.c ****              }
 4020              		.loc 1 1117 25 view .LVU1227
 4021 05a4 0025     		movs	r5, #0
 4022 05a6 F7E7     		b	.L231
 4023              	.LVL466:
 4024              	.L270:
1234:rtos/uC-Clk/Source/clk.c ****                            (CPU_INT08U )CLK_STR_DIG_SEC_LEN,
 4025              		.loc 1 1234 10 view .LVU1228
 4026 05a8 0025     		movs	r5, #0
 4027 05aa F5E7     		b	.L231
 4028              	.L277:
 4029              		.align	2
 4030              	.L276:
 4031 05ac 08000000 		.word	.LC2
 4032 05b0 18000000 		.word	.LC6
 4033 05b4 1C000000 		.word	.LC7
 4034 05b8 04000000 		.word	.LC1
 4035              		.cfi_endproc
 4036              	.LFE14:
 4038              		.section	.text.Clk_TS_ToTS_NTP,"ax",%progbits
 4039              		.align	1
 4040              		.global	Clk_TS_ToTS_NTP
 4041              		.syntax unified
 4042              		.thumb
 4043              		.thumb_func
 4044              		.fpu fpv4-sp-d16
 4046              	Clk_TS_ToTS_NTP:
 4047              	.LVL467:
 4048              	.LFB17:
1626:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC  ts_ntp_sec;
 4049              		.loc 1 1626 1 is_stmt 1 view -0
 4050              		.cfi_startproc
 4051              		@ args = 0, pretend = 0, frame = 0
 4052              		@ frame_needed = 0, uses_anonymous_args = 0
 4053              		@ link register save eliminated.
1627:rtos/uC-Clk/Source/clk.c **** 
 4054              		.loc 1 1627 5 view .LVU1230
1631:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4055              		.loc 1 1631 5 view .LVU1231
1631:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4056              		.loc 1 1631 8 is_stmt 0 view .LVU1232
 4057 0000 0A46     		mov	r2, r1
 4058 0002 49B1     		cbz	r1, .L280
1636:rtos/uC-Clk/Source/clk.c **** 
ARM GAS  /tmp/cct1pkgW.s 			page 151


 4059              		.loc 1 1636 4 is_stmt 1 view .LVU1233
1636:rtos/uC-Clk/Source/clk.c **** 
 4060              		.loc 1 1636 18 is_stmt 0 view .LVU1234
 4061 0004 0023     		movs	r3, #0
 4062 0006 0B60     		str	r3, [r1]
1639:rtos/uC-Clk/Source/clk.c **** 
 4063              		.loc 1 1639 61 is_stmt 1 view .LVU1235
1642:rtos/uC-Clk/Source/clk.c ****     if (ts_ntp_sec < CLK_NTP_EPOCH_OFFSET_SEC) {                /* Chk for ovf.                    
 4064              		.loc 1 1642 5 view .LVU1236
1642:rtos/uC-Clk/Source/clk.c ****     if (ts_ntp_sec < CLK_NTP_EPOCH_OFFSET_SEC) {                /* Chk for ovf.                    
 4065              		.loc 1 1642 16 is_stmt 0 view .LVU1237
 4066 0008 054B     		ldr	r3, .L282
 4067 000a 0344     		add	r3, r3, r0
 4068              	.LVL468:
1643:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    NTP TS conversion has failed\n\r"));
 4069              		.loc 1 1643 5 is_stmt 1 view .LVU1238
1643:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    NTP TS conversion has failed\n\r"));
 4070              		.loc 1 1643 8 is_stmt 0 view .LVU1239
 4071 000c 0549     		ldr	r1, .L282+4
 4072              	.LVL469:
1643:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    NTP TS conversion has failed\n\r"));
 4073              		.loc 1 1643 8 view .LVU1240
 4074 000e 8B42     		cmp	r3, r1
 4075 0010 04D9     		bls	.L281
1648:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    NTP TS converted = %u\n\r", (unsigned int)*p_ts_ntp_sec));
 4076              		.loc 1 1648 4 is_stmt 1 view .LVU1241
1648:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    NTP TS converted = %u\n\r", (unsigned int)*p_ts_ntp_sec));
 4077              		.loc 1 1648 18 is_stmt 0 view .LVU1242
 4078 0012 1360     		str	r3, [r2]
1649:rtos/uC-Clk/Source/clk.c **** 
 4079              		.loc 1 1649 82 is_stmt 1 view .LVU1243
1651:rtos/uC-Clk/Source/clk.c **** }
 4080              		.loc 1 1651 5 view .LVU1244
1651:rtos/uC-Clk/Source/clk.c **** }
 4081              		.loc 1 1651 12 is_stmt 0 view .LVU1245
 4082 0014 0120     		movs	r0, #1
 4083              	.LVL470:
1651:rtos/uC-Clk/Source/clk.c **** }
 4084              		.loc 1 1651 12 view .LVU1246
 4085 0016 7047     		bx	lr
 4086              	.LVL471:
 4087              	.L280:
1632:rtos/uC-Clk/Source/clk.c ****     }
 4088              		.loc 1 1632 16 view .LVU1247
 4089 0018 0020     		movs	r0, #0
 4090              	.LVL472:
1632:rtos/uC-Clk/Source/clk.c ****     }
 4091              		.loc 1 1632 16 view .LVU1248
 4092 001a 7047     		bx	lr
 4093              	.LVL473:
 4094              	.L281:
1645:rtos/uC-Clk/Source/clk.c ****     }
 4095              		.loc 1 1645 16 view .LVU1249
 4096 001c 0020     		movs	r0, #0
 4097              	.LVL474:
1652:rtos/uC-Clk/Source/clk.c **** #endif
 4098              		.loc 1 1652 1 view .LVU1250
ARM GAS  /tmp/cct1pkgW.s 			page 152


 4099 001e 7047     		bx	lr
 4100              	.L283:
 4101              		.align	2
 4102              	.L282:
 4103 0020 00C217BC 		.word	-1139293696
 4104 0024 FFC117BC 		.word	-1139293697
 4105              		.cfi_endproc
 4106              	.LFE17:
 4108              		.section	.text.Clk_GetTS_NTP,"ax",%progbits
 4109              		.align	1
 4110              		.global	Clk_GetTS_NTP
 4111              		.syntax unified
 4112              		.thumb
 4113              		.thumb_func
 4114              		.fpu fpv4-sp-d16
 4116              	Clk_GetTS_NTP:
 4117              	.LVL475:
 4118              	.LFB15:
1523:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 4119              		.loc 1 1523 1 is_stmt 1 view -0
 4120              		.cfi_startproc
 4121              		@ args = 0, pretend = 0, frame = 0
 4122              		@ frame_needed = 0, uses_anonymous_args = 0
1523:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 4123              		.loc 1 1523 1 is_stmt 0 view .LVU1252
 4124 0000 10B5     		push	{r4, lr}
 4125              	.LCFI55:
 4126              		.cfi_def_cfa_offset 8
 4127              		.cfi_offset 4, -8
 4128              		.cfi_offset 14, -4
 4129 0002 0446     		mov	r4, r0
1524:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4130              		.loc 1 1524 5 is_stmt 1 view .LVU1253
1525:rtos/uC-Clk/Source/clk.c **** 
 4131              		.loc 1 1525 5 view .LVU1254
1537:rtos/uC-Clk/Source/clk.c **** 
 4132              		.loc 1 1537 5 view .LVU1255
1537:rtos/uC-Clk/Source/clk.c **** 
 4133              		.loc 1 1537 14 is_stmt 0 view .LVU1256
 4134 0004 FFF7FEFF 		bl	Clk_GetTS
 4135              	.LVL476:
1540:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4136              		.loc 1 1540 5 is_stmt 1 view .LVU1257
1540:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4137              		.loc 1 1540 14 is_stmt 0 view .LVU1258
 4138 0008 2146     		mov	r1, r4
 4139 000a FFF7FEFF 		bl	Clk_TS_ToTS_NTP
 4140              	.LVL477:
1541:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4141              		.loc 1 1541 5 is_stmt 1 view .LVU1259
1541:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4142              		.loc 1 1541 8 is_stmt 0 view .LVU1260
 4143 000e 0128     		cmp	r0, #1
 4144 0010 00D0     		beq	.L285
1542:rtos/uC-Clk/Source/clk.c ****     }
 4145              		.loc 1 1542 17 view .LVU1261
 4146 0012 0020     		movs	r0, #0
ARM GAS  /tmp/cct1pkgW.s 			page 153


 4147              	.LVL478:
 4148              	.L285:
1546:rtos/uC-Clk/Source/clk.c **** #endif
 4149              		.loc 1 1546 1 view .LVU1262
 4150 0014 10BD     		pop	{r4, pc}
1546:rtos/uC-Clk/Source/clk.c **** #endif
 4151              		.loc 1 1546 1 view .LVU1263
 4152              		.cfi_endproc
 4153              	.LFE15:
 4155              		.section	.text.Clk_TS_NTP_ToTS,"ax",%progbits
 4156              		.align	1
 4157              		.global	Clk_TS_NTP_ToTS
 4158              		.syntax unified
 4159              		.thumb
 4160              		.thumb_func
 4161              		.fpu fpv4-sp-d16
 4163              	Clk_TS_NTP_ToTS:
 4164              	.LVL479:
 4165              	.LFB18:
1690:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE TS PT
 4166              		.loc 1 1690 1 is_stmt 1 view -0
 4167              		.cfi_startproc
 4168              		@ args = 0, pretend = 0, frame = 0
 4169              		@ frame_needed = 0, uses_anonymous_args = 0
 4170              		@ link register save eliminated.
1692:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4171              		.loc 1 1692 5 view .LVU1265
1692:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4172              		.loc 1 1692 8 is_stmt 0 view .LVU1266
 4173 0000 48B1     		cbz	r0, .L290
1697:rtos/uC-Clk/Source/clk.c **** 
 4174              		.loc 1 1697 4 is_stmt 1 view .LVU1267
1697:rtos/uC-Clk/Source/clk.c **** 
 4175              		.loc 1 1697 14 is_stmt 0 view .LVU1268
 4176 0002 0022     		movs	r2, #0
 4177 0004 0260     		str	r2, [r0]
1700:rtos/uC-Clk/Source/clk.c **** 
 4178              		.loc 1 1700 69 is_stmt 1 view .LVU1269
1702:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("TS overflow\n\r"));
 4179              		.loc 1 1702 5 view .LVU1270
1702:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("TS overflow\n\r"));
 4180              		.loc 1 1702 8 is_stmt 0 view .LVU1271
 4181 0006 064A     		ldr	r2, .L292
 4182 0008 9142     		cmp	r1, r2
 4183 000a 06D9     		bls	.L291
1708:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    TS converted = %u\n\r", (unsigned int)*p_ts_sec));
 4184              		.loc 1 1708 4 is_stmt 1 view .LVU1272
1708:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    TS converted = %u\n\r", (unsigned int)*p_ts_sec));
 4185              		.loc 1 1708 27 is_stmt 0 view .LVU1273
 4186 000c 054A     		ldr	r2, .L292+4
 4187 000e 0A44     		add	r2, r2, r1
1708:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    TS converted = %u\n\r", (unsigned int)*p_ts_sec));
 4188              		.loc 1 1708 14 view .LVU1274
 4189 0010 0260     		str	r2, [r0]
1709:rtos/uC-Clk/Source/clk.c **** 
 4190              		.loc 1 1709 74 is_stmt 1 view .LVU1275
1711:rtos/uC-Clk/Source/clk.c **** }
ARM GAS  /tmp/cct1pkgW.s 			page 154


 4191              		.loc 1 1711 5 view .LVU1276
1711:rtos/uC-Clk/Source/clk.c **** }
 4192              		.loc 1 1711 12 is_stmt 0 view .LVU1277
 4193 0012 0120     		movs	r0, #1
 4194              	.LVL480:
1711:rtos/uC-Clk/Source/clk.c **** }
 4195              		.loc 1 1711 12 view .LVU1278
 4196 0014 7047     		bx	lr
 4197              	.LVL481:
 4198              	.L290:
1693:rtos/uC-Clk/Source/clk.c ****     }
 4199              		.loc 1 1693 16 view .LVU1279
 4200 0016 0020     		movs	r0, #0
 4201              	.LVL482:
1693:rtos/uC-Clk/Source/clk.c ****     }
 4202              		.loc 1 1693 16 view .LVU1280
 4203 0018 7047     		bx	lr
 4204              	.LVL483:
 4205              	.L291:
1704:rtos/uC-Clk/Source/clk.c ****     }
 4206              		.loc 1 1704 16 view .LVU1281
 4207 001a 0020     		movs	r0, #0
 4208              	.LVL484:
1712:rtos/uC-Clk/Source/clk.c **** #endif
 4209              		.loc 1 1712 1 view .LVU1282
 4210 001c 7047     		bx	lr
 4211              	.L293:
 4212 001e 00BF     		.align	2
 4213              	.L292:
 4214 0020 FFC117BC 		.word	-1139293697
 4215 0024 003EE843 		.word	1139293696
 4216              		.cfi_endproc
 4217              	.LFE18:
 4219              		.section	.text.Clk_SetTS_NTP,"ax",%progbits
 4220              		.align	1
 4221              		.global	Clk_SetTS_NTP
 4222              		.syntax unified
 4223              		.thumb
 4224              		.thumb_func
 4225              		.fpu fpv4-sp-d16
 4227              	Clk_SetTS_NTP:
 4228              	.LVL485:
 4229              	.LFB16:
1574:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 4230              		.loc 1 1574 1 is_stmt 1 view -0
 4231              		.cfi_startproc
 4232              		@ args = 0, pretend = 0, frame = 8
 4233              		@ frame_needed = 0, uses_anonymous_args = 0
1574:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 4234              		.loc 1 1574 1 is_stmt 0 view .LVU1284
 4235 0000 10B5     		push	{r4, lr}
 4236              	.LCFI56:
 4237              		.cfi_def_cfa_offset 8
 4238              		.cfi_offset 4, -8
 4239              		.cfi_offset 14, -4
 4240 0002 82B0     		sub	sp, sp, #8
 4241              	.LCFI57:
ARM GAS  /tmp/cct1pkgW.s 			page 155


 4242              		.cfi_def_cfa_offset 16
 4243 0004 0146     		mov	r1, r0
1575:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4244              		.loc 1 1575 5 is_stmt 1 view .LVU1285
1576:rtos/uC-Clk/Source/clk.c **** 
 4245              		.loc 1 1576 5 view .LVU1286
1579:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4246              		.loc 1 1579 5 view .LVU1287
1579:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4247              		.loc 1 1579 13 is_stmt 0 view .LVU1288
 4248 0006 01A8     		add	r0, sp, #4
 4249              	.LVL486:
1579:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4250              		.loc 1 1579 13 view .LVU1289
 4251 0008 FFF7FEFF 		bl	Clk_TS_NTP_ToTS
 4252              	.LVL487:
1580:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4253              		.loc 1 1580 5 is_stmt 1 view .LVU1290
1580:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4254              		.loc 1 1580 8 is_stmt 0 view .LVU1291
 4255 000c 0128     		cmp	r0, #1
 4256 000e 03D0     		beq	.L298
1581:rtos/uC-Clk/Source/clk.c ****     }
 4257              		.loc 1 1581 17 view .LVU1292
 4258 0010 0024     		movs	r4, #0
 4259              	.LVL488:
 4260              	.L295:
1588:rtos/uC-Clk/Source/clk.c **** #endif
 4261              		.loc 1 1588 1 view .LVU1293
 4262 0012 2046     		mov	r0, r4
 4263 0014 02B0     		add	sp, sp, #8
 4264              	.LCFI58:
 4265              		.cfi_remember_state
 4266              		.cfi_def_cfa_offset 8
 4267              		@ sp needed
 4268 0016 10BD     		pop	{r4, pc}
 4269              	.LVL489:
 4270              	.L298:
 4271              	.LCFI59:
 4272              		.cfi_restore_state
1588:rtos/uC-Clk/Source/clk.c **** #endif
 4273              		.loc 1 1588 1 view .LVU1294
 4274 0018 0446     		mov	r4, r0
1585:rtos/uC-Clk/Source/clk.c **** 
 4275              		.loc 1 1585 5 is_stmt 1 view .LVU1295
 4276 001a 0198     		ldr	r0, [sp, #4]
 4277              	.LVL490:
1585:rtos/uC-Clk/Source/clk.c **** 
 4278              		.loc 1 1585 5 is_stmt 0 view .LVU1296
 4279 001c FFF7FEFF 		bl	Clk_SetTS
 4280              	.LVL491:
1587:rtos/uC-Clk/Source/clk.c **** }
 4281              		.loc 1 1587 5 is_stmt 1 view .LVU1297
1587:rtos/uC-Clk/Source/clk.c **** }
 4282              		.loc 1 1587 12 is_stmt 0 view .LVU1298
 4283 0020 F7E7     		b	.L295
 4284              		.cfi_endproc
ARM GAS  /tmp/cct1pkgW.s 			page 156


 4285              	.LFE16:
 4287              		.section	.text.Clk_TS_NTP_ToDateTime,"ax",%progbits
 4288              		.align	1
 4289              		.global	Clk_TS_NTP_ToDateTime
 4290              		.syntax unified
 4291              		.thumb
 4292              		.thumb_func
 4293              		.fpu fpv4-sp-d16
 4295              	Clk_TS_NTP_ToDateTime:
 4296              	.LVL492:
 4297              	.LFB19:
1751:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4298              		.loc 1 1751 1 is_stmt 1 view -0
 4299              		.cfi_startproc
 4300              		@ args = 0, pretend = 0, frame = 0
 4301              		@ frame_needed = 0, uses_anonymous_args = 0
1751:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4302              		.loc 1 1751 1 is_stmt 0 view .LVU1300
 4303 0000 00B5     		push	{lr}
 4304              	.LCFI60:
 4305              		.cfi_def_cfa_offset 4
 4306              		.cfi_offset 14, -4
 4307 0002 83B0     		sub	sp, sp, #12
 4308              	.LCFI61:
 4309              		.cfi_def_cfa_offset 16
1752:rtos/uC-Clk/Source/clk.c **** 
 4310              		.loc 1 1752 5 is_stmt 1 view .LVU1301
1757:rtos/uC-Clk/Source/clk.c **** 
 4311              		.loc 1 1757 46 view .LVU1302
1759:rtos/uC-Clk/Source/clk.c ****                                      tz_sec,
 4312              		.loc 1 1759 5 view .LVU1303
1759:rtos/uC-Clk/Source/clk.c ****                                      tz_sec,
 4313              		.loc 1 1759 13 is_stmt 0 view .LVU1304
 4314 0004 40F2F473 		movw	r3, #2036
 4315 0008 0093     		str	r3, [sp]
 4316 000a 40F26C73 		movw	r3, #1900
 4317 000e FFF7FEFF 		bl	Clk_TS_ToDateTimeHandler
 4318              	.LVL493:
1764:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Date/time conversion has failed\n\r"));
 4319              		.loc 1 1764 5 is_stmt 1 view .LVU1305
1764:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Date/time conversion has failed\n\r"));
 4320              		.loc 1 1764 8 is_stmt 0 view .LVU1306
 4321 0012 0128     		cmp	r0, #1
 4322 0014 00D0     		beq	.L300
1766:rtos/uC-Clk/Source/clk.c ****     }
 4323              		.loc 1 1766 17 view .LVU1307
 4324 0016 0020     		movs	r0, #0
 4325              	.LVL494:
 4326              	.L300:
1770:rtos/uC-Clk/Source/clk.c **** #endif
 4327              		.loc 1 1770 1 view .LVU1308
 4328 0018 03B0     		add	sp, sp, #12
 4329              	.LCFI62:
 4330              		.cfi_def_cfa_offset 4
 4331              		@ sp needed
 4332 001a 5DF804FB 		ldr	pc, [sp], #4
 4333              		.cfi_endproc
ARM GAS  /tmp/cct1pkgW.s 			page 157


 4334              	.LFE19:
 4336              		.section	.text.Clk_NTP_DateTimeMake,"ax",%progbits
 4337              		.align	1
 4338              		.global	Clk_NTP_DateTimeMake
 4339              		.syntax unified
 4340              		.thumb
 4341              		.thumb_func
 4342              		.fpu fpv4-sp-d16
 4344              	Clk_NTP_DateTimeMake:
 4345              	.LVL495:
 4346              	.LFB21:
1908:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4347              		.loc 1 1908 1 is_stmt 1 view -0
 4348              		.cfi_startproc
 4349              		@ args = 16, pretend = 0, frame = 0
 4350              		@ frame_needed = 0, uses_anonymous_args = 0
1908:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4351              		.loc 1 1908 1 is_stmt 0 view .LVU1310
 4352 0000 10B5     		push	{r4, lr}
 4353              	.LCFI63:
 4354              		.cfi_def_cfa_offset 8
 4355              		.cfi_offset 4, -8
 4356              		.cfi_offset 14, -4
 4357 0002 86B0     		sub	sp, sp, #24
 4358              	.LCFI64:
 4359              		.cfi_def_cfa_offset 32
1909:rtos/uC-Clk/Source/clk.c **** 
 4360              		.loc 1 1909 5 is_stmt 1 view .LVU1311
1912:rtos/uC-Clk/Source/clk.c ****                                     yr,
 4361              		.loc 1 1912 5 view .LVU1312
1912:rtos/uC-Clk/Source/clk.c ****                                     yr,
 4362              		.loc 1 1912 13 is_stmt 0 view .LVU1313
 4363 0004 40F2F474 		movw	r4, #2036
 4364 0008 0594     		str	r4, [sp, #20]
 4365 000a 40F26C74 		movw	r4, #1900
 4366 000e 0494     		str	r4, [sp, #16]
 4367 0010 0B9C     		ldr	r4, [sp, #44]
 4368 0012 0394     		str	r4, [sp, #12]
 4369 0014 9DF82840 		ldrb	r4, [sp, #40]	@ zero_extendqisi2
 4370 0018 0294     		str	r4, [sp, #8]
 4371 001a 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 4372 001e 0194     		str	r4, [sp, #4]
 4373 0020 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
 4374 0024 0094     		str	r4, [sp]
 4375 0026 FFF7FEFF 		bl	Clk_DateTimeMakeHandler
 4376              	.LVL496:
1922:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4377              		.loc 1 1922 5 is_stmt 1 view .LVU1314
1922:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4378              		.loc 1 1922 8 is_stmt 0 view .LVU1315
 4379 002a 0128     		cmp	r0, #1
 4380 002c 00D0     		beq	.L304
1923:rtos/uC-Clk/Source/clk.c ****     }
 4381              		.loc 1 1923 17 view .LVU1316
 4382 002e 0020     		movs	r0, #0
 4383              	.LVL497:
 4384              	.L304:
ARM GAS  /tmp/cct1pkgW.s 			page 158


1927:rtos/uC-Clk/Source/clk.c **** #endif
 4385              		.loc 1 1927 1 view .LVU1317
 4386 0030 06B0     		add	sp, sp, #24
 4387              	.LCFI65:
 4388              		.cfi_def_cfa_offset 8
 4389              		@ sp needed
 4390 0032 10BD     		pop	{r4, pc}
1927:rtos/uC-Clk/Source/clk.c **** #endif
 4391              		.loc 1 1927 1 view .LVU1318
 4392              		.cfi_endproc
 4393              	.LFE21:
 4395              		.section	.text.Clk_IsNTP_DateTimeValid,"ax",%progbits
 4396              		.align	1
 4397              		.global	Clk_IsNTP_DateTimeValid
 4398              		.syntax unified
 4399              		.thumb
 4400              		.thumb_func
 4401              		.fpu fpv4-sp-d16
 4403              	Clk_IsNTP_DateTimeValid:
 4404              	.LVL498:
 4405              	.LFB22:
1959:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4406              		.loc 1 1959 1 is_stmt 1 view -0
 4407              		.cfi_startproc
 4408              		@ args = 0, pretend = 0, frame = 0
 4409              		@ frame_needed = 0, uses_anonymous_args = 0
1959:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4410              		.loc 1 1959 1 is_stmt 0 view .LVU1320
 4411 0000 08B5     		push	{r3, lr}
 4412              	.LCFI66:
 4413              		.cfi_def_cfa_offset 8
 4414              		.cfi_offset 3, -8
 4415              		.cfi_offset 14, -4
1960:rtos/uC-Clk/Source/clk.c **** 
 4416              		.loc 1 1960 5 is_stmt 1 view .LVU1321
1963:rtos/uC-Clk/Source/clk.c **** 
 4417              		.loc 1 1963 48 view .LVU1322
1965:rtos/uC-Clk/Source/clk.c ****                                        CLK_NTP_EPOCH_YR_START,
 4418              		.loc 1 1965 5 view .LVU1323
1965:rtos/uC-Clk/Source/clk.c ****                                        CLK_NTP_EPOCH_YR_START,
 4419              		.loc 1 1965 13 is_stmt 0 view .LVU1324
 4420 0002 40F2F472 		movw	r2, #2036
 4421 0006 40F26C71 		movw	r1, #1900
 4422 000a FFF7FEFF 		bl	Clk_IsDateTimeValidHandler
 4423              	.LVL499:
1968:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Fail\n\r"));
 4424              		.loc 1 1968 5 is_stmt 1 view .LVU1325
1968:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Fail\n\r"));
 4425              		.loc 1 1968 8 is_stmt 0 view .LVU1326
 4426 000e 0128     		cmp	r0, #1
 4427 0010 00D0     		beq	.L308
1970:rtos/uC-Clk/Source/clk.c ****     }
 4428              		.loc 1 1970 17 view .LVU1327
 4429 0012 0020     		movs	r0, #0
 4430              	.LVL500:
 4431              	.L308:
1976:rtos/uC-Clk/Source/clk.c **** #endif
ARM GAS  /tmp/cct1pkgW.s 			page 159


 4432              		.loc 1 1976 1 view .LVU1328
 4433 0014 08BD     		pop	{r3, pc}
 4434              		.cfi_endproc
 4435              	.LFE22:
 4437              		.section	.text.Clk_DateTimeToTS_NTP,"ax",%progbits
 4438              		.align	1
 4439              		.global	Clk_DateTimeToTS_NTP
 4440              		.syntax unified
 4441              		.thumb
 4442              		.thumb_func
 4443              		.fpu fpv4-sp-d16
 4445              	Clk_DateTimeToTS_NTP:
 4446              	.LVL501:
 4447              	.LFB20:
1814:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4448              		.loc 1 1814 1 is_stmt 1 view -0
 4449              		.cfi_startproc
 4450              		@ args = 0, pretend = 0, frame = 0
 4451              		@ frame_needed = 0, uses_anonymous_args = 0
1815:rtos/uC-Clk/Source/clk.c **** 
 4452              		.loc 1 1815 5 view .LVU1330
1819:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4453              		.loc 1 1819 5 view .LVU1331
1819:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4454              		.loc 1 1819 8 is_stmt 0 view .LVU1332
 4455 0000 A8B1     		cbz	r0, .L313
1814:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4456              		.loc 1 1814 1 view .LVU1333
 4457 0002 38B5     		push	{r3, r4, r5, lr}
 4458              	.LCFI67:
 4459              		.cfi_def_cfa_offset 16
 4460              		.cfi_offset 3, -16
 4461              		.cfi_offset 4, -12
 4462              		.cfi_offset 5, -8
 4463              		.cfi_offset 14, -4
 4464 0004 0C46     		mov	r4, r1
 4465 0006 0546     		mov	r5, r0
1824:rtos/uC-Clk/Source/clk.c **** 
 4466              		.loc 1 1824 4 is_stmt 1 view .LVU1334
1824:rtos/uC-Clk/Source/clk.c **** 
 4467              		.loc 1 1824 18 is_stmt 0 view .LVU1335
 4468 0008 0023     		movs	r3, #0
 4469 000a 0360     		str	r3, [r0]
1834:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4470              		.loc 1 1834 5 is_stmt 1 view .LVU1336
1834:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4471              		.loc 1 1834 13 is_stmt 0 view .LVU1337
 4472 000c 0846     		mov	r0, r1
 4473              	.LVL502:
1834:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4474              		.loc 1 1834 13 view .LVU1338
 4475 000e FFF7FEFF 		bl	Clk_IsNTP_DateTimeValid
 4476              	.LVL503:
1835:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4477              		.loc 1 1835 5 is_stmt 1 view .LVU1339
1835:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4478              		.loc 1 1835 8 is_stmt 0 view .LVU1340
ARM GAS  /tmp/cct1pkgW.s 			page 160


 4479 0012 0128     		cmp	r0, #1
 4480 0014 01D0     		beq	.L320
1836:rtos/uC-Clk/Source/clk.c ****     }
 4481              		.loc 1 1836 17 view .LVU1341
 4482 0016 0020     		movs	r0, #0
 4483              	.LVL504:
 4484              	.L312:
1849:rtos/uC-Clk/Source/clk.c **** #endif
 4485              		.loc 1 1849 1 view .LVU1342
 4486 0018 38BD     		pop	{r3, r4, r5, pc}
 4487              	.LVL505:
 4488              	.L320:
1840:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeToTS_Handler(p_ts_ntp_sec,
 4489              		.loc 1 1840 52 is_stmt 1 view .LVU1343
1841:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 4490              		.loc 1 1841 5 view .LVU1344
1841:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 4491              		.loc 1 1841 13 is_stmt 0 view .LVU1345
 4492 001a 40F26C72 		movw	r2, #1900
 4493 001e 2146     		mov	r1, r4
 4494 0020 2846     		mov	r0, r5
 4495              	.LVL506:
1841:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 4496              		.loc 1 1841 13 view .LVU1346
 4497 0022 FFF7FEFF 		bl	Clk_DateTimeToTS_Handler
 4498              	.LVL507:
1844:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4499              		.loc 1 1844 5 is_stmt 1 view .LVU1347
1844:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4500              		.loc 1 1844 8 is_stmt 0 view .LVU1348
 4501 0026 0128     		cmp	r0, #1
 4502 0028 F6D0     		beq	.L312
1845:rtos/uC-Clk/Source/clk.c ****     }
 4503              		.loc 1 1845 17 view .LVU1349
 4504 002a 0020     		movs	r0, #0
 4505              	.LVL508:
1845:rtos/uC-Clk/Source/clk.c ****     }
 4506              		.loc 1 1845 17 view .LVU1350
 4507 002c F4E7     		b	.L312
 4508              	.LVL509:
 4509              	.L313:
 4510              	.LCFI68:
 4511              		.cfi_def_cfa_offset 0
 4512              		.cfi_restore 3
 4513              		.cfi_restore 4
 4514              		.cfi_restore 5
 4515              		.cfi_restore 14
1820:rtos/uC-Clk/Source/clk.c ****     }
 4516              		.loc 1 1820 16 view .LVU1351
 4517 002e 0020     		movs	r0, #0
 4518              	.LVL510:
1849:rtos/uC-Clk/Source/clk.c **** #endif
 4519              		.loc 1 1849 1 view .LVU1352
 4520 0030 7047     		bx	lr
 4521              		.cfi_endproc
 4522              	.LFE20:
 4524              		.section	.text.Clk_TS_ToTS_Unix,"ax",%progbits
ARM GAS  /tmp/cct1pkgW.s 			page 161


 4525              		.align	1
 4526              		.global	Clk_TS_ToTS_Unix
 4527              		.syntax unified
 4528              		.thumb
 4529              		.thumb_func
 4530              		.fpu fpv4-sp-d16
 4532              	Clk_TS_ToTS_Unix:
 4533              	.LVL511:
 4534              	.LFB25:
2114:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC  ts_unix_sec;
 4535              		.loc 1 2114 1 is_stmt 1 view -0
 4536              		.cfi_startproc
 4537              		@ args = 0, pretend = 0, frame = 0
 4538              		@ frame_needed = 0, uses_anonymous_args = 0
 4539              		@ link register save eliminated.
2115:rtos/uC-Clk/Source/clk.c **** 
 4540              		.loc 1 2115 5 view .LVU1354
2119:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4541              		.loc 1 2119 5 view .LVU1355
2119:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4542              		.loc 1 2119 8 is_stmt 0 view .LVU1356
 4543 0000 0A46     		mov	r2, r1
 4544 0002 49B1     		cbz	r1, .L323
2124:rtos/uC-Clk/Source/clk.c **** 
 4545              		.loc 1 2124 4 is_stmt 1 view .LVU1357
2124:rtos/uC-Clk/Source/clk.c **** 
 4546              		.loc 1 2124 19 is_stmt 0 view .LVU1358
 4547 0004 0023     		movs	r3, #0
 4548 0006 0B60     		str	r3, [r1]
2127:rtos/uC-Clk/Source/clk.c **** 
 4549              		.loc 1 2127 61 is_stmt 1 view .LVU1359
2130:rtos/uC-Clk/Source/clk.c ****     if (ts_unix_sec < CLK_UNIX_EPOCH_OFFSET_SEC) {              /* Chk for ovf.                    
 4550              		.loc 1 2130 5 view .LVU1360
2130:rtos/uC-Clk/Source/clk.c ****     if (ts_unix_sec < CLK_UNIX_EPOCH_OFFSET_SEC) {              /* Chk for ovf.                    
 4551              		.loc 1 2130 17 is_stmt 0 view .LVU1361
 4552 0008 054B     		ldr	r3, .L325
 4553 000a 0344     		add	r3, r3, r0
 4554              	.LVL512:
2131:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Unix TS conversion has failed\n\r"));
 4555              		.loc 1 2131 5 is_stmt 1 view .LVU1362
2131:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Unix TS conversion has failed\n\r"));
 4556              		.loc 1 2131 8 is_stmt 0 view .LVU1363
 4557 000c 0549     		ldr	r1, .L325+4
 4558              	.LVL513:
2131:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Unix TS conversion has failed\n\r"));
 4559              		.loc 1 2131 8 view .LVU1364
 4560 000e 8B42     		cmp	r3, r1
 4561 0010 04D9     		bls	.L324
2136:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    Unix TS converted = %u\n\r", (unsigned int)*p_ts_unix_sec));
 4562              		.loc 1 2136 4 is_stmt 1 view .LVU1365
2136:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    Unix TS converted = %u\n\r", (unsigned int)*p_ts_unix_sec));
 4563              		.loc 1 2136 19 is_stmt 0 view .LVU1366
 4564 0012 1360     		str	r3, [r2]
2137:rtos/uC-Clk/Source/clk.c **** 
 4565              		.loc 1 2137 84 is_stmt 1 view .LVU1367
2139:rtos/uC-Clk/Source/clk.c **** }
 4566              		.loc 1 2139 5 view .LVU1368
ARM GAS  /tmp/cct1pkgW.s 			page 162


2139:rtos/uC-Clk/Source/clk.c **** }
 4567              		.loc 1 2139 12 is_stmt 0 view .LVU1369
 4568 0014 0120     		movs	r0, #1
 4569              	.LVL514:
2139:rtos/uC-Clk/Source/clk.c **** }
 4570              		.loc 1 2139 12 view .LVU1370
 4571 0016 7047     		bx	lr
 4572              	.LVL515:
 4573              	.L323:
2120:rtos/uC-Clk/Source/clk.c ****     }
 4574              		.loc 1 2120 16 view .LVU1371
 4575 0018 0020     		movs	r0, #0
 4576              	.LVL516:
2120:rtos/uC-Clk/Source/clk.c ****     }
 4577              		.loc 1 2120 16 view .LVU1372
 4578 001a 7047     		bx	lr
 4579              	.LVL517:
 4580              	.L324:
2133:rtos/uC-Clk/Source/clk.c ****     }
 4581              		.loc 1 2133 16 view .LVU1373
 4582 001c 0020     		movs	r0, #0
 4583              	.LVL518:
2140:rtos/uC-Clk/Source/clk.c **** #endif
 4584              		.loc 1 2140 1 view .LVU1374
 4585 001e 7047     		bx	lr
 4586              	.L326:
 4587              		.align	2
 4588              	.L325:
 4589 0020 80436D38 		.word	946684800
 4590 0024 7F436D38 		.word	946684799
 4591              		.cfi_endproc
 4592              	.LFE25:
 4594              		.section	.text.Clk_GetTS_Unix,"ax",%progbits
 4595              		.align	1
 4596              		.global	Clk_GetTS_Unix
 4597              		.syntax unified
 4598              		.thumb
 4599              		.thumb_func
 4600              		.fpu fpv4-sp-d16
 4602              	Clk_GetTS_Unix:
 4603              	.LVL519:
 4604              	.LFB23:
2011:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 4605              		.loc 1 2011 1 is_stmt 1 view -0
 4606              		.cfi_startproc
 4607              		@ args = 0, pretend = 0, frame = 0
 4608              		@ frame_needed = 0, uses_anonymous_args = 0
2011:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 4609              		.loc 1 2011 1 is_stmt 0 view .LVU1376
 4610 0000 10B5     		push	{r4, lr}
 4611              	.LCFI69:
 4612              		.cfi_def_cfa_offset 8
 4613              		.cfi_offset 4, -8
 4614              		.cfi_offset 14, -4
 4615 0002 0446     		mov	r4, r0
2012:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4616              		.loc 1 2012 5 is_stmt 1 view .LVU1377
ARM GAS  /tmp/cct1pkgW.s 			page 163


2013:rtos/uC-Clk/Source/clk.c **** 
 4617              		.loc 1 2013 5 view .LVU1378
2025:rtos/uC-Clk/Source/clk.c **** 
 4618              		.loc 1 2025 5 view .LVU1379
2025:rtos/uC-Clk/Source/clk.c **** 
 4619              		.loc 1 2025 14 is_stmt 0 view .LVU1380
 4620 0004 FFF7FEFF 		bl	Clk_GetTS
 4621              	.LVL520:
2028:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4622              		.loc 1 2028 5 is_stmt 1 view .LVU1381
2028:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4623              		.loc 1 2028 14 is_stmt 0 view .LVU1382
 4624 0008 2146     		mov	r1, r4
 4625 000a FFF7FEFF 		bl	Clk_TS_ToTS_Unix
 4626              	.LVL521:
2029:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4627              		.loc 1 2029 5 is_stmt 1 view .LVU1383
2029:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4628              		.loc 1 2029 8 is_stmt 0 view .LVU1384
 4629 000e 0128     		cmp	r0, #1
 4630 0010 00D0     		beq	.L328
2030:rtos/uC-Clk/Source/clk.c ****     }
 4631              		.loc 1 2030 17 view .LVU1385
 4632 0012 0020     		movs	r0, #0
 4633              	.LVL522:
 4634              	.L328:
2034:rtos/uC-Clk/Source/clk.c **** #endif
 4635              		.loc 1 2034 1 view .LVU1386
 4636 0014 10BD     		pop	{r4, pc}
2034:rtos/uC-Clk/Source/clk.c **** #endif
 4637              		.loc 1 2034 1 view .LVU1387
 4638              		.cfi_endproc
 4639              	.LFE23:
 4641              		.section	.text.Clk_TS_UnixToTS,"ax",%progbits
 4642              		.align	1
 4643              		.global	Clk_TS_UnixToTS
 4644              		.syntax unified
 4645              		.thumb
 4646              		.thumb_func
 4647              		.fpu fpv4-sp-d16
 4649              	Clk_TS_UnixToTS:
 4650              	.LVL523:
 4651              	.LFB26:
2178:rtos/uC-Clk/Source/clk.c **** #if (CLK_CFG_ARG_CHK_EN == DEF_ENABLED)                         /* ----------------- VALIDATE TS PT
 4652              		.loc 1 2178 1 is_stmt 1 view -0
 4653              		.cfi_startproc
 4654              		@ args = 0, pretend = 0, frame = 0
 4655              		@ frame_needed = 0, uses_anonymous_args = 0
 4656              		@ link register save eliminated.
2180:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4657              		.loc 1 2180 5 view .LVU1389
2180:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4658              		.loc 1 2180 8 is_stmt 0 view .LVU1390
 4659 0000 48B1     		cbz	r0, .L333
2185:rtos/uC-Clk/Source/clk.c **** 
 4660              		.loc 1 2185 4 is_stmt 1 view .LVU1391
2185:rtos/uC-Clk/Source/clk.c **** 
ARM GAS  /tmp/cct1pkgW.s 			page 164


 4661              		.loc 1 2185 14 is_stmt 0 view .LVU1392
 4662 0002 0022     		movs	r2, #0
 4663 0004 0260     		str	r2, [r0]
2188:rtos/uC-Clk/Source/clk.c **** 
 4664              		.loc 1 2188 71 is_stmt 1 view .LVU1393
2190:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("TS overflow\n\r"));
 4665              		.loc 1 2190 5 view .LVU1394
2190:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("TS overflow\n\r"));
 4666              		.loc 1 2190 8 is_stmt 0 view .LVU1395
 4667 0006 064A     		ldr	r2, .L335
 4668 0008 9142     		cmp	r1, r2
 4669 000a 06D9     		bls	.L334
2196:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    TS converted = %u\n\r", (unsigned int)*p_ts_sec));
 4670              		.loc 1 2196 4 is_stmt 1 view .LVU1396
2196:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    TS converted = %u\n\r", (unsigned int)*p_ts_sec));
 4671              		.loc 1 2196 28 is_stmt 0 view .LVU1397
 4672 000c 054A     		ldr	r2, .L335+4
 4673 000e 0A44     		add	r2, r2, r1
2196:rtos/uC-Clk/Source/clk.c ****     CLK_TRACE_DBG(("    TS converted = %u\n\r", (unsigned int)*p_ts_sec));
 4674              		.loc 1 2196 14 view .LVU1398
 4675 0010 0260     		str	r2, [r0]
2197:rtos/uC-Clk/Source/clk.c **** 
 4676              		.loc 1 2197 74 is_stmt 1 view .LVU1399
2199:rtos/uC-Clk/Source/clk.c **** }
 4677              		.loc 1 2199 5 view .LVU1400
2199:rtos/uC-Clk/Source/clk.c **** }
 4678              		.loc 1 2199 12 is_stmt 0 view .LVU1401
 4679 0012 0120     		movs	r0, #1
 4680              	.LVL524:
2199:rtos/uC-Clk/Source/clk.c **** }
 4681              		.loc 1 2199 12 view .LVU1402
 4682 0014 7047     		bx	lr
 4683              	.LVL525:
 4684              	.L333:
2181:rtos/uC-Clk/Source/clk.c ****     }
 4685              		.loc 1 2181 16 view .LVU1403
 4686 0016 0020     		movs	r0, #0
 4687              	.LVL526:
2181:rtos/uC-Clk/Source/clk.c ****     }
 4688              		.loc 1 2181 16 view .LVU1404
 4689 0018 7047     		bx	lr
 4690              	.LVL527:
 4691              	.L334:
2192:rtos/uC-Clk/Source/clk.c ****     }
 4692              		.loc 1 2192 16 view .LVU1405
 4693 001a 0020     		movs	r0, #0
 4694              	.LVL528:
2200:rtos/uC-Clk/Source/clk.c **** #endif
 4695              		.loc 1 2200 1 view .LVU1406
 4696 001c 7047     		bx	lr
 4697              	.L336:
 4698 001e 00BF     		.align	2
 4699              	.L335:
 4700 0020 7F436D38 		.word	946684799
 4701 0024 80BC92C7 		.word	-946684800
 4702              		.cfi_endproc
 4703              	.LFE26:
ARM GAS  /tmp/cct1pkgW.s 			page 165


 4705              		.section	.text.Clk_SetTS_Unix,"ax",%progbits
 4706              		.align	1
 4707              		.global	Clk_SetTS_Unix
 4708              		.syntax unified
 4709              		.thumb
 4710              		.thumb_func
 4711              		.fpu fpv4-sp-d16
 4713              	Clk_SetTS_Unix:
 4714              	.LVL529:
 4715              	.LFB24:
2062:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 4716              		.loc 1 2062 1 is_stmt 1 view -0
 4717              		.cfi_startproc
 4718              		@ args = 0, pretend = 0, frame = 8
 4719              		@ frame_needed = 0, uses_anonymous_args = 0
2062:rtos/uC-Clk/Source/clk.c ****     CLK_TS_SEC   ts_sec;
 4720              		.loc 1 2062 1 is_stmt 0 view .LVU1408
 4721 0000 10B5     		push	{r4, lr}
 4722              	.LCFI70:
 4723              		.cfi_def_cfa_offset 8
 4724              		.cfi_offset 4, -8
 4725              		.cfi_offset 14, -4
 4726 0002 82B0     		sub	sp, sp, #8
 4727              	.LCFI71:
 4728              		.cfi_def_cfa_offset 16
 4729 0004 0146     		mov	r1, r0
2063:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4730              		.loc 1 2063 5 is_stmt 1 view .LVU1409
2064:rtos/uC-Clk/Source/clk.c **** 
 4731              		.loc 1 2064 5 view .LVU1410
2067:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4732              		.loc 1 2067 5 view .LVU1411
2067:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4733              		.loc 1 2067 13 is_stmt 0 view .LVU1412
 4734 0006 01A8     		add	r0, sp, #4
 4735              	.LVL530:
2067:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4736              		.loc 1 2067 13 view .LVU1413
 4737 0008 FFF7FEFF 		bl	Clk_TS_UnixToTS
 4738              	.LVL531:
2068:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4739              		.loc 1 2068 5 is_stmt 1 view .LVU1414
2068:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4740              		.loc 1 2068 8 is_stmt 0 view .LVU1415
 4741 000c 0128     		cmp	r0, #1
 4742 000e 03D0     		beq	.L341
2069:rtos/uC-Clk/Source/clk.c ****     }
 4743              		.loc 1 2069 17 view .LVU1416
 4744 0010 0024     		movs	r4, #0
 4745              	.LVL532:
 4746              	.L338:
2076:rtos/uC-Clk/Source/clk.c **** #endif
 4747              		.loc 1 2076 1 view .LVU1417
 4748 0012 2046     		mov	r0, r4
 4749 0014 02B0     		add	sp, sp, #8
 4750              	.LCFI72:
 4751              		.cfi_remember_state
ARM GAS  /tmp/cct1pkgW.s 			page 166


 4752              		.cfi_def_cfa_offset 8
 4753              		@ sp needed
 4754 0016 10BD     		pop	{r4, pc}
 4755              	.LVL533:
 4756              	.L341:
 4757              	.LCFI73:
 4758              		.cfi_restore_state
2076:rtos/uC-Clk/Source/clk.c **** #endif
 4759              		.loc 1 2076 1 view .LVU1418
 4760 0018 0446     		mov	r4, r0
2073:rtos/uC-Clk/Source/clk.c **** 
 4761              		.loc 1 2073 5 is_stmt 1 view .LVU1419
 4762 001a 0198     		ldr	r0, [sp, #4]
 4763              	.LVL534:
2073:rtos/uC-Clk/Source/clk.c **** 
 4764              		.loc 1 2073 5 is_stmt 0 view .LVU1420
 4765 001c FFF7FEFF 		bl	Clk_SetTS
 4766              	.LVL535:
2075:rtos/uC-Clk/Source/clk.c **** }
 4767              		.loc 1 2075 5 is_stmt 1 view .LVU1421
2075:rtos/uC-Clk/Source/clk.c **** }
 4768              		.loc 1 2075 12 is_stmt 0 view .LVU1422
 4769 0020 F7E7     		b	.L338
 4770              		.cfi_endproc
 4771              	.LFE24:
 4773              		.section	.text.Clk_TS_UnixToDateTime,"ax",%progbits
 4774              		.align	1
 4775              		.global	Clk_TS_UnixToDateTime
 4776              		.syntax unified
 4777              		.thumb
 4778              		.thumb_func
 4779              		.fpu fpv4-sp-d16
 4781              	Clk_TS_UnixToDateTime:
 4782              	.LVL536:
 4783              	.LFB27:
2239:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4784              		.loc 1 2239 1 is_stmt 1 view -0
 4785              		.cfi_startproc
 4786              		@ args = 0, pretend = 0, frame = 0
 4787              		@ frame_needed = 0, uses_anonymous_args = 0
2239:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4788              		.loc 1 2239 1 is_stmt 0 view .LVU1424
 4789 0000 00B5     		push	{lr}
 4790              	.LCFI74:
 4791              		.cfi_def_cfa_offset 4
 4792              		.cfi_offset 14, -4
 4793 0002 83B0     		sub	sp, sp, #12
 4794              	.LCFI75:
 4795              		.cfi_def_cfa_offset 16
2240:rtos/uC-Clk/Source/clk.c **** 
 4796              		.loc 1 2240 5 is_stmt 1 view .LVU1425
2245:rtos/uC-Clk/Source/clk.c **** 
 4797              		.loc 1 2245 47 view .LVU1426
2247:rtos/uC-Clk/Source/clk.c ****                                      tz_sec,
 4798              		.loc 1 2247 5 view .LVU1427
2247:rtos/uC-Clk/Source/clk.c ****                                      tz_sec,
 4799              		.loc 1 2247 13 is_stmt 0 view .LVU1428
ARM GAS  /tmp/cct1pkgW.s 			page 167


 4800 0004 40F63A03 		movw	r3, #2106
 4801 0008 0093     		str	r3, [sp]
 4802 000a 40F2B273 		movw	r3, #1970
 4803 000e FFF7FEFF 		bl	Clk_TS_ToDateTimeHandler
 4804              	.LVL537:
2252:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Date/time conversion has failed\n\r"));
 4805              		.loc 1 2252 5 is_stmt 1 view .LVU1429
2252:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("    Date/time conversion has failed\n\r"));
 4806              		.loc 1 2252 8 is_stmt 0 view .LVU1430
 4807 0012 0128     		cmp	r0, #1
 4808 0014 00D0     		beq	.L343
2254:rtos/uC-Clk/Source/clk.c ****     }
 4809              		.loc 1 2254 17 view .LVU1431
 4810 0016 0020     		movs	r0, #0
 4811              	.LVL538:
 4812              	.L343:
2258:rtos/uC-Clk/Source/clk.c **** #endif
 4813              		.loc 1 2258 1 view .LVU1432
 4814 0018 03B0     		add	sp, sp, #12
 4815              	.LCFI76:
 4816              		.cfi_def_cfa_offset 4
 4817              		@ sp needed
 4818 001a 5DF804FB 		ldr	pc, [sp], #4
 4819              		.cfi_endproc
 4820              	.LFE27:
 4822              		.section	.text.Clk_UnixDateTimeMake,"ax",%progbits
 4823              		.align	1
 4824              		.global	Clk_UnixDateTimeMake
 4825              		.syntax unified
 4826              		.thumb
 4827              		.thumb_func
 4828              		.fpu fpv4-sp-d16
 4830              	Clk_UnixDateTimeMake:
 4831              	.LVL539:
 4832              	.LFB29:
2396:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4833              		.loc 1 2396 1 is_stmt 1 view -0
 4834              		.cfi_startproc
 4835              		@ args = 16, pretend = 0, frame = 0
 4836              		@ frame_needed = 0, uses_anonymous_args = 0
2396:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4837              		.loc 1 2396 1 is_stmt 0 view .LVU1434
 4838 0000 10B5     		push	{r4, lr}
 4839              	.LCFI77:
 4840              		.cfi_def_cfa_offset 8
 4841              		.cfi_offset 4, -8
 4842              		.cfi_offset 14, -4
 4843 0002 86B0     		sub	sp, sp, #24
 4844              	.LCFI78:
 4845              		.cfi_def_cfa_offset 32
2397:rtos/uC-Clk/Source/clk.c **** 
 4846              		.loc 1 2397 5 is_stmt 1 view .LVU1435
2400:rtos/uC-Clk/Source/clk.c ****                                     yr,
 4847              		.loc 1 2400 5 view .LVU1436
2400:rtos/uC-Clk/Source/clk.c ****                                     yr,
 4848              		.loc 1 2400 13 is_stmt 0 view .LVU1437
 4849 0004 40F63A04 		movw	r4, #2106
ARM GAS  /tmp/cct1pkgW.s 			page 168


 4850 0008 0594     		str	r4, [sp, #20]
 4851 000a 40F2B274 		movw	r4, #1970
 4852 000e 0494     		str	r4, [sp, #16]
 4853 0010 0B9C     		ldr	r4, [sp, #44]
 4854 0012 0394     		str	r4, [sp, #12]
 4855 0014 9DF82840 		ldrb	r4, [sp, #40]	@ zero_extendqisi2
 4856 0018 0294     		str	r4, [sp, #8]
 4857 001a 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 4858 001e 0194     		str	r4, [sp, #4]
 4859 0020 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
 4860 0024 0094     		str	r4, [sp]
 4861 0026 FFF7FEFF 		bl	Clk_DateTimeMakeHandler
 4862              	.LVL540:
2410:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4863              		.loc 1 2410 5 is_stmt 1 view .LVU1438
2410:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4864              		.loc 1 2410 8 is_stmt 0 view .LVU1439
 4865 002a 0128     		cmp	r0, #1
 4866 002c 00D0     		beq	.L347
2411:rtos/uC-Clk/Source/clk.c ****     }
 4867              		.loc 1 2411 17 view .LVU1440
 4868 002e 0020     		movs	r0, #0
 4869              	.LVL541:
 4870              	.L347:
2415:rtos/uC-Clk/Source/clk.c **** #endif
 4871              		.loc 1 2415 1 view .LVU1441
 4872 0030 06B0     		add	sp, sp, #24
 4873              	.LCFI79:
 4874              		.cfi_def_cfa_offset 8
 4875              		@ sp needed
 4876 0032 10BD     		pop	{r4, pc}
2415:rtos/uC-Clk/Source/clk.c **** #endif
 4877              		.loc 1 2415 1 view .LVU1442
 4878              		.cfi_endproc
 4879              	.LFE29:
 4881              		.section	.text.Clk_IsUnixDateTimeValid,"ax",%progbits
 4882              		.align	1
 4883              		.global	Clk_IsUnixDateTimeValid
 4884              		.syntax unified
 4885              		.thumb
 4886              		.thumb_func
 4887              		.fpu fpv4-sp-d16
 4889              	Clk_IsUnixDateTimeValid:
 4890              	.LVL542:
 4891              	.LFB30:
2447:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4892              		.loc 1 2447 1 is_stmt 1 view -0
 4893              		.cfi_startproc
 4894              		@ args = 0, pretend = 0, frame = 0
 4895              		@ frame_needed = 0, uses_anonymous_args = 0
2447:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4896              		.loc 1 2447 1 is_stmt 0 view .LVU1444
 4897 0000 08B5     		push	{r3, lr}
 4898              	.LCFI80:
 4899              		.cfi_def_cfa_offset 8
 4900              		.cfi_offset 3, -8
 4901              		.cfi_offset 14, -4
ARM GAS  /tmp/cct1pkgW.s 			page 169


2448:rtos/uC-Clk/Source/clk.c **** 
 4902              		.loc 1 2448 5 is_stmt 1 view .LVU1445
2451:rtos/uC-Clk/Source/clk.c **** 
 4903              		.loc 1 2451 49 view .LVU1446
2453:rtos/uC-Clk/Source/clk.c ****                                        CLK_UNIX_EPOCH_YR_START,
 4904              		.loc 1 2453 5 view .LVU1447
2453:rtos/uC-Clk/Source/clk.c ****                                        CLK_UNIX_EPOCH_YR_START,
 4905              		.loc 1 2453 13 is_stmt 0 view .LVU1448
 4906 0002 40F63A02 		movw	r2, #2106
 4907 0006 40F2B271 		movw	r1, #1970
 4908 000a FFF7FEFF 		bl	Clk_IsDateTimeValidHandler
 4909              	.LVL543:
2456:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Fail\n\r"));
 4910              		.loc 1 2456 5 is_stmt 1 view .LVU1449
2456:rtos/uC-Clk/Source/clk.c ****         CLK_TRACE_DBG(("Fail\n\r"));
 4911              		.loc 1 2456 8 is_stmt 0 view .LVU1450
 4912 000e 0128     		cmp	r0, #1
 4913 0010 00D0     		beq	.L351
2458:rtos/uC-Clk/Source/clk.c ****     }
 4914              		.loc 1 2458 17 view .LVU1451
 4915 0012 0020     		movs	r0, #0
 4916              	.LVL544:
 4917              	.L351:
2464:rtos/uC-Clk/Source/clk.c **** #endif
 4918              		.loc 1 2464 1 view .LVU1452
 4919 0014 08BD     		pop	{r3, pc}
 4920              		.cfi_endproc
 4921              	.LFE30:
 4923              		.section	.text.Clk_DateTimeToTS_Unix,"ax",%progbits
 4924              		.align	1
 4925              		.global	Clk_DateTimeToTS_Unix
 4926              		.syntax unified
 4927              		.thumb
 4928              		.thumb_func
 4929              		.fpu fpv4-sp-d16
 4931              	Clk_DateTimeToTS_Unix:
 4932              	.LVL545:
 4933              	.LFB28:
2302:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4934              		.loc 1 2302 1 is_stmt 1 view -0
 4935              		.cfi_startproc
 4936              		@ args = 0, pretend = 0, frame = 0
 4937              		@ frame_needed = 0, uses_anonymous_args = 0
2303:rtos/uC-Clk/Source/clk.c **** 
 4938              		.loc 1 2303 5 view .LVU1454
2307:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4939              		.loc 1 2307 5 view .LVU1455
2307:rtos/uC-Clk/Source/clk.c ****         return (DEF_FAIL);
 4940              		.loc 1 2307 8 is_stmt 0 view .LVU1456
 4941 0000 A8B1     		cbz	r0, .L356
2302:rtos/uC-Clk/Source/clk.c ****     CPU_BOOLEAN  valid;
 4942              		.loc 1 2302 1 view .LVU1457
 4943 0002 38B5     		push	{r3, r4, r5, lr}
 4944              	.LCFI81:
 4945              		.cfi_def_cfa_offset 16
 4946              		.cfi_offset 3, -16
 4947              		.cfi_offset 4, -12
ARM GAS  /tmp/cct1pkgW.s 			page 170


 4948              		.cfi_offset 5, -8
 4949              		.cfi_offset 14, -4
 4950 0004 0C46     		mov	r4, r1
 4951 0006 0546     		mov	r5, r0
2312:rtos/uC-Clk/Source/clk.c **** 
 4952              		.loc 1 2312 4 is_stmt 1 view .LVU1458
2312:rtos/uC-Clk/Source/clk.c **** 
 4953              		.loc 1 2312 19 is_stmt 0 view .LVU1459
 4954 0008 0023     		movs	r3, #0
 4955 000a 0360     		str	r3, [r0]
2322:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4956              		.loc 1 2322 5 is_stmt 1 view .LVU1460
2322:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4957              		.loc 1 2322 13 is_stmt 0 view .LVU1461
 4958 000c 0846     		mov	r0, r1
 4959              	.LVL546:
2322:rtos/uC-Clk/Source/clk.c ****     if (valid != DEF_OK) {
 4960              		.loc 1 2322 13 view .LVU1462
 4961 000e FFF7FEFF 		bl	Clk_IsUnixDateTimeValid
 4962              	.LVL547:
2323:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4963              		.loc 1 2323 5 is_stmt 1 view .LVU1463
2323:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4964              		.loc 1 2323 8 is_stmt 0 view .LVU1464
 4965 0012 0128     		cmp	r0, #1
 4966 0014 01D0     		beq	.L363
2324:rtos/uC-Clk/Source/clk.c ****     }
 4967              		.loc 1 2324 17 view .LVU1465
 4968 0016 0020     		movs	r0, #0
 4969              	.LVL548:
 4970              	.L355:
2337:rtos/uC-Clk/Source/clk.c **** #endif
 4971              		.loc 1 2337 1 view .LVU1466
 4972 0018 38BD     		pop	{r3, r4, r5, pc}
 4973              	.LVL549:
 4974              	.L363:
2328:rtos/uC-Clk/Source/clk.c ****     valid = Clk_DateTimeToTS_Handler(p_ts_unix_sec,
 4975              		.loc 1 2328 52 is_stmt 1 view .LVU1467
2329:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 4976              		.loc 1 2329 5 view .LVU1468
2329:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 4977              		.loc 1 2329 13 is_stmt 0 view .LVU1469
 4978 001a 40F2B272 		movw	r2, #1970
 4979 001e 2146     		mov	r1, r4
 4980 0020 2846     		mov	r0, r5
 4981              	.LVL550:
2329:rtos/uC-Clk/Source/clk.c ****                                      p_date_time,
 4982              		.loc 1 2329 13 view .LVU1470
 4983 0022 FFF7FEFF 		bl	Clk_DateTimeToTS_Handler
 4984              	.LVL551:
2332:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4985              		.loc 1 2332 5 is_stmt 1 view .LVU1471
2332:rtos/uC-Clk/Source/clk.c ****         return  (DEF_FAIL);
 4986              		.loc 1 2332 8 is_stmt 0 view .LVU1472
 4987 0026 0128     		cmp	r0, #1
 4988 0028 F6D0     		beq	.L355
2333:rtos/uC-Clk/Source/clk.c ****     }
ARM GAS  /tmp/cct1pkgW.s 			page 171


 4989              		.loc 1 2333 17 view .LVU1473
 4990 002a 0020     		movs	r0, #0
 4991              	.LVL552:
2333:rtos/uC-Clk/Source/clk.c ****     }
 4992              		.loc 1 2333 17 view .LVU1474
 4993 002c F4E7     		b	.L355
 4994              	.LVL553:
 4995              	.L356:
 4996              	.LCFI82:
 4997              		.cfi_def_cfa_offset 0
 4998              		.cfi_restore 3
 4999              		.cfi_restore 4
 5000              		.cfi_restore 5
 5001              		.cfi_restore 14
2308:rtos/uC-Clk/Source/clk.c ****     }
 5002              		.loc 1 2308 16 view .LVU1475
 5003 002e 0020     		movs	r0, #0
 5004              	.LVL554:
2337:rtos/uC-Clk/Source/clk.c **** #endif
 5005              		.loc 1 2337 1 view .LVU1476
 5006 0030 7047     		bx	lr
 5007              		.cfi_endproc
 5008              	.LFE28:
 5010              		.section	.rodata.str1.4,"aMS",%progbits,1
 5011              		.align	2
 5012              	.LC8:
 5013 0000 53756E64 		.ascii	"Sunday\000"
 5013      617900
 5014 0007 00       		.align	2
 5015              	.LC9:
 5016 0008 4D6F6E64 		.ascii	"Monday\000"
 5016      617900
 5017 000f 00       		.align	2
 5018              	.LC10:
 5019 0010 54756573 		.ascii	"Tuesday\000"
 5019      64617900 
 5020              		.align	2
 5021              	.LC11:
 5022 0018 5765646E 		.ascii	"Wednesday\000"
 5022      65736461 
 5022      7900
 5023 0022 0000     		.align	2
 5024              	.LC12:
 5025 0024 54687572 		.ascii	"Thursday\000"
 5025      73646179 
 5025      00
 5026 002d 000000   		.align	2
 5027              	.LC13:
 5028 0030 46726964 		.ascii	"Friday\000"
 5028      617900
 5029 0037 00       		.align	2
 5030              	.LC14:
 5031 0038 53617475 		.ascii	"Saturday\000"
 5031      72646179 
 5031      00
 5032 0041 000000   		.align	2
 5033              	.LC15:
ARM GAS  /tmp/cct1pkgW.s 			page 172


 5034 0044 4A616E75 		.ascii	"January\000"
 5034      61727900 
 5035              		.align	2
 5036              	.LC16:
 5037 004c 46656272 		.ascii	"February\000"
 5037      75617279 
 5037      00
 5038 0055 000000   		.align	2
 5039              	.LC17:
 5040 0058 4D617263 		.ascii	"March\000"
 5040      6800
 5041 005e 0000     		.align	2
 5042              	.LC18:
 5043 0060 41707269 		.ascii	"April\000"
 5043      6C00
 5044 0066 0000     		.align	2
 5045              	.LC19:
 5046 0068 4D617900 		.ascii	"May\000"
 5047              		.align	2
 5048              	.LC20:
 5049 006c 4A756E65 		.ascii	"June\000"
 5049      00
 5050 0071 000000   		.align	2
 5051              	.LC21:
 5052 0074 4A756C79 		.ascii	"July\000"
 5052      00
 5053 0079 000000   		.align	2
 5054              	.LC22:
 5055 007c 41756775 		.ascii	"August\000"
 5055      737400
 5056 0083 00       		.align	2
 5057              	.LC23:
 5058 0084 53657074 		.ascii	"September\000"
 5058      656D6265 
 5058      7200
 5059 008e 0000     		.align	2
 5060              	.LC24:
 5061 0090 4F63746F 		.ascii	"October\000"
 5061      62657200 
 5062              		.align	2
 5063              	.LC25:
 5064 0098 4E6F7665 		.ascii	"November\000"
 5064      6D626572 
 5064      00
 5065 00a1 000000   		.align	2
 5066              	.LC26:
 5067 00a4 44656365 		.ascii	"December\000"
 5067      6D626572 
 5067      00
 5068              		.section	.bss.Clk_CacheLeapYr,"aw",%nobits
 5069              		.set	.LANCHOR7,. + 0
 5072              	Clk_CacheLeapYr:
 5073 0000 00       		.space	1
 5074              		.section	.bss.Clk_CacheMonth,"aw",%nobits
 5075              		.set	.LANCHOR5,. + 0
 5078              	Clk_CacheMonth:
 5079 0000 00       		.space	1
ARM GAS  /tmp/cct1pkgW.s 			page 173


 5080              		.section	.bss.Clk_CacheMonthDays,"aw",%nobits
 5081              		.align	1
 5082              		.set	.LANCHOR6,. + 0
 5085              	Clk_CacheMonthDays:
 5086 0000 0000     		.space	2
 5087              		.section	.bss.Clk_CacheYr,"aw",%nobits
 5088              		.align	1
 5089              		.set	.LANCHOR3,. + 0
 5092              	Clk_CacheYr:
 5093 0000 0000     		.space	2
 5094              		.section	.bss.Clk_CacheYrDays,"aw",%nobits
 5095              		.align	2
 5096              		.set	.LANCHOR4,. + 0
 5099              	Clk_CacheYrDays:
 5100 0000 00000000 		.space	4
 5101              		.section	.bss.Clk_TS_UTC_sec,"aw",%nobits
 5102              		.align	2
 5103              		.set	.LANCHOR8,. + 0
 5106              	Clk_TS_UTC_sec:
 5107 0000 00000000 		.space	4
 5108              		.section	.bss.Clk_TZ_sec,"aw",%nobits
 5109              		.align	2
 5110              		.set	.LANCHOR2,. + 0
 5113              	Clk_TZ_sec:
 5114 0000 00000000 		.space	4
 5115              		.section	.rodata.Clk_DaysInMonth,"a"
 5116              		.align	2
 5117              		.set	.LANCHOR0,. + 0
 5120              	Clk_DaysInMonth:
 5121 0000 1F00     		.short	31
 5122 0002 1C00     		.short	28
 5123 0004 1F00     		.short	31
 5124 0006 1E00     		.short	30
 5125 0008 1F00     		.short	31
 5126 000a 1E00     		.short	30
 5127 000c 1F00     		.short	31
 5128 000e 1F00     		.short	31
 5129 0010 1E00     		.short	30
 5130 0012 1F00     		.short	31
 5131 0014 1E00     		.short	30
 5132 0016 1F00     		.short	31
 5133 0018 1F00     		.short	31
 5134 001a 1D00     		.short	29
 5135 001c 1F00     		.short	31
 5136 001e 1E00     		.short	30
 5137 0020 1F00     		.short	31
 5138 0022 1E00     		.short	30
 5139 0024 1F00     		.short	31
 5140 0026 1F00     		.short	31
 5141 0028 1E00     		.short	30
 5142 002a 1F00     		.short	31
 5143 002c 1E00     		.short	30
 5144 002e 1F00     		.short	31
 5145              		.section	.rodata.Clk_DaysInYr,"a"
 5146              		.align	2
 5147              		.set	.LANCHOR1,. + 0
 5150              	Clk_DaysInYr:
ARM GAS  /tmp/cct1pkgW.s 			page 174


 5151 0000 6D01     		.short	365
 5152 0002 6E01     		.short	366
 5153              		.section	.rodata.Clk_StrDayOfWk,"a"
 5154              		.align	2
 5155              		.set	.LANCHOR9,. + 0
 5158              	Clk_StrDayOfWk:
 5159 0000 00000000 		.word	.LC8
 5160 0004 08000000 		.word	.LC9
 5161 0008 10000000 		.word	.LC10
 5162 000c 18000000 		.word	.LC11
 5163 0010 24000000 		.word	.LC12
 5164 0014 30000000 		.word	.LC13
 5165 0018 38000000 		.word	.LC14
 5166              		.section	.rodata.Clk_StrMonth,"a"
 5167              		.align	2
 5168              		.set	.LANCHOR10,. + 0
 5171              	Clk_StrMonth:
 5172 0000 44000000 		.word	.LC15
 5173 0004 4C000000 		.word	.LC16
 5174 0008 58000000 		.word	.LC17
 5175 000c 60000000 		.word	.LC18
 5176 0010 68000000 		.word	.LC19
 5177 0014 6C000000 		.word	.LC20
 5178 0018 74000000 		.word	.LC21
 5179 001c 7C000000 		.word	.LC22
 5180 0020 84000000 		.word	.LC23
 5181 0024 90000000 		.word	.LC24
 5182 0028 98000000 		.word	.LC25
 5183 002c A4000000 		.word	.LC26
 5184              		.text
 5185              	.Letext0:
 5186              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 5187              		.file 3 "rtos/uC-Clk/Source/clk.h"
 5188              		.file 4 "rtos/uC-LIB/lib_str.h"
ARM GAS  /tmp/cct1pkgW.s 			page 175


DEFINED SYMBOLS
                            *ABS*:0000000000000000 clk.c
     /tmp/cct1pkgW.s:18     .text.Clk_IsLeapYr:0000000000000000 $t
     /tmp/cct1pkgW.s:25     .text.Clk_IsLeapYr:0000000000000000 Clk_IsLeapYr
     /tmp/cct1pkgW.s:85     .text.Clk_IsLeapYr:000000000000003c $d
     /tmp/cct1pkgW.s:90     .text.Clk_IsDateValid:0000000000000000 $t
     /tmp/cct1pkgW.s:96     .text.Clk_IsDateValid:0000000000000000 Clk_IsDateValid
     /tmp/cct1pkgW.s:209    .text.Clk_IsDateValid:0000000000000054 $d
     /tmp/cct1pkgW.s:214    .text.Clk_IsDayOfYrValid:0000000000000000 $t
     /tmp/cct1pkgW.s:220    .text.Clk_IsDayOfYrValid:0000000000000000 Clk_IsDayOfYrValid
     /tmp/cct1pkgW.s:282    .text.Clk_IsDayOfYrValid:0000000000000028 $d
     /tmp/cct1pkgW.s:287    .text.Clk_IsDayOfWkValid:0000000000000000 $t
     /tmp/cct1pkgW.s:293    .text.Clk_IsDayOfWkValid:0000000000000000 Clk_IsDayOfWkValid
     /tmp/cct1pkgW.s:322    .text.Clk_IsTimeValid:0000000000000000 $t
     /tmp/cct1pkgW.s:328    .text.Clk_IsTimeValid:0000000000000000 Clk_IsTimeValid
     /tmp/cct1pkgW.s:378    .text.Clk_IsTZValid:0000000000000000 $t
     /tmp/cct1pkgW.s:384    .text.Clk_IsTZValid:0000000000000000 Clk_IsTZValid
     /tmp/cct1pkgW.s:435    .text.Clk_IsTZValid:000000000000002c $d
     /tmp/cct1pkgW.s:440    .text.Clk_IsDateTimeValidHandler:0000000000000000 $t
     /tmp/cct1pkgW.s:446    .text.Clk_IsDateTimeValidHandler:0000000000000000 Clk_IsDateTimeValidHandler
     /tmp/cct1pkgW.s:597    .text.Clk_DateTimeToTS_Handler:0000000000000000 $t
     /tmp/cct1pkgW.s:603    .text.Clk_DateTimeToTS_Handler:0000000000000000 Clk_DateTimeToTS_Handler
     /tmp/cct1pkgW.s:800    .text.Clk_DateTimeToTS_Handler:00000000000000a4 $d
     /tmp/cct1pkgW.s:807    .text.Clk_SetTZ_Handler:0000000000000000 $t
     /tmp/cct1pkgW.s:813    .text.Clk_SetTZ_Handler:0000000000000000 Clk_SetTZ_Handler
     /tmp/cct1pkgW.s:857    .text.Clk_SetTZ_Handler:0000000000000014 $d
     /tmp/cct1pkgW.s:862    .text.Clk_GetDayOfWkHandler:0000000000000000 $t
     /tmp/cct1pkgW.s:868    .text.Clk_GetDayOfWkHandler:0000000000000000 Clk_GetDayOfWkHandler
     /tmp/cct1pkgW.s:1173   .text.Clk_GetDayOfWkHandler:00000000000000f4 $d
     /tmp/cct1pkgW.s:1185   .text.Clk_GetDayOfYrHandler:0000000000000000 $t
     /tmp/cct1pkgW.s:1191   .text.Clk_GetDayOfYrHandler:0000000000000000 Clk_GetDayOfYrHandler
     /tmp/cct1pkgW.s:1376   .text.Clk_GetDayOfYrHandler:0000000000000094 $d
     /tmp/cct1pkgW.s:1384   .text.Clk_TS_ToDateTimeHandler:0000000000000000 $t
     /tmp/cct1pkgW.s:1390   .text.Clk_TS_ToDateTimeHandler:0000000000000000 Clk_TS_ToDateTimeHandler
     /tmp/cct1pkgW.s:1772   .text.Clk_TS_ToDateTimeHandler:0000000000000164 $d
     /tmp/cct1pkgW.s:1782   .text.Clk_DateTimeMakeHandler:0000000000000000 $t
     /tmp/cct1pkgW.s:1788   .text.Clk_DateTimeMakeHandler:0000000000000000 Clk_DateTimeMakeHandler
     /tmp/cct1pkgW.s:1989   .text.Clk_Init:0000000000000000 $t
     /tmp/cct1pkgW.s:1996   .text.Clk_Init:0000000000000000 Clk_Init
     /tmp/cct1pkgW.s:2068   .text.Clk_Init:0000000000000034 $d
     /tmp/cct1pkgW.s:2079   .text.Clk_TaskHandler:0000000000000000 $t
     /tmp/cct1pkgW.s:2086   .text.Clk_TaskHandler:0000000000000000 Clk_TaskHandler
     /tmp/cct1pkgW.s:2147   .text.Clk_TaskHandler:0000000000000034 $d
     /tmp/cct1pkgW.s:2152   .text.Clk_GetTS:0000000000000000 $t
     /tmp/cct1pkgW.s:2159   .text.Clk_GetTS:0000000000000000 Clk_GetTS
     /tmp/cct1pkgW.s:2202   .text.Clk_GetTS:0000000000000014 $d
     /tmp/cct1pkgW.s:2207   .text.Clk_SetTS:0000000000000000 $t
     /tmp/cct1pkgW.s:2214   .text.Clk_SetTS:0000000000000000 Clk_SetTS
     /tmp/cct1pkgW.s:2262   .text.Clk_SetTS:0000000000000018 $d
     /tmp/cct1pkgW.s:2267   .text.Clk_GetTZ:0000000000000000 $t
     /tmp/cct1pkgW.s:2274   .text.Clk_GetTZ:0000000000000000 Clk_GetTZ
     /tmp/cct1pkgW.s:2317   .text.Clk_GetTZ:0000000000000014 $d
     /tmp/cct1pkgW.s:2322   .text.Clk_SetTZ:0000000000000000 $t
     /tmp/cct1pkgW.s:2329   .text.Clk_SetTZ:0000000000000000 Clk_SetTZ
     /tmp/cct1pkgW.s:2378   .text.Clk_TS_ToDateTime:0000000000000000 $t
     /tmp/cct1pkgW.s:2385   .text.Clk_TS_ToDateTime:0000000000000000 Clk_TS_ToDateTime
     /tmp/cct1pkgW.s:2427   .text.Clk_GetDateTime:0000000000000000 $t
ARM GAS  /tmp/cct1pkgW.s 			page 176


     /tmp/cct1pkgW.s:2434   .text.Clk_GetDateTime:0000000000000000 Clk_GetDateTime
     /tmp/cct1pkgW.s:2490   .text.Clk_DateTimeMake:0000000000000000 $t
     /tmp/cct1pkgW.s:2497   .text.Clk_DateTimeMake:0000000000000000 Clk_DateTimeMake
     /tmp/cct1pkgW.s:2549   .text.Clk_IsDateTimeValid:0000000000000000 $t
     /tmp/cct1pkgW.s:2556   .text.Clk_IsDateTimeValid:0000000000000000 Clk_IsDateTimeValid
     /tmp/cct1pkgW.s:2591   .text.Clk_DateTimeToTS:0000000000000000 $t
     /tmp/cct1pkgW.s:2598   .text.Clk_DateTimeToTS:0000000000000000 Clk_DateTimeToTS
     /tmp/cct1pkgW.s:2678   .text.Clk_SetDateTime:0000000000000000 $t
     /tmp/cct1pkgW.s:2685   .text.Clk_SetDateTime:0000000000000000 Clk_SetDateTime
     /tmp/cct1pkgW.s:2763   .text.Clk_GetDayOfWk:0000000000000000 $t
     /tmp/cct1pkgW.s:2770   .text.Clk_GetDayOfWk:0000000000000000 Clk_GetDayOfWk
     /tmp/cct1pkgW.s:2835   .text.Clk_GetDayOfYr:0000000000000000 $t
     /tmp/cct1pkgW.s:2842   .text.Clk_GetDayOfYr:0000000000000000 Clk_GetDayOfYr
     /tmp/cct1pkgW.s:2907   .rodata.Clk_DateTimeToStr.str1.4:0000000000000000 $d
     /tmp/cct1pkgW.s:2932   .text.Clk_DateTimeToStr:0000000000000000 $t
     /tmp/cct1pkgW.s:2939   .text.Clk_DateTimeToStr:0000000000000000 Clk_DateTimeToStr
     /tmp/cct1pkgW.s:2998   .text.Clk_DateTimeToStr:0000000000000028 $d
     /tmp/cct1pkgW.s:3182   .text.Clk_DateTimeToStr:0000000000000134 $d
     /tmp/cct1pkgW.s:3191   .text.Clk_DateTimeToStr:0000000000000146 $t
     /tmp/cct1pkgW.s:3834   .text.Clk_DateTimeToStr:00000000000004ac $d
     /tmp/cct1pkgW.s:3849   .text.Clk_DateTimeToStr:00000000000004d4 $t
     /tmp/cct1pkgW.s:4031   .text.Clk_DateTimeToStr:00000000000005ac $d
     /tmp/cct1pkgW.s:4039   .text.Clk_TS_ToTS_NTP:0000000000000000 $t
     /tmp/cct1pkgW.s:4046   .text.Clk_TS_ToTS_NTP:0000000000000000 Clk_TS_ToTS_NTP
     /tmp/cct1pkgW.s:4103   .text.Clk_TS_ToTS_NTP:0000000000000020 $d
     /tmp/cct1pkgW.s:4109   .text.Clk_GetTS_NTP:0000000000000000 $t
     /tmp/cct1pkgW.s:4116   .text.Clk_GetTS_NTP:0000000000000000 Clk_GetTS_NTP
     /tmp/cct1pkgW.s:4156   .text.Clk_TS_NTP_ToTS:0000000000000000 $t
     /tmp/cct1pkgW.s:4163   .text.Clk_TS_NTP_ToTS:0000000000000000 Clk_TS_NTP_ToTS
     /tmp/cct1pkgW.s:4214   .text.Clk_TS_NTP_ToTS:0000000000000020 $d
     /tmp/cct1pkgW.s:4220   .text.Clk_SetTS_NTP:0000000000000000 $t
     /tmp/cct1pkgW.s:4227   .text.Clk_SetTS_NTP:0000000000000000 Clk_SetTS_NTP
     /tmp/cct1pkgW.s:4288   .text.Clk_TS_NTP_ToDateTime:0000000000000000 $t
     /tmp/cct1pkgW.s:4295   .text.Clk_TS_NTP_ToDateTime:0000000000000000 Clk_TS_NTP_ToDateTime
     /tmp/cct1pkgW.s:4337   .text.Clk_NTP_DateTimeMake:0000000000000000 $t
     /tmp/cct1pkgW.s:4344   .text.Clk_NTP_DateTimeMake:0000000000000000 Clk_NTP_DateTimeMake
     /tmp/cct1pkgW.s:4396   .text.Clk_IsNTP_DateTimeValid:0000000000000000 $t
     /tmp/cct1pkgW.s:4403   .text.Clk_IsNTP_DateTimeValid:0000000000000000 Clk_IsNTP_DateTimeValid
     /tmp/cct1pkgW.s:4438   .text.Clk_DateTimeToTS_NTP:0000000000000000 $t
     /tmp/cct1pkgW.s:4445   .text.Clk_DateTimeToTS_NTP:0000000000000000 Clk_DateTimeToTS_NTP
     /tmp/cct1pkgW.s:4525   .text.Clk_TS_ToTS_Unix:0000000000000000 $t
     /tmp/cct1pkgW.s:4532   .text.Clk_TS_ToTS_Unix:0000000000000000 Clk_TS_ToTS_Unix
     /tmp/cct1pkgW.s:4589   .text.Clk_TS_ToTS_Unix:0000000000000020 $d
     /tmp/cct1pkgW.s:4595   .text.Clk_GetTS_Unix:0000000000000000 $t
     /tmp/cct1pkgW.s:4602   .text.Clk_GetTS_Unix:0000000000000000 Clk_GetTS_Unix
     /tmp/cct1pkgW.s:4642   .text.Clk_TS_UnixToTS:0000000000000000 $t
     /tmp/cct1pkgW.s:4649   .text.Clk_TS_UnixToTS:0000000000000000 Clk_TS_UnixToTS
     /tmp/cct1pkgW.s:4700   .text.Clk_TS_UnixToTS:0000000000000020 $d
     /tmp/cct1pkgW.s:4706   .text.Clk_SetTS_Unix:0000000000000000 $t
     /tmp/cct1pkgW.s:4713   .text.Clk_SetTS_Unix:0000000000000000 Clk_SetTS_Unix
     /tmp/cct1pkgW.s:4774   .text.Clk_TS_UnixToDateTime:0000000000000000 $t
     /tmp/cct1pkgW.s:4781   .text.Clk_TS_UnixToDateTime:0000000000000000 Clk_TS_UnixToDateTime
     /tmp/cct1pkgW.s:4823   .text.Clk_UnixDateTimeMake:0000000000000000 $t
     /tmp/cct1pkgW.s:4830   .text.Clk_UnixDateTimeMake:0000000000000000 Clk_UnixDateTimeMake
     /tmp/cct1pkgW.s:4882   .text.Clk_IsUnixDateTimeValid:0000000000000000 $t
     /tmp/cct1pkgW.s:4889   .text.Clk_IsUnixDateTimeValid:0000000000000000 Clk_IsUnixDateTimeValid
     /tmp/cct1pkgW.s:4924   .text.Clk_DateTimeToTS_Unix:0000000000000000 $t
ARM GAS  /tmp/cct1pkgW.s 			page 177


     /tmp/cct1pkgW.s:4931   .text.Clk_DateTimeToTS_Unix:0000000000000000 Clk_DateTimeToTS_Unix
     /tmp/cct1pkgW.s:5011   .rodata.str1.4:0000000000000000 $d
     /tmp/cct1pkgW.s:5072   .bss.Clk_CacheLeapYr:0000000000000000 Clk_CacheLeapYr
     /tmp/cct1pkgW.s:5073   .bss.Clk_CacheLeapYr:0000000000000000 $d
     /tmp/cct1pkgW.s:5078   .bss.Clk_CacheMonth:0000000000000000 Clk_CacheMonth
     /tmp/cct1pkgW.s:5079   .bss.Clk_CacheMonth:0000000000000000 $d
     /tmp/cct1pkgW.s:5081   .bss.Clk_CacheMonthDays:0000000000000000 $d
     /tmp/cct1pkgW.s:5085   .bss.Clk_CacheMonthDays:0000000000000000 Clk_CacheMonthDays
     /tmp/cct1pkgW.s:5088   .bss.Clk_CacheYr:0000000000000000 $d
     /tmp/cct1pkgW.s:5092   .bss.Clk_CacheYr:0000000000000000 Clk_CacheYr
     /tmp/cct1pkgW.s:5095   .bss.Clk_CacheYrDays:0000000000000000 $d
     /tmp/cct1pkgW.s:5099   .bss.Clk_CacheYrDays:0000000000000000 Clk_CacheYrDays
     /tmp/cct1pkgW.s:5102   .bss.Clk_TS_UTC_sec:0000000000000000 $d
     /tmp/cct1pkgW.s:5106   .bss.Clk_TS_UTC_sec:0000000000000000 Clk_TS_UTC_sec
     /tmp/cct1pkgW.s:5109   .bss.Clk_TZ_sec:0000000000000000 $d
     /tmp/cct1pkgW.s:5113   .bss.Clk_TZ_sec:0000000000000000 Clk_TZ_sec
     /tmp/cct1pkgW.s:5116   .rodata.Clk_DaysInMonth:0000000000000000 $d
     /tmp/cct1pkgW.s:5120   .rodata.Clk_DaysInMonth:0000000000000000 Clk_DaysInMonth
     /tmp/cct1pkgW.s:5146   .rodata.Clk_DaysInYr:0000000000000000 $d
     /tmp/cct1pkgW.s:5150   .rodata.Clk_DaysInYr:0000000000000000 Clk_DaysInYr
     /tmp/cct1pkgW.s:5154   .rodata.Clk_StrDayOfWk:0000000000000000 $d
     /tmp/cct1pkgW.s:5158   .rodata.Clk_StrDayOfWk:0000000000000000 Clk_StrDayOfWk
     /tmp/cct1pkgW.s:5167   .rodata.Clk_StrMonth:0000000000000000 $d
     /tmp/cct1pkgW.s:5171   .rodata.Clk_StrMonth:0000000000000000 Clk_StrMonth
     /tmp/cct1pkgW.s:3007   .text.Clk_DateTimeToStr:0000000000000031 $d
     /tmp/cct1pkgW.s:3007   .text.Clk_DateTimeToStr:0000000000000032 $t
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.clk.h.99.025a9214991c3fe5682482499a19beda
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.lib_str.h.60.32f6cabaf9bf142bd5051c414a220578
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_str.h.174.5879a17e9fe25aed81d2c99c1603a671
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366

UNDEFINED SYMBOLS
CPU_SR_Save
CPU_SR_Restore
Clk_OS_Init
Clk_OS_Wait
Str_FmtNbr_Int32U
Str_Copy_N
Str_Cat_N

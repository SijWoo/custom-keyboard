ARM GAS  /tmp/ccazZ5Hl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fs_fat.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FS_FAT_GetSysCfg,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	FS_FAT_GetSysCfg:
  26              	.LVL0:
  27              	.LFB35:
  28              		.file 1 "rtos/uC-FS/FAT/fs_fat.c"
   1:rtos/uC-FS/FAT/fs_fat.c **** /*
   2:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
   3:rtos/uC-FS/FAT/fs_fat.c **** *                                                uC/FS
   4:rtos/uC-FS/FAT/fs_fat.c **** *                                      The Embedded File System
   5:rtos/uC-FS/FAT/fs_fat.c **** *
   6:rtos/uC-FS/FAT/fs_fat.c **** *                         (c) Copyright 2008-2019; Silicon Laboratories Inc.,
   7:rtos/uC-FS/FAT/fs_fat.c **** *                                400 W. Cesar Chavez, Austin, TX 78701
   8:rtos/uC-FS/FAT/fs_fat.c **** *
   9:rtos/uC-FS/FAT/fs_fat.c **** *                   All rights reserved. Protected by international copyright laws.
  10:rtos/uC-FS/FAT/fs_fat.c **** *
  11:rtos/uC-FS/FAT/fs_fat.c **** *                  Your use of this software is subject to your acceptance of the terms
  12:rtos/uC-FS/FAT/fs_fat.c **** *                  of a Silicon Labs Micrium software license, which can be obtained by
  13:rtos/uC-FS/FAT/fs_fat.c **** *                  contacting info@micrium.com. If you do not agree to the terms of this
  14:rtos/uC-FS/FAT/fs_fat.c **** *                  license, you may not use this software.
  15:rtos/uC-FS/FAT/fs_fat.c **** *
  16:rtos/uC-FS/FAT/fs_fat.c **** *                  Please help us continue to provide the Embedded community with the finest
  17:rtos/uC-FS/FAT/fs_fat.c **** *                  software available. Your honesty is greatly appreciated.
  18:rtos/uC-FS/FAT/fs_fat.c **** *
  19:rtos/uC-FS/FAT/fs_fat.c **** *                    You can find our product's documentation at: doc.micrium.com
  20:rtos/uC-FS/FAT/fs_fat.c **** *
  21:rtos/uC-FS/FAT/fs_fat.c **** *                          For more information visit us at: www.micrium.com
  22:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  23:rtos/uC-FS/FAT/fs_fat.c **** */
  24:rtos/uC-FS/FAT/fs_fat.c **** 
  25:rtos/uC-FS/FAT/fs_fat.c **** /*
  26:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  27:rtos/uC-FS/FAT/fs_fat.c **** *
  28:rtos/uC-FS/FAT/fs_fat.c **** *                                     FILE SYSTEM FAT MANAGEMENT
  29:rtos/uC-FS/FAT/fs_fat.c **** *
  30:rtos/uC-FS/FAT/fs_fat.c **** * Filename     : fs_fat.c
ARM GAS  /tmp/ccazZ5Hl.s 			page 2


  31:rtos/uC-FS/FAT/fs_fat.c **** * Version      : v4.07.06
  32:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  33:rtos/uC-FS/FAT/fs_fat.c **** * Reference(s) : (1) Microsoft Corporation.  "Microsoft Extensible Firmware Initiative, FAT32 File
  34:rtos/uC-FS/FAT/fs_fat.c **** *                    System Specification."  Version 1.03.  December 6, 2000.
  35:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  36:rtos/uC-FS/FAT/fs_fat.c **** */
  37:rtos/uC-FS/FAT/fs_fat.c **** 
  38:rtos/uC-FS/FAT/fs_fat.c **** /*
  39:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  40:rtos/uC-FS/FAT/fs_fat.c **** *                                               MODULE
  41:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  42:rtos/uC-FS/FAT/fs_fat.c **** */
  43:rtos/uC-FS/FAT/fs_fat.c **** 
  44:rtos/uC-FS/FAT/fs_fat.c **** #define  MICRIUM_SOURCE
  45:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_MODULE
  46:rtos/uC-FS/FAT/fs_fat.c **** 
  47:rtos/uC-FS/FAT/fs_fat.c **** 
  48:rtos/uC-FS/FAT/fs_fat.c **** /*
  49:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  50:rtos/uC-FS/FAT/fs_fat.c **** *                                            INCLUDE FILES
  51:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  52:rtos/uC-FS/FAT/fs_fat.c **** */
  53:rtos/uC-FS/FAT/fs_fat.c **** 
  54:rtos/uC-FS/FAT/fs_fat.c **** #include  <lib_mem.h>
  55:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs.h"
  56:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_buf.h"
  57:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_cfg_fs.h"
  58:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_def.h"
  59:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_dev.h"
  60:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_file.h"
  61:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_partition.h"
  62:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_sys.h"
  63:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_type.h"
  64:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_unicode.h"
  65:rtos/uC-FS/FAT/fs_fat.c **** #include  "../Source/fs_vol.h"
  66:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat.h"
  67:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat_dir.h"
  68:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat_fat12.h"
  69:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat_fat16.h"
  70:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat_fat32.h"
  71:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat_file.h"
  72:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat_journal.h"
  73:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat_lfn.h"
  74:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat_sfn.h"
  75:rtos/uC-FS/FAT/fs_fat.c **** #include  "fs_fat_type.h"
  76:rtos/uC-FS/FAT/fs_fat.c **** 
  77:rtos/uC-FS/FAT/fs_fat.c **** 
  78:rtos/uC-FS/FAT/fs_fat.c **** /*
  79:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  80:rtos/uC-FS/FAT/fs_fat.c **** *                                               MODULE
  81:rtos/uC-FS/FAT/fs_fat.c **** *
  82:rtos/uC-FS/FAT/fs_fat.c **** * Note(s) : (1) See 'fs_fat.h  MODULE'.
  83:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  84:rtos/uC-FS/FAT/fs_fat.c **** */
  85:rtos/uC-FS/FAT/fs_fat.c **** 
  86:rtos/uC-FS/FAT/fs_fat.c **** #ifdef   FS_FAT_MODULE_PRESENT                                  /* See Note #1.                    
  87:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 3


  88:rtos/uC-FS/FAT/fs_fat.c **** 
  89:rtos/uC-FS/FAT/fs_fat.c **** /*
  90:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  91:rtos/uC-FS/FAT/fs_fat.c **** *                                           LINT INHIBITION
  92:rtos/uC-FS/FAT/fs_fat.c **** *
  93:rtos/uC-FS/FAT/fs_fat.c **** * Note(s) : (1) Certain macro's within this file describe commands, command values or register fiel
  94:rtos/uC-FS/FAT/fs_fat.c **** *               that are currently unused.  lint error option #750 is disabled to prevent error mes
  95:rtos/uC-FS/FAT/fs_fat.c **** *               because of unused macro's :
  96:rtos/uC-FS/FAT/fs_fat.c **** *
  97:rtos/uC-FS/FAT/fs_fat.c **** *                   "Info 750: local macro '...' (line ..., file ...) not referenced"
  98:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
  99:rtos/uC-FS/FAT/fs_fat.c **** */
 100:rtos/uC-FS/FAT/fs_fat.c **** 
 101:rtos/uC-FS/FAT/fs_fat.c **** /*lint -e750*/
 102:rtos/uC-FS/FAT/fs_fat.c **** 
 103:rtos/uC-FS/FAT/fs_fat.c **** 
 104:rtos/uC-FS/FAT/fs_fat.c **** /*
 105:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 106:rtos/uC-FS/FAT/fs_fat.c **** *                                            LOCAL DEFINES
 107:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 108:rtos/uC-FS/FAT/fs_fat.c **** */
 109:rtos/uC-FS/FAT/fs_fat.c **** 
 110:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_MAX_NBR_CLUS_FAT12                      4084u
 111:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_MAX_NBR_CLUS_FAT16                     65524u
 112:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_CLUS_NBR_TOLERANCE                        16u
 113:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_MAX_SIZE_HUGE_FAT16                 33554432u   /*  32 MBytes                      
 114:rtos/uC-FS/FAT/fs_fat.c **** 
 115:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_MAX_SIZE_FAT12                       4394304u   /*   4 Mbytes                      
 116:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_MAX_SIZE_FAT16                     536870912u   /* 512 Mbytes                      
 117:rtos/uC-FS/FAT/fs_fat.c **** 
 118:rtos/uC-FS/FAT/fs_fat.c **** 
 119:rtos/uC-FS/FAT/fs_fat.c **** /*
 120:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 121:rtos/uC-FS/FAT/fs_fat.c **** *                                           FAT TYPES DEFINES
 122:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 123:rtos/uC-FS/FAT/fs_fat.c **** */
 124:rtos/uC-FS/FAT/fs_fat.c **** 
 125:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_BS_FAT12_FILESYSTYPE            "FAT12   "
 126:rtos/uC-FS/FAT/fs_fat.c **** 
 127:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FAT12_CLUS_BAD                        0x0FF7u
 128:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FAT12_CLUS_EOF                        0x0FF8u
 129:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FAT12_CLUS_FREE                       0x0000u
 130:rtos/uC-FS/FAT/fs_fat.c **** 
 131:rtos/uC-FS/FAT/fs_fat.c **** 
 132:rtos/uC-FS/FAT/fs_fat.c **** /*
 133:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 134:rtos/uC-FS/FAT/fs_fat.c **** *                                         DIRECTORY ENTRY DEFINES
 135:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 136:rtos/uC-FS/FAT/fs_fat.c **** */
 137:rtos/uC-FS/FAT/fs_fat.c **** 
 138:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_CLUS_NBR_GET(p_dir_entry)        (((CPU_INT32U)(MEM_VAL_GET_INT16U_LITTLE((v
 139:rtos/uC-FS/FAT/fs_fat.c ****                                                          ((CPU_INT32U)(MEM_VAL_GET_INT16U_LITTLE((v
 140:rtos/uC-FS/FAT/fs_fat.c **** 
 141:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_CLUS_NBR_SET(p_dir_entry, clus_nbr)            {MEM_VAL_SET_INT16U_LITTLE((v
 142:rtos/uC-FS/FAT/fs_fat.c ****                                                                        MEM_VAL_SET_INT16U_LITTLE((v
 143:rtos/uC-FS/FAT/fs_fat.c **** 
 144:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_DATE_GET_DAY(date)      ((CPU_INT08U) ((CPU_INT08U)((date) >>  0) & 0x1Fu))
ARM GAS  /tmp/ccazZ5Hl.s 			page 4


 145:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_DATE_GET_MONTH(date)    ((CPU_INT08U) ((CPU_INT08U)((date) >>  5) & 0x0Fu))
 146:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_DATE_GET_YEAR(date)     ((CPU_INT16U)(((CPU_INT16U)((date) >>  9) & 0x7Fu) +
 147:rtos/uC-FS/FAT/fs_fat.c **** 
 148:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_TIME_GET_SEC(time)      (((CPU_INT08U)((time) >>  0) & 0x1Fu) * 2u)
 149:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_TIME_GET_MIN(time)       ((CPU_INT08U)((time) >>  5) & 0x3Fu)
 150:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_TIME_GET_HOUR(time)      ((CPU_INT08U)((time) >> 11) & 0x1Fu)
 151:rtos/uC-FS/FAT/fs_fat.c **** 
 152:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_DATE_LO                        0x0021u
 153:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_DIRENT_TIME_LO                        0x0000u
 154:rtos/uC-FS/FAT/fs_fat.c **** 
 155:rtos/uC-FS/FAT/fs_fat.c **** /*
 156:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 157:rtos/uC-FS/FAT/fs_fat.c **** *                                           FSINFO DEFINES
 158:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 159:rtos/uC-FS/FAT/fs_fat.c **** */
 160:rtos/uC-FS/FAT/fs_fat.c **** 
 161:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ FSINFO OFFSET
 162:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_OFF_LEADSIG                            0u
 163:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_OFF_RESERVED1                          4u
 164:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_OFF_STRUCSIG                         484u
 165:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_OFF_FREE_COUNT                       488u
 166:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_OFF_NXT_FREE                         492u
 167:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_OFF_RESERVED2                        496u
 168:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_OFF_TRAILSIG                         508u
 169:rtos/uC-FS/FAT/fs_fat.c **** 
 170:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* -------------------- FSINFO VAL'
 171:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_LEADSIG                       0x41615252u
 172:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_STRUCSIG                      0x61417272u
 173:rtos/uC-FS/FAT/fs_fat.c **** #define  FS_FAT_FSI_TRAILSIG                      0xAA550000u
 174:rtos/uC-FS/FAT/fs_fat.c **** 
 175:rtos/uC-FS/FAT/fs_fat.c **** 
 176:rtos/uC-FS/FAT/fs_fat.c **** /*
 177:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 178:rtos/uC-FS/FAT/fs_fat.c **** *                                          LOCAL DATA TYPES
 179:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 180:rtos/uC-FS/FAT/fs_fat.c **** */
 181:rtos/uC-FS/FAT/fs_fat.c **** 
 182:rtos/uC-FS/FAT/fs_fat.c **** typedef  struct  fs_fat_tbl_entry {
 183:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR  VolSize;
 184:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR  ClusSize;
 185:rtos/uC-FS/FAT/fs_fat.c **** } FS_FAT_TBL_ENTRY;
 186:rtos/uC-FS/FAT/fs_fat.c **** 
 187:rtos/uC-FS/FAT/fs_fat.c **** 
 188:rtos/uC-FS/FAT/fs_fat.c **** /*
 189:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 190:rtos/uC-FS/FAT/fs_fat.c **** *                                           LOCAL CONSTANTS
 191:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 192:rtos/uC-FS/FAT/fs_fat.c **** */
 193:rtos/uC-FS/FAT/fs_fat.c **** 
 194:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 195:rtos/uC-FS/FAT/fs_fat.c **** #if (CPU_CFG_ENDIAN_TYPE == CPU_ENDIAN_TYPE_LITTLE)
 196:rtos/uC-FS/FAT/fs_fat.c **** static  const  CPU_INT32U        FS_FAT_NameDot[3]    = {0x2020202Eu,
 197:rtos/uC-FS/FAT/fs_fat.c ****                                                          0x20202020u,
 198:rtos/uC-FS/FAT/fs_fat.c ****                                                          0x20202020u};
 199:rtos/uC-FS/FAT/fs_fat.c **** 
 200:rtos/uC-FS/FAT/fs_fat.c **** static  const  CPU_INT32U        FS_FAT_NameDotDot[3] = {0x20202E2Eu,
 201:rtos/uC-FS/FAT/fs_fat.c ****                                                          0x20202020u,
ARM GAS  /tmp/ccazZ5Hl.s 			page 5


 202:rtos/uC-FS/FAT/fs_fat.c ****                                                          0x20202020u};
 203:rtos/uC-FS/FAT/fs_fat.c **** #else
 204:rtos/uC-FS/FAT/fs_fat.c **** static  const  CPU_INT32U        FS_FAT_NameDot[3]    = {0x2E202020u,
 205:rtos/uC-FS/FAT/fs_fat.c ****                                                          0x20202020u,
 206:rtos/uC-FS/FAT/fs_fat.c ****                                                          0x20202020u};
 207:rtos/uC-FS/FAT/fs_fat.c **** 
 208:rtos/uC-FS/FAT/fs_fat.c **** static  const  CPU_INT32U        FS_FAT_NameDotDot[3] = {0x2E2E2020u,
 209:rtos/uC-FS/FAT/fs_fat.c ****                                                          0x20202020u,
 210:rtos/uC-FS/FAT/fs_fat.c ****                                                          0x20202020u};
 211:rtos/uC-FS/FAT/fs_fat.c **** #endif
 212:rtos/uC-FS/FAT/fs_fat.c **** 
 213:rtos/uC-FS/FAT/fs_fat.c **** static  const  FS_FAT_TBL_ENTRY  FS_FAT_TblFAT12[10]  = {{        36u,  0u},
 214:rtos/uC-FS/FAT/fs_fat.c ****                                                          {        37u,  1u},
 215:rtos/uC-FS/FAT/fs_fat.c ****                                                          {      4040u,  2u},
 216:rtos/uC-FS/FAT/fs_fat.c ****                                                          {      8057u,  4u},
 217:rtos/uC-FS/FAT/fs_fat.c ****                                                          {     16040u,  8u},
 218:rtos/uC-FS/FAT/fs_fat.c ****                                                          {     32050u, 16u},
 219:rtos/uC-FS/FAT/fs_fat.c ****                                                          {     64060u, 32u},
 220:rtos/uC-FS/FAT/fs_fat.c ****                                                          {    128080u, 64u},
 221:rtos/uC-FS/FAT/fs_fat.c ****                                                          {    256120u,  0u},
 222:rtos/uC-FS/FAT/fs_fat.c ****                                                          {         0u,  0u}};
 223:rtos/uC-FS/FAT/fs_fat.c **** 
 224:rtos/uC-FS/FAT/fs_fat.c **** static  const  FS_FAT_TBL_ENTRY  FS_FAT_TblFAT16[9]   = {{      8400u,  0u},
 225:rtos/uC-FS/FAT/fs_fat.c ****                                                          {     32680u,  2u},
 226:rtos/uC-FS/FAT/fs_fat.c ****                                                          {    262000u,  4u},
 227:rtos/uC-FS/FAT/fs_fat.c ****                                                          {    524000u,  8u},
 228:rtos/uC-FS/FAT/fs_fat.c ****                                                          {   1048000u, 16u},
 229:rtos/uC-FS/FAT/fs_fat.c ****                                                          {   2096000u, 32u},
 230:rtos/uC-FS/FAT/fs_fat.c ****                                                          {   4194304u, 64u},
 231:rtos/uC-FS/FAT/fs_fat.c ****                                                          {4294967295u,  0u},
 232:rtos/uC-FS/FAT/fs_fat.c ****                                                          {         0u,  0u}};
 233:rtos/uC-FS/FAT/fs_fat.c **** 
 234:rtos/uC-FS/FAT/fs_fat.c **** static  const  FS_FAT_TBL_ENTRY  FS_FAT_TblFAT32[7]   = {{     66600u,  0u},
 235:rtos/uC-FS/FAT/fs_fat.c ****                                                          {    532480u,  1u},
 236:rtos/uC-FS/FAT/fs_fat.c ****                                                          {  16777216u,  8u},
 237:rtos/uC-FS/FAT/fs_fat.c ****                                                          {  33554432u, 16u},
 238:rtos/uC-FS/FAT/fs_fat.c ****                                                          {  67108864u, 32u},
 239:rtos/uC-FS/FAT/fs_fat.c ****                                                          {4294967295u, 64u},
 240:rtos/uC-FS/FAT/fs_fat.c ****                                                          {         0u,  0u}};
 241:rtos/uC-FS/FAT/fs_fat.c **** #endif
 242:rtos/uC-FS/FAT/fs_fat.c **** 
 243:rtos/uC-FS/FAT/fs_fat.c **** 
 244:rtos/uC-FS/FAT/fs_fat.c **** /*
 245:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 246:rtos/uC-FS/FAT/fs_fat.c **** *                                            LOCAL TABLES
 247:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 248:rtos/uC-FS/FAT/fs_fat.c **** */
 249:rtos/uC-FS/FAT/fs_fat.c **** 
 250:rtos/uC-FS/FAT/fs_fat.c **** 
 251:rtos/uC-FS/FAT/fs_fat.c **** /*
 252:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 253:rtos/uC-FS/FAT/fs_fat.c **** *                                       LOCAL GLOBAL VARIABLES
 254:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 255:rtos/uC-FS/FAT/fs_fat.c **** */
 256:rtos/uC-FS/FAT/fs_fat.c **** 
 257:rtos/uC-FS/FAT/fs_fat.c **** static  MEM_POOL  FS_FAT_DataPool;
 258:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 6


 259:rtos/uC-FS/FAT/fs_fat.c **** 
 260:rtos/uC-FS/FAT/fs_fat.c **** /*
 261:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 262:rtos/uC-FS/FAT/fs_fat.c **** *                                            LOCAL MACRO'S
 263:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 264:rtos/uC-FS/FAT/fs_fat.c **** */
 265:rtos/uC-FS/FAT/fs_fat.c **** 
 266:rtos/uC-FS/FAT/fs_fat.c **** 
 267:rtos/uC-FS/FAT/fs_fat.c **** /*
 268:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 269:rtos/uC-FS/FAT/fs_fat.c **** *                                      LOCAL FUNCTION PROTOTYPES
 270:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 271:rtos/uC-FS/FAT/fs_fat.c **** */
 272:rtos/uC-FS/FAT/fs_fat.c **** 
 273:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_ChkBootSec         (FS_FAT_DATA       *p_fat_data,     /* Calc vol info.      
 274:rtos/uC-FS/FAT/fs_fat.c ****                                          CPU_INT08U        *p_temp_08,
 275:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_ERR            *p_err);
 276:rtos/uC-FS/FAT/fs_fat.c **** 
 277:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_VOL_CHK_EN == DEF_ENABLED)
 278:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_ChkFile            (FS_VOL            *p_vol,          /* Chk file integrity. 
 279:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_FILE_DATA  *p_entry_data,
 280:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_ERR            *p_err);
 281:rtos/uC-FS/FAT/fs_fat.c **** 
 282:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_ChkDir             (FS_VOL            *p_vol,          /* Chk dir  integrity. 
 283:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_FILE_DATA  *p_entry_data,
 284:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_ERR            *p_err);
 285:rtos/uC-FS/FAT/fs_fat.c **** #endif
 286:rtos/uC-FS/FAT/fs_fat.c **** 
 287:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 288:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_GetSysCfg          (FS_SEC_SIZE        sec_size,       /* Get cfg for fmt.    
 289:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_SEC_QTY         size,
 290:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_SYS_CFG    *p_sys_cfg,
 291:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_ERR            *p_err);
 292:rtos/uC-FS/FAT/fs_fat.c **** 
 293:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_LowDirFirstClusAdd (FS_VOL            *p_vol,          /* Add 1st clus to dir.
 294:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_FILE_DATA  *p_entry_data,
 295:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_BUF            *p_buf,
 296:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_SEC_NBR     dir_parent_sec,
 297:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_ERR            *p_err);
 298:rtos/uC-FS/FAT/fs_fat.c **** 
 299:rtos/uC-FS/FAT/fs_fat.c **** #endif
 300:rtos/uC-FS/FAT/fs_fat.c **** 
 301:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_DataSrch           (FS_VOL            *p_vol,          /* Find file in data.  
 302:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_BUF            *p_buf,
 303:rtos/uC-FS/FAT/fs_fat.c ****                                          CPU_CHAR          *name_entry,
 304:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_SEC_NBR    *p_dir_first_sec,
 305:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_DIR_POS    *p_dir_start_pos,
 306:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_DIR_POS    *p_dir_end_pos,
 307:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_ERR            *p_err);
 308:rtos/uC-FS/FAT/fs_fat.c **** 
 309:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_FileDataClr        (FS_FAT_FILE_DATA  *p_entry_data);  /* Clr FAT file data st
 310:rtos/uC-FS/FAT/fs_fat.c **** 
 311:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_FileDataInit       (FS_FAT_FILE_DATA  *p_entry_data,   /* Init FAT file data s
 312:rtos/uC-FS/FAT/fs_fat.c ****                                          CPU_INT08U        *p_dir_entry);
 313:rtos/uC-FS/FAT/fs_fat.c **** 
 314:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_DataClr            (FS_FAT_DATA       *p_fat_data);    /* Clr FAT info struct.
 315:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 7


 316:rtos/uC-FS/FAT/fs_fat.c **** 
 317:rtos/uC-FS/FAT/fs_fat.c **** /*
 318:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 319:rtos/uC-FS/FAT/fs_fat.c **** *                                     LOCAL CONFIGURATION ERRORS
 320:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 321:rtos/uC-FS/FAT/fs_fat.c **** */
 322:rtos/uC-FS/FAT/fs_fat.c **** 
 323:rtos/uC-FS/FAT/fs_fat.c **** 
 324:rtos/uC-FS/FAT/fs_fat.c **** /*
 325:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 326:rtos/uC-FS/FAT/fs_fat.c **** *                                           FS_FAT_VolChk()
 327:rtos/uC-FS/FAT/fs_fat.c **** *
 328:rtos/uC-FS/FAT/fs_fat.c **** * Description : Check the file system on a volume.
 329:rtos/uC-FS/FAT/fs_fat.c **** *
 330:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : name_vol    Volume name.
 331:rtos/uC-FS/FAT/fs_fat.c **** *
 332:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 333:rtos/uC-FS/FAT/fs_fat.c **** *
 334:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE              Volume checked without errors.
 335:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NAME_NULL         Argument 'name_vol' passed a NULL pointer.
 336:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_VOL_NOT_OPEN      Volume not open.
 337:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_BUF_NONE_AVAIL    No buffers available.
 338:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV               Device error.
 339:rtos/uC-FS/FAT/fs_fat.c **** *
 340:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
 341:rtos/uC-FS/FAT/fs_fat.c **** *
 342:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) (a) The "dot" entry should have ...
 343:rtos/uC-FS/FAT/fs_fat.c **** *                       (1) ... a size of zero ...
 344:rtos/uC-FS/FAT/fs_fat.c **** *                       (2) ... & the cluster number of the directory.
 345:rtos/uC-FS/FAT/fs_fat.c **** *
 346:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) The "dot dot" entry should have ...
 347:rtos/uC-FS/FAT/fs_fat.c **** *                       (1) ... a size of zero ...
 348:rtos/uC-FS/FAT/fs_fat.c **** *                       (2) ... & the cluster number of the parent directory, if not in the root di
 349:rtos/uC-FS/FAT/fs_fat.c **** *                                        OR          of zero,                 if     in the root di
 350:rtos/uC-FS/FAT/fs_fat.c **** *
 351:rtos/uC-FS/FAT/fs_fat.c **** *               (2) #### Check for cross-linked files & lost clusters.
 352:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 353:rtos/uC-FS/FAT/fs_fat.c **** */
 354:rtos/uC-FS/FAT/fs_fat.c **** 
 355:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_VOL_CHK_EN == DEF_ENABLED)
 356:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_VolChk (CPU_CHAR  *name_vol,
 357:rtos/uC-FS/FAT/fs_fat.c ****                      FS_ERR    *p_err)
 358:rtos/uC-FS/FAT/fs_fat.c **** {
 359:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF            *p_buf;
 360:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U        *p_dir_entry;
 361:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA       *p_fat_data;
 362:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        dir;
 363:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    dir_clus;
 364:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    dir_clus_tmp;
 365:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        done;
 366:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16S         dot;
 367:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16S         dot_dot;
 368:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U         fat_attrib;
 369:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U         i;
 370:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U         level;
 371:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS     pos;
 372:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS     end_pos;
ARM GAS  /tmp/ccazZ5Hl.s 			page 8


 373:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        valid;
 374:rtos/uC-FS/FAT/fs_fat.c ****     FS_VOL            *p_vol;
 375:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR           name[FS_FAT_MAX_FILE_NAME_LEN + 1u];
 376:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     sec_nbr_stk[FS_FAT_CFG_VOL_CHK_MAX_LEVELS];
 377:rtos/uC-FS/FAT/fs_fat.c ****     FS_SEC_SIZE        sec_pos_stk[FS_FAT_CFG_VOL_CHK_MAX_LEVELS];
 378:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    dir_clus_stk[FS_FAT_CFG_VOL_CHK_MAX_LEVELS];
 379:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FILE_DATA   fat_file_data;
 380:rtos/uC-FS/FAT/fs_fat.c **** #if  defined(FS_FAT_LFN_MODULE_PRESENT) && \
 381:rtos/uC-FS/FAT/fs_fat.c ****             (FS_CFG_UTF8_EN == DEF_ENABLED)
 382:rtos/uC-FS/FAT/fs_fat.c ****     CPU_WCHAR          name_utf8[FS_FAT_MAX_FILE_NAME_LEN + 1u];
 383:rtos/uC-FS/FAT/fs_fat.c ****     CPU_WCHAR         *p_name_utf8;
 384:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T         len;
 385:rtos/uC-FS/FAT/fs_fat.c **** #endif
 386:rtos/uC-FS/FAT/fs_fat.c **** 
 387:rtos/uC-FS/FAT/fs_fat.c **** 
 388:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_ERR_ARG_CHK_EXT_EN == DEF_ENABLED)                  /* ------------------- VALIDATE ARG
 389:rtos/uC-FS/FAT/fs_fat.c ****     if (p_err == (FS_ERR *)0) {                                 /* Validate error ptr.             
 390:rtos/uC-FS/FAT/fs_fat.c ****         CPU_SW_EXCEPTION(;);
 391:rtos/uC-FS/FAT/fs_fat.c ****     }
 392:rtos/uC-FS/FAT/fs_fat.c ****     if (name_vol == (CPU_CHAR *)0) {                            /* Validate name ptr.              
 393:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NAME_NULL;
 394:rtos/uC-FS/FAT/fs_fat.c ****         return;
 395:rtos/uC-FS/FAT/fs_fat.c ****     }
 396:rtos/uC-FS/FAT/fs_fat.c **** #endif
 397:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- ACQUIRE VOL LO
 398:rtos/uC-FS/FAT/fs_fat.c ****     p_vol = FSVol_AcquireLockChk(name_vol, DEF_NO, p_err);      /* Vol may be unmounted.           
 399:rtos/uC-FS/FAT/fs_fat.c ****     (void)p_err;                                               /* Err ignored. Ret val chk'd instea
 400:rtos/uC-FS/FAT/fs_fat.c ****     if (p_vol == (FS_VOL *)0) {
 401:rtos/uC-FS/FAT/fs_fat.c ****         return;
 402:rtos/uC-FS/FAT/fs_fat.c ****     }
 403:rtos/uC-FS/FAT/fs_fat.c **** 
 404:rtos/uC-FS/FAT/fs_fat.c **** 
 405:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ PREPARE FOR C
 406:rtos/uC-FS/FAT/fs_fat.c ****     p_buf = FSBuf_Get(p_vol);                                   /* Get buf.                        
 407:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 408:rtos/uC-FS/FAT/fs_fat.c ****         FSVol_ReleaseUnlock(p_vol);
 409:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 410:rtos/uC-FS/FAT/fs_fat.c ****         return;
 411:rtos/uC-FS/FAT/fs_fat.c ****     }
 412:rtos/uC-FS/FAT/fs_fat.c **** 
 413:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
 414:rtos/uC-FS/FAT/fs_fat.c **** 
 415:rtos/uC-FS/FAT/fs_fat.c ****     pos.SecNbr = p_fat_data->RootDirStart;                      /* Start in root dir.              
 416:rtos/uC-FS/FAT/fs_fat.c ****     pos.SecPos = 0u;
 417:rtos/uC-FS/FAT/fs_fat.c ****     dir_clus   = 0u;
 418:rtos/uC-FS/FAT/fs_fat.c ****     level      = 0u;
 419:rtos/uC-FS/FAT/fs_fat.c ****     done       = DEF_NO;
 420:rtos/uC-FS/FAT/fs_fat.c **** 
 421:rtos/uC-FS/FAT/fs_fat.c **** 
 422:rtos/uC-FS/FAT/fs_fat.c **** 
 423:rtos/uC-FS/FAT/fs_fat.c ****     while (done == DEF_NO) {
 424:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ FIND DIR ENTR
 425:rtos/uC-FS/FAT/fs_fat.c **** #if  defined(FS_FAT_LFN_MODULE_PRESENT) && \
 426:rtos/uC-FS/FAT/fs_fat.c ****             (FS_CFG_UTF8_EN == DEF_ENABLED)
 427:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_FN_API_Active.NextDirEntryGet(         p_vol,
 428:rtos/uC-FS/FAT/fs_fat.c ****                                                       p_buf,
 429:rtos/uC-FS/FAT/fs_fat.c ****                                              (void *)&name_utf8[0],
ARM GAS  /tmp/ccazZ5Hl.s 			page 9


 430:rtos/uC-FS/FAT/fs_fat.c ****                                                      &pos,
 431:rtos/uC-FS/FAT/fs_fat.c ****                                                      &end_pos,
 432:rtos/uC-FS/FAT/fs_fat.c ****                                                       p_err);
 433:rtos/uC-FS/FAT/fs_fat.c **** 
 434:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Conversion from wide char to reg
 435:rtos/uC-FS/FAT/fs_fat.c ****         p_name_utf8 = &name_utf8[0];
 436:rtos/uC-FS/FAT/fs_fat.c ****         len         = WC_StrToMB(             &name[0],
 437:rtos/uC-FS/FAT/fs_fat.c ****                                               &p_name_utf8,
 438:rtos/uC-FS/FAT/fs_fat.c ****                                  (CPU_SIZE_T)  FS_FAT_MAX_FILE_NAME_LEN);
 439:rtos/uC-FS/FAT/fs_fat.c **** 
 440:rtos/uC-FS/FAT/fs_fat.c ****         if (len == (CPU_SIZE_T)-1) {
 441:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_ENTRY_CORRUPT;
 442:rtos/uC-FS/FAT/fs_fat.c ****             FSVol_ReleaseUnlock(p_vol);
 443:rtos/uC-FS/FAT/fs_fat.c ****             return;
 444:rtos/uC-FS/FAT/fs_fat.c ****         }
 445:rtos/uC-FS/FAT/fs_fat.c **** #else
 446:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_FN_API_Active.NextDirEntryGet(         p_vol,
 447:rtos/uC-FS/FAT/fs_fat.c ****                                                       p_buf,
 448:rtos/uC-FS/FAT/fs_fat.c ****                                              (void *)&name[0],
 449:rtos/uC-FS/FAT/fs_fat.c ****                                                      &pos,
 450:rtos/uC-FS/FAT/fs_fat.c ****                                                      &end_pos,
 451:rtos/uC-FS/FAT/fs_fat.c ****                                                       p_err);
 452:rtos/uC-FS/FAT/fs_fat.c **** 
 453:rtos/uC-FS/FAT/fs_fat.c **** #endif
 454:rtos/uC-FS/FAT/fs_fat.c **** 
 455:rtos/uC-FS/FAT/fs_fat.c **** 
 456:rtos/uC-FS/FAT/fs_fat.c **** 
 457:rtos/uC-FS/FAT/fs_fat.c ****         switch (*p_err) {
 458:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_EOF:                                    /* ----------------- END OF DIRECTO
 459:rtos/uC-FS/FAT/fs_fat.c ****                  if (level == 0) {                              /* If in root dir ...              
 460:rtos/uC-FS/FAT/fs_fat.c ****                      done  = DEF_YES;                           /* ... no more entries to process. 
 461:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_NONE;                       /* Make sure No error is returned w
 462:rtos/uC-FS/FAT/fs_fat.c **** 
 463:rtos/uC-FS/FAT/fs_fat.c ****                  } else {                                       /* Otherwise ...                   
 464:rtos/uC-FS/FAT/fs_fat.c ****                      level--;                                   /* ... move to parent dir.         
 465:rtos/uC-FS/FAT/fs_fat.c **** 
 466:rtos/uC-FS/FAT/fs_fat.c ****                      pos.SecNbr = sec_nbr_stk[level];
 467:rtos/uC-FS/FAT/fs_fat.c ****                      pos.SecPos = sec_pos_stk[level];
 468:rtos/uC-FS/FAT/fs_fat.c ****                      dir_clus   = dir_clus_stk[level];
 469:rtos/uC-FS/FAT/fs_fat.c ****                  }
 470:rtos/uC-FS/FAT/fs_fat.c ****                  break;
 471:rtos/uC-FS/FAT/fs_fat.c **** 
 472:rtos/uC-FS/FAT/fs_fat.c **** 
 473:rtos/uC-FS/FAT/fs_fat.c **** 
 474:rtos/uC-FS/FAT/fs_fat.c **** 
 475:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_NONE:                                   /* ---------------- DIR ENTRY DIR F
 476:rtos/uC-FS/FAT/fs_fat.c ****                  p_dir_entry = (CPU_INT08U *)p_buf->DataPtr + end_pos.SecPos;
 477:rtos/uC-FS/FAT/fs_fat.c ****                  fat_attrib  = MEM_VAL_GET_INT08U_LITTLE(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR);
 478:rtos/uC-FS/FAT/fs_fat.c **** 
 479:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 480:rtos/uC-FS/FAT/fs_fat.c ****                  fat_file_data.DirStartSec    = pos.SecNbr;
 481:rtos/uC-FS/FAT/fs_fat.c ****                  fat_file_data.DirStartSecPos = pos.SecPos;
 482:rtos/uC-FS/FAT/fs_fat.c ****                  fat_file_data.DirEndSec      = end_pos.SecNbr;
 483:rtos/uC-FS/FAT/fs_fat.c ****                  fat_file_data.DirEndSecPos   = end_pos.SecPos;
 484:rtos/uC-FS/FAT/fs_fat.c ****                  fat_file_data.Attrib         = fat_attrib;
 485:rtos/uC-FS/FAT/fs_fat.c ****                  fat_file_data.FileFirstClus  = FS_FAT_DIRENT_CLUS_NBR_GET(p_dir_entry);
 486:rtos/uC-FS/FAT/fs_fat.c ****                  fat_file_data.FileSize       = MEM_VAL_GET_INT32U_LITTLE(p_dir_entry + FS_FAT_DIRE
ARM GAS  /tmp/ccazZ5Hl.s 			page 10


 487:rtos/uC-FS/FAT/fs_fat.c **** #endif
 488:rtos/uC-FS/FAT/fs_fat.c **** 
 489:rtos/uC-FS/FAT/fs_fat.c ****                  dir = DEF_BIT_IS_SET(fat_attrib, FS_FAT_DIRENT_ATTR_DIRECTORY);
 490:rtos/uC-FS/FAT/fs_fat.c ****                  if (dir == DEF_YES) {                          /* If dir ...                      
 491:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... srch files in dir.          
 492:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolChk(): Found dir  "));
 493:rtos/uC-FS/FAT/fs_fat.c ****                      for (i = 0u; i < level; i++) {
 494:rtos/uC-FS/FAT/fs_fat.c ****                          FS_TRACE_DBG(("  "));
 495:rtos/uC-FS/FAT/fs_fat.c ****                      }
 496:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("%s\r\n", name));
 497:rtos/uC-FS/FAT/fs_fat.c **** 
 498:rtos/uC-FS/FAT/fs_fat.c ****                      dot = Str_Cmp_N(name, (CPU_CHAR *)".", FS_CFG_MAX_PATH_NAME_LEN);
 499:rtos/uC-FS/FAT/fs_fat.c ****                      if (dot == 0) {                            /* "Dot" entry (see Note #1a).     
 500:rtos/uC-FS/FAT/fs_fat.c ****                          dir_clus_tmp = fat_file_data.FileFirstClus;
 501:rtos/uC-FS/FAT/fs_fat.c ****                          if (level == 0u) {
 502:rtos/uC-FS/FAT/fs_fat.c ****                              FS_TRACE_INFO(("FS_FAT_VolChk(): \".\" entry in root dir.\r\n"));
 503:rtos/uC-FS/FAT/fs_fat.c ****                          } else {
 504:rtos/uC-FS/FAT/fs_fat.c ****                              if (dir_clus_tmp != dir_clus) {    /* If clus nbr bad ...             
 505:rtos/uC-FS/FAT/fs_fat.c ****                                  FS_TRACE_INFO(("FS_FAT_VolChk(): \".\" entry of dir in root dir wi
 506:rtos/uC-FS/FAT/fs_fat.c **** 
 507:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... correct clus nbr.           
 508:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 509:rtos/uC-FS/FAT/fs_fat.c ****                                  fat_file_data.FileFirstClus = dir_clus;
 510:rtos/uC-FS/FAT/fs_fat.c ****                                  fat_file_data.FileSize      = 0u;
 511:rtos/uC-FS/FAT/fs_fat.c **** 
 512:rtos/uC-FS/FAT/fs_fat.c ****                                  FS_FAT_LowEntryUpdate( p_vol,
 513:rtos/uC-FS/FAT/fs_fat.c ****                                                         p_buf,
 514:rtos/uC-FS/FAT/fs_fat.c ****                                                        &fat_file_data,
 515:rtos/uC-FS/FAT/fs_fat.c ****                                                         DEF_YES,
 516:rtos/uC-FS/FAT/fs_fat.c ****                                                         p_err);
 517:rtos/uC-FS/FAT/fs_fat.c ****                                      if (*p_err == FS_ERR_DEV) {
 518:rtos/uC-FS/FAT/fs_fat.c ****                                          FSBuf_Free(p_buf);
 519:rtos/uC-FS/FAT/fs_fat.c ****                                          FSVol_ReleaseUnlock(p_vol);
 520:rtos/uC-FS/FAT/fs_fat.c ****                                          return;
 521:rtos/uC-FS/FAT/fs_fat.c ****                                      }
 522:rtos/uC-FS/FAT/fs_fat.c **** #endif
 523:rtos/uC-FS/FAT/fs_fat.c ****                              }
 524:rtos/uC-FS/FAT/fs_fat.c ****                          }
 525:rtos/uC-FS/FAT/fs_fat.c **** 
 526:rtos/uC-FS/FAT/fs_fat.c ****                          pos.SecNbr = end_pos.SecNbr;           /* Move to next entry.             
 527:rtos/uC-FS/FAT/fs_fat.c ****                          pos.SecPos = end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 528:rtos/uC-FS/FAT/fs_fat.c **** 
 529:rtos/uC-FS/FAT/fs_fat.c **** 
 530:rtos/uC-FS/FAT/fs_fat.c ****                      } else {
 531:rtos/uC-FS/FAT/fs_fat.c ****                          dot_dot = Str_Cmp_N(name, (CPU_CHAR *)"..", FS_CFG_MAX_PATH_NAME_LEN);
 532:rtos/uC-FS/FAT/fs_fat.c ****                          if (dot_dot == 0) {                    /* "Dot dot" entry (see Note #1b). 
 533:rtos/uC-FS/FAT/fs_fat.c ****                              dir_clus_tmp = fat_file_data.FileFirstClus;
 534:rtos/uC-FS/FAT/fs_fat.c ****                              if (level == 0u) {
 535:rtos/uC-FS/FAT/fs_fat.c ****                                  FS_TRACE_INFO(("FS_FAT_VolChk(): \"..\" entry in root dir.\r\n"));
 536:rtos/uC-FS/FAT/fs_fat.c ****                              } else {
 537:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* If clus nbr bad ...             
 538:rtos/uC-FS/FAT/fs_fat.c ****                                  if (dir_clus_tmp != dir_clus_stk[level - 1]) {
 539:rtos/uC-FS/FAT/fs_fat.c ****                                      FS_TRACE_INFO(("FS_FAT_VolChk(): \"..\" entry of dir in root d
 540:rtos/uC-FS/FAT/fs_fat.c **** 
 541:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... correct clus nbr.           
 542:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 543:rtos/uC-FS/FAT/fs_fat.c ****                                      fat_file_data.FileFirstClus = dir_clus_stk[level - 1u];
ARM GAS  /tmp/ccazZ5Hl.s 			page 11


 544:rtos/uC-FS/FAT/fs_fat.c ****                                      fat_file_data.FileSize      = 0u;
 545:rtos/uC-FS/FAT/fs_fat.c **** 
 546:rtos/uC-FS/FAT/fs_fat.c ****                                      FS_FAT_LowEntryUpdate( p_vol,
 547:rtos/uC-FS/FAT/fs_fat.c ****                                                             p_buf,
 548:rtos/uC-FS/FAT/fs_fat.c ****                                                            &fat_file_data,
 549:rtos/uC-FS/FAT/fs_fat.c ****                                                             DEF_YES,
 550:rtos/uC-FS/FAT/fs_fat.c ****                                                             p_err);
 551:rtos/uC-FS/FAT/fs_fat.c ****                                      if (*p_err == FS_ERR_DEV) {
 552:rtos/uC-FS/FAT/fs_fat.c ****                                          FSBuf_Free(p_buf);
 553:rtos/uC-FS/FAT/fs_fat.c ****                                          FSVol_ReleaseUnlock(p_vol);
 554:rtos/uC-FS/FAT/fs_fat.c ****                                          return;
 555:rtos/uC-FS/FAT/fs_fat.c ****                                      }
 556:rtos/uC-FS/FAT/fs_fat.c **** #endif
 557:rtos/uC-FS/FAT/fs_fat.c ****                                  }
 558:rtos/uC-FS/FAT/fs_fat.c ****                              }
 559:rtos/uC-FS/FAT/fs_fat.c **** 
 560:rtos/uC-FS/FAT/fs_fat.c ****                              pos.SecNbr = end_pos.SecNbr;       /* Move to next entry.             
 561:rtos/uC-FS/FAT/fs_fat.c ****                              pos.SecPos = end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 562:rtos/uC-FS/FAT/fs_fat.c **** 
 563:rtos/uC-FS/FAT/fs_fat.c **** 
 564:rtos/uC-FS/FAT/fs_fat.c ****                          } else {                               /* Dir.                            
 565:rtos/uC-FS/FAT/fs_fat.c ****                              if (level < FS_FAT_CFG_VOL_CHK_MAX_LEVELS) {
 566:rtos/uC-FS/FAT/fs_fat.c ****                                  sec_nbr_stk[level]  = end_pos.SecNbr;
 567:rtos/uC-FS/FAT/fs_fat.c ****                                  sec_pos_stk[level]  = end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 568:rtos/uC-FS/FAT/fs_fat.c ****                                  dir_clus_stk[level] = dir_clus;
 569:rtos/uC-FS/FAT/fs_fat.c **** 
 570:rtos/uC-FS/FAT/fs_fat.c ****                                  level++;
 571:rtos/uC-FS/FAT/fs_fat.c **** 
 572:rtos/uC-FS/FAT/fs_fat.c ****                                  dir_clus            = fat_file_data.FileFirstClus;
 573:rtos/uC-FS/FAT/fs_fat.c ****                                  pos.SecNbr          = FS_FAT_CLUS_TO_SEC(p_fat_data, dir_clus);
 574:rtos/uC-FS/FAT/fs_fat.c ****                                  pos.SecPos          = 0u;
 575:rtos/uC-FS/FAT/fs_fat.c **** 
 576:rtos/uC-FS/FAT/fs_fat.c ****                                  valid               = FS_FAT_IS_VALID_CLUS(p_fat_data, dir_clus);
 577:rtos/uC-FS/FAT/fs_fat.c ****                                  if (valid == DEF_NO) {         /* If clus not valid ...           
 578:rtos/uC-FS/FAT/fs_fat.c ****                                      FS_TRACE_INFO(("FS_FAT_VolChk(): Dir clus nbr invalid.\r\n"));
 579:rtos/uC-FS/FAT/fs_fat.c **** 
 580:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... clr clus nbr  ...           
 581:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 582:rtos/uC-FS/FAT/fs_fat.c ****                                      fat_file_data.FileFirstClus = 0u;
 583:rtos/uC-FS/FAT/fs_fat.c ****                                      fat_file_data.FileSize      = 0u;
 584:rtos/uC-FS/FAT/fs_fat.c **** 
 585:rtos/uC-FS/FAT/fs_fat.c ****                                      FS_FAT_LowEntryUpdate( p_vol,
 586:rtos/uC-FS/FAT/fs_fat.c ****                                                             p_buf,
 587:rtos/uC-FS/FAT/fs_fat.c ****                                                            &fat_file_data,
 588:rtos/uC-FS/FAT/fs_fat.c ****                                                             DEF_YES,
 589:rtos/uC-FS/FAT/fs_fat.c ****                                                             p_err);
 590:rtos/uC-FS/FAT/fs_fat.c ****                                      if (*p_err == FS_ERR_DEV) {
 591:rtos/uC-FS/FAT/fs_fat.c ****                                          FSBuf_Free(p_buf);
 592:rtos/uC-FS/FAT/fs_fat.c ****                                          FSVol_ReleaseUnlock(p_vol);
 593:rtos/uC-FS/FAT/fs_fat.c ****                                          return;
 594:rtos/uC-FS/FAT/fs_fat.c ****                                      }
 595:rtos/uC-FS/FAT/fs_fat.c **** #endif
 596:rtos/uC-FS/FAT/fs_fat.c **** 
 597:rtos/uC-FS/FAT/fs_fat.c ****                                      level--;                   /* ... & move to next entry.       
 598:rtos/uC-FS/FAT/fs_fat.c ****                                      pos.SecNbr = sec_nbr_stk[level];
 599:rtos/uC-FS/FAT/fs_fat.c ****                                      pos.SecPos = sec_pos_stk[level];
 600:rtos/uC-FS/FAT/fs_fat.c ****                                      dir_clus   = dir_clus_stk[level];
ARM GAS  /tmp/ccazZ5Hl.s 			page 12


 601:rtos/uC-FS/FAT/fs_fat.c **** 
 602:rtos/uC-FS/FAT/fs_fat.c **** 
 603:rtos/uC-FS/FAT/fs_fat.c ****                                  } else {                       /* Chk dir.                        
 604:rtos/uC-FS/FAT/fs_fat.c ****                                      FS_FAT_ChkDir( p_vol,
 605:rtos/uC-FS/FAT/fs_fat.c ****                                                    &fat_file_data,
 606:rtos/uC-FS/FAT/fs_fat.c ****                                                     p_err);
 607:rtos/uC-FS/FAT/fs_fat.c ****                                      if (*p_err == FS_ERR_DEV) {
 608:rtos/uC-FS/FAT/fs_fat.c ****                                          FSBuf_Free(p_buf);
 609:rtos/uC-FS/FAT/fs_fat.c ****                                          FSVol_ReleaseUnlock(p_vol);
 610:rtos/uC-FS/FAT/fs_fat.c ****                                          return;
 611:rtos/uC-FS/FAT/fs_fat.c ****                                      }
 612:rtos/uC-FS/FAT/fs_fat.c ****                                  }
 613:rtos/uC-FS/FAT/fs_fat.c **** 
 614:rtos/uC-FS/FAT/fs_fat.c **** 
 615:rtos/uC-FS/FAT/fs_fat.c ****                              } else {                           /* Nesting too deep.               
 616:rtos/uC-FS/FAT/fs_fat.c ****                                  FS_TRACE_DBG(("FS_FAT_VolChk(): Nesting too deep.\r\n"));
 617:rtos/uC-FS/FAT/fs_fat.c ****                                  pos.SecNbr = end_pos.SecNbr;   /* Move to next entry.             
 618:rtos/uC-FS/FAT/fs_fat.c ****                                  pos.SecPos = end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 619:rtos/uC-FS/FAT/fs_fat.c ****                              }
 620:rtos/uC-FS/FAT/fs_fat.c ****                          }
 621:rtos/uC-FS/FAT/fs_fat.c ****                      }
 622:rtos/uC-FS/FAT/fs_fat.c **** 
 623:rtos/uC-FS/FAT/fs_fat.c **** 
 624:rtos/uC-FS/FAT/fs_fat.c **** 
 625:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------- DIR ENTRY FILE F
 626:rtos/uC-FS/FAT/fs_fat.c ****                  } else {                                       /* If file ...                     
 627:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolChk(): Found file "));
 628:rtos/uC-FS/FAT/fs_fat.c ****                      for (i = 0u; i < level; i++) {
 629:rtos/uC-FS/FAT/fs_fat.c ****                          FS_TRACE_DBG(("  "));
 630:rtos/uC-FS/FAT/fs_fat.c ****                      }
 631:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("%s\r\n", name));
 632:rtos/uC-FS/FAT/fs_fat.c **** 
 633:rtos/uC-FS/FAT/fs_fat.c ****                      FS_FAT_ChkFile( p_vol,                     /* ... chk file.                   
 634:rtos/uC-FS/FAT/fs_fat.c ****                                     &fat_file_data,
 635:rtos/uC-FS/FAT/fs_fat.c ****                                      p_err);
 636:rtos/uC-FS/FAT/fs_fat.c **** 
 637:rtos/uC-FS/FAT/fs_fat.c ****                      if (*p_err == FS_ERR_DEV) {
 638:rtos/uC-FS/FAT/fs_fat.c ****                          FSBuf_Free(p_buf);
 639:rtos/uC-FS/FAT/fs_fat.c ****                          FSVol_ReleaseUnlock(p_vol);
 640:rtos/uC-FS/FAT/fs_fat.c ****                          return;
 641:rtos/uC-FS/FAT/fs_fat.c ****                      }
 642:rtos/uC-FS/FAT/fs_fat.c **** 
 643:rtos/uC-FS/FAT/fs_fat.c ****                      pos.SecNbr = end_pos.SecNbr;               /* Move to next entry.             
 644:rtos/uC-FS/FAT/fs_fat.c ****                      pos.SecPos = end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 645:rtos/uC-FS/FAT/fs_fat.c ****                  }
 646:rtos/uC-FS/FAT/fs_fat.c ****                  break;
 647:rtos/uC-FS/FAT/fs_fat.c **** 
 648:rtos/uC-FS/FAT/fs_fat.c **** 
 649:rtos/uC-FS/FAT/fs_fat.c **** 
 650:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_DEV:                                    /* ---------------------- DEV ERR -
 651:rtos/uC-FS/FAT/fs_fat.c ****             default:
 652:rtos/uC-FS/FAT/fs_fat.c ****                  done = DEF_YES;
 653:rtos/uC-FS/FAT/fs_fat.c ****                  break;
 654:rtos/uC-FS/FAT/fs_fat.c ****         }
 655:rtos/uC-FS/FAT/fs_fat.c ****     }
 656:rtos/uC-FS/FAT/fs_fat.c **** 
 657:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Flush(p_buf, p_err);
ARM GAS  /tmp/ccazZ5Hl.s 			page 13


 658:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Free(p_buf);
 659:rtos/uC-FS/FAT/fs_fat.c ****     FSVol_ReleaseUnlock(p_vol);
 660:rtos/uC-FS/FAT/fs_fat.c **** }
 661:rtos/uC-FS/FAT/fs_fat.c **** #endif
 662:rtos/uC-FS/FAT/fs_fat.c **** 
 663:rtos/uC-FS/FAT/fs_fat.c **** 
 664:rtos/uC-FS/FAT/fs_fat.c **** /*
 665:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 666:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_FAT_ClusChainAlloc()
 667:rtos/uC-FS/FAT/fs_fat.c **** *
 668:rtos/uC-FS/FAT/fs_fat.c **** * Description : Allocate or extend cluster chain.
 669:rtos/uC-FS/FAT/fs_fat.c **** *
 670:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
 671:rtos/uC-FS/FAT/fs_fat.c **** *
 672:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
 673:rtos/uC-FS/FAT/fs_fat.c **** *
 674:rtos/uC-FS/FAT/fs_fat.c **** *               start_clus  First cluster of the chain from which allocation/extension will take pl
 675:rtos/uC-FS/FAT/fs_fat.c **** *
 676:rtos/uC-FS/FAT/fs_fat.c **** *               nbr_clus    Number of clusters to allocate.
 677:rtos/uC-FS/FAT/fs_fat.c **** *
 678:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 679:rtos/uC-FS/FAT/fs_fat.c **** *
 680:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV_FULL             Device is full (no space could be alloc
 681:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE                 Cluster chain successfully allocated.
 682:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_CHAIN_END   Cluster chain ended.
 683:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_INVALID     Cluster chain ended with invalid cluste
 684:rtos/uC-FS/FAT/fs_fat.c **** *
 685:rtos/uC-FS/FAT/fs_fat.c **** *                               -------------RETURNED BY p_fat_data->FAT_TypeAPI_Ptr->ClusValWr()--
 686:rtos/uC-FS/FAT/fs_fat.c **** *                               See p_fat_data->FAT_TypeAPI_Ptr->ClusValWr() for additional return 
 687:rtos/uC-FS/FAT/fs_fat.c **** *
 688:rtos/uC-FS/FAT/fs_fat.c **** *                               ----------------RETURNED BY FS_FAT_JournalEnterClusChainAlloc()----
 689:rtos/uC-FS/FAT/fs_fat.c **** *                               See FS_FAT_JournalEnterClusChainAlloc() for additional return error
 690:rtos/uC-FS/FAT/fs_fat.c **** *
 691:rtos/uC-FS/FAT/fs_fat.c **** *                               -------------RETURNED BY p_fat_data->FAT_TypeAPI_Ptr->ClusValRd()--
 692:rtos/uC-FS/FAT/fs_fat.c **** *                               See p_fat_data->FAT_TypeAPI_Ptr->ClusValRd() for additional return 
 693:rtos/uC-FS/FAT/fs_fat.c **** *
 694:rtos/uC-FS/FAT/fs_fat.c **** *                               -----------------------RETURNED BY FS_FAT_ClusFreeFind()-----------
 695:rtos/uC-FS/FAT/fs_fat.c **** *                               See FS_FAT_ClusFreeFind() for additional return error codes.
 696:rtos/uC-FS/FAT/fs_fat.c **** *
 697:rtos/uC-FS/FAT/fs_fat.c **** *                               -------------------RETURNED BY FS_FAT_ClusChainReverseDel()--------
 698:rtos/uC-FS/FAT/fs_fat.c **** *                               See FS_FAT_ClusChainReverseDel() for additional return error codes.
 699:rtos/uC-FS/FAT/fs_fat.c **** *
 700:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Index of the cluster from which the allocation/extension takes place.
 701:rtos/uC-FS/FAT/fs_fat.c **** *
 702:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) Uncompleted allocations are rewinded using reverse deletion. By doing so, we ma
 703:rtos/uC-FS/FAT/fs_fat.c **** *                   deletion can always be completed after a potential failure (even without journa
 704:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 705:rtos/uC-FS/FAT/fs_fat.c **** */
 706:rtos/uC-FS/FAT/fs_fat.c **** 
 707:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 708:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_CLUS_NBR  FS_FAT_ClusChainAlloc (FS_VOL           *p_vol,
 709:rtos/uC-FS/FAT/fs_fat.c ****                                         FS_BUF           *p_buf,
 710:rtos/uC-FS/FAT/fs_fat.c ****                                         FS_FAT_CLUS_NBR   start_clus,
 711:rtos/uC-FS/FAT/fs_fat.c ****                                         FS_FAT_CLUS_NBR   nbr_clus,
 712:rtos/uC-FS/FAT/fs_fat.c ****                                         FS_ERR           *p_err)
 713:rtos/uC-FS/FAT/fs_fat.c **** {
 714:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
ARM GAS  /tmp/ccazZ5Hl.s 			page 14


 715:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   rem_clus;
 716:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
 717:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 718:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       is_new_chain;
 719:rtos/uC-FS/FAT/fs_fat.c **** 
 720:rtos/uC-FS/FAT/fs_fat.c **** 
 721:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data   = (FS_FAT_DATA  *)p_vol->DataPtr;
 722:rtos/uC-FS/FAT/fs_fat.c ****     rem_clus     =  nbr_clus;
 723:rtos/uC-FS/FAT/fs_fat.c ****     is_new_chain =  DEF_NO;
 724:rtos/uC-FS/FAT/fs_fat.c **** 
 725:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_LOG(("FS_FAT_ClusChainAlloc(): Need to allocate a chain of %08X cluster from cluster (
 726:rtos/uC-FS/FAT/fs_fat.c **** 
 727:rtos/uC-FS/FAT/fs_fat.c **** 
 728:rtos/uC-FS/FAT/fs_fat.c ****     if (nbr_clus == 0u) {                                       /* If no clus need to be alloc'd ..
 729:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
 730:rtos/uC-FS/FAT/fs_fat.c ****         return (start_clus);                                    /* ... ret successfully.           
 731:rtos/uC-FS/FAT/fs_fat.c ****     }
 732:rtos/uC-FS/FAT/fs_fat.c **** 
 733:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- FIND START CLU
 734:rtos/uC-FS/FAT/fs_fat.c ****     if (start_clus == 0u) {                                     /* If new chain, find start clus.  
 735:rtos/uC-FS/FAT/fs_fat.c ****         start_clus = FS_FAT_ClusFreeFind(p_vol,
 736:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 737:rtos/uC-FS/FAT/fs_fat.c ****                                          p_err);
 738:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
 739:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 740:rtos/uC-FS/FAT/fs_fat.c ****         }
 741:rtos/uC-FS/FAT/fs_fat.c **** 
 742:rtos/uC-FS/FAT/fs_fat.c ****         is_new_chain = DEF_YES;
 743:rtos/uC-FS/FAT/fs_fat.c ****         rem_clus--;
 744:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_LOG(("FS_FAT_ClusChainAlloc(): The new chain will start with cluster (%08X).\r\n",
 745:rtos/uC-FS/FAT/fs_fat.c ****     }
 746:rtos/uC-FS/FAT/fs_fat.c **** 
 747:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* -------------- GET FAT ENTRY FOR
 748:rtos/uC-FS/FAT/fs_fat.c ****     next_clus = p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol,   /* Rd next clus.                   
 749:rtos/uC-FS/FAT/fs_fat.c ****                                                        p_buf,
 750:rtos/uC-FS/FAT/fs_fat.c ****                                                        start_clus,
 751:rtos/uC-FS/FAT/fs_fat.c ****                                                        p_err);
 752:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
 753:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 754:rtos/uC-FS/FAT/fs_fat.c ****     }
 755:rtos/uC-FS/FAT/fs_fat.c **** 
 756:rtos/uC-FS/FAT/fs_fat.c ****     if (next_clus != 0u) {                                      /* Next clus alloc'd.              
 757:rtos/uC-FS/FAT/fs_fat.c **** 
 758:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus < FS_FAT_MIN_CLUS_NBR) {                  /* Invalid clus nbr.               
 759:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is invalid (%08X)
 760:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_SYS_CLUS_INVALID;
 761:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 762:rtos/uC-FS/FAT/fs_fat.c ****         }
 763:rtos/uC-FS/FAT/fs_fat.c **** 
 764:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus < p_fat_data->MaxClusNbr) {               /* Next clus exists.               
 765:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_NONE;
 766:rtos/uC-FS/FAT/fs_fat.c ****             return (next_clus);
 767:rtos/uC-FS/FAT/fs_fat.c ****         }
 768:rtos/uC-FS/FAT/fs_fat.c **** 
 769:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus < p_fat_data->FAT_TypeAPI_Ptr->ClusBad) { /* Invalid clus nbr.               
 770:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is invalid (%08X)
 771:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_SYS_CLUS_INVALID;
ARM GAS  /tmp/ccazZ5Hl.s 			page 15


 772:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 773:rtos/uC-FS/FAT/fs_fat.c ****         }
 774:rtos/uC-FS/FAT/fs_fat.c **** 
 775:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus == p_fat_data->FAT_TypeAPI_Ptr->ClusBad) {/* Clus is bad.                    
 776:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is bad (%08X).\r\
 777:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_SYS_CLUS_CHAIN_END;
 778:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 779:rtos/uC-FS/FAT/fs_fat.c ****         }
 780:rtos/uC-FS/FAT/fs_fat.c **** 
 781:rtos/uC-FS/FAT/fs_fat.c ****     }                                                           /* Otherwise, clus is EOC or not al
 782:rtos/uC-FS/FAT/fs_fat.c **** 
 783:rtos/uC-FS/FAT/fs_fat.c **** 
 784:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- ENTER JOURNA
 785:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
 786:rtos/uC-FS/FAT/fs_fat.c ****     if (DEF_BIT_IS_SET(p_fat_data->JournalState, FS_FAT_JOURNAL_STATE_REPLAY) == DEF_NO) {
 787:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_JournalEnterClusChainAlloc(p_vol,
 788:rtos/uC-FS/FAT/fs_fat.c ****                                           p_buf,
 789:rtos/uC-FS/FAT/fs_fat.c ****                                           start_clus,
 790:rtos/uC-FS/FAT/fs_fat.c ****                                           is_new_chain,
 791:rtos/uC-FS/FAT/fs_fat.c ****                                           p_err);
 792:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
 793:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 794:rtos/uC-FS/FAT/fs_fat.c ****         }
 795:rtos/uC-FS/FAT/fs_fat.c ****     }
 796:rtos/uC-FS/FAT/fs_fat.c **** #endif
 797:rtos/uC-FS/FAT/fs_fat.c **** 
 798:rtos/uC-FS/FAT/fs_fat.c **** 
 799:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- ALLOC CLUS CHA
 800:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus = start_clus;
 801:rtos/uC-FS/FAT/fs_fat.c ****     while (rem_clus > 0u) {
 802:rtos/uC-FS/FAT/fs_fat.c **** 
 803:rtos/uC-FS/FAT/fs_fat.c ****         next_clus = FS_FAT_ClusFreeFind(p_vol,                  /* Find next clus in chain.        
 804:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
 805:rtos/uC-FS/FAT/fs_fat.c ****                                         p_err);
 806:rtos/uC-FS/FAT/fs_fat.c **** 
 807:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------- REWIND ALLOC IF NO MORE 
 808:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus == cur_clus) {
 809:rtos/uC-FS/FAT/fs_fat.c ****            FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): No free FAT clus could be found.\r\n"));
 810:rtos/uC-FS/FAT/fs_fat.c ****            FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Reverting partial allocation.\r\n"));
 811:rtos/uC-FS/FAT/fs_fat.c ****            FS_FAT_ClusChainReverseDel(p_vol,                    /* Del partially alloc'd clus chain
 812:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 813:rtos/uC-FS/FAT/fs_fat.c ****                                       start_clus,
 814:rtos/uC-FS/FAT/fs_fat.c ****                                       is_new_chain,
 815:rtos/uC-FS/FAT/fs_fat.c ****                                       p_err);
 816:rtos/uC-FS/FAT/fs_fat.c ****            if (*p_err != FS_ERR_NONE){
 817:rtos/uC-FS/FAT/fs_fat.c ****                return (0u);
 818:rtos/uC-FS/FAT/fs_fat.c ****            }
 819:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_DEV_FULL;
 820:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 821:rtos/uC-FS/FAT/fs_fat.c ****         }
 822:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
 823:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 824:rtos/uC-FS/FAT/fs_fat.c ****         }
 825:rtos/uC-FS/FAT/fs_fat.c **** 
 826:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_LOG(("FS_FAT_ClusChainAlloc(): Next cluster in chain is (%08X).\r\n", next_clus));
 827:rtos/uC-FS/FAT/fs_fat.c **** 
 828:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr->ClusValWr(p_vol,           /* Update FAT chain.               
ARM GAS  /tmp/ccazZ5Hl.s 			page 16


 829:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 830:rtos/uC-FS/FAT/fs_fat.c ****                                                cur_clus,
 831:rtos/uC-FS/FAT/fs_fat.c ****                                                next_clus,
 832:rtos/uC-FS/FAT/fs_fat.c ****                                                p_err);
 833:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
 834:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 835:rtos/uC-FS/FAT/fs_fat.c ****         }
 836:rtos/uC-FS/FAT/fs_fat.c **** 
 837:rtos/uC-FS/FAT/fs_fat.c ****         cur_clus = next_clus;
 838:rtos/uC-FS/FAT/fs_fat.c ****         rem_clus--;
 839:rtos/uC-FS/FAT/fs_fat.c ****     }
 840:rtos/uC-FS/FAT/fs_fat.c **** 
 841:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT_TypeAPI_Ptr->ClusValWr(p_vol,               /* Update FAT chain (EOC).         
 842:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 843:rtos/uC-FS/FAT/fs_fat.c ****                                            cur_clus,
 844:rtos/uC-FS/FAT/fs_fat.c ****                                            p_fat_data->FAT_TypeAPI_Ptr->ClusEOF,
 845:rtos/uC-FS/FAT/fs_fat.c ****                                            p_err);
 846:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
 847:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 848:rtos/uC-FS/FAT/fs_fat.c ****     }
 849:rtos/uC-FS/FAT/fs_fat.c **** 
 850:rtos/uC-FS/FAT/fs_fat.c **** 
 851:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- UPDATE & RTN
 852:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_LOG(("FS_FAT_ClusChainAlloc(): New clus chain alloc'd: %d clusters allocated from star
 853:rtos/uC-FS/FAT/fs_fat.c ****     FS_CTR_STAT_INC(p_fat_data->StatAllocClusCtr);
 854:rtos/uC-FS/FAT/fs_fat.c ****     if (p_fat_data->QueryInfoValid == DEF_YES) {                /* Update query info.              
 855:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->QueryFreeClusCnt -= nbr_clus;
 856:rtos/uC-FS/FAT/fs_fat.c ****     }
 857:rtos/uC-FS/FAT/fs_fat.c **** 
 858:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 859:rtos/uC-FS/FAT/fs_fat.c ****     return (start_clus);
 860:rtos/uC-FS/FAT/fs_fat.c **** }
 861:rtos/uC-FS/FAT/fs_fat.c **** #endif
 862:rtos/uC-FS/FAT/fs_fat.c **** 
 863:rtos/uC-FS/FAT/fs_fat.c **** 
 864:rtos/uC-FS/FAT/fs_fat.c **** /*
 865:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 866:rtos/uC-FS/FAT/fs_fat.c **** *                                         FS_FAT_ClusChainDel()
 867:rtos/uC-FS/FAT/fs_fat.c **** *
 868:rtos/uC-FS/FAT/fs_fat.c **** * Description : Forward delete FAT cluster chain.
 869:rtos/uC-FS/FAT/fs_fat.c **** *
 870:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
 871:rtos/uC-FS/FAT/fs_fat.c **** *
 872:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
 873:rtos/uC-FS/FAT/fs_fat.c **** *
 874:rtos/uC-FS/FAT/fs_fat.c **** *               start_clus  First cluster of the cluster chain.
 875:rtos/uC-FS/FAT/fs_fat.c **** *
 876:rtos/uC-FS/FAT/fs_fat.c **** *               del_first   Indicates whether first cluster should be deleted :
 877:rtos/uC-FS/FAT/fs_fat.c **** *
 878:rtos/uC-FS/FAT/fs_fat.c **** *                               DEF_NO,  if first clus will be marked EOF.
 879:rtos/uC-FS/FAT/fs_fat.c **** *                               DEF_YES, if first clus will be marked free.
 880:rtos/uC-FS/FAT/fs_fat.c **** *
 881:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 882:rtos/uC-FS/FAT/fs_fat.c **** *
 883:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE          Cluster chain deleted.
 884:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_INVALID_ARG   Invalid 'start_clus' parameter.
 885:rtos/uC-FS/FAT/fs_fat.c **** *
ARM GAS  /tmp/ccazZ5Hl.s 			page 17


 886:rtos/uC-FS/FAT/fs_fat.c **** *                               --------------RETURNED BY p_fat_data->FAT_TypeAPI_Ptr->ClusValWr()-
 887:rtos/uC-FS/FAT/fs_fat.c **** *                               See p_fat_data->FAT_TypeAPI_Ptr->ClusValWr() for additional return 
 888:rtos/uC-FS/FAT/fs_fat.c **** *
 889:rtos/uC-FS/FAT/fs_fat.c **** *                               --------------RETURNED BY p_fat_data->FAT_TypeAPI_Ptr->ClusValRd()-
 890:rtos/uC-FS/FAT/fs_fat.c **** *                               See p_fat_data->FAT_TypeAPI_Ptr->ClusValRd() for additional return 
 891:rtos/uC-FS/FAT/fs_fat.c **** *
 892:rtos/uC-FS/FAT/fs_fat.c **** *                               ---------------------RETURNED BY FSVol_ReleaseLocked()-------------
 893:rtos/uC-FS/FAT/fs_fat.c **** *                               See FSVol_ReleaseLocked() for additional return error codes.
 894:rtos/uC-FS/FAT/fs_fat.c **** *
 895:rtos/uC-FS/FAT/fs_fat.c **** *                               ---------------RETURNED BY FS_FAT_JournalEnterClusChainDel()-------
 896:rtos/uC-FS/FAT/fs_fat.c **** *                               See FS_FAT_JournalEnterClusChainDel() for additional return error c
 897:rtos/uC-FS/FAT/fs_fat.c **** *
 898:rtos/uC-FS/FAT/fs_fat.c **** *                               --------------------RETURNED BY FS_FAT_ClusChainEndFind()----------
 899:rtos/uC-FS/FAT/fs_fat.c **** *                               See FS_FAT_ClusChainEndFind() for additional return error codes.
 900:rtos/uC-FS/FAT/fs_fat.c **** *
 901:rtos/uC-FS/FAT/fs_fat.c **** *
 902:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Number of clusters deleted.
 903:rtos/uC-FS/FAT/fs_fat.c **** *
 904:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) All clusters located after 'start_clus' will be deleted, that is, until an end 
 905:rtos/uC-FS/FAT/fs_fat.c **** *                   chain or an invalid cluster is found. In both cases, no error is returned.
 906:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
 907:rtos/uC-FS/FAT/fs_fat.c **** */
 908:rtos/uC-FS/FAT/fs_fat.c **** 
 909:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 910:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_CLUS_NBR  FS_FAT_ClusChainDel (FS_VOL           *p_vol,
 911:rtos/uC-FS/FAT/fs_fat.c ****                                       FS_BUF           *p_buf,
 912:rtos/uC-FS/FAT/fs_fat.c ****                                       FS_FAT_CLUS_NBR   start_clus,
 913:rtos/uC-FS/FAT/fs_fat.c ****                                       CPU_BOOLEAN       del_first,
 914:rtos/uC-FS/FAT/fs_fat.c ****                                       FS_ERR           *p_err)
 915:rtos/uC-FS/FAT/fs_fat.c **** {
 916:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 917:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
 918:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 919:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus_cnt;
 920:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    cur_sec;
 921:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   new_fat_entry;
 922:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       del;
 923:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
 924:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   len;
 925:rtos/uC-FS/FAT/fs_fat.c **** #endif
 926:rtos/uC-FS/FAT/fs_fat.c **** 
 927:rtos/uC-FS/FAT/fs_fat.c **** 
 928:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data  = (FS_FAT_DATA *)p_vol->DataPtr;
 929:rtos/uC-FS/FAT/fs_fat.c ****     del         =  del_first;
 930:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus    =  start_clus;
 931:rtos/uC-FS/FAT/fs_fat.c ****    *p_err       =  FS_ERR_NONE;
 932:rtos/uC-FS/FAT/fs_fat.c **** 
 933:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------- VALIDATE START C
 934:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
 935:rtos/uC-FS/FAT/fs_fat.c ****     if (FS_FAT_IS_VALID_CLUS(p_fat_data, start_clus) == DEF_NO) {
 936:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainDel(): Invalid start clus.\r\n"));
 937:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
 938:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 939:rtos/uC-FS/FAT/fs_fat.c ****     }
 940:rtos/uC-FS/FAT/fs_fat.c **** #endif
 941:rtos/uC-FS/FAT/fs_fat.c **** 
 942:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ JOURNAL ENTER
ARM GAS  /tmp/ccazZ5Hl.s 			page 18


 943:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
 944:rtos/uC-FS/FAT/fs_fat.c ****     if (DEF_BIT_IS_SET(p_fat_data->JournalState, FS_FAT_JOURNAL_STATE_REPLAY) == DEF_NO) {
 945:rtos/uC-FS/FAT/fs_fat.c ****        (void)FS_FAT_ClusChainEndFind(p_vol,                     /* Cnt clus's.                     
 946:rtos/uC-FS/FAT/fs_fat.c ****                                      p_buf,
 947:rtos/uC-FS/FAT/fs_fat.c ****                                      start_clus,
 948:rtos/uC-FS/FAT/fs_fat.c ****                                     &clus_cnt,
 949:rtos/uC-FS/FAT/fs_fat.c ****                                      p_err);
 950:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err == FS_ERR_NONE) {                            /* If clus chain has an EOC ...    
 951:rtos/uC-FS/FAT/fs_fat.c ****             len = clus_cnt + 1u;                                /* ... clus chain len is the nbr of
 952:rtos/uC-FS/FAT/fs_fat.c ****         } else if (*p_err == FS_ERR_SYS_CLUS_INVALID) {         /* If clus chain has no EOC ...    
 953:rtos/uC-FS/FAT/fs_fat.c ****             len = clus_cnt;                                     /* ... clus chain len equals the nb
 954:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 955:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 956:rtos/uC-FS/FAT/fs_fat.c ****         }
 957:rtos/uC-FS/FAT/fs_fat.c **** 
 958:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_JournalEnterClusChainDel(p_vol,                  /* Add journal log.                
 959:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
 960:rtos/uC-FS/FAT/fs_fat.c ****                                         start_clus,
 961:rtos/uC-FS/FAT/fs_fat.c ****                                         len,
 962:rtos/uC-FS/FAT/fs_fat.c ****                                         del_first,
 963:rtos/uC-FS/FAT/fs_fat.c ****                                         p_err);
 964:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
 965:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 966:rtos/uC-FS/FAT/fs_fat.c ****         }
 967:rtos/uC-FS/FAT/fs_fat.c ****     }
 968:rtos/uC-FS/FAT/fs_fat.c **** #endif
 969:rtos/uC-FS/FAT/fs_fat.c **** 
 970:rtos/uC-FS/FAT/fs_fat.c **** 
 971:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- FREE CLUS'S 
 972:rtos/uC-FS/FAT/fs_fat.c ****     clus_cnt = 0u;
 973:rtos/uC-FS/FAT/fs_fat.c ****     do {
 974:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rd next FAT entry.              
 975:rtos/uC-FS/FAT/fs_fat.c ****         next_clus = p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol,
 976:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 977:rtos/uC-FS/FAT/fs_fat.c ****                                                            cur_clus,
 978:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_err);
 979:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
 980:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 981:rtos/uC-FS/FAT/fs_fat.c ****         }
 982:rtos/uC-FS/FAT/fs_fat.c **** 
 983:rtos/uC-FS/FAT/fs_fat.c ****         if (del == DEF_NO) {                                    /* If first clus must be preserved 
 984:rtos/uC-FS/FAT/fs_fat.c ****             del = DEF_YES;
 985:rtos/uC-FS/FAT/fs_fat.c ****             new_fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusEOF;   /*                             
 986:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus mark'd as EOC: %d.\r\n", cur_clus));
 987:rtos/uC-FS/FAT/fs_fat.c **** 
 988:rtos/uC-FS/FAT/fs_fat.c ****         } else {                                                /* If clus must be del'd ...       
 989:rtos/uC-FS/FAT/fs_fat.c ****             new_fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusFree;
 990:rtos/uC-FS/FAT/fs_fat.c ****             cur_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, cur_clus);     /*                   ... set to
 991:rtos/uC-FS/FAT/fs_fat.c **** 
 992:rtos/uC-FS/FAT/fs_fat.c ****             FSVol_ReleaseLocked(p_vol,                          /* #### UCFS-328                   
 993:rtos/uC-FS/FAT/fs_fat.c ****                                 cur_sec,
 994:rtos/uC-FS/FAT/fs_fat.c ****                                 p_fat_data->ClusSize_sec,
 995:rtos/uC-FS/FAT/fs_fat.c ****                                 p_err);
 996:rtos/uC-FS/FAT/fs_fat.c **** 
 997:rtos/uC-FS/FAT/fs_fat.c ****             if (*p_err != FS_ERR_NONE) {
 998:rtos/uC-FS/FAT/fs_fat.c ****                 return (0u);
 999:rtos/uC-FS/FAT/fs_fat.c ****             }
ARM GAS  /tmp/ccazZ5Hl.s 			page 19


1000:rtos/uC-FS/FAT/fs_fat.c **** 
1001:rtos/uC-FS/FAT/fs_fat.c ****             if (p_fat_data->QueryInfoValid == DEF_YES) {
1002:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->QueryFreeClusCnt++;
1003:rtos/uC-FS/FAT/fs_fat.c ****             }
1004:rtos/uC-FS/FAT/fs_fat.c **** 
1005:rtos/uC-FS/FAT/fs_fat.c ****             FS_CTR_STAT_INC(p_fat_data->StatFreeClusCtr);
1006:rtos/uC-FS/FAT/fs_fat.c ****             clus_cnt++;                                         /* Inc del clus cnt.               
1007:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus free'd: %d.\r\n", cur_clus));
1008:rtos/uC-FS/FAT/fs_fat.c ****         }
1009:rtos/uC-FS/FAT/fs_fat.c **** 
1010:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr->ClusValWr(p_vol,           /* Wr FAT entry.                   
1011:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
1012:rtos/uC-FS/FAT/fs_fat.c ****                                                cur_clus,
1013:rtos/uC-FS/FAT/fs_fat.c ****                                                new_fat_entry,
1014:rtos/uC-FS/FAT/fs_fat.c ****                                                p_err);
1015:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
1016:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
1017:rtos/uC-FS/FAT/fs_fat.c ****         }
1018:rtos/uC-FS/FAT/fs_fat.c **** 
1019:rtos/uC-FS/FAT/fs_fat.c ****         cur_clus  = next_clus;                                  /* Update cur clus.                
1020:rtos/uC-FS/FAT/fs_fat.c **** 
1021:rtos/uC-FS/FAT/fs_fat.c ****     } while (FS_FAT_IS_VALID_CLUS(p_fat_data, cur_clus) == DEF_YES);
1022:rtos/uC-FS/FAT/fs_fat.c **** 
1023:rtos/uC-FS/FAT/fs_fat.c **** 
1024:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------------- ALL CLUS'S FREE
1025:rtos/uC-FS/FAT/fs_fat.c ****     if (cur_clus >= p_fat_data->FAT_TypeAPI_Ptr->ClusEOF) {
1026:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_LOG(("FS_FAT_ClusChainDel(): %d FAT clus's free'd upon reaching clus chain end.\r\
1027:rtos/uC-FS/FAT/fs_fat.c ****     } else {
1028:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainDel(): %d FAT clus's free'd upon reaching invalid clus.\r\n"
1029:rtos/uC-FS/FAT/fs_fat.c ****     }
1030:rtos/uC-FS/FAT/fs_fat.c **** 
1031:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
1032:rtos/uC-FS/FAT/fs_fat.c ****     return (clus_cnt);
1033:rtos/uC-FS/FAT/fs_fat.c **** }
1034:rtos/uC-FS/FAT/fs_fat.c **** #endif
1035:rtos/uC-FS/FAT/fs_fat.c **** 
1036:rtos/uC-FS/FAT/fs_fat.c **** 
1037:rtos/uC-FS/FAT/fs_fat.c **** /*
1038:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1039:rtos/uC-FS/FAT/fs_fat.c **** *                                         FS_FAT_ClusChainReverseDel()
1040:rtos/uC-FS/FAT/fs_fat.c **** *
1041:rtos/uC-FS/FAT/fs_fat.c **** * Description : Reverse delete FAT cluster chain.
1042:rtos/uC-FS/FAT/fs_fat.c **** *
1043:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
1044:rtos/uC-FS/FAT/fs_fat.c **** *
1045:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
1046:rtos/uC-FS/FAT/fs_fat.c **** *
1047:rtos/uC-FS/FAT/fs_fat.c **** *               start_clus  First cluster of the cluster chain.
1048:rtos/uC-FS/FAT/fs_fat.c **** *
1049:rtos/uC-FS/FAT/fs_fat.c **** *               del_first   Indicates whether first cluster should be deleted :
1050:rtos/uC-FS/FAT/fs_fat.c **** *
1051:rtos/uC-FS/FAT/fs_fat.c **** *                               DEF_NO,  if first clus will be marked EOF.
1052:rtos/uC-FS/FAT/fs_fat.c **** *                               DEF_YES, if first clus will be marked free.
1053:rtos/uC-FS/FAT/fs_fat.c **** *
1054:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1055:rtos/uC-FS/FAT/fs_fat.c **** *
1056:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE           Cluster chain deleted.
ARM GAS  /tmp/ccazZ5Hl.s 			page 20


1057:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_INVALID_ARG    Invalid 'start_clus' parameter.
1058:rtos/uC-FS/FAT/fs_fat.c **** *
1059:rtos/uC-FS/FAT/fs_fat.c **** *                               -------------RETURNED BY p_fat_data->FAT_TypeAPI_Ptr->ClusValWr()--
1060:rtos/uC-FS/FAT/fs_fat.c **** *                               See p_fat_data->FAT_TypeAPI_Ptr->ClusValWr() for additional return 
1061:rtos/uC-FS/FAT/fs_fat.c **** *
1062:rtos/uC-FS/FAT/fs_fat.c **** *                               ----------------------RETURNED BY FSVol_ReleaseLocked()------------
1063:rtos/uC-FS/FAT/fs_fat.c **** *                               See FSVol_ReleaseLocked() for additional return error codes.
1064:rtos/uC-FS/FAT/fs_fat.c **** *
1065:rtos/uC-FS/FAT/fs_fat.c **** *                               --------------------RETURNED BY FS_FAT_ClusChainEndFind()----------
1066:rtos/uC-FS/FAT/fs_fat.c **** *                               See FS_FAT_ClusChainEndFind() for additional return error codes.
1067:rtos/uC-FS/FAT/fs_fat.c **** *
1068:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
1069:rtos/uC-FS/FAT/fs_fat.c **** *
1070:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
1071:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1072:rtos/uC-FS/FAT/fs_fat.c **** */
1073:rtos/uC-FS/FAT/fs_fat.c **** 
1074:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1075:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_ClusChainReverseDel (FS_VOL           *p_vol,
1076:rtos/uC-FS/FAT/fs_fat.c ****                                   FS_BUF           *p_buf,
1077:rtos/uC-FS/FAT/fs_fat.c ****                                   FS_FAT_CLUS_NBR   start_clus,
1078:rtos/uC-FS/FAT/fs_fat.c ****                                   CPU_BOOLEAN       del_first,
1079:rtos/uC-FS/FAT/fs_fat.c ****                                   FS_ERR           *p_err)
1080:rtos/uC-FS/FAT/fs_fat.c **** {
1081:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
1082:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
1083:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    cur_sec;
1084:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   new_fat_entry;
1085:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
1086:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus_cnt;
1087:rtos/uC-FS/FAT/fs_fat.c **** #endif
1088:rtos/uC-FS/FAT/fs_fat.c **** 
1089:rtos/uC-FS/FAT/fs_fat.c **** 
1090:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data  = (FS_FAT_DATA *)p_vol->DataPtr;
1091:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus    =  start_clus;
1092:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
1093:rtos/uC-FS/FAT/fs_fat.c ****     clus_cnt    =  0u;
1094:rtos/uC-FS/FAT/fs_fat.c **** #endif
1095:rtos/uC-FS/FAT/fs_fat.c **** 
1096:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------- VALIDATE START C
1097:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
1098:rtos/uC-FS/FAT/fs_fat.c ****     if (FS_FAT_IS_VALID_CLUS(p_fat_data, start_clus) == DEF_NO) {
1099:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseDel(): Invalid start clus.\r\n"));
1100:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
1101:rtos/uC-FS/FAT/fs_fat.c ****         return;
1102:rtos/uC-FS/FAT/fs_fat.c ****     }
1103:rtos/uC-FS/FAT/fs_fat.c **** #endif
1104:rtos/uC-FS/FAT/fs_fat.c **** 
1105:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- FREE CLUS'S 
1106:rtos/uC-FS/FAT/fs_fat.c ****     do {
1107:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Find chain end.                 
1108:rtos/uC-FS/FAT/fs_fat.c ****         cur_clus = FS_FAT_ClusChainEndFind(p_vol,
1109:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
1110:rtos/uC-FS/FAT/fs_fat.c ****                                            start_clus,
1111:rtos/uC-FS/FAT/fs_fat.c ****                                            DEF_NULL,
1112:rtos/uC-FS/FAT/fs_fat.c ****                                            p_err);
1113:rtos/uC-FS/FAT/fs_fat.c ****         if ((*p_err != FS_ERR_NONE) &&
ARM GAS  /tmp/ccazZ5Hl.s 			page 21


1114:rtos/uC-FS/FAT/fs_fat.c ****             (*p_err != FS_ERR_SYS_CLUS_INVALID)) {
1115:rtos/uC-FS/FAT/fs_fat.c ****             return;
1116:rtos/uC-FS/FAT/fs_fat.c ****         }
1117:rtos/uC-FS/FAT/fs_fat.c ****         if ((*p_err == FS_ERR_SYS_CLUS_INVALID) &&              /* If start clus is invalid ...    
1118:rtos/uC-FS/FAT/fs_fat.c ****             ( cur_clus == 0u)) {
1119:rtos/uC-FS/FAT/fs_fat.c ****             cur_clus = start_clus;                              /* ... go on to make sure it is eit
1120:rtos/uC-FS/FAT/fs_fat.c ****         }
1121:rtos/uC-FS/FAT/fs_fat.c **** 
1122:rtos/uC-FS/FAT/fs_fat.c ****         if ((cur_clus == start_clus) && (del_first == DEF_NO)) {    /* If start clus must be preser
1123:rtos/uC-FS/FAT/fs_fat.c ****             new_fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusEOF;   /*                             
1124:rtos/uC-FS/FAT/fs_fat.c ****         } else {
1125:rtos/uC-FS/FAT/fs_fat.c ****             new_fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusFree;  /* If clus must be del'd ...   
1126:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus free'd: %d.\r\n", cur_clus));/*   ... se
1127:rtos/uC-FS/FAT/fs_fat.c **** 
1128:rtos/uC-FS/FAT/fs_fat.c ****             cur_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, cur_clus);
1129:rtos/uC-FS/FAT/fs_fat.c ****             FSVol_ReleaseLocked(p_vol,                          /* #### UCFS-328                   
1130:rtos/uC-FS/FAT/fs_fat.c ****                                 cur_sec,
1131:rtos/uC-FS/FAT/fs_fat.c ****                                 p_fat_data->ClusSize_sec,
1132:rtos/uC-FS/FAT/fs_fat.c ****                                 p_err);
1133:rtos/uC-FS/FAT/fs_fat.c ****             if (*p_err != FS_ERR_NONE) {
1134:rtos/uC-FS/FAT/fs_fat.c ****                 return;
1135:rtos/uC-FS/FAT/fs_fat.c ****             }
1136:rtos/uC-FS/FAT/fs_fat.c **** 
1137:rtos/uC-FS/FAT/fs_fat.c ****             if (p_fat_data->QueryInfoValid == DEF_YES) {
1138:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->QueryFreeClusCnt++;
1139:rtos/uC-FS/FAT/fs_fat.c ****             }
1140:rtos/uC-FS/FAT/fs_fat.c **** 
1141:rtos/uC-FS/FAT/fs_fat.c ****             FS_CTR_STAT_INC(p_fat_data->StatFreeClusCtr);
1142:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
1143:rtos/uC-FS/FAT/fs_fat.c ****             clus_cnt++;                                         /* Inc clus cnt.                   
1144:rtos/uC-FS/FAT/fs_fat.c **** #endif
1145:rtos/uC-FS/FAT/fs_fat.c ****         }
1146:rtos/uC-FS/FAT/fs_fat.c **** 
1147:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- WR FAT ENTRY
1148:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr->ClusValWr(p_vol,
1149:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
1150:rtos/uC-FS/FAT/fs_fat.c ****                                                cur_clus,
1151:rtos/uC-FS/FAT/fs_fat.c ****                                                new_fat_entry,
1152:rtos/uC-FS/FAT/fs_fat.c ****                                                p_err);
1153:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
1154:rtos/uC-FS/FAT/fs_fat.c ****             return;
1155:rtos/uC-FS/FAT/fs_fat.c ****         }
1156:rtos/uC-FS/FAT/fs_fat.c **** 
1157:rtos/uC-FS/FAT/fs_fat.c ****     } while ( start_clus != cur_clus);                          /* Start over until start clus has 
1158:rtos/uC-FS/FAT/fs_fat.c **** 
1159:rtos/uC-FS/FAT/fs_fat.c **** 
1160:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------------- ALL CLUS'S FREE
1161:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT %d clus's free'd.\r\n", clus_cnt));
1162:rtos/uC-FS/FAT/fs_fat.c **** }
1163:rtos/uC-FS/FAT/fs_fat.c **** #endif
1164:rtos/uC-FS/FAT/fs_fat.c **** 
1165:rtos/uC-FS/FAT/fs_fat.c **** 
1166:rtos/uC-FS/FAT/fs_fat.c **** /*
1167:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1168:rtos/uC-FS/FAT/fs_fat.c **** *                                      FS_FAT_ClusChainFollow()
1169:rtos/uC-FS/FAT/fs_fat.c **** *
1170:rtos/uC-FS/FAT/fs_fat.c **** * Description : Follow FAT cluster chain.
ARM GAS  /tmp/ccazZ5Hl.s 			page 22


1171:rtos/uC-FS/FAT/fs_fat.c **** *
1172:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
1173:rtos/uC-FS/FAT/fs_fat.c **** *
1174:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
1175:rtos/uC-FS/FAT/fs_fat.c **** *
1176:rtos/uC-FS/FAT/fs_fat.c **** *               start_clus  Cluster to start following from.
1177:rtos/uC-FS/FAT/fs_fat.c **** *
1178:rtos/uC-FS/FAT/fs_fat.c **** *               len         Number of clusters to follow.
1179:rtos/uC-FS/FAT/fs_fat.c **** *
1180:rtos/uC-FS/FAT/fs_fat.c **** *               p_clus_cnt  Pointer to variable that will receive the total number of clus followed
1181:rtos/uC-FS/FAT/fs_fat.c **** *
1182:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1183:rtos/uC-FS/FAT/fs_fat.c **** *
1184:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE                        'len' clus followed.
1185:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_CHAIN_END_EARLY     Cluster chain ended early.
1186:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_INVALID             Invalid cluster found.
1187:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_INVALID_ARG                  Invalid 'start_clus' parameter.
1188:rtos/uC-FS/FAT/fs_fat.c **** *
1189:rtos/uC-FS/FAT/fs_fat.c **** *                               --------------RETURNED BY p_fat_data->FAT_TypeAPI_Ptr->ClusValRd()-
1190:rtos/uC-FS/FAT/fs_fat.c **** *                               See p_fat_data->FAT_TypeAPI_Ptr->ClusValRd() for additional return 
1191:rtos/uC-FS/FAT/fs_fat.c **** *
1192:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Cluster number of the last valid cluster found.
1193:rtos/uC-FS/FAT/fs_fat.c **** *
1194:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) If 'len', the number of clusters to follow, is zero, the start cluster will be
1195:rtos/uC-FS/FAT/fs_fat.c **** *                   returned.  Otherwise, the cluster chain will be followed 'len' clusters or unti
1196:rtos/uC-FS/FAT/fs_fat.c **** *                   ends, starting at cluster 'start_clus'.
1197:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1198:rtos/uC-FS/FAT/fs_fat.c **** */
1199:rtos/uC-FS/FAT/fs_fat.c **** 
1200:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_CLUS_NBR  FS_FAT_ClusChainFollow (FS_VOL           *p_vol,
1201:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_BUF           *p_buf,
1202:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_CLUS_NBR   start_clus,
1203:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_CLUS_NBR   len,
1204:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_CLUS_NBR  *p_clus_cnt,
1205:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_ERR           *p_err)
1206:rtos/uC-FS/FAT/fs_fat.c **** {
1207:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
1208:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  *p_cnt;
1209:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   prev_clus;
1210:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
1211:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
1212:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cnt;
1213:rtos/uC-FS/FAT/fs_fat.c **** 
1214:rtos/uC-FS/FAT/fs_fat.c **** 
1215:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data  = (FS_FAT_DATA  *)p_vol->DataPtr;
1216:rtos/uC-FS/FAT/fs_fat.c ****     p_cnt       = (p_clus_cnt == DEF_NULL) ? &cnt : p_clus_cnt;
1217:rtos/uC-FS/FAT/fs_fat.c ****    *p_cnt       =  0u;
1218:rtos/uC-FS/FAT/fs_fat.c ****     prev_clus   =  0u;
1219:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus    =  start_clus;
1220:rtos/uC-FS/FAT/fs_fat.c ****     next_clus   =  start_clus;
1221:rtos/uC-FS/FAT/fs_fat.c **** 
1222:rtos/uC-FS/FAT/fs_fat.c **** 
1223:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------- VALIDATE START C
1224:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
1225:rtos/uC-FS/FAT/fs_fat.c ****     if (FS_FAT_IS_VALID_CLUS(p_fat_data, start_clus) == DEF_NO) {
1226:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainFollow(): Invalid start clus.\r\n"));
1227:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
ARM GAS  /tmp/ccazZ5Hl.s 			page 23


1228:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
1229:rtos/uC-FS/FAT/fs_fat.c ****     }
1230:rtos/uC-FS/FAT/fs_fat.c **** #endif
1231:rtos/uC-FS/FAT/fs_fat.c **** 
1232:rtos/uC-FS/FAT/fs_fat.c **** 
1233:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- FOLLOW CHAIN
1234:rtos/uC-FS/FAT/fs_fat.c ****     while(*p_cnt < len ) {
1235:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rd next FAT entry.              
1236:rtos/uC-FS/FAT/fs_fat.c ****         next_clus = p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol,
1237:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
1238:rtos/uC-FS/FAT/fs_fat.c ****                                                            cur_clus,
1239:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_err);
1240:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
1241:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
1242:rtos/uC-FS/FAT/fs_fat.c ****         }
1243:rtos/uC-FS/FAT/fs_fat.c **** 
1244:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ VALIDATE ENTR
1245:rtos/uC-FS/FAT/fs_fat.c ****         if (FS_FAT_IS_VALID_CLUS(p_fat_data, next_clus) == DEF_NO) {
1246:rtos/uC-FS/FAT/fs_fat.c ****             if (next_clus >= p_fat_data->FAT_TypeAPI_Ptr->ClusEOF) {
1247:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_SYS_CLUS_CHAIN_END_EARLY;        /* If EOC is found ...             
1248:rtos/uC-FS/FAT/fs_fat.c ****                 return (cur_clus);                              /* ... rtn cur clus nbr.           
1249:rtos/uC-FS/FAT/fs_fat.c ****             } else {
1250:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_SYS_CLUS_INVALID;                /* If invalid clus is found ...    
1251:rtos/uC-FS/FAT/fs_fat.c ****                 return (prev_clus);                             /* ... rtn prev clus nbr.          
1252:rtos/uC-FS/FAT/fs_fat.c ****             }
1253:rtos/uC-FS/FAT/fs_fat.c ****         }
1254:rtos/uC-FS/FAT/fs_fat.c **** 
1255:rtos/uC-FS/FAT/fs_fat.c ****       (*p_cnt)++;
1256:rtos/uC-FS/FAT/fs_fat.c ****         prev_clus = cur_clus;
1257:rtos/uC-FS/FAT/fs_fat.c ****         cur_clus  = next_clus;
1258:rtos/uC-FS/FAT/fs_fat.c ****     }
1259:rtos/uC-FS/FAT/fs_fat.c **** 
1260:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* 'len' clus followed.            
1261:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
1262:rtos/uC-FS/FAT/fs_fat.c ****     return (cur_clus);
1263:rtos/uC-FS/FAT/fs_fat.c **** }
1264:rtos/uC-FS/FAT/fs_fat.c **** 
1265:rtos/uC-FS/FAT/fs_fat.c **** 
1266:rtos/uC-FS/FAT/fs_fat.c **** /*
1267:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1268:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_FAT_ClusChainEndFind()
1269:rtos/uC-FS/FAT/fs_fat.c **** *
1270:rtos/uC-FS/FAT/fs_fat.c **** * Description : Follow FAT cluster chain until the end.
1271:rtos/uC-FS/FAT/fs_fat.c **** *
1272:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
1273:rtos/uC-FS/FAT/fs_fat.c **** *
1274:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
1275:rtos/uC-FS/FAT/fs_fat.c **** *
1276:rtos/uC-FS/FAT/fs_fat.c **** *               start_clus  Cluster to start following from.
1277:rtos/uC-FS/FAT/fs_fat.c **** *
1278:rtos/uC-FS/FAT/fs_fat.c **** *               p_clus_cnt  Pointer to variable that will receive the total number of clus followed
1279:rtos/uC-FS/FAT/fs_fat.c **** *
1280:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1281:rtos/uC-FS/FAT/fs_fat.c **** *
1282:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE                          Cluster chain followed until E
1283:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_INVALID              Cluster chain not EOC terminat
1284:rtos/uC-FS/FAT/fs_fat.c **** *
ARM GAS  /tmp/ccazZ5Hl.s 			page 24


1285:rtos/uC-FS/FAT/fs_fat.c **** *                               --------------RETURNED BY p_fat_data->FAT_TypeAPI_Ptr->ClusValRd()-
1286:rtos/uC-FS/FAT/fs_fat.c **** *                               See p_fat_data->FAT_TypeAPI_Ptr->ClusValRd() for additional return 
1287:rtos/uC-FS/FAT/fs_fat.c **** *
1288:rtos/uC-FS/FAT/fs_fat.c **** *
1289:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Last allocated cluster number.
1290:rtos/uC-FS/FAT/fs_fat.c **** *
1291:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
1292:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1293:rtos/uC-FS/FAT/fs_fat.c **** */
1294:rtos/uC-FS/FAT/fs_fat.c **** 
1295:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_CLUS_NBR  FS_FAT_ClusChainEndFind (FS_VOL           *p_vol,
1296:rtos/uC-FS/FAT/fs_fat.c ****                                           FS_BUF           *p_buf,
1297:rtos/uC-FS/FAT/fs_fat.c ****                                           FS_FAT_CLUS_NBR   start_clus,
1298:rtos/uC-FS/FAT/fs_fat.c ****                                           FS_FAT_CLUS_NBR  *p_clus_cnt,
1299:rtos/uC-FS/FAT/fs_fat.c ****                                           FS_ERR           *p_err)
1300:rtos/uC-FS/FAT/fs_fat.c **** {
1301:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  end_clus;
1302:rtos/uC-FS/FAT/fs_fat.c **** 
1303:rtos/uC-FS/FAT/fs_fat.c **** 
1304:rtos/uC-FS/FAT/fs_fat.c ****     end_clus = FS_FAT_ClusChainFollow(p_vol,
1305:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
1306:rtos/uC-FS/FAT/fs_fat.c ****                                       start_clus,
1307:rtos/uC-FS/FAT/fs_fat.c ****                      (FS_FAT_CLUS_NBR)-1,
1308:rtos/uC-FS/FAT/fs_fat.c ****                                       p_clus_cnt,
1309:rtos/uC-FS/FAT/fs_fat.c ****                                       p_err);
1310:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err == FS_ERR_SYS_CLUS_CHAIN_END_EARLY) {
1311:rtos/uC-FS/FAT/fs_fat.c ****         *p_err = FS_ERR_NONE;
1312:rtos/uC-FS/FAT/fs_fat.c ****     }
1313:rtos/uC-FS/FAT/fs_fat.c **** 
1314:rtos/uC-FS/FAT/fs_fat.c ****     return (end_clus);
1315:rtos/uC-FS/FAT/fs_fat.c **** }
1316:rtos/uC-FS/FAT/fs_fat.c **** 
1317:rtos/uC-FS/FAT/fs_fat.c **** 
1318:rtos/uC-FS/FAT/fs_fat.c **** /*
1319:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1320:rtos/uC-FS/FAT/fs_fat.c **** *                                      FS_FAT_ClusChainReverseFollow()
1321:rtos/uC-FS/FAT/fs_fat.c **** *
1322:rtos/uC-FS/FAT/fs_fat.c **** * Description : Reverse follow FAT cluster chain.
1323:rtos/uC-FS/FAT/fs_fat.c **** *
1324:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
1325:rtos/uC-FS/FAT/fs_fat.c **** *
1326:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
1327:rtos/uC-FS/FAT/fs_fat.c **** *
1328:rtos/uC-FS/FAT/fs_fat.c **** *               start_clus  Cluster to start following from.
1329:rtos/uC-FS/FAT/fs_fat.c **** *
1330:rtos/uC-FS/FAT/fs_fat.c **** *               stop_clus   Cluster to stop following at.
1331:rtos/uC-FS/FAT/fs_fat.c **** *
1332:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1333:rtos/uC-FS/FAT/fs_fat.c **** *
1334:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE           Cluster chain reverse followed.
1335:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_INVALID_ARG    Invalid 'start_clus' or 'stop_clus' parameter
1336:rtos/uC-FS/FAT/fs_fat.c **** *
1337:rtos/uC-FS/FAT/fs_fat.c **** *                               -------------RETURNED BY p_fat_data->FAT_TypeAPI_Ptr->ClusValRd()--
1338:rtos/uC-FS/FAT/fs_fat.c **** *                               See p_fat_data->FAT_TypeAPI_Ptr->ClusValRd() for additional return 
1339:rtos/uC-FS/FAT/fs_fat.c **** *
1340:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Cluster number of the last valid cluster found.
1341:rtos/uC-FS/FAT/fs_fat.c **** *
ARM GAS  /tmp/ccazZ5Hl.s 			page 25


1342:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) File allocation table is browsed backward, entry by entry, starting at the entr
1343:rtos/uC-FS/FAT/fs_fat.c **** *                   before the current known first cluster entry. Since cluster chains are mostly a
1344:rtos/uC-FS/FAT/fs_fat.c **** *                   forward, this allows many clusters to be followed within a single revolution ar
1345:rtos/uC-FS/FAT/fs_fat.c **** *                   file allocation table.
1346:rtos/uC-FS/FAT/fs_fat.c **** *
1347:rtos/uC-FS/FAT/fs_fat.c **** *               (2) If the entry lookup returns back to its starting point after wrapping around, t
1348:rtos/uC-FS/FAT/fs_fat.c **** *                   cluster points to the current target cluster and, therefore, the first cluster 
1349:rtos/uC-FS/FAT/fs_fat.c **** *                   chain has been found.
1350:rtos/uC-FS/FAT/fs_fat.c **** *
1351:rtos/uC-FS/FAT/fs_fat.c **** *               (3) No error is returned in case chain following ends before the stop cluster is re
1352:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1353:rtos/uC-FS/FAT/fs_fat.c **** */
1354:rtos/uC-FS/FAT/fs_fat.c **** 
1355:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_CLUS_NBR  FS_FAT_ClusChainReverseFollow (FS_VOL           *p_vol,
1356:rtos/uC-FS/FAT/fs_fat.c ****                                                 FS_BUF           *p_buf,
1357:rtos/uC-FS/FAT/fs_fat.c ****                                                 FS_FAT_CLUS_NBR   start_clus,
1358:rtos/uC-FS/FAT/fs_fat.c ****                                                 FS_FAT_CLUS_NBR   stop_clus,
1359:rtos/uC-FS/FAT/fs_fat.c ****                                                 FS_ERR           *p_err)
1360:rtos/uC-FS/FAT/fs_fat.c **** {
1361:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
1362:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
1363:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
1364:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   target_clus;
1365:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
1366:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   found_clus_cnt;
1367:rtos/uC-FS/FAT/fs_fat.c **** #endif
1368:rtos/uC-FS/FAT/fs_fat.c **** 
1369:rtos/uC-FS/FAT/fs_fat.c **** 
1370:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
1371:rtos/uC-FS/FAT/fs_fat.c **** 
1372:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------ VALIDATE START & ST
1373:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)
1374:rtos/uC-FS/FAT/fs_fat.c ****     if (FS_FAT_IS_VALID_CLUS(p_fat_data, start_clus) == DEF_NO) {
1375:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseFollow(): Invalid start clus.\r\n"));
1376:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
1377:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
1378:rtos/uC-FS/FAT/fs_fat.c ****     }
1379:rtos/uC-FS/FAT/fs_fat.c ****     if (FS_FAT_IS_VALID_CLUS(p_fat_data, stop_clus) == DEF_NO) {
1380:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseFollow(): Invalid stop clus.\r\n"));
1381:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
1382:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
1383:rtos/uC-FS/FAT/fs_fat.c ****     }
1384:rtos/uC-FS/FAT/fs_fat.c **** #endif
1385:rtos/uC-FS/FAT/fs_fat.c **** 
1386:rtos/uC-FS/FAT/fs_fat.c ****     target_clus    =  start_clus;
1387:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus       =  start_clus - 1u;
1388:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
1389:rtos/uC-FS/FAT/fs_fat.c ****     found_clus_cnt =  0u;
1390:rtos/uC-FS/FAT/fs_fat.c **** #endif
1391:rtos/uC-FS/FAT/fs_fat.c **** 
1392:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------------- PERFORM FAT LOO
1393:rtos/uC-FS/FAT/fs_fat.c ****     while (target_clus != stop_clus) {
1394:rtos/uC-FS/FAT/fs_fat.c **** 
1395:rtos/uC-FS/FAT/fs_fat.c ****         if (cur_clus < FS_FAT_MIN_CLUS_NBR) {                   /* Wrap clus nbr.                  
1396:rtos/uC-FS/FAT/fs_fat.c ****             cur_clus  = p_fat_data->MaxClusNbr - 1u;
1397:rtos/uC-FS/FAT/fs_fat.c ****         }
1398:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Chk if start has been reached (s
ARM GAS  /tmp/ccazZ5Hl.s 			page 26


1399:rtos/uC-FS/FAT/fs_fat.c ****         if (cur_clus == target_clus) {
1400:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainReverseFollow(): Reached start of cluster chain after %d
1401:rtos/uC-FS/FAT/fs_fat.c ****             return (target_clus);
1402:rtos/uC-FS/FAT/fs_fat.c ****         }
1403:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rd next FAT entry.              
1404:rtos/uC-FS/FAT/fs_fat.c ****         next_clus = p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol,
1405:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
1406:rtos/uC-FS/FAT/fs_fat.c ****                                                            cur_clus,
1407:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_err);
1408:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
1409:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
1410:rtos/uC-FS/FAT/fs_fat.c ****         }
1411:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Update target clus.             
1412:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus == target_clus) {
1413:rtos/uC-FS/FAT/fs_fat.c ****             target_clus = cur_clus;
1414:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
1415:rtos/uC-FS/FAT/fs_fat.c ****             found_clus_cnt++;
1416:rtos/uC-FS/FAT/fs_fat.c **** #endif
1417:rtos/uC-FS/FAT/fs_fat.c ****         }
1418:rtos/uC-FS/FAT/fs_fat.c ****         cur_clus--;
1419:rtos/uC-FS/FAT/fs_fat.c ****     }
1420:rtos/uC-FS/FAT/fs_fat.c **** 
1421:rtos/uC-FS/FAT/fs_fat.c **** 
1422:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------------- STOP CLUS REACH
1423:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_LOG(("FS_FAT_ClusChainReverseFollow(): Stop cluster reached after %d clusters.\r\n", f
1424:rtos/uC-FS/FAT/fs_fat.c ****    *p_err =  FS_ERR_NONE;
1425:rtos/uC-FS/FAT/fs_fat.c ****     return (target_clus);
1426:rtos/uC-FS/FAT/fs_fat.c **** }
1427:rtos/uC-FS/FAT/fs_fat.c **** 
1428:rtos/uC-FS/FAT/fs_fat.c **** 
1429:rtos/uC-FS/FAT/fs_fat.c **** /*
1430:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1431:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_FAT_ClusFreeFind()
1432:rtos/uC-FS/FAT/fs_fat.c **** *
1433:rtos/uC-FS/FAT/fs_fat.c **** * Description : Find free cluster.
1434:rtos/uC-FS/FAT/fs_fat.c **** *
1435:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
1436:rtos/uC-FS/FAT/fs_fat.c **** *
1437:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
1438:rtos/uC-FS/FAT/fs_fat.c **** *
1439:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1440:rtos/uC-FS/FAT/fs_fat.c **** *
1441:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE        Cluster found.
1442:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV         Device access error.
1443:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV_FULL    Device is full (no space could be allocated).
1444:rtos/uC-FS/FAT/fs_fat.c **** *
1445:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Cluster number, if free cluster found.
1446:rtos/uC-FS/FAT/fs_fat.c **** *               0,              otherwise.
1447:rtos/uC-FS/FAT/fs_fat.c **** *
1448:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) In order for journaling to behave as expected, FAT entry updates must be atomic
1449:rtos/uC-FS/FAT/fs_fat.c **** *                   To ensure this is the case when using FAT12, cross-boundary FAT entries must be
1450:rtos/uC-FS/FAT/fs_fat.c **** *                   avoided.
1451:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1452:rtos/uC-FS/FAT/fs_fat.c **** */
1453:rtos/uC-FS/FAT/fs_fat.c **** 
1454:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1455:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_CLUS_NBR  FS_FAT_ClusFreeFind (FS_VOL  *p_vol,
ARM GAS  /tmp/ccazZ5Hl.s 			page 27


1456:rtos/uC-FS/FAT/fs_fat.c ****                                       FS_BUF  *p_buf,
1457:rtos/uC-FS/FAT/fs_fat.c ****                                       FS_ERR  *p_err)
1458:rtos/uC-FS/FAT/fs_fat.c **** {
1459:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
1460:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   fat_entry;
1461:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
1462:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus_cnt_chkd;
1463:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   max_nbr_clus;
1464:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       clus_ignore;
1465:rtos/uC-FS/FAT/fs_fat.c **** #if ((FS_FAT_CFG_FAT12_EN == DEF_ENABLED) && (FS_FAT_CFG_JOURNAL_EN == DEF_ENABLED))
1466:rtos/uC-FS/FAT/fs_fat.c ****     FS_SEC_SIZE       fat_offset;
1467:rtos/uC-FS/FAT/fs_fat.c ****     FS_SEC_SIZE       fat_sec_offset;
1468:rtos/uC-FS/FAT/fs_fat.c **** #endif
1469:rtos/uC-FS/FAT/fs_fat.c **** 
1470:rtos/uC-FS/FAT/fs_fat.c **** 
1471:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data     = (FS_FAT_DATA *)p_vol->DataPtr;
1472:rtos/uC-FS/FAT/fs_fat.c ****     next_clus      =  p_fat_data->NextClusNbr;
1473:rtos/uC-FS/FAT/fs_fat.c ****     max_nbr_clus   =  p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR;
1474:rtos/uC-FS/FAT/fs_fat.c ****     clus_cnt_chkd  =  0u;
1475:rtos/uC-FS/FAT/fs_fat.c **** 
1476:rtos/uC-FS/FAT/fs_fat.c **** 
1477:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- FREE CLUS LOOK
1478:rtos/uC-FS/FAT/fs_fat.c ****     while (clus_cnt_chkd < max_nbr_clus) {
1479:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus >= p_fat_data->MaxClusNbr) {              /* Wrap clus nbr.                  
1480:rtos/uC-FS/FAT/fs_fat.c ****             next_clus  = FS_FAT_MIN_CLUS_NBR;
1481:rtos/uC-FS/FAT/fs_fat.c ****         }
1482:rtos/uC-FS/FAT/fs_fat.c **** 
1483:rtos/uC-FS/FAT/fs_fat.c **** 
1484:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rd next FAT entry.              
1485:rtos/uC-FS/FAT/fs_fat.c ****         fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol,
1486:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
1487:rtos/uC-FS/FAT/fs_fat.c ****                                                            next_clus,
1488:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_err);
1489:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
1490:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
1491:rtos/uC-FS/FAT/fs_fat.c ****         }
1492:rtos/uC-FS/FAT/fs_fat.c **** 
1493:rtos/uC-FS/FAT/fs_fat.c **** 
1494:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- FREE CLUS FOUN
1495:rtos/uC-FS/FAT/fs_fat.c ****         if (fat_entry == p_fat_data->FAT_TypeAPI_Ptr->ClusFree) {   /* Chk if free clus found.     
1496:rtos/uC-FS/FAT/fs_fat.c ****             clus_ignore = DEF_NO;                                   /* Clus not ignore'd by dflt.  
1497:rtos/uC-FS/FAT/fs_fat.c **** #if ((FS_FAT_CFG_FAT12_EN == DEF_ENABLED) && (FS_FAT_CFG_JOURNAL_EN == DEF_ENABLED))
1498:rtos/uC-FS/FAT/fs_fat.c ****             if ((p_fat_data->FAT_Type     == 12u) &&                /* If FAT12 and journal started
1499:rtos/uC-FS/FAT/fs_fat.c ****                 (DEF_BIT_IS_SET(p_fat_data->JournalState, FS_FAT_JOURNAL_STATE_START) == DEF_YES)) 
1500:rtos/uC-FS/FAT/fs_fat.c ****                 fat_offset     = (FS_SEC_SIZE)next_clus + ((FS_SEC_SIZE)next_clus / 2u);
1501:rtos/uC-FS/FAT/fs_fat.c ****                 fat_sec_offset =  fat_offset & (p_fat_data->SecSize - 1u);
1502:rtos/uC-FS/FAT/fs_fat.c ****                 if (fat_sec_offset == p_fat_data->SecSize - 1u) {  /* ... avoid sec boundary (see N
1503:rtos/uC-FS/FAT/fs_fat.c ****                     FS_TRACE_LOG(("FS_FAT_ClusFreeFind(): Sec boundary clus avoided: %d.\r\n", next
1504:rtos/uC-FS/FAT/fs_fat.c ****                     clus_ignore = DEF_YES;
1505:rtos/uC-FS/FAT/fs_fat.c ****                 }
1506:rtos/uC-FS/FAT/fs_fat.c ****             }
1507:rtos/uC-FS/FAT/fs_fat.c **** #endif
1508:rtos/uC-FS/FAT/fs_fat.c ****             if (clus_ignore == DEF_NO) {
1509:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->NextClusNbr = next_clus + 1u;       /* ... else store next clus ...    
1510:rtos/uC-FS/FAT/fs_fat.c ****                 FS_TRACE_LOG(("FS_FAT_ClusFreeFind(): New FAT clus alloc'd: %d.\r\n", next_clus));
1511:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_NONE;
1512:rtos/uC-FS/FAT/fs_fat.c ****                 return (next_clus);                             /*                           ... an
ARM GAS  /tmp/ccazZ5Hl.s 			page 28


1513:rtos/uC-FS/FAT/fs_fat.c ****             }
1514:rtos/uC-FS/FAT/fs_fat.c ****         }
1515:rtos/uC-FS/FAT/fs_fat.c **** 
1516:rtos/uC-FS/FAT/fs_fat.c ****         next_clus++;
1517:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_chkd++;
1518:rtos/uC-FS/FAT/fs_fat.c ****     }
1519:rtos/uC-FS/FAT/fs_fat.c **** 
1520:rtos/uC-FS/FAT/fs_fat.c **** 
1521:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- NO CLUS FOUN
1522:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_DEV_FULL;
1523:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_DBG(("FS_FAT_ClusFreeFind(): No free FAT clus could be found.\r\n"));
1524:rtos/uC-FS/FAT/fs_fat.c ****     return (0u);
1525:rtos/uC-FS/FAT/fs_fat.c **** }
1526:rtos/uC-FS/FAT/fs_fat.c **** #endif
1527:rtos/uC-FS/FAT/fs_fat.c **** 
1528:rtos/uC-FS/FAT/fs_fat.c **** 
1529:rtos/uC-FS/FAT/fs_fat.c **** /*
1530:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1531:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_FAT_ClusNextGet()
1532:rtos/uC-FS/FAT/fs_fat.c **** *
1533:rtos/uC-FS/FAT/fs_fat.c **** * Description : Get next cluster after current cluster in cluster chain.
1534:rtos/uC-FS/FAT/fs_fat.c **** *
1535:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
1536:rtos/uC-FS/FAT/fs_fat.c **** *
1537:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
1538:rtos/uC-FS/FAT/fs_fat.c **** *
1539:rtos/uC-FS/FAT/fs_fat.c **** *               start_clus  Current cluster number.
1540:rtos/uC-FS/FAT/fs_fat.c **** *
1541:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1542:rtos/uC-FS/FAT/fs_fat.c **** *
1543:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE                  FAT entry obtained.
1544:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_CHAIN_END    No cluster found.
1545:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_INVALID      Next cluster is invalid.
1546:rtos/uC-FS/FAT/fs_fat.c **** *
1547:rtos/uC-FS/FAT/fs_fat.c **** *                                                            -------- RETURNED BY FS_FAT_SecRd() --
1548:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV                   Device access error.
1549:rtos/uC-FS/FAT/fs_fat.c **** *
1550:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Next cluster number, if a next cluster exists.
1551:rtos/uC-FS/FAT/fs_fat.c **** *               0,                   if the current cluster is the last in the cluster chain.
1552:rtos/uC-FS/FAT/fs_fat.c **** *
1553:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
1554:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1555:rtos/uC-FS/FAT/fs_fat.c **** */
1556:rtos/uC-FS/FAT/fs_fat.c **** 
1557:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_CLUS_NBR  FS_FAT_ClusNextGet (FS_VOL           *p_vol,
1558:rtos/uC-FS/FAT/fs_fat.c ****                                      FS_BUF           *p_buf,
1559:rtos/uC-FS/FAT/fs_fat.c ****                                      FS_FAT_CLUS_NBR   start_clus,
1560:rtos/uC-FS/FAT/fs_fat.c ****                                      FS_ERR           *p_err)
1561:rtos/uC-FS/FAT/fs_fat.c **** {
1562:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
1563:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       valid;
1564:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
1565:rtos/uC-FS/FAT/fs_fat.c **** 
1566:rtos/uC-FS/FAT/fs_fat.c **** 
1567:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA  *)p_vol->DataPtr;
1568:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  =  p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol, /* Rd next clus.                   
1569:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
ARM GAS  /tmp/ccazZ5Hl.s 			page 29


1570:rtos/uC-FS/FAT/fs_fat.c ****                                                          start_clus,
1571:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_err);
1572:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
1573:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
1574:rtos/uC-FS/FAT/fs_fat.c ****     }
1575:rtos/uC-FS/FAT/fs_fat.c **** 
1576:rtos/uC-FS/FAT/fs_fat.c ****     if (next_clus >= p_fat_data->FAT_TypeAPI_Ptr->ClusEOF) {    /* Cluster is EOC.                 
1577:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_SYS_CLUS_CHAIN_END;
1578:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
1579:rtos/uC-FS/FAT/fs_fat.c ****     }
1580:rtos/uC-FS/FAT/fs_fat.c **** 
1581:rtos/uC-FS/FAT/fs_fat.c ****     valid = FS_FAT_IS_VALID_CLUS(p_fat_data, next_clus);
1582:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {                                      /* Cluster is invalid.             
1583:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_SYS_CLUS_INVALID;
1584:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
1585:rtos/uC-FS/FAT/fs_fat.c ****     }
1586:rtos/uC-FS/FAT/fs_fat.c **** 
1587:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
1588:rtos/uC-FS/FAT/fs_fat.c ****     return (next_clus);
1589:rtos/uC-FS/FAT/fs_fat.c **** }
1590:rtos/uC-FS/FAT/fs_fat.c **** 
1591:rtos/uC-FS/FAT/fs_fat.c **** 
1592:rtos/uC-FS/FAT/fs_fat.c **** /*
1593:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1594:rtos/uC-FS/FAT/fs_fat.c **** *                                         FS_FAT_SecNextGet()
1595:rtos/uC-FS/FAT/fs_fat.c **** *
1596:rtos/uC-FS/FAT/fs_fat.c **** * Description : Get next sector in cluster chain.
1597:rtos/uC-FS/FAT/fs_fat.c **** *
1598:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
1599:rtos/uC-FS/FAT/fs_fat.c **** *
1600:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
1601:rtos/uC-FS/FAT/fs_fat.c **** *
1602:rtos/uC-FS/FAT/fs_fat.c **** *               start_sec   Current sector number.
1603:rtos/uC-FS/FAT/fs_fat.c **** *
1604:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1605:rtos/uC-FS/FAT/fs_fat.c **** *
1606:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE                  FAT entry obtained.
1607:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV                   Device access error.
1608:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_CHAIN_END    Cluster chain ended.
1609:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_INVALID      Cluster chain ended with invalid clust
1610:rtos/uC-FS/FAT/fs_fat.c **** *
1611:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Next sector number, if a next sector exists.
1612:rtos/uC-FS/FAT/fs_fat.c **** *               0,                  if the current sector is the last in the cluster chain.
1613:rtos/uC-FS/FAT/fs_fat.c **** *
1614:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
1615:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1616:rtos/uC-FS/FAT/fs_fat.c **** */
1617:rtos/uC-FS/FAT/fs_fat.c **** 
1618:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_SEC_NBR  FS_FAT_SecNextGet (FS_VOL          *p_vol,
1619:rtos/uC-FS/FAT/fs_fat.c ****                                    FS_BUF          *p_buf,
1620:rtos/uC-FS/FAT/fs_fat.c ****                                    FS_FAT_SEC_NBR   start_sec,
1621:rtos/uC-FS/FAT/fs_fat.c ****                                    FS_ERR          *p_err)
1622:rtos/uC-FS/FAT/fs_fat.c **** {
1623:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    clus_sec_rem;
1624:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
1625:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    next_sec;
1626:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    root_dir_sec_last;
ARM GAS  /tmp/ccazZ5Hl.s 			page 30


1627:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   start_clus;
1628:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
1629:rtos/uC-FS/FAT/fs_fat.c **** 
1630:rtos/uC-FS/FAT/fs_fat.c **** 
1631:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
1632:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ HANDLE ROOT D
1633:rtos/uC-FS/FAT/fs_fat.c ****     if (p_fat_data->FAT_Type != FS_FAT_FAT_TYPE_FAT32) {
1634:rtos/uC-FS/FAT/fs_fat.c ****         if (start_sec < p_fat_data->DataStart) {                /* If start sec outside data       
1635:rtos/uC-FS/FAT/fs_fat.c ****             if (start_sec >= p_fat_data->RootDirStart) {        /* ... & sec within root dir       
1636:rtos/uC-FS/FAT/fs_fat.c ****                 root_dir_sec_last = p_fat_data->RootDirSize + p_fat_data->RootDirStart - 1u;
1637:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
1638:rtos/uC-FS/FAT/fs_fat.c ****                     next_sec = start_sec + 1u;                  /* ... rtn next sec.               
1639:rtos/uC-FS/FAT/fs_fat.c ****                    *p_err = FS_ERR_NONE;
1640:rtos/uC-FS/FAT/fs_fat.c ****                     return (next_sec);
1641:rtos/uC-FS/FAT/fs_fat.c ****                 }
1642:rtos/uC-FS/FAT/fs_fat.c ****             }
1643:rtos/uC-FS/FAT/fs_fat.c **** 
1644:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_DIR_FULL;
1645:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
1646:rtos/uC-FS/FAT/fs_fat.c ****         }
1647:rtos/uC-FS/FAT/fs_fat.c ****     }
1648:rtos/uC-FS/FAT/fs_fat.c **** 
1649:rtos/uC-FS/FAT/fs_fat.c **** 
1650:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------------- HANDLE GENERAL 
1651:rtos/uC-FS/FAT/fs_fat.c ****     clus_sec_rem = FS_FAT_CLUS_SEC_REM(p_fat_data, start_sec);
1652:rtos/uC-FS/FAT/fs_fat.c **** 
1653:rtos/uC-FS/FAT/fs_fat.c ****     if (clus_sec_rem != 1u) {                                   /* If more secs rem in clus ...    
1654:rtos/uC-FS/FAT/fs_fat.c ****         next_sec = start_sec + 1u;                              /* ... rtn next sec.               
1655:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
1656:rtos/uC-FS/FAT/fs_fat.c ****         return (next_sec);
1657:rtos/uC-FS/FAT/fs_fat.c ****     }
1658:rtos/uC-FS/FAT/fs_fat.c **** 
1659:rtos/uC-FS/FAT/fs_fat.c ****     start_clus = FS_FAT_SEC_TO_CLUS(p_fat_data, start_sec);
1660:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  = FS_FAT_ClusNextGet(p_vol,
1661:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
1662:rtos/uC-FS/FAT/fs_fat.c ****                                     start_clus,
1663:rtos/uC-FS/FAT/fs_fat.c ****                                     p_err);
1664:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
1665:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
1666:rtos/uC-FS/FAT/fs_fat.c ****     }
1667:rtos/uC-FS/FAT/fs_fat.c **** 
1668:rtos/uC-FS/FAT/fs_fat.c ****     next_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, next_clus);
1669:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
1670:rtos/uC-FS/FAT/fs_fat.c ****     return (next_sec);
1671:rtos/uC-FS/FAT/fs_fat.c **** }
1672:rtos/uC-FS/FAT/fs_fat.c **** 
1673:rtos/uC-FS/FAT/fs_fat.c **** 
1674:rtos/uC-FS/FAT/fs_fat.c **** /*
1675:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1676:rtos/uC-FS/FAT/fs_fat.c **** *                                     FS_FAT_SecNextGetAlloc()
1677:rtos/uC-FS/FAT/fs_fat.c **** *
1678:rtos/uC-FS/FAT/fs_fat.c **** * Description : Get next sector in cluster chain OR allocate new one.
1679:rtos/uC-FS/FAT/fs_fat.c **** *
1680:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
1681:rtos/uC-FS/FAT/fs_fat.c **** *
1682:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
1683:rtos/uC-FS/FAT/fs_fat.c **** *
ARM GAS  /tmp/ccazZ5Hl.s 			page 31


1684:rtos/uC-FS/FAT/fs_fat.c **** *               start_clus  Current cluster number.
1685:rtos/uC-FS/FAT/fs_fat.c **** *
1686:rtos/uC-FS/FAT/fs_fat.c **** *               clr         Indicates whether sector should be cleared (upon allocation) (See Note 
1687:rtos/uC-FS/FAT/fs_fat.c **** *
1688:rtos/uC-FS/FAT/fs_fat.c **** *                               DEF_YES, sector MUST be cleared.
1689:rtos/uC-FS/FAT/fs_fat.c **** *                               DEF_NO,  sector does not need to be cleared.
1690:rtos/uC-FS/FAT/fs_fat.c **** *
1691:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1692:rtos/uC-FS/FAT/fs_fat.c **** *
1693:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE                  FAT entry obtained.
1694:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV                   Device access error.
1695:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV_FULL              Device is full (no space could be allo
1696:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DIR_FULL              Directory is full (no space could be a
1697:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_CHAIN_END    Cluster chain ended.
1698:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_SYS_CLUS_INVALID      Cluster chain ended with invalid clust
1699:rtos/uC-FS/FAT/fs_fat.c **** *
1700:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Next sector number, if a next sector exists or one can be allocated.
1701:rtos/uC-FS/FAT/fs_fat.c **** *               0,                  otherwise.
1702:rtos/uC-FS/FAT/fs_fat.c **** *
1703:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The sector clear operation will overwrite the data stored in the buffer, so the
1704:rtos/uC-FS/FAT/fs_fat.c **** *                   buffer MUST be flushed before this operation is performed.
1705:rtos/uC-FS/FAT/fs_fat.c **** *
1706:rtos/uC-FS/FAT/fs_fat.c **** *               (2) The sector will not be cleared if it is already allocated.
1707:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1708:rtos/uC-FS/FAT/fs_fat.c **** */
1709:rtos/uC-FS/FAT/fs_fat.c **** 
1710:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1711:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_SEC_NBR  FS_FAT_SecNextGetAlloc (FS_VOL          *p_vol,
1712:rtos/uC-FS/FAT/fs_fat.c ****                                         FS_BUF          *p_buf,
1713:rtos/uC-FS/FAT/fs_fat.c ****                                         FS_FAT_SEC_NBR   start_sec,
1714:rtos/uC-FS/FAT/fs_fat.c ****                                         CPU_BOOLEAN      clr,
1715:rtos/uC-FS/FAT/fs_fat.c ****                                         FS_ERR          *p_err)
1716:rtos/uC-FS/FAT/fs_fat.c **** {
1717:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    clus_sec_rem;
1718:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
1719:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    next_sec;
1720:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    root_dir_sec_last;
1721:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   start_clus;
1722:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
1723:rtos/uC-FS/FAT/fs_fat.c **** 
1724:rtos/uC-FS/FAT/fs_fat.c **** 
1725:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
1726:rtos/uC-FS/FAT/fs_fat.c **** 
1727:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ HANDLE ROOT D
1728:rtos/uC-FS/FAT/fs_fat.c ****     if (p_fat_data->FAT_Type != FS_FAT_FAT_TYPE_FAT32) {
1729:rtos/uC-FS/FAT/fs_fat.c ****         if (start_sec < p_fat_data->DataStart) {                /* If start sec outside data       
1730:rtos/uC-FS/FAT/fs_fat.c ****             if (start_sec >= p_fat_data->RootDirStart) {        /* ... & sec within root dir       
1731:rtos/uC-FS/FAT/fs_fat.c ****                 root_dir_sec_last = p_fat_data->RootDirSize + p_fat_data->RootDirStart - 1u;
1732:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
1733:rtos/uC-FS/FAT/fs_fat.c ****                     next_sec = start_sec + 1u;                  /* ... rtn next sec.               
1734:rtos/uC-FS/FAT/fs_fat.c ****                    *p_err = FS_ERR_NONE;
1735:rtos/uC-FS/FAT/fs_fat.c ****                     return (next_sec);
1736:rtos/uC-FS/FAT/fs_fat.c ****                 }
1737:rtos/uC-FS/FAT/fs_fat.c ****             }
1738:rtos/uC-FS/FAT/fs_fat.c **** 
1739:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_DIR_FULL;
1740:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
ARM GAS  /tmp/ccazZ5Hl.s 			page 32


1741:rtos/uC-FS/FAT/fs_fat.c ****         }
1742:rtos/uC-FS/FAT/fs_fat.c ****     }
1743:rtos/uC-FS/FAT/fs_fat.c **** 
1744:rtos/uC-FS/FAT/fs_fat.c **** 
1745:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------------- HANDLE GENERAL 
1746:rtos/uC-FS/FAT/fs_fat.c ****     clus_sec_rem = FS_FAT_CLUS_SEC_REM(p_fat_data, start_sec);
1747:rtos/uC-FS/FAT/fs_fat.c **** 
1748:rtos/uC-FS/FAT/fs_fat.c ****     if (clus_sec_rem != 1u) {                                   /* If more secs rem in clus ...    
1749:rtos/uC-FS/FAT/fs_fat.c ****         next_sec = start_sec + 1u;                              /* ... rtn next sec.               
1750:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
1751:rtos/uC-FS/FAT/fs_fat.c ****         return (next_sec);
1752:rtos/uC-FS/FAT/fs_fat.c ****     }
1753:rtos/uC-FS/FAT/fs_fat.c **** 
1754:rtos/uC-FS/FAT/fs_fat.c ****     start_clus = FS_FAT_SEC_TO_CLUS(p_fat_data, start_sec);
1755:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  = FS_FAT_ClusNextGet(p_vol,
1756:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
1757:rtos/uC-FS/FAT/fs_fat.c ****                                     start_clus,
1758:rtos/uC-FS/FAT/fs_fat.c ****                                     p_err);
1759:rtos/uC-FS/FAT/fs_fat.c ****     switch (*p_err) {
1760:rtos/uC-FS/FAT/fs_fat.c ****         case FS_ERR_NONE:                                       /* Another clus in chain already al
1761:rtos/uC-FS/FAT/fs_fat.c ****              clr = DEF_NO;                                      /* See Note #2.                    
1762:rtos/uC-FS/FAT/fs_fat.c ****              break;
1763:rtos/uC-FS/FAT/fs_fat.c **** 
1764:rtos/uC-FS/FAT/fs_fat.c **** 
1765:rtos/uC-FS/FAT/fs_fat.c ****         case FS_ERR_SYS_CLUS_CHAIN_END:                         /* EOC, alloc another cluster.     
1766:rtos/uC-FS/FAT/fs_fat.c ****              (void) FS_FAT_ClusChainAlloc(p_vol,
1767:rtos/uC-FS/FAT/fs_fat.c ****                                           p_buf,
1768:rtos/uC-FS/FAT/fs_fat.c ****                                           start_clus,
1769:rtos/uC-FS/FAT/fs_fat.c ****                                           1u,
1770:rtos/uC-FS/FAT/fs_fat.c ****                                           p_err);
1771:rtos/uC-FS/FAT/fs_fat.c ****              if (*p_err != FS_ERR_NONE) {
1772:rtos/uC-FS/FAT/fs_fat.c ****                  return (0u);
1773:rtos/uC-FS/FAT/fs_fat.c ****              }
1774:rtos/uC-FS/FAT/fs_fat.c **** 
1775:rtos/uC-FS/FAT/fs_fat.c ****              next_clus  = FS_FAT_ClusNextGet(p_vol,
1776:rtos/uC-FS/FAT/fs_fat.c ****                                              p_buf,
1777:rtos/uC-FS/FAT/fs_fat.c ****                                              start_clus,
1778:rtos/uC-FS/FAT/fs_fat.c ****                                              p_err);
1779:rtos/uC-FS/FAT/fs_fat.c ****              if (*p_err != FS_ERR_NONE) {
1780:rtos/uC-FS/FAT/fs_fat.c ****                  return (0u);
1781:rtos/uC-FS/FAT/fs_fat.c ****              }
1782:rtos/uC-FS/FAT/fs_fat.c ****              break;
1783:rtos/uC-FS/FAT/fs_fat.c **** 
1784:rtos/uC-FS/FAT/fs_fat.c **** 
1785:rtos/uC-FS/FAT/fs_fat.c ****         default:
1786:rtos/uC-FS/FAT/fs_fat.c ****              return (0u);                                       /* Prevent 'break NOT reachable' co
1787:rtos/uC-FS/FAT/fs_fat.c ****     }
1788:rtos/uC-FS/FAT/fs_fat.c **** 
1789:rtos/uC-FS/FAT/fs_fat.c **** 
1790:rtos/uC-FS/FAT/fs_fat.c **** 
1791:rtos/uC-FS/FAT/fs_fat.c **** 
1792:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Clr clus, if necessary.         
1793:rtos/uC-FS/FAT/fs_fat.c ****     if (clr == DEF_YES) {
1794:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Flush(p_buf, p_err);                              /* Flush buf (see Note #1).        
1795:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
1796:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
1797:rtos/uC-FS/FAT/fs_fat.c ****         }
ARM GAS  /tmp/ccazZ5Hl.s 			page 33


1798:rtos/uC-FS/FAT/fs_fat.c **** 
1799:rtos/uC-FS/FAT/fs_fat.c ****         next_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, next_clus);
1800:rtos/uC-FS/FAT/fs_fat.c **** 
1801:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,
1802:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf->DataPtr,
1803:rtos/uC-FS/FAT/fs_fat.c ****                       next_sec,
1804:rtos/uC-FS/FAT/fs_fat.c ****                       p_fat_data->ClusSize_sec,
1805:rtos/uC-FS/FAT/fs_fat.c ****                       p_fat_data->SecSize,
1806:rtos/uC-FS/FAT/fs_fat.c ****                       FS_VOL_SEC_TYPE_DIR,                      /* DIR since it's only called with 
1807:rtos/uC-FS/FAT/fs_fat.c ****                       p_err);                                   /* from DirEntryPlace().           
1808:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
1809:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
1810:rtos/uC-FS/FAT/fs_fat.c ****         }
1811:rtos/uC-FS/FAT/fs_fat.c ****     }
1812:rtos/uC-FS/FAT/fs_fat.c **** 
1813:rtos/uC-FS/FAT/fs_fat.c ****     next_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, next_clus);
1814:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
1815:rtos/uC-FS/FAT/fs_fat.c ****     return (next_sec);
1816:rtos/uC-FS/FAT/fs_fat.c **** }
1817:rtos/uC-FS/FAT/fs_fat.c **** #endif
1818:rtos/uC-FS/FAT/fs_fat.c **** 
1819:rtos/uC-FS/FAT/fs_fat.c **** 
1820:rtos/uC-FS/FAT/fs_fat.c **** /*
1821:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1822:rtos/uC-FS/FAT/fs_fat.c **** *                                           FS_FAT_Query()
1823:rtos/uC-FS/FAT/fs_fat.c **** *
1824:rtos/uC-FS/FAT/fs_fat.c **** * Description : Obtain information about a volume.
1825:rtos/uC-FS/FAT/fs_fat.c **** *
1826:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
1827:rtos/uC-FS/FAT/fs_fat.c **** *
1828:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
1829:rtos/uC-FS/FAT/fs_fat.c **** *
1830:rtos/uC-FS/FAT/fs_fat.c **** *               p_info      Pointer to structure that will receive volume information.
1831:rtos/uC-FS/FAT/fs_fat.c **** *
1832:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1833:rtos/uC-FS/FAT/fs_fat.c **** *
1834:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE    FAT information obtained.
1835:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV     Device access error.
1836:rtos/uC-FS/FAT/fs_fat.c **** *
1837:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
1838:rtos/uC-FS/FAT/fs_fat.c **** *
1839:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
1840:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1841:rtos/uC-FS/FAT/fs_fat.c **** */
1842:rtos/uC-FS/FAT/fs_fat.c **** 
1843:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_Query (FS_VOL       *p_vol,
1844:rtos/uC-FS/FAT/fs_fat.c ****                     FS_BUF       *p_buf,
1845:rtos/uC-FS/FAT/fs_fat.c ****                     FS_SYS_INFO  *p_info,
1846:rtos/uC-FS/FAT/fs_fat.c ****                     FS_ERR       *p_err)
1847:rtos/uC-FS/FAT/fs_fat.c **** {
1848:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   bad_clus_cnt;
1849:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus;
1850:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   fat_entry;
1851:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   free_clus_cnt;
1852:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   used_clus_cnt;
1853:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
1854:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 34


1855:rtos/uC-FS/FAT/fs_fat.c **** 
1856:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- ASSIGN DFLT VA
1857:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data         = (FS_FAT_DATA *)p_vol->DataPtr;
1858:rtos/uC-FS/FAT/fs_fat.c ****     p_info->BadSecCnt  =  0u;
1859:rtos/uC-FS/FAT/fs_fat.c ****     p_info->FreeSecCnt =  0u;
1860:rtos/uC-FS/FAT/fs_fat.c ****     p_info->UsedSecCnt =  0u;
1861:rtos/uC-FS/FAT/fs_fat.c ****     p_info->TotSecCnt  =  0u;
1862:rtos/uC-FS/FAT/fs_fat.c **** 
1863:rtos/uC-FS/FAT/fs_fat.c **** 
1864:rtos/uC-FS/FAT/fs_fat.c **** 
1865:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- CHK IF INFO CA
1866:rtos/uC-FS/FAT/fs_fat.c ****     if (p_fat_data->QueryInfoValid == DEF_YES) {
1867:rtos/uC-FS/FAT/fs_fat.c ****         p_info->BadSecCnt  = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(p_fat_data->QueryBadClusCnt,  p_fat_data
1868:rtos/uC-FS/FAT/fs_fat.c ****         p_info->FreeSecCnt = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(p_fat_data->QueryFreeClusCnt, p_fat_data
1869:rtos/uC-FS/FAT/fs_fat.c **** 
1870:rtos/uC-FS/FAT/fs_fat.c ****         if (p_fat_data->MaxClusNbr >= (FS_FAT_MIN_CLUS_NBR + p_fat_data->QueryBadClusCnt + p_fat_da
1871:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt = ((p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR) - p_fat_data->QueryBadC
1872:rtos/uC-FS/FAT/fs_fat.c ****         } else {
1873:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt = 0u;
1874:rtos/uC-FS/FAT/fs_fat.c ****         }
1875:rtos/uC-FS/FAT/fs_fat.c **** 
1876:rtos/uC-FS/FAT/fs_fat.c ****         p_info->UsedSecCnt = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(used_clus_cnt, p_fat_data->ClusSizeLog2_
1877:rtos/uC-FS/FAT/fs_fat.c ****         p_info->TotSecCnt  =  p_info->BadSecCnt + p_info->FreeSecCnt + p_info->UsedSecCnt;
1878:rtos/uC-FS/FAT/fs_fat.c **** 
1879:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
1880:rtos/uC-FS/FAT/fs_fat.c ****         return;
1881:rtos/uC-FS/FAT/fs_fat.c ****     }
1882:rtos/uC-FS/FAT/fs_fat.c **** 
1883:rtos/uC-FS/FAT/fs_fat.c **** 
1884:rtos/uC-FS/FAT/fs_fat.c **** 
1885:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------- CNT NBR OF BAD/FREE/U
1886:rtos/uC-FS/FAT/fs_fat.c ****     free_clus_cnt = 0u;
1887:rtos/uC-FS/FAT/fs_fat.c ****     used_clus_cnt = 0u;
1888:rtos/uC-FS/FAT/fs_fat.c ****     bad_clus_cnt  = 0u;
1889:rtos/uC-FS/FAT/fs_fat.c ****     clus          = 2u;
1890:rtos/uC-FS/FAT/fs_fat.c ****     while (clus < p_fat_data->MaxClusNbr) {
1891:rtos/uC-FS/FAT/fs_fat.c ****         fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol,
1892:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
1893:rtos/uC-FS/FAT/fs_fat.c ****                                                            clus,
1894:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_err);
1895:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
1896:rtos/uC-FS/FAT/fs_fat.c ****             return;
1897:rtos/uC-FS/FAT/fs_fat.c ****         }
1898:rtos/uC-FS/FAT/fs_fat.c **** 
1899:rtos/uC-FS/FAT/fs_fat.c ****         if (fat_entry == p_fat_data->FAT_TypeAPI_Ptr->ClusBad) {
1900:rtos/uC-FS/FAT/fs_fat.c ****             bad_clus_cnt++;
1901:rtos/uC-FS/FAT/fs_fat.c **** 
1902:rtos/uC-FS/FAT/fs_fat.c ****         } else if (fat_entry == p_fat_data->FAT_TypeAPI_Ptr->ClusFree) {
1903:rtos/uC-FS/FAT/fs_fat.c ****             free_clus_cnt++;
1904:rtos/uC-FS/FAT/fs_fat.c **** 
1905:rtos/uC-FS/FAT/fs_fat.c ****         } else {
1906:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt++;
1907:rtos/uC-FS/FAT/fs_fat.c ****         }
1908:rtos/uC-FS/FAT/fs_fat.c **** 
1909:rtos/uC-FS/FAT/fs_fat.c ****         clus++;
1910:rtos/uC-FS/FAT/fs_fat.c ****     }
1911:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 35


1912:rtos/uC-FS/FAT/fs_fat.c **** 
1913:rtos/uC-FS/FAT/fs_fat.c **** 
1914:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ CALC SEC CNT'
1915:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryInfoValid   =  DEF_YES;
1916:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryBadClusCnt  =  bad_clus_cnt;
1917:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryFreeClusCnt =  free_clus_cnt;
1918:rtos/uC-FS/FAT/fs_fat.c **** 
1919:rtos/uC-FS/FAT/fs_fat.c ****     p_info->BadSecCnt            = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(bad_clus_cnt,  p_fat_data->ClusSiz
1920:rtos/uC-FS/FAT/fs_fat.c ****     p_info->FreeSecCnt           = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(free_clus_cnt, p_fat_data->ClusSiz
1921:rtos/uC-FS/FAT/fs_fat.c ****     p_info->UsedSecCnt           = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(used_clus_cnt, p_fat_data->ClusSiz
1922:rtos/uC-FS/FAT/fs_fat.c ****     p_info->TotSecCnt            =  p_info->BadSecCnt + p_info->FreeSecCnt + p_info->UsedSecCnt;
1923:rtos/uC-FS/FAT/fs_fat.c **** 
1924:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
1925:rtos/uC-FS/FAT/fs_fat.c **** }
1926:rtos/uC-FS/FAT/fs_fat.c **** 
1927:rtos/uC-FS/FAT/fs_fat.c **** 
1928:rtos/uC-FS/FAT/fs_fat.c **** /*
1929:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1930:rtos/uC-FS/FAT/fs_fat.c **** *                                        FS_FAT_MakeBootSec()
1931:rtos/uC-FS/FAT/fs_fat.c **** *
1932:rtos/uC-FS/FAT/fs_fat.c **** * Description : Make boot sector.
1933:rtos/uC-FS/FAT/fs_fat.c **** *
1934:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_temp              Pointer to temporary buffer.
1935:rtos/uC-FS/FAT/fs_fat.c **** *
1936:rtos/uC-FS/FAT/fs_fat.c **** *               p_sys_cfg           Pointer to format configuration information.
1937:rtos/uC-FS/FAT/fs_fat.c **** *
1938:rtos/uC-FS/FAT/fs_fat.c **** *               sec_size            Sector size, in octets.
1939:rtos/uC-FS/FAT/fs_fat.c **** *
1940:rtos/uC-FS/FAT/fs_fat.c **** *               size                Size of volume in sectors.
1941:rtos/uC-FS/FAT/fs_fat.c **** *
1942:rtos/uC-FS/FAT/fs_fat.c **** *               fat_size            Size of one FAT in sectors.
1943:rtos/uC-FS/FAT/fs_fat.c **** *
1944:rtos/uC-FS/FAT/fs_fat.c **** *               partition_start     partition start: number of sectors from the MBR
1945:rtos/uC-FS/FAT/fs_fat.c **** *
1946:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
1947:rtos/uC-FS/FAT/fs_fat.c **** *
1948:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) See 'FS_FAT_VolFmt() Note #6'.
1949:rtos/uC-FS/FAT/fs_fat.c **** *
1950:rtos/uC-FS/FAT/fs_fat.c **** *               (2) See 'FS_FAT_VolFmt() Note #7'.
1951:rtos/uC-FS/FAT/fs_fat.c **** *
1952:rtos/uC-FS/FAT/fs_fat.c **** *               (3) Avoid 'Excessive shift value' or 'Constant expression evaluates to 0' warning.
1953:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
1954:rtos/uC-FS/FAT/fs_fat.c **** */
1955:rtos/uC-FS/FAT/fs_fat.c **** 
1956:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
1957:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_MakeBootSec (void            *p_temp,
1958:rtos/uC-FS/FAT/fs_fat.c ****                           FS_FAT_SYS_CFG  *p_sys_cfg,
1959:rtos/uC-FS/FAT/fs_fat.c ****                           FS_SEC_SIZE      sec_size,
1960:rtos/uC-FS/FAT/fs_fat.c ****                           FS_FAT_SEC_NBR   size,
1961:rtos/uC-FS/FAT/fs_fat.c ****                           FS_FAT_SEC_NBR   fat_size,
1962:rtos/uC-FS/FAT/fs_fat.c ****                           FS_SEC_NBR       partition_start)
1963:rtos/uC-FS/FAT/fs_fat.c **** {
1964:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U  *p_temp_08;
1965:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   sec_per_trk;
1966:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   num_heads;
1967:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U   nbr_32;
1968:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   nbr_16;
ARM GAS  /tmp/ccazZ5Hl.s 			page 36


1969:rtos/uC-FS/FAT/fs_fat.c **** 
1970:rtos/uC-FS/FAT/fs_fat.c **** 
1971:rtos/uC-FS/FAT/fs_fat.c ****     p_temp_08 = (CPU_INT08U *)p_temp;
1972:rtos/uC-FS/FAT/fs_fat.c **** 
1973:rtos/uC-FS/FAT/fs_fat.c **** 
1974:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Boot sector & BPB structure (see
1975:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 0u],     FS_FAT_BS_JMPBOOT
1976:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 1u],     FS_FAT_BS_JMPBOOT
1977:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 2u],     FS_FAT_BS_JMPBOOT
1978:rtos/uC-FS/FAT/fs_fat.c **** 
1979:rtos/uC-FS/FAT/fs_fat.c ****     Mem_Copy((void *)&p_temp_08[FS_FAT_BS_OFF_OEMNAME],                   (void *)FS_FAT_BS_OEMNAME
1980:rtos/uC-FS/FAT/fs_fat.c **** 
1981:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_BYTSPERSEC],      sec_size);
1982:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_SECPERCLUS],      p_sys_cfg->ClusSi
1983:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_RSVDSECCNT],      p_sys_cfg->RsvdAr
1984:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_NUMFATS],         p_sys_cfg->NbrFAT
1985:rtos/uC-FS/FAT/fs_fat.c **** 
1986:rtos/uC-FS/FAT/fs_fat.c ****     if  (p_sys_cfg->FAT_Type == FS_FAT_FAT_TYPE_FAT32) {
1987:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_ROOTENTCNT],      0);
1988:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC16],        0);
1989:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_FATSZ16],         0);
1990:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC32],        size);
1991:rtos/uC-FS/FAT/fs_fat.c **** 
1992:rtos/uC-FS/FAT/fs_fat.c ****     } else {
1993:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_ROOTENTCNT],      p_sys_cfg->Ro
1994:rtos/uC-FS/FAT/fs_fat.c ****         if (size <= DEF_INT_16U_MAX_VAL) {
1995:rtos/uC-FS/FAT/fs_fat.c ****             MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC16],    size);
1996:rtos/uC-FS/FAT/fs_fat.c ****         }
1997:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_FATSZ16],         fat_size);
1998:rtos/uC-FS/FAT/fs_fat.c ****         if (size > DEF_INT_16U_MAX_VAL) {
1999:rtos/uC-FS/FAT/fs_fat.c ****             MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC32],    size);
2000:rtos/uC-FS/FAT/fs_fat.c ****         }
2001:rtos/uC-FS/FAT/fs_fat.c **** 
2002:rtos/uC-FS/FAT/fs_fat.c ****     }
2003:rtos/uC-FS/FAT/fs_fat.c **** 
2004:rtos/uC-FS/FAT/fs_fat.c **** 
2005:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_MEDIA],           FS_FAT_BPB_MEDIA_
2006:rtos/uC-FS/FAT/fs_fat.c ****     sec_per_trk = 0x3Fu;                                        /* See Note #3.                    
2007:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_SECPERTRK],       sec_per_trk);
2008:rtos/uC-FS/FAT/fs_fat.c ****     num_heads   = 0xFFu;                                        /* See Note #3.                    
2009:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_NUMHEADS],        num_heads);
2010:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_HIDDSEC],         partition_start);
2011:rtos/uC-FS/FAT/fs_fat.c **** 
2012:rtos/uC-FS/FAT/fs_fat.c **** 
2013:rtos/uC-FS/FAT/fs_fat.c **** 
2014:rtos/uC-FS/FAT/fs_fat.c **** 
2015:rtos/uC-FS/FAT/fs_fat.c ****     if  (p_sys_cfg->FAT_Type == FS_FAT_FAT_TYPE_FAT32) {        /* FAT32 struct start at offset 36 
2016:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FATSZ32],   fat_size);
2017:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_EXTFLAGS],  0);
2018:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FSVER],     0);
2019:rtos/uC-FS/FAT/fs_fat.c ****         nbr_32 = FS_FAT_DFLT_ROOT_CLUS_NBR;                     /* See Note #3.                    
2020:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_ROOTCLUS],  nbr_32);
2021:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_FSINFO_SEC_NBR;                    /* See Note #3.                    
2022:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FSINFO],    nbr_16);
2023:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_BKBOOTSEC_SEC_NBR;                 /* See Note #3.                    
2024:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_BKBOOTSEC], nbr_16);
2025:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_DRVNUM],     0);
ARM GAS  /tmp/ccazZ5Hl.s 			page 37


2026:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_RESERVED1],  0);
2027:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_BOOTSIG],    FS_FAT_BS_BOO
2028:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_VOLID],      0x12345678);
2029:rtos/uC-FS/FAT/fs_fat.c **** 
2030:rtos/uC-FS/FAT/fs_fat.c ****         Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_VOLLAB],              (void *)FS_FAT_BS_VOL
2031:rtos/uC-FS/FAT/fs_fat.c ****         Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_FILSYSTYPE],          (void *)FS_FAT_BS_FAT
2032:rtos/uC-FS/FAT/fs_fat.c **** 
2033:rtos/uC-FS/FAT/fs_fat.c **** 
2034:rtos/uC-FS/FAT/fs_fat.c ****     } else {                                                    /* FAT12/16 struct start at offset 
2035:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_DRVNUM],     0);
2036:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_RESERVED1],  0);
2037:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_BOOTSIG],    FS_FAT_BS_B
2038:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_VOLID],      0x12345678u
2039:rtos/uC-FS/FAT/fs_fat.c **** 
2040:rtos/uC-FS/FAT/fs_fat.c ****         Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_VOLLAB],              (void *)FS_FAT_BS_V
2041:rtos/uC-FS/FAT/fs_fat.c ****         if  (p_sys_cfg->FAT_Type == FS_FAT_FAT_TYPE_FAT12) {
2042:rtos/uC-FS/FAT/fs_fat.c ****             Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_FILSYSTYPE],      (void *)FS_FAT_BS_F
2043:rtos/uC-FS/FAT/fs_fat.c **** 
2044:rtos/uC-FS/FAT/fs_fat.c ****         } else if  (p_sys_cfg->FAT_Type == FS_FAT_FAT_TYPE_FAT16) {
2045:rtos/uC-FS/FAT/fs_fat.c ****             Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_FILSYSTYPE],      (void *)FS_FAT_BS_F
2046:rtos/uC-FS/FAT/fs_fat.c ****         } else {
2047:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_MakeBootSec: Invalid FAT_Type of arg p_sys_cfg.\r\n"));
2048:rtos/uC-FS/FAT/fs_fat.c ****         }
2049:rtos/uC-FS/FAT/fs_fat.c ****     }
2050:rtos/uC-FS/FAT/fs_fat.c **** 
2051:rtos/uC-FS/FAT/fs_fat.c **** 
2052:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Boot sector signature.          
2053:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BOOT_SIG_LO_OFF],         FS_FAT_BOOT_SIG_L
2054:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BOOT_SIG_HI_OFF],         FS_FAT_BOOT_SIG_H
2055:rtos/uC-FS/FAT/fs_fat.c **** }
2056:rtos/uC-FS/FAT/fs_fat.c **** #endif
2057:rtos/uC-FS/FAT/fs_fat.c **** 
2058:rtos/uC-FS/FAT/fs_fat.c **** 
2059:rtos/uC-FS/FAT/fs_fat.c **** /*
2060:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2061:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2062:rtos/uC-FS/FAT/fs_fat.c **** *                                       SYSTEM DRIVER FUNCTIONS
2063:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2064:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2065:rtos/uC-FS/FAT/fs_fat.c **** */
2066:rtos/uC-FS/FAT/fs_fat.c **** 
2067:rtos/uC-FS/FAT/fs_fat.c **** /*
2068:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2069:rtos/uC-FS/FAT/fs_fat.c **** *                                         FS_FAT_ModuleInit()
2070:rtos/uC-FS/FAT/fs_fat.c **** *
2071:rtos/uC-FS/FAT/fs_fat.c **** * Description : Initialize system driver.
2072:rtos/uC-FS/FAT/fs_fat.c **** *
2073:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : vol_cnt     Number of volumes in use.
2074:rtos/uC-FS/FAT/fs_fat.c **** *
2075:rtos/uC-FS/FAT/fs_fat.c **** *               file_cnt    Number of files in use.
2076:rtos/uC-FS/FAT/fs_fat.c **** *
2077:rtos/uC-FS/FAT/fs_fat.c **** *               dir_cnt     Number of directories in use.
2078:rtos/uC-FS/FAT/fs_fat.c **** *
2079:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2080:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2081:rtos/uC-FS/FAT/fs_fat.c **** *
2082:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE         Module initialized.
ARM GAS  /tmp/ccazZ5Hl.s 			page 38


2083:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_MEM_ALLOC    Memory could not be allocated.
2084:rtos/uC-FS/FAT/fs_fat.c **** *
2085:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
2086:rtos/uC-FS/FAT/fs_fat.c **** *
2087:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
2088:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2089:rtos/uC-FS/FAT/fs_fat.c **** */
2090:rtos/uC-FS/FAT/fs_fat.c **** 
2091:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_ModuleInit (FS_QTY   vol_cnt,
2092:rtos/uC-FS/FAT/fs_fat.c ****                          FS_QTY   file_cnt,
2093:rtos/uC-FS/FAT/fs_fat.c ****                          FS_QTY   dir_cnt,
2094:rtos/uC-FS/FAT/fs_fat.c ****                          FS_ERR  *p_err)
2095:rtos/uC-FS/FAT/fs_fat.c **** {
2096:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T  octets_reqd;
2097:rtos/uC-FS/FAT/fs_fat.c ****     LIB_ERR     pool_err;
2098:rtos/uC-FS/FAT/fs_fat.c **** 
2099:rtos/uC-FS/FAT/fs_fat.c **** 
2100:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- CREATE INFO PO
2101:rtos/uC-FS/FAT/fs_fat.c ****     Mem_PoolCreate(&FS_FAT_DataPool,
2102:rtos/uC-FS/FAT/fs_fat.c ****                     DEF_NULL,
2103:rtos/uC-FS/FAT/fs_fat.c ****                     0,
2104:rtos/uC-FS/FAT/fs_fat.c ****                     vol_cnt,
2105:rtos/uC-FS/FAT/fs_fat.c ****                     sizeof(FS_FAT_DATA),
2106:rtos/uC-FS/FAT/fs_fat.c ****                     sizeof(CPU_ALIGN),
2107:rtos/uC-FS/FAT/fs_fat.c ****                    &octets_reqd,
2108:rtos/uC-FS/FAT/fs_fat.c ****                    &pool_err);
2109:rtos/uC-FS/FAT/fs_fat.c **** 
2110:rtos/uC-FS/FAT/fs_fat.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
2111:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_MEM_ALLOC;
2112:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_INFO(("FS_FAT_ModuleInit(): Could not alloc mem for FAT info: %d octets req'd.\r\n
2113:rtos/uC-FS/FAT/fs_fat.c ****         return;
2114:rtos/uC-FS/FAT/fs_fat.c ****     }
2115:rtos/uC-FS/FAT/fs_fat.c **** 
2116:rtos/uC-FS/FAT/fs_fat.c **** 
2117:rtos/uC-FS/FAT/fs_fat.c **** 
2118:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------- INIT FAT FILE MO
2119:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FileModuleInit(file_cnt,
2120:rtos/uC-FS/FAT/fs_fat.c ****                           p_err);
2121:rtos/uC-FS/FAT/fs_fat.c **** 
2122:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
2123:rtos/uC-FS/FAT/fs_fat.c ****         return;
2124:rtos/uC-FS/FAT/fs_fat.c ****     }
2125:rtos/uC-FS/FAT/fs_fat.c **** 
2126:rtos/uC-FS/FAT/fs_fat.c **** 
2127:rtos/uC-FS/FAT/fs_fat.c **** 
2128:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_DIR_MODULE_PRESENT                                   /* ---------------- INIT FAT DIR MO
2129:rtos/uC-FS/FAT/fs_fat.c ****     if (dir_cnt != 0u) {
2130:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_DirModuleInit(dir_cnt,
2131:rtos/uC-FS/FAT/fs_fat.c ****                              p_err);
2132:rtos/uC-FS/FAT/fs_fat.c **** 
2133:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
2134:rtos/uC-FS/FAT/fs_fat.c ****             return;
2135:rtos/uC-FS/FAT/fs_fat.c ****         }
2136:rtos/uC-FS/FAT/fs_fat.c ****     }
2137:rtos/uC-FS/FAT/fs_fat.c **** #else
2138:rtos/uC-FS/FAT/fs_fat.c ****     (void)dir_cnt;
2139:rtos/uC-FS/FAT/fs_fat.c **** #endif
ARM GAS  /tmp/ccazZ5Hl.s 			page 39


2140:rtos/uC-FS/FAT/fs_fat.c **** 
2141:rtos/uC-FS/FAT/fs_fat.c **** 
2142:rtos/uC-FS/FAT/fs_fat.c **** 
2143:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT                           /* -------------- INIT FAT JOURNAL 
2144:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_JournalModuleInit(vol_cnt, p_err);
2145:rtos/uC-FS/FAT/fs_fat.c **** 
2146:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
2147:rtos/uC-FS/FAT/fs_fat.c ****         return;
2148:rtos/uC-FS/FAT/fs_fat.c ****     }
2149:rtos/uC-FS/FAT/fs_fat.c **** #endif
2150:rtos/uC-FS/FAT/fs_fat.c **** 
2151:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
2152:rtos/uC-FS/FAT/fs_fat.c **** }
2153:rtos/uC-FS/FAT/fs_fat.c **** 
2154:rtos/uC-FS/FAT/fs_fat.c **** 
2155:rtos/uC-FS/FAT/fs_fat.c **** /*
2156:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2157:rtos/uC-FS/FAT/fs_fat.c **** *                                          FS_FAT_VolClose()
2158:rtos/uC-FS/FAT/fs_fat.c **** *
2159:rtos/uC-FS/FAT/fs_fat.c **** * Description : Free system driver-specific structures.
2160:rtos/uC-FS/FAT/fs_fat.c **** *
2161:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
2162:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2163:rtos/uC-FS/FAT/fs_fat.c **** *
2164:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
2165:rtos/uC-FS/FAT/fs_fat.c **** *
2166:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The file system lock MUST be held to release the FAT data back to the FAT data 
2167:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2168:rtos/uC-FS/FAT/fs_fat.c **** */
2169:rtos/uC-FS/FAT/fs_fat.c **** 
2170:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_VolClose (FS_VOL  *p_vol)
2171:rtos/uC-FS/FAT/fs_fat.c **** {
2172:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA  *p_fat_data;
2173:rtos/uC-FS/FAT/fs_fat.c ****     FS_ERR        err;
2174:rtos/uC-FS/FAT/fs_fat.c ****     LIB_ERR       pool_err;
2175:rtos/uC-FS/FAT/fs_fat.c **** 
2176:rtos/uC-FS/FAT/fs_fat.c **** 
2177:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- FREE JOURNAL D
2178:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
2179:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_JournalExit(p_vol, &err);                            /* Free journal data.              
2180:rtos/uC-FS/FAT/fs_fat.c ****     if (err != FS_ERR_NONE) {
2181:rtos/uC-FS/FAT/fs_fat.c ****         CPU_SW_EXCEPTION(;);                                    /* Fatal err.                      
2182:rtos/uC-FS/FAT/fs_fat.c ****     }
2183:rtos/uC-FS/FAT/fs_fat.c **** #endif
2184:rtos/uC-FS/FAT/fs_fat.c **** 
2185:rtos/uC-FS/FAT/fs_fat.c **** 
2186:rtos/uC-FS/FAT/fs_fat.c **** 
2187:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- FREE FAT DAT
2188:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
2189:rtos/uC-FS/FAT/fs_fat.c **** 
2190:rtos/uC-FS/FAT/fs_fat.c ****     FS_OS_Lock(&err);                                           /* Acquire FS lock (see Note #1).  
2191:rtos/uC-FS/FAT/fs_fat.c ****     if (err != FS_ERR_NONE) {
2192:rtos/uC-FS/FAT/fs_fat.c ****         return;
2193:rtos/uC-FS/FAT/fs_fat.c ****     }
2194:rtos/uC-FS/FAT/fs_fat.c **** 
2195:rtos/uC-FS/FAT/fs_fat.c ****     Mem_PoolBlkFree(        &FS_FAT_DataPool,                   /* Free FAT data.                  
2196:rtos/uC-FS/FAT/fs_fat.c ****                     (void *) p_fat_data,
ARM GAS  /tmp/ccazZ5Hl.s 			page 40


2197:rtos/uC-FS/FAT/fs_fat.c ****                             &pool_err);
2198:rtos/uC-FS/FAT/fs_fat.c ****     FS_OS_Unlock();
2199:rtos/uC-FS/FAT/fs_fat.c **** 
2200:rtos/uC-FS/FAT/fs_fat.c ****     if (pool_err != LIB_MEM_ERR_NONE) {
2201:rtos/uC-FS/FAT/fs_fat.c ****         CPU_SW_EXCEPTION(;);                                    /* Fatal err.                      
2202:rtos/uC-FS/FAT/fs_fat.c ****     }
2203:rtos/uC-FS/FAT/fs_fat.c **** 
2204:rtos/uC-FS/FAT/fs_fat.c ****     p_vol->DataPtr = (void *)0;                                 /* Clr data ptr.                   
2205:rtos/uC-FS/FAT/fs_fat.c **** }
2206:rtos/uC-FS/FAT/fs_fat.c **** 
2207:rtos/uC-FS/FAT/fs_fat.c **** 
2208:rtos/uC-FS/FAT/fs_fat.c **** /*
2209:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2210:rtos/uC-FS/FAT/fs_fat.c **** *                                           FS_FAT_VolFmt()
2211:rtos/uC-FS/FAT/fs_fat.c **** *
2212:rtos/uC-FS/FAT/fs_fat.c **** * Description : Format a volume.
2213:rtos/uC-FS/FAT/fs_fat.c **** *
2214:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
2215:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2216:rtos/uC-FS/FAT/fs_fat.c **** *
2217:rtos/uC-FS/FAT/fs_fat.c **** *               p_sys_cfg   File system configuration.
2218:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2219:rtos/uC-FS/FAT/fs_fat.c **** *
2220:rtos/uC-FS/FAT/fs_fat.c **** *               sec_size    Sector size in octets.
2221:rtos/uC-FS/FAT/fs_fat.c **** *
2222:rtos/uC-FS/FAT/fs_fat.c **** *               size        Number of sectors in file system.
2223:rtos/uC-FS/FAT/fs_fat.c **** *
2224:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2225:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2226:rtos/uC-FS/FAT/fs_fat.c **** *
2227:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE                Volume formatted successfully.
2228:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_BUF_NONE_AVAIL      No buf available.
2229:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV                 Device access error.
2230:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV_INVALID_SIZE    Invalid device size.
2231:rtos/uC-FS/FAT/fs_fat.c **** *
2232:rtos/uC-FS/FAT/fs_fat.c **** *                                                          ------- RETURNED BY FS_FAT_GetSysCfg() -
2233:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_VOL_INVALID_SYS     Invalid volume for file system.
2234:rtos/uC-FS/FAT/fs_fat.c **** *
2235:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
2236:rtos/uC-FS/FAT/fs_fat.c **** *
2237:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) See 'FS_FAT_VolOpen() Notes #1 & #2'.
2238:rtos/uC-FS/FAT/fs_fat.c **** *
2239:rtos/uC-FS/FAT/fs_fat.c **** *               (2) The minimum number of sectors in a FAT volume is calculated by :
2240:rtos/uC-FS/FAT/fs_fat.c **** *
2241:rtos/uC-FS/FAT/fs_fat.c **** *                       MinSecCnt = RsvdSecCnt + RootDirSecCnt + FATSecCnt(min) * NbrFATs + DataClu
2242:rtos/uC-FS/FAT/fs_fat.c **** *
2243:rtos/uC-FS/FAT/fs_fat.c **** *                   where
2244:rtos/uC-FS/FAT/fs_fat.c **** *
2245:rtos/uC-FS/FAT/fs_fat.c **** *                       RsvdSecCnt    is the number of sectors in the reserved area.
2246:rtos/uC-FS/FAT/fs_fat.c **** *                       RootDirSecCnt is the number of sectors in the root directory.
2247:rtos/uC-FS/FAT/fs_fat.c **** *                       FATSecCnt     is the number of sectors in the each FAT.
2248:rtos/uC-FS/FAT/fs_fat.c **** *                       NbrFATs       is the number of FATs.
2249:rtos/uC-FS/FAT/fs_fat.c **** *                       DataSecCnt    is the number of sectors in the data area.
2250:rtos/uC-FS/FAT/fs_fat.c **** *
2251:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) The number of sectors in the root directory is calculated by :
2252:rtos/uC-FS/FAT/fs_fat.c **** *
2253:rtos/uC-FS/FAT/fs_fat.c **** *                                                     RootDirEntriesCnt * 32       RootDirEntriesCn
ARM GAS  /tmp/ccazZ5Hl.s 			page 41


2254:rtos/uC-FS/FAT/fs_fat.c **** *                           RootDirSecCnt = ceiling( ------------------------ ) = -----------------
2255:rtos/uC-FS/FAT/fs_fat.c **** *                                                          BytesPerSec                           Se
2256:rtos/uC-FS/FAT/fs_fat.c **** *
2257:rtos/uC-FS/FAT/fs_fat.c **** *                       where
2258:rtos/uC-FS/FAT/fs_fat.c **** *
2259:rtos/uC-FS/FAT/fs_fat.c **** *                           SecSize           is the size of a sector, in octets.
2260:rtos/uC-FS/FAT/fs_fat.c **** *                           RootDirEntriesCnt is the number of root directory entries.
2261:rtos/uC-FS/FAT/fs_fat.c **** *
2262:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) The number of sectors in each FAT is calculated by :
2263:rtos/uC-FS/FAT/fs_fat.c **** *
2264:rtos/uC-FS/FAT/fs_fat.c **** *                                                         DataClusCnt               DataClusCnt + (
2265:rtos/uC-FS/FAT/fs_fat.c **** *                           FATSecCnt = ceiling( ----------------------------- ) = ----------------
2266:rtos/uC-FS/FAT/fs_fat.c **** *                                                   SecSize / BytesPerEntry                   SecSi
2267:rtos/uC-FS/FAT/fs_fat.c **** *
2268:rtos/uC-FS/FAT/fs_fat.c **** *                       where
2269:rtos/uC-FS/FAT/fs_fat.c **** *
2270:rtos/uC-FS/FAT/fs_fat.c **** *                           SecSize       is the size of a sector, in octets.
2271:rtos/uC-FS/FAT/fs_fat.c **** *                           BytesPerEntry is the number of bytes in one FAT entry.
2272:rtos/uC-FS/FAT/fs_fat.c **** *                           DataClusCnt   is the number of clusters in the data area.
2273:rtos/uC-FS/FAT/fs_fat.c **** *
2274:rtos/uC-FS/FAT/fs_fat.c **** *                   (c) For example, a minimum-size FAT32 volume, with a default number of reserved
2275:rtos/uC-FS/FAT/fs_fat.c **** *                       sectors (32) & number of FATs (2), with 512-byte sectors & 1 sector per
2276:rtos/uC-FS/FAT/fs_fat.c **** *                       cluster, would need
2277:rtos/uC-FS/FAT/fs_fat.c **** *
2278:rtos/uC-FS/FAT/fs_fat.c **** *                                                 (65535 + 1) + (512 / 4) - 1
2279:rtos/uC-FS/FAT/fs_fat.c **** *                           MinSecCnt = 32 + 0 + ----------------------------- * 2 + (65535 + 1) * 
2280:rtos/uC-FS/FAT/fs_fat.c **** *                                                           512 / 4
2281:rtos/uC-FS/FAT/fs_fat.c **** *
2282:rtos/uC-FS/FAT/fs_fat.c **** *                       where all multiplication & divide operations are integer divide & multiply.
2283:rtos/uC-FS/FAT/fs_fat.c **** *
2284:rtos/uC-FS/FAT/fs_fat.c **** *                       (1) [Ref 1] recommends that no volume be formatted with close to 4085 or 65
2285:rtos/uC-FS/FAT/fs_fat.c **** *                           clusters, the minimum cluster counts for FAT16 & FAT32 volumes, since s
2286:rtos/uC-FS/FAT/fs_fat.c **** *                           FAT driver implementations do not determine properly FAT type.  In case
2287:rtos/uC-FS/FAT/fs_fat.c **** *                           volumes formatted with this file system suite are used with such
2288:rtos/uC-FS/FAT/fs_fat.c **** *                           non-compliant FAT driver implementations, no volume is formatted with
2289:rtos/uC-FS/FAT/fs_fat.c **** *                           4069-5001 or 65509-65541 clusters.
2290:rtos/uC-FS/FAT/fs_fat.c **** *
2291:rtos/uC-FS/FAT/fs_fat.c **** *               (3) The first sector of the first cluster is always ClusSize_sec-aligned.
2292:rtos/uC-FS/FAT/fs_fat.c **** *
2293:rtos/uC-FS/FAT/fs_fat.c **** *               (4) The number of sectors in the data area of the FAT is related to the number of s
2294:rtos/uC-FS/FAT/fs_fat.c **** *                   in the file system :
2295:rtos/uC-FS/FAT/fs_fat.c **** *
2296:rtos/uC-FS/FAT/fs_fat.c **** *                       TotSecCnt = DataSecCnt + (FATSecCnt * NbrFATs) + RootDirSecCnt + RsvdSecCnt
2297:rtos/uC-FS/FAT/fs_fat.c **** *
2298:rtos/uC-FS/FAT/fs_fat.c **** *                                                                  DataClusCnt
2299:rtos/uC-FS/FAT/fs_fat.c **** *                                 = DataSecCnt + ceiling(-----------------------------) * NbrFATs +
2300:rtos/uC-FS/FAT/fs_fat.c **** *                                                            SecSize / BytesPerEntry
2301:rtos/uC-FS/FAT/fs_fat.c **** *
2302:rtos/uC-FS/FAT/fs_fat.c **** *                                                    DataSecCnt / ClusSize_sec
2303:rtos/uC-FS/FAT/fs_fat.c **** *                                 > DataSecCnt + (-----------------------------) * NbrFATs + RootDi
2304:rtos/uC-FS/FAT/fs_fat.c **** *                                                    SecSize / BytesPerEntry
2305:rtos/uC-FS/FAT/fs_fat.c **** *
2306:rtos/uC-FS/FAT/fs_fat.c **** *                   so
2307:rtos/uC-FS/FAT/fs_fat.c **** *
2308:rtos/uC-FS/FAT/fs_fat.c **** *                                         (TotSecCnt - RootDirSecCnt - RsvdSecCnt) * (SecSize / Byt
2309:rtos/uC-FS/FAT/fs_fat.c **** *                       DataSecCnt < --------------------------------------------------------------
2310:rtos/uC-FS/FAT/fs_fat.c **** *                                    (SecSize * ClusSize_sec + BytesPerEntry * NbrFATs) / (ClusSize
ARM GAS  /tmp/ccazZ5Hl.s 			page 42


2311:rtos/uC-FS/FAT/fs_fat.c **** *
2312:rtos/uC-FS/FAT/fs_fat.c **** *                                     (TotSecCnt - RootDirSecCnt - RsvdSecCnt) * (SecSize * ClusSiz
2313:rtos/uC-FS/FAT/fs_fat.c **** *                                  < --------------------------------------------------------------
2314:rtos/uC-FS/FAT/fs_fat.c **** *                                                SecSize * ClusSize_sec + BytesPerEntry * NbrFATs
2315:rtos/uC-FS/FAT/fs_fat.c **** *
2316:rtos/uC-FS/FAT/fs_fat.c **** *                   Since the numerator MAY overflow a 32-bit unsigned integer, the calculation is
2317:rtos/uC-FS/FAT/fs_fat.c **** *                   re-ordered & rounded up to provide an upper limit:
2318:rtos/uC-FS/FAT/fs_fat.c **** *
2319:rtos/uC-FS/FAT/fs_fat.c **** *                                           TotSecCnt - RootDirSecCnt - RsvdSecCnt
2320:rtos/uC-FS/FAT/fs_fat.c **** *                       DataSecCnt < (------------------------------------------------ + 1) * (SecS
2321:rtos/uC-FS/FAT/fs_fat.c **** *                                      SecSize * ClusSize_sec + BytesPerEntry * NbrFATs
2322:rtos/uC-FS/FAT/fs_fat.c **** *
2323:rtos/uC-FS/FAT/fs_fat.c **** *               (5) The number of sectors in a FAT is calculated from the data sector count, as cal
2324:rtos/uC-FS/FAT/fs_fat.c **** *                   above.  Each FAT will have sufficient entries for the data area; depending on t
2325:rtos/uC-FS/FAT/fs_fat.c **** *                   configuration, it MAY have extra entries or sector(s).
2326:rtos/uC-FS/FAT/fs_fat.c **** *
2327:rtos/uC-FS/FAT/fs_fat.c **** *               (6) The boot sector & BPB structure is covered in [Ref 1], Pages 9-10.
2328:rtos/uC-FS/FAT/fs_fat.c **** *
2329:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) Several fields are assigned 'default' values :
2330:rtos/uC-FS/FAT/fs_fat.c **** *
2331:rtos/uC-FS/FAT/fs_fat.c **** *                       (1) BS_jmpBoot is assigned {0xEB, 0x00, 0x90}.
2332:rtos/uC-FS/FAT/fs_fat.c **** *                       (2) BS_OEMName is assigned "MSWIN4.1".
2333:rtos/uC-FS/FAT/fs_fat.c **** *                       (3) BPB_Media  is assigned 0xF8.
2334:rtos/uC-FS/FAT/fs_fat.c **** *
2335:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) Several fields are always assigned 'zero' values :
2336:rtos/uC-FS/FAT/fs_fat.c **** *
2337:rtos/uC-FS/FAT/fs_fat.c **** *                       (1) BPB_SecPerTrk.
2338:rtos/uC-FS/FAT/fs_fat.c **** *                       (2) BPB_NumHeads.
2339:rtos/uC-FS/FAT/fs_fat.c **** *                       (3) BPB_HiddSec.
2340:rtos/uC-FS/FAT/fs_fat.c **** *
2341:rtos/uC-FS/FAT/fs_fat.c **** *                   (c) (1) For FAT32, several more fields are always assigned 'zero' values :
2342:rtos/uC-FS/FAT/fs_fat.c **** *
2343:rtos/uC-FS/FAT/fs_fat.c **** *                           (a) BPB_RootEntCnt.
2344:rtos/uC-FS/FAT/fs_fat.c **** *                           (b) BPB_TotSec16.
2345:rtos/uC-FS/FAT/fs_fat.c **** *                           (c) BPB_FatSz16.
2346:rtos/uC-FS/FAT/fs_fat.c **** *
2347:rtos/uC-FS/FAT/fs_fat.c **** *                           The remaining fields contain information describing the file system ;
2348:rtos/uC-FS/FAT/fs_fat.c **** *
2349:rtos/uC-FS/FAT/fs_fat.c **** *                           (a) BPB_BytsPerSec.
2350:rtos/uC-FS/FAT/fs_fat.c **** *                           (b) BPB_SecPerClus.
2351:rtos/uC-FS/FAT/fs_fat.c **** *                           (c) BPB_RsvdSecCnt.
2352:rtos/uC-FS/FAT/fs_fat.c **** *                           (d) BPB_NumFATs (should be 2).
2353:rtos/uC-FS/FAT/fs_fat.c **** *                           (e) BPB_TotSec32.
2354:rtos/uC-FS/FAT/fs_fat.c **** *
2355:rtos/uC-FS/FAT/fs_fat.c **** *                       (2) For FAT12/16, several more fields are always assigned 'zero' values :
2356:rtos/uC-FS/FAT/fs_fat.c **** *
2357:rtos/uC-FS/FAT/fs_fat.c **** *                           (a) BPB_TotSec32.
2358:rtos/uC-FS/FAT/fs_fat.c **** *
2359:rtos/uC-FS/FAT/fs_fat.c **** *                           The remaining fields contain information describing the file system :
2360:rtos/uC-FS/FAT/fs_fat.c **** *
2361:rtos/uC-FS/FAT/fs_fat.c **** *                           (a) BPB_RootEntCnt (defaults to 512).
2362:rtos/uC-FS/FAT/fs_fat.c **** *                           (b) BPB_TotSec16.
2363:rtos/uC-FS/FAT/fs_fat.c **** *                           (c) BPB_FatSz16.
2364:rtos/uC-FS/FAT/fs_fat.c **** *                           (d) BPB_BytsPerSec.
2365:rtos/uC-FS/FAT/fs_fat.c **** *                           (e) BPB_SecPerClus.
2366:rtos/uC-FS/FAT/fs_fat.c **** *                           (f) BPB_RsvdSecCnt (should be 1).
2367:rtos/uC-FS/FAT/fs_fat.c **** *                           (g) BPB_NumFATs (should be 2).
ARM GAS  /tmp/ccazZ5Hl.s 			page 43


2368:rtos/uC-FS/FAT/fs_fat.c **** *
2369:rtos/uC-FS/FAT/fs_fat.c **** *               (7) Default case already invalidated by prior assignment of 'sys_cfg.FAT_Type'.  Ho
2370:rtos/uC-FS/FAT/fs_fat.c **** *                   the default case is included an extra precaution in case 'sys_cfg.FAT_Type' is
2371:rtos/uC-FS/FAT/fs_fat.c **** *                   incorrectly modified.
2372:rtos/uC-FS/FAT/fs_fat.c **** *
2373:rtos/uC-FS/FAT/fs_fat.c **** *               (8) Avoid 'Excessive shift value' or 'Constant expression evaluates to 0' warning.
2374:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2375:rtos/uC-FS/FAT/fs_fat.c **** */
2376:rtos/uC-FS/FAT/fs_fat.c **** 
2377:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
2378:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_VolFmt (FS_VOL       *p_vol,
2379:rtos/uC-FS/FAT/fs_fat.c ****                      void         *p_sys_cfg,
2380:rtos/uC-FS/FAT/fs_fat.c ****                      FS_SEC_SIZE   sec_size,
2381:rtos/uC-FS/FAT/fs_fat.c ****                      FS_SEC_QTY    size,
2382:rtos/uC-FS/FAT/fs_fat.c ****                      FS_ERR       *p_err)
2383:rtos/uC-FS/FAT/fs_fat.c **** {
2384:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF            *p_buf;
2385:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    data_size;
2386:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U         fat_ix;
2387:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     fat_size;
2388:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     fat_sec_cur;
2389:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     fat1_sec_start;
2390:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SYS_CFG     sys_cfg;
2391:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SYS_CFG    *p_fat_sys_cfg;
2392:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     root_dir_size;
2393:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     root_dir_sec_start;
2394:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     rsvd_sec_start;
2395:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U         val;
2396:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     data_sec_start;
2397:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U         clus_number;
2398:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_PARTITION_EN == DEF_ENABLED)
2399:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U         partition_type;
2400:rtos/uC-FS/FAT/fs_fat.c ****     FS_ERR             err_tmp;
2401:rtos/uC-FS/FAT/fs_fat.c **** #endif
2402:rtos/uC-FS/FAT/fs_fat.c **** 
2403:rtos/uC-FS/FAT/fs_fat.c **** 
2404:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- VERIFY DISK IN
2405:rtos/uC-FS/FAT/fs_fat.c ****     if (size == 0u) {                                           /* Verify nbr secs.                
2406:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid dev size: 0.\r\n"));
2407:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_DEV_INVALID_SIZE;
2408:rtos/uC-FS/FAT/fs_fat.c ****         return;
2409:rtos/uC-FS/FAT/fs_fat.c ****     }
2410:rtos/uC-FS/FAT/fs_fat.c **** 
2411:rtos/uC-FS/FAT/fs_fat.c ****     if (p_sys_cfg == (FS_FAT_SYS_CFG *)0) {
2412:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_GetSysCfg( sec_size,                             /* Get FAT configuration.          
2413:rtos/uC-FS/FAT/fs_fat.c ****                           size,
2414:rtos/uC-FS/FAT/fs_fat.c ****                          &sys_cfg,
2415:rtos/uC-FS/FAT/fs_fat.c ****                           p_err);
2416:rtos/uC-FS/FAT/fs_fat.c **** 
2417:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
2418:rtos/uC-FS/FAT/fs_fat.c ****             return;
2419:rtos/uC-FS/FAT/fs_fat.c ****         }
2420:rtos/uC-FS/FAT/fs_fat.c ****     } else {
2421:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_sys_cfg = (FS_FAT_SYS_CFG *)p_sys_cfg;
2422:rtos/uC-FS/FAT/fs_fat.c **** 
2423:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.FAT_Type        = p_fat_sys_cfg->FAT_Type;
2424:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.RootDirEntryCnt = p_fat_sys_cfg->RootDirEntryCnt;
ARM GAS  /tmp/ccazZ5Hl.s 			page 44


2425:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.RsvdAreaSize    = p_fat_sys_cfg->RsvdAreaSize;
2426:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.ClusSize        = p_fat_sys_cfg->ClusSize;
2427:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.NbrFATs         = p_fat_sys_cfg->NbrFATs;
2428:rtos/uC-FS/FAT/fs_fat.c **** 
2429:rtos/uC-FS/FAT/fs_fat.c ****         if ((sys_cfg.ClusSize == 0u) ||
2430:rtos/uC-FS/FAT/fs_fat.c ****             (sys_cfg.ClusSize >  128u)) {
2431:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_VolFmt(): Cfg'd cluster size invalid: %d.\r\n", sys_cfg.ClusSize)
2432:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SYS;
2433:rtos/uC-FS/FAT/fs_fat.c ****             return;
2434:rtos/uC-FS/FAT/fs_fat.c ****         }
2435:rtos/uC-FS/FAT/fs_fat.c **** 
2436:rtos/uC-FS/FAT/fs_fat.c ****         if ((sys_cfg.ClusSize & (sys_cfg.ClusSize - 1u)) != 0u) { /* Check if ClusSize is a pwr of 
2437:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_VolFmt(): Cfg'd cluster size invalid: %d.\r\n", sys_cfg.ClusSize)
2438:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SYS;
2439:rtos/uC-FS/FAT/fs_fat.c ****             return;
2440:rtos/uC-FS/FAT/fs_fat.c ****         }
2441:rtos/uC-FS/FAT/fs_fat.c **** 
2442:rtos/uC-FS/FAT/fs_fat.c ****         if ((sys_cfg.NbrFATs != 1u) && (sys_cfg.NbrFATs != 2u)) {
2443:rtos/uC-FS/FAT/fs_fat.c ****              sys_cfg.NbrFATs  = 2u;
2444:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting nbr FATs to 2.\r\n"));
2445:rtos/uC-FS/FAT/fs_fat.c ****         }
2446:rtos/uC-FS/FAT/fs_fat.c **** 
2447:rtos/uC-FS/FAT/fs_fat.c ****         switch (sys_cfg.FAT_Type) {
2448:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT12_EN == DEF_ENABLED)
2449:rtos/uC-FS/FAT/fs_fat.c ****             case FS_FAT_FAT_TYPE_FAT12:
2450:rtos/uC-FS/FAT/fs_fat.c ****                  if (sys_cfg.RootDirEntryCnt == 0u) {
2451:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RootDirEntryCnt = DEF_MIN(512u, 1u + (size / 2u));
2452:rtos/uC-FS/FAT/fs_fat.c ****                  }
2453:rtos/uC-FS/FAT/fs_fat.c ****                  if (sys_cfg.RsvdAreaSize == 0u) {
2454:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RsvdAreaSize = FS_FAT_DFLT_RSVD_SEC_CNT_FAT12;
2455:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting FAT rsvd area size to default: %d.\r\n
2456:rtos/uC-FS/FAT/fs_fat.c ****                  }
2457:rtos/uC-FS/FAT/fs_fat.c ****                  break;
2458:rtos/uC-FS/FAT/fs_fat.c **** #endif
2459:rtos/uC-FS/FAT/fs_fat.c **** 
2460:rtos/uC-FS/FAT/fs_fat.c **** 
2461:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT16_EN == DEF_ENABLED)
2462:rtos/uC-FS/FAT/fs_fat.c ****             case FS_FAT_FAT_TYPE_FAT16:
2463:rtos/uC-FS/FAT/fs_fat.c ****                  if (sys_cfg.RootDirEntryCnt == 0u) {
2464:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RootDirEntryCnt = (CPU_INT16U)DEF_MIN(512u, 1u + (size / 2u));
2465:rtos/uC-FS/FAT/fs_fat.c ****                  }
2466:rtos/uC-FS/FAT/fs_fat.c ****                  if (sys_cfg.RsvdAreaSize == 0u) {
2467:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RsvdAreaSize = FS_FAT_DFLT_RSVD_SEC_CNT_FAT16;
2468:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting FAT rsvd area size to default: %d.\r\n
2469:rtos/uC-FS/FAT/fs_fat.c ****                  }
2470:rtos/uC-FS/FAT/fs_fat.c ****                  break;
2471:rtos/uC-FS/FAT/fs_fat.c **** #endif
2472:rtos/uC-FS/FAT/fs_fat.c **** 
2473:rtos/uC-FS/FAT/fs_fat.c **** 
2474:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT32_EN == DEF_ENABLED)
2475:rtos/uC-FS/FAT/fs_fat.c ****             case FS_FAT_FAT_TYPE_FAT32:
2476:rtos/uC-FS/FAT/fs_fat.c ****                  if (sys_cfg.RootDirEntryCnt != 0u) {
2477:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RootDirEntryCnt  = 0u;
2478:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting root dir entry cnt to 0 for FAT32.\r\n
2479:rtos/uC-FS/FAT/fs_fat.c ****                  }
2480:rtos/uC-FS/FAT/fs_fat.c ****                  if (sys_cfg.RsvdAreaSize == 0u) {
2481:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RsvdAreaSize = FS_FAT_DFLT_RSVD_SEC_CNT_FAT32;
ARM GAS  /tmp/ccazZ5Hl.s 			page 45


2482:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting FAT rsvd area size to default: %d.\r\n
2483:rtos/uC-FS/FAT/fs_fat.c ****                  } else if (sys_cfg.RsvdAreaSize < FS_FAT_DFLT_BKBOOTSEC_SEC_NBR + 1u) {
2484:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Make sure there is enough room f
2485:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Cfg'd FAT rsvd area size invalid: %d.\r\n", sy
2486:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_VOL_INVALID_SYS;
2487:rtos/uC-FS/FAT/fs_fat.c ****                      return;
2488:rtos/uC-FS/FAT/fs_fat.c ****                  } else {
2489:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rsvd area size cfg is legal.    
2490:rtos/uC-FS/FAT/fs_fat.c ****                  }
2491:rtos/uC-FS/FAT/fs_fat.c ****                  break;
2492:rtos/uC-FS/FAT/fs_fat.c **** #endif
2493:rtos/uC-FS/FAT/fs_fat.c **** 
2494:rtos/uC-FS/FAT/fs_fat.c **** 
2495:rtos/uC-FS/FAT/fs_fat.c ****             default:
2496:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Cfg'd FAT type invalid: %d.\r\n", sys_cfg.ClusSize
2497:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_VOL_INVALID_SYS;
2498:rtos/uC-FS/FAT/fs_fat.c ****                  return;
2499:rtos/uC-FS/FAT/fs_fat.c ****         }
2500:rtos/uC-FS/FAT/fs_fat.c ****     }
2501:rtos/uC-FS/FAT/fs_fat.c **** 
2502:rtos/uC-FS/FAT/fs_fat.c **** 
2503:rtos/uC-FS/FAT/fs_fat.c ****     p_buf = FSBuf_Get(p_vol);
2504:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
2505:rtos/uC-FS/FAT/fs_fat.c ****        *p_err =   FS_ERR_BUF_NONE_AVAIL;
2506:rtos/uC-FS/FAT/fs_fat.c ****         return;
2507:rtos/uC-FS/FAT/fs_fat.c ****     }
2508:rtos/uC-FS/FAT/fs_fat.c **** 
2509:rtos/uC-FS/FAT/fs_fat.c ****     FSVol_ReleaseLocked(p_vol,                                  /* Release vol secs.               
2510:rtos/uC-FS/FAT/fs_fat.c ****                         0u,
2511:rtos/uC-FS/FAT/fs_fat.c ****                         size,
2512:rtos/uC-FS/FAT/fs_fat.c ****                         p_err);
2513:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
2514:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
2515:rtos/uC-FS/FAT/fs_fat.c ****         return;
2516:rtos/uC-FS/FAT/fs_fat.c ****     }
2517:rtos/uC-FS/FAT/fs_fat.c **** 
2518:rtos/uC-FS/FAT/fs_fat.c ****     root_dir_size = (((FS_FAT_SEC_NBR)sys_cfg.RootDirEntryCnt * FS_FAT_SIZE_DIR_ENTRY) + (sec_size 
2519:rtos/uC-FS/FAT/fs_fat.c ****     if(size <= root_dir_size + sys_cfg.RsvdAreaSize) {
2520:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number.\r\n"));
2521:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_INVALID_SYS;
2522:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
2523:rtos/uC-FS/FAT/fs_fat.c ****         return;
2524:rtos/uC-FS/FAT/fs_fat.c ****     }
2525:rtos/uC-FS/FAT/fs_fat.c ****     switch (sys_cfg.FAT_Type) {
2526:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT16_EN == DEF_ENABLED)
2527:rtos/uC-FS/FAT/fs_fat.c ****         case FS_FAT_FAT_TYPE_FAT16:                             /* ----------------- CALC FMT PARAM
2528:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc data sec cnt (see Note #4).
2529:rtos/uC-FS/FAT/fs_fat.c ****              data_size          = ((((size - root_dir_size) - sys_cfg.RsvdAreaSize)
2530:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT16_E
2531:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
2532:rtos/uC-FS/FAT/fs_fat.c ****              fat_size           = (data_size + (sec_size / FS_FAT_FAT16_ENTRY_NBR_OCTETS) - 1u)
2533:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT16_ENTRY_NBR_OCTETS);
2534:rtos/uC-FS/FAT/fs_fat.c **** 
2535:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_PARTITION_EN == DEF_ENABLED)
2536:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Find the FAT16 type             
2537:rtos/uC-FS/FAT/fs_fat.c ****              partition_type     = (size * sec_size) > FS_FAT_MAX_SIZE_HUGE_FAT16 ? FS_PARTITION_TYP
2538:rtos/uC-FS/FAT/fs_fat.c ****                                                                                    FS_PARTITION_TYP
ARM GAS  /tmp/ccazZ5Hl.s 			page 46


2539:rtos/uC-FS/FAT/fs_fat.c **** #endif
2540:rtos/uC-FS/FAT/fs_fat.c **** 
2541:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc start sec nbr's.           
2542:rtos/uC-FS/FAT/fs_fat.c ****              rsvd_sec_start     = 0u;
2543:rtos/uC-FS/FAT/fs_fat.c ****              fat1_sec_start     = rsvd_sec_start + sys_cfg.RsvdAreaSize;
2544:rtos/uC-FS/FAT/fs_fat.c ****              root_dir_sec_start = fat1_sec_start + (fat_size * sys_cfg.NbrFATs);
2545:rtos/uC-FS/FAT/fs_fat.c **** 
2546:rtos/uC-FS/FAT/fs_fat.c **** 
2547:rtos/uC-FS/FAT/fs_fat.c ****              data_sec_start     = root_dir_sec_start + root_dir_size;
2548:rtos/uC-FS/FAT/fs_fat.c ****              clus_number        = DEF_MIN((size - data_sec_start) / sys_cfg.ClusSize, (fat_size * s
2549:rtos/uC-FS/FAT/fs_fat.c **** 
2550:rtos/uC-FS/FAT/fs_fat.c ****              if(data_sec_start > size) {
2551:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
2552:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_VOL_INVALID_SYS;
2553:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
2554:rtos/uC-FS/FAT/fs_fat.c ****                  return;
2555:rtos/uC-FS/FAT/fs_fat.c ****              }
2556:rtos/uC-FS/FAT/fs_fat.c **** 
2557:rtos/uC-FS/FAT/fs_fat.c ****              if (clus_number <= FS_FAT_MAX_NBR_CLUS_FAT12) {
2558:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
2559:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_VOL_INVALID_SYS;
2560:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
2561:rtos/uC-FS/FAT/fs_fat.c ****                   return;
2562:rtos/uC-FS/FAT/fs_fat.c ****              } else if (clus_number > FS_FAT_MAX_NBR_CLUS_FAT16) {
2563:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
2564:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_VOL_INVALID_SYS;
2565:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
2566:rtos/uC-FS/FAT/fs_fat.c ****                   return;
2567:rtos/uC-FS/FAT/fs_fat.c ****              } else if (clus_number <= (FS_FAT_MAX_NBR_CLUS_FAT12 + FS_FAT_CLUS_NBR_TOLERANCE)) {
2568:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): clus number within unrecommended margin: %d.\r\n"
2569:rtos/uC-FS/FAT/fs_fat.c ****              } else if (clus_number >  (FS_FAT_MAX_NBR_CLUS_FAT16 - FS_FAT_CLUS_NBR_TOLERANCE)) {
2570:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): clus number within unrecommended margin: %d.\r\n"
2571:rtos/uC-FS/FAT/fs_fat.c ****              } else {
2572:rtos/uC-FS/FAT/fs_fat.c ****                  ;
2573:rtos/uC-FS/FAT/fs_fat.c ****              }
2574:rtos/uC-FS/FAT/fs_fat.c **** 
2575:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL != TRACE_LEVEL_OFF)
2576:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("FS_FAT_VolFmt(): Creating file system: Type     : FAT16  \r\n"));
2577:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       Sec  size: %d B   \r\n", sec_si
2578:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       Clus size: %d sec \r\n", sys_cf
2579:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       Vol  size: %d sec \r\n", size))
2580:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       # Clus   : %d     \r\n", clus_n
2581:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       # FATs   : %d     \r\n", sys_cf
2582:rtos/uC-FS/FAT/fs_fat.c **** #endif
2583:rtos/uC-FS/FAT/fs_fat.c **** 
2584:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------------- FMT DISK -
2585:rtos/uC-FS/FAT/fs_fat.c ****              Mem_Clr(p_buf->DataPtr, (CPU_SIZE_T)sec_size);
2586:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_MakeBootSec(p_buf->DataPtr,
2587:rtos/uC-FS/FAT/fs_fat.c ****                                &sys_cfg,
2588:rtos/uC-FS/FAT/fs_fat.c ****                                 sec_size,
2589:rtos/uC-FS/FAT/fs_fat.c ****                                 size,
2590:rtos/uC-FS/FAT/fs_fat.c ****                                 fat_size,
2591:rtos/uC-FS/FAT/fs_fat.c ****                                 p_vol->PartitionStart);
2592:rtos/uC-FS/FAT/fs_fat.c **** 
2593:rtos/uC-FS/FAT/fs_fat.c ****              FSVol_WrLockedEx(p_vol,                            /* Wr to boot sec.                 
2594:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf->DataPtr,
2595:rtos/uC-FS/FAT/fs_fat.c ****                               0u,
ARM GAS  /tmp/ccazZ5Hl.s 			page 47


2596:rtos/uC-FS/FAT/fs_fat.c ****                               1u,
2597:rtos/uC-FS/FAT/fs_fat.c ****                               FS_VOL_SEC_TYPE_MGMT,
2598:rtos/uC-FS/FAT/fs_fat.c ****                               p_err);
2599:rtos/uC-FS/FAT/fs_fat.c **** 
2600:rtos/uC-FS/FAT/fs_fat.c ****              if (*p_err != FS_ERR_NONE) {
2601:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
2602:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
2603:rtos/uC-FS/FAT/fs_fat.c ****                   return;
2604:rtos/uC-FS/FAT/fs_fat.c ****              }
2605:rtos/uC-FS/FAT/fs_fat.c ****              break;
2606:rtos/uC-FS/FAT/fs_fat.c **** #endif
2607:rtos/uC-FS/FAT/fs_fat.c **** 
2608:rtos/uC-FS/FAT/fs_fat.c **** 
2609:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT32_EN == DEF_ENABLED)
2610:rtos/uC-FS/FAT/fs_fat.c ****         case FS_FAT_FAT_TYPE_FAT32:                             /* ----------------- CALC FMT PARAM
2611:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc data sec cnt (see Note #4).
2612:rtos/uC-FS/FAT/fs_fat.c ****              data_size          = ((((size - root_dir_size) - sys_cfg.RsvdAreaSize)
2613:rtos/uC-FS/FAT/fs_fat.c ****                                 /  ((sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT32_ENTRY_NBR_OCTETS 
2614:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
2615:rtos/uC-FS/FAT/fs_fat.c ****              fat_size           = (data_size + (sec_size / FS_FAT_FAT32_ENTRY_NBR_OCTETS) - 1u)
2616:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT32_ENTRY_NBR_OCTETS);
2617:rtos/uC-FS/FAT/fs_fat.c **** 
2618:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_PARTITION_EN == DEF_ENABLED)
2619:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* FAT32 type                      
2620:rtos/uC-FS/FAT/fs_fat.c ****              partition_type     = FS_PARTITION_TYPE_FAT32_LBA;
2621:rtos/uC-FS/FAT/fs_fat.c **** #endif
2622:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Proj'd data sec nbr.            
2623:rtos/uC-FS/FAT/fs_fat.c ****              data_sec_start     = (fat_size * sys_cfg.NbrFATs) + root_dir_size + sys_cfg.RsvdAreaSi
2624:rtos/uC-FS/FAT/fs_fat.c **** 
2625:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc start sec nbr's.           
2626:rtos/uC-FS/FAT/fs_fat.c ****              rsvd_sec_start     = 0u;
2627:rtos/uC-FS/FAT/fs_fat.c ****              fat1_sec_start     = rsvd_sec_start + sys_cfg.RsvdAreaSize;
2628:rtos/uC-FS/FAT/fs_fat.c ****              root_dir_sec_start = fat1_sec_start + (fat_size * sys_cfg.NbrFATs);
2629:rtos/uC-FS/FAT/fs_fat.c **** 
2630:rtos/uC-FS/FAT/fs_fat.c ****              data_sec_start     = root_dir_sec_start + root_dir_size;
2631:rtos/uC-FS/FAT/fs_fat.c ****              clus_number        = DEF_MIN((size - data_sec_start) / sys_cfg.ClusSize, (fat_size * s
2632:rtos/uC-FS/FAT/fs_fat.c **** 
2633:rtos/uC-FS/FAT/fs_fat.c ****              if(data_sec_start > size) {
2634:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
2635:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_VOL_INVALID_SYS;
2636:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
2637:rtos/uC-FS/FAT/fs_fat.c ****                  return;
2638:rtos/uC-FS/FAT/fs_fat.c ****              }
2639:rtos/uC-FS/FAT/fs_fat.c **** 
2640:rtos/uC-FS/FAT/fs_fat.c ****              if (clus_number <= FS_FAT_MAX_NBR_CLUS_FAT16) {
2641:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
2642:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_VOL_INVALID_SYS;
2643:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
2644:rtos/uC-FS/FAT/fs_fat.c ****                   return;
2645:rtos/uC-FS/FAT/fs_fat.c ****              } else if (clus_number <= (FS_FAT_MAX_NBR_CLUS_FAT16 + FS_FAT_CLUS_NBR_TOLERANCE)) {
2646:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): clus number within unrecommended margin: %d.\r\n"
2647:rtos/uC-FS/FAT/fs_fat.c ****              } else {
2648:rtos/uC-FS/FAT/fs_fat.c ****                  ;
2649:rtos/uC-FS/FAT/fs_fat.c ****              }
2650:rtos/uC-FS/FAT/fs_fat.c **** 
2651:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL != TRACE_LEVEL_OFF)
2652:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("FS_FAT_VolFmt(): Creating file system: Type     : FAT32  \r\n"));
ARM GAS  /tmp/ccazZ5Hl.s 			page 48


2653:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       Sec  size: %d B   \r\n", sec_si
2654:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       Clus size: %d sec \r\n", sys_cf
2655:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       Vol  size: %d sec \r\n", size))
2656:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       # Clus   : %d     \r\n", clus_n
2657:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       # FATs   : %d     \r\n", sys_cf
2658:rtos/uC-FS/FAT/fs_fat.c **** #endif
2659:rtos/uC-FS/FAT/fs_fat.c **** 
2660:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------------- FMT DISK -
2661:rtos/uC-FS/FAT/fs_fat.c ****              Mem_Clr(p_buf->DataPtr, (CPU_SIZE_T)sec_size);
2662:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_MakeBootSec(p_buf->DataPtr,
2663:rtos/uC-FS/FAT/fs_fat.c ****                                &sys_cfg,
2664:rtos/uC-FS/FAT/fs_fat.c ****                                 sec_size,
2665:rtos/uC-FS/FAT/fs_fat.c ****                                 size,
2666:rtos/uC-FS/FAT/fs_fat.c ****                                 fat_size,
2667:rtos/uC-FS/FAT/fs_fat.c ****                                 p_vol->PartitionStart);
2668:rtos/uC-FS/FAT/fs_fat.c **** 
2669:rtos/uC-FS/FAT/fs_fat.c ****              FSVol_WrLockedEx(p_vol,                            /* Wr to boot sec.                 
2670:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf->DataPtr,
2671:rtos/uC-FS/FAT/fs_fat.c ****                               0u,
2672:rtos/uC-FS/FAT/fs_fat.c ****                               1u,
2673:rtos/uC-FS/FAT/fs_fat.c ****                               FS_VOL_SEC_TYPE_MGMT,
2674:rtos/uC-FS/FAT/fs_fat.c ****                               p_err);
2675:rtos/uC-FS/FAT/fs_fat.c **** 
2676:rtos/uC-FS/FAT/fs_fat.c ****              if (*p_err != FS_ERR_NONE) {
2677:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
2678:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
2679:rtos/uC-FS/FAT/fs_fat.c ****                   return;
2680:rtos/uC-FS/FAT/fs_fat.c ****              }
2681:rtos/uC-FS/FAT/fs_fat.c **** 
2682:rtos/uC-FS/FAT/fs_fat.c ****              FSVol_WrLockedEx(p_vol,                            /* Wr to bk boot sec.              
2683:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf->DataPtr,
2684:rtos/uC-FS/FAT/fs_fat.c ****                               FS_FAT_DFLT_BKBOOTSEC_SEC_NBR,
2685:rtos/uC-FS/FAT/fs_fat.c ****                               1u,
2686:rtos/uC-FS/FAT/fs_fat.c ****                               FS_VOL_SEC_TYPE_MGMT,
2687:rtos/uC-FS/FAT/fs_fat.c ****                               p_err);
2688:rtos/uC-FS/FAT/fs_fat.c **** 
2689:rtos/uC-FS/FAT/fs_fat.c ****              if (*p_err != FS_ERR_NONE) {
2690:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
2691:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
2692:rtos/uC-FS/FAT/fs_fat.c ****                   return;
2693:rtos/uC-FS/FAT/fs_fat.c ****              }
2694:rtos/uC-FS/FAT/fs_fat.c ****              break;
2695:rtos/uC-FS/FAT/fs_fat.c **** #endif
2696:rtos/uC-FS/FAT/fs_fat.c **** 
2697:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT12_EN == DEF_ENABLED)
2698:rtos/uC-FS/FAT/fs_fat.c ****         case FS_FAT_FAT_TYPE_FAT12:                             /* ----------------- CALC FMT PARAM
2699:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc data sec cnt (see Note #4).
2700:rtos/uC-FS/FAT/fs_fat.c ****              data_size          = ((((size - root_dir_size) - sys_cfg.RsvdAreaSize)
2701:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + ((FS_FAT_SEC_NB
2702:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
2703:rtos/uC-FS/FAT/fs_fat.c ****              fat_size           = (data_size + (((sec_size * 2u) + 1u) / 3u) - 1u)
2704:rtos/uC-FS/FAT/fs_fat.c ****                                 / (((sec_size * 2u) + 1u) / 3u);
2705:rtos/uC-FS/FAT/fs_fat.c **** 
2706:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_PARTITION_EN == DEF_ENABLED)
2707:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* FAT12 type                      
2708:rtos/uC-FS/FAT/fs_fat.c ****              partition_type     = FS_PARTITION_TYPE_FAT12_CHS;
2709:rtos/uC-FS/FAT/fs_fat.c **** #endif
ARM GAS  /tmp/ccazZ5Hl.s 			page 49


2710:rtos/uC-FS/FAT/fs_fat.c **** 
2711:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc start sec nbr's.           
2712:rtos/uC-FS/FAT/fs_fat.c ****              rsvd_sec_start     = 0u;
2713:rtos/uC-FS/FAT/fs_fat.c ****              fat1_sec_start     = rsvd_sec_start + sys_cfg.RsvdAreaSize;
2714:rtos/uC-FS/FAT/fs_fat.c ****              root_dir_sec_start = fat1_sec_start + (fat_size * sys_cfg.NbrFATs);
2715:rtos/uC-FS/FAT/fs_fat.c **** 
2716:rtos/uC-FS/FAT/fs_fat.c ****              data_sec_start     = root_dir_sec_start + root_dir_size;
2717:rtos/uC-FS/FAT/fs_fat.c ****              clus_number        = DEF_MIN((size - data_sec_start) / sys_cfg.ClusSize, (fat_size * s
2718:rtos/uC-FS/FAT/fs_fat.c **** 
2719:rtos/uC-FS/FAT/fs_fat.c ****              if(data_sec_start > size) {
2720:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
2721:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_VOL_INVALID_SYS;
2722:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
2723:rtos/uC-FS/FAT/fs_fat.c ****                  return;
2724:rtos/uC-FS/FAT/fs_fat.c ****              }
2725:rtos/uC-FS/FAT/fs_fat.c **** 
2726:rtos/uC-FS/FAT/fs_fat.c ****              if (clus_number > FS_FAT_MAX_NBR_CLUS_FAT12) {
2727:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
2728:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_VOL_INVALID_SYS;
2729:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
2730:rtos/uC-FS/FAT/fs_fat.c ****                   return;
2731:rtos/uC-FS/FAT/fs_fat.c ****              } else if (clus_number > (FS_FAT_MAX_NBR_CLUS_FAT12 - FS_FAT_CLUS_NBR_TOLERANCE)) {
2732:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): clus number within unrecommended margin: %d.\r\n"
2733:rtos/uC-FS/FAT/fs_fat.c ****              } else {
2734:rtos/uC-FS/FAT/fs_fat.c ****                  ;
2735:rtos/uC-FS/FAT/fs_fat.c ****              }
2736:rtos/uC-FS/FAT/fs_fat.c **** 
2737:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL != TRACE_LEVEL_OFF)
2738:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("FS_FAT_VolFmt(): Creating file system: Type     : FAT12  \r\n"));
2739:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       Sec  size: %d B   \r\n", sec_si
2740:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       Clus size: %d sec \r\n", sys_cf
2741:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       Vol  size: %d sec \r\n", size))
2742:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       # Clus   : %d     \r\n", clus_n
2743:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_INFO(("                                       # FATs   : %d     \r\n", sys_cf
2744:rtos/uC-FS/FAT/fs_fat.c **** #endif
2745:rtos/uC-FS/FAT/fs_fat.c **** 
2746:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------------- FMT DISK -
2747:rtos/uC-FS/FAT/fs_fat.c ****              Mem_Clr(p_buf->DataPtr, (CPU_SIZE_T)sec_size);
2748:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_MakeBootSec(p_buf->DataPtr,
2749:rtos/uC-FS/FAT/fs_fat.c ****                                &sys_cfg,
2750:rtos/uC-FS/FAT/fs_fat.c ****                                 sec_size,
2751:rtos/uC-FS/FAT/fs_fat.c ****                                 size,
2752:rtos/uC-FS/FAT/fs_fat.c ****                                 fat_size,
2753:rtos/uC-FS/FAT/fs_fat.c ****                                 p_vol->PartitionStart);
2754:rtos/uC-FS/FAT/fs_fat.c **** 
2755:rtos/uC-FS/FAT/fs_fat.c **** 
2756:rtos/uC-FS/FAT/fs_fat.c ****              FSVol_WrLockedEx(p_vol,                            /* Wr to boot sec.                 
2757:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf->DataPtr,
2758:rtos/uC-FS/FAT/fs_fat.c ****                               0u,
2759:rtos/uC-FS/FAT/fs_fat.c ****                               1u,
2760:rtos/uC-FS/FAT/fs_fat.c ****                               FS_VOL_SEC_TYPE_MGMT,
2761:rtos/uC-FS/FAT/fs_fat.c ****                               p_err);
2762:rtos/uC-FS/FAT/fs_fat.c **** 
2763:rtos/uC-FS/FAT/fs_fat.c ****              if (*p_err != FS_ERR_NONE) {
2764:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_DEV;
2765:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
2766:rtos/uC-FS/FAT/fs_fat.c ****                   return;
ARM GAS  /tmp/ccazZ5Hl.s 			page 50


2767:rtos/uC-FS/FAT/fs_fat.c ****              }
2768:rtos/uC-FS/FAT/fs_fat.c ****              break;
2769:rtos/uC-FS/FAT/fs_fat.c **** #endif
2770:rtos/uC-FS/FAT/fs_fat.c **** 
2771:rtos/uC-FS/FAT/fs_fat.c ****         default:                                                /* See Note #7.                    
2772:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
2773:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_DEV_INVALID_SIZE;
2774:rtos/uC-FS/FAT/fs_fat.c ****              return;
2775:rtos/uC-FS/FAT/fs_fat.c ****     }
2776:rtos/uC-FS/FAT/fs_fat.c **** 
2777:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------------- CLR FATs -
2778:rtos/uC-FS/FAT/fs_fat.c ****     fat_ix      = 0u;
2779:rtos/uC-FS/FAT/fs_fat.c ****     fat_sec_cur = fat1_sec_start;
2780:rtos/uC-FS/FAT/fs_fat.c ****     while (fat_ix < sys_cfg.NbrFATs) {                          /* Clr each FAT.                   
2781:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,
2782:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf->DataPtr,
2783:rtos/uC-FS/FAT/fs_fat.c ****                       fat_sec_cur,
2784:rtos/uC-FS/FAT/fs_fat.c ****                       fat_size,
2785:rtos/uC-FS/FAT/fs_fat.c ****                       sec_size,
2786:rtos/uC-FS/FAT/fs_fat.c ****                       FS_VOL_SEC_TYPE_MGMT,
2787:rtos/uC-FS/FAT/fs_fat.c ****                       p_err);
2788:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
2789:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
2790:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
2791:rtos/uC-FS/FAT/fs_fat.c ****              return;
2792:rtos/uC-FS/FAT/fs_fat.c ****         }
2793:rtos/uC-FS/FAT/fs_fat.c **** 
2794:rtos/uC-FS/FAT/fs_fat.c ****         fat_sec_cur += fat_size;
2795:rtos/uC-FS/FAT/fs_fat.c ****         fat_ix++;
2796:rtos/uC-FS/FAT/fs_fat.c ****     }
2797:rtos/uC-FS/FAT/fs_fat.c **** 
2798:rtos/uC-FS/FAT/fs_fat.c **** 
2799:rtos/uC-FS/FAT/fs_fat.c **** 
2800:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- WR FIRST FAT S
2801:rtos/uC-FS/FAT/fs_fat.c ****     switch (sys_cfg.FAT_Type) {                                 /* Set first entries of FAT.       
2802:rtos/uC-FS/FAT/fs_fat.c ****         case FS_FAT_FAT_TYPE_FAT12:
2803:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x00FF8F00u | FS_FAT_BPB_MEDIA_FIXED;        /* See Note #8.                    
2804:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 0u), val);
2805:rtos/uC-FS/FAT/fs_fat.c ****              break;
2806:rtos/uC-FS/FAT/fs_fat.c **** 
2807:rtos/uC-FS/FAT/fs_fat.c **** 
2808:rtos/uC-FS/FAT/fs_fat.c ****         case FS_FAT_FAT_TYPE_FAT16:
2809:rtos/uC-FS/FAT/fs_fat.c ****              val = 0xFFF8FF00u | FS_FAT_BPB_MEDIA_FIXED;        /* See Note #8.                    
2810:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 0u), val);
2811:rtos/uC-FS/FAT/fs_fat.c ****              break;
2812:rtos/uC-FS/FAT/fs_fat.c **** 
2813:rtos/uC-FS/FAT/fs_fat.c **** 
2814:rtos/uC-FS/FAT/fs_fat.c ****         case FS_FAT_FAT_TYPE_FAT32:
2815:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFFF8u;                                 /* See Note #8.                    
2816:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 0u), val);
2817:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFF00u | FS_FAT_BPB_MEDIA_FIXED;        /* See Note #8.                    
2818:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 4u), val);
2819:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFFF8u;                                 /* See Note #8.                    
2820:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 8u), val); /* Clus 2
2821:rtos/uC-FS/FAT/fs_fat.c ****              break;
2822:rtos/uC-FS/FAT/fs_fat.c **** 
2823:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 51


2824:rtos/uC-FS/FAT/fs_fat.c ****         default:                                                /* See Note #7.                    
2825:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
2826:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_DEV_INVALID_SIZE;
2827:rtos/uC-FS/FAT/fs_fat.c ****              break;
2828:rtos/uC-FS/FAT/fs_fat.c ****     }
2829:rtos/uC-FS/FAT/fs_fat.c **** 
2830:rtos/uC-FS/FAT/fs_fat.c ****     fat_ix      = 0u;
2831:rtos/uC-FS/FAT/fs_fat.c ****     fat_sec_cur = fat1_sec_start;
2832:rtos/uC-FS/FAT/fs_fat.c ****     while (fat_ix < sys_cfg.NbrFATs) {                          /* Wr sec to each FAT.             
2833:rtos/uC-FS/FAT/fs_fat.c ****         FSVol_WrLockedEx(p_vol,
2834:rtos/uC-FS/FAT/fs_fat.c ****                          p_buf->DataPtr,
2835:rtos/uC-FS/FAT/fs_fat.c ****                          fat_sec_cur,
2836:rtos/uC-FS/FAT/fs_fat.c ****                          1u,
2837:rtos/uC-FS/FAT/fs_fat.c ****                          FS_VOL_SEC_TYPE_MGMT,
2838:rtos/uC-FS/FAT/fs_fat.c ****                          p_err);
2839:rtos/uC-FS/FAT/fs_fat.c **** 
2840:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
2841:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
2842:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
2843:rtos/uC-FS/FAT/fs_fat.c ****              return;
2844:rtos/uC-FS/FAT/fs_fat.c ****         }
2845:rtos/uC-FS/FAT/fs_fat.c **** 
2846:rtos/uC-FS/FAT/fs_fat.c ****         fat_ix++;
2847:rtos/uC-FS/FAT/fs_fat.c ****         fat_sec_cur += fat_size;
2848:rtos/uC-FS/FAT/fs_fat.c ****     }
2849:rtos/uC-FS/FAT/fs_fat.c **** 
2850:rtos/uC-FS/FAT/fs_fat.c **** 
2851:rtos/uC-FS/FAT/fs_fat.c **** 
2852:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ WR FSINFO SEC
2853:rtos/uC-FS/FAT/fs_fat.c ****     if (sys_cfg.FAT_Type == FS_FAT_FAT_TYPE_FAT32) {
2854:rtos/uC-FS/FAT/fs_fat.c ****         Mem_Clr(p_buf->DataPtr, (CPU_SIZE_T)sec_size);
2855:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_LEADSIG;                               /* See Note #8.                    
2856:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + FS_FAT_FSI_OFF_LEADSIG), 
2857:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_STRUCSIG;                              /* See Note #8.                    
2858:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + FS_FAT_FSI_OFF_STRUCSIG),
2859:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_TRAILSIG;                              /* See Note #8.                    
2860:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + FS_FAT_FSI_OFF_TRAILSIG),
2861:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Only one clus (for root dir) is 
2862:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + FS_FAT_FSI_OFF_FREE_COUNT
2863:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Next free clus is clus after roo
2864:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_DFLT_ROOT_CLUS_NBR + 1u;                   /* See Note #8.                    
2865:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + FS_FAT_FSI_OFF_NXT_FREE),
2866:rtos/uC-FS/FAT/fs_fat.c **** 
2867:rtos/uC-FS/FAT/fs_fat.c ****         FSVol_WrLockedEx(p_vol,                                 /* Wr FSINFO sec.                  
2868:rtos/uC-FS/FAT/fs_fat.c ****                          p_buf->DataPtr,
2869:rtos/uC-FS/FAT/fs_fat.c ****                          FS_FAT_DFLT_FSINFO_SEC_NBR,
2870:rtos/uC-FS/FAT/fs_fat.c ****                          1u,
2871:rtos/uC-FS/FAT/fs_fat.c ****                          FS_VOL_SEC_TYPE_MGMT,
2872:rtos/uC-FS/FAT/fs_fat.c ****                          p_err);
2873:rtos/uC-FS/FAT/fs_fat.c **** 
2874:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
2875:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
2876:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
2877:rtos/uC-FS/FAT/fs_fat.c ****              return;
2878:rtos/uC-FS/FAT/fs_fat.c ****         }
2879:rtos/uC-FS/FAT/fs_fat.c ****     }
2880:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Update the Partition FAT type   
ARM GAS  /tmp/ccazZ5Hl.s 			page 52


2881:rtos/uC-FS/FAT/fs_fat.c **** 
2882:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_PARTITION_EN == DEF_ENABLED)
2883:rtos/uC-FS/FAT/fs_fat.c ****     if (p_vol->PartitionStart > 0u) {
2884:rtos/uC-FS/FAT/fs_fat.c ****         FSPartition_Update ( p_vol->DevPtr,
2885:rtos/uC-FS/FAT/fs_fat.c ****                              p_vol->PartitionNbr,
2886:rtos/uC-FS/FAT/fs_fat.c ****                              partition_type,
2887:rtos/uC-FS/FAT/fs_fat.c ****                             &err_tmp);
2888:rtos/uC-FS/FAT/fs_fat.c ****     }
2889:rtos/uC-FS/FAT/fs_fat.c **** #endif
2890:rtos/uC-FS/FAT/fs_fat.c **** 
2891:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- CLR ROOT DIR
2892:rtos/uC-FS/FAT/fs_fat.c ****     if (sys_cfg.FAT_Type == FS_FAT_FAT_TYPE_FAT32) {
2893:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,                                    /* Clr root dir clus.              
2894:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf->DataPtr,
2895:rtos/uC-FS/FAT/fs_fat.c ****                       root_dir_sec_start,
2896:rtos/uC-FS/FAT/fs_fat.c ****                       sys_cfg.ClusSize,
2897:rtos/uC-FS/FAT/fs_fat.c ****                       sec_size,
2898:rtos/uC-FS/FAT/fs_fat.c ****                       FS_VOL_SEC_TYPE_DIR,
2899:rtos/uC-FS/FAT/fs_fat.c ****                       p_err);
2900:rtos/uC-FS/FAT/fs_fat.c ****     } else {
2901:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,                                    /* Clr root dir.                   
2902:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf->DataPtr,
2903:rtos/uC-FS/FAT/fs_fat.c ****                       root_dir_sec_start,
2904:rtos/uC-FS/FAT/fs_fat.c ****                       root_dir_size,
2905:rtos/uC-FS/FAT/fs_fat.c ****                       sec_size,
2906:rtos/uC-FS/FAT/fs_fat.c ****                       FS_VOL_SEC_TYPE_DIR,
2907:rtos/uC-FS/FAT/fs_fat.c ****                       p_err);
2908:rtos/uC-FS/FAT/fs_fat.c ****     }
2909:rtos/uC-FS/FAT/fs_fat.c **** 
2910:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
2911:rtos/uC-FS/FAT/fs_fat.c ****         *p_err  = FS_ERR_DEV;
2912:rtos/uC-FS/FAT/fs_fat.c ****          FSBuf_Free(p_buf);
2913:rtos/uC-FS/FAT/fs_fat.c ****          return;
2914:rtos/uC-FS/FAT/fs_fat.c ****     }
2915:rtos/uC-FS/FAT/fs_fat.c **** 
2916:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Flush(p_buf, p_err);
2917:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Free(p_buf);
2918:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
2919:rtos/uC-FS/FAT/fs_fat.c **** }
2920:rtos/uC-FS/FAT/fs_fat.c **** #endif
2921:rtos/uC-FS/FAT/fs_fat.c **** 
2922:rtos/uC-FS/FAT/fs_fat.c **** 
2923:rtos/uC-FS/FAT/fs_fat.c **** /*
2924:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2925:rtos/uC-FS/FAT/fs_fat.c **** *                                        FS_FAT_VolLabelGet()
2926:rtos/uC-FS/FAT/fs_fat.c **** *
2927:rtos/uC-FS/FAT/fs_fat.c **** * Description : Get volume label.
2928:rtos/uC-FS/FAT/fs_fat.c **** *
2929:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
2930:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2931:rtos/uC-FS/FAT/fs_fat.c **** *
2932:rtos/uC-FS/FAT/fs_fat.c **** *               label       String buffer that will receive volume label.
2933:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2934:rtos/uC-FS/FAT/fs_fat.c **** *
2935:rtos/uC-FS/FAT/fs_fat.c **** *               len_max     Size of string buffer (see Note #1).
2936:rtos/uC-FS/FAT/fs_fat.c **** *
2937:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
ARM GAS  /tmp/ccazZ5Hl.s 			page 53


2938:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2939:rtos/uC-FS/FAT/fs_fat.c **** *
2940:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE                   Label gotten.
2941:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_VOL_LABEL_NOT_FOUND    Volume label was not found.
2942:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_VOL_LABEL_TOO_LONG     Volume label is too long.
2943:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV                    Device access error.
2944:rtos/uC-FS/FAT/fs_fat.c **** *
2945:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
2946:rtos/uC-FS/FAT/fs_fat.c **** *
2947:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The maximum label length is 11 characters.  If the label is shorter that this, 
2948:rtos/uC-FS/FAT/fs_fat.c **** *                   should be padded with space characters (ASCII code point 20h) in the directory 
2949:rtos/uC-FS/FAT/fs_fat.c **** *                   those final space characters are kept in the string returned to the application
2950:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2951:rtos/uC-FS/FAT/fs_fat.c **** */
2952:rtos/uC-FS/FAT/fs_fat.c **** 
2953:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_VolLabelGet (FS_VOL      *p_vol,
2954:rtos/uC-FS/FAT/fs_fat.c ****                           CPU_CHAR    *label,
2955:rtos/uC-FS/FAT/fs_fat.c ****                           CPU_SIZE_T   len_max,
2956:rtos/uC-FS/FAT/fs_fat.c ****                           FS_ERR      *p_err)
2957:rtos/uC-FS/FAT/fs_fat.c **** {
2958:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR    label_buf[FS_FAT_VOL_LABEL_LEN + 1u];
2959:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T  label_len;
2960:rtos/uC-FS/FAT/fs_fat.c **** 
2961:rtos/uC-FS/FAT/fs_fat.c **** 
2962:rtos/uC-FS/FAT/fs_fat.c ****     Mem_Clr (label_buf, sizeof(label_buf));
2963:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_LabelGet(p_vol,
2964:rtos/uC-FS/FAT/fs_fat.c ****                         label_buf,
2965:rtos/uC-FS/FAT/fs_fat.c ****                         p_err);
2966:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
2967:rtos/uC-FS/FAT/fs_fat.c ****         return;
2968:rtos/uC-FS/FAT/fs_fat.c ****     }
2969:rtos/uC-FS/FAT/fs_fat.c **** 
2970:rtos/uC-FS/FAT/fs_fat.c ****     label_len = Str_Len_N(label_buf, FS_FAT_VOL_LABEL_LEN);
2971:rtos/uC-FS/FAT/fs_fat.c ****     if (label_len > len_max) {
2972:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_LABEL_TOO_LONG;
2973:rtos/uC-FS/FAT/fs_fat.c ****         return;
2974:rtos/uC-FS/FAT/fs_fat.c ****     }
2975:rtos/uC-FS/FAT/fs_fat.c **** 
2976:rtos/uC-FS/FAT/fs_fat.c ****     Str_Copy_N(label, label_buf, len_max);
2977:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
2978:rtos/uC-FS/FAT/fs_fat.c **** }
2979:rtos/uC-FS/FAT/fs_fat.c **** 
2980:rtos/uC-FS/FAT/fs_fat.c **** 
2981:rtos/uC-FS/FAT/fs_fat.c **** /*
2982:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
2983:rtos/uC-FS/FAT/fs_fat.c **** *                                        FS_FAT_VolLabelSet()
2984:rtos/uC-FS/FAT/fs_fat.c **** *
2985:rtos/uC-FS/FAT/fs_fat.c **** * Description : Set volume label.
2986:rtos/uC-FS/FAT/fs_fat.c **** *
2987:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
2988:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2989:rtos/uC-FS/FAT/fs_fat.c **** *
2990:rtos/uC-FS/FAT/fs_fat.c **** *               label       Volume label.
2991:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
2992:rtos/uC-FS/FAT/fs_fat.c **** *
2993:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2994:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
ARM GAS  /tmp/ccazZ5Hl.s 			page 54


2995:rtos/uC-FS/FAT/fs_fat.c **** *
2996:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE                  Label set.
2997:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_VOL_LABEL_INVALID     Volume label is invalid.
2998:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_VOL_LABEL_TOO_LONG    Volume label is too long.
2999:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV                   Device access error.
3000:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DIR_FULL              Directory is full (space could not be 
3001:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV_FULL              Device is full (space could not be all
3002:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_ENTRY_CORRUPT         File system entry is corrupt.
3003:rtos/uC-FS/FAT/fs_fat.c **** *
3004:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
3005:rtos/uC-FS/FAT/fs_fat.c **** *
3006:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The maximum label length is 11 characters.  If the label is shorter than this, 
3007:rtos/uC-FS/FAT/fs_fat.c **** *                   padded with space characters (ASCII code point 20h) until it is 11 characters.
3008:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3009:rtos/uC-FS/FAT/fs_fat.c **** */
3010:rtos/uC-FS/FAT/fs_fat.c **** 
3011:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
3012:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_VolLabelSet (FS_VOL    *p_vol,
3013:rtos/uC-FS/FAT/fs_fat.c ****                           CPU_CHAR  *label,
3014:rtos/uC-FS/FAT/fs_fat.c ****                           FS_ERR    *p_err)
3015:rtos/uC-FS/FAT/fs_fat.c **** {
3016:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR    label_buf[FS_FAT_VOL_LABEL_LEN + 1u];
3017:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T  label_len;
3018:rtos/uC-FS/FAT/fs_fat.c **** 
3019:rtos/uC-FS/FAT/fs_fat.c **** 
3020:rtos/uC-FS/FAT/fs_fat.c ****     label_len = Str_Len_N(label, FS_FAT_VOL_LABEL_LEN + 1u);
3021:rtos/uC-FS/FAT/fs_fat.c ****     if (label_len > FS_FAT_VOL_LABEL_LEN) {
3022:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_LABEL_TOO_LONG;
3023:rtos/uC-FS/FAT/fs_fat.c ****         return;
3024:rtos/uC-FS/FAT/fs_fat.c ****     }
3025:rtos/uC-FS/FAT/fs_fat.c **** 
3026:rtos/uC-FS/FAT/fs_fat.c ****     Mem_Set((void *)&label_buf[0], (CPU_CHAR)ASCII_CHAR_SPACE, sizeof(label_buf));
3027:rtos/uC-FS/FAT/fs_fat.c ****     label_buf[FS_FAT_VOL_LABEL_LEN] = (CPU_CHAR)ASCII_CHAR_NULL;
3028:rtos/uC-FS/FAT/fs_fat.c **** 
3029:rtos/uC-FS/FAT/fs_fat.c ****     Mem_Copy((void *)&label_buf[0], (void *)label, label_len);
3030:rtos/uC-FS/FAT/fs_fat.c **** 
3031:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_LabelSet(p_vol,
3032:rtos/uC-FS/FAT/fs_fat.c ****                         label_buf,
3033:rtos/uC-FS/FAT/fs_fat.c ****                         p_err);
3034:rtos/uC-FS/FAT/fs_fat.c **** }
3035:rtos/uC-FS/FAT/fs_fat.c **** #endif
3036:rtos/uC-FS/FAT/fs_fat.c **** 
3037:rtos/uC-FS/FAT/fs_fat.c **** 
3038:rtos/uC-FS/FAT/fs_fat.c **** /*
3039:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3040:rtos/uC-FS/FAT/fs_fat.c **** *                                          FS_FAT_VolOpen()
3041:rtos/uC-FS/FAT/fs_fat.c **** *
3042:rtos/uC-FS/FAT/fs_fat.c **** * Description : Detect file system on volume & initialize associated structures.
3043:rtos/uC-FS/FAT/fs_fat.c **** *
3044:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
3045:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
3046:rtos/uC-FS/FAT/fs_fat.c **** *
3047:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
3048:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
3049:rtos/uC-FS/FAT/fs_fat.c **** *
3050:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE              File system information gotten.
3051:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_BUF_NONE_AVAIL    No buffer available.
ARM GAS  /tmp/ccazZ5Hl.s 			page 55


3052:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV               Device access error.
3053:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_INVALID_SYS       Invalid file system.
3054:rtos/uC-FS/FAT/fs_fat.c **** *
3055:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
3056:rtos/uC-FS/FAT/fs_fat.c **** *
3057:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The file system lock MUST be held to get the FAT data from the FAT data pool.
3058:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3059:rtos/uC-FS/FAT/fs_fat.c **** */
3060:rtos/uC-FS/FAT/fs_fat.c **** 
3061:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_VolOpen (FS_VOL  *p_vol,
3062:rtos/uC-FS/FAT/fs_fat.c ****                       FS_ERR  *p_err)
3063:rtos/uC-FS/FAT/fs_fat.c **** {
3064:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U    boot_sig;
3065:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF       *p_buf;
3066:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA  *p_fat_data;
3067:rtos/uC-FS/FAT/fs_fat.c ****     void         *p_temp;
3068:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U   *p_temp_08;
3069:rtos/uC-FS/FAT/fs_fat.c ****     FS_ERR        err_tmp;
3070:rtos/uC-FS/FAT/fs_fat.c ****     LIB_ERR       pool_err;
3071:rtos/uC-FS/FAT/fs_fat.c **** 
3072:rtos/uC-FS/FAT/fs_fat.c **** 
3073:rtos/uC-FS/FAT/fs_fat.c ****     p_buf = FSBuf_Get(p_vol);
3074:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
3075:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
3076:rtos/uC-FS/FAT/fs_fat.c ****         return;
3077:rtos/uC-FS/FAT/fs_fat.c ****     }
3078:rtos/uC-FS/FAT/fs_fat.c **** 
3079:rtos/uC-FS/FAT/fs_fat.c ****     p_temp    = (void       *)p_buf->DataPtr;
3080:rtos/uC-FS/FAT/fs_fat.c ****     p_temp_08 = (CPU_INT08U *)p_temp;
3081:rtos/uC-FS/FAT/fs_fat.c **** 
3082:rtos/uC-FS/FAT/fs_fat.c **** 
3083:rtos/uC-FS/FAT/fs_fat.c **** 
3084:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- RD FIRST SEC
3085:rtos/uC-FS/FAT/fs_fat.c ****     FSVol_RdLockedEx(p_vol,
3086:rtos/uC-FS/FAT/fs_fat.c ****                      p_temp,
3087:rtos/uC-FS/FAT/fs_fat.c ****                      0u,
3088:rtos/uC-FS/FAT/fs_fat.c ****                      1u,
3089:rtos/uC-FS/FAT/fs_fat.c ****                      FS_VOL_SEC_TYPE_MGMT,
3090:rtos/uC-FS/FAT/fs_fat.c ****                      p_err);
3091:rtos/uC-FS/FAT/fs_fat.c **** 
3092:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3093:rtos/uC-FS/FAT/fs_fat.c ****          FSBuf_Free(p_buf);
3094:rtos/uC-FS/FAT/fs_fat.c ****          return;
3095:rtos/uC-FS/FAT/fs_fat.c ****     }
3096:rtos/uC-FS/FAT/fs_fat.c **** 
3097:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Check signature in bytes 510:511
3098:rtos/uC-FS/FAT/fs_fat.c ****     boot_sig = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp_08 + 510u));
3099:rtos/uC-FS/FAT/fs_fat.c ****     if (boot_sig != FS_FAT_BOOT_SIG) {
3100:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
3101:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolOpen(): Invalid boot sec sig: 0x%04X != 0x%04X\r\n", boot_sig, FS_
3102:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_INVALID_SYS;
3103:rtos/uC-FS/FAT/fs_fat.c ****         return;
3104:rtos/uC-FS/FAT/fs_fat.c ****     }
3105:rtos/uC-FS/FAT/fs_fat.c **** 
3106:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ ALLOC FAT DAT
3107:rtos/uC-FS/FAT/fs_fat.c ****     FS_OS_Lock(p_err);                                          /* Acquire FS lock (see Note #1).  
3108:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
ARM GAS  /tmp/ccazZ5Hl.s 			page 56


3109:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
3110:rtos/uC-FS/FAT/fs_fat.c ****         return;
3111:rtos/uC-FS/FAT/fs_fat.c ****     }
3112:rtos/uC-FS/FAT/fs_fat.c **** 
3113:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)Mem_PoolBlkGet(&FS_FAT_DataPool,/* Alloc FAT data.                 
3114:rtos/uC-FS/FAT/fs_fat.c ****                                                 sizeof(FS_FAT_DATA),
3115:rtos/uC-FS/FAT/fs_fat.c ****                                                &pool_err);
3116:rtos/uC-FS/FAT/fs_fat.c ****     (void)pool_err;                                            /* Err ignored. Ret val chk'd instea
3117:rtos/uC-FS/FAT/fs_fat.c ****     FS_OS_Unlock();
3118:rtos/uC-FS/FAT/fs_fat.c **** 
3119:rtos/uC-FS/FAT/fs_fat.c ****     if (p_fat_data == (FS_FAT_DATA *)0) {
3120:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
3121:rtos/uC-FS/FAT/fs_fat.c ****         return;
3122:rtos/uC-FS/FAT/fs_fat.c ****     }
3123:rtos/uC-FS/FAT/fs_fat.c **** 
3124:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DataClr(p_fat_data);                                 /* Clr FAT info.                   
3125:rtos/uC-FS/FAT/fs_fat.c **** 
3126:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------- DETERMINE & APPLY FILE
3127:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_ChkBootSec(p_fat_data,
3128:rtos/uC-FS/FAT/fs_fat.c ****                       p_temp_08,
3129:rtos/uC-FS/FAT/fs_fat.c ****                       p_err);
3130:rtos/uC-FS/FAT/fs_fat.c **** 
3131:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Free(p_buf);
3132:rtos/uC-FS/FAT/fs_fat.c **** 
3133:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {                                /* If fat param's NOT valid ...    
3134:rtos/uC-FS/FAT/fs_fat.c ****         FS_OS_Lock(&err_tmp);
3135:rtos/uC-FS/FAT/fs_fat.c ****         Mem_PoolBlkFree(        &FS_FAT_DataPool,               /* ... free FAT data        ...    
3136:rtos/uC-FS/FAT/fs_fat.c ****                         (void *) p_fat_data,
3137:rtos/uC-FS/FAT/fs_fat.c ****                                 &pool_err);
3138:rtos/uC-FS/FAT/fs_fat.c ****         FS_OS_Unlock();
3139:rtos/uC-FS/FAT/fs_fat.c ****         return;                                                 /* ... & rtn.                      
3140:rtos/uC-FS/FAT/fs_fat.c ****     }
3141:rtos/uC-FS/FAT/fs_fat.c **** 
3142:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ ALLOC FAT DAT
3143:rtos/uC-FS/FAT/fs_fat.c ****     p_vol->DataPtr = (void *)p_fat_data;                        /* Save FAT data in vol.           
3144:rtos/uC-FS/FAT/fs_fat.c **** 
3145:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
3146:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_JournalInit(p_vol, p_err);                           /* Init journal info.              
3147:rtos/uC-FS/FAT/fs_fat.c **** 
3148:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3149:rtos/uC-FS/FAT/fs_fat.c ****         FS_OS_Lock(&err_tmp);
3150:rtos/uC-FS/FAT/fs_fat.c ****         Mem_PoolBlkFree(        &FS_FAT_DataPool,               /* ... & free FAT data.            
3151:rtos/uC-FS/FAT/fs_fat.c ****                         (void *) p_fat_data,
3152:rtos/uC-FS/FAT/fs_fat.c ****                                 &pool_err);
3153:rtos/uC-FS/FAT/fs_fat.c ****         FS_OS_Unlock();
3154:rtos/uC-FS/FAT/fs_fat.c ****         p_vol->DataPtr = (void *)0;
3155:rtos/uC-FS/FAT/fs_fat.c ****         return;
3156:rtos/uC-FS/FAT/fs_fat.c ****     }
3157:rtos/uC-FS/FAT/fs_fat.c **** #endif
3158:rtos/uC-FS/FAT/fs_fat.c **** 
3159:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- OUTPUT TRACE I
3160:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("FS_FAT_VolOpen(): File system found: Type     : FAT%d \r\n",  p_fat_data->FAT_T
3161:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     Sec  size: %d B  \r\n",  p_fat_data->SecSi
3162:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     Clus size: %d sec\r\n",  p_fat_data->ClusS
3163:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     Vol  size: %d sec\r\n",  p_fat_data->VolSi
3164:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     # Clus   : %d    \r\n", (p_fat_data->MaxCl
3165:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     # FATs   : %d    \r\n",  p_fat_data->NbrFA
ARM GAS  /tmp/ccazZ5Hl.s 			page 57


3166:rtos/uC-FS/FAT/fs_fat.c **** 
3167:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
3168:rtos/uC-FS/FAT/fs_fat.c **** }
3169:rtos/uC-FS/FAT/fs_fat.c **** 
3170:rtos/uC-FS/FAT/fs_fat.c **** 
3171:rtos/uC-FS/FAT/fs_fat.c **** /*
3172:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3173:rtos/uC-FS/FAT/fs_fat.c **** *                                          FS_FAT_VolQuery()
3174:rtos/uC-FS/FAT/fs_fat.c **** *
3175:rtos/uC-FS/FAT/fs_fat.c **** * Description : Get info about file system on a volume.
3176:rtos/uC-FS/FAT/fs_fat.c **** *
3177:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
3178:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
3179:rtos/uC-FS/FAT/fs_fat.c **** *
3180:rtos/uC-FS/FAT/fs_fat.c **** *               p_info      Pointer to structure that will receive file system information.
3181:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
3182:rtos/uC-FS/FAT/fs_fat.c **** *
3183:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
3184:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
3185:rtos/uC-FS/FAT/fs_fat.c **** *
3186:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE              File system information gotten.
3187:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_BUF_NONE_AVAIL    No buffer available.
3188:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV               Device access error.
3189:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_VOL_INVALID_SYS   Invalid file system on volume.
3190:rtos/uC-FS/FAT/fs_fat.c **** *
3191:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
3192:rtos/uC-FS/FAT/fs_fat.c **** *
3193:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
3194:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3195:rtos/uC-FS/FAT/fs_fat.c **** */
3196:rtos/uC-FS/FAT/fs_fat.c **** 
3197:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_VolQuery (FS_VOL       *p_vol,
3198:rtos/uC-FS/FAT/fs_fat.c ****                        FS_SYS_INFO  *p_info,
3199:rtos/uC-FS/FAT/fs_fat.c ****                        FS_ERR       *p_err)
3200:rtos/uC-FS/FAT/fs_fat.c **** {
3201:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF       *p_buf;
3202:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA  *p_fat_data;
3203:rtos/uC-FS/FAT/fs_fat.c **** 
3204:rtos/uC-FS/FAT/fs_fat.c **** 
3205:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
3206:rtos/uC-FS/FAT/fs_fat.c **** 
3207:rtos/uC-FS/FAT/fs_fat.c ****     if (p_fat_data == (FS_FAT_DATA *)0) {
3208:rtos/uC-FS/FAT/fs_fat.c ****        *p_err =   FS_ERR_VOL_INVALID_SYS;
3209:rtos/uC-FS/FAT/fs_fat.c ****         return;
3210:rtos/uC-FS/FAT/fs_fat.c ****     }
3211:rtos/uC-FS/FAT/fs_fat.c **** 
3212:rtos/uC-FS/FAT/fs_fat.c ****     p_buf = FSBuf_Get(p_vol);
3213:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
3214:rtos/uC-FS/FAT/fs_fat.c ****        *p_err =   FS_ERR_BUF_NONE_AVAIL;
3215:rtos/uC-FS/FAT/fs_fat.c ****         return;
3216:rtos/uC-FS/FAT/fs_fat.c ****     }
3217:rtos/uC-FS/FAT/fs_fat.c **** 
3218:rtos/uC-FS/FAT/fs_fat.c **** 
3219:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_Query(p_vol,
3220:rtos/uC-FS/FAT/fs_fat.c ****                  p_buf,
3221:rtos/uC-FS/FAT/fs_fat.c ****                  p_info,
3222:rtos/uC-FS/FAT/fs_fat.c ****                  p_err);
ARM GAS  /tmp/ccazZ5Hl.s 			page 58


3223:rtos/uC-FS/FAT/fs_fat.c **** 
3224:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Free(p_buf);
3225:rtos/uC-FS/FAT/fs_fat.c **** }
3226:rtos/uC-FS/FAT/fs_fat.c **** 
3227:rtos/uC-FS/FAT/fs_fat.c **** 
3228:rtos/uC-FS/FAT/fs_fat.c **** /*
3229:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3230:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3231:rtos/uC-FS/FAT/fs_fat.c **** *                                         INTERNAL FUNCTIONS
3232:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3233:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3234:rtos/uC-FS/FAT/fs_fat.c **** */
3235:rtos/uC-FS/FAT/fs_fat.c **** 
3236:rtos/uC-FS/FAT/fs_fat.c **** /*
3237:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3238:rtos/uC-FS/FAT/fs_fat.c **** *                                         FS_FAT_LowEntryUpdate()
3239:rtos/uC-FS/FAT/fs_fat.c **** *
3240:rtos/uC-FS/FAT/fs_fat.c **** * Description : Update directory entry information.
3241:rtos/uC-FS/FAT/fs_fat.c **** *
3242:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol           Pointer to volume.
3243:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3244:rtos/uC-FS/FAT/fs_fat.c **** *
3245:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf           Pointer to temporary buffer.
3246:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3247:rtos/uC-FS/FAT/fs_fat.c **** *
3248:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data    Pointer to FAT entry data.
3249:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3250:rtos/uC-FS/FAT/fs_fat.c **** *
3251:rtos/uC-FS/FAT/fs_fat.c **** *               get_date        Indicates whether to get date/time to update entry :
3252:rtos/uC-FS/FAT/fs_fat.c **** *
3253:rtos/uC-FS/FAT/fs_fat.c **** *                                   DEF_YES, if entry should be updated with current date/time.
3254:rtos/uC-FS/FAT/fs_fat.c **** *                                   DEF_NO,  if entry should be updated with info's  date/time.
3255:rtos/uC-FS/FAT/fs_fat.c **** *
3256:rtos/uC-FS/FAT/fs_fat.c **** *               p_err           Pointer to variable that will receive the return error code from th
3257:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3258:rtos/uC-FS/FAT/fs_fat.c **** *
3259:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NONE    Directory entry updated.
3260:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV     Device access error.
3261:rtos/uC-FS/FAT/fs_fat.c **** *
3262:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
3263:rtos/uC-FS/FAT/fs_fat.c **** *
3264:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
3265:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3266:rtos/uC-FS/FAT/fs_fat.c **** */
3267:rtos/uC-FS/FAT/fs_fat.c **** 
3268:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
3269:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_LowEntryUpdate (FS_VOL            *p_vol,
3270:rtos/uC-FS/FAT/fs_fat.c ****                              FS_BUF            *p_buf,
3271:rtos/uC-FS/FAT/fs_fat.c ****                              FS_FAT_FILE_DATA  *p_entry_data,
3272:rtos/uC-FS/FAT/fs_fat.c ****                              CPU_BOOLEAN        get_date,
3273:rtos/uC-FS/FAT/fs_fat.c ****                              FS_ERR            *p_err)
3274:rtos/uC-FS/FAT/fs_fat.c **** {
3275:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U      *p_dir_entry;
3276:rtos/uC-FS/FAT/fs_fat.c ****     CLK_DATE_TIME    stime;
3277:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATE      date_val;
3278:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_TIME      time_val;
3279:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN      success;
ARM GAS  /tmp/ccazZ5Hl.s 			page 59


3280:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_JOURNAL_EN == DEF_ENABLED)
3281:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA     *p_fat_data;
3282:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_end_pos;
3283:rtos/uC-FS/FAT/fs_fat.c **** #endif
3284:rtos/uC-FS/FAT/fs_fat.c **** 
3285:rtos/uC-FS/FAT/fs_fat.c **** 
3286:rtos/uC-FS/FAT/fs_fat.c ****    (void)p_vol;                                                 /*lint --e{550} Suppress "Symbol no
3287:rtos/uC-FS/FAT/fs_fat.c **** 
3288:rtos/uC-FS/FAT/fs_fat.c **** 
3289:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- ENTER JOURNA
3290:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
3291:rtos/uC-FS/FAT/fs_fat.c ****    p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
3292:rtos/uC-FS/FAT/fs_fat.c ****    if (DEF_BIT_IS_SET(p_fat_data->JournalState, FS_FAT_JOURNAL_STATE_REPLAY) == DEF_NO) {
3293:rtos/uC-FS/FAT/fs_fat.c ****        dir_end_pos.SecNbr = p_entry_data->DirEndSec;
3294:rtos/uC-FS/FAT/fs_fat.c ****        dir_end_pos.SecPos = p_entry_data->DirEndSecPos;
3295:rtos/uC-FS/FAT/fs_fat.c ****        FS_FAT_JournalEnterEntryUpdate(p_vol,
3296:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
3297:rtos/uC-FS/FAT/fs_fat.c ****                                      &dir_end_pos,
3298:rtos/uC-FS/FAT/fs_fat.c ****                                      &dir_end_pos,
3299:rtos/uC-FS/FAT/fs_fat.c ****                                       p_err);
3300:rtos/uC-FS/FAT/fs_fat.c ****        if (*p_err != FS_ERR_NONE) {
3301:rtos/uC-FS/FAT/fs_fat.c ****            return;
3302:rtos/uC-FS/FAT/fs_fat.c ****        }
3303:rtos/uC-FS/FAT/fs_fat.c ****    }
3304:rtos/uC-FS/FAT/fs_fat.c **** #endif
3305:rtos/uC-FS/FAT/fs_fat.c **** 
3306:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Set(p_buf,                                            /* Rd dir sec.                     
3307:rtos/uC-FS/FAT/fs_fat.c ****               p_entry_data->DirEndSec,
3308:rtos/uC-FS/FAT/fs_fat.c ****               FS_VOL_SEC_TYPE_DIR,
3309:rtos/uC-FS/FAT/fs_fat.c ****               DEF_YES,
3310:rtos/uC-FS/FAT/fs_fat.c ****               p_err);
3311:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3312:rtos/uC-FS/FAT/fs_fat.c ****         return;
3313:rtos/uC-FS/FAT/fs_fat.c ****     }
3314:rtos/uC-FS/FAT/fs_fat.c **** 
3315:rtos/uC-FS/FAT/fs_fat.c ****     if (get_date == DEF_YES) {
3316:rtos/uC-FS/FAT/fs_fat.c ****         success = Clk_GetDateTime(&stime);                      /* Get date/time.                  
3317:rtos/uC-FS/FAT/fs_fat.c ****         if (success == DEF_YES) {
3318:rtos/uC-FS/FAT/fs_fat.c ****             date_val =  FS_FAT_DateFmt(&stime);
3319:rtos/uC-FS/FAT/fs_fat.c ****             time_val =  FS_FAT_TimeFmt(&stime);
3320:rtos/uC-FS/FAT/fs_fat.c ****         } else {
3321:rtos/uC-FS/FAT/fs_fat.c ****             date_val =  0u;
3322:rtos/uC-FS/FAT/fs_fat.c ****             time_val =  0u;
3323:rtos/uC-FS/FAT/fs_fat.c ****         }
3324:rtos/uC-FS/FAT/fs_fat.c ****     } else {
3325:rtos/uC-FS/FAT/fs_fat.c ****         date_val = p_entry_data->DateWr;
3326:rtos/uC-FS/FAT/fs_fat.c ****         time_val = p_entry_data->TimeWr;
3327:rtos/uC-FS/FAT/fs_fat.c ****     }
3328:rtos/uC-FS/FAT/fs_fat.c **** 
3329:rtos/uC-FS/FAT/fs_fat.c **** 
3330:rtos/uC-FS/FAT/fs_fat.c ****     p_dir_entry = (CPU_INT08U *)p_buf->DataPtr + p_entry_data->DirEndSecPos;
3331:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR),       p_entry_data->A
3332:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FSTCLUSHI),  p_entry_data->F
3333:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FSTCLUSLO),  p_entry_data->F
3334:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTTIME),    time_val);
3335:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTDATE),    date_val);
3336:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_LSTACCDATE), date_val);
ARM GAS  /tmp/ccazZ5Hl.s 			page 60


3337:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FILESIZE),   p_entry_data->F
3338:rtos/uC-FS/FAT/fs_fat.c **** 
3339:rtos/uC-FS/FAT/fs_fat.c **** 
3340:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_MarkDirty(p_buf, p_err);                              /* Wr dir sec.                     
3341:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3342:rtos/uC-FS/FAT/fs_fat.c ****          return;
3343:rtos/uC-FS/FAT/fs_fat.c ****     }
3344:rtos/uC-FS/FAT/fs_fat.c **** }
3345:rtos/uC-FS/FAT/fs_fat.c **** #endif
3346:rtos/uC-FS/FAT/fs_fat.c **** 
3347:rtos/uC-FS/FAT/fs_fat.c **** 
3348:rtos/uC-FS/FAT/fs_fat.c **** /*
3349:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3350:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_FAT_LowDirChkEmpty()
3351:rtos/uC-FS/FAT/fs_fat.c **** *
3352:rtos/uC-FS/FAT/fs_fat.c **** * Description : Check whether directory entry is empty.
3353:rtos/uC-FS/FAT/fs_fat.c **** *
3354:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
3355:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
3356:rtos/uC-FS/FAT/fs_fat.c **** *
3357:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf       Pointer to temporary buffer.
3358:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
3359:rtos/uC-FS/FAT/fs_fat.c **** *
3360:rtos/uC-FS/FAT/fs_fat.c **** *               dir_clus    First cluster of directory.
3361:rtos/uC-FS/FAT/fs_fat.c **** *
3362:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
3363:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
3364:rtos/uC-FS/FAT/fs_fat.c **** *
3365:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE    No device error.
3366:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV     Device access error.
3367:rtos/uC-FS/FAT/fs_fat.c **** *
3368:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : DEF_YES, if directory is     empty.
3369:rtos/uC-FS/FAT/fs_fat.c **** *               DEF_NO,  if directory is NOT empty.
3370:rtos/uC-FS/FAT/fs_fat.c **** *
3371:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The first two entries of an empty directory will be the "dot" entry & the "dot 
3372:rtos/uC-FS/FAT/fs_fat.c **** *                   entry, respectively.  Consequently, a non-empty directory will have at least th
3373:rtos/uC-FS/FAT/fs_fat.c **** *                   entries.
3374:rtos/uC-FS/FAT/fs_fat.c **** *
3375:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) #### Check whether the first two entries ARE the "dot" & "dot dot" entries.
3376:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3377:rtos/uC-FS/FAT/fs_fat.c **** */
3378:rtos/uC-FS/FAT/fs_fat.c **** 
3379:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
3380:rtos/uC-FS/FAT/fs_fat.c **** CPU_BOOLEAN  FS_FAT_LowDirChkEmpty (FS_VOL           *p_vol,
3381:rtos/uC-FS/FAT/fs_fat.c ****                                     FS_BUF           *p_buf,
3382:rtos/uC-FS/FAT/fs_fat.c ****                                     FS_FAT_CLUS_NBR   dir_clus,
3383:rtos/uC-FS/FAT/fs_fat.c ****                                     FS_ERR           *p_err)
3384:rtos/uC-FS/FAT/fs_fat.c **** {
3385:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_pos;
3386:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_end_pos;
3387:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       dir_entry_cnt;
3388:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA     *p_fat_data;
3389:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN      valid;
3390:rtos/uC-FS/FAT/fs_fat.c **** 
3391:rtos/uC-FS/FAT/fs_fat.c **** 
3392:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
3393:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 61


3394:rtos/uC-FS/FAT/fs_fat.c **** 
3395:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- CHK CLUS ASSIG
3396:rtos/uC-FS/FAT/fs_fat.c ****     valid = FS_FAT_IS_VALID_CLUS(p_fat_data, dir_clus);
3397:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {
3398:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
3399:rtos/uC-FS/FAT/fs_fat.c ****         return (DEF_YES);
3400:rtos/uC-FS/FAT/fs_fat.c ****     }
3401:rtos/uC-FS/FAT/fs_fat.c **** 
3402:rtos/uC-FS/FAT/fs_fat.c ****     dir_pos.SecNbr = FS_FAT_CLUS_TO_SEC(p_fat_data, dir_clus);
3403:rtos/uC-FS/FAT/fs_fat.c ****     dir_pos.SecPos = 0u;
3404:rtos/uC-FS/FAT/fs_fat.c **** 
3405:rtos/uC-FS/FAT/fs_fat.c **** 
3406:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- CHK FOR 3 ENTR
3407:rtos/uC-FS/FAT/fs_fat.c ****     dir_entry_cnt = 0u;
3408:rtos/uC-FS/FAT/fs_fat.c ****     while (dir_entry_cnt < 3u) {
3409:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_FN_API_Active.NextDirEntryGet(             p_vol,
3410:rtos/uC-FS/FAT/fs_fat.c ****                                                           p_buf,
3411:rtos/uC-FS/FAT/fs_fat.c ****                                              (CPU_CHAR *) 0,
3412:rtos/uC-FS/FAT/fs_fat.c ****                                                          &dir_pos,
3413:rtos/uC-FS/FAT/fs_fat.c ****                                                          &dir_end_pos,
3414:rtos/uC-FS/FAT/fs_fat.c ****                                                           p_err);
3415:rtos/uC-FS/FAT/fs_fat.c **** 
3416:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
3417:rtos/uC-FS/FAT/fs_fat.c ****             if (*p_err == FS_ERR_EOF) {                             /* If no entry found ...       
3418:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err =  FS_ERR_NONE;
3419:rtos/uC-FS/FAT/fs_fat.c ****                  return (DEF_YES);                                  /* ... rtn empty.              
3420:rtos/uC-FS/FAT/fs_fat.c ****             }
3421:rtos/uC-FS/FAT/fs_fat.c ****             return (DEF_NO);
3422:rtos/uC-FS/FAT/fs_fat.c ****         }
3423:rtos/uC-FS/FAT/fs_fat.c **** 
3424:rtos/uC-FS/FAT/fs_fat.c ****         dir_pos.SecNbr = dir_end_pos.SecNbr;
3425:rtos/uC-FS/FAT/fs_fat.c ****         dir_pos.SecPos = dir_end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
3426:rtos/uC-FS/FAT/fs_fat.c **** 
3427:rtos/uC-FS/FAT/fs_fat.c ****         dir_entry_cnt++;
3428:rtos/uC-FS/FAT/fs_fat.c ****     }
3429:rtos/uC-FS/FAT/fs_fat.c **** 
3430:rtos/uC-FS/FAT/fs_fat.c ****     return (DEF_NO);
3431:rtos/uC-FS/FAT/fs_fat.c **** }
3432:rtos/uC-FS/FAT/fs_fat.c **** #endif
3433:rtos/uC-FS/FAT/fs_fat.c **** 
3434:rtos/uC-FS/FAT/fs_fat.c **** 
3435:rtos/uC-FS/FAT/fs_fat.c **** /*
3436:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3437:rtos/uC-FS/FAT/fs_fat.c **** *                                     FS_FAT_LowDirFirstClusAdd()
3438:rtos/uC-FS/FAT/fs_fat.c **** *
3439:rtos/uC-FS/FAT/fs_fat.c **** * Description : Add first cluster to a directory.
3440:rtos/uC-FS/FAT/fs_fat.c **** *
3441:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol           Pointer to volume.
3442:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3443:rtos/uC-FS/FAT/fs_fat.c **** *
3444:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data    Pointer to FAT entry data.
3445:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3446:rtos/uC-FS/FAT/fs_fat.c **** *
3447:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf           Pointer to temporary buffer.
3448:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3449:rtos/uC-FS/FAT/fs_fat.c **** *
3450:rtos/uC-FS/FAT/fs_fat.c **** *               dir_parent_sec  Start sector of parent directory.
ARM GAS  /tmp/ccazZ5Hl.s 			page 62


3451:rtos/uC-FS/FAT/fs_fat.c **** *
3452:rtos/uC-FS/FAT/fs_fat.c **** *               p_err           Pointer to variable that will receive the return error code from th
3453:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3454:rtos/uC-FS/FAT/fs_fat.c **** *
3455:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NONE        First cluster added to directory.
3456:rtos/uC-FS/FAT/fs_fat.c **** *
3457:rtos/uC-FS/FAT/fs_fat.c **** *                                                      ------------- RETURNED BY ClusAlloc() ------
3458:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV         Device access error.
3459:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV_FULL    Device is full (no space could be allocated)
3460:rtos/uC-FS/FAT/fs_fat.c **** *
3461:rtos/uC-FS/FAT/fs_fat.c **** *                                                      ------- RETURNED BY FS_FAT_LowEntryUpdate() 
3462:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV         Device access error.
3463:rtos/uC-FS/FAT/fs_fat.c **** *
3464:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
3465:rtos/uC-FS/FAT/fs_fat.c **** *
3466:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The sector clear operation will overwrite the data stored in the buffer, so the
3467:rtos/uC-FS/FAT/fs_fat.c **** *                   buffer MUST be flushed before this operation is performed.
3468:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3469:rtos/uC-FS/FAT/fs_fat.c **** */
3470:rtos/uC-FS/FAT/fs_fat.c **** 
3471:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
3472:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_LowDirFirstClusAdd (FS_VOL            *p_vol,
3473:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_FILE_DATA  *p_entry_data,
3474:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_BUF            *p_buf,
3475:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_FAT_SEC_NBR     dir_parent_sec,
3476:rtos/uC-FS/FAT/fs_fat.c ****                                          FS_ERR            *p_err)
3477:rtos/uC-FS/FAT/fs_fat.c **** {
3478:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
3479:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
3480:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   file_clus;
3481:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    file_sec;
3482:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   dir_parent_clus;
3483:rtos/uC-FS/FAT/fs_fat.c **** 
3484:rtos/uC-FS/FAT/fs_fat.c **** 
3485:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------------- ALLOC 1ST DIR C
3486:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
3487:rtos/uC-FS/FAT/fs_fat.c ****     file_clus  =  FS_FAT_ClusChainAlloc(p_vol,
3488:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
3489:rtos/uC-FS/FAT/fs_fat.c ****                                         0u,
3490:rtos/uC-FS/FAT/fs_fat.c ****                                         1u,
3491:rtos/uC-FS/FAT/fs_fat.c ****                                         p_err);
3492:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3493:rtos/uC-FS/FAT/fs_fat.c ****          return;
3494:rtos/uC-FS/FAT/fs_fat.c ****     }
3495:rtos/uC-FS/FAT/fs_fat.c **** 
3496:rtos/uC-FS/FAT/fs_fat.c ****     file_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, file_clus);
3497:rtos/uC-FS/FAT/fs_fat.c **** 
3498:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Flush(p_buf, p_err);                                  /* Flush buf (see Note #1).        
3499:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3500:rtos/uC-FS/FAT/fs_fat.c ****          return;
3501:rtos/uC-FS/FAT/fs_fat.c ****     }
3502:rtos/uC-FS/FAT/fs_fat.c **** 
3503:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SecClr(p_vol,
3504:rtos/uC-FS/FAT/fs_fat.c ****                   p_buf->DataPtr,
3505:rtos/uC-FS/FAT/fs_fat.c ****                   file_sec,
3506:rtos/uC-FS/FAT/fs_fat.c ****                   p_fat_data->ClusSize_sec,
3507:rtos/uC-FS/FAT/fs_fat.c ****                   p_fat_data->SecSize,
ARM GAS  /tmp/ccazZ5Hl.s 			page 63


3508:rtos/uC-FS/FAT/fs_fat.c ****                   FS_VOL_SEC_TYPE_FILE,
3509:rtos/uC-FS/FAT/fs_fat.c ****                   p_err);
3510:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3511:rtos/uC-FS/FAT/fs_fat.c ****          return;
3512:rtos/uC-FS/FAT/fs_fat.c ****     }
3513:rtos/uC-FS/FAT/fs_fat.c **** 
3514:rtos/uC-FS/FAT/fs_fat.c **** 
3515:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileFirstClus = file_clus;
3516:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSec    = file_sec;
3517:rtos/uC-FS/FAT/fs_fat.c **** 
3518:rtos/uC-FS/FAT/fs_fat.c **** 
3519:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ WR 1ST DIR SE
3520:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Set(p_buf,
3521:rtos/uC-FS/FAT/fs_fat.c ****               file_sec,
3522:rtos/uC-FS/FAT/fs_fat.c ****               FS_VOL_SEC_TYPE_DIR,
3523:rtos/uC-FS/FAT/fs_fat.c ****               DEF_NO,
3524:rtos/uC-FS/FAT/fs_fat.c ****               p_err);
3525:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3526:rtos/uC-FS/FAT/fs_fat.c ****         return;
3527:rtos/uC-FS/FAT/fs_fat.c ****     }
3528:rtos/uC-FS/FAT/fs_fat.c **** 
3529:rtos/uC-FS/FAT/fs_fat.c ****     Mem_Clr(p_buf->DataPtr, (CPU_SIZE_T)p_fat_data->SecSize);
3530:rtos/uC-FS/FAT/fs_fat.c **** 
3531:rtos/uC-FS/FAT/fs_fat.c ****     p_dir_entry = (CPU_INT08U *)p_buf->DataPtr;                 /* Make 'dot' entry.               
3532:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void       *) p_dir_entry,
3533:rtos/uC-FS/FAT/fs_fat.c ****                            (CPU_INT32U *)&FS_FAT_NameDot[0],
3534:rtos/uC-FS/FAT/fs_fat.c ****                                           DEF_TRUE,
3535:rtos/uC-FS/FAT/fs_fat.c ****                                           file_clus,
3536:rtos/uC-FS/FAT/fs_fat.c ****                                           DEF_NO,
3537:rtos/uC-FS/FAT/fs_fat.c ****                                           DEF_NO);
3538:rtos/uC-FS/FAT/fs_fat.c **** 
3539:rtos/uC-FS/FAT/fs_fat.c ****     p_dir_entry     +=  FS_FAT_SIZE_DIR_ENTRY;                  /* Make 'dot dot' entry.           
3540:rtos/uC-FS/FAT/fs_fat.c ****     dir_parent_clus  = (dir_parent_sec == p_fat_data->RootDirStart) ? 0u : FS_FAT_SEC_TO_CLUS(p_fat
3541:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void        *) p_dir_entry,
3542:rtos/uC-FS/FAT/fs_fat.c ****                            (CPU_INT32U  *)&FS_FAT_NameDotDot[0],
3543:rtos/uC-FS/FAT/fs_fat.c ****                                            DEF_TRUE,
3544:rtos/uC-FS/FAT/fs_fat.c ****                                            dir_parent_clus,
3545:rtos/uC-FS/FAT/fs_fat.c ****                                            DEF_NO,
3546:rtos/uC-FS/FAT/fs_fat.c ****                                            DEF_NO);
3547:rtos/uC-FS/FAT/fs_fat.c **** 
3548:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_MarkDirty(p_buf, p_err);                              /* Write 1st sec of dir.           
3549:rtos/uC-FS/FAT/fs_fat.c **** }
3550:rtos/uC-FS/FAT/fs_fat.c **** #endif
3551:rtos/uC-FS/FAT/fs_fat.c **** 
3552:rtos/uC-FS/FAT/fs_fat.c **** 
3553:rtos/uC-FS/FAT/fs_fat.c **** /*
3554:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3555:rtos/uC-FS/FAT/fs_fat.c **** *                                    FS_FAT_LowFileFirstClusAdd()
3556:rtos/uC-FS/FAT/fs_fat.c **** *
3557:rtos/uC-FS/FAT/fs_fat.c **** * Description : Add first cluster to a file.
3558:rtos/uC-FS/FAT/fs_fat.c **** *
3559:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol           Pointer to volume.
3560:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3561:rtos/uC-FS/FAT/fs_fat.c **** *
3562:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data    Pointer to FAT entry data.
3563:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3564:rtos/uC-FS/FAT/fs_fat.c **** *
ARM GAS  /tmp/ccazZ5Hl.s 			page 64


3565:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf           Pointer to temporary buffer.
3566:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3567:rtos/uC-FS/FAT/fs_fat.c **** *
3568:rtos/uC-FS/FAT/fs_fat.c **** *               p_err           Pointer to variable that will receive the return error code from th
3569:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3570:rtos/uC-FS/FAT/fs_fat.c **** *
3571:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NONE        First cluster added to file.
3572:rtos/uC-FS/FAT/fs_fat.c **** *
3573:rtos/uC-FS/FAT/fs_fat.c **** *                                                      ------------- RETURNED BY ClusAlloc() ------
3574:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV         Device access error.
3575:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV_FULL    Device is full (no space could be allocated)
3576:rtos/uC-FS/FAT/fs_fat.c **** *
3577:rtos/uC-FS/FAT/fs_fat.c **** *                                                      ------- RETURNED BY FS_FAT_LowEntryUpdate() 
3578:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV         Device access error.
3579:rtos/uC-FS/FAT/fs_fat.c **** *
3580:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
3581:rtos/uC-FS/FAT/fs_fat.c **** *
3582:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
3583:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3584:rtos/uC-FS/FAT/fs_fat.c **** */
3585:rtos/uC-FS/FAT/fs_fat.c **** 
3586:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
3587:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_LowFileFirstClusAdd (FS_VOL            *p_vol,
3588:rtos/uC-FS/FAT/fs_fat.c ****                                   FS_FAT_FILE_DATA  *p_entry_data,
3589:rtos/uC-FS/FAT/fs_fat.c ****                                   FS_BUF            *p_buf,
3590:rtos/uC-FS/FAT/fs_fat.c ****                                   FS_ERR            *p_err)
3591:rtos/uC-FS/FAT/fs_fat.c **** {
3592:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus;
3593:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    sec;
3594:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
3595:rtos/uC-FS/FAT/fs_fat.c **** 
3596:rtos/uC-FS/FAT/fs_fat.c **** 
3597:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
3598:rtos/uC-FS/FAT/fs_fat.c **** 
3599:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Verify if dev is closed.        
3600:rtos/uC-FS/FAT/fs_fat.c ****     if (p_fat_data == (FS_FAT_DATA *)0) {
3601:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_DEV;
3602:rtos/uC-FS/FAT/fs_fat.c ****         return;
3603:rtos/uC-FS/FAT/fs_fat.c ****     }
3604:rtos/uC-FS/FAT/fs_fat.c **** 
3605:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* -------------------- ALLOC CLUS 
3606:rtos/uC-FS/FAT/fs_fat.c ****     clus = FS_FAT_ClusChainAlloc(p_vol,
3607:rtos/uC-FS/FAT/fs_fat.c ****                                  p_buf,
3608:rtos/uC-FS/FAT/fs_fat.c ****                                  0,
3609:rtos/uC-FS/FAT/fs_fat.c ****                                  1,
3610:rtos/uC-FS/FAT/fs_fat.c ****                                  p_err);
3611:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3612:rtos/uC-FS/FAT/fs_fat.c ****          return;
3613:rtos/uC-FS/FAT/fs_fat.c ****     }
3614:rtos/uC-FS/FAT/fs_fat.c **** 
3615:rtos/uC-FS/FAT/fs_fat.c **** 
3616:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- ASSIGN FILE IN
3617:rtos/uC-FS/FAT/fs_fat.c ****     sec                         = FS_FAT_CLUS_TO_SEC(p_fat_data, clus);
3618:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileFirstClus = clus;
3619:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSec    = sec;
3620:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSecPos = 0u;
3621:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 65


3622:rtos/uC-FS/FAT/fs_fat.c **** 
3623:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- UPDATE DIR ENT
3624:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_LowEntryUpdate(p_vol,
3625:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
3626:rtos/uC-FS/FAT/fs_fat.c ****                           p_entry_data,
3627:rtos/uC-FS/FAT/fs_fat.c ****                           DEF_YES,
3628:rtos/uC-FS/FAT/fs_fat.c ****                           p_err);
3629:rtos/uC-FS/FAT/fs_fat.c **** }
3630:rtos/uC-FS/FAT/fs_fat.c **** #endif
3631:rtos/uC-FS/FAT/fs_fat.c **** 
3632:rtos/uC-FS/FAT/fs_fat.c **** 
3633:rtos/uC-FS/FAT/fs_fat.c **** /*
3634:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3635:rtos/uC-FS/FAT/fs_fat.c **** *                                    FS_FAT_LowFileFirstClusGet()
3636:rtos/uC-FS/FAT/fs_fat.c **** *
3637:rtos/uC-FS/FAT/fs_fat.c **** * Description : Get first cluster address of a file.
3638:rtos/uC-FS/FAT/fs_fat.c **** *
3639:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol           Pointer to volume.
3640:rtos/uC-FS/FAT/fs_fat.c **** *               -----           Argument validated by caller.
3641:rtos/uC-FS/FAT/fs_fat.c **** *
3642:rtos/uC-FS/FAT/fs_fat.c **** *               name_entry      Pointer to file name.
3643:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3644:rtos/uC-FS/FAT/fs_fat.c **** *
3645:rtos/uC-FS/FAT/fs_fat.c **** *               p_err           Pointer to variable that will receive the return error code from th
3646:rtos/uC-FS/FAT/fs_fat.c **** *               -----           Argument validated by caller.
3647:rtos/uC-FS/FAT/fs_fat.c **** *
3648:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NONE                     First cluster address obtained.
3649:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_BUF_NONE_AVAIL           No buffer available.
3650:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_NOT_FILE           Entry not a file.
3651:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_VOL_INVALID_SEC_NBR      Cluster address invalid.
3652:rtos/uC-FS/FAT/fs_fat.c **** *
3653:rtos/uC-FS/FAT/fs_fat.c **** *                                                      ---------- RETURNED BY FS_FAT_DataSrch() ---
3654:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_NOT_FOUND          File system entry NOT found
3655:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_FOUND   Entry parent      NOT found.
3656:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_DIR     Entry parent      NOT a directo
3657:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NAME_INVALID             Invalid file name or path.
3658:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_VOL_INVALID_SEC_NBR      Invalid sector number found in 
3659:rtos/uC-FS/FAT/fs_fat.c **** *                                                                       entry.
3660:rtos/uC-FS/FAT/fs_fat.c **** *
3661:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Address of the first cluster of file.
3662:rtos/uC-FS/FAT/fs_fat.c **** *
3663:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) (a) Since a cluster may be assigned to a file, without any data being stored in
3664:rtos/uC-FS/FAT/fs_fat.c **** *                       cluster, a directory entry for a file may hold a valid cluster number & a z
3665:rtos/uC-FS/FAT/fs_fat.c **** *                       size.  However, no directory entry with a non-zero size may hold an invalid
3666:rtos/uC-FS/FAT/fs_fat.c **** *                       cluster number.
3667:rtos/uC-FS/FAT/fs_fat.c **** *
3668:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) A directory MUST have been assigned a cluster.
3669:rtos/uC-FS/FAT/fs_fat.c **** *
3670:rtos/uC-FS/FAT/fs_fat.c **** *               (2) The cluster number in a directory is stored in two parts, a 16-bit high word & 
3671:rtos/uC-FS/FAT/fs_fat.c **** *                   16-bit low word.  According to [Ref 1], the high word SHOULD be 0 on FAT12/16 v
3672:rtos/uC-FS/FAT/fs_fat.c **** *                   However, files created with major OSs do sometimes have non-zero high cluster w
3673:rtos/uC-FS/FAT/fs_fat.c **** *                   to allow these files to be opened, the high cluster word (upper 16-bits of the 
3674:rtos/uC-FS/FAT/fs_fat.c **** *                   number) is discarded.
3675:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3676:rtos/uC-FS/FAT/fs_fat.c **** */
3677:rtos/uC-FS/FAT/fs_fat.c **** 
3678:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_CLUS_NBR  FS_FAT_LowFileFirstClusGet (FS_VOL    *p_vol,
ARM GAS  /tmp/ccazZ5Hl.s 			page 66


3679:rtos/uC-FS/FAT/fs_fat.c ****                                              CPU_CHAR  *name_entry,
3680:rtos/uC-FS/FAT/fs_fat.c ****                                              FS_ERR    *p_err)
3681:rtos/uC-FS/FAT/fs_fat.c **** {
3682:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U        attrib;
3683:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_end_pos;
3684:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    dir_first_sec;
3685:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_start_pos;
3686:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       is_dir;
3687:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U        file_size_sec;
3688:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       valid;
3689:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       invalid;
3690:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF           *p_buf;
3691:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
3692:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
3693:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   file_first_clus;
3694:rtos/uC-FS/FAT/fs_fat.c **** 
3695:rtos/uC-FS/FAT/fs_fat.c **** 
3696:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------------- ROOT DIR -
3697:rtos/uC-FS/FAT/fs_fat.c ****     if (name_entry[0] == (CPU_CHAR)ASCII_CHAR_NULL) {
3698:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Root dir is not file.\r\n"));
3699:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_ENTRY_NOT_FILE;
3700:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
3701:rtos/uC-FS/FAT/fs_fat.c ****     }
3702:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ FIND DIR ENTR
3703:rtos/uC-FS/FAT/fs_fat.c ****     p_buf = FSBuf_Get(p_vol);
3704:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
3705:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
3706:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
3707:rtos/uC-FS/FAT/fs_fat.c ****     }
3708:rtos/uC-FS/FAT/fs_fat.c **** 
3709:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DataSrch( p_vol,                                     /* Find dir entry in data area.    
3710:rtos/uC-FS/FAT/fs_fat.c ****                      p_buf,
3711:rtos/uC-FS/FAT/fs_fat.c ****                      name_entry,
3712:rtos/uC-FS/FAT/fs_fat.c ****                     &dir_first_sec,
3713:rtos/uC-FS/FAT/fs_fat.c ****                     &dir_start_pos,
3714:rtos/uC-FS/FAT/fs_fat.c ****                     &dir_end_pos,
3715:rtos/uC-FS/FAT/fs_fat.c ****                      p_err);
3716:rtos/uC-FS/FAT/fs_fat.c **** 
3717:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
3718:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
3719:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
3720:rtos/uC-FS/FAT/fs_fat.c ****     }
3721:rtos/uC-FS/FAT/fs_fat.c **** 
3722:rtos/uC-FS/FAT/fs_fat.c ****     p_dir_entry = (CPU_INT08U *)p_buf->DataPtr + dir_end_pos.SecPos;
3723:rtos/uC-FS/FAT/fs_fat.c ****     attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR));
3724:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is invalid.    
3725:rtos/uC-FS/FAT/fs_fat.c ****     invalid = DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY | FS_FAT_DIRENT_ATTR_VOLUME_ID);
3726:rtos/uC-FS/FAT/fs_fat.c ****     if (invalid) {
3727:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
3728:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Invalid entry: %s.\r\n", name_entry));
3729:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_ENTRY_NOT_FILE;
3730:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
3731:rtos/uC-FS/FAT/fs_fat.c ****     }
3732:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is vol ID.     
3733:rtos/uC-FS/FAT/fs_fat.c ****     invalid = DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_VOLUME_ID);
3734:rtos/uC-FS/FAT/fs_fat.c ****     if (invalid) {
3735:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
ARM GAS  /tmp/ccazZ5Hl.s 			page 67


3736:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Volume ID:     %s.\r\n", name_entry));
3737:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_ENTRY_NOT_FILE;
3738:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
3739:rtos/uC-FS/FAT/fs_fat.c ****     }
3740:rtos/uC-FS/FAT/fs_fat.c **** 
3741:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Sec & clus nbr of file's first s
3742:rtos/uC-FS/FAT/fs_fat.c ****     file_size_sec =  MEM_VAL_GET_INT32U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FILESIZE));
3743:rtos/uC-FS/FAT/fs_fat.c ****     is_dir        =  DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY);
3744:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data    = (FS_FAT_DATA *)p_vol->DataPtr;
3745:rtos/uC-FS/FAT/fs_fat.c **** 
3746:rtos/uC-FS/FAT/fs_fat.c ****     if ((file_size_sec != 0u) ||                                /* If file size is nonzero ...     
3747:rtos/uC-FS/FAT/fs_fat.c ****         (is_dir        == DEF_YES)) {                           /* ... or entry is dir     ...     
3748:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... validate first clus.        
3749:rtos/uC-FS/FAT/fs_fat.c ****         file_first_clus =  FS_FAT_DIRENT_CLUS_NBR_GET(p_dir_entry);
3750:rtos/uC-FS/FAT/fs_fat.c ****         if ((p_fat_data->FAT_Type == 12u) ||
3751:rtos/uC-FS/FAT/fs_fat.c ****             (p_fat_data->FAT_Type == 16u)) {
3752:rtos/uC-FS/FAT/fs_fat.c **** 
3753:rtos/uC-FS/FAT/fs_fat.c ****             if (file_first_clus  > DEF_INT_16U_MAX_VAL) {
3754:rtos/uC-FS/FAT/fs_fat.c ****                 FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): FstCluHI non-zero on FAT12/16 vol; dis
3755:rtos/uC-FS/FAT/fs_fat.c ****                 file_first_clus &= DEF_INT_16U_MAX_VAL;
3756:rtos/uC-FS/FAT/fs_fat.c ****             }
3757:rtos/uC-FS/FAT/fs_fat.c **** 
3758:rtos/uC-FS/FAT/fs_fat.c ****         }
3759:rtos/uC-FS/FAT/fs_fat.c **** 
3760:rtos/uC-FS/FAT/fs_fat.c ****         valid     =  FS_FAT_IS_VALID_CLUS(p_fat_data, file_first_clus);
3761:rtos/uC-FS/FAT/fs_fat.c ****         if (valid == DEF_NO) {
3762:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Invalid clus in dir entry: %d\n", file_fir
3763:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
3764:rtos/uC-FS/FAT/fs_fat.c ****             FSBuf_Free(p_buf);
3765:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
3766:rtos/uC-FS/FAT/fs_fat.c ****         }
3767:rtos/uC-FS/FAT/fs_fat.c **** 
3768:rtos/uC-FS/FAT/fs_fat.c ****     } else {
3769:rtos/uC-FS/FAT/fs_fat.c ****         file_first_clus = 0u;
3770:rtos/uC-FS/FAT/fs_fat.c ****     }
3771:rtos/uC-FS/FAT/fs_fat.c **** 
3772:rtos/uC-FS/FAT/fs_fat.c **** 
3773:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Free(p_buf);
3774:rtos/uC-FS/FAT/fs_fat.c **** 
3775:rtos/uC-FS/FAT/fs_fat.c ****     return (file_first_clus);
3776:rtos/uC-FS/FAT/fs_fat.c **** }
3777:rtos/uC-FS/FAT/fs_fat.c **** 
3778:rtos/uC-FS/FAT/fs_fat.c **** 
3779:rtos/uC-FS/FAT/fs_fat.c **** /*
3780:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3781:rtos/uC-FS/FAT/fs_fat.c **** *                                        FS_FAT_LowEntryFind()
3782:rtos/uC-FS/FAT/fs_fat.c **** *
3783:rtos/uC-FS/FAT/fs_fat.c **** * Description : Find entry for file.
3784:rtos/uC-FS/FAT/fs_fat.c **** *
3785:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol           Pointer to volume.
3786:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3787:rtos/uC-FS/FAT/fs_fat.c **** *
3788:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data    Pointer to structure that will receive FAT entry data (see Note #3)
3789:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3790:rtos/uC-FS/FAT/fs_fat.c **** *
3791:rtos/uC-FS/FAT/fs_fat.c **** *               name_entry      Name of the entry.
3792:rtos/uC-FS/FAT/fs_fat.c **** *
ARM GAS  /tmp/ccazZ5Hl.s 			page 68


3793:rtos/uC-FS/FAT/fs_fat.c **** *               mode            Access mode of entry.
3794:rtos/uC-FS/FAT/fs_fat.c **** *
3795:rtos/uC-FS/FAT/fs_fat.c **** *               p_err           Pointer to variable that will receive the return error code from th
3796:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
3797:rtos/uC-FS/FAT/fs_fat.c **** *
3798:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NONE                        Entry found.
3799:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_BUF_NONE_AVAIL              Buffer not available.
3800:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV                         Device access error.
3801:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DIR_FULL                    Directory is full (space cou
3802:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV_FULL                    Device is full (space could 
3803:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_FILE_INVALID_ACCESS_MODE    Access mode is specified inv
3804:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_CORRUPT               File system entry is corrupt
3805:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_EXISTS                File system entry exists.
3806:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_NOT_DIR               File system entry NOT a dire
3807:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_NOT_EMPTY             File system entry NOT empty.
3808:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_NOT_FILE              File system entry NOT a file
3809:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_NOT_FOUND             File system entry NOT found
3810:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_FOUND      Entry parent NOT found.
3811:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_PARENT_NOT_DIR        Entry parent NOT a directory
3812:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_RD_ONLY               File system entry marked rea
3813:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NAME_INVALID                Invalid file name or path.
3814:rtos/uC-FS/FAT/fs_fat.c **** *
3815:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
3816:rtos/uC-FS/FAT/fs_fat.c **** *
3817:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The mode flags should be the logical OR of one or more flags :
3818:rtos/uC-FS/FAT/fs_fat.c **** *
3819:rtos/uC-FS/FAT/fs_fat.c **** *                       FS_FAT_MODE_RD             Entry opened for reads.
3820:rtos/uC-FS/FAT/fs_fat.c **** *                       FS_FAT_MODE_WR             Entry opened for writes.
3821:rtos/uC-FS/FAT/fs_fat.c **** *                       FS_FAT_MODE_CREATE         Entry will be created, if necessary.
3822:rtos/uC-FS/FAT/fs_fat.c **** *                       FS_FAT_MODE_TRUNCATE       Entry length will be truncated to 0.
3823:rtos/uC-FS/FAT/fs_fat.c **** *                       FS_FAT_MODE_APPEND         All writes will be performed at EOF.
3824:rtos/uC-FS/FAT/fs_fat.c **** *                       FS_FAT_MODE_MUST_CREATE    Entry will be opened if & only if it does not al
3825:rtos/uC-FS/FAT/fs_fat.c **** *                                                      exist.
3826:rtos/uC-FS/FAT/fs_fat.c **** *                       FS_FAT_MODE_DEL            Entry will be deleted.
3827:rtos/uC-FS/FAT/fs_fat.c **** *                       FS_FAT_MODE_DIR            Entry may be a directory.
3828:rtos/uC-FS/FAT/fs_fat.c **** *                       FS_FAT_MODE_FILE           Entry may be a file.
3829:rtos/uC-FS/FAT/fs_fat.c **** *
3830:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) Several modes are invalid :
3831:rtos/uC-FS/FAT/fs_fat.c **** *                       (1) Set   FS_FAT_MODE_TRUNCATE & clear FS_FAT_MODE_WR;
3832:rtos/uC-FS/FAT/fs_fat.c **** *                       (2) Set   FS_FAT_MODE_EXCL     & clear FS_FAT_MODE_CREATE.
3833:rtos/uC-FS/FAT/fs_fat.c **** *                       (3) Clear FS_FAT_MODE_RD       & clear FS_FAT_MODE_WR.
3834:rtos/uC-FS/FAT/fs_fat.c **** *                       (4) Clear FS_FAT_MODE_DIR      & clear FS_FAT_MODE_FILE.
3835:rtos/uC-FS/FAT/fs_fat.c **** *                       (5) Set   FS_FAT_MODE_DIR      & set   FS_FAT_MODE_TRUNCATE.
3836:rtos/uC-FS/FAT/fs_fat.c **** *                       (6) Set   FS_FAT_MODE_DEL      & clear FS_FAT_MODE_WR;
3837:rtos/uC-FS/FAT/fs_fat.c **** *                       (7) Set   FS_FAT_MODE_CREATE   & set   FS_FAT_MODE_FILE & set FS_FAT_MODE_D
3838:rtos/uC-FS/FAT/fs_fat.c **** *
3839:rtos/uC-FS/FAT/fs_fat.c **** *               (2) (a) Since a cluster may be assigned to a file, without any data being stored in
3840:rtos/uC-FS/FAT/fs_fat.c **** *                       cluster, a directory entry for a file may hold a valid cluster number & a z
3841:rtos/uC-FS/FAT/fs_fat.c **** *                       size.  However, no directory entry with a non-zero size may hold an invalid
3842:rtos/uC-FS/FAT/fs_fat.c **** *                       cluster number.
3843:rtos/uC-FS/FAT/fs_fat.c **** *
3844:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) A directory MUST have been assigned a cluster.
3845:rtos/uC-FS/FAT/fs_fat.c **** *
3846:rtos/uC-FS/FAT/fs_fat.c **** *               (3) The cluster number in a directory is stored in two parts, a 16-bit high word & 
3847:rtos/uC-FS/FAT/fs_fat.c **** *                   16-bit low word.  According to [Ref 1], the high word SHOULD be 0 on FAT12/16 v
3848:rtos/uC-FS/FAT/fs_fat.c **** *                   However, files created with major OSs do sometimes have non-zero high cluster w
3849:rtos/uC-FS/FAT/fs_fat.c **** *                   to allow these files to be opened, the high cluster word (upper 16-bits of the 
ARM GAS  /tmp/ccazZ5Hl.s 			page 69


3850:rtos/uC-FS/FAT/fs_fat.c **** *                   number) is discarded.
3851:rtos/uC-FS/FAT/fs_fat.c **** *
3852:rtos/uC-FS/FAT/fs_fat.c **** *               (4) The FAT file data will be populated fully only if the entry if found/created.  
3853:rtos/uC-FS/FAT/fs_fat.c **** *                   the entry does not exist, but the parent does, the 'DirFirstSec' member will be
3854:rtos/uC-FS/FAT/fs_fat.c **** *                   assigned the first sector of the would-be parent directory.
3855:rtos/uC-FS/FAT/fs_fat.c **** *
3856:rtos/uC-FS/FAT/fs_fat.c **** *               (5) An invalid cluster linked to the directory entry is tolerated if and only if th
3857:rtos/uC-FS/FAT/fs_fat.c **** *                   entry is going to be deleted.
3858:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
3859:rtos/uC-FS/FAT/fs_fat.c **** */
3860:rtos/uC-FS/FAT/fs_fat.c **** 
3861:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_LowEntryFind (FS_VOL            *p_vol,
3862:rtos/uC-FS/FAT/fs_fat.c ****                            FS_FAT_FILE_DATA  *p_entry_data,
3863:rtos/uC-FS/FAT/fs_fat.c ****                            CPU_CHAR          *name_entry,
3864:rtos/uC-FS/FAT/fs_fat.c ****                            FS_FLAGS           mode,
3865:rtos/uC-FS/FAT/fs_fat.c ****                            FS_ERR            *p_err)
3866:rtos/uC-FS/FAT/fs_fat.c **** {
3867:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U        attrib;
3868:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_end_pos;
3869:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    dir_first_sec;
3870:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_start_pos;
3871:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       is_dir;
3872:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   file_clus;
3873:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    file_sec;
3874:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U        file_size_sec;
3875:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       valid;
3876:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF           *p_buf;
3877:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
3878:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
3879:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
3880:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       empty;
3881:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR         *p_slash;
3882:rtos/uC-FS/FAT/fs_fat.c **** #endif
3883:rtos/uC-FS/FAT/fs_fat.c **** 
3884:rtos/uC-FS/FAT/fs_fat.c **** 
3885:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_ERR_ARG_CHK_DBG_EN == DEF_ENABLED)                  /* ------------------- VALIDATE MOD
3886:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Note #1a3.                  
3887:rtos/uC-FS/FAT/fs_fat.c ****     if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_RD | FS_FAT_MODE_WR) == DEF_YES) {
3888:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
3889:rtos/uC-FS/FAT/fs_fat.c ****         return;
3890:rtos/uC-FS/FAT/fs_fat.c ****     }
3891:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Note #1a4.                  
3892:rtos/uC-FS/FAT/fs_fat.c ****     if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_DIR | FS_FAT_MODE_FILE) == DEF_YES) {
3893:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
3894:rtos/uC-FS/FAT/fs_fat.c ****         return;
3895:rtos/uC-FS/FAT/fs_fat.c ****     }
3896:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Note #1a5.                  
3897:rtos/uC-FS/FAT/fs_fat.c ****     if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_DIR | FS_FAT_MODE_TRUNCATE) == DEF_YES) {
3898:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
3899:rtos/uC-FS/FAT/fs_fat.c ****         return;
3900:rtos/uC-FS/FAT/fs_fat.c ****     }
3901:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Note #1a6.                  
3902:rtos/uC-FS/FAT/fs_fat.c ****     if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_DEL) == DEF_YES) {
3903:rtos/uC-FS/FAT/fs_fat.c ****         if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_WR) == DEF_YES) {
3904:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
3905:rtos/uC-FS/FAT/fs_fat.c ****             return;
3906:rtos/uC-FS/FAT/fs_fat.c ****         }
ARM GAS  /tmp/ccazZ5Hl.s 			page 70


3907:rtos/uC-FS/FAT/fs_fat.c ****     }
3908:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Note #1a6.                  
3909:rtos/uC-FS/FAT/fs_fat.c ****     if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_CREATE | FS_FAT_MODE_DIR | FS_FAT_MODE_FILE) == DEF_YES) {
3910:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
3911:rtos/uC-FS/FAT/fs_fat.c ****         return;
3912:rtos/uC-FS/FAT/fs_fat.c ****     }
3913:rtos/uC-FS/FAT/fs_fat.c **** #endif
3914:rtos/uC-FS/FAT/fs_fat.c **** 
3915:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_ENABLED)
3916:rtos/uC-FS/FAT/fs_fat.c ****     if (DEF_BIT_IS_SET_ANY(mode, FS_FAT_MODE_CREATE | FS_FAT_MODE_DEL | FS_FAT_MODE_TRUNCATE | FS_F
3917:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
3918:rtos/uC-FS/FAT/fs_fat.c ****         return;
3919:rtos/uC-FS/FAT/fs_fat.c ****     }
3920:rtos/uC-FS/FAT/fs_fat.c **** #endif
3921:rtos/uC-FS/FAT/fs_fat.c **** 
3922:rtos/uC-FS/FAT/fs_fat.c **** 
3923:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------------- ROOT DIR -
3924:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FileDataClr(p_entry_data);
3925:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->Mode = mode;
3926:rtos/uC-FS/FAT/fs_fat.c **** 
3927:rtos/uC-FS/FAT/fs_fat.c ****     if (name_entry[0] == (CPU_CHAR)ASCII_CHAR_NULL) {
3928:rtos/uC-FS/FAT/fs_fat.c ****         if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_DIR) == DEF_YES) {
3929:rtos/uC-FS/FAT/fs_fat.c ****             if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_MUST_CREATE) == DEF_NO) {
3930:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->Attrib        =  FS_FAT_DIRENT_ATTR_DIRECTORY;
3931:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data                  = (FS_FAT_DATA *)p_vol->DataPtr;
3932:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->FileCurSec    =  p_fat_data->RootDirStart;
3933:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->FileFirstClus = (p_fat_data->RootDirStart < p_fat_data->DataStart) ? 
3934:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_NONE;
3935:rtos/uC-FS/FAT/fs_fat.c ****             } else {
3936:rtos/uC-FS/FAT/fs_fat.c ****                 FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Cannot create root dir.\r\n"));
3937:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_ENTRY_EXISTS;
3938:rtos/uC-FS/FAT/fs_fat.c ****             }
3939:rtos/uC-FS/FAT/fs_fat.c ****         } else {
3940:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Root dir is not file.\r\n"));
3941:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_ENTRY_NOT_FILE;
3942:rtos/uC-FS/FAT/fs_fat.c ****         }
3943:rtos/uC-FS/FAT/fs_fat.c ****         return;
3944:rtos/uC-FS/FAT/fs_fat.c ****     }
3945:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ FIND DIR ENTR
3946:rtos/uC-FS/FAT/fs_fat.c ****     p_buf = FSBuf_Get(p_vol);
3947:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
3948:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
3949:rtos/uC-FS/FAT/fs_fat.c ****         return;
3950:rtos/uC-FS/FAT/fs_fat.c ****     }
3951:rtos/uC-FS/FAT/fs_fat.c **** 
3952:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DataSrch( p_vol,                                     /* Find dir entry in data area.    
3953:rtos/uC-FS/FAT/fs_fat.c ****                      p_buf,
3954:rtos/uC-FS/FAT/fs_fat.c ****                      name_entry,
3955:rtos/uC-FS/FAT/fs_fat.c ****                     &dir_first_sec,
3956:rtos/uC-FS/FAT/fs_fat.c ****                     &dir_start_pos,
3957:rtos/uC-FS/FAT/fs_fat.c ****                     &dir_end_pos,
3958:rtos/uC-FS/FAT/fs_fat.c ****                      p_err);
3959:rtos/uC-FS/FAT/fs_fat.c **** 
3960:rtos/uC-FS/FAT/fs_fat.c **** 
3961:rtos/uC-FS/FAT/fs_fat.c ****     switch (*p_err) {                                           /* Handle dir entry OR err.        
3962:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
3963:rtos/uC-FS/FAT/fs_fat.c ****         case FS_ERR_ENTRY_NOT_FOUND:
ARM GAS  /tmp/ccazZ5Hl.s 			page 71


3964:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Do nothing & rtn err if file MUS
3965:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirFirstSec = dir_first_sec;
3966:rtos/uC-FS/FAT/fs_fat.c ****              if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_CREATE | FS_FAT_MODE_MUST_CREATE) == DEF_YES) {
3967:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Entry not found: %s.\r\n", name_entry));
3968:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
3969:rtos/uC-FS/FAT/fs_fat.c ****                  return;
3970:rtos/uC-FS/FAT/fs_fat.c ****              }
3971:rtos/uC-FS/FAT/fs_fat.c **** 
3972:rtos/uC-FS/FAT/fs_fat.c **** 
3973:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* -------------------- CREATE FILE
3974:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* If file MAY be created, create f
3975:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Make dir entry.                 
3976:rtos/uC-FS/FAT/fs_fat.c ****              p_slash = FS_FAT_Char_LastPathSep(name_entry);
3977:rtos/uC-FS/FAT/fs_fat.c ****              if (p_slash != (CPU_CHAR *)0) {
3978:rtos/uC-FS/FAT/fs_fat.c ****                  name_entry = p_slash + 1u;
3979:rtos/uC-FS/FAT/fs_fat.c ****              }
3980:rtos/uC-FS/FAT/fs_fat.c **** 
3981:rtos/uC-FS/FAT/fs_fat.c ****              is_dir = DEF_BIT_IS_SET(mode, FS_FAT_MODE_DIR);
3982:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_LowEntryCreate(p_vol,
3983:rtos/uC-FS/FAT/fs_fat.c ****                                    p_buf,
3984:rtos/uC-FS/FAT/fs_fat.c ****                                    p_entry_data,
3985:rtos/uC-FS/FAT/fs_fat.c ****                                    name_entry,
3986:rtos/uC-FS/FAT/fs_fat.c ****                                    dir_first_sec,
3987:rtos/uC-FS/FAT/fs_fat.c ****                                    is_dir,
3988:rtos/uC-FS/FAT/fs_fat.c ****                                    p_err);
3989:rtos/uC-FS/FAT/fs_fat.c ****              break;
3990:rtos/uC-FS/FAT/fs_fat.c **** #endif
3991:rtos/uC-FS/FAT/fs_fat.c **** 
3992:rtos/uC-FS/FAT/fs_fat.c **** 
3993:rtos/uC-FS/FAT/fs_fat.c **** 
3994:rtos/uC-FS/FAT/fs_fat.c ****         case FS_ERR_NONE:                                       /* ------------------- GET FILE INF
3995:rtos/uC-FS/FAT/fs_fat.c ****              if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_MUST_CREATE) == DEF_YES) {
3996:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
3997:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Entry should not exist: %s.\r\n", name_entry
3998:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_ENTRY_EXISTS;
3999:rtos/uC-FS/FAT/fs_fat.c ****                  return;
4000:rtos/uC-FS/FAT/fs_fat.c ****              }
4001:rtos/uC-FS/FAT/fs_fat.c **** 
4002:rtos/uC-FS/FAT/fs_fat.c ****              p_dir_entry = (CPU_INT08U *)p_buf->DataPtr + dir_end_pos.SecPos;
4003:rtos/uC-FS/FAT/fs_fat.c ****              attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR)
4004:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is invalid.    
4005:rtos/uC-FS/FAT/fs_fat.c ****              if (DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY | FS_FAT_DIRENT_ATTR_VOLUME_ID
4006:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
4007:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Invalid entry: %s.\r\n", name_entry));
4008:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_ENTRY_NOT_FILE;
4009:rtos/uC-FS/FAT/fs_fat.c ****                  return;
4010:rtos/uC-FS/FAT/fs_fat.c ****              }
4011:rtos/uC-FS/FAT/fs_fat.c **** 
4012:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is vol ID.     
4013:rtos/uC-FS/FAT/fs_fat.c ****              if (DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_VOLUME_ID) == DEF_YES) {
4014:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
4015:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Volume ID: %s.\r\n", name_entry));
4016:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_ENTRY_NOT_FILE;
4017:rtos/uC-FS/FAT/fs_fat.c ****                  return;
4018:rtos/uC-FS/FAT/fs_fat.c ****              }
4019:rtos/uC-FS/FAT/fs_fat.c **** 
4020:rtos/uC-FS/FAT/fs_fat.c ****              if (DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY) == DEF_YES) {
ARM GAS  /tmp/ccazZ5Hl.s 			page 72


4021:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is dir but mode
4022:rtos/uC-FS/FAT/fs_fat.c ****                  if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_DIR)  == DEF_YES) {
4023:rtos/uC-FS/FAT/fs_fat.c ****                      FSBuf_Free(p_buf);
4024:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Dir NOT file: %s.\r\n", name_entry));
4025:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_ENTRY_NOT_FILE;
4026:rtos/uC-FS/FAT/fs_fat.c ****                      return;
4027:rtos/uC-FS/FAT/fs_fat.c ****                  }
4028:rtos/uC-FS/FAT/fs_fat.c ****              } else {
4029:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is file but mod
4030:rtos/uC-FS/FAT/fs_fat.c ****                  if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_FILE)  == DEF_YES) {
4031:rtos/uC-FS/FAT/fs_fat.c ****                      FSBuf_Free(p_buf);
4032:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_LowEntryFind(): File NOT dir: %s.\r\n", name_entry));
4033:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_ENTRY_NOT_DIR;
4034:rtos/uC-FS/FAT/fs_fat.c ****                      return;
4035:rtos/uC-FS/FAT/fs_fat.c ****                  }
4036:rtos/uC-FS/FAT/fs_fat.c ****              }
4037:rtos/uC-FS/FAT/fs_fat.c **** 
4038:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is rd-only but 
4039:rtos/uC-FS/FAT/fs_fat.c ****              if ((DEF_BIT_IS_SET(mode,   FS_FAT_MODE_WR)               == DEF_YES) &&
4040:rtos/uC-FS/FAT/fs_fat.c ****                  (DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_READ_ONLY) == DEF_YES) &&
4041:rtos/uC-FS/FAT/fs_fat.c ****                  (DEF_BIT_IS_CLR(mode,   FS_FAT_MODE_DEL)              == DEF_YES)) {
4042:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
4043:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Entry is read only: %s.\r\n", name_entry));
4044:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_ENTRY_RD_ONLY;
4045:rtos/uC-FS/FAT/fs_fat.c ****                  return;
4046:rtos/uC-FS/FAT/fs_fat.c ****              }
4047:rtos/uC-FS/FAT/fs_fat.c **** 
4048:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Sec & clus nbr of file's dir sec
4049:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirFirstSec    = dir_first_sec;
4050:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirStartSec    = dir_start_pos.SecNbr;
4051:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirStartSecPos = dir_start_pos.SecPos;
4052:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirEndSec      = dir_end_pos.SecNbr;
4053:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirEndSecPos   = dir_end_pos.SecPos;
4054:rtos/uC-FS/FAT/fs_fat.c **** 
4055:rtos/uC-FS/FAT/fs_fat.c **** 
4056:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_FileDataInit(p_entry_data,
4057:rtos/uC-FS/FAT/fs_fat.c ****                                  p_dir_entry);
4058:rtos/uC-FS/FAT/fs_fat.c **** 
4059:rtos/uC-FS/FAT/fs_fat.c **** 
4060:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Sec & clus nbr of file's first s
4061:rtos/uC-FS/FAT/fs_fat.c ****              file_size_sec =  p_entry_data->FileSize;
4062:rtos/uC-FS/FAT/fs_fat.c ****              is_dir        =  DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY);
4063:rtos/uC-FS/FAT/fs_fat.c ****              p_fat_data    = (FS_FAT_DATA *)p_vol->DataPtr;
4064:rtos/uC-FS/FAT/fs_fat.c **** 
4065:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Note #2.                    
4066:rtos/uC-FS/FAT/fs_fat.c ****              file_clus =  FS_FAT_DIRENT_CLUS_NBR_GET(p_dir_entry);
4067:rtos/uC-FS/FAT/fs_fat.c ****              if ((file_clus     != 0u) ||                       /* If file first clus is non zero .
4068:rtos/uC-FS/FAT/fs_fat.c ****                  (file_size_sec != 0u) ||                       /* ... or file has non-zero size ..
4069:rtos/uC-FS/FAT/fs_fat.c ****                  (is_dir        == DEF_YES)) {                  /* ... or entry is dir ...         
4070:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... validate first clus.        
4071:rtos/uC-FS/FAT/fs_fat.c ****                  if ((p_fat_data->FAT_Type == 12u) ||
4072:rtos/uC-FS/FAT/fs_fat.c ****                      (p_fat_data->FAT_Type == 16u)) {
4073:rtos/uC-FS/FAT/fs_fat.c ****                      if (file_clus  > DEF_INT_16U_MAX_VAL) {    /* See Note #3.                    
4074:rtos/uC-FS/FAT/fs_fat.c ****                          FS_TRACE_DBG(("FS_FAT_LowEntryFind(): FstCluHI non-zero on FAT12/16 vol; d
4075:rtos/uC-FS/FAT/fs_fat.c ****                          file_clus &= DEF_INT_16U_MAX_VAL;
4076:rtos/uC-FS/FAT/fs_fat.c ****                      }
4077:rtos/uC-FS/FAT/fs_fat.c ****                  }
ARM GAS  /tmp/ccazZ5Hl.s 			page 73


4078:rtos/uC-FS/FAT/fs_fat.c ****                  valid     =  FS_FAT_IS_VALID_CLUS(p_fat_data, file_clus);
4079:rtos/uC-FS/FAT/fs_fat.c ****                  if (valid == DEF_NO) {
4080:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Invalid clus in dir entry: %d\n", file_c
4081:rtos/uC-FS/FAT/fs_fat.c ****                      if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_DEL) == DEF_NO) {     /* See Note #5.    
4082:rtos/uC-FS/FAT/fs_fat.c ****                         *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
4083:rtos/uC-FS/FAT/fs_fat.c ****                          FSBuf_Free(p_buf);
4084:rtos/uC-FS/FAT/fs_fat.c ****                          return;
4085:rtos/uC-FS/FAT/fs_fat.c ****                      }
4086:rtos/uC-FS/FAT/fs_fat.c ****                  }
4087:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileFirstClus = file_clus;
4088:rtos/uC-FS/FAT/fs_fat.c ****                  file_sec                    = FS_FAT_CLUS_TO_SEC(p_fat_data, file_clus);
4089:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = file_sec;
4090:rtos/uC-FS/FAT/fs_fat.c **** 
4091:rtos/uC-FS/FAT/fs_fat.c ****              } else {
4092:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileFirstClus = 0u;
4093:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = 0u;
4094:rtos/uC-FS/FAT/fs_fat.c ****              }
4095:rtos/uC-FS/FAT/fs_fat.c **** 
4096:rtos/uC-FS/FAT/fs_fat.c **** 
4097:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* -------------------- DELETE FILE
4098:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
4099:rtos/uC-FS/FAT/fs_fat.c ****              if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_DEL) == DEF_YES) {                /* Delete file 
4100:rtos/uC-FS/FAT/fs_fat.c ****                                                                                     /* Chk whether 
4101:rtos/uC-FS/FAT/fs_fat.c ****                  is_dir = DEF_BIT_IS_SET(p_entry_data->Attrib, FS_FAT_DIRENT_ATTR_DIRECTORY);
4102:rtos/uC-FS/FAT/fs_fat.c ****                  if (is_dir == DEF_YES) {
4103:rtos/uC-FS/FAT/fs_fat.c ****                      empty = FS_FAT_LowDirChkEmpty(p_vol,
4104:rtos/uC-FS/FAT/fs_fat.c ****                                                    p_buf,
4105:rtos/uC-FS/FAT/fs_fat.c ****                                                    p_entry_data->FileFirstClus,
4106:rtos/uC-FS/FAT/fs_fat.c ****                                                    p_err);
4107:rtos/uC-FS/FAT/fs_fat.c ****                      if (*p_err != FS_ERR_NONE) {
4108:rtos/uC-FS/FAT/fs_fat.c ****                           FSBuf_Free(p_buf);
4109:rtos/uC-FS/FAT/fs_fat.c ****                           return;
4110:rtos/uC-FS/FAT/fs_fat.c ****                      }
4111:rtos/uC-FS/FAT/fs_fat.c ****                      if (empty == DEF_NO) {
4112:rtos/uC-FS/FAT/fs_fat.c ****                           FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Cannot delete non-empty directory.\
4113:rtos/uC-FS/FAT/fs_fat.c ****                          *p_err = FS_ERR_ENTRY_NOT_EMPTY;
4114:rtos/uC-FS/FAT/fs_fat.c ****                           FSBuf_Free(p_buf);
4115:rtos/uC-FS/FAT/fs_fat.c ****                           return;
4116:rtos/uC-FS/FAT/fs_fat.c ****                      }
4117:rtos/uC-FS/FAT/fs_fat.c ****                  }
4118:rtos/uC-FS/FAT/fs_fat.c **** 
4119:rtos/uC-FS/FAT/fs_fat.c ****                  FS_FAT_LowEntryDel(p_vol,
4120:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
4121:rtos/uC-FS/FAT/fs_fat.c ****                                     p_entry_data,
4122:rtos/uC-FS/FAT/fs_fat.c ****                                     p_err);
4123:rtos/uC-FS/FAT/fs_fat.c ****                  if (*p_err != FS_ERR_NONE) {
4124:rtos/uC-FS/FAT/fs_fat.c ****                       FSBuf_Free(p_buf);
4125:rtos/uC-FS/FAT/fs_fat.c ****                       return;
4126:rtos/uC-FS/FAT/fs_fat.c ****                  }
4127:rtos/uC-FS/FAT/fs_fat.c **** 
4128:rtos/uC-FS/FAT/fs_fat.c **** 
4129:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- TRUNCATE FIL
4130:rtos/uC-FS/FAT/fs_fat.c ****              } else  {
4131:rtos/uC-FS/FAT/fs_fat.c ****                  if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_TRUNCATE) == DEF_YES) {       /* Truncate fil
4132:rtos/uC-FS/FAT/fs_fat.c ****                      if (p_entry_data->FileSize > 0u) {
4133:rtos/uC-FS/FAT/fs_fat.c ****                          FS_FAT_LowEntryTruncate(p_vol,
4134:rtos/uC-FS/FAT/fs_fat.c ****                                                  p_buf,
ARM GAS  /tmp/ccazZ5Hl.s 			page 74


4135:rtos/uC-FS/FAT/fs_fat.c ****                                                  p_entry_data,
4136:rtos/uC-FS/FAT/fs_fat.c ****                                                  0u,
4137:rtos/uC-FS/FAT/fs_fat.c ****                                                  p_err);
4138:rtos/uC-FS/FAT/fs_fat.c ****                          if (*p_err != FS_ERR_NONE) {
4139:rtos/uC-FS/FAT/fs_fat.c ****                               FSBuf_Free(p_buf);
4140:rtos/uC-FS/FAT/fs_fat.c ****                               return;
4141:rtos/uC-FS/FAT/fs_fat.c ****                          }
4142:rtos/uC-FS/FAT/fs_fat.c ****                      }
4143:rtos/uC-FS/FAT/fs_fat.c ****                  }
4144:rtos/uC-FS/FAT/fs_fat.c ****              }
4145:rtos/uC-FS/FAT/fs_fat.c **** #endif
4146:rtos/uC-FS/FAT/fs_fat.c **** 
4147:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_NONE;
4148:rtos/uC-FS/FAT/fs_fat.c ****              break;
4149:rtos/uC-FS/FAT/fs_fat.c **** 
4150:rtos/uC-FS/FAT/fs_fat.c ****         default:
4151:rtos/uC-FS/FAT/fs_fat.c ****              break;
4152:rtos/uC-FS/FAT/fs_fat.c ****     }
4153:rtos/uC-FS/FAT/fs_fat.c **** 
4154:rtos/uC-FS/FAT/fs_fat.c ****     if(*p_err == FS_ERR_NONE) {
4155:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Flush(p_buf, p_err);
4156:rtos/uC-FS/FAT/fs_fat.c ****     }
4157:rtos/uC-FS/FAT/fs_fat.c **** 
4158:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Free(p_buf);
4159:rtos/uC-FS/FAT/fs_fat.c **** }
4160:rtos/uC-FS/FAT/fs_fat.c **** 
4161:rtos/uC-FS/FAT/fs_fat.c **** 
4162:rtos/uC-FS/FAT/fs_fat.c **** /*
4163:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4164:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_FAT_LowEntryCreate()
4165:rtos/uC-FS/FAT/fs_fat.c **** *
4166:rtos/uC-FS/FAT/fs_fat.c **** * Description : Create entry (low-level).
4167:rtos/uC-FS/FAT/fs_fat.c **** *
4168:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol           Pointer to volume.
4169:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4170:rtos/uC-FS/FAT/fs_fat.c **** *
4171:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf           Pointer to temporary buffer.
4172:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4173:rtos/uC-FS/FAT/fs_fat.c **** *
4174:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data    Pointer to variable that will receive FAT file information.
4175:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4176:rtos/uC-FS/FAT/fs_fat.c **** *
4177:rtos/uC-FS/FAT/fs_fat.c **** *               name_entry      Name of the entry.
4178:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4179:rtos/uC-FS/FAT/fs_fat.c **** *
4180:rtos/uC-FS/FAT/fs_fat.c **** *               dir_first_sec   First sector of parent directory.
4181:rtos/uC-FS/FAT/fs_fat.c **** *
4182:rtos/uC-FS/FAT/fs_fat.c **** *               is_dir          Indicates whether directory entry is entry for directory :
4183:rtos/uC-FS/FAT/fs_fat.c **** *
4184:rtos/uC-FS/FAT/fs_fat.c **** *                                   DEF_YES, entry is for directory.
4185:rtos/uC-FS/FAT/fs_fat.c **** *                                   DEF_NO,  entry is for file.
4186:rtos/uC-FS/FAT/fs_fat.c **** *
4187:rtos/uC-FS/FAT/fs_fat.c **** *               p_err           Pointer to variable that will receive the return error code from th
4188:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4189:rtos/uC-FS/FAT/fs_fat.c **** *
4190:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NONE                 Entry created.
4191:rtos/uC-FS/FAT/fs_fat.c **** *
ARM GAS  /tmp/ccazZ5Hl.s 			page 75


4192:rtos/uC-FS/FAT/fs_fat.c **** *                                                               --- RETURNED BY FS_FAT_LowDirFirstC
4193:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV                  Device access error.
4194:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV_FULL             Device is full (space could not be 
4195:rtos/uC-FS/FAT/fs_fat.c **** *
4196:rtos/uC-FS/FAT/fs_fat.c **** *                                                               -------- RETURNED BY DirEntryCreate
4197:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DIR_FULL             Directory is full (space could not 
4198:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_CORRUPT        File system entry is corrupt.
4199:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NAME_INVALID         LFN name invalid.
4200:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_SYS_SFN_NOT_AVAIL    No SFN available.
4201:rtos/uC-FS/FAT/fs_fat.c **** *
4202:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
4203:rtos/uC-FS/FAT/fs_fat.c **** *
4204:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
4205:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4206:rtos/uC-FS/FAT/fs_fat.c **** */
4207:rtos/uC-FS/FAT/fs_fat.c **** 
4208:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
4209:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_LowEntryCreate (FS_VOL            *p_vol,
4210:rtos/uC-FS/FAT/fs_fat.c ****                              FS_BUF            *p_buf,
4211:rtos/uC-FS/FAT/fs_fat.c ****                              FS_FAT_FILE_DATA  *p_entry_data,
4212:rtos/uC-FS/FAT/fs_fat.c ****                              CPU_CHAR          *name_entry,
4213:rtos/uC-FS/FAT/fs_fat.c ****                              FS_FAT_SEC_NBR     dir_first_sec,
4214:rtos/uC-FS/FAT/fs_fat.c ****                              CPU_BOOLEAN        is_dir,
4215:rtos/uC-FS/FAT/fs_fat.c ****                              FS_ERR            *p_err)
4216:rtos/uC-FS/FAT/fs_fat.c **** {
4217:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
4218:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   file_clus;
4219:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_start_pos;
4220:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_end_pos;
4221:rtos/uC-FS/FAT/fs_fat.c **** 
4222:rtos/uC-FS/FAT/fs_fat.c **** 
4223:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ ASSIGN 1st CL
4224:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* If dir, make 1st dir clus.      
4225:rtos/uC-FS/FAT/fs_fat.c ****     if (is_dir == DEF_YES) {
4226:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_LowDirFirstClusAdd(p_vol,
4227:rtos/uC-FS/FAT/fs_fat.c ****                                   p_entry_data,
4228:rtos/uC-FS/FAT/fs_fat.c ****                                   p_buf,
4229:rtos/uC-FS/FAT/fs_fat.c ****                                   dir_first_sec,
4230:rtos/uC-FS/FAT/fs_fat.c ****                                   p_err);
4231:rtos/uC-FS/FAT/fs_fat.c **** 
4232:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
4233:rtos/uC-FS/FAT/fs_fat.c ****              return;
4234:rtos/uC-FS/FAT/fs_fat.c ****         }
4235:rtos/uC-FS/FAT/fs_fat.c **** 
4236:rtos/uC-FS/FAT/fs_fat.c ****         file_clus = p_entry_data->FileFirstClus;
4237:rtos/uC-FS/FAT/fs_fat.c **** 
4238:rtos/uC-FS/FAT/fs_fat.c **** 
4239:rtos/uC-FS/FAT/fs_fat.c ****     } else {                                                    /* Otherwise zero first clus.      
4240:rtos/uC-FS/FAT/fs_fat.c ****         file_clus = 0u;
4241:rtos/uC-FS/FAT/fs_fat.c ****     }
4242:rtos/uC-FS/FAT/fs_fat.c **** 
4243:rtos/uC-FS/FAT/fs_fat.c **** 
4244:rtos/uC-FS/FAT/fs_fat.c **** 
4245:rtos/uC-FS/FAT/fs_fat.c **** 
4246:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- CREATE DIR ENT
4247:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_pos.SecNbr = dir_first_sec;
4248:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_pos.SecPos = 0u;
ARM GAS  /tmp/ccazZ5Hl.s 			page 76


4249:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FN_API_Active.DirEntryCreate( p_vol,
4250:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
4251:rtos/uC-FS/FAT/fs_fat.c ****                                          name_entry,
4252:rtos/uC-FS/FAT/fs_fat.c ****                                          is_dir,
4253:rtos/uC-FS/FAT/fs_fat.c ****                                          file_clus,
4254:rtos/uC-FS/FAT/fs_fat.c ****                                         &dir_start_pos,
4255:rtos/uC-FS/FAT/fs_fat.c ****                                         &dir_end_pos,
4256:rtos/uC-FS/FAT/fs_fat.c ****                                          p_err);
4257:rtos/uC-FS/FAT/fs_fat.c **** 
4258:rtos/uC-FS/FAT/fs_fat.c ****      if (*p_err != FS_ERR_NONE) {
4259:rtos/uC-FS/FAT/fs_fat.c ****           return;
4260:rtos/uC-FS/FAT/fs_fat.c ****      }
4261:rtos/uC-FS/FAT/fs_fat.c **** 
4262:rtos/uC-FS/FAT/fs_fat.c **** 
4263:rtos/uC-FS/FAT/fs_fat.c **** 
4264:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- GET FILE INF
4265:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Populate file info.             
4266:rtos/uC-FS/FAT/fs_fat.c ****      p_dir_entry = (CPU_INT08U *)p_buf->DataPtr + dir_end_pos.SecPos;
4267:rtos/uC-FS/FAT/fs_fat.c ****      FS_FAT_FileDataInit(p_entry_data,
4268:rtos/uC-FS/FAT/fs_fat.c ****                          p_dir_entry);
4269:rtos/uC-FS/FAT/fs_fat.c **** 
4270:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirFirstSec    = dir_first_sec;
4271:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirStartSec    = dir_start_pos.SecNbr;
4272:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirStartSecPos = dir_start_pos.SecPos;
4273:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirEndSec      = dir_end_pos.SecNbr;
4274:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirEndSecPos   = dir_end_pos.SecPos;
4275:rtos/uC-FS/FAT/fs_fat.c **** 
4276:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
4277:rtos/uC-FS/FAT/fs_fat.c ****      if (is_dir == DEF_YES) {
4278:rtos/uC-FS/FAT/fs_fat.c ****          FS_TRACE_LOG(("FS_FAT_LowEntryCreate(): Created directory %s\r\n", name_entry));
4279:rtos/uC-FS/FAT/fs_fat.c ****          FS_TRACE_LOG(("                         1st clus %08X\r\n",        file_clus));
4280:rtos/uC-FS/FAT/fs_fat.c ****      } else {
4281:rtos/uC-FS/FAT/fs_fat.c ****          FS_TRACE_LOG(("FS_FAT_LowEntryCreate(): Created file %s\r\n",      name_entry));
4282:rtos/uC-FS/FAT/fs_fat.c ****      }
4283:rtos/uC-FS/FAT/fs_fat.c **** #endif
4284:rtos/uC-FS/FAT/fs_fat.c **** 
4285:rtos/uC-FS/FAT/fs_fat.c ****      FS_TRACE_LOG(("                         Dir sec  %08X\r\n",     p_entry_data->DirEndSec));
4286:rtos/uC-FS/FAT/fs_fat.c ****      FS_TRACE_LOG(("                         Dir pos      %04X\r\n", p_entry_data->DirEndSecPos));
4287:rtos/uC-FS/FAT/fs_fat.c **** 
4288:rtos/uC-FS/FAT/fs_fat.c **** 
4289:rtos/uC-FS/FAT/fs_fat.c **** }
4290:rtos/uC-FS/FAT/fs_fat.c **** #endif
4291:rtos/uC-FS/FAT/fs_fat.c **** 
4292:rtos/uC-FS/FAT/fs_fat.c **** 
4293:rtos/uC-FS/FAT/fs_fat.c **** /*
4294:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4295:rtos/uC-FS/FAT/fs_fat.c **** *                                        FS_FAT_LowEntryDel()
4296:rtos/uC-FS/FAT/fs_fat.c **** *
4297:rtos/uC-FS/FAT/fs_fat.c **** * Description : Delete entry (low-level).
4298:rtos/uC-FS/FAT/fs_fat.c **** *
4299:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol           Pointer to volume.
4300:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
4301:rtos/uC-FS/FAT/fs_fat.c **** *
4302:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf           Pointer to temporary buffer.
4303:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
4304:rtos/uC-FS/FAT/fs_fat.c **** *
4305:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data    Pointer to FAT file information.
ARM GAS  /tmp/ccazZ5Hl.s 			page 77


4306:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
4307:rtos/uC-FS/FAT/fs_fat.c **** *
4308:rtos/uC-FS/FAT/fs_fat.c **** *               p_err           Pointer to variable that will receive the return error code from th
4309:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
4310:rtos/uC-FS/FAT/fs_fat.c **** *
4311:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NONE             Entry deleted.
4312:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV              Device access error.
4313:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_ENTRY_CORRUPT    File system entry is corrupt.
4314:rtos/uC-FS/FAT/fs_fat.c **** *
4315:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
4316:rtos/uC-FS/FAT/fs_fat.c **** *
4317:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
4318:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4319:rtos/uC-FS/FAT/fs_fat.c **** */
4320:rtos/uC-FS/FAT/fs_fat.c **** 
4321:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
4322:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_LowEntryDel (FS_VOL            *p_vol,
4323:rtos/uC-FS/FAT/fs_fat.c ****                           FS_BUF            *p_buf,
4324:rtos/uC-FS/FAT/fs_fat.c ****                           FS_FAT_FILE_DATA  *p_entry_data,
4325:rtos/uC-FS/FAT/fs_fat.c ****                           FS_ERR            *p_err)
4326:rtos/uC-FS/FAT/fs_fat.c **** {
4327:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS     dir_end_pos;
4328:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS     dir_start_pos;
4329:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA       *p_fat_data;
4330:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        valid;
4331:rtos/uC-FS/FAT/fs_fat.c **** 
4332:rtos/uC-FS/FAT/fs_fat.c **** 
4333:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
4334:rtos/uC-FS/FAT/fs_fat.c **** 
4335:rtos/uC-FS/FAT/fs_fat.c **** 
4336:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- DEL DIR ENTR
4337:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_pos.SecNbr = p_entry_data->DirStartSec;
4338:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_pos.SecPos = p_entry_data->DirStartSecPos;
4339:rtos/uC-FS/FAT/fs_fat.c **** 
4340:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_pos.SecNbr   = p_entry_data->DirEndSec;
4341:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_pos.SecPos   = p_entry_data->DirEndSecPos;
4342:rtos/uC-FS/FAT/fs_fat.c **** 
4343:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FN_API_Active.DirEntryDel(p_vol,
4344:rtos/uC-FS/FAT/fs_fat.c ****                                      p_buf,
4345:rtos/uC-FS/FAT/fs_fat.c ****                                     &dir_start_pos,
4346:rtos/uC-FS/FAT/fs_fat.c ****                                     &dir_end_pos,
4347:rtos/uC-FS/FAT/fs_fat.c ****                                      p_err);
4348:rtos/uC-FS/FAT/fs_fat.c **** 
4349:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
4350:rtos/uC-FS/FAT/fs_fat.c ****         return;
4351:rtos/uC-FS/FAT/fs_fat.c ****     }
4352:rtos/uC-FS/FAT/fs_fat.c **** 
4353:rtos/uC-FS/FAT/fs_fat.c **** 
4354:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- DEL CLUS CHA
4355:rtos/uC-FS/FAT/fs_fat.c ****     valid = FS_FAT_IS_VALID_CLUS(p_fat_data, p_entry_data->FileFirstClus);
4356:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
4357:rtos/uC-FS/FAT/fs_fat.c ****         (void)FS_FAT_ClusChainDel(p_vol,
4358:rtos/uC-FS/FAT/fs_fat.c ****                                   p_buf,
4359:rtos/uC-FS/FAT/fs_fat.c ****                                   p_entry_data->FileFirstClus,
4360:rtos/uC-FS/FAT/fs_fat.c ****                                   DEF_YES,
4361:rtos/uC-FS/FAT/fs_fat.c ****                                   p_err);
4362:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
ARM GAS  /tmp/ccazZ5Hl.s 			page 78


4363:rtos/uC-FS/FAT/fs_fat.c ****              return;
4364:rtos/uC-FS/FAT/fs_fat.c ****         }
4365:rtos/uC-FS/FAT/fs_fat.c ****     }
4366:rtos/uC-FS/FAT/fs_fat.c **** }
4367:rtos/uC-FS/FAT/fs_fat.c **** #endif
4368:rtos/uC-FS/FAT/fs_fat.c **** 
4369:rtos/uC-FS/FAT/fs_fat.c **** 
4370:rtos/uC-FS/FAT/fs_fat.c **** /*
4371:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4372:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_FAT_LowEntryRename()
4373:rtos/uC-FS/FAT/fs_fat.c **** *
4374:rtos/uC-FS/FAT/fs_fat.c **** * Description : Rename entry (low-level).
4375:rtos/uC-FS/FAT/fs_fat.c **** *
4376:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol               Pointer to volume.
4377:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
4378:rtos/uC-FS/FAT/fs_fat.c **** *
4379:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf               Pointer to temporary buffer.
4380:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
4381:rtos/uC-FS/FAT/fs_fat.c **** *
4382:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data_old    Pointer to FAT entry information for the old entry.
4383:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
4384:rtos/uC-FS/FAT/fs_fat.c **** *
4385:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data_new    Pointer to FAT entry information for the new entry.
4386:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
4387:rtos/uC-FS/FAT/fs_fat.c **** *
4388:rtos/uC-FS/FAT/fs_fat.c **** *               exists              Indicates whether entry exists with new name :
4389:rtos/uC-FS/FAT/fs_fat.c **** *
4390:rtos/uC-FS/FAT/fs_fat.c **** *                                       DEF_NO,  entry with new name does NOT exist.
4391:rtos/uC-FS/FAT/fs_fat.c **** *                                       DEF_YES, entry with new name does     exist.
4392:rtos/uC-FS/FAT/fs_fat.c **** *
4393:rtos/uC-FS/FAT/fs_fat.c **** *               name_entry_new      New name of the entry.
4394:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
4395:rtos/uC-FS/FAT/fs_fat.c **** *
4396:rtos/uC-FS/FAT/fs_fat.c **** *               p_err               Pointer to variable that will receive the return error code fro
4397:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
4398:rtos/uC-FS/FAT/fs_fat.c **** *
4399:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_NONE                 Entry renamed.
4400:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_DEV                  Device access error.
4401:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_DEV_FULL             Device is full (space could not
4402:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_DIR_FULL             Directory is full (space could 
4403:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_ENTRIES_TYPE_DIFF    Paths do not both specify files
4404:rtos/uC-FS/FAT/fs_fat.c **** *                                                                       OR directories.
4405:rtos/uC-FS/FAT/fs_fat.c **** *
4406:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
4407:rtos/uC-FS/FAT/fs_fat.c **** *
4408:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) If entry is a directory, a file with the directory name is created & then updat
4409:rtos/uC-FS/FAT/fs_fat.c **** *                   with the attributes of a directory.
4410:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4411:rtos/uC-FS/FAT/fs_fat.c **** */
4412:rtos/uC-FS/FAT/fs_fat.c **** 
4413:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
4414:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_LowEntryRename (FS_VOL            *p_vol,
4415:rtos/uC-FS/FAT/fs_fat.c ****                              FS_BUF            *p_buf,
4416:rtos/uC-FS/FAT/fs_fat.c ****                              FS_FAT_FILE_DATA  *p_entry_data_old,
4417:rtos/uC-FS/FAT/fs_fat.c ****                              FS_FAT_FILE_DATA  *p_entry_data_new,
4418:rtos/uC-FS/FAT/fs_fat.c ****                              CPU_BOOLEAN        exists,
4419:rtos/uC-FS/FAT/fs_fat.c ****                              CPU_CHAR          *name_entry_new,
ARM GAS  /tmp/ccazZ5Hl.s 			page 79


4420:rtos/uC-FS/FAT/fs_fat.c ****                              FS_ERR            *p_err)
4421:rtos/uC-FS/FAT/fs_fat.c **** {
4422:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_end_old;
4423:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR   dir_first_sec;
4424:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_start_old;
4425:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_start_new;
4426:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_end_new;
4427:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  target_entry_first_clus;
4428:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA     *p_fat_data;
4429:rtos/uC-FS/FAT/fs_fat.c **** 
4430:rtos/uC-FS/FAT/fs_fat.c **** 
4431:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA  *)p_vol->DataPtr;
4432:rtos/uC-FS/FAT/fs_fat.c **** 
4433:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------ REM TARGET ENTRY IF
4434:rtos/uC-FS/FAT/fs_fat.c ****     if (exists == DEF_YES) {
4435:rtos/uC-FS/FAT/fs_fat.c ****         target_entry_first_clus = p_entry_data_new->FileFirstClus;
4436:rtos/uC-FS/FAT/fs_fat.c **** 
4437:rtos/uC-FS/FAT/fs_fat.c ****         dir_start_new.SecNbr    = p_entry_data_new->DirStartSec;
4438:rtos/uC-FS/FAT/fs_fat.c ****         dir_start_new.SecPos    = p_entry_data_new->DirStartSecPos;
4439:rtos/uC-FS/FAT/fs_fat.c ****         dir_end_new.SecNbr      = p_entry_data_new->DirEndSec;
4440:rtos/uC-FS/FAT/fs_fat.c ****         dir_end_new.SecPos      = p_entry_data_new->DirEndSecPos;
4441:rtos/uC-FS/FAT/fs_fat.c **** 
4442:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_FN_API_Active.DirEntryDel(p_vol,
4443:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
4444:rtos/uC-FS/FAT/fs_fat.c ****                                         &dir_start_new,
4445:rtos/uC-FS/FAT/fs_fat.c ****                                         &dir_end_new,
4446:rtos/uC-FS/FAT/fs_fat.c ****                                          p_err);
4447:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
4448:rtos/uC-FS/FAT/fs_fat.c ****             return;
4449:rtos/uC-FS/FAT/fs_fat.c ****         }
4450:rtos/uC-FS/FAT/fs_fat.c ****     } else {
4451:rtos/uC-FS/FAT/fs_fat.c ****         target_entry_first_clus = 0u;
4452:rtos/uC-FS/FAT/fs_fat.c ****     }
4453:rtos/uC-FS/FAT/fs_fat.c **** 
4454:rtos/uC-FS/FAT/fs_fat.c **** 
4455:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- CREATE NEW ENT
4456:rtos/uC-FS/FAT/fs_fat.c ****     dir_first_sec = p_entry_data_new->DirFirstSec;
4457:rtos/uC-FS/FAT/fs_fat.c **** 
4458:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_LowEntryCreate(p_vol,
4459:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
4460:rtos/uC-FS/FAT/fs_fat.c ****                           p_entry_data_new,
4461:rtos/uC-FS/FAT/fs_fat.c ****                           name_entry_new,
4462:rtos/uC-FS/FAT/fs_fat.c ****                           dir_first_sec,
4463:rtos/uC-FS/FAT/fs_fat.c ****                           DEF_NO,
4464:rtos/uC-FS/FAT/fs_fat.c ****                           p_err);
4465:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {                                /* If entry could not be created ..
4466:rtos/uC-FS/FAT/fs_fat.c ****         return;                                                 /* ... rtn err.                    
4467:rtos/uC-FS/FAT/fs_fat.c ****     }
4468:rtos/uC-FS/FAT/fs_fat.c **** 
4469:rtos/uC-FS/FAT/fs_fat.c **** 
4470:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- UPDATE NEW ENT
4471:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->Attrib        = p_entry_data_old->Attrib;
4472:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->FileFirstClus = p_entry_data_old->FileFirstClus;
4473:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->FileSize      = p_entry_data_old->FileSize;
4474:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateCreate    = p_entry_data_old->DateCreate;
4475:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->TimeCreate    = p_entry_data_old->TimeCreate;
4476:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateWr        = p_entry_data_old->DateWr;
ARM GAS  /tmp/ccazZ5Hl.s 			page 80


4477:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->TimeWr        = p_entry_data_old->TimeWr;
4478:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateAccess    = p_entry_data_old->DateAccess;
4479:rtos/uC-FS/FAT/fs_fat.c **** 
4480:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_LowEntryUpdate(p_vol,
4481:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
4482:rtos/uC-FS/FAT/fs_fat.c ****                           p_entry_data_new,
4483:rtos/uC-FS/FAT/fs_fat.c ****                           DEF_NO,
4484:rtos/uC-FS/FAT/fs_fat.c ****                           p_err);
4485:rtos/uC-FS/FAT/fs_fat.c **** 
4486:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
4487:rtos/uC-FS/FAT/fs_fat.c ****         return;
4488:rtos/uC-FS/FAT/fs_fat.c ****     }
4489:rtos/uC-FS/FAT/fs_fat.c **** 
4490:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ REM OLD ENTRY
4491:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_old.SecNbr = p_entry_data_old->DirStartSec;
4492:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_old.SecPos = p_entry_data_old->DirStartSecPos;
4493:rtos/uC-FS/FAT/fs_fat.c **** 
4494:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_old.SecNbr   = p_entry_data_old->DirEndSec;
4495:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_old.SecPos   = p_entry_data_old->DirEndSecPos;
4496:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FN_API_Active.DirEntryDel( p_vol,
4497:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
4498:rtos/uC-FS/FAT/fs_fat.c ****                                      &dir_start_old,
4499:rtos/uC-FS/FAT/fs_fat.c ****                                      &dir_end_old,
4500:rtos/uC-FS/FAT/fs_fat.c ****                                       p_err);
4501:rtos/uC-FS/FAT/fs_fat.c **** 
4502:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
4503:rtos/uC-FS/FAT/fs_fat.c ****         return;
4504:rtos/uC-FS/FAT/fs_fat.c ****     }
4505:rtos/uC-FS/FAT/fs_fat.c **** 
4506:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------- DEL TARGET CLUS CHAIN 
4507:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Clus chain del must be last oper
4508:rtos/uC-FS/FAT/fs_fat.c ****     if (exists == DEF_YES) {
4509:rtos/uC-FS/FAT/fs_fat.c ****         if (FS_FAT_IS_VALID_CLUS(p_fat_data, target_entry_first_clus) == DEF_YES) {
4510:rtos/uC-FS/FAT/fs_fat.c ****             (void)FS_FAT_ClusChainDel(p_vol,
4511:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
4512:rtos/uC-FS/FAT/fs_fat.c ****                                       target_entry_first_clus,
4513:rtos/uC-FS/FAT/fs_fat.c ****                                       DEF_YES,
4514:rtos/uC-FS/FAT/fs_fat.c ****                                       p_err);
4515:rtos/uC-FS/FAT/fs_fat.c ****             if (*p_err != FS_ERR_NONE) {
4516:rtos/uC-FS/FAT/fs_fat.c ****                 return;
4517:rtos/uC-FS/FAT/fs_fat.c ****             }
4518:rtos/uC-FS/FAT/fs_fat.c ****         }
4519:rtos/uC-FS/FAT/fs_fat.c ****     }
4520:rtos/uC-FS/FAT/fs_fat.c **** }
4521:rtos/uC-FS/FAT/fs_fat.c **** #endif
4522:rtos/uC-FS/FAT/fs_fat.c **** 
4523:rtos/uC-FS/FAT/fs_fat.c **** 
4524:rtos/uC-FS/FAT/fs_fat.c **** /*
4525:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4526:rtos/uC-FS/FAT/fs_fat.c **** *                                      FS_FAT_LowEntryTruncate()
4527:rtos/uC-FS/FAT/fs_fat.c **** *
4528:rtos/uC-FS/FAT/fs_fat.c **** * Description : Truncate entry (low-level).
4529:rtos/uC-FS/FAT/fs_fat.c **** *
4530:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol                   Pointer to volume.
4531:rtos/uC-FS/FAT/fs_fat.c **** *               ----------              Argument validated by caller.
4532:rtos/uC-FS/FAT/fs_fat.c **** *
4533:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf                   Pointer to temporary buffer.
ARM GAS  /tmp/ccazZ5Hl.s 			page 81


4534:rtos/uC-FS/FAT/fs_fat.c **** *               ----------              Argument validated by caller.
4535:rtos/uC-FS/FAT/fs_fat.c **** *
4536:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data            Pointer to FAT entry information.
4537:rtos/uC-FS/FAT/fs_fat.c **** *               ----------              Argument validated by caller.
4538:rtos/uC-FS/FAT/fs_fat.c **** *
4539:rtos/uC-FS/FAT/fs_fat.c **** *               file_size_truncated     Size of the file, in octets, after truncation.
4540:rtos/uC-FS/FAT/fs_fat.c **** *
4541:rtos/uC-FS/FAT/fs_fat.c **** *               p_err                   Pointer to variable that will receive the return error code
4542:rtos/uC-FS/FAT/fs_fat.c **** *               ----------              Argument validated by caller.
4543:rtos/uC-FS/FAT/fs_fat.c **** *
4544:rtos/uC-FS/FAT/fs_fat.c **** *                                           FS_ERR_NONE              Entry truncated.
4545:rtos/uC-FS/FAT/fs_fat.c **** *                                           FS_ERR_DEV               Device access error.
4546:rtos/uC-FS/FAT/fs_fat.c **** *                                           FS_ERR_ENTRY_CORRUPT     File system entry is corrupt.
4547:rtos/uC-FS/FAT/fs_fat.c **** *                                           FS_ERR_VOL_INVALID_OP    Invalid operation (see Note #2
4548:rtos/uC-FS/FAT/fs_fat.c **** *
4549:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
4550:rtos/uC-FS/FAT/fs_fat.c **** *
4551:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The file must NEVER be called on a directory.
4552:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4553:rtos/uC-FS/FAT/fs_fat.c **** */
4554:rtos/uC-FS/FAT/fs_fat.c **** 
4555:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
4556:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_LowEntryTruncate (FS_VOL            *p_vol,
4557:rtos/uC-FS/FAT/fs_fat.c ****                                FS_BUF            *p_buf,
4558:rtos/uC-FS/FAT/fs_fat.c ****                                FS_FAT_FILE_DATA  *p_entry_data,
4559:rtos/uC-FS/FAT/fs_fat.c ****                                FS_FAT_FILE_SIZE   file_size_truncated,
4560:rtos/uC-FS/FAT/fs_fat.c ****                                FS_ERR            *p_err)
4561:rtos/uC-FS/FAT/fs_fat.c **** {
4562:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        del_first;
4563:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA       *p_fat_data;
4564:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    file_first_clus;
4565:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FILE_SIZE   file_size;
4566:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FILE_SIZE   file_size_clus;
4567:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FILE_SIZE   file_size_truncated_clus;
4568:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        valid;
4569:rtos/uC-FS/FAT/fs_fat.c **** 
4570:rtos/uC-FS/FAT/fs_fat.c **** 
4571:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
4572:rtos/uC-FS/FAT/fs_fat.c **** 
4573:rtos/uC-FS/FAT/fs_fat.c **** 
4574:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------------- UPDATE DIR ENT
4575:rtos/uC-FS/FAT/fs_fat.c ****     file_size       = p_entry_data->FileSize;                   /* Save file size & ...            
4576:rtos/uC-FS/FAT/fs_fat.c ****     file_first_clus = p_entry_data->FileFirstClus;              /* ... first file clus.            
4577:rtos/uC-FS/FAT/fs_fat.c **** 
4578:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Update dir entry's file size & f
4579:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileSize = file_size_truncated;
4580:rtos/uC-FS/FAT/fs_fat.c ****     if (file_size_truncated == 0u) {                            /* If len is zero ...              
4581:rtos/uC-FS/FAT/fs_fat.c ****         p_entry_data->FileFirstClus = 0u;                       /* ... then unlink first clus.     
4582:rtos/uC-FS/FAT/fs_fat.c ****     }
4583:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_LowEntryUpdate(p_vol,                                /* Wr new file size & first file cl
4584:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
4585:rtos/uC-FS/FAT/fs_fat.c ****                           p_entry_data,
4586:rtos/uC-FS/FAT/fs_fat.c ****                           DEF_YES,
4587:rtos/uC-FS/FAT/fs_fat.c ****                           p_err);
4588:rtos/uC-FS/FAT/fs_fat.c **** 
4589:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
4590:rtos/uC-FS/FAT/fs_fat.c ****          return;
ARM GAS  /tmp/ccazZ5Hl.s 			page 82


4591:rtos/uC-FS/FAT/fs_fat.c ****     }
4592:rtos/uC-FS/FAT/fs_fat.c **** 
4593:rtos/uC-FS/FAT/fs_fat.c **** 
4594:rtos/uC-FS/FAT/fs_fat.c **** 
4595:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- DEL CLUS CHA
4596:rtos/uC-FS/FAT/fs_fat.c ****     valid = FS_FAT_IS_VALID_CLUS(p_fat_data, file_first_clus);
4597:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
4598:rtos/uC-FS/FAT/fs_fat.c ****         file_size_truncated_clus = (file_size_truncated  > 0u) ? (FS_UTIL_DIV_PWR2(file_size_trunca
4599:rtos/uC-FS/FAT/fs_fat.c ****         file_size_clus           = (file_size            > 0u) ? (FS_UTIL_DIV_PWR2(file_size       
4600:rtos/uC-FS/FAT/fs_fat.c ****         del_first                = (file_size_truncated == 0u) ?  DEF_YES : DEF_NO;
4601:rtos/uC-FS/FAT/fs_fat.c **** 
4602:rtos/uC-FS/FAT/fs_fat.c ****         if ((file_size_truncated_clus != file_size_clus) ||     /* If the nbr clus will chng       
4603:rtos/uC-FS/FAT/fs_fat.c ****             (del_first                == DEF_YES)) {            /* ... or first clus must be del'd 
4604:rtos/uC-FS/FAT/fs_fat.c **** 
4605:rtos/uC-FS/FAT/fs_fat.c ****             if (file_size_truncated != 0u) {
4606:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... find last clus of trunc'd fi
4607:rtos/uC-FS/FAT/fs_fat.c ****                 file_first_clus = FS_FAT_ClusChainFollow(p_vol,
4608:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
4609:rtos/uC-FS/FAT/fs_fat.c ****                                                          file_first_clus,
4610:rtos/uC-FS/FAT/fs_fat.c ****                                                          file_size_truncated_clus - 1u,
4611:rtos/uC-FS/FAT/fs_fat.c ****                                                          DEF_NULL,
4612:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_err);
4613:rtos/uC-FS/FAT/fs_fat.c **** 
4614:rtos/uC-FS/FAT/fs_fat.c ****                 if (*p_err != FS_ERR_NONE) {
4615:rtos/uC-FS/FAT/fs_fat.c ****                     if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END_EARLY) ||
4616:rtos/uC-FS/FAT/fs_fat.c ****                         (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
4617:rtos/uC-FS/FAT/fs_fat.c ****                          *p_err =  FS_ERR_ENTRY_CORRUPT;
4618:rtos/uC-FS/FAT/fs_fat.c ****                     }
4619:rtos/uC-FS/FAT/fs_fat.c ****                     return;
4620:rtos/uC-FS/FAT/fs_fat.c ****                 }
4621:rtos/uC-FS/FAT/fs_fat.c ****             }
4622:rtos/uC-FS/FAT/fs_fat.c **** 
4623:rtos/uC-FS/FAT/fs_fat.c ****             (void)FS_FAT_ClusChainDel(p_vol,                    /* ... & del rem clus chain.       
4624:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
4625:rtos/uC-FS/FAT/fs_fat.c ****                                       file_first_clus,
4626:rtos/uC-FS/FAT/fs_fat.c ****                                       del_first,
4627:rtos/uC-FS/FAT/fs_fat.c ****                                       p_err);
4628:rtos/uC-FS/FAT/fs_fat.c ****             if (*p_err != FS_ERR_NONE) {
4629:rtos/uC-FS/FAT/fs_fat.c ****                  return;
4630:rtos/uC-FS/FAT/fs_fat.c ****             }
4631:rtos/uC-FS/FAT/fs_fat.c ****         }
4632:rtos/uC-FS/FAT/fs_fat.c ****     }
4633:rtos/uC-FS/FAT/fs_fat.c **** }
4634:rtos/uC-FS/FAT/fs_fat.c **** #endif
4635:rtos/uC-FS/FAT/fs_fat.c **** 
4636:rtos/uC-FS/FAT/fs_fat.c **** 
4637:rtos/uC-FS/FAT/fs_fat.c **** /*
4638:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4639:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4640:rtos/uC-FS/FAT/fs_fat.c **** *                                            UTILITY FUNCTIONS
4641:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4642:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4643:rtos/uC-FS/FAT/fs_fat.c **** */
4644:rtos/uC-FS/FAT/fs_fat.c **** 
4645:rtos/uC-FS/FAT/fs_fat.c **** /*
4646:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4647:rtos/uC-FS/FAT/fs_fat.c **** *                                            FS_FAT_DateFmt()
ARM GAS  /tmp/ccazZ5Hl.s 			page 83


4648:rtos/uC-FS/FAT/fs_fat.c **** *
4649:rtos/uC-FS/FAT/fs_fat.c **** * Description : Format date for directory entry.
4650:rtos/uC-FS/FAT/fs_fat.c **** *
4651:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_time      Pointer to date/time structure.
4652:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4653:rtos/uC-FS/FAT/fs_fat.c **** *
4654:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Formatted date for directory entry.
4655:rtos/uC-FS/FAT/fs_fat.c **** *
4656:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The FAT date stamp encodes the date as follows :
4657:rtos/uC-FS/FAT/fs_fat.c **** *
4658:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) Bits 0 -  4 : Day of month,     1-  31 inclusive.
4659:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) Bits 5 -  8 : Month of year,    1-  12 inclusive.
4660:rtos/uC-FS/FAT/fs_fat.c **** *                   (c) Bits 9 - 15 : Years,         1980-2107 inclusive.
4661:rtos/uC-FS/FAT/fs_fat.c **** *
4662:rtos/uC-FS/FAT/fs_fat.c **** *               (2) According to [Ref #1], unsupported date & time fields should be set to 0.
4663:rtos/uC-FS/FAT/fs_fat.c **** *                   Consequently, if any illegal parameters are passed, the date is returned as 0.
4664:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4665:rtos/uC-FS/FAT/fs_fat.c **** */
4666:rtos/uC-FS/FAT/fs_fat.c **** 
4667:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
4668:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_DATE  FS_FAT_DateFmt (CLK_DATE_TIME  *p_time)
4669:rtos/uC-FS/FAT/fs_fat.c **** {
4670:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   date_val;
4671:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   day;
4672:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   month;
4673:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   year;
4674:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN  valid;
4675:rtos/uC-FS/FAT/fs_fat.c **** 
4676:rtos/uC-FS/FAT/fs_fat.c **** 
4677:rtos/uC-FS/FAT/fs_fat.c ****     valid = Clk_IsDateTimeValid(p_time);
4678:rtos/uC-FS/FAT/fs_fat.c **** 
4679:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {
4680:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
4681:rtos/uC-FS/FAT/fs_fat.c ****     }
4682:rtos/uC-FS/FAT/fs_fat.c **** 
4683:rtos/uC-FS/FAT/fs_fat.c ****     day   = (CPU_INT16U)p_time->Day;
4684:rtos/uC-FS/FAT/fs_fat.c ****     month = (CPU_INT16U)p_time->Month;
4685:rtos/uC-FS/FAT/fs_fat.c ****     year  = (CPU_INT16U)p_time->Yr;
4686:rtos/uC-FS/FAT/fs_fat.c **** 
4687:rtos/uC-FS/FAT/fs_fat.c ****     if ((year  >= 1980u) && (year  <= 2107u)) {
4688:rtos/uC-FS/FAT/fs_fat.c ****         date_val = ((CPU_INT16U)((day         ) << 0)
4689:rtos/uC-FS/FAT/fs_fat.c ****                  +  (CPU_INT16U)((month       ) << 5)
4690:rtos/uC-FS/FAT/fs_fat.c ****                  +  (CPU_INT16U)((year - 1980u) << 9));
4691:rtos/uC-FS/FAT/fs_fat.c ****     } else {
4692:rtos/uC-FS/FAT/fs_fat.c ****         date_val = 0u;
4693:rtos/uC-FS/FAT/fs_fat.c ****     }
4694:rtos/uC-FS/FAT/fs_fat.c **** 
4695:rtos/uC-FS/FAT/fs_fat.c ****     return (date_val);
4696:rtos/uC-FS/FAT/fs_fat.c **** }
4697:rtos/uC-FS/FAT/fs_fat.c **** #endif
4698:rtos/uC-FS/FAT/fs_fat.c **** 
4699:rtos/uC-FS/FAT/fs_fat.c **** 
4700:rtos/uC-FS/FAT/fs_fat.c **** /*
4701:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4702:rtos/uC-FS/FAT/fs_fat.c **** *                                            FS_FAT_TimeFmt()
4703:rtos/uC-FS/FAT/fs_fat.c **** *
4704:rtos/uC-FS/FAT/fs_fat.c **** * Description : Format time for directory entry.
ARM GAS  /tmp/ccazZ5Hl.s 			page 84


4705:rtos/uC-FS/FAT/fs_fat.c **** *
4706:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_time      Pointer to date/time structure.
4707:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4708:rtos/uC-FS/FAT/fs_fat.c **** *
4709:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Formatted time for directory entry.
4710:rtos/uC-FS/FAT/fs_fat.c **** *
4711:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) The FAT time stamp encodes the date as follows :
4712:rtos/uC-FS/FAT/fs_fat.c **** *
4713:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) Bits  0 -  4 : 2-second count, 0-29 inclusive (0-58 seconds).
4714:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) Bits  5 - 10 : Minutes,        0-59 inclusive.
4715:rtos/uC-FS/FAT/fs_fat.c **** *                   (c) Bits 11 - 15 : Hours,          0-23 inclusive.
4716:rtos/uC-FS/FAT/fs_fat.c **** *
4717:rtos/uC-FS/FAT/fs_fat.c **** *               (2) According to Microsoft ('FS_FAT_VolOpen() Ref #1'), unsupported date & time fie
4718:rtos/uC-FS/FAT/fs_fat.c **** *                   should be set to 0. Consequently, if any illegal parameters are passed, the tim
4719:rtos/uC-FS/FAT/fs_fat.c **** *                   returned as 0.
4720:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4721:rtos/uC-FS/FAT/fs_fat.c **** */
4722:rtos/uC-FS/FAT/fs_fat.c **** 
4723:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
4724:rtos/uC-FS/FAT/fs_fat.c **** FS_FAT_TIME  FS_FAT_TimeFmt (CLK_DATE_TIME  *p_time)
4725:rtos/uC-FS/FAT/fs_fat.c **** {
4726:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U  hour;
4727:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U  min;
4728:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U  sec;
4729:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U  time_val;
4730:rtos/uC-FS/FAT/fs_fat.c **** 
4731:rtos/uC-FS/FAT/fs_fat.c **** 
4732:rtos/uC-FS/FAT/fs_fat.c ****     sec  = (CPU_INT16U)p_time->Sec;
4733:rtos/uC-FS/FAT/fs_fat.c ****     min  = (CPU_INT16U)p_time->Min;
4734:rtos/uC-FS/FAT/fs_fat.c ****     hour = (CPU_INT16U)p_time->Hr;
4735:rtos/uC-FS/FAT/fs_fat.c **** 
4736:rtos/uC-FS/FAT/fs_fat.c ****     if ((sec < 61u) && (min < 60u) && (hour < 24u)) {
4737:rtos/uC-FS/FAT/fs_fat.c ****         time_val = (CPU_INT16U)((CPU_INT16U)(sec  >>  1)
4738:rtos/uC-FS/FAT/fs_fat.c ****                  +              (CPU_INT16U)(min  <<  5)
4739:rtos/uC-FS/FAT/fs_fat.c ****                  +              (CPU_INT16U)(hour << 11));
4740:rtos/uC-FS/FAT/fs_fat.c ****     } else {
4741:rtos/uC-FS/FAT/fs_fat.c ****         time_val = 0u;
4742:rtos/uC-FS/FAT/fs_fat.c ****     }
4743:rtos/uC-FS/FAT/fs_fat.c **** 
4744:rtos/uC-FS/FAT/fs_fat.c ****     return (time_val);
4745:rtos/uC-FS/FAT/fs_fat.c **** }
4746:rtos/uC-FS/FAT/fs_fat.c **** #endif
4747:rtos/uC-FS/FAT/fs_fat.c **** 
4748:rtos/uC-FS/FAT/fs_fat.c **** 
4749:rtos/uC-FS/FAT/fs_fat.c **** /*
4750:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4751:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_FAT_DateTimeParse()
4752:rtos/uC-FS/FAT/fs_fat.c **** *
4753:rtos/uC-FS/FAT/fs_fat.c **** * Description : Parse date & time for directory entry.
4754:rtos/uC-FS/FAT/fs_fat.c **** *
4755:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_ts        Pointer to timestamp.
4756:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4757:rtos/uC-FS/FAT/fs_fat.c **** *
4758:rtos/uC-FS/FAT/fs_fat.c **** *               date        FAT-formatted date.
4759:rtos/uC-FS/FAT/fs_fat.c **** *
4760:rtos/uC-FS/FAT/fs_fat.c **** *               time        FAT-formatted time.
4761:rtos/uC-FS/FAT/fs_fat.c **** *
ARM GAS  /tmp/ccazZ5Hl.s 			page 85


4762:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
4763:rtos/uC-FS/FAT/fs_fat.c **** *
4764:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) See 'FS_FAT_DateFmt() Note #1' & 'FS_FAT_TimeFmt() Note #1'.
4765:rtos/uC-FS/FAT/fs_fat.c **** *
4766:rtos/uC-FS/FAT/fs_fat.c **** *               (2) If the date is passed as 0, or if the date is an illegal value, then the date f
4767:rtos/uC-FS/FAT/fs_fat.c **** *                   of 'p_time' will be cleared.
4768:rtos/uC-FS/FAT/fs_fat.c **** *
4769:rtos/uC-FS/FAT/fs_fat.c **** *               (3) If the time is passed as 0, or if the time is an illegal value, then the time f
4770:rtos/uC-FS/FAT/fs_fat.c **** *                   of 'stime' will be cleared.
4771:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4772:rtos/uC-FS/FAT/fs_fat.c **** */
4773:rtos/uC-FS/FAT/fs_fat.c **** 
4774:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_DateTimeParse (CLK_TS_SEC   *p_ts,
4775:rtos/uC-FS/FAT/fs_fat.c ****                             FS_FAT_DATE   date,
4776:rtos/uC-FS/FAT/fs_fat.c ****                             FS_FAT_TIME   time)
4777:rtos/uC-FS/FAT/fs_fat.c **** {
4778:rtos/uC-FS/FAT/fs_fat.c ****     CLK_DATE_TIME  stime;
4779:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     day;
4780:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     hour;
4781:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     min;
4782:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     month;
4783:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     sec;
4784:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U     year;
4785:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN    valid;
4786:rtos/uC-FS/FAT/fs_fat.c **** 
4787:rtos/uC-FS/FAT/fs_fat.c **** 
4788:rtos/uC-FS/FAT/fs_fat.c ****     valid = DEF_YES;
4789:rtos/uC-FS/FAT/fs_fat.c **** 
4790:rtos/uC-FS/FAT/fs_fat.c ****     if (date != 0u) {                                           /* See Note #2.                    
4791:rtos/uC-FS/FAT/fs_fat.c ****         day   = FS_FAT_DIRENT_DATE_GET_DAY(date);
4792:rtos/uC-FS/FAT/fs_fat.c ****         month = FS_FAT_DIRENT_DATE_GET_MONTH(date);
4793:rtos/uC-FS/FAT/fs_fat.c ****         year  = FS_FAT_DIRENT_DATE_GET_YEAR(date);
4794:rtos/uC-FS/FAT/fs_fat.c **** 
4795:rtos/uC-FS/FAT/fs_fat.c ****         valid = Clk_UnixDateTimeMake(&stime,
4796:rtos/uC-FS/FAT/fs_fat.c ****                                       year,
4797:rtos/uC-FS/FAT/fs_fat.c ****                                       month,
4798:rtos/uC-FS/FAT/fs_fat.c ****                                       day,
4799:rtos/uC-FS/FAT/fs_fat.c ****                                       0u,
4800:rtos/uC-FS/FAT/fs_fat.c ****                                       0u,
4801:rtos/uC-FS/FAT/fs_fat.c ****                                       0u,
4802:rtos/uC-FS/FAT/fs_fat.c ****                                       0u);
4803:rtos/uC-FS/FAT/fs_fat.c ****     } else {
4804:rtos/uC-FS/FAT/fs_fat.c ****         valid  = DEF_NO;
4805:rtos/uC-FS/FAT/fs_fat.c ****     }
4806:rtos/uC-FS/FAT/fs_fat.c **** 
4807:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {
4808:rtos/uC-FS/FAT/fs_fat.c ****        *p_ts   = FS_TIME_TS_INVALID;
4809:rtos/uC-FS/FAT/fs_fat.c ****         return;
4810:rtos/uC-FS/FAT/fs_fat.c ****     }
4811:rtos/uC-FS/FAT/fs_fat.c **** 
4812:rtos/uC-FS/FAT/fs_fat.c ****     sec  = FS_FAT_DIRENT_TIME_GET_SEC(time);
4813:rtos/uC-FS/FAT/fs_fat.c ****     min  = FS_FAT_DIRENT_TIME_GET_MIN(time);
4814:rtos/uC-FS/FAT/fs_fat.c ****     hour = FS_FAT_DIRENT_TIME_GET_HOUR(time);
4815:rtos/uC-FS/FAT/fs_fat.c **** 
4816:rtos/uC-FS/FAT/fs_fat.c ****     if ((sec < 61u) && (min < 60u) && (hour < 24u)) {
4817:rtos/uC-FS/FAT/fs_fat.c ****         stime.Sec = sec;
4818:rtos/uC-FS/FAT/fs_fat.c ****         stime.Min = min;
ARM GAS  /tmp/ccazZ5Hl.s 			page 86


4819:rtos/uC-FS/FAT/fs_fat.c ****         stime.Hr  = hour;
4820:rtos/uC-FS/FAT/fs_fat.c ****     } else {
4821:rtos/uC-FS/FAT/fs_fat.c ****         valid = DEF_NO;
4822:rtos/uC-FS/FAT/fs_fat.c ****     }
4823:rtos/uC-FS/FAT/fs_fat.c **** 
4824:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
4825:rtos/uC-FS/FAT/fs_fat.c ****         valid  = Clk_DateTimeToTS_Unix(p_ts,
4826:rtos/uC-FS/FAT/fs_fat.c ****                                       &stime);
4827:rtos/uC-FS/FAT/fs_fat.c ****         if (valid != DEF_YES) {
4828:rtos/uC-FS/FAT/fs_fat.c ****            *p_ts   = FS_TIME_TS_INVALID;
4829:rtos/uC-FS/FAT/fs_fat.c ****         }
4830:rtos/uC-FS/FAT/fs_fat.c **** 
4831:rtos/uC-FS/FAT/fs_fat.c ****     } else {
4832:rtos/uC-FS/FAT/fs_fat.c ****        *p_ts = FS_TIME_TS_INVALID;
4833:rtos/uC-FS/FAT/fs_fat.c ****     }
4834:rtos/uC-FS/FAT/fs_fat.c **** }
4835:rtos/uC-FS/FAT/fs_fat.c **** 
4836:rtos/uC-FS/FAT/fs_fat.c **** 
4837:rtos/uC-FS/FAT/fs_fat.c **** /*
4838:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4839:rtos/uC-FS/FAT/fs_fat.c **** *                                           FS_FAT_SecClr()
4840:rtos/uC-FS/FAT/fs_fat.c **** *
4841:rtos/uC-FS/FAT/fs_fat.c **** * Description : Clear sector(s) on a volume.
4842:rtos/uC-FS/FAT/fs_fat.c **** *
4843:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol       Pointer to volume.
4844:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4845:rtos/uC-FS/FAT/fs_fat.c **** *
4846:rtos/uC-FS/FAT/fs_fat.c **** *               p_temp      Pointer to temporary buffer.
4847:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4848:rtos/uC-FS/FAT/fs_fat.c **** *
4849:rtos/uC-FS/FAT/fs_fat.c **** *               start       Start sector of clear.
4850:rtos/uC-FS/FAT/fs_fat.c **** *
4851:rtos/uC-FS/FAT/fs_fat.c **** *               cnt         Number of sectors to clear.
4852:rtos/uC-FS/FAT/fs_fat.c **** *
4853:rtos/uC-FS/FAT/fs_fat.c **** *               sec_size    Sector size, in octets.
4854:rtos/uC-FS/FAT/fs_fat.c **** *
4855:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
4856:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4857:rtos/uC-FS/FAT/fs_fat.c **** *
4858:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE    Sector(s) cleared.
4859:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_DEV     Device access error.
4860:rtos/uC-FS/FAT/fs_fat.c **** *
4861:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
4862:rtos/uC-FS/FAT/fs_fat.c **** *
4863:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
4864:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4865:rtos/uC-FS/FAT/fs_fat.c **** */
4866:rtos/uC-FS/FAT/fs_fat.c **** 
4867:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
4868:rtos/uC-FS/FAT/fs_fat.c **** void  FS_FAT_SecClr (FS_VOL          *p_vol,
4869:rtos/uC-FS/FAT/fs_fat.c ****                      void            *p_temp,
4870:rtos/uC-FS/FAT/fs_fat.c ****                      FS_FAT_SEC_NBR   start,
4871:rtos/uC-FS/FAT/fs_fat.c ****                      FS_FAT_SEC_NBR   cnt,
4872:rtos/uC-FS/FAT/fs_fat.c ****                      FS_SEC_SIZE      sec_size,
4873:rtos/uC-FS/FAT/fs_fat.c ****                      FS_FLAGS         sec_type,
4874:rtos/uC-FS/FAT/fs_fat.c ****                      FS_ERR          *p_err)
4875:rtos/uC-FS/FAT/fs_fat.c **** {
ARM GAS  /tmp/ccazZ5Hl.s 			page 87


4876:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR  cnt_rem;
4877:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR  cnt_clr;
4878:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR  sec_per_buf;
4879:rtos/uC-FS/FAT/fs_fat.c **** 
4880:rtos/uC-FS/FAT/fs_fat.c **** 
4881:rtos/uC-FS/FAT/fs_fat.c ****     Mem_Clr(p_temp, FS_MaxSecSizeGet());
4882:rtos/uC-FS/FAT/fs_fat.c **** 
4883:rtos/uC-FS/FAT/fs_fat.c ****     cnt_rem     = cnt;
4884:rtos/uC-FS/FAT/fs_fat.c ****     sec_per_buf = FS_MaxSecSizeGet() / sec_size;
4885:rtos/uC-FS/FAT/fs_fat.c **** 
4886:rtos/uC-FS/FAT/fs_fat.c ****     while (cnt_rem > 0u) {
4887:rtos/uC-FS/FAT/fs_fat.c ****         cnt_clr = (cnt_rem > sec_per_buf) ? sec_per_buf : cnt_rem;
4888:rtos/uC-FS/FAT/fs_fat.c **** 
4889:rtos/uC-FS/FAT/fs_fat.c ****         FSVol_WrLockedEx(            p_vol,
4890:rtos/uC-FS/FAT/fs_fat.c ****                                      p_temp,
4891:rtos/uC-FS/FAT/fs_fat.c ****                          (FS_SEC_NBR)start,
4892:rtos/uC-FS/FAT/fs_fat.c ****                          (FS_SEC_QTY)cnt_clr,
4893:rtos/uC-FS/FAT/fs_fat.c ****                                      sec_type,
4894:rtos/uC-FS/FAT/fs_fat.c ****                                      p_err);
4895:rtos/uC-FS/FAT/fs_fat.c **** 
4896:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
4897:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
4898:rtos/uC-FS/FAT/fs_fat.c ****              break;
4899:rtos/uC-FS/FAT/fs_fat.c ****         }
4900:rtos/uC-FS/FAT/fs_fat.c **** 
4901:rtos/uC-FS/FAT/fs_fat.c ****         cnt_rem -= cnt_clr;
4902:rtos/uC-FS/FAT/fs_fat.c ****         start   += cnt_clr;
4903:rtos/uC-FS/FAT/fs_fat.c ****     }
4904:rtos/uC-FS/FAT/fs_fat.c **** }
4905:rtos/uC-FS/FAT/fs_fat.c **** #endif
4906:rtos/uC-FS/FAT/fs_fat.c **** 
4907:rtos/uC-FS/FAT/fs_fat.c **** 
4908:rtos/uC-FS/FAT/fs_fat.c **** /*
4909:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4910:rtos/uC-FS/FAT/fs_fat.c **** *                                      FS_FAT_Char_LastPathSep()
4911:rtos/uC-FS/FAT/fs_fat.c **** *
4912:rtos/uC-FS/FAT/fs_fat.c **** * Description : Search string for last occurrence of path separator character NOT at the end of str
4913:rtos/uC-FS/FAT/fs_fat.c **** *
4914:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : pstr        Pointer to string.
4915:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4916:rtos/uC-FS/FAT/fs_fat.c **** *
4917:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : Pointer to last occurrence of path separator character in string, if any.
4918:rtos/uC-FS/FAT/fs_fat.c **** *
4919:rtos/uC-FS/FAT/fs_fat.c **** *               Pointer to NULL,                                                  otherwise.
4920:rtos/uC-FS/FAT/fs_fat.c **** *
4921:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
4922:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4923:rtos/uC-FS/FAT/fs_fat.c **** */
4924:rtos/uC-FS/FAT/fs_fat.c **** 
4925:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
4926:rtos/uC-FS/FAT/fs_fat.c **** CPU_CHAR  *FS_FAT_Char_LastPathSep (CPU_CHAR  *pstr)
4927:rtos/uC-FS/FAT/fs_fat.c **** {
4928:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR     *pstr_next;
4929:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T    str_len;
4930:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN   non_sep_found;
4931:rtos/uC-FS/FAT/fs_fat.c **** 
4932:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 88


4933:rtos/uC-FS/FAT/fs_fat.c ****     pstr_next      = pstr;
4934:rtos/uC-FS/FAT/fs_fat.c ****     str_len        = Str_Len_N(pstr, FS_FAT_MAX_PATH_NAME_LEN);
4935:rtos/uC-FS/FAT/fs_fat.c ****     pstr_next     += str_len;
4936:rtos/uC-FS/FAT/fs_fat.c ****     non_sep_found  = DEF_NO;
4937:rtos/uC-FS/FAT/fs_fat.c ****     while ( ( pstr_next     != pstr) &&                         /* Srch str from end until beginnin
4938:rtos/uC-FS/FAT/fs_fat.c ****            ((*pstr_next     != FS_FAT_PATH_SEP_CHAR) ||         /* ... until srch char found       
4939:rtos/uC-FS/FAT/fs_fat.c ****             ( non_sep_found == DEF_NO))) {                      /* ... but after non-srch char foun
4940:rtos/uC-FS/FAT/fs_fat.c ****         if ((*pstr_next != FS_FAT_PATH_SEP_CHAR) &&
4941:rtos/uC-FS/FAT/fs_fat.c ****             (*pstr_next != ASCII_CHAR_NULL)) {
4942:rtos/uC-FS/FAT/fs_fat.c ****             non_sep_found = DEF_YES;
4943:rtos/uC-FS/FAT/fs_fat.c ****         }
4944:rtos/uC-FS/FAT/fs_fat.c ****         pstr_next--;
4945:rtos/uC-FS/FAT/fs_fat.c ****     }
4946:rtos/uC-FS/FAT/fs_fat.c **** 
4947:rtos/uC-FS/FAT/fs_fat.c **** 
4948:rtos/uC-FS/FAT/fs_fat.c ****     if (*pstr_next != FS_FAT_PATH_SEP_CHAR) {                   /* If srch char NOT found, str poin
4949:rtos/uC-FS/FAT/fs_fat.c ****          return ((CPU_CHAR *)0);                                /* ... rtn NULL.                   
4950:rtos/uC-FS/FAT/fs_fat.c ****     }
4951:rtos/uC-FS/FAT/fs_fat.c **** 
4952:rtos/uC-FS/FAT/fs_fat.c ****     return (pstr_next);                                         /* Else rtn ptr to found srch char.
4953:rtos/uC-FS/FAT/fs_fat.c **** }
4954:rtos/uC-FS/FAT/fs_fat.c **** #endif
4955:rtos/uC-FS/FAT/fs_fat.c **** 
4956:rtos/uC-FS/FAT/fs_fat.c **** 
4957:rtos/uC-FS/FAT/fs_fat.c **** /*
4958:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4959:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4960:rtos/uC-FS/FAT/fs_fat.c **** *                                           LOCAL FUNCTIONS
4961:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4962:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4963:rtos/uC-FS/FAT/fs_fat.c **** */
4964:rtos/uC-FS/FAT/fs_fat.c **** 
4965:rtos/uC-FS/FAT/fs_fat.c **** /*
4966:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
4967:rtos/uC-FS/FAT/fs_fat.c **** *                                         FS_FAT_ChkBootSec()
4968:rtos/uC-FS/FAT/fs_fat.c **** *
4969:rtos/uC-FS/FAT/fs_fat.c **** * Description : Check boot sector & calculate FAT parameters.
4970:rtos/uC-FS/FAT/fs_fat.c **** *
4971:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_fat_data  Pointer to FAT data.
4972:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4973:rtos/uC-FS/FAT/fs_fat.c **** *
4974:rtos/uC-FS/FAT/fs_fat.c **** *               p_temp_08   Pointer to buffer containing boot sector.
4975:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4976:rtos/uC-FS/FAT/fs_fat.c **** *
4977:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
4978:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
4979:rtos/uC-FS/FAT/fs_fat.c **** *
4980:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE           File system information parsed.
4981:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_INVALID_SYS    Invalid file system.
4982:rtos/uC-FS/FAT/fs_fat.c **** *
4983:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
4984:rtos/uC-FS/FAT/fs_fat.c **** *
4985:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) (a) The first 36 bytes of the FAT boot sector are identical for FAT12/16/32 fil
4986:rtos/uC-FS/FAT/fs_fat.c **** *                       systems :
4987:rtos/uC-FS/FAT/fs_fat.c **** *
4988:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
4989:rtos/uC-FS/FAT/fs_fat.c **** *                       |    JUMP INSTRUCTION TO BOOT CODE*    |             OEM NAME (in ASCII): T
ARM GAS  /tmp/ccazZ5Hl.s 			page 89


4990:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
4991:rtos/uC-FS/FAT/fs_fat.c **** *                                                              |    BYTES PER SECTOR**   | SEC/CLUS
4992:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
4993:rtos/uC-FS/FAT/fs_fat.c **** *                       | NBR FATs^  |    ROOT ENTRY CNT^^     | TOTAL NBR of SECTORS^^^ | MEDIA^^^
4994:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
4995:rtos/uC-FS/FAT/fs_fat.c **** *                       |    SECTORS PER TRACK    |       NBR of HEADS      |       NBR SECTORS bef
4996:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
4997:rtos/uC-FS/FAT/fs_fat.c **** *                       |             TOTAL NBR of SECTORS^^^               |
4998:rtos/uC-FS/FAT/fs_fat.c **** *                       -----------------------------------------------------
4999:rtos/uC-FS/FAT/fs_fat.c **** *
5000:rtos/uC-FS/FAT/fs_fat.c **** *                       *Legal forms are
5001:rtos/uC-FS/FAT/fs_fat.c **** *                           boot[0] = 0xEB, boot[1] = ????, boot[2] = 0x90
5002:rtos/uC-FS/FAT/fs_fat.c **** *                        &
5003:rtos/uC-FS/FAT/fs_fat.c **** *                           boot[0] = 0xE9, boot[1] = ????, boot[2] = ????.
5004:rtos/uC-FS/FAT/fs_fat.c **** *
5005:rtos/uC-FS/FAT/fs_fat.c **** *                      **Legal values are 512, 1024, 2048 & 4096.
5006:rtos/uC-FS/FAT/fs_fat.c **** *
5007:rtos/uC-FS/FAT/fs_fat.c **** *                     ***Legal values are 2, 4, 8, 16, 32, 64 & 128.  However, the number of bytes 
5008:rtos/uC-FS/FAT/fs_fat.c **** *                        cluster MUST be less than or equal to 32 * 1024.
5009:rtos/uC-FS/FAT/fs_fat.c **** *
5010:rtos/uC-FS/FAT/fs_fat.c **** *                    ****For FAT12 & FAT16, this SHOULD be 1.  In any case, this MUST NOT be 0.
5011:rtos/uC-FS/FAT/fs_fat.c **** *
5012:rtos/uC-FS/FAT/fs_fat.c **** *                       ^This SHOULD be 2.
5013:rtos/uC-FS/FAT/fs_fat.c **** *
5014:rtos/uC-FS/FAT/fs_fat.c **** *                      ^^For FAT12/16, this field contains the number of directory entries in the r
5015:rtos/uC-FS/FAT/fs_fat.c **** *                        directory, typically 512.  For FAT32, this field should be 0.
5016:rtos/uC-FS/FAT/fs_fat.c **** *
5017:rtos/uC-FS/FAT/fs_fat.c **** *                     ^^^Either the 16-bit count (bytes 19-20) or the 32-bit count (bytes 32-35) sh
5018:rtos/uC-FS/FAT/fs_fat.c **** *                        be non-zero & contain the total number of sectors in the file system.  The
5019:rtos/uC-FS/FAT/fs_fat.c **** *                        other should be zero.
5020:rtos/uC-FS/FAT/fs_fat.c **** *
5021:rtos/uC-FS/FAT/fs_fat.c **** *                    ^^^^Media type.  Legal values are 0xF0, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0x
5022:rtos/uC-FS/FAT/fs_fat.c **** *                        & 0xFF.  Typically, 0xF0 should be used for fixed disks & 0xF8 should be u
5023:rtos/uC-FS/FAT/fs_fat.c **** *                        for removable disks.
5024:rtos/uC-FS/FAT/fs_fat.c **** *
5025:rtos/uC-FS/FAT/fs_fat.c **** *                       #For FAT12/16, the number of sectors in each FAT.  For FAT32, this SHOULD b
5026:rtos/uC-FS/FAT/fs_fat.c **** *
5027:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) The bytes 36-61 of the FAT boot sector for FAT12/16 file systems contain th
5028:rtos/uC-FS/FAT/fs_fat.c **** *                       following :
5029:rtos/uC-FS/FAT/fs_fat.c **** *
5030:rtos/uC-FS/FAT/fs_fat.c **** *                                                                           -----------------------
5031:rtos/uC-FS/FAT/fs_fat.c **** *                                                                           | DRIVE NBR  |    0x00 
5032:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5033:rtos/uC-FS/FAT/fs_fat.c **** *                          VOLUME SERIAL NBR                   |            VOLUME LABEL (in ASCII)
5034:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5035:rtos/uC-FS/FAT/fs_fat.c **** *                                                                                                  
5036:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5037:rtos/uC-FS/FAT/fs_fat.c ****                                  FILE SYSTEM TYPE LABEL (in ASCII)                                 
5038:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5039:rtos/uC-FS/FAT/fs_fat.c **** *
5040:rtos/uC-FS/FAT/fs_fat.c **** *                   (c) The bytes 36-89 of the FAT boot sector for FAT32 file systems contain the
5041:rtos/uC-FS/FAT/fs_fat.c **** *                       following :
5042:rtos/uC-FS/FAT/fs_fat.c **** *
5043:rtos/uC-FS/FAT/fs_fat.c **** *                                                                           -----------------------
5044:rtos/uC-FS/FAT/fs_fat.c **** *                                                                           |               FAT SIZ
5045:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5046:rtos/uC-FS/FAT/fs_fat.c **** *                       |         FLAGS*          |     VERSION NUMBER**    |     CLUSTER NBR of FI
ARM GAS  /tmp/ccazZ5Hl.s 			page 90


5047:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5048:rtos/uC-FS/FAT/fs_fat.c **** *                       |   FSINFO SECTOR NBR***  |  BACKUP BOOT RECORD**** |                      
5049:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5050:rtos/uC-FS/FAT/fs_fat.c **** *                                              0x0000                                              
5051:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5052:rtos/uC-FS/FAT/fs_fat.c **** *                       | DRIVE NBR  |    0x00    |    0x29    |                 VOLUME SERIAL NBR 
5053:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5054:rtos/uC-FS/FAT/fs_fat.c **** *                                                             VOLUME LABEL (in ASCII)
5055:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5056:rtos/uC-FS/FAT/fs_fat.c **** *                                                 |             FILE SYSTEM TYPE LABEL (in ASCII): 
5057:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------------------------------------------------------
5058:rtos/uC-FS/FAT/fs_fat.c **** *                                                 |
5059:rtos/uC-FS/FAT/fs_fat.c **** *                       ---------------------------
5060:rtos/uC-FS/FAT/fs_fat.c **** *
5061:rtos/uC-FS/FAT/fs_fat.c **** *                       *If bit 7 of this is 1, then only one FAT is active; the number of this FAT
5062:rtos/uC-FS/FAT/fs_fat.c **** *                        specified in bits 0-3.  Otherwise, the FAT is mirrored at runtime into all
5063:rtos/uC-FS/FAT/fs_fat.c **** *
5064:rtos/uC-FS/FAT/fs_fat.c **** *                      **File systems conforming to Microsoft's FAT documentation should contain 0x
5065:rtos/uC-FS/FAT/fs_fat.c **** *
5066:rtos/uC-FS/FAT/fs_fat.c **** *                     ***Typically 1.
5067:rtos/uC-FS/FAT/fs_fat.c **** *
5068:rtos/uC-FS/FAT/fs_fat.c **** *                    ****Typically 6.
5069:rtos/uC-FS/FAT/fs_fat.c **** *
5070:rtos/uC-FS/FAT/fs_fat.c **** *                   (d) For FAT12/16/32, bytes 510 & 511 of the FAT boot sector are ALWAYS 0xAA55.
5071:rtos/uC-FS/FAT/fs_fat.c **** *
5072:rtos/uC-FS/FAT/fs_fat.c **** *               (2) (a) The total number of sectors in the file system MAY be smaller (perhaps
5073:rtos/uC-FS/FAT/fs_fat.c **** *                       considerably smaller) than the number of sectors in the disk.  However, the
5074:rtos/uC-FS/FAT/fs_fat.c **** *                       total number of sectors in the file system SHOULD NEVER be larger than the
5075:rtos/uC-FS/FAT/fs_fat.c **** *                       number of sectors in the disk.
5076:rtos/uC-FS/FAT/fs_fat.c **** *
5077:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) For FAT32, the number of sectors in the root directory is ALWAYS 0, since t
5078:rtos/uC-FS/FAT/fs_fat.c **** *                       root directory lies inside the data area.
5079:rtos/uC-FS/FAT/fs_fat.c **** *
5080:rtos/uC-FS/FAT/fs_fat.c **** *                   (c) (1) For FAT12/16, the data area begins after the predetermined root directo
5081:rtos/uC-FS/FAT/fs_fat.c **** *                           (which immediately follows the FAT sectors).
5082:rtos/uC-FS/FAT/fs_fat.c **** *
5083:rtos/uC-FS/FAT/fs_fat.c **** *                       (2) For FAT32,    the data area begins immediately after the FAT sectors (&
5084:rtos/uC-FS/FAT/fs_fat.c **** *                           includes the root directory).
5085:rtos/uC-FS/FAT/fs_fat.c **** *
5086:rtos/uC-FS/FAT/fs_fat.c **** *                       (3) (a) The total number of clusters in the volume is equal to the total nu
5087:rtos/uC-FS/FAT/fs_fat.c **** *                               of data sectors divided by the number of clusters per sector :
5088:rtos/uC-FS/FAT/fs_fat.c **** *
5089:rtos/uC-FS/FAT/fs_fat.c **** *                                                             Number of Data Sectors
5090:rtos/uC-FS/FAT/fs_fat.c **** *                                   Number of Clusters = -------------------------------
5091:rtos/uC-FS/FAT/fs_fat.c **** *                                                         Number of Clusters per Sector
5092:rtos/uC-FS/FAT/fs_fat.c **** *
5093:rtos/uC-FS/FAT/fs_fat.c **** *                           (b) Since clusters 0 & 1 do not exist, the highest cluster number is
5094:rtos/uC-FS/FAT/fs_fat.c **** *                               'Number of Clusters' + 1.
5095:rtos/uC-FS/FAT/fs_fat.c **** *
5096:rtos/uC-FS/FAT/fs_fat.c **** *                   (d) (1) Four areas of a FAT12/16 file system exist :
5097:rtos/uC-FS/FAT/fs_fat.c **** *
5098:rtos/uC-FS/FAT/fs_fat.c **** *                           (a) The reserved area.            -------------------------------------
5099:rtos/uC-FS/FAT/fs_fat.c **** *                           (b) The FAT      area.            | Rsvd |   FAT 1   |   FAT 2   | Root
5100:rtos/uC-FS/FAT/fs_fat.c **** *                           (c) The root     directory.       | Area |   Area    |   Area    | Dir 
5101:rtos/uC-FS/FAT/fs_fat.c **** *                           (d) The data     area.            -------------------------------------
5102:rtos/uC-FS/FAT/fs_fat.c **** *                                                                    ^           ^           ^     
5103:rtos/uC-FS/FAT/fs_fat.c **** *                                                                    |           |           |     
ARM GAS  /tmp/ccazZ5Hl.s 			page 91


5104:rtos/uC-FS/FAT/fs_fat.c **** *                                                                    |           |           |     
5105:rtos/uC-FS/FAT/fs_fat.c **** *                                                 'FS_FAT_DATA.FAT1_Start'       |           |     
5106:rtos/uC-FS/FAT/fs_fat.c **** *                                                                                |           |     
5107:rtos/uC-FS/FAT/fs_fat.c **** *                                                             'FS_FAT_DATA.FAT2_Start'       |   'F
5108:rtos/uC-FS/FAT/fs_fat.c **** *                                                                                            |     
5109:rtos/uC-FS/FAT/fs_fat.c **** *                                                                     'FS_FAT_DATA.RootDirStart'
5110:rtos/uC-FS/FAT/fs_fat.c **** *
5111:rtos/uC-FS/FAT/fs_fat.c **** *                       (2) Three areas of a FAT32 file system exist :
5112:rtos/uC-FS/FAT/fs_fat.c **** *
5113:rtos/uC-FS/FAT/fs_fat.c **** *                           (a) The reserved area.            -------------------------------------
5114:rtos/uC-FS/FAT/fs_fat.c **** *                           (b) The FAT      area.            | Rsvd |   FAT 1   |   FAT 2   |     
5115:rtos/uC-FS/FAT/fs_fat.c **** *                           (c) The data     area.            | Area |   Area    |   Area    |     
5116:rtos/uC-FS/FAT/fs_fat.c **** *                                                             -------------------------------------
5117:rtos/uC-FS/FAT/fs_fat.c **** *                                                                    ^           ^           ^
5118:rtos/uC-FS/FAT/fs_fat.c **** *                                                                    |           |           |
5119:rtos/uC-FS/FAT/fs_fat.c **** *                                                                    |           |           |
5120:rtos/uC-FS/FAT/fs_fat.c **** *                                                 'FS_FAT_DATA.FAT1_Start'       |        'FS_FAT_D
5121:rtos/uC-FS/FAT/fs_fat.c **** *                                                                                |               @ 
5122:rtos/uC-FS/FAT/fs_fat.c **** *                                                             'FS_FAT_DATA.FAT2_Start'
5123:rtos/uC-FS/FAT/fs_fat.c **** *
5124:rtos/uC-FS/FAT/fs_fat.c **** *                           Unlike FAT12/16, the root directory is in cluster(s) within the data ar
5125:rtos/uC-FS/FAT/fs_fat.c **** *
5126:rtos/uC-FS/FAT/fs_fat.c **** *                       (3) Up to three sectors of the reserved area may be used :
5127:rtos/uC-FS/FAT/fs_fat.c **** *
5128:rtos/uC-FS/FAT/fs_fat.c **** *                           (1) THE BOOT SECTOR.  This sector, the sector 0 of the volume, contains
5129:rtos/uC-FS/FAT/fs_fat.c **** *                               information about the format, size & layout of the file system.
5130:rtos/uC-FS/FAT/fs_fat.c **** *
5131:rtos/uC-FS/FAT/fs_fat.c **** *                           (2) THE BACKUP BOOT SECTOR.  This sector, typically sector 1 of the vol
5132:rtos/uC-FS/FAT/fs_fat.c **** *                               contains a backup copy of the boot sector.  The backup boot sector 
5133:rtos/uC-FS/FAT/fs_fat.c **** *                               NOT used on FAT12/16 volumes.
5134:rtos/uC-FS/FAT/fs_fat.c **** *
5135:rtos/uC-FS/FAT/fs_fat.c **** *                           (3) THE FSINFO SECTOR.  This sector, typically sector 6 of the volume, 
5136:rtos/uC-FS/FAT/fs_fat.c **** *                               be used to help the file system suite more quickly access the volum
5137:rtos/uC-FS/FAT/fs_fat.c **** *                               The FSINFO sector is NOT used on FAT12/16 volumes.
5138:rtos/uC-FS/FAT/fs_fat.c **** *
5139:rtos/uC-FS/FAT/fs_fat.c **** *               (3) The 'ClusSize_octet' value is stored temporarily in a 32-bit variable to protec
5140:rtos/uC-FS/FAT/fs_fat.c **** *                   against 16-bit overflow.  However, according to Microsoft's FAT specification, 
5141:rtos/uC-FS/FAT/fs_fat.c **** *                   legitimate values fit within the range of 16-bit unsigned integers.
5142:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
5143:rtos/uC-FS/FAT/fs_fat.c **** */
5144:rtos/uC-FS/FAT/fs_fat.c **** 
5145:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_ChkBootSec (FS_FAT_DATA  *p_fat_data,
5146:rtos/uC-FS/FAT/fs_fat.c ****                                  CPU_INT08U   *p_temp_08,
5147:rtos/uC-FS/FAT/fs_fat.c ****                                  FS_ERR       *p_err)
5148:rtos/uC-FS/FAT/fs_fat.c **** {
5149:rtos/uC-FS/FAT/fs_fat.c ****     FS_SEC_SIZE      clus_size_octet;
5150:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  clus_cnt;
5151:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  clus_cnt_max_fat;
5152:rtos/uC-FS/FAT/fs_fat.c **** 
5153:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR   fat_size;
5154:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U       root_cnt;
5155:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U       vol_size;
5156:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT32_EN == DEF_ENABLED)
5157:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  clus_nbr;
5158:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U       sec_nbr;
5159:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN      valid;
5160:rtos/uC-FS/FAT/fs_fat.c **** #endif
ARM GAS  /tmp/ccazZ5Hl.s 			page 92


5161:rtos/uC-FS/FAT/fs_fat.c **** 
5162:rtos/uC-FS/FAT/fs_fat.c **** 
5163:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------------- RD BOOT SET PAR
5164:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->SecSize = (FS_SEC_SIZE)MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB_OF
5165:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->SecSize) {
5166:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
5167:rtos/uC-FS/FAT/fs_fat.c ****         case 1024u:
5168:rtos/uC-FS/FAT/fs_fat.c ****         case 2048u:
5169:rtos/uC-FS/FAT/fs_fat.c ****         case 4096u:
5170:rtos/uC-FS/FAT/fs_fat.c ****              p_fat_data->SecSizeLog2 = FSUtil_Log2(p_fat_data->SecSize);
5171:rtos/uC-FS/FAT/fs_fat.c ****              break;
5172:rtos/uC-FS/FAT/fs_fat.c **** 
5173:rtos/uC-FS/FAT/fs_fat.c ****         default:
5174:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid bytes/sec: %d\r\n", p_fat_data->SecSize));
5175:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
5176:rtos/uC-FS/FAT/fs_fat.c ****              return;
5177:rtos/uC-FS/FAT/fs_fat.c ****     }
5178:rtos/uC-FS/FAT/fs_fat.c **** 
5179:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->ClusSize_sec = (FS_FAT_SEC_NBR)MEM_VAL_GET_INT08U_LITTLE((void *)(p_temp_08 + FS_FA
5180:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->ClusSize_sec) {
5181:rtos/uC-FS/FAT/fs_fat.c ****         case 1u:
5182:rtos/uC-FS/FAT/fs_fat.c ****         case 2u:
5183:rtos/uC-FS/FAT/fs_fat.c ****         case 4u:
5184:rtos/uC-FS/FAT/fs_fat.c ****         case 8u:
5185:rtos/uC-FS/FAT/fs_fat.c ****         case 16u:
5186:rtos/uC-FS/FAT/fs_fat.c ****         case 32u:
5187:rtos/uC-FS/FAT/fs_fat.c ****         case 64u:
5188:rtos/uC-FS/FAT/fs_fat.c ****         case 128u:
5189:rtos/uC-FS/FAT/fs_fat.c ****              p_fat_data->ClusSizeLog2_sec = FSUtil_Log2((CPU_INT32U)p_fat_data->ClusSize_sec);
5190:rtos/uC-FS/FAT/fs_fat.c ****              break;
5191:rtos/uC-FS/FAT/fs_fat.c **** 
5192:rtos/uC-FS/FAT/fs_fat.c ****         default:
5193:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid secs/clus: %d\n", p_fat_data->ClusSize_sec
5194:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
5195:rtos/uC-FS/FAT/fs_fat.c ****              return;
5196:rtos/uC-FS/FAT/fs_fat.c ****     }
5197:rtos/uC-FS/FAT/fs_fat.c **** 
5198:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Note #3.                    
5199:rtos/uC-FS/FAT/fs_fat.c ****     clus_size_octet = p_fat_data->SecSize << p_fat_data->ClusSizeLog2_sec;
5200:rtos/uC-FS/FAT/fs_fat.c ****     switch (clus_size_octet) {
5201:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
5202:rtos/uC-FS/FAT/fs_fat.c ****         case 1024u:
5203:rtos/uC-FS/FAT/fs_fat.c ****         case 2048u:
5204:rtos/uC-FS/FAT/fs_fat.c ****         case 4096u:
5205:rtos/uC-FS/FAT/fs_fat.c ****         case 8192u:
5206:rtos/uC-FS/FAT/fs_fat.c ****         case 16384u:
5207:rtos/uC-FS/FAT/fs_fat.c ****         case 32768u:
5208:rtos/uC-FS/FAT/fs_fat.c ****         case 65536u:
5209:rtos/uC-FS/FAT/fs_fat.c ****              p_fat_data->ClusSize_octet     = clus_size_octet;
5210:rtos/uC-FS/FAT/fs_fat.c ****              p_fat_data->ClusSizeLog2_octet = FSUtil_Log2(clus_size_octet);
5211:rtos/uC-FS/FAT/fs_fat.c ****              break;
5212:rtos/uC-FS/FAT/fs_fat.c **** 
5213:rtos/uC-FS/FAT/fs_fat.c ****         default:
5214:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid bytes/clus: %d\n", clus_size_octet));
5215:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
5216:rtos/uC-FS/FAT/fs_fat.c ****              return;
5217:rtos/uC-FS/FAT/fs_fat.c ****     }
ARM GAS  /tmp/ccazZ5Hl.s 			page 93


5218:rtos/uC-FS/FAT/fs_fat.c **** 
5219:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->NbrFATs = MEM_VAL_GET_INT08U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB_OFF_NUMFATS));
5220:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->NbrFATs) {
5221:rtos/uC-FS/FAT/fs_fat.c ****         case 1:
5222:rtos/uC-FS/FAT/fs_fat.c ****         case 2:
5223:rtos/uC-FS/FAT/fs_fat.c ****              break;
5224:rtos/uC-FS/FAT/fs_fat.c **** 
5225:rtos/uC-FS/FAT/fs_fat.c ****         default:
5226:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid nbr FATs: %d\n", p_fat_data->NbrFATs));
5227:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
5228:rtos/uC-FS/FAT/fs_fat.c ****              return;
5229:rtos/uC-FS/FAT/fs_fat.c ****     }
5230:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Size of reserved area.          
5231:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->RsvdSize    = (FS_FAT_SEC_NBR)MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp_08 + FS_FAT
5232:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT1_Start  =  p_fat_data->RsvdSize;            /* Sec nbr of 1st FAT.             
5233:rtos/uC-FS/FAT/fs_fat.c **** 
5234:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Size of each FAT.               
5235:rtos/uC-FS/FAT/fs_fat.c ****     fat_size                = (FS_FAT_SEC_NBR)MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp_08 + FS_FAT
5236:rtos/uC-FS/FAT/fs_fat.c ****     if (fat_size           ==  0u) {
5237:rtos/uC-FS/FAT/fs_fat.c ****         fat_size            = (FS_FAT_SEC_NBR)MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp_08 + FS_FAT
5238:rtos/uC-FS/FAT/fs_fat.c ****     }
5239:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT_Size    =  fat_size;
5240:rtos/uC-FS/FAT/fs_fat.c **** 
5241:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Size of root dir (see Notes #2b)
5242:rtos/uC-FS/FAT/fs_fat.c ****     root_cnt                =  MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB_OFF_ROOTEN
5243:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->RootDirSize =  FS_UTIL_DIV_PWR2((((FS_FAT_SEC_NBR)root_cnt * 32u) + ((FS_FAT_SEC_NB
5244:rtos/uC-FS/FAT/fs_fat.c **** 
5245:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Sec nbr's of 2nd FAT, root dir, 
5246:rtos/uC-FS/FAT/fs_fat.c ****     if (p_fat_data->NbrFATs      == 2u) {
5247:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT2_Start   =  p_fat_data->RsvdSize +  p_fat_data->FAT_Size;
5248:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->RootDirStart =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 2u);
5249:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->DataStart    =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 2u) + p_fat_data
5250:rtos/uC-FS/FAT/fs_fat.c ****     } else {
5251:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT2_Start   =  0u;
5252:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->RootDirStart =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 1u);
5253:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->DataStart    =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 1u) + p_fat_data
5254:rtos/uC-FS/FAT/fs_fat.c ****     }
5255:rtos/uC-FS/FAT/fs_fat.c **** 
5256:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Size of vol (see Notes #2a).    
5257:rtos/uC-FS/FAT/fs_fat.c ****     vol_size                = (CPU_INT32U)MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB
5258:rtos/uC-FS/FAT/fs_fat.c ****     if (vol_size           == 0u) {
5259:rtos/uC-FS/FAT/fs_fat.c ****         vol_size            = MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB_OFF_TOTSEC3
5260:rtos/uC-FS/FAT/fs_fat.c ****     }
5261:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->VolSize     = vol_size;
5262:rtos/uC-FS/FAT/fs_fat.c **** 
5263:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Size of data area (see Notes #2c
5264:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->DataSize    = (p_fat_data->VolSize - (p_fat_data->RsvdSize + ((FS_FAT_SEC_NBR)p_fat
5265:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->NextClusNbr =  2u;                              /* Next clus to alloc.             
5266:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Notes #2c3.                 
5267:rtos/uC-FS/FAT/fs_fat.c ****     clus_cnt                =  (FS_FAT_CLUS_NBR)FS_UTIL_DIV_PWR2(p_fat_data->DataSize, p_fat_data->
5268:rtos/uC-FS/FAT/fs_fat.c **** 
5269:rtos/uC-FS/FAT/fs_fat.c **** 
5270:rtos/uC-FS/FAT/fs_fat.c **** 
5271:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------------- CHK FAT12 
5272:rtos/uC-FS/FAT/fs_fat.c ****     if (clus_cnt                   <=  FS_FAT_MAX_NBR_CLUS_FAT12) {
5273:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT12_EN == DEF_ENABLED)
5274:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_Type        =  FS_FAT_FAT_TYPE_FAT12;
ARM GAS  /tmp/ccazZ5Hl.s 			page 94


5275:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr = &FS_FAT_FAT12_API;
5276:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_max_fat            = ((FS_FAT_CLUS_NBR)p_fat_data->FAT_Size * (FS_FAT_CLUS_NBR)p_f
5277:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      =  DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + F
5278:rtos/uC-FS/FAT/fs_fat.c **** #else
5279:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid file sys: FAT12\n"));
5280:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_INVALID_SYS;
5281:rtos/uC-FS/FAT/fs_fat.c ****         return;
5282:rtos/uC-FS/FAT/fs_fat.c **** #endif
5283:rtos/uC-FS/FAT/fs_fat.c **** 
5284:rtos/uC-FS/FAT/fs_fat.c **** 
5285:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------------- CHK FAT16 
5286:rtos/uC-FS/FAT/fs_fat.c ****     } else if (clus_cnt            <=  FS_FAT_MAX_NBR_CLUS_FAT16) {
5287:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT16_EN == DEF_ENABLED)
5288:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_Type        =  FS_FAT_FAT_TYPE_FAT16;
5289:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr = &FS_FAT_FAT16_API;
5290:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_max_fat            = (FS_FAT_CLUS_NBR)p_fat_data->FAT_Size * ((FS_FAT_CLUS_NBR)p_f
5291:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      =  DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + F
5292:rtos/uC-FS/FAT/fs_fat.c **** #else
5293:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid file sys: FAT16\n"));
5294:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_INVALID_SYS;
5295:rtos/uC-FS/FAT/fs_fat.c ****         return;
5296:rtos/uC-FS/FAT/fs_fat.c **** #endif
5297:rtos/uC-FS/FAT/fs_fat.c **** 
5298:rtos/uC-FS/FAT/fs_fat.c **** 
5299:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* --------------------- CHK FAT32 
5300:rtos/uC-FS/FAT/fs_fat.c ****     } else {
5301:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT32_EN == DEF_ENABLED)
5302:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_Type        =  FS_FAT_FAT_TYPE_FAT32;
5303:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr = &FS_FAT_FAT32_API;
5304:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_max_fat            = (FS_FAT_CLUS_NBR)p_fat_data->FAT_Size * ((FS_FAT_CLUS_NBR)p_f
5305:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      = DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + FS
5306:rtos/uC-FS/FAT/fs_fat.c **** 
5307:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Get root dir clus nbr.          
5308:rtos/uC-FS/FAT/fs_fat.c ****         clus_nbr                    = MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB_FAT
5309:rtos/uC-FS/FAT/fs_fat.c ****         valid                       = FS_FAT_IS_VALID_CLUS(p_fat_data, clus_nbr);
5310:rtos/uC-FS/FAT/fs_fat.c ****         if (valid == DEF_NO) {
5311:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid FAT32 root dir clus: %d\n", clus_nbr));
5312:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SYS;
5313:rtos/uC-FS/FAT/fs_fat.c ****             return;
5314:rtos/uC-FS/FAT/fs_fat.c ****         }
5315:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->RootDirStart     = FS_FAT_CLUS_TO_SEC(p_fat_data, clus_nbr);
5316:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Get FSINFO sec nbr.             
5317:rtos/uC-FS/FAT/fs_fat.c ****         sec_nbr                      = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB_FA
5318:rtos/uC-FS/FAT/fs_fat.c ****         if (sec_nbr != 0u) {
5319:rtos/uC-FS/FAT/fs_fat.c ****             p_fat_data->FS_InfoStart = (FS_FAT_SEC_NBR)sec_nbr;
5320:rtos/uC-FS/FAT/fs_fat.c ****         }
5321:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Get BKBOOT sec nbr.             
5322:rtos/uC-FS/FAT/fs_fat.c ****         sec_nbr                      = MEM_VAL_GET_INT16U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB_FA
5323:rtos/uC-FS/FAT/fs_fat.c ****         if (sec_nbr != 0u) {
5324:rtos/uC-FS/FAT/fs_fat.c ****             p_fat_data->BPB_BkStart  = (FS_FAT_SEC_NBR)sec_nbr;
5325:rtos/uC-FS/FAT/fs_fat.c ****         }
5326:rtos/uC-FS/FAT/fs_fat.c **** #else
5327:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid file sys: FAT32\n"));
5328:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_INVALID_SYS;
5329:rtos/uC-FS/FAT/fs_fat.c ****         return;
5330:rtos/uC-FS/FAT/fs_fat.c **** #endif
5331:rtos/uC-FS/FAT/fs_fat.c ****     }
ARM GAS  /tmp/ccazZ5Hl.s 			page 95


5332:rtos/uC-FS/FAT/fs_fat.c **** 
5333:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
5334:rtos/uC-FS/FAT/fs_fat.c **** }
5335:rtos/uC-FS/FAT/fs_fat.c **** 
5336:rtos/uC-FS/FAT/fs_fat.c **** 
5337:rtos/uC-FS/FAT/fs_fat.c **** /*
5338:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
5339:rtos/uC-FS/FAT/fs_fat.c **** *                                           FS_FAT_ChkDir()
5340:rtos/uC-FS/FAT/fs_fat.c **** *
5341:rtos/uC-FS/FAT/fs_fat.c **** * Description : Check a directory on a file system.
5342:rtos/uC-FS/FAT/fs_fat.c **** *
5343:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol           Pointer to volume.
5344:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
5345:rtos/uC-FS/FAT/fs_fat.c **** *
5346:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data    Pointer to FAT entry data.
5347:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
5348:rtos/uC-FS/FAT/fs_fat.c **** *
5349:rtos/uC-FS/FAT/fs_fat.c **** *               p_err           Pointer to variable that will receive the return error code from th
5350:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
5351:rtos/uC-FS/FAT/fs_fat.c **** *
5352:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NONE              Directory checked successfully.
5353:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_BUF_NONE_AVAIL    No buffers available.
5354:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV               Device error.
5355:rtos/uC-FS/FAT/fs_fat.c **** *
5356:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
5357:rtos/uC-FS/FAT/fs_fat.c **** *
5358:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) A directory is a special type of file.  Consequently, it must abide certain rul
5359:rtos/uC-FS/FAT/fs_fat.c **** *                   common to all files :
5360:rtos/uC-FS/FAT/fs_fat.c **** *
5361:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) The size in the directory entry should be valid.  For a directory, the size
5362:rtos/uC-FS/FAT/fs_fat.c **** *                       always be zero.
5363:rtos/uC-FS/FAT/fs_fat.c **** *
5364:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) The cluster number in the directory entry should be valid or zero.
5365:rtos/uC-FS/FAT/fs_fat.c **** *
5366:rtos/uC-FS/FAT/fs_fat.c **** *                   (c) The date/times in the directory entry should be valid or zero; however, thi
5367:rtos/uC-FS/FAT/fs_fat.c **** *                       not checked.
5368:rtos/uC-FS/FAT/fs_fat.c **** *
5369:rtos/uC-FS/FAT/fs_fat.c **** *               (2) If an invalid cluster is linked to a directory, the last will be made EOF.
5370:rtos/uC-FS/FAT/fs_fat.c **** *
5371:rtos/uC-FS/FAT/fs_fat.c **** *               (3) If empty clusters are linked to a directory, the extra (unoccupied) clusters wi
5372:rtos/uC-FS/FAT/fs_fat.c **** *                   be freed to release wasted volume space.
5373:rtos/uC-FS/FAT/fs_fat.c **** *
5374:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) #### Free clusters.
5375:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
5376:rtos/uC-FS/FAT/fs_fat.c **** */
5377:rtos/uC-FS/FAT/fs_fat.c **** 
5378:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_VOL_CHK_EN == DEF_ENABLED)
5379:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_ChkDir (FS_VOL            *p_vol,
5380:rtos/uC-FS/FAT/fs_fat.c ****                              FS_FAT_FILE_DATA  *p_entry_data,
5381:rtos/uC-FS/FAT/fs_fat.c ****                              FS_ERR            *p_err)
5382:rtos/uC-FS/FAT/fs_fat.c **** {
5383:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       end_of_dir;
5384:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   dir_clus;
5385:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   dir_clus_next;
5386:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   dir_clus_cnt_max;
5387:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   dir_clus_cnt;
5388:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_LFN_MODULE_PRESENT
ARM GAS  /tmp/ccazZ5Hl.s 			page 96


5389:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    dir_sec;
5390:rtos/uC-FS/FAT/fs_fat.c **** #endif
5391:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       valid;
5392:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF           *p_buf;
5393:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
5394:rtos/uC-FS/FAT/fs_fat.c **** 
5395:rtos/uC-FS/FAT/fs_fat.c **** 
5396:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ PREPARE FOR C
5397:rtos/uC-FS/FAT/fs_fat.c ****     p_buf = FSBuf_Get(p_vol);                                   /* Get buf.                        
5398:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
5399:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
5400:rtos/uC-FS/FAT/fs_fat.c ****         return;
5401:rtos/uC-FS/FAT/fs_fat.c ****     }
5402:rtos/uC-FS/FAT/fs_fat.c **** 
5403:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
5404:rtos/uC-FS/FAT/fs_fat.c **** 
5405:rtos/uC-FS/FAT/fs_fat.c **** 
5406:rtos/uC-FS/FAT/fs_fat.c **** 
5407:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ CHK CLUS VALI
5408:rtos/uC-FS/FAT/fs_fat.c ****     valid      = FS_FAT_IS_VALID_CLUS(p_fat_data, p_entry_data->FileFirstClus);
5409:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {                                      /* If clus not valid ...           
5410:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_INFO(("FS_FAT_ChkDir(): Dir clus nbr invalid.\r\n"));
5411:rtos/uC-FS/FAT/fs_fat.c **** 
5412:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... clr clus nbr & file size in 
5413:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
5414:rtos/uC-FS/FAT/fs_fat.c ****         p_entry_data->FileFirstClus = 0u;
5415:rtos/uC-FS/FAT/fs_fat.c ****         p_entry_data->FileSize      = 0u;
5416:rtos/uC-FS/FAT/fs_fat.c **** 
5417:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_LowEntryUpdate(p_vol,
5418:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf,
5419:rtos/uC-FS/FAT/fs_fat.c ****                               p_entry_data,
5420:rtos/uC-FS/FAT/fs_fat.c ****                               DEF_YES,
5421:rtos/uC-FS/FAT/fs_fat.c ****                               p_err);
5422:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Flush(p_buf, p_err);
5423:rtos/uC-FS/FAT/fs_fat.c **** #endif
5424:rtos/uC-FS/FAT/fs_fat.c **** 
5425:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
5426:rtos/uC-FS/FAT/fs_fat.c ****         return;
5427:rtos/uC-FS/FAT/fs_fat.c ****     }
5428:rtos/uC-FS/FAT/fs_fat.c **** 
5429:rtos/uC-FS/FAT/fs_fat.c **** 
5430:rtos/uC-FS/FAT/fs_fat.c **** 
5431:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ CHK CLUS CHAI
5432:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Chk clus chain.                 
5433:rtos/uC-FS/FAT/fs_fat.c ****     dir_clus_cnt_max = p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR;
5434:rtos/uC-FS/FAT/fs_fat.c ****     dir_clus_cnt     = 0u;
5435:rtos/uC-FS/FAT/fs_fat.c ****     dir_clus         = p_entry_data->FileFirstClus;
5436:rtos/uC-FS/FAT/fs_fat.c ****     end_of_dir       = DEF_NO;
5437:rtos/uC-FS/FAT/fs_fat.c ****     while ((dir_clus_cnt <  dir_clus_cnt_max) &&                /* While max clus's have not been e
5438:rtos/uC-FS/FAT/fs_fat.c ****            (end_of_dir   == DEF_NO)) {                          /* ... & dir end not found         
5439:rtos/uC-FS/FAT/fs_fat.c **** 
5440:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... follow dir clus chain.      
5441:rtos/uC-FS/FAT/fs_fat.c ****         dir_clus_next = FS_FAT_ClusNextGet(p_vol,
5442:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
5443:rtos/uC-FS/FAT/fs_fat.c ****                                            dir_clus,
5444:rtos/uC-FS/FAT/fs_fat.c ****                                            p_err);
5445:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 97


5446:rtos/uC-FS/FAT/fs_fat.c ****         switch (*p_err) {
5447:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_NONE:                                   /* If valid clus found ...         
5448:rtos/uC-FS/FAT/fs_fat.c ****                  dir_clus_cnt++;                                /* ... follow chain.               
5449:rtos/uC-FS/FAT/fs_fat.c ****                  dir_clus = dir_clus_next;
5450:rtos/uC-FS/FAT/fs_fat.c ****                  break;
5451:rtos/uC-FS/FAT/fs_fat.c **** 
5452:rtos/uC-FS/FAT/fs_fat.c **** 
5453:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_SYS_CLUS_CHAIN_END:
5454:rtos/uC-FS/FAT/fs_fat.c ****                  dir_clus_cnt++;
5455:rtos/uC-FS/FAT/fs_fat.c ****                  end_of_dir = DEF_YES;
5456:rtos/uC-FS/FAT/fs_fat.c ****                  break;
5457:rtos/uC-FS/FAT/fs_fat.c **** 
5458:rtos/uC-FS/FAT/fs_fat.c **** 
5459:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_SYS_CLUS_INVALID:                       /* If invalid clus found ...       
5460:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_INFO(("FS_FAT_ChkDir(): Invalid clus linked to chain.\r\n"));
5461:rtos/uC-FS/FAT/fs_fat.c **** 
5462:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
5463:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... replace clus with EOF.      
5464:rtos/uC-FS/FAT/fs_fat.c ****                  (void)FS_FAT_ClusChainDel(p_vol,               /* #### UCFS-372                   
5465:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
5466:rtos/uC-FS/FAT/fs_fat.c ****                                            dir_clus,
5467:rtos/uC-FS/FAT/fs_fat.c ****                                            DEF_YES,
5468:rtos/uC-FS/FAT/fs_fat.c ****                                            p_err);
5469:rtos/uC-FS/FAT/fs_fat.c ****                  if (*p_err != FS_ERR_NONE) {
5470:rtos/uC-FS/FAT/fs_fat.c ****                      FSBuf_Free(p_buf);
5471:rtos/uC-FS/FAT/fs_fat.c ****                      return;
5472:rtos/uC-FS/FAT/fs_fat.c ****                  }
5473:rtos/uC-FS/FAT/fs_fat.c **** #endif
5474:rtos/uC-FS/FAT/fs_fat.c ****                  end_of_dir = DEF_YES;
5475:rtos/uC-FS/FAT/fs_fat.c ****                  break;
5476:rtos/uC-FS/FAT/fs_fat.c **** 
5477:rtos/uC-FS/FAT/fs_fat.c **** 
5478:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_DEV:
5479:rtos/uC-FS/FAT/fs_fat.c ****             default:
5480:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
5481:rtos/uC-FS/FAT/fs_fat.c ****                  return;
5482:rtos/uC-FS/FAT/fs_fat.c **** 
5483:rtos/uC-FS/FAT/fs_fat.c ****         }
5484:rtos/uC-FS/FAT/fs_fat.c ****     }
5485:rtos/uC-FS/FAT/fs_fat.c **** 
5486:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_INFO)
5487:rtos/uC-FS/FAT/fs_fat.c ****     if (end_of_dir == DEF_NO) {                                 /* If EOF not found ...            
5488:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_INFO(("FS_FAT_ChkDir(): No EOF in dir.\r\n"));
5489:rtos/uC-FS/FAT/fs_fat.c ****     }
5490:rtos/uC-FS/FAT/fs_fat.c **** #endif
5491:rtos/uC-FS/FAT/fs_fat.c **** 
5492:rtos/uC-FS/FAT/fs_fat.c **** 
5493:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_LFN_MODULE_PRESENT
5494:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ----------- CHK FOR ORPHANED LFN
5495:rtos/uC-FS/FAT/fs_fat.c ****     dir_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, p_entry_data->FileFirstClus);
5496:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_LFN_DirChk(p_vol,
5497:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf,
5498:rtos/uC-FS/FAT/fs_fat.c ****                       dir_sec,
5499:rtos/uC-FS/FAT/fs_fat.c ****                       p_err);
5500:rtos/uC-FS/FAT/fs_fat.c **** #endif
5501:rtos/uC-FS/FAT/fs_fat.c **** 
5502:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 98


5503:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Free(p_buf);
5504:rtos/uC-FS/FAT/fs_fat.c **** }
5505:rtos/uC-FS/FAT/fs_fat.c **** #endif
5506:rtos/uC-FS/FAT/fs_fat.c **** 
5507:rtos/uC-FS/FAT/fs_fat.c **** 
5508:rtos/uC-FS/FAT/fs_fat.c **** /*
5509:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
5510:rtos/uC-FS/FAT/fs_fat.c **** *                                          FS_FAT_ChkFile()
5511:rtos/uC-FS/FAT/fs_fat.c **** *
5512:rtos/uC-FS/FAT/fs_fat.c **** * Description : Check a file on a file system.
5513:rtos/uC-FS/FAT/fs_fat.c **** *
5514:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol           Pointer to volume.
5515:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
5516:rtos/uC-FS/FAT/fs_fat.c **** *
5517:rtos/uC-FS/FAT/fs_fat.c **** *               p_entry_data    Pointer to FAT file information.
5518:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
5519:rtos/uC-FS/FAT/fs_fat.c **** *
5520:rtos/uC-FS/FAT/fs_fat.c **** *               p_err           Pointer to variable that will receive the return error code from th
5521:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
5522:rtos/uC-FS/FAT/fs_fat.c **** *
5523:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_NONE              File checked successfully.
5524:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_BUF_NONE_AVAIL    No buffers available.
5525:rtos/uC-FS/FAT/fs_fat.c **** *                                   FS_ERR_DEV               Device error.
5526:rtos/uC-FS/FAT/fs_fat.c **** *
5527:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
5528:rtos/uC-FS/FAT/fs_fat.c **** *
5529:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) All files must abide certain rules :
5530:rtos/uC-FS/FAT/fs_fat.c **** *
5531:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) The size in the directory entry should be valid.
5532:rtos/uC-FS/FAT/fs_fat.c **** *
5533:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) The cluster number in the directory entry should be valid or zero.  If the 
5534:rtos/uC-FS/FAT/fs_fat.c **** *                       is non-zero, the cluster number MUST be valid.
5535:rtos/uC-FS/FAT/fs_fat.c **** *                       (1) If the cluster number is invalid, the cluster number & size in the dire
5536:rtos/uC-FS/FAT/fs_fat.c **** *                           entry will be cleared.
5537:rtos/uC-FS/FAT/fs_fat.c **** *
5538:rtos/uC-FS/FAT/fs_fat.c **** *                   (c) The date/times in the directory entry should be valid or zero; however, thi
5539:rtos/uC-FS/FAT/fs_fat.c **** *                       not checked.
5540:rtos/uC-FS/FAT/fs_fat.c **** *
5541:rtos/uC-FS/FAT/fs_fat.c **** *                   (e) The number of clusters linked to the directory MUST be sufficient to accomm
5542:rtos/uC-FS/FAT/fs_fat.c **** *                       the file size.  The directory is valid if more clusters are linked.
5543:rtos/uC-FS/FAT/fs_fat.c **** *
5544:rtos/uC-FS/FAT/fs_fat.c **** *               (2) If an invalid cluster is linked to a file, the last will be made EOF.  If neces
5545:rtos/uC-FS/FAT/fs_fat.c **** *                   the file size will also be adjusted.
5546:rtos/uC-FS/FAT/fs_fat.c **** *
5547:rtos/uC-FS/FAT/fs_fat.c **** *               (3) If too few clusters are linked to a file, the file size will be adjusted.
5548:rtos/uC-FS/FAT/fs_fat.c **** *
5549:rtos/uC-FS/FAT/fs_fat.c **** *               (4) If too many clusters are linked to a file, the extra (unoccupied) clusters will
5550:rtos/uC-FS/FAT/fs_fat.c **** *                   freed to release wasted volume space.
5551:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
5552:rtos/uC-FS/FAT/fs_fat.c **** */
5553:rtos/uC-FS/FAT/fs_fat.c **** 
5554:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_VOL_CHK_EN == DEF_ENABLED)
5555:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_ChkFile (FS_VOL            *p_vol,
5556:rtos/uC-FS/FAT/fs_fat.c ****                               FS_FAT_FILE_DATA  *p_entry_data,
5557:rtos/uC-FS/FAT/fs_fat.c ****                               FS_ERR            *p_err)
5558:rtos/uC-FS/FAT/fs_fat.c **** {
5559:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        end_of_file;
ARM GAS  /tmp/ccazZ5Hl.s 			page 99


5560:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    file_clus;
5561:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    file_clus_next;
5562:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FILE_SIZE   file_size;
5563:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    file_clus_tot;
5564:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    file_clus_cnt;
5565:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        valid;
5566:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF            *p_buf;
5567:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA       *p_fat_data;
5568:rtos/uC-FS/FAT/fs_fat.c **** 
5569:rtos/uC-FS/FAT/fs_fat.c **** 
5570:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ PREPARE FOR C
5571:rtos/uC-FS/FAT/fs_fat.c ****     p_buf = FSBuf_Get(p_vol);                                   /* Get buf.                        
5572:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
5573:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
5574:rtos/uC-FS/FAT/fs_fat.c ****         return;
5575:rtos/uC-FS/FAT/fs_fat.c ****     }
5576:rtos/uC-FS/FAT/fs_fat.c **** 
5577:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data = (FS_FAT_DATA *)p_vol->DataPtr;
5578:rtos/uC-FS/FAT/fs_fat.c **** 
5579:rtos/uC-FS/FAT/fs_fat.c **** 
5580:rtos/uC-FS/FAT/fs_fat.c **** 
5581:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ CHK CLUS VALI
5582:rtos/uC-FS/FAT/fs_fat.c ****     valid      = FS_FAT_IS_VALID_CLUS(p_fat_data, p_entry_data->FileFirstClus);
5583:rtos/uC-FS/FAT/fs_fat.c ****     if ((valid == DEF_NO) && (p_entry_data->FileFirstClus != 0u)) {     /* If clus not valid ...   
5584:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_INFO(("FS_FAT_ChkFile(): File clus nbr invalid.\r\n"));
5585:rtos/uC-FS/FAT/fs_fat.c **** 
5586:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... clr clus nbr & file size in 
5587:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
5588:rtos/uC-FS/FAT/fs_fat.c ****         p_entry_data->FileFirstClus = 0u;
5589:rtos/uC-FS/FAT/fs_fat.c ****         p_entry_data->FileSize      = 0u;
5590:rtos/uC-FS/FAT/fs_fat.c **** 
5591:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_LowEntryUpdate(p_vol,
5592:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf,
5593:rtos/uC-FS/FAT/fs_fat.c ****                               p_entry_data,
5594:rtos/uC-FS/FAT/fs_fat.c ****                               DEF_YES,
5595:rtos/uC-FS/FAT/fs_fat.c ****                               p_err);
5596:rtos/uC-FS/FAT/fs_fat.c **** 
5597:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Flush(p_buf, p_err);
5598:rtos/uC-FS/FAT/fs_fat.c **** #endif
5599:rtos/uC-FS/FAT/fs_fat.c **** 
5600:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
5601:rtos/uC-FS/FAT/fs_fat.c ****         return;
5602:rtos/uC-FS/FAT/fs_fat.c ****     }
5603:rtos/uC-FS/FAT/fs_fat.c **** 
5604:rtos/uC-FS/FAT/fs_fat.c **** 
5605:rtos/uC-FS/FAT/fs_fat.c **** 
5606:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ---------------- CHK CLUS CHAIN 
5607:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Chk clus chain len.             
5608:rtos/uC-FS/FAT/fs_fat.c **** 
5609:rtos/uC-FS/FAT/fs_fat.c ****     file_size     = p_entry_data->FileSize;
5610:rtos/uC-FS/FAT/fs_fat.c ****     file_clus_tot = FS_UTIL_DIV_PWR2(file_size, p_fat_data->ClusSizeLog2_octet);
5611:rtos/uC-FS/FAT/fs_fat.c ****     if ((file_size & (p_fat_data->ClusSize_octet - 1u)) != 0u) {
5612:rtos/uC-FS/FAT/fs_fat.c ****         file_clus_tot++;
5613:rtos/uC-FS/FAT/fs_fat.c ****     }
5614:rtos/uC-FS/FAT/fs_fat.c **** 
5615:rtos/uC-FS/FAT/fs_fat.c ****     file_clus_cnt = 0u;
5616:rtos/uC-FS/FAT/fs_fat.c ****     file_clus     = p_entry_data->FileFirstClus;
ARM GAS  /tmp/ccazZ5Hl.s 			page 100


5617:rtos/uC-FS/FAT/fs_fat.c ****     end_of_file   = DEF_NO;
5618:rtos/uC-FS/FAT/fs_fat.c ****     while ((file_clus_cnt <  file_clus_tot) &&                  /* While not all clus's have been e
5619:rtos/uC-FS/FAT/fs_fat.c ****            (end_of_file   == DEF_NO)) {                         /* ... & file end not found        
5620:rtos/uC-FS/FAT/fs_fat.c **** 
5621:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... follow file clus chain.     
5622:rtos/uC-FS/FAT/fs_fat.c ****         file_clus_next = FS_FAT_ClusNextGet(p_vol,
5623:rtos/uC-FS/FAT/fs_fat.c ****                                             p_buf,
5624:rtos/uC-FS/FAT/fs_fat.c ****                                             file_clus,
5625:rtos/uC-FS/FAT/fs_fat.c ****                                             p_err);
5626:rtos/uC-FS/FAT/fs_fat.c **** 
5627:rtos/uC-FS/FAT/fs_fat.c ****         switch (*p_err) {
5628:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_NONE:                                   /* If valid clus found ...         
5629:rtos/uC-FS/FAT/fs_fat.c ****                  file_clus_cnt++;                               /* ... follow chain.               
5630:rtos/uC-FS/FAT/fs_fat.c ****                  file_clus = file_clus_next;
5631:rtos/uC-FS/FAT/fs_fat.c ****                  break;
5632:rtos/uC-FS/FAT/fs_fat.c **** 
5633:rtos/uC-FS/FAT/fs_fat.c **** 
5634:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_SYS_CLUS_CHAIN_END:
5635:rtos/uC-FS/FAT/fs_fat.c ****                  file_clus_cnt++;
5636:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* If EOF before all clus's followe
5637:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
5638:rtos/uC-FS/FAT/fs_fat.c ****                  if (file_clus_cnt != file_clus_tot) {
5639:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_INFO(("FS_FAT_ChkFile(): Insufficient clusters (%d < %d) linked to fi
5640:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... correct file size.          
5641:rtos/uC-FS/FAT/fs_fat.c **** 
5642:rtos/uC-FS/FAT/fs_fat.c ****                      p_entry_data->FileSize = file_clus_cnt * p_fat_data->ClusSize_octet;
5643:rtos/uC-FS/FAT/fs_fat.c **** 
5644:rtos/uC-FS/FAT/fs_fat.c ****                      FS_FAT_LowEntryUpdate(p_vol,
5645:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
5646:rtos/uC-FS/FAT/fs_fat.c ****                                            p_entry_data,
5647:rtos/uC-FS/FAT/fs_fat.c ****                                            DEF_YES,
5648:rtos/uC-FS/FAT/fs_fat.c ****                                            p_err);
5649:rtos/uC-FS/FAT/fs_fat.c ****                      if (*p_err != FS_ERR_NONE) {
5650:rtos/uC-FS/FAT/fs_fat.c ****                          break;
5651:rtos/uC-FS/FAT/fs_fat.c ****                      }
5652:rtos/uC-FS/FAT/fs_fat.c **** 
5653:rtos/uC-FS/FAT/fs_fat.c ****                  }
5654:rtos/uC-FS/FAT/fs_fat.c **** #else
5655:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_INFO)
5656:rtos/uC-FS/FAT/fs_fat.c ****                  if (file_clus_cnt != file_clus_tot) {
5657:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_INFO(("FS_FAT_ChkFile(): Insufficient clusters (%d < %d) linked to fi
5658:rtos/uC-FS/FAT/fs_fat.c ****                  }
5659:rtos/uC-FS/FAT/fs_fat.c **** #endif
5660:rtos/uC-FS/FAT/fs_fat.c **** #endif
5661:rtos/uC-FS/FAT/fs_fat.c **** 
5662:rtos/uC-FS/FAT/fs_fat.c ****                  end_of_file = DEF_YES;
5663:rtos/uC-FS/FAT/fs_fat.c ****                  break;
5664:rtos/uC-FS/FAT/fs_fat.c **** 
5665:rtos/uC-FS/FAT/fs_fat.c **** 
5666:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_SYS_CLUS_INVALID:                       /* If invalid clus found     ...   
5667:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_INFO(("FS_FAT_ChkFile(): Invalid clus linked to chain.\r\n"));
5668:rtos/uC-FS/FAT/fs_fat.c **** 
5669:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
5670:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... replace clus with EOF ...   
5671:rtos/uC-FS/FAT/fs_fat.c ****                 (void)FS_FAT_ClusChainDel(p_vol,                /* #### UCFS-372                   
5672:rtos/uC-FS/FAT/fs_fat.c ****                                           p_buf,
5673:rtos/uC-FS/FAT/fs_fat.c ****                                           file_clus,
ARM GAS  /tmp/ccazZ5Hl.s 			page 101


5674:rtos/uC-FS/FAT/fs_fat.c ****                                           DEF_YES,
5675:rtos/uC-FS/FAT/fs_fat.c ****                                           p_err);
5676:rtos/uC-FS/FAT/fs_fat.c ****                  if (*p_err != FS_ERR_NONE) {
5677:rtos/uC-FS/FAT/fs_fat.c ****                       break;
5678:rtos/uC-FS/FAT/fs_fat.c ****                  }
5679:rtos/uC-FS/FAT/fs_fat.c **** 
5680:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... & correct file size.        
5681:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileSize = file_clus_cnt * p_fat_data->ClusSize_octet;
5682:rtos/uC-FS/FAT/fs_fat.c **** 
5683:rtos/uC-FS/FAT/fs_fat.c ****                  FS_FAT_LowEntryUpdate(p_vol,
5684:rtos/uC-FS/FAT/fs_fat.c ****                                        p_buf,
5685:rtos/uC-FS/FAT/fs_fat.c ****                                        p_entry_data,
5686:rtos/uC-FS/FAT/fs_fat.c ****                                        DEF_YES,
5687:rtos/uC-FS/FAT/fs_fat.c ****                                        p_err);
5688:rtos/uC-FS/FAT/fs_fat.c **** #endif
5689:rtos/uC-FS/FAT/fs_fat.c ****                  end_of_file = DEF_YES;
5690:rtos/uC-FS/FAT/fs_fat.c ****                  break;
5691:rtos/uC-FS/FAT/fs_fat.c **** 
5692:rtos/uC-FS/FAT/fs_fat.c **** 
5693:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_DEV:
5694:rtos/uC-FS/FAT/fs_fat.c ****             default:
5695:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
5696:rtos/uC-FS/FAT/fs_fat.c ****                  return;
5697:rtos/uC-FS/FAT/fs_fat.c **** 
5698:rtos/uC-FS/FAT/fs_fat.c ****         }
5699:rtos/uC-FS/FAT/fs_fat.c ****     }
5700:rtos/uC-FS/FAT/fs_fat.c **** 
5701:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_INFO)
5702:rtos/uC-FS/FAT/fs_fat.c ****     if (end_of_file == DEF_NO) {                                /* If EOF not found, too many clus'
5703:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_INFO(("FS_FAT_ChkFile(): Extra clusters linked to file.\r\n"));
5704:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... #### del extra clus's.      
5705:rtos/uC-FS/FAT/fs_fat.c ****     }
5706:rtos/uC-FS/FAT/fs_fat.c **** #endif
5707:rtos/uC-FS/FAT/fs_fat.c **** 
5708:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Flush(p_buf, p_err);
5709:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Free(p_buf);
5710:rtos/uC-FS/FAT/fs_fat.c **** }
5711:rtos/uC-FS/FAT/fs_fat.c **** #endif
5712:rtos/uC-FS/FAT/fs_fat.c **** 
5713:rtos/uC-FS/FAT/fs_fat.c **** 
5714:rtos/uC-FS/FAT/fs_fat.c **** /*
5715:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
5716:rtos/uC-FS/FAT/fs_fat.c **** *                                         FS_FAT_GetSysCfg()
5717:rtos/uC-FS/FAT/fs_fat.c **** *
5718:rtos/uC-FS/FAT/fs_fat.c **** * Description : Get format configuration.
5719:rtos/uC-FS/FAT/fs_fat.c **** *
5720:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : sec_size    Sector size, in octets.
5721:rtos/uC-FS/FAT/fs_fat.c **** *               --------    Argument validated by caller.
5722:rtos/uC-FS/FAT/fs_fat.c **** *
5723:rtos/uC-FS/FAT/fs_fat.c **** *               size        Size of device, in sectors.
5724:rtos/uC-FS/FAT/fs_fat.c **** *               ----        Argument validated by caller.
5725:rtos/uC-FS/FAT/fs_fat.c **** *
5726:rtos/uC-FS/FAT/fs_fat.c **** *               p_sys_cfg   Pointer to FAT configuration that will receive configuration parameters
5727:rtos/uC-FS/FAT/fs_fat.c **** *               ---------   Argument validated by caller.
5728:rtos/uC-FS/FAT/fs_fat.c **** *
5729:rtos/uC-FS/FAT/fs_fat.c **** *               p_err       Pointer to variable that will receive the return error code from this f
5730:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
ARM GAS  /tmp/ccazZ5Hl.s 			page 102


5731:rtos/uC-FS/FAT/fs_fat.c **** *
5732:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_NONE               Format configuration found.
5733:rtos/uC-FS/FAT/fs_fat.c **** *                               FS_ERR_VOL_INVALID_SYS    Invalid volume for file system.
5734:rtos/uC-FS/FAT/fs_fat.c **** *
5735:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
5736:rtos/uC-FS/FAT/fs_fat.c **** *
5737:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) $$$$ Verify information in FAT tables.
5738:rtos/uC-FS/FAT/fs_fat.c **** *
5739:rtos/uC-FS/FAT/fs_fat.c **** *               (2) See 'FS_FAT_VolFmt() Note #2'.
5740:rtos/uC-FS/FAT/fs_fat.c **** *
5741:rtos/uC-FS/FAT/fs_fat.c **** *               (3) A device with a large number of sectors & a large sector size may not be FAT-
5742:rtos/uC-FS/FAT/fs_fat.c **** *                   formattable.  In this case, an invalid bytes-per-cluster value will be computed
5743:rtos/uC-FS/FAT/fs_fat.c **** *                   an invalid bytes-per-cluster value is computed, then an error is returned, sinc
5744:rtos/uC-FS/FAT/fs_fat.c **** *                   may signal an error in a hardware driver.  If it these are legitimate parameter
5745:rtos/uC-FS/FAT/fs_fat.c **** *                   then the volume should be formatted with a reduced number of data sectors.
5746:rtos/uC-FS/FAT/fs_fat.c **** *
5747:rtos/uC-FS/FAT/fs_fat.c **** *                   (a) $$$$ Allow user to specify reduced number of data sectors.
5748:rtos/uC-FS/FAT/fs_fat.c **** *
5749:rtos/uC-FS/FAT/fs_fat.c **** *               (4) A valid FAT table entry should always be found; however, the sectors per cluste
5750:rtos/uC-FS/FAT/fs_fat.c **** *                   value is checked in case the code or structures are incorrectly modified.
5751:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
5752:rtos/uC-FS/FAT/fs_fat.c **** */
5753:rtos/uC-FS/FAT/fs_fat.c **** 
5754:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
5755:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_GetSysCfg  (FS_SEC_SIZE      sec_size,
5756:rtos/uC-FS/FAT/fs_fat.c ****                                  FS_SEC_QTY       size,
5757:rtos/uC-FS/FAT/fs_fat.c ****                                  FS_FAT_SYS_CFG  *p_sys_cfg,
5758:rtos/uC-FS/FAT/fs_fat.c ****                                  FS_ERR          *p_err)
5759:rtos/uC-FS/FAT/fs_fat.c **** {
  29              		.loc 1 5759 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
5760:rtos/uC-FS/FAT/fs_fat.c ****            FS_SEC_SIZE        clus_size_octet;
  34              		.loc 1 5760 12 view .LVU1
5761:rtos/uC-FS/FAT/fs_fat.c ****            CPU_BOOLEAN        found;
  35              		.loc 1 5761 12 view .LVU2
5762:rtos/uC-FS/FAT/fs_fat.c ****            FS_FAT_SEC_NBR     size_sec;
  36              		.loc 1 5762 12 view .LVU3
5763:rtos/uC-FS/FAT/fs_fat.c ****            CPU_INT64U         size_octets;
  37              		.loc 1 5763 12 view .LVU4
5764:rtos/uC-FS/FAT/fs_fat.c ****     const  FS_FAT_TBL_ENTRY  *p_tbl_entry;
  38              		.loc 1 5764 5 view .LVU5
5765:rtos/uC-FS/FAT/fs_fat.c **** 
5766:rtos/uC-FS/FAT/fs_fat.c **** 
5767:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ VERIFY DEV IN
5768:rtos/uC-FS/FAT/fs_fat.c ****     switch (sec_size) {                                         /* Verify bytes per sec.           
  39              		.loc 1 5768 5 view .LVU6
  40 0000 B0F5006F 		cmp	r0, #2048
  41 0004 06D0     		beq	.L2
  42 0006 2CD8     		bhi	.L3
  43 0008 B0F5007F 		cmp	r0, #512
  44 000c 02D0     		beq	.L2
  45 000e B0F5806F 		cmp	r0, #1024
  46 0012 29D1     		bne	.L4
  47              	.L2:
ARM GAS  /tmp/ccazZ5Hl.s 			page 103


5759:rtos/uC-FS/FAT/fs_fat.c ****            FS_SEC_SIZE        clus_size_octet;
  48              		.loc 1 5759 1 is_stmt 0 view .LVU7
  49 0014 F0B4     		push	{r4, r5, r6, r7}
  50              	.LCFI0:
  51              		.cfi_def_cfa_offset 16
  52              		.cfi_offset 4, -16
  53              		.cfi_offset 5, -12
  54              		.cfi_offset 6, -8
  55              		.cfi_offset 7, -4
5769:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
5770:rtos/uC-FS/FAT/fs_fat.c ****         case 1024u:
5771:rtos/uC-FS/FAT/fs_fat.c ****         case 2048u:
5772:rtos/uC-FS/FAT/fs_fat.c ****         case 4096u:
5773:rtos/uC-FS/FAT/fs_fat.c ****              break;
  56              		.loc 1 5773 14 is_stmt 1 view .LVU8
5774:rtos/uC-FS/FAT/fs_fat.c **** 
5775:rtos/uC-FS/FAT/fs_fat.c **** 
5776:rtos/uC-FS/FAT/fs_fat.c ****         default:
5777:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_DBG(("FS_FAT_GetSysCfg(): Invalid sec size: %d.\n", sec_size));
5778:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
5779:rtos/uC-FS/FAT/fs_fat.c ****              return;
5780:rtos/uC-FS/FAT/fs_fat.c ****     }
5781:rtos/uC-FS/FAT/fs_fat.c ****     found = DEF_NO;
  57              		.loc 1 5781 5 view .LVU9
  58              	.LVL1:
5782:rtos/uC-FS/FAT/fs_fat.c **** 
5783:rtos/uC-FS/FAT/fs_fat.c ****     size_sec = (FS_FAT_SEC_NBR)size;
  59              		.loc 1 5783 5 view .LVU10
5784:rtos/uC-FS/FAT/fs_fat.c **** 
5785:rtos/uC-FS/FAT/fs_fat.c ****     size_octets = (CPU_INT64U)size_sec * (CPU_INT64U)sec_size;
  60              		.loc 1 5785 5 view .LVU11
  61              		.loc 1 5785 17 is_stmt 0 view .LVU12
  62 0016 A1FB0067 		umull	r6, r7, r1, r0
  63              	.LVL2:
5786:rtos/uC-FS/FAT/fs_fat.c **** 
5787:rtos/uC-FS/FAT/fs_fat.c **** 
5788:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- CHK IF FAT32
5789:rtos/uC-FS/FAT/fs_fat.c ****     if (size_octets > FS_FAT_MAX_SIZE_FAT16) {                  /* This CAN be FAT32 ... get clus s
  64              		.loc 1 5789 5 is_stmt 1 view .LVU13
  65              		.loc 1 5789 8 is_stmt 0 view .LVU14
  66 001a 4FF00054 		mov	r4, #536870912
  67 001e 0025     		movs	r5, #0
  68 0020 BD42     		cmp	r5, r7
  69 0022 08BF     		it	eq
  70 0024 B442     		cmpeq	r4, r6
  71 0026 23D3     		bcc	.L22
  72              	.L7:
  73              	.LVL3:
5790:rtos/uC-FS/FAT/fs_fat.c ****         p_tbl_entry = &FS_FAT_TblFAT32[0];
5791:rtos/uC-FS/FAT/fs_fat.c ****         while ((size_sec > p_tbl_entry->VolSize) && (p_tbl_entry->VolSize != 0u)) {
5792:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
5793:rtos/uC-FS/FAT/fs_fat.c ****         }
5794:rtos/uC-FS/FAT/fs_fat.c ****         if (p_tbl_entry->ClusSize != 0u) {                      /* Rtn err if sec per clus zero (se
5795:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->FAT_Type        =             FS_FAT_FAT_TYPE_FAT32;
5796:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT32;
5797:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT32;
5798:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->ClusSize        = (FS_SEC_QTY)p_tbl_entry->ClusSize;
ARM GAS  /tmp/ccazZ5Hl.s 			page 104


5799:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->NbrFATs         =             2u;
5800:rtos/uC-FS/FAT/fs_fat.c ****             found                      =             DEF_YES;
5801:rtos/uC-FS/FAT/fs_fat.c ****         }
5802:rtos/uC-FS/FAT/fs_fat.c ****     }
5803:rtos/uC-FS/FAT/fs_fat.c **** 
5804:rtos/uC-FS/FAT/fs_fat.c **** 
5805:rtos/uC-FS/FAT/fs_fat.c **** 
5806:rtos/uC-FS/FAT/fs_fat.c ****     if (found == DEF_NO) {                                      /* ------------------- CHK IF FAT16
5807:rtos/uC-FS/FAT/fs_fat.c ****         if (size_octets > FS_FAT_MAX_SIZE_FAT12) {              /* This CAN be FAT16 ... get clus s
  74              		.loc 1 5807 9 is_stmt 1 view .LVU15
  75              		.loc 1 5807 12 is_stmt 0 view .LVU16
  76 0028 3B4C     		ldr	r4, .L30
  77 002a 0025     		movs	r5, #0
  78 002c BD42     		cmp	r5, r7
  79 002e 08BF     		it	eq
  80 0030 B442     		cmpeq	r4, r6
  81 0032 46D3     		bcc	.L23
  82 0034 0024     		movs	r4, #0
  83              	.LVL4:
  84              	.L10:
5808:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry = &FS_FAT_TblFAT16[0];
5809:rtos/uC-FS/FAT/fs_fat.c ****             while ((size_sec > p_tbl_entry->VolSize) && (p_tbl_entry->VolSize != 0u)) {
5810:rtos/uC-FS/FAT/fs_fat.c ****                 p_tbl_entry++;
5811:rtos/uC-FS/FAT/fs_fat.c ****             }
5812:rtos/uC-FS/FAT/fs_fat.c ****             if (p_tbl_entry->ClusSize != 0u) {                  /* Rtn err if sec per clus zero (se
5813:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->FAT_Type        =             FS_FAT_FAT_TYPE_FAT16;
5814:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT16;
5815:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT16;
5816:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->ClusSize        = (FS_SEC_QTY)p_tbl_entry->ClusSize;
5817:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->NbrFATs         =             2u;
5818:rtos/uC-FS/FAT/fs_fat.c ****                 found                      =             DEF_YES;
5819:rtos/uC-FS/FAT/fs_fat.c ****             }
5820:rtos/uC-FS/FAT/fs_fat.c ****         }
5821:rtos/uC-FS/FAT/fs_fat.c ****     }
5822:rtos/uC-FS/FAT/fs_fat.c **** 
5823:rtos/uC-FS/FAT/fs_fat.c **** 
5824:rtos/uC-FS/FAT/fs_fat.c **** 
5825:rtos/uC-FS/FAT/fs_fat.c ****     if (found == DEF_NO) {                                      /* ------------------- CHK IF FAT12
  85              		.loc 1 5825 5 is_stmt 1 view .LVU17
  86              		.loc 1 5825 8 is_stmt 0 view .LVU18
  87 0036 002C     		cmp	r4, #0
  88 0038 47D0     		beq	.L25
  89              	.LVL5:
  90              	.L14:
5826:rtos/uC-FS/FAT/fs_fat.c ****         p_tbl_entry = &FS_FAT_TblFAT12[0];
5827:rtos/uC-FS/FAT/fs_fat.c ****         while ((size_sec > p_tbl_entry->VolSize) && (p_tbl_entry->VolSize != 0u)) {
5828:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
5829:rtos/uC-FS/FAT/fs_fat.c ****         }
5830:rtos/uC-FS/FAT/fs_fat.c ****         if (p_tbl_entry->ClusSize == 0u) {                  /* Rtn err if sec per clus zero (see No
5831:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_GetSysCfg(): No fmt cfg found.\r\n"));
5832:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SYS;
5833:rtos/uC-FS/FAT/fs_fat.c ****             return;
5834:rtos/uC-FS/FAT/fs_fat.c ****         }
5835:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->FAT_Type        =             FS_FAT_FAT_TYPE_FAT12;
5836:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT12;
5837:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT12;
5838:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->ClusSize        = (FS_SEC_QTY)p_tbl_entry->ClusSize;
ARM GAS  /tmp/ccazZ5Hl.s 			page 105


5839:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->NbrFATs         =             2u;
5840:rtos/uC-FS/FAT/fs_fat.c ****     }
5841:rtos/uC-FS/FAT/fs_fat.c **** 
5842:rtos/uC-FS/FAT/fs_fat.c **** 
5843:rtos/uC-FS/FAT/fs_fat.c **** 
5844:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------- CHK DISK CFG
5845:rtos/uC-FS/FAT/fs_fat.c ****     clus_size_octet = (FS_SEC_SIZE)p_sys_cfg->ClusSize * sec_size;
  91              		.loc 1 5845 5 is_stmt 1 view .LVU19
  92              		.loc 1 5845 45 is_stmt 0 view .LVU20
  93 003a 1268     		ldr	r2, [r2]
  94              	.LVL6:
  95              		.loc 1 5845 21 view .LVU21
  96 003c 00FB02F0 		mul	r0, r0, r2
  97              	.LVL7:
5846:rtos/uC-FS/FAT/fs_fat.c ****     switch (clus_size_octet) {                                  /* Verify bytes per clus (see Note 
  98              		.loc 1 5846 5 is_stmt 1 view .LVU22
  99 0040 B0F5805F 		cmp	r0, #4096
 100 0044 63D0     		beq	.L19
 101 0046 59D8     		bhi	.L20
 102 0048 B0F5806F 		cmp	r0, #1024
 103 004c 5FD0     		beq	.L19
 104 004e B0F5006F 		cmp	r0, #2048
 105 0052 5CD0     		beq	.L19
 106 0054 B0F5007F 		cmp	r0, #512
 107 0058 59D0     		beq	.L19
 108              	.L21:
5847:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
5848:rtos/uC-FS/FAT/fs_fat.c ****         case 1024u:
5849:rtos/uC-FS/FAT/fs_fat.c ****         case 2048u:
5850:rtos/uC-FS/FAT/fs_fat.c ****         case 4096u:
5851:rtos/uC-FS/FAT/fs_fat.c ****         case 8192u:
5852:rtos/uC-FS/FAT/fs_fat.c ****         case 16384u:
5853:rtos/uC-FS/FAT/fs_fat.c ****         case 32768u:
5854:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_NONE;
5855:rtos/uC-FS/FAT/fs_fat.c ****              break;
5856:rtos/uC-FS/FAT/fs_fat.c **** 
5857:rtos/uC-FS/FAT/fs_fat.c **** 
5858:rtos/uC-FS/FAT/fs_fat.c ****         default:
5859:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_DBG(("FS_FAT_GetSysCfg(): Invalid bytes/clus: %d.\r\n", p_sys_cfg->ClusSize *
 109              		.loc 1 5859 111 view .LVU23
5860:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
 110              		.loc 1 5860 13 view .LVU24
 111              		.loc 1 5860 20 is_stmt 0 view .LVU25
 112 005a 40F27F52 		movw	r2, #1407
 113 005e 1A80     		strh	r2, [r3]	@ movhi
5861:rtos/uC-FS/FAT/fs_fat.c ****              return;
 114              		.loc 1 5861 14 is_stmt 1 view .LVU26
 115 0060 57E0     		b	.L1
 116              	.LVL8:
 117              	.L3:
 118              	.LCFI1:
 119              		.cfi_def_cfa_offset 0
 120              		.cfi_restore 4
 121              		.cfi_restore 5
 122              		.cfi_restore 6
 123              		.cfi_restore 7
5768:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
ARM GAS  /tmp/ccazZ5Hl.s 			page 106


 124              		.loc 1 5768 5 is_stmt 0 view .LVU27
 125 0062 B0F5805F 		cmp	r0, #4096
 126 0066 D5D0     		beq	.L2
 127              	.L4:
5777:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
 128              		.loc 1 5777 85 is_stmt 1 view .LVU28
5778:rtos/uC-FS/FAT/fs_fat.c ****              return;
 129              		.loc 1 5778 13 view .LVU29
5778:rtos/uC-FS/FAT/fs_fat.c ****              return;
 130              		.loc 1 5778 20 is_stmt 0 view .LVU30
 131 0068 40F27F52 		movw	r2, #1407
 132              	.LVL9:
5778:rtos/uC-FS/FAT/fs_fat.c ****              return;
 133              		.loc 1 5778 20 view .LVU31
 134 006c 1A80     		strh	r2, [r3]	@ movhi
5779:rtos/uC-FS/FAT/fs_fat.c ****     }
 135              		.loc 1 5779 14 is_stmt 1 view .LVU32
 136 006e 7047     		bx	lr
 137              	.LVL10:
 138              	.L22:
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 4, -16
 142              		.cfi_offset 5, -12
 143              		.cfi_offset 6, -8
 144              		.cfi_offset 7, -4
5790:rtos/uC-FS/FAT/fs_fat.c ****         while ((size_sec > p_tbl_entry->VolSize) && (p_tbl_entry->VolSize != 0u)) {
 145              		.loc 1 5790 21 is_stmt 0 view .LVU33
 146 0070 2A4C     		ldr	r4, .L30+4
 147              	.L6:
 148              	.LVL11:
5791:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
 149              		.loc 1 5791 15 is_stmt 1 view .LVU34
5791:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
 150              		.loc 1 5791 39 is_stmt 0 view .LVU35
 151 0072 2568     		ldr	r5, [r4]
5791:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
 152              		.loc 1 5791 15 view .LVU36
 153 0074 8D42     		cmp	r5, r1
 154 0076 02D2     		bcs	.L8
5791:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
 155              		.loc 1 5791 50 discriminator 1 view .LVU37
 156 0078 0DB1     		cbz	r5, .L8
5792:rtos/uC-FS/FAT/fs_fat.c ****         }
 157              		.loc 1 5792 13 is_stmt 1 view .LVU38
5792:rtos/uC-FS/FAT/fs_fat.c ****         }
 158              		.loc 1 5792 24 is_stmt 0 view .LVU39
 159 007a 0834     		adds	r4, r4, #8
 160              	.LVL12:
5792:rtos/uC-FS/FAT/fs_fat.c ****         }
 161              		.loc 1 5792 24 view .LVU40
 162 007c F9E7     		b	.L6
 163              	.L8:
5794:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->FAT_Type        =             FS_FAT_FAT_TYPE_FAT32;
 164              		.loc 1 5794 9 is_stmt 1 view .LVU41
5794:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->FAT_Type        =             FS_FAT_FAT_TYPE_FAT32;
 165              		.loc 1 5794 24 is_stmt 0 view .LVU42
ARM GAS  /tmp/ccazZ5Hl.s 			page 107


 166 007e 6568     		ldr	r5, [r4, #4]
5794:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->FAT_Type        =             FS_FAT_FAT_TYPE_FAT32;
 167              		.loc 1 5794 12 view .LVU43
 168 0080 002D     		cmp	r5, #0
 169 0082 D1D0     		beq	.L7
5795:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT32;
 170              		.loc 1 5795 13 is_stmt 1 view .LVU44
5795:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT32;
 171              		.loc 1 5795 40 is_stmt 0 view .LVU45
 172 0084 2025     		movs	r5, #32
 173 0086 9572     		strb	r5, [r2, #10]
5796:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT32;
 174              		.loc 1 5796 13 is_stmt 1 view .LVU46
5796:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT32;
 175              		.loc 1 5796 40 is_stmt 0 view .LVU47
 176 0088 0026     		movs	r6, #0
 177              	.LVL13:
5796:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT32;
 178              		.loc 1 5796 40 view .LVU48
 179 008a 1681     		strh	r6, [r2, #8]	@ movhi
5797:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->ClusSize        = (FS_SEC_QTY)p_tbl_entry->ClusSize;
 180              		.loc 1 5797 13 is_stmt 1 view .LVU49
5797:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->ClusSize        = (FS_SEC_QTY)p_tbl_entry->ClusSize;
 181              		.loc 1 5797 40 is_stmt 0 view .LVU50
 182 008c 5560     		str	r5, [r2, #4]
5798:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->NbrFATs         =             2u;
 183              		.loc 1 5798 13 is_stmt 1 view .LVU51
5798:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->NbrFATs         =             2u;
 184              		.loc 1 5798 65 is_stmt 0 view .LVU52
 185 008e 6468     		ldr	r4, [r4, #4]
 186              	.LVL14:
5798:rtos/uC-FS/FAT/fs_fat.c ****             p_sys_cfg->NbrFATs         =             2u;
 187              		.loc 1 5798 40 view .LVU53
 188 0090 1460     		str	r4, [r2]
5799:rtos/uC-FS/FAT/fs_fat.c ****             found                      =             DEF_YES;
 189              		.loc 1 5799 13 is_stmt 1 view .LVU54
5799:rtos/uC-FS/FAT/fs_fat.c ****             found                      =             DEF_YES;
 190              		.loc 1 5799 40 is_stmt 0 view .LVU55
 191 0092 0224     		movs	r4, #2
 192 0094 D472     		strb	r4, [r2, #11]
5800:rtos/uC-FS/FAT/fs_fat.c ****         }
 193              		.loc 1 5800 13 is_stmt 1 view .LVU56
 194              	.LVL15:
5806:rtos/uC-FS/FAT/fs_fat.c ****         if (size_octets > FS_FAT_MAX_SIZE_FAT12) {              /* This CAN be FAT16 ... get clus s
 195              		.loc 1 5806 5 view .LVU57
5800:rtos/uC-FS/FAT/fs_fat.c ****         }
 196              		.loc 1 5800 40 is_stmt 0 view .LVU58
 197 0096 0124     		movs	r4, #1
 198 0098 CDE7     		b	.L10
 199              	.LVL16:
 200              	.L13:
5810:rtos/uC-FS/FAT/fs_fat.c ****             }
 201              		.loc 1 5810 17 is_stmt 1 view .LVU59
5810:rtos/uC-FS/FAT/fs_fat.c ****             }
 202              		.loc 1 5810 28 is_stmt 0 view .LVU60
 203 009a 0834     		adds	r4, r4, #8
 204              	.LVL17:
ARM GAS  /tmp/ccazZ5Hl.s 			page 108


 205              	.L11:
5809:rtos/uC-FS/FAT/fs_fat.c ****                 p_tbl_entry++;
 206              		.loc 1 5809 19 is_stmt 1 view .LVU61
5809:rtos/uC-FS/FAT/fs_fat.c ****                 p_tbl_entry++;
 207              		.loc 1 5809 43 is_stmt 0 view .LVU62
 208 009c 2568     		ldr	r5, [r4]
5809:rtos/uC-FS/FAT/fs_fat.c ****                 p_tbl_entry++;
 209              		.loc 1 5809 19 view .LVU63
 210 009e 8D42     		cmp	r5, r1
 211 00a0 01D2     		bcs	.L12
5809:rtos/uC-FS/FAT/fs_fat.c ****                 p_tbl_entry++;
 212              		.loc 1 5809 54 discriminator 1 view .LVU64
 213 00a2 002D     		cmp	r5, #0
 214 00a4 F9D1     		bne	.L13
 215              	.L12:
5812:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->FAT_Type        =             FS_FAT_FAT_TYPE_FAT16;
 216              		.loc 1 5812 13 is_stmt 1 view .LVU65
5812:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->FAT_Type        =             FS_FAT_FAT_TYPE_FAT16;
 217              		.loc 1 5812 28 is_stmt 0 view .LVU66
 218 00a6 6568     		ldr	r5, [r4, #4]
5812:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->FAT_Type        =             FS_FAT_FAT_TYPE_FAT16;
 219              		.loc 1 5812 16 view .LVU67
 220 00a8 6DB1     		cbz	r5, .L24
5813:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT16;
 221              		.loc 1 5813 17 is_stmt 1 view .LVU68
5813:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT16;
 222              		.loc 1 5813 44 is_stmt 0 view .LVU69
 223 00aa 1021     		movs	r1, #16
 224              	.LVL18:
5813:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT16;
 225              		.loc 1 5813 44 view .LVU70
 226 00ac 9172     		strb	r1, [r2, #10]
5814:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT16;
 227              		.loc 1 5814 17 is_stmt 1 view .LVU71
5814:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT16;
 228              		.loc 1 5814 44 is_stmt 0 view .LVU72
 229 00ae 4FF40071 		mov	r1, #512
 230 00b2 1181     		strh	r1, [r2, #8]	@ movhi
5815:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->ClusSize        = (FS_SEC_QTY)p_tbl_entry->ClusSize;
 231              		.loc 1 5815 17 is_stmt 1 view .LVU73
5815:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->ClusSize        = (FS_SEC_QTY)p_tbl_entry->ClusSize;
 232              		.loc 1 5815 44 is_stmt 0 view .LVU74
 233 00b4 0121     		movs	r1, #1
 234 00b6 5160     		str	r1, [r2, #4]
5816:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->NbrFATs         =             2u;
 235              		.loc 1 5816 17 is_stmt 1 view .LVU75
5816:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->NbrFATs         =             2u;
 236              		.loc 1 5816 69 is_stmt 0 view .LVU76
 237 00b8 6168     		ldr	r1, [r4, #4]
5816:rtos/uC-FS/FAT/fs_fat.c ****                 p_sys_cfg->NbrFATs         =             2u;
 238              		.loc 1 5816 44 view .LVU77
 239 00ba 1160     		str	r1, [r2]
5817:rtos/uC-FS/FAT/fs_fat.c ****                 found                      =             DEF_YES;
 240              		.loc 1 5817 17 is_stmt 1 view .LVU78
5817:rtos/uC-FS/FAT/fs_fat.c ****                 found                      =             DEF_YES;
 241              		.loc 1 5817 44 is_stmt 0 view .LVU79
 242 00bc 0221     		movs	r1, #2
ARM GAS  /tmp/ccazZ5Hl.s 			page 109


 243 00be D172     		strb	r1, [r2, #11]
5818:rtos/uC-FS/FAT/fs_fat.c ****             }
 244              		.loc 1 5818 17 is_stmt 1 view .LVU80
 245              	.LVL19:
5825:rtos/uC-FS/FAT/fs_fat.c ****         p_tbl_entry = &FS_FAT_TblFAT12[0];
 246              		.loc 1 5825 5 view .LVU81
 247 00c0 BBE7     		b	.L14
 248              	.LVL20:
 249              	.L23:
5808:rtos/uC-FS/FAT/fs_fat.c ****             while ((size_sec > p_tbl_entry->VolSize) && (p_tbl_entry->VolSize != 0u)) {
 250              		.loc 1 5808 25 is_stmt 0 view .LVU82
 251 00c2 174C     		ldr	r4, .L30+8
 252 00c4 EAE7     		b	.L11
 253              	.LVL21:
 254              	.L24:
5808:rtos/uC-FS/FAT/fs_fat.c ****             while ((size_sec > p_tbl_entry->VolSize) && (p_tbl_entry->VolSize != 0u)) {
 255              		.loc 1 5808 25 view .LVU83
 256 00c6 0024     		movs	r4, #0
 257              	.LVL22:
5808:rtos/uC-FS/FAT/fs_fat.c ****             while ((size_sec > p_tbl_entry->VolSize) && (p_tbl_entry->VolSize != 0u)) {
 258              		.loc 1 5808 25 view .LVU84
 259 00c8 B5E7     		b	.L10
 260              	.LVL23:
 261              	.L25:
5826:rtos/uC-FS/FAT/fs_fat.c ****         while ((size_sec > p_tbl_entry->VolSize) && (p_tbl_entry->VolSize != 0u)) {
 262              		.loc 1 5826 21 view .LVU85
 263 00ca 164C     		ldr	r4, .L30+12
 264              	.LVL24:
 265              	.L15:
5827:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
 266              		.loc 1 5827 15 is_stmt 1 view .LVU86
5827:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
 267              		.loc 1 5827 39 is_stmt 0 view .LVU87
 268 00cc 2568     		ldr	r5, [r4]
5827:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
 269              		.loc 1 5827 15 view .LVU88
 270 00ce 8D42     		cmp	r5, r1
 271 00d0 02D2     		bcs	.L16
5827:rtos/uC-FS/FAT/fs_fat.c ****             p_tbl_entry++;
 272              		.loc 1 5827 50 discriminator 1 view .LVU89
 273 00d2 0DB1     		cbz	r5, .L16
5828:rtos/uC-FS/FAT/fs_fat.c ****         }
 274              		.loc 1 5828 13 is_stmt 1 view .LVU90
5828:rtos/uC-FS/FAT/fs_fat.c ****         }
 275              		.loc 1 5828 24 is_stmt 0 view .LVU91
 276 00d4 0834     		adds	r4, r4, #8
 277              	.LVL25:
5828:rtos/uC-FS/FAT/fs_fat.c ****         }
 278              		.loc 1 5828 24 view .LVU92
 279 00d6 F9E7     		b	.L15
 280              	.L16:
5830:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_GetSysCfg(): No fmt cfg found.\r\n"));
 281              		.loc 1 5830 9 is_stmt 1 view .LVU93
5830:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_GetSysCfg(): No fmt cfg found.\r\n"));
 282              		.loc 1 5830 24 is_stmt 0 view .LVU94
 283 00d8 6168     		ldr	r1, [r4, #4]
 284              	.LVL26:
ARM GAS  /tmp/ccazZ5Hl.s 			page 110


5830:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_GetSysCfg(): No fmt cfg found.\r\n"));
 285              		.loc 1 5830 12 view .LVU95
 286 00da 59B1     		cbz	r1, .L29
5835:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT12;
 287              		.loc 1 5835 9 is_stmt 1 view .LVU96
5835:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->RootDirEntryCnt =             FS_FAT_DFLT_ROOT_ENT_CNT_FAT12;
 288              		.loc 1 5835 36 is_stmt 0 view .LVU97
 289 00dc 0C21     		movs	r1, #12
 290 00de 9172     		strb	r1, [r2, #10]
5836:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT12;
 291              		.loc 1 5836 9 is_stmt 1 view .LVU98
5836:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->RsvdAreaSize    =             FS_FAT_DFLT_RSVD_SEC_CNT_FAT12;
 292              		.loc 1 5836 36 is_stmt 0 view .LVU99
 293 00e0 4FF40071 		mov	r1, #512
 294 00e4 1181     		strh	r1, [r2, #8]	@ movhi
5837:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->ClusSize        = (FS_SEC_QTY)p_tbl_entry->ClusSize;
 295              		.loc 1 5837 9 is_stmt 1 view .LVU100
5837:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->ClusSize        = (FS_SEC_QTY)p_tbl_entry->ClusSize;
 296              		.loc 1 5837 36 is_stmt 0 view .LVU101
 297 00e6 0121     		movs	r1, #1
 298 00e8 5160     		str	r1, [r2, #4]
5838:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->NbrFATs         =             2u;
 299              		.loc 1 5838 9 is_stmt 1 view .LVU102
5838:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->NbrFATs         =             2u;
 300              		.loc 1 5838 61 is_stmt 0 view .LVU103
 301 00ea 6168     		ldr	r1, [r4, #4]
5838:rtos/uC-FS/FAT/fs_fat.c ****         p_sys_cfg->NbrFATs         =             2u;
 302              		.loc 1 5838 36 view .LVU104
 303 00ec 1160     		str	r1, [r2]
5839:rtos/uC-FS/FAT/fs_fat.c ****     }
 304              		.loc 1 5839 9 is_stmt 1 view .LVU105
5839:rtos/uC-FS/FAT/fs_fat.c ****     }
 305              		.loc 1 5839 36 is_stmt 0 view .LVU106
 306 00ee 0221     		movs	r1, #2
 307 00f0 D172     		strb	r1, [r2, #11]
 308 00f2 A2E7     		b	.L14
 309              	.L29:
5831:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SYS;
 310              		.loc 1 5831 72 is_stmt 1 view .LVU107
5832:rtos/uC-FS/FAT/fs_fat.c ****             return;
 311              		.loc 1 5832 12 view .LVU108
5832:rtos/uC-FS/FAT/fs_fat.c ****             return;
 312              		.loc 1 5832 19 is_stmt 0 view .LVU109
 313 00f4 40F27F52 		movw	r2, #1407
 314              	.LVL27:
5832:rtos/uC-FS/FAT/fs_fat.c ****             return;
 315              		.loc 1 5832 19 view .LVU110
 316 00f8 1A80     		strh	r2, [r3]	@ movhi
5833:rtos/uC-FS/FAT/fs_fat.c ****         }
 317              		.loc 1 5833 13 is_stmt 1 view .LVU111
 318 00fa 0AE0     		b	.L1
 319              	.LVL28:
 320              	.L20:
5846:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
 321              		.loc 1 5846 5 is_stmt 0 view .LVU112
 322 00fc B0F5804F 		cmp	r0, #16384
 323 0100 05D0     		beq	.L19
ARM GAS  /tmp/ccazZ5Hl.s 			page 111


 324 0102 B0F5004F 		cmp	r0, #32768
 325 0106 02D0     		beq	.L19
 326 0108 B0F5005F 		cmp	r0, #8192
 327 010c A5D1     		bne	.L21
 328              	.L19:
5854:rtos/uC-FS/FAT/fs_fat.c ****              break;
 329              		.loc 1 5854 13 is_stmt 1 view .LVU113
5854:rtos/uC-FS/FAT/fs_fat.c ****              break;
 330              		.loc 1 5854 20 is_stmt 0 view .LVU114
 331 010e 0022     		movs	r2, #0
 332 0110 1A80     		strh	r2, [r3]	@ movhi
5855:rtos/uC-FS/FAT/fs_fat.c **** 
 333              		.loc 1 5855 14 is_stmt 1 view .LVU115
 334              	.LVL29:
 335              	.L1:
5862:rtos/uC-FS/FAT/fs_fat.c ****     }
5863:rtos/uC-FS/FAT/fs_fat.c **** }
 336              		.loc 1 5863 1 is_stmt 0 view .LVU116
 337 0112 F0BC     		pop	{r4, r5, r6, r7}
 338              	.LCFI3:
 339              		.cfi_restore 7
 340              		.cfi_restore 6
 341              		.cfi_restore 5
 342              		.cfi_restore 4
 343              		.cfi_def_cfa_offset 0
 344 0114 7047     		bx	lr
 345              	.L31:
 346 0116 00BF     		.align	2
 347              	.L30:
 348 0118 400D4300 		.word	4394304
 349 011c 00000000 		.word	.LANCHOR0
 350 0120 00000000 		.word	.LANCHOR1
 351 0124 00000000 		.word	.LANCHOR2
 352              		.cfi_endproc
 353              	.LFE35:
 355              		.section	.text.FS_FAT_DataSrch,"ax",%progbits
 356              		.align	1
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	FS_FAT_DataSrch:
 363              	.LVL30:
 364              	.LFB36:
5864:rtos/uC-FS/FAT/fs_fat.c **** #endif
5865:rtos/uC-FS/FAT/fs_fat.c **** 
5866:rtos/uC-FS/FAT/fs_fat.c **** 
5867:rtos/uC-FS/FAT/fs_fat.c **** /*
5868:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
5869:rtos/uC-FS/FAT/fs_fat.c **** *                                          FS_FAT_DataSrch()
5870:rtos/uC-FS/FAT/fs_fat.c **** *
5871:rtos/uC-FS/FAT/fs_fat.c **** * Description : Search data area for find path.
5872:rtos/uC-FS/FAT/fs_fat.c **** *
5873:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_vol               Pointer to volume.
5874:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
5875:rtos/uC-FS/FAT/fs_fat.c **** *
5876:rtos/uC-FS/FAT/fs_fat.c **** *               p_buf               Pointer to temporary buffer.
ARM GAS  /tmp/ccazZ5Hl.s 			page 112


5877:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
5878:rtos/uC-FS/FAT/fs_fat.c **** *
5879:rtos/uC-FS/FAT/fs_fat.c **** *               name_entry          Name of the entry.
5880:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
5881:rtos/uC-FS/FAT/fs_fat.c **** *
5882:rtos/uC-FS/FAT/fs_fat.c **** *               p_dir_first_sec     Pointer to variable that will receive first sector of the direc
5883:rtos/uC-FS/FAT/fs_fat.c **** *                                   in which file was located.
5884:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
5885:rtos/uC-FS/FAT/fs_fat.c **** *
5886:rtos/uC-FS/FAT/fs_fat.c **** *               p_dir_start_pos     Pointer to variable that will receive the directory position at
5887:rtos/uC-FS/FAT/fs_fat.c **** *                                   the first entry is located.
5888:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
5889:rtos/uC-FS/FAT/fs_fat.c **** *
5890:rtos/uC-FS/FAT/fs_fat.c **** *               p_dir_end_pos       Pointer to variable that will receive the directory position at
5891:rtos/uC-FS/FAT/fs_fat.c **** *                                   the final entry is located.
5892:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
5893:rtos/uC-FS/FAT/fs_fat.c **** *
5894:rtos/uC-FS/FAT/fs_fat.c **** *               p_err               Pointer to variable that will receive the return error code fro
5895:rtos/uC-FS/FAT/fs_fat.c **** *               ----------          Argument validated by caller.
5896:rtos/uC-FS/FAT/fs_fat.c **** *
5897:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_NONE                      Path found.
5898:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_ENTRY_NOT_FOUND           File system entry NOT foun
5899:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_ENTRY_PARENT_NOT_FOUND    Entry parent NOT found.
5900:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_ENTRY_PARENT_NOT_DIR      Entry parent NOT a directo
5901:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_NAME_INVALID              Invalid file name or path.
5902:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_VOL_INVALID_SEC_NBR       Invalid sector number foun
5903:rtos/uC-FS/FAT/fs_fat.c **** *                                                                        entry.
5904:rtos/uC-FS/FAT/fs_fat.c **** *
5905:rtos/uC-FS/FAT/fs_fat.c **** *                                                                        --- RETURNED BY FS_FAT_SFN
5906:rtos/uC-FS/FAT/fs_fat.c **** *                                                                        --- RETURNED BY FS_FAT_LFN
5907:rtos/uC-FS/FAT/fs_fat.c **** *                                       FS_ERR_NAME_INVALID              Invalid name.
5908:rtos/uC-FS/FAT/fs_fat.c **** *
5909:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
5910:rtos/uC-FS/FAT/fs_fat.c **** *
5911:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : (1) (a) The 'p_temp' pointer is 4-byte aligned since all sectors are 4-byte aligned
5912:rtos/uC-FS/FAT/fs_fat.c **** *
5913:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) All pointers to directory entries are 4-byte aligned since all directory en
5914:rtos/uC-FS/FAT/fs_fat.c **** *                       lie at a offset multiple of 32 (the size of a directory entry) from the beg
5915:rtos/uC-FS/FAT/fs_fat.c **** *                       of a sector.
5916:rtos/uC-FS/FAT/fs_fat.c **** *
5917:rtos/uC-FS/FAT/fs_fat.c **** *               (2) (a) Consecutive file separator characters are ignored.
5918:rtos/uC-FS/FAT/fs_fat.c **** *
5919:rtos/uC-FS/FAT/fs_fat.c **** *                   (b) #### Handle "dot" & "dot dot" file path components.
5920:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
5921:rtos/uC-FS/FAT/fs_fat.c **** */
5922:rtos/uC-FS/FAT/fs_fat.c **** 
5923:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_DataSrch (FS_VOL          *p_vol,
5924:rtos/uC-FS/FAT/fs_fat.c ****                                FS_BUF          *p_buf,
5925:rtos/uC-FS/FAT/fs_fat.c ****                                CPU_CHAR        *name_entry,
5926:rtos/uC-FS/FAT/fs_fat.c ****                                FS_FAT_SEC_NBR  *p_dir_first_sec,
5927:rtos/uC-FS/FAT/fs_fat.c ****                                FS_FAT_DIR_POS  *p_dir_start_pos,
5928:rtos/uC-FS/FAT/fs_fat.c ****                                FS_FAT_DIR_POS  *p_dir_end_pos,
5929:rtos/uC-FS/FAT/fs_fat.c ****                                FS_ERR          *p_err)
5930:rtos/uC-FS/FAT/fs_fat.c **** {
 365              		.loc 1 5930 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 12, pretend = 0, frame = 24
ARM GAS  /tmp/ccazZ5Hl.s 			page 113


 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		.loc 1 5930 1 is_stmt 0 view .LVU118
 370 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 371              	.LCFI4:
 372              		.cfi_def_cfa_offset 36
 373              		.cfi_offset 4, -36
 374              		.cfi_offset 5, -32
 375              		.cfi_offset 6, -28
 376              		.cfi_offset 7, -24
 377              		.cfi_offset 8, -20
 378              		.cfi_offset 9, -16
 379              		.cfi_offset 10, -12
 380              		.cfi_offset 11, -8
 381              		.cfi_offset 14, -4
 382 0004 8BB0     		sub	sp, sp, #44
 383              	.LCFI5:
 384              		.cfi_def_cfa_offset 80
 385 0006 8046     		mov	r8, r0
 386 0008 8946     		mov	r9, r1
 387 000a 1446     		mov	r4, r2
 388 000c 9A46     		mov	r10, r3
 389 000e DDF850B0 		ldr	fp, [sp, #80]
 390 0012 169D     		ldr	r5, [sp, #88]
5931:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U        attrib;
 391              		.loc 1 5931 5 is_stmt 1 view .LVU119
5932:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_start_pos;
 392              		.loc 1 5932 5 view .LVU120
5933:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_end_pos;
 393              		.loc 1 5933 5 view .LVU121
5934:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   dir_first_clus;
 394              		.loc 1 5934 5 view .LVU122
5935:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    dir_first_sec;
 395              		.loc 1 5935 5 view .LVU123
5936:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
 396              		.loc 1 5936 5 view .LVU124
5937:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 397              		.loc 1 5937 5 view .LVU125
5938:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR          name_char;
 398              		.loc 1 5938 5 view .LVU126
5939:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR         *name_entry_next;
 399              		.loc 1 5939 5 view .LVU127
5940:rtos/uC-FS/FAT/fs_fat.c **** 
5941:rtos/uC-FS/FAT/fs_fat.c **** 
5942:rtos/uC-FS/FAT/fs_fat.c ****     p_dir_start_pos->SecNbr = 0u;                               /* Assign dflts.                   
 400              		.loc 1 5942 5 view .LVU128
 401              		.loc 1 5942 29 is_stmt 0 view .LVU129
 402 0014 0023     		movs	r3, #0
 403              	.LVL31:
 404              		.loc 1 5942 29 view .LVU130
 405 0016 CBF80030 		str	r3, [fp]
5943:rtos/uC-FS/FAT/fs_fat.c ****     p_dir_start_pos->SecPos = 0u;
 406              		.loc 1 5943 5 is_stmt 1 view .LVU131
 407              		.loc 1 5943 29 is_stmt 0 view .LVU132
 408 001a CBF80430 		str	r3, [fp, #4]
5944:rtos/uC-FS/FAT/fs_fat.c **** 
5945:rtos/uC-FS/FAT/fs_fat.c ****     p_dir_end_pos->SecNbr   = 0u;
 409              		.loc 1 5945 5 is_stmt 1 view .LVU133
ARM GAS  /tmp/ccazZ5Hl.s 			page 114


 410              		.loc 1 5945 29 is_stmt 0 view .LVU134
 411 001e 159A     		ldr	r2, [sp, #84]
 412              	.LVL32:
 413              		.loc 1 5945 29 view .LVU135
 414 0020 1360     		str	r3, [r2]
5946:rtos/uC-FS/FAT/fs_fat.c ****     p_dir_end_pos->SecPos   = 0u;
 415              		.loc 1 5946 5 is_stmt 1 view .LVU136
 416              		.loc 1 5946 29 is_stmt 0 view .LVU137
 417 0022 5360     		str	r3, [r2, #4]
5947:rtos/uC-FS/FAT/fs_fat.c **** 
5948:rtos/uC-FS/FAT/fs_fat.c ****    *p_dir_first_sec        =  0u;                               /* Ensure the ptr is assigned when 
 418              		.loc 1 5948 4 is_stmt 1 view .LVU138
 419              		.loc 1 5948 28 is_stmt 0 view .LVU139
 420 0024 CAF80030 		str	r3, [r10]
5949:rtos/uC-FS/FAT/fs_fat.c **** 
5950:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Start srch in root dir.         
5951:rtos/uC-FS/FAT/fs_fat.c ****     dir_first_sec = ((FS_FAT_DATA *)p_vol->DataPtr)->RootDirStart;
 421              		.loc 1 5951 5 is_stmt 1 view .LVU140
 422              		.loc 1 5951 42 is_stmt 0 view .LVU141
 423 0028 436B     		ldr	r3, [r0, #52]
 424              		.loc 1 5951 19 view .LVU142
 425 002a 9F6A     		ldr	r7, [r3, #40]
 426              	.LVL33:
5952:rtos/uC-FS/FAT/fs_fat.c **** 
5953:rtos/uC-FS/FAT/fs_fat.c **** 
5954:rtos/uC-FS/FAT/fs_fat.c ****     while (*name_entry == (CPU_CHAR)ASCII_CHAR_SPACE) {         /* Ignore leading spaces.          
 427              		.loc 1 5954 5 is_stmt 1 view .LVU143
 428              		.loc 1 5954 11 is_stmt 0 view .LVU144
 429 002c 00E0     		b	.L33
 430              	.L34:
5955:rtos/uC-FS/FAT/fs_fat.c ****         name_entry++;
 431              		.loc 1 5955 9 is_stmt 1 view .LVU145
 432              		.loc 1 5955 19 is_stmt 0 view .LVU146
 433 002e 0134     		adds	r4, r4, #1
 434              	.LVL34:
 435              	.L33:
5954:rtos/uC-FS/FAT/fs_fat.c ****         name_entry++;
 436              		.loc 1 5954 11 is_stmt 1 view .LVU147
5954:rtos/uC-FS/FAT/fs_fat.c ****         name_entry++;
 437              		.loc 1 5954 12 is_stmt 0 view .LVU148
 438 0030 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
5954:rtos/uC-FS/FAT/fs_fat.c ****         name_entry++;
 439              		.loc 1 5954 11 view .LVU149
 440 0032 202B     		cmp	r3, #32
 441 0034 FBD0     		beq	.L34
5954:rtos/uC-FS/FAT/fs_fat.c ****         name_entry++;
 442              		.loc 1 5954 11 view .LVU150
 443 0036 45E0     		b	.L51
 444              	.LVL35:
 445              	.L39:
5956:rtos/uC-FS/FAT/fs_fat.c ****     }
5957:rtos/uC-FS/FAT/fs_fat.c **** 
5958:rtos/uC-FS/FAT/fs_fat.c ****     while (DEF_ON) {
5959:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ FIND DIR ENTR
5960:rtos/uC-FS/FAT/fs_fat.c ****         dir_start_pos.SecNbr = dir_first_sec;
5961:rtos/uC-FS/FAT/fs_fat.c ****         dir_start_pos.SecPos = 0u;
5962:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 115


5963:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_FN_API_Active.DirEntryFind( p_vol,
5964:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
5965:rtos/uC-FS/FAT/fs_fat.c ****                                            name_entry,
5966:rtos/uC-FS/FAT/fs_fat.c ****                                           &name_entry_next,
5967:rtos/uC-FS/FAT/fs_fat.c ****                                           &dir_start_pos,
5968:rtos/uC-FS/FAT/fs_fat.c ****                                           &dir_end_pos,
5969:rtos/uC-FS/FAT/fs_fat.c ****                                            p_err);
5970:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NAME_INVALID) {
5971:rtos/uC-FS/FAT/fs_fat.c ****             name_entry = name_entry_next;
5972:rtos/uC-FS/FAT/fs_fat.c ****         }
5973:rtos/uC-FS/FAT/fs_fat.c **** 
5974:rtos/uC-FS/FAT/fs_fat.c **** 
5975:rtos/uC-FS/FAT/fs_fat.c ****         switch (*p_err) {
5976:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_SYS_DIR_ENTRY_NOT_FOUND:                /* ---------------- DIR ENTRY NOT F
5977:rtos/uC-FS/FAT/fs_fat.c ****                  name_char = *name_entry;                       /* Move past file path separator ch
5978:rtos/uC-FS/FAT/fs_fat.c ****                  while (name_char == FS_FAT_PATH_SEP_CHAR) {
5979:rtos/uC-FS/FAT/fs_fat.c ****                      name_entry++;
 446              		.loc 1 5979 22 is_stmt 1 view .LVU151
5980:rtos/uC-FS/FAT/fs_fat.c ****                      name_char = *name_entry;
 447              		.loc 1 5980 22 view .LVU152
 448              		.loc 1 5980 32 is_stmt 0 view .LVU153
 449 0038 14F8013F 		ldrb	r3, [r4, #1]!	@ zero_extendqisi2
 450              	.LVL36:
 451              	.L38:
5978:rtos/uC-FS/FAT/fs_fat.c ****                      name_entry++;
 452              		.loc 1 5978 24 is_stmt 1 view .LVU154
 453 003c 5C2B     		cmp	r3, #92
 454 003e FBD0     		beq	.L39
5981:rtos/uC-FS/FAT/fs_fat.c ****                  }
5982:rtos/uC-FS/FAT/fs_fat.c **** 
5983:rtos/uC-FS/FAT/fs_fat.c ****                  if (*name_entry == (CPU_CHAR)ASCII_CHAR_NULL) {/* Final path component NOT found. 
 455              		.loc 1 5983 18 view .LVU155
 456              		.loc 1 5983 22 is_stmt 0 view .LVU156
 457 0040 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 458              	.LVL37:
 459              		.loc 1 5983 21 view .LVU157
 460 0042 2BB9     		cbnz	r3, .L40
5984:rtos/uC-FS/FAT/fs_fat.c ****                      *p_err           = FS_ERR_ENTRY_NOT_FOUND;
 461              		.loc 1 5984 22 is_stmt 1 view .LVU158
 462              		.loc 1 5984 39 is_stmt 0 view .LVU159
 463 0044 40F2C523 		movw	r3, #709
 464 0048 2B80     		strh	r3, [r5]	@ movhi
5985:rtos/uC-FS/FAT/fs_fat.c ****                      *p_dir_first_sec = dir_first_sec;
 465              		.loc 1 5985 22 is_stmt 1 view .LVU160
 466              		.loc 1 5985 39 is_stmt 0 view .LVU161
 467 004a CAF80070 		str	r7, [r10]
 468 004e 36E0     		b	.L37
 469              	.L40:
5986:rtos/uC-FS/FAT/fs_fat.c ****                  } else {                                       /* Intermediate path component NOT 
5987:rtos/uC-FS/FAT/fs_fat.c ****                      *p_err = FS_ERR_ENTRY_PARENT_NOT_FOUND;
 470              		.loc 1 5987 22 is_stmt 1 view .LVU162
 471              		.loc 1 5987 29 is_stmt 0 view .LVU163
 472 0050 40F2C623 		movw	r3, #710
 473 0054 2B80     		strh	r3, [r5]	@ movhi
 474 0056 32E0     		b	.L37
 475              	.L36:
5988:rtos/uC-FS/FAT/fs_fat.c ****                  }
ARM GAS  /tmp/ccazZ5Hl.s 			page 116


5989:rtos/uC-FS/FAT/fs_fat.c ****                  break;
5990:rtos/uC-FS/FAT/fs_fat.c **** 
5991:rtos/uC-FS/FAT/fs_fat.c **** 
5992:rtos/uC-FS/FAT/fs_fat.c **** 
5993:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_NONE:                                   /* ------------------ DIR ENTRY FOU
5994:rtos/uC-FS/FAT/fs_fat.c ****                  name_char = *name_entry;                       /* Move past file path separator ch
 476              		.loc 1 5994 18 is_stmt 1 view .LVU164
 477              		.loc 1 5994 28 is_stmt 0 view .LVU165
 478 0058 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 479              	.LVL38:
5995:rtos/uC-FS/FAT/fs_fat.c ****                  while (name_char == FS_FAT_PATH_SEP_CHAR) {
 480              		.loc 1 5995 18 is_stmt 1 view .LVU166
 481              		.loc 1 5995 24 is_stmt 0 view .LVU167
 482 005a 01E0     		b	.L41
 483              	.L42:
5996:rtos/uC-FS/FAT/fs_fat.c ****                      name_entry++;
 484              		.loc 1 5996 22 is_stmt 1 view .LVU168
 485              	.LVL39:
5997:rtos/uC-FS/FAT/fs_fat.c ****                      name_char = *name_entry;
 486              		.loc 1 5997 22 view .LVU169
 487              		.loc 1 5997 32 is_stmt 0 view .LVU170
 488 005c 14F8013F 		ldrb	r3, [r4, #1]!	@ zero_extendqisi2
 489              	.LVL40:
 490              	.L41:
5995:rtos/uC-FS/FAT/fs_fat.c ****                  while (name_char == FS_FAT_PATH_SEP_CHAR) {
 491              		.loc 1 5995 24 is_stmt 1 view .LVU171
 492 0060 5C2B     		cmp	r3, #92
 493 0062 FBD0     		beq	.L42
5998:rtos/uC-FS/FAT/fs_fat.c ****                  }
5999:rtos/uC-FS/FAT/fs_fat.c **** 
6000:rtos/uC-FS/FAT/fs_fat.c ****                  if (*name_entry == (CPU_CHAR)ASCII_CHAR_NULL) {/* Final path component found.     
 494              		.loc 1 6000 18 view .LVU172
 495              		.loc 1 6000 22 is_stmt 0 view .LVU173
 496 0064 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 497              	.LVL41:
 498              		.loc 1 6000 21 view .LVU174
 499 0066 002B     		cmp	r3, #0
 500 0068 49D0     		beq	.L53
6001:rtos/uC-FS/FAT/fs_fat.c ****                      *p_err = FS_ERR_NONE;
6002:rtos/uC-FS/FAT/fs_fat.c ****                      *p_dir_first_sec         = dir_first_sec;
6003:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_start_pos->SecNbr = dir_start_pos.SecNbr;
6004:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_start_pos->SecPos = dir_start_pos.SecPos;
6005:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_end_pos->SecNbr   = dir_end_pos.SecNbr;
6006:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_end_pos->SecPos   = dir_end_pos.SecPos;
6007:rtos/uC-FS/FAT/fs_fat.c ****                       return;
6008:rtos/uC-FS/FAT/fs_fat.c ****                  }
6009:rtos/uC-FS/FAT/fs_fat.c **** 
6010:rtos/uC-FS/FAT/fs_fat.c ****                  p_dir_entry = (CPU_INT08U *)p_buf->DataPtr + dir_end_pos.SecPos;
 501              		.loc 1 6010 18 is_stmt 1 view .LVU175
 502              		.loc 1 6010 51 is_stmt 0 view .LVU176
 503 006a D9F81020 		ldr	r2, [r9, #16]
 504              		.loc 1 6010 74 view .LVU177
 505 006e 079B     		ldr	r3, [sp, #28]
 506              		.loc 1 6010 30 view .LVU178
 507 0070 1A44     		add	r2, r2, r3
 508              	.LVL42:
6011:rtos/uC-FS/FAT/fs_fat.c ****                  attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_A
ARM GAS  /tmp/ccazZ5Hl.s 			page 117


 509              		.loc 1 6011 18 is_stmt 1 view .LVU179
 510              		.loc 1 6011 30 is_stmt 0 view .LVU180
 511 0072 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
 512              	.LVL43:
6012:rtos/uC-FS/FAT/fs_fat.c **** 
6013:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Intermediate path component foun
6014:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is vol ID.     
6015:rtos/uC-FS/FAT/fs_fat.c ****                  if (DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_VOLUME_ID) == DEF_YES) {
 513              		.loc 1 6015 18 is_stmt 1 view .LVU181
 514              		.loc 1 6015 21 is_stmt 0 view .LVU182
 515 0074 13F0080F 		tst	r3, #8
 516 0078 50D1     		bne	.L54
6016:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_ENTRY_PARENT_NOT_DIR;
6017:rtos/uC-FS/FAT/fs_fat.c ****                      return;
6018:rtos/uC-FS/FAT/fs_fat.c ****                  }
6019:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is NOT dir.    
6020:rtos/uC-FS/FAT/fs_fat.c ****                  if (DEF_BIT_IS_CLR(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY) == DEF_YES) {
 517              		.loc 1 6020 18 is_stmt 1 view .LVU183
 518              		.loc 1 6020 21 is_stmt 0 view .LVU184
 519 007a 13F0100F 		tst	r3, #16
 520 007e 51D0     		beq	.L55
6021:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_ENTRY_PARENT_NOT_DIR;
6022:rtos/uC-FS/FAT/fs_fat.c ****                      return;
6023:rtos/uC-FS/FAT/fs_fat.c ****                  }
6024:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Get sec & clus nbr of dir's firs
6025:rtos/uC-FS/FAT/fs_fat.c ****                  p_fat_data     = (FS_FAT_DATA *)p_vol->DataPtr;
 521              		.loc 1 6025 18 is_stmt 1 view .LVU185
 522              		.loc 1 6025 33 is_stmt 0 view .LVU186
 523 0080 D8F83410 		ldr	r1, [r8, #52]
 524              	.LVL44:
6026:rtos/uC-FS/FAT/fs_fat.c ****                  dir_first_clus = FS_FAT_DIRENT_CLUS_NBR_GET(p_dir_entry);
 525              		.loc 1 6026 18 is_stmt 1 view .LVU187
 526              		.loc 1 6026 35 is_stmt 0 view .LVU188
 527 0084 137D     		ldrb	r3, [r2, #20]	@ zero_extendqisi2
 528              	.LVL45:
 529              		.loc 1 6026 35 view .LVU189
 530 0086 577D     		ldrb	r7, [r2, #21]	@ zero_extendqisi2
 531              	.LVL46:
 532              		.loc 1 6026 35 view .LVU190
 533 0088 03EB0727 		add	r7, r3, r7, lsl #8
 534 008c 937E     		ldrb	r3, [r2, #26]	@ zero_extendqisi2
 535 008e D27E     		ldrb	r2, [r2, #27]	@ zero_extendqisi2
 536              	.LVL47:
 537              		.loc 1 6026 35 view .LVU191
 538 0090 03EB0223 		add	r3, r3, r2, lsl #8
 539 0094 9BB2     		uxth	r3, r3
 540              	.LVL48:
6027:rtos/uC-FS/FAT/fs_fat.c ****                  if ((dir_first_clus == 0u) &&
 541              		.loc 1 6027 18 is_stmt 1 view .LVU192
 542              		.loc 1 6027 21 is_stmt 0 view .LVU193
 543 0096 13EB0743 		adds	r3, r3, r7, lsl #16
 544              	.LVL49:
 545              		.loc 1 6027 21 view .LVU194
 546 009a 05D1     		bne	.L47
6028:rtos/uC-FS/FAT/fs_fat.c ****                      ((p_fat_data->FAT_Type == FS_FAT_FAT_TYPE_FAT12) || (p_fat_data->FAT_Type == F
 547              		.loc 1 6028 34 discriminator 1 view .LVU195
 548 009c 91F84A20 		ldrb	r2, [r1, #74]	@ zero_extendqisi2
ARM GAS  /tmp/ccazZ5Hl.s 			page 118


6027:rtos/uC-FS/FAT/fs_fat.c ****                  if ((dir_first_clus == 0u) &&
 549              		.loc 1 6027 45 discriminator 1 view .LVU196
 550 00a0 0C2A     		cmp	r2, #12
 551 00a2 43D0     		beq	.L48
 552              		.loc 1 6028 71 view .LVU197
 553 00a4 102A     		cmp	r2, #16
 554 00a6 41D0     		beq	.L48
 555              	.L47:
6029:rtos/uC-FS/FAT/fs_fat.c ****                      dir_first_sec = p_fat_data->RootDirStart;  /* Clus val 0 -> root dir for FAT12
6030:rtos/uC-FS/FAT/fs_fat.c ****                  } else if (FS_FAT_IS_VALID_CLUS(p_fat_data, dir_first_clus) == DEF_NO) {
 556              		.loc 1 6030 25 is_stmt 1 view .LVU198
 557              		.loc 1 6030 29 is_stmt 0 view .LVU199
 558 00a8 4A69     		ldr	r2, [r1, #20]
 559              		.loc 1 6030 28 view .LVU200
 560 00aa 9A42     		cmp	r2, r3
 561 00ac 40D9     		bls	.L49
 562              		.loc 1 6030 78 discriminator 1 view .LVU201
 563 00ae 012B     		cmp	r3, #1
 564 00b0 3ED9     		bls	.L49
6031:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_VOL_INVALID_SEC_NBR;        /* Invalid clus val.               
6032:rtos/uC-FS/FAT/fs_fat.c ****                      return;
6033:rtos/uC-FS/FAT/fs_fat.c ****                  } else {                                       /* Valid clus val.                 
6034:rtos/uC-FS/FAT/fs_fat.c ****                      dir_first_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, dir_first_clus);
 565              		.loc 1 6034 22 is_stmt 1 view .LVU202
 566              		.loc 1 6034 38 is_stmt 0 view .LVU203
 567 00b2 CF6A     		ldr	r7, [r1, #44]
 568 00b4 023B     		subs	r3, r3, #2
 569              	.LVL50:
 570              		.loc 1 6034 38 view .LVU204
 571 00b6 91F84020 		ldrb	r2, [r1, #64]	@ zero_extendqisi2
 572 00ba 9340     		lsls	r3, r3, r2
 573              	.LVL51:
 574              		.loc 1 6034 36 view .LVU205
 575 00bc 1F44     		add	r7, r7, r3
 576              	.LVL52:
 577              	.L37:
6035:rtos/uC-FS/FAT/fs_fat.c ****                  }
6036:rtos/uC-FS/FAT/fs_fat.c ****                  break;
6037:rtos/uC-FS/FAT/fs_fat.c **** 
6038:rtos/uC-FS/FAT/fs_fat.c **** 
6039:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_NAME_INVALID:                           /* ------------------- INVALID NAME
6040:rtos/uC-FS/FAT/fs_fat.c ****                  break;
6041:rtos/uC-FS/FAT/fs_fat.c **** 
6042:rtos/uC-FS/FAT/fs_fat.c **** 
6043:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_DEV:                                    /* --------------------- DEV ERROR 
6044:rtos/uC-FS/FAT/fs_fat.c ****                  break;
6045:rtos/uC-FS/FAT/fs_fat.c **** 
6046:rtos/uC-FS/FAT/fs_fat.c **** 
6047:rtos/uC-FS/FAT/fs_fat.c ****             default:
6048:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_DataSrch(): Default case reached.\r\n"));
6049:rtos/uC-FS/FAT/fs_fat.c ****                  break;
6050:rtos/uC-FS/FAT/fs_fat.c ****         }
6051:rtos/uC-FS/FAT/fs_fat.c **** 
6052:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
 578              		.loc 1 6052 9 is_stmt 1 view .LVU206
 579              		.loc 1 6052 13 is_stmt 0 view .LVU207
 580 00be 2B88     		ldrh	r3, [r5]
ARM GAS  /tmp/ccazZ5Hl.s 			page 119


 581              		.loc 1 6052 12 view .LVU208
 582 00c0 002B     		cmp	r3, #0
 583 00c2 38D1     		bne	.L32
 584              	.L51:
5958:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ FIND DIR ENTR
 585              		.loc 1 5958 5 is_stmt 1 view .LVU209
5960:rtos/uC-FS/FAT/fs_fat.c ****         dir_start_pos.SecPos = 0u;
 586              		.loc 1 5960 9 view .LVU210
5960:rtos/uC-FS/FAT/fs_fat.c ****         dir_start_pos.SecPos = 0u;
 587              		.loc 1 5960 30 is_stmt 0 view .LVU211
 588 00c4 0897     		str	r7, [sp, #32]
5961:rtos/uC-FS/FAT/fs_fat.c **** 
 589              		.loc 1 5961 9 is_stmt 1 view .LVU212
5961:rtos/uC-FS/FAT/fs_fat.c **** 
 590              		.loc 1 5961 30 is_stmt 0 view .LVU213
 591 00c6 0023     		movs	r3, #0
 592 00c8 0993     		str	r3, [sp, #36]
5963:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 593              		.loc 1 5963 9 is_stmt 1 view .LVU214
5963:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 594              		.loc 1 5963 29 is_stmt 0 view .LVU215
 595 00ca 1C4B     		ldr	r3, .L56
 596 00cc DE68     		ldr	r6, [r3, #12]
5963:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 597              		.loc 1 5963 9 view .LVU216
 598 00ce 0295     		str	r5, [sp, #8]
 599 00d0 06AB     		add	r3, sp, #24
 600 00d2 0193     		str	r3, [sp, #4]
 601 00d4 08AB     		add	r3, sp, #32
 602 00d6 0093     		str	r3, [sp]
 603 00d8 05AB     		add	r3, sp, #20
 604 00da 2246     		mov	r2, r4
 605 00dc 4946     		mov	r1, r9
 606 00de 4046     		mov	r0, r8
 607 00e0 B047     		blx	r6
 608              	.LVL53:
5970:rtos/uC-FS/FAT/fs_fat.c ****             name_entry = name_entry_next;
 609              		.loc 1 5970 9 is_stmt 1 view .LVU217
5970:rtos/uC-FS/FAT/fs_fat.c ****             name_entry = name_entry_next;
 610              		.loc 1 5970 13 is_stmt 0 view .LVU218
 611 00e2 2B88     		ldrh	r3, [r5]
5970:rtos/uC-FS/FAT/fs_fat.c ****             name_entry = name_entry_next;
 612              		.loc 1 5970 12 view .LVU219
 613 00e4 40F28732 		movw	r2, #903
 614 00e8 9342     		cmp	r3, r2
 615 00ea 00D0     		beq	.L35
5971:rtos/uC-FS/FAT/fs_fat.c ****         }
 616              		.loc 1 5971 13 is_stmt 1 view .LVU220
5971:rtos/uC-FS/FAT/fs_fat.c ****         }
 617              		.loc 1 5971 24 is_stmt 0 view .LVU221
 618 00ec 059C     		ldr	r4, [sp, #20]
 619              	.LVL54:
 620              	.L35:
5975:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_SYS_DIR_ENTRY_NOT_FOUND:                /* ---------------- DIR ENTRY NOT F
 621              		.loc 1 5975 9 is_stmt 1 view .LVU222
 622 00ee 002B     		cmp	r3, #0
 623 00f0 B2D0     		beq	.L36
ARM GAS  /tmp/ccazZ5Hl.s 			page 120


5975:rtos/uC-FS/FAT/fs_fat.c ****             case FS_ERR_SYS_DIR_ENTRY_NOT_FOUND:                /* ---------------- DIR ENTRY NOT F
 624              		.loc 1 5975 9 is_stmt 0 view .LVU223
 625 00f2 40F23352 		movw	r2, #1331
 626 00f6 9342     		cmp	r3, r2
 627 00f8 E1D1     		bne	.L37
5977:rtos/uC-FS/FAT/fs_fat.c ****                  while (name_char == FS_FAT_PATH_SEP_CHAR) {
 628              		.loc 1 5977 18 is_stmt 1 view .LVU224
5977:rtos/uC-FS/FAT/fs_fat.c ****                  while (name_char == FS_FAT_PATH_SEP_CHAR) {
 629              		.loc 1 5977 28 is_stmt 0 view .LVU225
 630 00fa 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 631              	.LVL55:
5978:rtos/uC-FS/FAT/fs_fat.c ****                      name_entry++;
 632              		.loc 1 5978 18 is_stmt 1 view .LVU226
5978:rtos/uC-FS/FAT/fs_fat.c ****                      name_entry++;
 633              		.loc 1 5978 24 is_stmt 0 view .LVU227
 634 00fc 9EE7     		b	.L38
 635              	.LVL56:
 636              	.L53:
6001:rtos/uC-FS/FAT/fs_fat.c ****                      *p_dir_first_sec         = dir_first_sec;
 637              		.loc 1 6001 22 is_stmt 1 view .LVU228
6001:rtos/uC-FS/FAT/fs_fat.c ****                      *p_dir_first_sec         = dir_first_sec;
 638              		.loc 1 6001 29 is_stmt 0 view .LVU229
 639 00fe 2B80     		strh	r3, [r5]	@ movhi
6002:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_start_pos->SecNbr = dir_start_pos.SecNbr;
 640              		.loc 1 6002 22 is_stmt 1 view .LVU230
6002:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_start_pos->SecNbr = dir_start_pos.SecNbr;
 641              		.loc 1 6002 47 is_stmt 0 view .LVU231
 642 0100 CAF80070 		str	r7, [r10]
6003:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_start_pos->SecPos = dir_start_pos.SecPos;
 643              		.loc 1 6003 23 is_stmt 1 view .LVU232
6003:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_start_pos->SecPos = dir_start_pos.SecPos;
 644              		.loc 1 6003 62 is_stmt 0 view .LVU233
 645 0104 089B     		ldr	r3, [sp, #32]
6003:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_start_pos->SecPos = dir_start_pos.SecPos;
 646              		.loc 1 6003 47 view .LVU234
 647 0106 CBF80030 		str	r3, [fp]
6004:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_end_pos->SecNbr   = dir_end_pos.SecNbr;
 648              		.loc 1 6004 23 is_stmt 1 view .LVU235
6004:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_end_pos->SecNbr   = dir_end_pos.SecNbr;
 649              		.loc 1 6004 62 is_stmt 0 view .LVU236
 650 010a 099B     		ldr	r3, [sp, #36]
6004:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_end_pos->SecNbr   = dir_end_pos.SecNbr;
 651              		.loc 1 6004 47 view .LVU237
 652 010c CBF80430 		str	r3, [fp, #4]
6005:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_end_pos->SecPos   = dir_end_pos.SecPos;
 653              		.loc 1 6005 23 is_stmt 1 view .LVU238
6005:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_end_pos->SecPos   = dir_end_pos.SecPos;
 654              		.loc 1 6005 60 is_stmt 0 view .LVU239
 655 0110 069B     		ldr	r3, [sp, #24]
6005:rtos/uC-FS/FAT/fs_fat.c ****                       p_dir_end_pos->SecPos   = dir_end_pos.SecPos;
 656              		.loc 1 6005 47 view .LVU240
 657 0112 159A     		ldr	r2, [sp, #84]
 658 0114 1360     		str	r3, [r2]
6006:rtos/uC-FS/FAT/fs_fat.c ****                       return;
 659              		.loc 1 6006 23 is_stmt 1 view .LVU241
6006:rtos/uC-FS/FAT/fs_fat.c ****                       return;
 660              		.loc 1 6006 60 is_stmt 0 view .LVU242
ARM GAS  /tmp/ccazZ5Hl.s 			page 121


 661 0116 079B     		ldr	r3, [sp, #28]
6006:rtos/uC-FS/FAT/fs_fat.c ****                       return;
 662              		.loc 1 6006 47 view .LVU243
 663 0118 5360     		str	r3, [r2, #4]
6007:rtos/uC-FS/FAT/fs_fat.c ****                  }
 664              		.loc 1 6007 23 is_stmt 1 view .LVU244
 665 011a 0CE0     		b	.L32
 666              	.LVL57:
 667              	.L54:
6016:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 668              		.loc 1 6016 21 view .LVU245
6016:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 669              		.loc 1 6016 28 is_stmt 0 view .LVU246
 670 011c 40F2C723 		movw	r3, #711
 671              	.LVL58:
6016:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 672              		.loc 1 6016 28 view .LVU247
 673 0120 2B80     		strh	r3, [r5]	@ movhi
 674              	.LVL59:
6017:rtos/uC-FS/FAT/fs_fat.c ****                  }
 675              		.loc 1 6017 22 is_stmt 1 view .LVU248
 676 0122 08E0     		b	.L32
 677              	.LVL60:
 678              	.L55:
6021:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 679              		.loc 1 6021 21 view .LVU249
6021:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 680              		.loc 1 6021 28 is_stmt 0 view .LVU250
 681 0124 40F2C723 		movw	r3, #711
 682              	.LVL61:
6021:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 683              		.loc 1 6021 28 view .LVU251
 684 0128 2B80     		strh	r3, [r5]	@ movhi
 685              	.LVL62:
6022:rtos/uC-FS/FAT/fs_fat.c ****                  }
 686              		.loc 1 6022 22 is_stmt 1 view .LVU252
 687 012a 04E0     		b	.L32
 688              	.LVL63:
 689              	.L48:
6029:rtos/uC-FS/FAT/fs_fat.c ****                  } else if (FS_FAT_IS_VALID_CLUS(p_fat_data, dir_first_clus) == DEF_NO) {
 690              		.loc 1 6029 22 view .LVU253
6029:rtos/uC-FS/FAT/fs_fat.c ****                  } else if (FS_FAT_IS_VALID_CLUS(p_fat_data, dir_first_clus) == DEF_NO) {
 691              		.loc 1 6029 36 is_stmt 0 view .LVU254
 692 012c 8F6A     		ldr	r7, [r1, #40]
 693              	.LVL64:
6029:rtos/uC-FS/FAT/fs_fat.c ****                  } else if (FS_FAT_IS_VALID_CLUS(p_fat_data, dir_first_clus) == DEF_NO) {
 694              		.loc 1 6029 36 view .LVU255
 695 012e C6E7     		b	.L37
 696              	.LVL65:
 697              	.L49:
6031:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 698              		.loc 1 6031 21 is_stmt 1 view .LVU256
6031:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 699              		.loc 1 6031 28 is_stmt 0 view .LVU257
 700 0130 40F27E53 		movw	r3, #1406
 701              	.LVL66:
6031:rtos/uC-FS/FAT/fs_fat.c ****                      return;
ARM GAS  /tmp/ccazZ5Hl.s 			page 122


 702              		.loc 1 6031 28 view .LVU258
 703 0134 2B80     		strh	r3, [r5]	@ movhi
 704              	.LVL67:
6032:rtos/uC-FS/FAT/fs_fat.c ****                  } else {                                       /* Valid clus val.                 
 705              		.loc 1 6032 22 is_stmt 1 view .LVU259
 706              	.L32:
6053:rtos/uC-FS/FAT/fs_fat.c ****             return;
6054:rtos/uC-FS/FAT/fs_fat.c ****         }
6055:rtos/uC-FS/FAT/fs_fat.c ****     }
6056:rtos/uC-FS/FAT/fs_fat.c **** }
 707              		.loc 1 6056 1 is_stmt 0 view .LVU260
 708 0136 0BB0     		add	sp, sp, #44
 709              	.LCFI6:
 710              		.cfi_def_cfa_offset 36
 711              		@ sp needed
 712 0138 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 713              	.LVL68:
 714              	.L57:
 715              		.loc 1 6056 1 view .LVU261
 716              		.align	2
 717              	.L56:
 718 013c 00000000 		.word	FS_FAT_LFN_API
 719              		.cfi_endproc
 720              	.LFE36:
 722              		.section	.text.FS_FAT_FileDataClr,"ax",%progbits
 723              		.align	1
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv4-sp-d16
 729              	FS_FAT_FileDataClr:
 730              	.LVL69:
 731              	.LFB37:
6057:rtos/uC-FS/FAT/fs_fat.c **** 
6058:rtos/uC-FS/FAT/fs_fat.c **** 
6059:rtos/uC-FS/FAT/fs_fat.c **** /*
6060:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
6061:rtos/uC-FS/FAT/fs_fat.c **** *                                        FS_FAT_FileDataClr()
6062:rtos/uC-FS/FAT/fs_fat.c **** *
6063:rtos/uC-FS/FAT/fs_fat.c **** * Description : Clear FAT file data structure
6064:rtos/uC-FS/FAT/fs_fat.c **** *
6065:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_entry_data    Pointer to FAT entry data.
6066:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
6067:rtos/uC-FS/FAT/fs_fat.c **** *
6068:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
6069:rtos/uC-FS/FAT/fs_fat.c **** *
6070:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
6071:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
6072:rtos/uC-FS/FAT/fs_fat.c **** */
6073:rtos/uC-FS/FAT/fs_fat.c **** 
6074:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_FileDataClr (FS_FAT_FILE_DATA  *p_entry_data)
6075:rtos/uC-FS/FAT/fs_fat.c **** {
 732              		.loc 1 6075 1 is_stmt 1 view -0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              		@ link register save eliminated.
ARM GAS  /tmp/ccazZ5Hl.s 			page 123


6076:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FilePos        = 0u;
 737              		.loc 1 6076 5 view .LVU263
 738              		.loc 1 6076 34 is_stmt 0 view .LVU264
 739 0000 0023     		movs	r3, #0
 740 0002 0360     		str	r3, [r0]
6077:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileSize       = 0u;
 741              		.loc 1 6077 5 is_stmt 1 view .LVU265
 742              		.loc 1 6077 34 is_stmt 0 view .LVU266
 743 0004 4360     		str	r3, [r0, #4]
6078:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->UpdateReqd     = DEF_NO;
 744              		.loc 1 6078 5 is_stmt 1 view .LVU267
 745              		.loc 1 6078 34 is_stmt 0 view .LVU268
 746 0006 0372     		strb	r3, [r0, #8]
6079:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->Mode           = DEF_BIT_NONE;
 747              		.loc 1 6079 5 is_stmt 1 view .LVU269
 748              		.loc 1 6079 34 is_stmt 0 view .LVU270
 749 0008 C360     		str	r3, [r0, #12]
6080:rtos/uC-FS/FAT/fs_fat.c **** 
6081:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DirFirstSec    = 0u;
 750              		.loc 1 6081 5 is_stmt 1 view .LVU271
 751              		.loc 1 6081 34 is_stmt 0 view .LVU272
 752 000a 0361     		str	r3, [r0, #16]
6082:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DirStartSec    = 0u;
 753              		.loc 1 6082 5 is_stmt 1 view .LVU273
 754              		.loc 1 6082 34 is_stmt 0 view .LVU274
 755 000c 4361     		str	r3, [r0, #20]
6083:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DirStartSecPos = 0u;
 756              		.loc 1 6083 5 is_stmt 1 view .LVU275
 757              		.loc 1 6083 34 is_stmt 0 view .LVU276
 758 000e 8361     		str	r3, [r0, #24]
6084:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DirEndSec      = 0u;
 759              		.loc 1 6084 5 is_stmt 1 view .LVU277
 760              		.loc 1 6084 34 is_stmt 0 view .LVU278
 761 0010 C361     		str	r3, [r0, #28]
6085:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DirEndSecPos   = 0u;
 762              		.loc 1 6085 5 is_stmt 1 view .LVU279
 763              		.loc 1 6085 34 is_stmt 0 view .LVU280
 764 0012 0362     		str	r3, [r0, #32]
6086:rtos/uC-FS/FAT/fs_fat.c **** 
6087:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileFirstClus  = 0u;
 765              		.loc 1 6087 5 is_stmt 1 view .LVU281
 766              		.loc 1 6087 34 is_stmt 0 view .LVU282
 767 0014 4362     		str	r3, [r0, #36]
6088:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSec     = 0u;
 768              		.loc 1 6088 5 is_stmt 1 view .LVU283
 769              		.loc 1 6088 34 is_stmt 0 view .LVU284
 770 0016 8362     		str	r3, [r0, #40]
6089:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSecPos  = 0u;
 771              		.loc 1 6089 5 is_stmt 1 view .LVU285
 772              		.loc 1 6089 34 is_stmt 0 view .LVU286
 773 0018 C362     		str	r3, [r0, #44]
6090:rtos/uC-FS/FAT/fs_fat.c **** 
6091:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->Attrib         = 0u;
 774              		.loc 1 6091 5 is_stmt 1 view .LVU287
 775              		.loc 1 6091 34 is_stmt 0 view .LVU288
 776 001a 0363     		str	r3, [r0, #48]
6092:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DateCreate     = 0u;
ARM GAS  /tmp/ccazZ5Hl.s 			page 124


 777              		.loc 1 6092 5 is_stmt 1 view .LVU289
 778              		.loc 1 6092 34 is_stmt 0 view .LVU290
 779 001c 8386     		strh	r3, [r0, #52]	@ movhi
6093:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->TimeCreate     = 0u;
 780              		.loc 1 6093 5 is_stmt 1 view .LVU291
 781              		.loc 1 6093 34 is_stmt 0 view .LVU292
 782 001e C386     		strh	r3, [r0, #54]	@ movhi
6094:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DateWr         = 0u;
 783              		.loc 1 6094 5 is_stmt 1 view .LVU293
 784              		.loc 1 6094 34 is_stmt 0 view .LVU294
 785 0020 4387     		strh	r3, [r0, #58]	@ movhi
6095:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->TimeWr         = 0u;
 786              		.loc 1 6095 5 is_stmt 1 view .LVU295
 787              		.loc 1 6095 34 is_stmt 0 view .LVU296
 788 0022 8387     		strh	r3, [r0, #60]	@ movhi
6096:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DateAccess     = 0u;
 789              		.loc 1 6096 5 is_stmt 1 view .LVU297
 790              		.loc 1 6096 34 is_stmt 0 view .LVU298
 791 0024 0387     		strh	r3, [r0, #56]	@ movhi
6097:rtos/uC-FS/FAT/fs_fat.c **** }
 792              		.loc 1 6097 1 view .LVU299
 793 0026 7047     		bx	lr
 794              		.cfi_endproc
 795              	.LFE37:
 797              		.section	.text.FS_FAT_FileDataInit,"ax",%progbits
 798              		.align	1
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
 802              		.fpu fpv4-sp-d16
 804              	FS_FAT_FileDataInit:
 805              	.LVL70:
 806              	.LFB38:
6098:rtos/uC-FS/FAT/fs_fat.c **** 
6099:rtos/uC-FS/FAT/fs_fat.c **** 
6100:rtos/uC-FS/FAT/fs_fat.c **** /*
6101:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
6102:rtos/uC-FS/FAT/fs_fat.c **** *                                        FS_FAT_FileDataInit()
6103:rtos/uC-FS/FAT/fs_fat.c **** *
6104:rtos/uC-FS/FAT/fs_fat.c **** * Description : Initialize FAT file data structure with directory entry information.
6105:rtos/uC-FS/FAT/fs_fat.c **** *
6106:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_entry_data    Pointer to FAT entry data.
6107:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
6108:rtos/uC-FS/FAT/fs_fat.c **** *
6109:rtos/uC-FS/FAT/fs_fat.c **** *               p_dir_entry     Pointer to directory entry.
6110:rtos/uC-FS/FAT/fs_fat.c **** *               ----------      Argument validated by caller.
6111:rtos/uC-FS/FAT/fs_fat.c **** *
6112:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
6113:rtos/uC-FS/FAT/fs_fat.c **** *
6114:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
6115:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
6116:rtos/uC-FS/FAT/fs_fat.c **** */
6117:rtos/uC-FS/FAT/fs_fat.c **** 
6118:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_FileDataInit (FS_FAT_FILE_DATA *p_entry_data,
6119:rtos/uC-FS/FAT/fs_fat.c ****                                    CPU_INT08U       *p_dir_entry)
6120:rtos/uC-FS/FAT/fs_fat.c **** {
 807              		.loc 1 6120 1 is_stmt 1 view -0
ARM GAS  /tmp/ccazZ5Hl.s 			page 125


 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              		@ link register save eliminated.
6121:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileSize   = MEM_VAL_GET_INT32U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_F
 812              		.loc 1 6121 5 view .LVU301
 813              		.loc 1 6121 32 is_stmt 0 view .LVU302
 814 0000 0B7F     		ldrb	r3, [r1, #28]	@ zero_extendqisi2
 815 0002 4A7F     		ldrb	r2, [r1, #29]	@ zero_extendqisi2
 816 0004 03EB0223 		add	r3, r3, r2, lsl #8
 817 0008 8A7F     		ldrb	r2, [r1, #30]	@ zero_extendqisi2
 818 000a 03EB0243 		add	r3, r3, r2, lsl #16
 819 000e CA7F     		ldrb	r2, [r1, #31]	@ zero_extendqisi2
 820 0010 03EB0263 		add	r3, r3, r2, lsl #24
 821              		.loc 1 6121 30 view .LVU303
 822 0014 4360     		str	r3, [r0, #4]
6122:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->Attrib     = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_A
 823              		.loc 1 6122 5 is_stmt 1 view .LVU304
 824              		.loc 1 6122 32 is_stmt 0 view .LVU305
 825 0016 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 826              		.loc 1 6122 30 view .LVU306
 827 0018 0363     		str	r3, [r0, #48]
6123:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DateCreate = MEM_VAL_GET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_C
 828              		.loc 1 6123 5 is_stmt 1 view .LVU307
 829              		.loc 1 6123 32 is_stmt 0 view .LVU308
 830 001a 0B7C     		ldrb	r3, [r1, #16]	@ zero_extendqisi2
 831 001c 4A7C     		ldrb	r2, [r1, #17]	@ zero_extendqisi2
 832 001e 03EB0223 		add	r3, r3, r2, lsl #8
 833              		.loc 1 6123 30 view .LVU309
 834 0022 8386     		strh	r3, [r0, #52]	@ movhi
6124:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->TimeCreate = MEM_VAL_GET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_C
 835              		.loc 1 6124 5 is_stmt 1 view .LVU310
 836              		.loc 1 6124 32 is_stmt 0 view .LVU311
 837 0024 8B7B     		ldrb	r3, [r1, #14]	@ zero_extendqisi2
 838 0026 CA7B     		ldrb	r2, [r1, #15]	@ zero_extendqisi2
 839 0028 03EB0223 		add	r3, r3, r2, lsl #8
 840              		.loc 1 6124 30 view .LVU312
 841 002c C386     		strh	r3, [r0, #54]	@ movhi
6125:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DateWr     = MEM_VAL_GET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_W
 842              		.loc 1 6125 5 is_stmt 1 view .LVU313
 843              		.loc 1 6125 32 is_stmt 0 view .LVU314
 844 002e 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
 845 0030 4A7E     		ldrb	r2, [r1, #25]	@ zero_extendqisi2
 846 0032 03EB0223 		add	r3, r3, r2, lsl #8
 847              		.loc 1 6125 30 view .LVU315
 848 0036 4387     		strh	r3, [r0, #58]	@ movhi
6126:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->TimeWr     = MEM_VAL_GET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_W
 849              		.loc 1 6126 5 is_stmt 1 view .LVU316
 850              		.loc 1 6126 32 is_stmt 0 view .LVU317
 851 0038 8B7D     		ldrb	r3, [r1, #22]	@ zero_extendqisi2
 852 003a CA7D     		ldrb	r2, [r1, #23]	@ zero_extendqisi2
 853 003c 03EB0223 		add	r3, r3, r2, lsl #8
 854              		.loc 1 6126 30 view .LVU318
 855 0040 8387     		strh	r3, [r0, #60]	@ movhi
6127:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->DateAccess = MEM_VAL_GET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_L
 856              		.loc 1 6127 5 is_stmt 1 view .LVU319
 857              		.loc 1 6127 32 is_stmt 0 view .LVU320
ARM GAS  /tmp/ccazZ5Hl.s 			page 126


 858 0042 8B7C     		ldrb	r3, [r1, #18]	@ zero_extendqisi2
 859 0044 CA7C     		ldrb	r2, [r1, #19]	@ zero_extendqisi2
 860 0046 03EB0223 		add	r3, r3, r2, lsl #8
 861              		.loc 1 6127 30 view .LVU321
 862 004a 0387     		strh	r3, [r0, #56]	@ movhi
6128:rtos/uC-FS/FAT/fs_fat.c **** }
 863              		.loc 1 6128 1 view .LVU322
 864 004c 7047     		bx	lr
 865              		.cfi_endproc
 866              	.LFE38:
 868              		.section	.text.FS_FAT_DataClr,"ax",%progbits
 869              		.align	1
 870              		.syntax unified
 871              		.thumb
 872              		.thumb_func
 873              		.fpu fpv4-sp-d16
 875              	FS_FAT_DataClr:
 876              	.LVL71:
 877              	.LFB39:
6129:rtos/uC-FS/FAT/fs_fat.c **** 
6130:rtos/uC-FS/FAT/fs_fat.c **** 
6131:rtos/uC-FS/FAT/fs_fat.c **** /*
6132:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
6133:rtos/uC-FS/FAT/fs_fat.c **** *                                          FS_FAT_DataClr()
6134:rtos/uC-FS/FAT/fs_fat.c **** *
6135:rtos/uC-FS/FAT/fs_fat.c **** * Description : Clear FAT info structure
6136:rtos/uC-FS/FAT/fs_fat.c **** *
6137:rtos/uC-FS/FAT/fs_fat.c **** * Argument(s) : p_fat_data  Pointer to FAT info structure.
6138:rtos/uC-FS/FAT/fs_fat.c **** *               ----------  Argument validated by caller.
6139:rtos/uC-FS/FAT/fs_fat.c **** *
6140:rtos/uC-FS/FAT/fs_fat.c **** * Return(s)   : none.
6141:rtos/uC-FS/FAT/fs_fat.c **** *
6142:rtos/uC-FS/FAT/fs_fat.c **** * Note(s)     : none.
6143:rtos/uC-FS/FAT/fs_fat.c **** ***************************************************************************************************
6144:rtos/uC-FS/FAT/fs_fat.c **** */
6145:rtos/uC-FS/FAT/fs_fat.c **** 
6146:rtos/uC-FS/FAT/fs_fat.c **** static  void  FS_FAT_DataClr (FS_FAT_DATA  *p_fat_data)
6147:rtos/uC-FS/FAT/fs_fat.c **** {
 878              		.loc 1 6147 1 is_stmt 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
6148:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->RsvdSize           =  0u;
 883              		.loc 1 6148 5 view .LVU324
 884              		.loc 1 6148 36 is_stmt 0 view .LVU325
 885 0000 0023     		movs	r3, #0
 886 0002 0360     		str	r3, [r0]
6149:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT_Size           =  0u;
 887              		.loc 1 6149 5 is_stmt 1 view .LVU326
 888              		.loc 1 6149 36 is_stmt 0 view .LVU327
 889 0004 4360     		str	r3, [r0, #4]
6150:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->RootDirSize        =  0u;
 890              		.loc 1 6150 5 is_stmt 1 view .LVU328
 891              		.loc 1 6150 36 is_stmt 0 view .LVU329
 892 0006 8360     		str	r3, [r0, #8]
6151:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->VolSize            =  0u;
ARM GAS  /tmp/ccazZ5Hl.s 			page 127


 893              		.loc 1 6151 5 is_stmt 1 view .LVU330
 894              		.loc 1 6151 36 is_stmt 0 view .LVU331
 895 0008 C360     		str	r3, [r0, #12]
6152:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->DataSize           =  0u;
 896              		.loc 1 6152 5 is_stmt 1 view .LVU332
 897              		.loc 1 6152 36 is_stmt 0 view .LVU333
 898 000a 0361     		str	r3, [r0, #16]
6153:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->MaxClusNbr         =  0u;
 899              		.loc 1 6153 5 is_stmt 1 view .LVU334
 900              		.loc 1 6153 36 is_stmt 0 view .LVU335
 901 000c 4361     		str	r3, [r0, #20]
6154:rtos/uC-FS/FAT/fs_fat.c **** 
6155:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FS_InfoStart       =  0u;
 902              		.loc 1 6155 5 is_stmt 1 view .LVU336
 903              		.loc 1 6155 36 is_stmt 0 view .LVU337
 904 000e 8361     		str	r3, [r0, #24]
6156:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->BPB_BkStart        =  0u;
 905              		.loc 1 6156 5 is_stmt 1 view .LVU338
 906              		.loc 1 6156 36 is_stmt 0 view .LVU339
 907 0010 C361     		str	r3, [r0, #28]
6157:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT1_Start         =  0u;
 908              		.loc 1 6157 5 is_stmt 1 view .LVU340
 909              		.loc 1 6157 36 is_stmt 0 view .LVU341
 910 0012 0362     		str	r3, [r0, #32]
6158:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT2_Start         =  0u;
 911              		.loc 1 6158 5 is_stmt 1 view .LVU342
 912              		.loc 1 6158 36 is_stmt 0 view .LVU343
 913 0014 4362     		str	r3, [r0, #36]
6159:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->RootDirStart       =  0u;
 914              		.loc 1 6159 5 is_stmt 1 view .LVU344
 915              		.loc 1 6159 36 is_stmt 0 view .LVU345
 916 0016 8362     		str	r3, [r0, #40]
6160:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->DataStart          =  0u;
 917              		.loc 1 6160 5 is_stmt 1 view .LVU346
 918              		.loc 1 6160 36 is_stmt 0 view .LVU347
 919 0018 C362     		str	r3, [r0, #44]
6161:rtos/uC-FS/FAT/fs_fat.c **** 
6162:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->NextClusNbr        =  0u;
 920              		.loc 1 6162 5 is_stmt 1 view .LVU348
 921              		.loc 1 6162 36 is_stmt 0 view .LVU349
 922 001a 0363     		str	r3, [r0, #48]
6163:rtos/uC-FS/FAT/fs_fat.c **** 
6164:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->SecSize            =  0u;
 923              		.loc 1 6164 5 is_stmt 1 view .LVU350
 924              		.loc 1 6164 36 is_stmt 0 view .LVU351
 925 001c 4363     		str	r3, [r0, #52]
6165:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->SecSizeLog2        =  0u;
 926              		.loc 1 6165 5 is_stmt 1 view .LVU352
 927              		.loc 1 6165 36 is_stmt 0 view .LVU353
 928 001e 80F83830 		strb	r3, [r0, #56]
6166:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->ClusSize_sec       =  0u;
 929              		.loc 1 6166 5 is_stmt 1 view .LVU354
 930              		.loc 1 6166 36 is_stmt 0 view .LVU355
 931 0022 C363     		str	r3, [r0, #60]
6167:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->ClusSizeLog2_sec   =  0u;
 932              		.loc 1 6167 5 is_stmt 1 view .LVU356
 933              		.loc 1 6167 36 is_stmt 0 view .LVU357
ARM GAS  /tmp/ccazZ5Hl.s 			page 128


 934 0024 80F84030 		strb	r3, [r0, #64]
6168:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->ClusSize_octet     =  0u;
 935              		.loc 1 6168 5 is_stmt 1 view .LVU358
 936              		.loc 1 6168 36 is_stmt 0 view .LVU359
 937 0028 4364     		str	r3, [r0, #68]
6169:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->ClusSizeLog2_octet =  0u;
 938              		.loc 1 6169 5 is_stmt 1 view .LVU360
 939              		.loc 1 6169 36 is_stmt 0 view .LVU361
 940 002a 80F84830 		strb	r3, [r0, #72]
6170:rtos/uC-FS/FAT/fs_fat.c **** 
6171:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->NbrFATs            =  0u;
 941              		.loc 1 6171 5 is_stmt 1 view .LVU362
 942              		.loc 1 6171 36 is_stmt 0 view .LVU363
 943 002e 80F84930 		strb	r3, [r0, #73]
6172:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT_Type           =  0u;
 944              		.loc 1 6172 5 is_stmt 1 view .LVU364
 945              		.loc 1 6172 36 is_stmt 0 view .LVU365
 946 0032 80F84A30 		strb	r3, [r0, #74]
6173:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT_TypeAPI_Ptr    = (FS_FAT_TYPE_API *)0;
 947              		.loc 1 6173 5 is_stmt 1 view .LVU366
 948              		.loc 1 6173 36 is_stmt 0 view .LVU367
 949 0036 C364     		str	r3, [r0, #76]
6174:rtos/uC-FS/FAT/fs_fat.c **** 
6175:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryInfoValid     =  DEF_NO;
 950              		.loc 1 6175 5 is_stmt 1 view .LVU368
 951              		.loc 1 6175 36 is_stmt 0 view .LVU369
 952 0038 80F85030 		strb	r3, [r0, #80]
6176:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryBadClusCnt    =  0u;
 953              		.loc 1 6176 5 is_stmt 1 view .LVU370
 954              		.loc 1 6176 36 is_stmt 0 view .LVU371
 955 003c 4365     		str	r3, [r0, #84]
6177:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryFreeClusCnt   =  0u;
 956              		.loc 1 6177 5 is_stmt 1 view .LVU372
 957              		.loc 1 6177 36 is_stmt 0 view .LVU373
 958 003e 8365     		str	r3, [r0, #88]
6178:rtos/uC-FS/FAT/fs_fat.c **** 
6179:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_CTR_STAT_EN            == DEF_ENABLED)
6180:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->StatAllocClusCtr   =  0u;
6181:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->StatFreeClusCtr    =  0u;
6182:rtos/uC-FS/FAT/fs_fat.c **** #endif
6183:rtos/uC-FS/FAT/fs_fat.c **** }
 959              		.loc 1 6183 1 view .LVU374
 960 0040 7047     		bx	lr
 961              		.cfi_endproc
 962              	.LFE39:
 964              		.section	.text.FS_FAT_ChkBootSec,"ax",%progbits
 965              		.align	1
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 969              		.fpu fpv4-sp-d16
 971              	FS_FAT_ChkBootSec:
 972              	.LVL72:
 973              	.LFB34:
5148:rtos/uC-FS/FAT/fs_fat.c ****     FS_SEC_SIZE      clus_size_octet;
 974              		.loc 1 5148 1 is_stmt 1 view -0
 975              		.cfi_startproc
ARM GAS  /tmp/ccazZ5Hl.s 			page 129


 976              		@ args = 0, pretend = 0, frame = 0
 977              		@ frame_needed = 0, uses_anonymous_args = 0
5148:rtos/uC-FS/FAT/fs_fat.c ****     FS_SEC_SIZE      clus_size_octet;
 978              		.loc 1 5148 1 is_stmt 0 view .LVU376
 979 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 980              	.LCFI7:
 981              		.cfi_def_cfa_offset 24
 982              		.cfi_offset 3, -24
 983              		.cfi_offset 4, -20
 984              		.cfi_offset 5, -16
 985              		.cfi_offset 6, -12
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 988 0002 0546     		mov	r5, r0
 989 0004 0C46     		mov	r4, r1
 990 0006 1646     		mov	r6, r2
5149:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  clus_cnt;
 991              		.loc 1 5149 5 is_stmt 1 view .LVU377
5150:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  clus_cnt_max_fat;
 992              		.loc 1 5150 5 view .LVU378
5151:rtos/uC-FS/FAT/fs_fat.c **** 
 993              		.loc 1 5151 5 view .LVU379
5153:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U       root_cnt;
 994              		.loc 1 5153 5 view .LVU380
5154:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U       vol_size;
 995              		.loc 1 5154 5 view .LVU381
5155:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT32_EN == DEF_ENABLED)
 996              		.loc 1 5155 5 view .LVU382
5157:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U       sec_nbr;
 997              		.loc 1 5157 5 view .LVU383
5158:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN      valid;
 998              		.loc 1 5158 5 view .LVU384
5159:rtos/uC-FS/FAT/fs_fat.c **** #endif
 999              		.loc 1 5159 5 view .LVU385
5164:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->SecSize) {
 1000              		.loc 1 5164 5 view .LVU386
5164:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->SecSize) {
 1001              		.loc 1 5164 40 is_stmt 0 view .LVU387
 1002 0008 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 1003 000a 087B     		ldrb	r0, [r1, #12]	@ zero_extendqisi2
 1004              	.LVL73:
5164:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->SecSize) {
 1005              		.loc 1 5164 40 view .LVU388
 1006 000c 03EB0023 		add	r3, r3, r0, lsl #8
 1007 0010 98B2     		uxth	r0, r3
5164:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->SecSize) {
 1008              		.loc 1 5164 25 view .LVU389
 1009 0012 6863     		str	r0, [r5, #52]
5165:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
 1010              		.loc 1 5165 5 is_stmt 1 view .LVU390
 1011 0014 B0F5006F 		cmp	r0, #2048
 1012 0018 06D0     		beq	.L62
 1013 001a 23D8     		bhi	.L63
 1014 001c B0F5007F 		cmp	r0, #512
 1015 0020 02D0     		beq	.L62
 1016 0022 B0F5806F 		cmp	r0, #1024
 1017 0026 20D1     		bne	.L64
ARM GAS  /tmp/ccazZ5Hl.s 			page 130


 1018              	.L62:
5170:rtos/uC-FS/FAT/fs_fat.c ****              break;
 1019              		.loc 1 5170 14 view .LVU391
5170:rtos/uC-FS/FAT/fs_fat.c ****              break;
 1020              		.loc 1 5170 40 is_stmt 0 view .LVU392
 1021 0028 FFF7FEFF 		bl	FSUtil_Log2
 1022              	.LVL74:
5170:rtos/uC-FS/FAT/fs_fat.c ****              break;
 1023              		.loc 1 5170 38 view .LVU393
 1024 002c 85F83800 		strb	r0, [r5, #56]
5171:rtos/uC-FS/FAT/fs_fat.c **** 
 1025              		.loc 1 5171 14 is_stmt 1 view .LVU394
5179:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->ClusSize_sec) {
 1026              		.loc 1 5179 5 view .LVU395
5179:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->ClusSize_sec) {
 1027              		.loc 1 5179 48 is_stmt 0 view .LVU396
 1028 0030 607B     		ldrb	r0, [r4, #13]	@ zero_extendqisi2
5179:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->ClusSize_sec) {
 1029              		.loc 1 5179 30 view .LVU397
 1030 0032 E863     		str	r0, [r5, #60]
5180:rtos/uC-FS/FAT/fs_fat.c ****         case 1u:
 1031              		.loc 1 5180 5 is_stmt 1 view .LVU398
 1032 0034 2028     		cmp	r0, #32
 1033 0036 1CD8     		bhi	.L65
 1034 0038 F8B1     		cbz	r0, .L66
 1035 003a 431E     		subs	r3, r0, #1
 1036 003c 1F2B     		cmp	r3, #31
 1037 003e 1CD8     		bhi	.L66
 1038 0040 DFE803F0 		tbb	[pc, r3]
 1039              	.L68:
 1040 0044 1F       		.byte	(.L67-.L68)/2
 1041 0045 1F       		.byte	(.L67-.L68)/2
 1042 0046 1B       		.byte	(.L66-.L68)/2
 1043 0047 1F       		.byte	(.L67-.L68)/2
 1044 0048 1B       		.byte	(.L66-.L68)/2
 1045 0049 1B       		.byte	(.L66-.L68)/2
 1046 004a 1B       		.byte	(.L66-.L68)/2
 1047 004b 1F       		.byte	(.L67-.L68)/2
 1048 004c 1B       		.byte	(.L66-.L68)/2
 1049 004d 1B       		.byte	(.L66-.L68)/2
 1050 004e 1B       		.byte	(.L66-.L68)/2
 1051 004f 1B       		.byte	(.L66-.L68)/2
 1052 0050 1B       		.byte	(.L66-.L68)/2
 1053 0051 1B       		.byte	(.L66-.L68)/2
 1054 0052 1B       		.byte	(.L66-.L68)/2
 1055 0053 1F       		.byte	(.L67-.L68)/2
 1056 0054 1B       		.byte	(.L66-.L68)/2
 1057 0055 1B       		.byte	(.L66-.L68)/2
 1058 0056 1B       		.byte	(.L66-.L68)/2
 1059 0057 1B       		.byte	(.L66-.L68)/2
 1060 0058 1B       		.byte	(.L66-.L68)/2
 1061 0059 1B       		.byte	(.L66-.L68)/2
 1062 005a 1B       		.byte	(.L66-.L68)/2
 1063 005b 1B       		.byte	(.L66-.L68)/2
 1064 005c 1B       		.byte	(.L66-.L68)/2
 1065 005d 1B       		.byte	(.L66-.L68)/2
 1066 005e 1B       		.byte	(.L66-.L68)/2
ARM GAS  /tmp/ccazZ5Hl.s 			page 131


 1067 005f 1B       		.byte	(.L66-.L68)/2
 1068 0060 1B       		.byte	(.L66-.L68)/2
 1069 0061 1B       		.byte	(.L66-.L68)/2
 1070 0062 1B       		.byte	(.L66-.L68)/2
 1071 0063 1F       		.byte	(.L67-.L68)/2
 1072              	.LVL75:
 1073              		.p2align 1
 1074              	.L63:
5165:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
 1075              		.loc 1 5165 5 is_stmt 0 view .LVU399
 1076 0064 B0F5805F 		cmp	r0, #4096
 1077 0068 DED0     		beq	.L62
 1078              	.L64:
5174:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
 1079              		.loc 1 5174 99 is_stmt 1 view .LVU400
5175:rtos/uC-FS/FAT/fs_fat.c ****              return;
 1080              		.loc 1 5175 13 view .LVU401
5175:rtos/uC-FS/FAT/fs_fat.c ****              return;
 1081              		.loc 1 5175 20 is_stmt 0 view .LVU402
 1082 006a 40F27F53 		movw	r3, #1407
 1083 006e 3380     		strh	r3, [r6]	@ movhi
5176:rtos/uC-FS/FAT/fs_fat.c ****     }
 1084              		.loc 1 5176 14 is_stmt 1 view .LVU403
 1085              	.LVL76:
 1086              	.L61:
5334:rtos/uC-FS/FAT/fs_fat.c **** 
 1087              		.loc 1 5334 1 is_stmt 0 view .LVU404
 1088 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1089              	.LVL77:
 1090              	.L65:
5180:rtos/uC-FS/FAT/fs_fat.c ****         case 1u:
 1091              		.loc 1 5180 5 view .LVU405
 1092 0072 4028     		cmp	r0, #64
 1093 0074 05D0     		beq	.L67
 1094 0076 8028     		cmp	r0, #128
 1095 0078 03D0     		beq	.L67
 1096              	.L66:
5193:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
 1097              		.loc 1 5193 102 is_stmt 1 view .LVU406
5194:rtos/uC-FS/FAT/fs_fat.c ****              return;
 1098              		.loc 1 5194 13 view .LVU407
5194:rtos/uC-FS/FAT/fs_fat.c ****              return;
 1099              		.loc 1 5194 20 is_stmt 0 view .LVU408
 1100 007a 40F27F53 		movw	r3, #1407
 1101 007e 3380     		strh	r3, [r6]	@ movhi
5195:rtos/uC-FS/FAT/fs_fat.c ****     }
 1102              		.loc 1 5195 14 is_stmt 1 view .LVU409
 1103 0080 F6E7     		b	.L61
 1104              	.L67:
5189:rtos/uC-FS/FAT/fs_fat.c ****              break;
 1105              		.loc 1 5189 14 view .LVU410
5189:rtos/uC-FS/FAT/fs_fat.c ****              break;
 1106              		.loc 1 5189 45 is_stmt 0 view .LVU411
 1107 0082 FFF7FEFF 		bl	FSUtil_Log2
 1108              	.LVL78:
5189:rtos/uC-FS/FAT/fs_fat.c ****              break;
 1109              		.loc 1 5189 43 view .LVU412
ARM GAS  /tmp/ccazZ5Hl.s 			page 132


 1110 0086 85F84000 		strb	r0, [r5, #64]
5190:rtos/uC-FS/FAT/fs_fat.c **** 
 1111              		.loc 1 5190 14 is_stmt 1 view .LVU413
5199:rtos/uC-FS/FAT/fs_fat.c ****     switch (clus_size_octet) {
 1112              		.loc 1 5199 5 view .LVU414
5199:rtos/uC-FS/FAT/fs_fat.c ****     switch (clus_size_octet) {
 1113              		.loc 1 5199 33 is_stmt 0 view .LVU415
 1114 008a 6B6B     		ldr	r3, [r5, #52]
5199:rtos/uC-FS/FAT/fs_fat.c ****     switch (clus_size_octet) {
 1115              		.loc 1 5199 21 view .LVU416
 1116 008c 03FA00F0 		lsl	r0, r3, r0
 1117              	.LVL79:
5200:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
 1118              		.loc 1 5200 5 is_stmt 1 view .LVU417
 1119 0090 B0F5005F 		cmp	r0, #8192
 1120 0094 0ED0     		beq	.L70
 1121 0096 1CD8     		bhi	.L71
 1122 0098 B0F5006F 		cmp	r0, #2048
 1123 009c 0AD0     		beq	.L70
 1124 009e 03D9     		bls	.L88
 1125 00a0 B0F5805F 		cmp	r0, #4096
 1126 00a4 1ED1     		bne	.L73
 1127 00a6 05E0     		b	.L70
 1128              	.L88:
 1129 00a8 B0F5007F 		cmp	r0, #512
 1130 00ac 02D0     		beq	.L70
 1131 00ae B0F5806F 		cmp	r0, #1024
 1132 00b2 17D1     		bne	.L73
 1133              	.L70:
5209:rtos/uC-FS/FAT/fs_fat.c ****              p_fat_data->ClusSizeLog2_octet = FSUtil_Log2(clus_size_octet);
 1134              		.loc 1 5209 14 view .LVU418
5209:rtos/uC-FS/FAT/fs_fat.c ****              p_fat_data->ClusSizeLog2_octet = FSUtil_Log2(clus_size_octet);
 1135              		.loc 1 5209 45 is_stmt 0 view .LVU419
 1136 00b4 6864     		str	r0, [r5, #68]
5210:rtos/uC-FS/FAT/fs_fat.c ****              break;
 1137              		.loc 1 5210 14 is_stmt 1 view .LVU420
5210:rtos/uC-FS/FAT/fs_fat.c ****              break;
 1138              		.loc 1 5210 47 is_stmt 0 view .LVU421
 1139 00b6 FFF7FEFF 		bl	FSUtil_Log2
 1140              	.LVL80:
5210:rtos/uC-FS/FAT/fs_fat.c ****              break;
 1141              		.loc 1 5210 45 view .LVU422
 1142 00ba 85F84800 		strb	r0, [r5, #72]
5211:rtos/uC-FS/FAT/fs_fat.c **** 
 1143              		.loc 1 5211 14 is_stmt 1 view .LVU423
5219:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->NbrFATs) {
 1144              		.loc 1 5219 5 view .LVU424
5219:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->NbrFATs) {
 1145              		.loc 1 5219 27 is_stmt 0 view .LVU425
 1146 00be 277C     		ldrb	r7, [r4, #16]	@ zero_extendqisi2
5219:rtos/uC-FS/FAT/fs_fat.c ****     switch (p_fat_data->NbrFATs) {
 1147              		.loc 1 5219 25 view .LVU426
 1148 00c0 85F84970 		strb	r7, [r5, #73]
5220:rtos/uC-FS/FAT/fs_fat.c ****         case 1:
 1149              		.loc 1 5220 5 is_stmt 1 view .LVU427
 1150 00c4 7B1E     		subs	r3, r7, #1
 1151 00c6 012B     		cmp	r3, #1
ARM GAS  /tmp/ccazZ5Hl.s 			page 133


 1152 00c8 10D9     		bls	.L89
5226:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
 1153              		.loc 1 5226 96 view .LVU428
5227:rtos/uC-FS/FAT/fs_fat.c ****              return;
 1154              		.loc 1 5227 13 view .LVU429
5227:rtos/uC-FS/FAT/fs_fat.c ****              return;
 1155              		.loc 1 5227 20 is_stmt 0 view .LVU430
 1156 00ca 40F27F53 		movw	r3, #1407
 1157 00ce 3380     		strh	r3, [r6]	@ movhi
5228:rtos/uC-FS/FAT/fs_fat.c ****     }
 1158              		.loc 1 5228 14 is_stmt 1 view .LVU431
 1159 00d0 CEE7     		b	.L61
 1160              	.LVL81:
 1161              	.L71:
5200:rtos/uC-FS/FAT/fs_fat.c ****         case 512u:
 1162              		.loc 1 5200 5 is_stmt 0 view .LVU432
 1163 00d2 B0F5004F 		cmp	r0, #32768
 1164 00d6 EDD0     		beq	.L70
 1165 00d8 B0F5803F 		cmp	r0, #65536
 1166 00dc EAD0     		beq	.L70
 1167 00de B0F5804F 		cmp	r0, #16384
 1168 00e2 E7D0     		beq	.L70
 1169              	.L73:
5214:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_VOL_INVALID_SYS;
 1170              		.loc 1 5214 94 is_stmt 1 view .LVU433
5215:rtos/uC-FS/FAT/fs_fat.c ****              return;
 1171              		.loc 1 5215 13 view .LVU434
5215:rtos/uC-FS/FAT/fs_fat.c ****              return;
 1172              		.loc 1 5215 20 is_stmt 0 view .LVU435
 1173 00e4 40F27F53 		movw	r3, #1407
 1174 00e8 3380     		strh	r3, [r6]	@ movhi
5216:rtos/uC-FS/FAT/fs_fat.c ****     }
 1175              		.loc 1 5216 14 is_stmt 1 view .LVU436
 1176 00ea C1E7     		b	.L61
 1177              	.LVL82:
 1178              	.L89:
5223:rtos/uC-FS/FAT/fs_fat.c **** 
 1179              		.loc 1 5223 14 view .LVU437
5231:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT1_Start  =  p_fat_data->RsvdSize;            /* Sec nbr of 1st FAT.             
 1180              		.loc 1 5231 5 view .LVU438
5231:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT1_Start  =  p_fat_data->RsvdSize;            /* Sec nbr of 1st FAT.             
 1181              		.loc 1 5231 47 is_stmt 0 view .LVU439
 1182 00ec 94F80EC0 		ldrb	ip, [r4, #14]	@ zero_extendqisi2
 1183 00f0 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 1184 00f2 0CEB032C 		add	ip, ip, r3, lsl #8
 1185 00f6 1FFA8CFC 		uxth	ip, ip
5231:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->FAT1_Start  =  p_fat_data->RsvdSize;            /* Sec nbr of 1st FAT.             
 1186              		.loc 1 5231 29 view .LVU440
 1187 00fa C5F800C0 		str	ip, [r5]
5232:rtos/uC-FS/FAT/fs_fat.c **** 
 1188              		.loc 1 5232 5 is_stmt 1 view .LVU441
5232:rtos/uC-FS/FAT/fs_fat.c **** 
 1189              		.loc 1 5232 29 is_stmt 0 view .LVU442
 1190 00fe C5F820C0 		str	ip, [r5, #32]
5235:rtos/uC-FS/FAT/fs_fat.c ****     if (fat_size           ==  0u) {
 1191              		.loc 1 5235 5 is_stmt 1 view .LVU443
5235:rtos/uC-FS/FAT/fs_fat.c ****     if (fat_size           ==  0u) {
ARM GAS  /tmp/ccazZ5Hl.s 			page 134


 1192              		.loc 1 5235 47 is_stmt 0 view .LVU444
 1193 0102 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 1194 0104 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1195 0106 02EB0322 		add	r2, r2, r3, lsl #8
 1196 010a 92B2     		uxth	r2, r2
 1197              	.LVL83:
5236:rtos/uC-FS/FAT/fs_fat.c ****         fat_size            = (FS_FAT_SEC_NBR)MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp_08 + FS_FAT
 1198              		.loc 1 5236 5 is_stmt 1 view .LVU445
5236:rtos/uC-FS/FAT/fs_fat.c ****         fat_size            = (FS_FAT_SEC_NBR)MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp_08 + FS_FAT
 1199              		.loc 1 5236 8 is_stmt 0 view .LVU446
 1200 010c 6AB9     		cbnz	r2, .L76
5237:rtos/uC-FS/FAT/fs_fat.c ****     }
 1201              		.loc 1 5237 9 is_stmt 1 view .LVU447
5237:rtos/uC-FS/FAT/fs_fat.c ****     }
 1202              		.loc 1 5237 47 is_stmt 0 view .LVU448
 1203 010e 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
 1204              	.LVL84:
5237:rtos/uC-FS/FAT/fs_fat.c ****     }
 1205              		.loc 1 5237 47 view .LVU449
 1206 0112 94F82530 		ldrb	r3, [r4, #37]	@ zero_extendqisi2
 1207              	.LVL85:
5237:rtos/uC-FS/FAT/fs_fat.c ****     }
 1208              		.loc 1 5237 47 view .LVU450
 1209 0116 02EB0322 		add	r2, r2, r3, lsl #8
 1210 011a 94F82630 		ldrb	r3, [r4, #38]	@ zero_extendqisi2
 1211 011e 02EB0342 		add	r2, r2, r3, lsl #16
 1212 0122 94F82730 		ldrb	r3, [r4, #39]	@ zero_extendqisi2
5237:rtos/uC-FS/FAT/fs_fat.c ****     }
 1213              		.loc 1 5237 29 view .LVU451
 1214 0126 02EB0362 		add	r2, r2, r3, lsl #24
 1215              	.LVL86:
 1216              	.L76:
5239:rtos/uC-FS/FAT/fs_fat.c **** 
 1217              		.loc 1 5239 5 is_stmt 1 view .LVU452
5239:rtos/uC-FS/FAT/fs_fat.c **** 
 1218              		.loc 1 5239 29 is_stmt 0 view .LVU453
 1219 012a 6A60     		str	r2, [r5, #4]
5242:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->RootDirSize =  FS_UTIL_DIV_PWR2((((FS_FAT_SEC_NBR)root_cnt * 32u) + ((FS_FAT_SEC_NB
 1220              		.loc 1 5242 5 is_stmt 1 view .LVU454
5242:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->RootDirSize =  FS_UTIL_DIV_PWR2((((FS_FAT_SEC_NBR)root_cnt * 32u) + ((FS_FAT_SEC_NB
 1221              		.loc 1 5242 32 is_stmt 0 view .LVU455
 1222 012c 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1223 012e A17C     		ldrb	r1, [r4, #18]	@ zero_extendqisi2
5242:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->RootDirSize =  FS_UTIL_DIV_PWR2((((FS_FAT_SEC_NBR)root_cnt * 32u) + ((FS_FAT_SEC_NB
 1224              		.loc 1 5242 29 view .LVU456
 1225 0130 03EB0123 		add	r3, r3, r1, lsl #8
 1226 0134 9BB2     		uxth	r3, r3
 1227              	.LVL87:
5243:rtos/uC-FS/FAT/fs_fat.c **** 
 1228              		.loc 1 5243 5 is_stmt 1 view .LVU457
5243:rtos/uC-FS/FAT/fs_fat.c **** 
 1229              		.loc 1 5243 32 is_stmt 0 view .LVU458
 1230 0136 696B     		ldr	r1, [r5, #52]
 1231 0138 01EB4313 		add	r3, r1, r3, lsl #5
 1232              	.LVL88:
5243:rtos/uC-FS/FAT/fs_fat.c **** 
 1233              		.loc 1 5243 32 view .LVU459
ARM GAS  /tmp/ccazZ5Hl.s 			page 135


 1234 013c 013B     		subs	r3, r3, #1
 1235 013e 95F83800 		ldrb	r0, [r5, #56]	@ zero_extendqisi2
 1236 0142 23FA00F0 		lsr	r0, r3, r0
5243:rtos/uC-FS/FAT/fs_fat.c **** 
 1237              		.loc 1 5243 29 view .LVU460
 1238 0146 A860     		str	r0, [r5, #8]
 1239              	.LVL89:
5246:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT2_Start   =  p_fat_data->RsvdSize +  p_fat_data->FAT_Size;
 1240              		.loc 1 5246 5 is_stmt 1 view .LVU461
5246:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT2_Start   =  p_fat_data->RsvdSize +  p_fat_data->FAT_Size;
 1241              		.loc 1 5246 8 is_stmt 0 view .LVU462
 1242 0148 022F     		cmp	r7, #2
 1243 014a 3FD0     		beq	.L90
5251:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->RootDirStart =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 1u);
 1244              		.loc 1 5251 9 is_stmt 1 view .LVU463
5251:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->RootDirStart =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 1u);
 1245              		.loc 1 5251 34 is_stmt 0 view .LVU464
 1246 014c 0023     		movs	r3, #0
 1247 014e 6B62     		str	r3, [r5, #36]
5252:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->DataStart    =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 1u) + p_fat_data
 1248              		.loc 1 5252 9 is_stmt 1 view .LVU465
5252:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->DataStart    =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 1u) + p_fat_data
 1249              		.loc 1 5252 58 is_stmt 0 view .LVU466
 1250 0150 0CEB0203 		add	r3, ip, r2
5252:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->DataStart    =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 1u) + p_fat_data
 1251              		.loc 1 5252 34 view .LVU467
 1252 0154 AB62     		str	r3, [r5, #40]
5253:rtos/uC-FS/FAT/fs_fat.c ****     }
 1253              		.loc 1 5253 9 is_stmt 1 view .LVU468
5253:rtos/uC-FS/FAT/fs_fat.c ****     }
 1254              		.loc 1 5253 88 is_stmt 0 view .LVU469
 1255 0156 0344     		add	r3, r3, r0
5253:rtos/uC-FS/FAT/fs_fat.c ****     }
 1256              		.loc 1 5253 34 view .LVU470
 1257 0158 EB62     		str	r3, [r5, #44]
 1258              	.L78:
5257:rtos/uC-FS/FAT/fs_fat.c ****     if (vol_size           == 0u) {
 1259              		.loc 1 5257 5 is_stmt 1 view .LVU471
5257:rtos/uC-FS/FAT/fs_fat.c ****     if (vol_size           == 0u) {
 1260              		.loc 1 5257 43 is_stmt 0 view .LVU472
 1261 015a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 1262 015c 94F814E0 		ldrb	lr, [r4, #20]	@ zero_extendqisi2
 1263 0160 03EB0E23 		add	r3, r3, lr, lsl #8
 1264 0164 9BB2     		uxth	r3, r3
 1265              	.LVL90:
5258:rtos/uC-FS/FAT/fs_fat.c ****         vol_size            = MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB_OFF_TOTSEC3
 1266              		.loc 1 5258 5 is_stmt 1 view .LVU473
5258:rtos/uC-FS/FAT/fs_fat.c ****         vol_size            = MEM_VAL_GET_INT32U_LITTLE((void *)(p_temp_08 + FS_FAT_BPB_OFF_TOTSEC3
 1267              		.loc 1 5258 8 is_stmt 0 view .LVU474
 1268 0166 6BB9     		cbnz	r3, .L79
5259:rtos/uC-FS/FAT/fs_fat.c ****     }
 1269              		.loc 1 5259 9 is_stmt 1 view .LVU475
5259:rtos/uC-FS/FAT/fs_fat.c ****     }
 1270              		.loc 1 5259 31 is_stmt 0 view .LVU476
 1271 0168 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1272              	.LVL91:
5259:rtos/uC-FS/FAT/fs_fat.c ****     }
ARM GAS  /tmp/ccazZ5Hl.s 			page 136


 1273              		.loc 1 5259 31 view .LVU477
 1274 016c 94F821E0 		ldrb	lr, [r4, #33]	@ zero_extendqisi2
 1275              	.LVL92:
5259:rtos/uC-FS/FAT/fs_fat.c ****     }
 1276              		.loc 1 5259 31 view .LVU478
 1277 0170 03EB0E23 		add	r3, r3, lr, lsl #8
 1278 0174 94F822E0 		ldrb	lr, [r4, #34]	@ zero_extendqisi2
 1279 0178 03EB0E43 		add	r3, r3, lr, lsl #16
 1280 017c 94F823E0 		ldrb	lr, [r4, #35]	@ zero_extendqisi2
5259:rtos/uC-FS/FAT/fs_fat.c ****     }
 1281              		.loc 1 5259 29 view .LVU479
 1282 0180 03EB0E63 		add	r3, r3, lr, lsl #24
 1283              	.LVL93:
 1284              	.L79:
5261:rtos/uC-FS/FAT/fs_fat.c **** 
 1285              		.loc 1 5261 5 is_stmt 1 view .LVU480
5261:rtos/uC-FS/FAT/fs_fat.c **** 
 1286              		.loc 1 5261 29 is_stmt 0 view .LVU481
 1287 0184 EB60     		str	r3, [r5, #12]
5264:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->NextClusNbr =  2u;                              /* Next clus to alloc.             
 1288              		.loc 1 5264 5 is_stmt 1 view .LVU482
5264:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->NextClusNbr =  2u;                              /* Next clus to alloc.             
 1289              		.loc 1 5264 76 is_stmt 0 view .LVU483
 1290 0186 07FB02C7 		mla	r7, r7, r2, ip
5264:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->NextClusNbr =  2u;                              /* Next clus to alloc.             
 1291              		.loc 1 5264 52 view .LVU484
 1292 018a DB1B     		subs	r3, r3, r7
 1293              	.LVL94:
5264:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->NextClusNbr =  2u;                              /* Next clus to alloc.             
 1294              		.loc 1 5264 141 view .LVU485
 1295 018c 1B1A     		subs	r3, r3, r0
5264:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->NextClusNbr =  2u;                              /* Next clus to alloc.             
 1296              		.loc 1 5264 29 view .LVU486
 1297 018e 2B61     		str	r3, [r5, #16]
5265:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Notes #2c3.                 
 1298              		.loc 1 5265 5 is_stmt 1 view .LVU487
5265:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* See Notes #2c3.                 
 1299              		.loc 1 5265 29 is_stmt 0 view .LVU488
 1300 0190 0220     		movs	r0, #2
 1301 0192 2863     		str	r0, [r5, #48]
5267:rtos/uC-FS/FAT/fs_fat.c **** 
 1302              		.loc 1 5267 5 is_stmt 1 view .LVU489
5267:rtos/uC-FS/FAT/fs_fat.c **** 
 1303              		.loc 1 5267 49 is_stmt 0 view .LVU490
 1304 0194 95F84000 		ldrb	r0, [r5, #64]	@ zero_extendqisi2
5267:rtos/uC-FS/FAT/fs_fat.c **** 
 1305              		.loc 1 5267 29 view .LVU491
 1306 0198 C340     		lsrs	r3, r3, r0
 1307              	.LVL95:
5272:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT12_EN == DEF_ENABLED)
 1308              		.loc 1 5272 5 is_stmt 1 view .LVU492
5272:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT12_EN == DEF_ENABLED)
 1309              		.loc 1 5272 8 is_stmt 0 view .LVU493
 1310 019a 40F6F477 		movw	r7, #4084
 1311 019e BB42     		cmp	r3, r7
 1312 01a0 1DD8     		bhi	.L80
5274:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr = &FS_FAT_FAT12_API;
ARM GAS  /tmp/ccazZ5Hl.s 			page 137


 1313              		.loc 1 5274 9 is_stmt 1 view .LVU494
5274:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr = &FS_FAT_FAT12_API;
 1314              		.loc 1 5274 37 is_stmt 0 view .LVU495
 1315 01a2 0C20     		movs	r0, #12
 1316 01a4 85F84A00 		strb	r0, [r5, #74]
5275:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_max_fat            = ((FS_FAT_CLUS_NBR)p_fat_data->FAT_Size * (FS_FAT_CLUS_NBR)p_f
 1317              		.loc 1 5275 9 is_stmt 1 view .LVU496
5275:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_max_fat            = ((FS_FAT_CLUS_NBR)p_fat_data->FAT_Size * (FS_FAT_CLUS_NBR)p_f
 1318              		.loc 1 5275 37 is_stmt 0 view .LVU497
 1319 01a8 3648     		ldr	r0, .L91
 1320 01aa E864     		str	r0, [r5, #76]
5276:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      =  DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + F
 1321              		.loc 1 5276 9 is_stmt 1 view .LVU498
5276:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      =  DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + F
 1322              		.loc 1 5276 78 is_stmt 0 view .LVU499
 1323 01ac 02FB01F2 		mul	r2, r2, r1
 1324              	.LVL96:
5276:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      =  DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + F
 1325              		.loc 1 5276 117 view .LVU500
 1326 01b0 5200     		lsls	r2, r2, #1
5276:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      =  DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + F
 1327              		.loc 1 5276 37 view .LVU501
 1328 01b2 3549     		ldr	r1, .L91+4
 1329 01b4 A1FB0212 		umull	r1, r2, r1, r2
 1330 01b8 5208     		lsrs	r2, r2, #1
 1331              	.LVL97:
5277:rtos/uC-FS/FAT/fs_fat.c **** #else
 1332              		.loc 1 5277 9 is_stmt 1 view .LVU502
5277:rtos/uC-FS/FAT/fs_fat.c **** #else
 1333              		.loc 1 5277 40 is_stmt 0 view .LVU503
 1334 01ba 0232     		adds	r2, r2, #2
 1335              	.LVL98:
5277:rtos/uC-FS/FAT/fs_fat.c **** #else
 1336              		.loc 1 5277 40 view .LVU504
 1337 01bc 0233     		adds	r3, r3, #2
 1338              	.LVL99:
5277:rtos/uC-FS/FAT/fs_fat.c **** #else
 1339              		.loc 1 5277 40 view .LVU505
 1340 01be 9342     		cmp	r3, r2
 1341 01c0 28BF     		it	cs
 1342 01c2 1346     		movcs	r3, r2
 1343              	.LVL100:
5277:rtos/uC-FS/FAT/fs_fat.c **** #else
 1344              		.loc 1 5277 37 view .LVU506
 1345 01c4 6B61     		str	r3, [r5, #20]
 1346              	.LVL101:
 1347              	.L81:
5333:rtos/uC-FS/FAT/fs_fat.c **** }
 1348              		.loc 1 5333 4 is_stmt 1 view .LVU507
5333:rtos/uC-FS/FAT/fs_fat.c **** }
 1349              		.loc 1 5333 11 is_stmt 0 view .LVU508
 1350 01c6 0023     		movs	r3, #0
 1351 01c8 3380     		strh	r3, [r6]	@ movhi
 1352              	.LVL102:
5333:rtos/uC-FS/FAT/fs_fat.c **** }
 1353              		.loc 1 5333 11 view .LVU509
 1354 01ca 51E7     		b	.L61
ARM GAS  /tmp/ccazZ5Hl.s 			page 138


 1355              	.LVL103:
 1356              	.L90:
5247:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->RootDirStart =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 2u);
 1357              		.loc 1 5247 9 is_stmt 1 view .LVU510
5247:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->RootDirStart =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 2u);
 1358              		.loc 1 5247 58 is_stmt 0 view .LVU511
 1359 01cc 0CEB0203 		add	r3, ip, r2
5247:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->RootDirStart =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 2u);
 1360              		.loc 1 5247 34 view .LVU512
 1361 01d0 6B62     		str	r3, [r5, #36]
5248:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->DataStart    =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 2u) + p_fat_data
 1362              		.loc 1 5248 9 is_stmt 1 view .LVU513
5248:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->DataStart    =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 2u) + p_fat_data
 1363              		.loc 1 5248 58 is_stmt 0 view .LVU514
 1364 01d2 0CEB4203 		add	r3, ip, r2, lsl #1
5248:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->DataStart    =  p_fat_data->RsvdSize + (p_fat_data->FAT_Size * 2u) + p_fat_data
 1365              		.loc 1 5248 34 view .LVU515
 1366 01d6 AB62     		str	r3, [r5, #40]
5249:rtos/uC-FS/FAT/fs_fat.c ****     } else {
 1367              		.loc 1 5249 9 is_stmt 1 view .LVU516
5249:rtos/uC-FS/FAT/fs_fat.c ****     } else {
 1368              		.loc 1 5249 88 is_stmt 0 view .LVU517
 1369 01d8 0344     		add	r3, r3, r0
5249:rtos/uC-FS/FAT/fs_fat.c ****     } else {
 1370              		.loc 1 5249 34 view .LVU518
 1371 01da EB62     		str	r3, [r5, #44]
 1372 01dc BDE7     		b	.L78
 1373              	.LVL104:
 1374              	.L80:
5286:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT16_EN == DEF_ENABLED)
 1375              		.loc 1 5286 12 is_stmt 1 view .LVU519
5286:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT16_EN == DEF_ENABLED)
 1376              		.loc 1 5286 15 is_stmt 0 view .LVU520
 1377 01de 4FF6F477 		movw	r7, #65524
 1378 01e2 BB42     		cmp	r3, r7
 1379 01e4 0ED8     		bhi	.L82
5288:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr = &FS_FAT_FAT16_API;
 1380              		.loc 1 5288 9 is_stmt 1 view .LVU521
5288:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr = &FS_FAT_FAT16_API;
 1381              		.loc 1 5288 37 is_stmt 0 view .LVU522
 1382 01e6 1020     		movs	r0, #16
 1383 01e8 85F84A00 		strb	r0, [r5, #74]
5289:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_max_fat            = (FS_FAT_CLUS_NBR)p_fat_data->FAT_Size * ((FS_FAT_CLUS_NBR)p_f
 1384              		.loc 1 5289 9 is_stmt 1 view .LVU523
5289:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_max_fat            = (FS_FAT_CLUS_NBR)p_fat_data->FAT_Size * ((FS_FAT_CLUS_NBR)p_f
 1385              		.loc 1 5289 37 is_stmt 0 view .LVU524
 1386 01ec 2748     		ldr	r0, .L91+8
 1387 01ee E864     		str	r0, [r5, #76]
5290:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      =  DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + F
 1388              		.loc 1 5290 9 is_stmt 1 view .LVU525
5290:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      =  DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + F
 1389              		.loc 1 5290 117 is_stmt 0 view .LVU526
 1390 01f0 4908     		lsrs	r1, r1, #1
5290:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      =  DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + F
 1391              		.loc 1 5290 37 view .LVU527
 1392 01f2 02FB01F2 		mul	r2, r2, r1
 1393              	.LVL105:
ARM GAS  /tmp/ccazZ5Hl.s 			page 139


5291:rtos/uC-FS/FAT/fs_fat.c **** #else
 1394              		.loc 1 5291 9 is_stmt 1 view .LVU528
5291:rtos/uC-FS/FAT/fs_fat.c **** #else
 1395              		.loc 1 5291 40 is_stmt 0 view .LVU529
 1396 01f6 0232     		adds	r2, r2, #2
 1397              	.LVL106:
5291:rtos/uC-FS/FAT/fs_fat.c **** #else
 1398              		.loc 1 5291 40 view .LVU530
 1399 01f8 0233     		adds	r3, r3, #2
 1400              	.LVL107:
5291:rtos/uC-FS/FAT/fs_fat.c **** #else
 1401              		.loc 1 5291 40 view .LVU531
 1402 01fa 9342     		cmp	r3, r2
 1403 01fc 28BF     		it	cs
 1404 01fe 1346     		movcs	r3, r2
 1405              	.LVL108:
5291:rtos/uC-FS/FAT/fs_fat.c **** #else
 1406              		.loc 1 5291 37 view .LVU532
 1407 0200 6B61     		str	r3, [r5, #20]
 1408 0202 E0E7     		b	.L81
 1409              	.LVL109:
 1410              	.L82:
5302:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr = &FS_FAT_FAT32_API;
 1411              		.loc 1 5302 9 is_stmt 1 view .LVU533
5302:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->FAT_TypeAPI_Ptr = &FS_FAT_FAT32_API;
 1412              		.loc 1 5302 37 is_stmt 0 view .LVU534
 1413 0204 2027     		movs	r7, #32
 1414 0206 85F84A70 		strb	r7, [r5, #74]
5303:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_max_fat            = (FS_FAT_CLUS_NBR)p_fat_data->FAT_Size * ((FS_FAT_CLUS_NBR)p_f
 1415              		.loc 1 5303 9 is_stmt 1 view .LVU535
5303:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_max_fat            = (FS_FAT_CLUS_NBR)p_fat_data->FAT_Size * ((FS_FAT_CLUS_NBR)p_f
 1416              		.loc 1 5303 37 is_stmt 0 view .LVU536
 1417 020a 214F     		ldr	r7, .L91+12
 1418 020c EF64     		str	r7, [r5, #76]
5304:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      = DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + FS
 1419              		.loc 1 5304 9 is_stmt 1 view .LVU537
5304:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      = DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + FS
 1420              		.loc 1 5304 117 is_stmt 0 view .LVU538
 1421 020e 8908     		lsrs	r1, r1, #2
5304:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->MaxClusNbr      = DEF_MIN(clus_cnt + FS_FAT_MIN_CLUS_NBR, clus_cnt_max_fat + FS
 1422              		.loc 1 5304 37 view .LVU539
 1423 0210 02FB01F2 		mul	r2, r2, r1
 1424              	.LVL110:
5305:rtos/uC-FS/FAT/fs_fat.c **** 
 1425              		.loc 1 5305 9 is_stmt 1 view .LVU540
5305:rtos/uC-FS/FAT/fs_fat.c **** 
 1426              		.loc 1 5305 39 is_stmt 0 view .LVU541
 1427 0214 0232     		adds	r2, r2, #2
 1428              	.LVL111:
5305:rtos/uC-FS/FAT/fs_fat.c **** 
 1429              		.loc 1 5305 39 view .LVU542
 1430 0216 0233     		adds	r3, r3, #2
 1431              	.LVL112:
5305:rtos/uC-FS/FAT/fs_fat.c **** 
 1432              		.loc 1 5305 39 view .LVU543
 1433 0218 9342     		cmp	r3, r2
 1434 021a 28BF     		it	cs
ARM GAS  /tmp/ccazZ5Hl.s 			page 140


 1435 021c 1346     		movcs	r3, r2
 1436              	.LVL113:
5305:rtos/uC-FS/FAT/fs_fat.c **** 
 1437              		.loc 1 5305 37 view .LVU544
 1438 021e 6B61     		str	r3, [r5, #20]
5308:rtos/uC-FS/FAT/fs_fat.c ****         valid                       = FS_FAT_IS_VALID_CLUS(p_fat_data, clus_nbr);
 1439              		.loc 1 5308 9 is_stmt 1 view .LVU545
5308:rtos/uC-FS/FAT/fs_fat.c ****         valid                       = FS_FAT_IS_VALID_CLUS(p_fat_data, clus_nbr);
 1440              		.loc 1 5308 39 is_stmt 0 view .LVU546
 1441 0220 94F82C20 		ldrb	r2, [r4, #44]	@ zero_extendqisi2
 1442              	.LVL114:
5308:rtos/uC-FS/FAT/fs_fat.c ****         valid                       = FS_FAT_IS_VALID_CLUS(p_fat_data, clus_nbr);
 1443              		.loc 1 5308 39 view .LVU547
 1444 0224 94F82D10 		ldrb	r1, [r4, #45]	@ zero_extendqisi2
 1445              	.LVL115:
5308:rtos/uC-FS/FAT/fs_fat.c ****         valid                       = FS_FAT_IS_VALID_CLUS(p_fat_data, clus_nbr);
 1446              		.loc 1 5308 39 view .LVU548
 1447 0228 02EB0122 		add	r2, r2, r1, lsl #8
 1448 022c 94F82E10 		ldrb	r1, [r4, #46]	@ zero_extendqisi2
 1449 0230 02EB0142 		add	r2, r2, r1, lsl #16
 1450 0234 94F82F10 		ldrb	r1, [r4, #47]	@ zero_extendqisi2
5308:rtos/uC-FS/FAT/fs_fat.c ****         valid                       = FS_FAT_IS_VALID_CLUS(p_fat_data, clus_nbr);
 1451              		.loc 1 5308 37 view .LVU549
 1452 0238 02EB0162 		add	r2, r2, r1, lsl #24
 1453              	.LVL116:
5309:rtos/uC-FS/FAT/fs_fat.c ****         if (valid == DEF_NO) {
 1454              		.loc 1 5309 9 is_stmt 1 view .LVU550
5309:rtos/uC-FS/FAT/fs_fat.c ****         if (valid == DEF_NO) {
 1455              		.loc 1 5309 37 is_stmt 0 view .LVU551
 1456 023c 9342     		cmp	r3, r2
 1457 023e 1AD9     		bls	.L83
5309:rtos/uC-FS/FAT/fs_fat.c ****         if (valid == DEF_NO) {
 1458              		.loc 1 5309 39 discriminator 1 view .LVU552
 1459 0240 012A     		cmp	r2, #1
 1460 0242 18D9     		bls	.L83
 1461              	.LVL117:
5310:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid FAT32 root dir clus: %d\n", clus_nbr));
 1462              		.loc 1 5310 9 is_stmt 1 view .LVU553
5315:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Get FSINFO sec nbr.             
 1463              		.loc 1 5315 9 view .LVU554
5315:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Get FSINFO sec nbr.             
 1464              		.loc 1 5315 40 is_stmt 0 view .LVU555
 1465 0244 EB6A     		ldr	r3, [r5, #44]
 1466 0246 023A     		subs	r2, r2, #2
 1467              	.LVL118:
5315:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Get FSINFO sec nbr.             
 1468              		.loc 1 5315 40 view .LVU556
 1469 0248 02FA00F0 		lsl	r0, r2, r0
 1470              	.LVL119:
5315:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Get FSINFO sec nbr.             
 1471              		.loc 1 5315 40 view .LVU557
 1472 024c 1844     		add	r0, r0, r3
5315:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Get FSINFO sec nbr.             
 1473              		.loc 1 5315 38 view .LVU558
 1474 024e A862     		str	r0, [r5, #40]
5317:rtos/uC-FS/FAT/fs_fat.c ****         if (sec_nbr != 0u) {
 1475              		.loc 1 5317 9 is_stmt 1 view .LVU559
ARM GAS  /tmp/ccazZ5Hl.s 			page 141


5317:rtos/uC-FS/FAT/fs_fat.c ****         if (sec_nbr != 0u) {
 1476              		.loc 1 5317 40 is_stmt 0 view .LVU560
 1477 0250 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1478 0254 94F83120 		ldrb	r2, [r4, #49]	@ zero_extendqisi2
 1479              	.LVL120:
5317:rtos/uC-FS/FAT/fs_fat.c ****         if (sec_nbr != 0u) {
 1480              		.loc 1 5317 38 view .LVU561
 1481 0258 03EB0223 		add	r3, r3, r2, lsl #8
 1482 025c 9BB2     		uxth	r3, r3
 1483              	.LVL121:
5318:rtos/uC-FS/FAT/fs_fat.c ****             p_fat_data->FS_InfoStart = (FS_FAT_SEC_NBR)sec_nbr;
 1484              		.loc 1 5318 9 is_stmt 1 view .LVU562
5318:rtos/uC-FS/FAT/fs_fat.c ****             p_fat_data->FS_InfoStart = (FS_FAT_SEC_NBR)sec_nbr;
 1485              		.loc 1 5318 12 is_stmt 0 view .LVU563
 1486 025e 73B9     		cbnz	r3, .L84
 1487              	.L85:
5322:rtos/uC-FS/FAT/fs_fat.c ****         if (sec_nbr != 0u) {
 1488              		.loc 1 5322 9 is_stmt 1 view .LVU564
5322:rtos/uC-FS/FAT/fs_fat.c ****         if (sec_nbr != 0u) {
 1489              		.loc 1 5322 40 is_stmt 0 view .LVU565
 1490 0260 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 1491              	.LVL122:
5322:rtos/uC-FS/FAT/fs_fat.c ****         if (sec_nbr != 0u) {
 1492              		.loc 1 5322 40 view .LVU566
 1493 0264 94F83320 		ldrb	r2, [r4, #51]	@ zero_extendqisi2
5322:rtos/uC-FS/FAT/fs_fat.c ****         if (sec_nbr != 0u) {
 1494              		.loc 1 5322 38 view .LVU567
 1495 0268 03EB0223 		add	r3, r3, r2, lsl #8
 1496 026c 9BB2     		uxth	r3, r3
 1497              	.LVL123:
5323:rtos/uC-FS/FAT/fs_fat.c ****             p_fat_data->BPB_BkStart  = (FS_FAT_SEC_NBR)sec_nbr;
 1498              		.loc 1 5323 9 is_stmt 1 view .LVU568
5323:rtos/uC-FS/FAT/fs_fat.c ****             p_fat_data->BPB_BkStart  = (FS_FAT_SEC_NBR)sec_nbr;
 1499              		.loc 1 5323 12 is_stmt 0 view .LVU569
 1500 026e 002B     		cmp	r3, #0
 1501 0270 A9D0     		beq	.L81
5324:rtos/uC-FS/FAT/fs_fat.c ****         }
 1502              		.loc 1 5324 13 is_stmt 1 view .LVU570
5324:rtos/uC-FS/FAT/fs_fat.c ****         }
 1503              		.loc 1 5324 38 is_stmt 0 view .LVU571
 1504 0272 EB61     		str	r3, [r5, #28]
 1505 0274 A7E7     		b	.L81
 1506              	.LVL124:
 1507              	.L83:
5310:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ChkBootSec(): Invalid FAT32 root dir clus: %d\n", clus_nbr));
 1508              		.loc 1 5310 9 is_stmt 1 view .LVU572
5311:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SYS;
 1509              		.loc 1 5311 95 view .LVU573
5312:rtos/uC-FS/FAT/fs_fat.c ****             return;
 1510              		.loc 1 5312 12 view .LVU574
5312:rtos/uC-FS/FAT/fs_fat.c ****             return;
 1511              		.loc 1 5312 19 is_stmt 0 view .LVU575
 1512 0276 40F27F53 		movw	r3, #1407
 1513 027a 3380     		strh	r3, [r6]	@ movhi
 1514              	.LVL125:
5313:rtos/uC-FS/FAT/fs_fat.c ****         }
 1515              		.loc 1 5313 13 is_stmt 1 view .LVU576
ARM GAS  /tmp/ccazZ5Hl.s 			page 142


 1516 027c F8E6     		b	.L61
 1517              	.LVL126:
 1518              	.L84:
5319:rtos/uC-FS/FAT/fs_fat.c ****         }
 1519              		.loc 1 5319 13 view .LVU577
5319:rtos/uC-FS/FAT/fs_fat.c ****         }
 1520              		.loc 1 5319 38 is_stmt 0 view .LVU578
 1521 027e AB61     		str	r3, [r5, #24]
 1522 0280 EEE7     		b	.L85
 1523              	.L92:
 1524 0282 00BF     		.align	2
 1525              	.L91:
 1526 0284 00000000 		.word	FS_FAT_FAT12_API
 1527 0288 ABAAAAAA 		.word	-1431655765
 1528 028c 00000000 		.word	FS_FAT_FAT16_API
 1529 0290 00000000 		.word	FS_FAT_FAT32_API
 1530              		.cfi_endproc
 1531              	.LFE34:
 1533              		.section	.text.FS_FAT_ClusChainDel,"ax",%progbits
 1534              		.align	1
 1535              		.global	FS_FAT_ClusChainDel
 1536              		.syntax unified
 1537              		.thumb
 1538              		.thumb_func
 1539              		.fpu fpv4-sp-d16
 1541              	FS_FAT_ClusChainDel:
 1542              	.LVL127:
 1543              	.LFB1:
 915:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 1544              		.loc 1 915 1 is_stmt 1 view -0
 1545              		.cfi_startproc
 1546              		@ args = 4, pretend = 0, frame = 8
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 915:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 1548              		.loc 1 915 1 is_stmt 0 view .LVU580
 1549 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1550              	.LCFI8:
 1551              		.cfi_def_cfa_offset 36
 1552              		.cfi_offset 4, -36
 1553              		.cfi_offset 5, -32
 1554              		.cfi_offset 6, -28
 1555              		.cfi_offset 7, -24
 1556              		.cfi_offset 8, -20
 1557              		.cfi_offset 9, -16
 1558              		.cfi_offset 10, -12
 1559              		.cfi_offset 11, -8
 1560              		.cfi_offset 14, -4
 1561 0004 85B0     		sub	sp, sp, #20
 1562              	.LCFI9:
 1563              		.cfi_def_cfa_offset 56
 1564 0006 0293     		str	r3, [sp, #8]
 1565 0008 0E9E     		ldr	r6, [sp, #56]
 916:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
 1566              		.loc 1 916 5 is_stmt 1 view .LVU581
 917:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 1567              		.loc 1 917 5 view .LVU582
 918:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus_cnt;
ARM GAS  /tmp/ccazZ5Hl.s 			page 143


 1568              		.loc 1 918 5 view .LVU583
 919:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    cur_sec;
 1569              		.loc 1 919 5 view .LVU584
 920:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   new_fat_entry;
 1570              		.loc 1 920 5 view .LVU585
 921:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       del;
 1571              		.loc 1 921 5 view .LVU586
 922:rtos/uC-FS/FAT/fs_fat.c **** #ifdef  FS_FAT_JOURNAL_MODULE_PRESENT
 1572              		.loc 1 922 5 view .LVU587
 928:rtos/uC-FS/FAT/fs_fat.c ****     del         =  del_first;
 1573              		.loc 1 928 5 view .LVU588
 928:rtos/uC-FS/FAT/fs_fat.c ****     del         =  del_first;
 1574              		.loc 1 928 17 is_stmt 0 view .LVU589
 1575 000a 456B     		ldr	r5, [r0, #52]
 1576              	.LVL128:
 929:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus    =  start_clus;
 1577              		.loc 1 929 5 is_stmt 1 view .LVU590
 930:rtos/uC-FS/FAT/fs_fat.c ****    *p_err       =  FS_ERR_NONE;
 1578              		.loc 1 930 5 view .LVU591
 931:rtos/uC-FS/FAT/fs_fat.c **** 
 1579              		.loc 1 931 4 view .LVU592
 931:rtos/uC-FS/FAT/fs_fat.c **** 
 1580              		.loc 1 931 17 is_stmt 0 view .LVU593
 1581 000c 0023     		movs	r3, #0
 1582              	.LVL129:
 931:rtos/uC-FS/FAT/fs_fat.c **** 
 1583              		.loc 1 931 17 view .LVU594
 1584 000e 3380     		strh	r3, [r6]	@ movhi
 935:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainDel(): Invalid start clus.\r\n"));
 1585              		.loc 1 935 5 is_stmt 1 view .LVU595
 935:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainDel(): Invalid start clus.\r\n"));
 1586              		.loc 1 935 9 is_stmt 0 view .LVU596
 1587 0010 6B69     		ldr	r3, [r5, #20]
 935:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainDel(): Invalid start clus.\r\n"));
 1588              		.loc 1 935 8 view .LVU597
 1589 0012 9342     		cmp	r3, r2
 1590 0014 07D9     		bls	.L94
 1591 0016 0746     		mov	r7, r0
 1592 0018 8846     		mov	r8, r1
 1593 001a 1446     		mov	r4, r2
 935:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainDel(): Invalid start clus.\r\n"));
 1594              		.loc 1 935 54 discriminator 1 view .LVU598
 1595 001c 012A     		cmp	r2, #1
 1596 001e 02D9     		bls	.L94
 972:rtos/uC-FS/FAT/fs_fat.c ****     do {
 1597              		.loc 1 972 14 view .LVU599
 1598 0020 0023     		movs	r3, #0
 1599 0022 0393     		str	r3, [sp, #12]
 1600 0024 30E0     		b	.L95
 1601              	.L94:
 936:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
 1602              		.loc 1 936 73 is_stmt 1 view .LVU600
 937:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 1603              		.loc 1 937 8 view .LVU601
 937:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 1604              		.loc 1 937 15 is_stmt 0 view .LVU602
 1605 0026 0A23     		movs	r3, #10
ARM GAS  /tmp/ccazZ5Hl.s 			page 144


 1606 0028 3380     		strh	r3, [r6]	@ movhi
 938:rtos/uC-FS/FAT/fs_fat.c ****     }
 1607              		.loc 1 938 9 is_stmt 1 view .LVU603
 938:rtos/uC-FS/FAT/fs_fat.c ****     }
 1608              		.loc 1 938 16 is_stmt 0 view .LVU604
 1609 002a 0023     		movs	r3, #0
 1610 002c 0393     		str	r3, [sp, #12]
 1611              	.LVL130:
 1612              	.L93:
1033:rtos/uC-FS/FAT/fs_fat.c **** #endif
 1613              		.loc 1 1033 1 view .LVU605
 1614 002e 0398     		ldr	r0, [sp, #12]
 1615 0030 05B0     		add	sp, sp, #20
 1616              	.LCFI10:
 1617              		.cfi_remember_state
 1618              		.cfi_def_cfa_offset 36
 1619              		@ sp needed
 1620 0032 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1621              	.LVL131:
 1622              	.L97:
 1623              	.LCFI11:
 1624              		.cfi_restore_state
 989:rtos/uC-FS/FAT/fs_fat.c ****             cur_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, cur_clus);     /*                   ... set to
 1625              		.loc 1 989 13 is_stmt 1 view .LVU606
 989:rtos/uC-FS/FAT/fs_fat.c ****             cur_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, cur_clus);     /*                   ... set to
 1626              		.loc 1 989 39 is_stmt 0 view .LVU607
 1627 0036 EB6C     		ldr	r3, [r5, #76]
 989:rtos/uC-FS/FAT/fs_fat.c ****             cur_sec = FS_FAT_CLUS_TO_SEC(p_fat_data, cur_clus);     /*                   ... set to
 1628              		.loc 1 989 27 view .LVU608
 1629 0038 D3F810A0 		ldr	r10, [r3, #16]
 1630              	.LVL132:
 990:rtos/uC-FS/FAT/fs_fat.c **** 
 1631              		.loc 1 990 13 is_stmt 1 view .LVU609
 990:rtos/uC-FS/FAT/fs_fat.c **** 
 1632              		.loc 1 990 23 is_stmt 0 view .LVU610
 1633 003c E86A     		ldr	r0, [r5, #44]
 1634              	.LVL133:
 990:rtos/uC-FS/FAT/fs_fat.c **** 
 1635              		.loc 1 990 23 view .LVU611
 1636 003e A9F10201 		sub	r1, r9, #2
 1637 0042 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 1638 0046 9940     		lsls	r1, r1, r3
 1639              	.LVL134:
 992:rtos/uC-FS/FAT/fs_fat.c ****                                 cur_sec,
 1640              		.loc 1 992 13 is_stmt 1 view .LVU612
 1641 0048 3346     		mov	r3, r6
 1642 004a EA6B     		ldr	r2, [r5, #60]
 1643 004c 0144     		add	r1, r1, r0
 1644              	.LVL135:
 992:rtos/uC-FS/FAT/fs_fat.c ****                                 cur_sec,
 1645              		.loc 1 992 13 is_stmt 0 view .LVU613
 1646 004e 3846     		mov	r0, r7
 1647 0050 FFF7FEFF 		bl	FSVol_ReleaseLocked
 1648              	.LVL136:
 997:rtos/uC-FS/FAT/fs_fat.c ****                 return (0u);
 1649              		.loc 1 997 13 is_stmt 1 view .LVU614
 997:rtos/uC-FS/FAT/fs_fat.c ****                 return (0u);
ARM GAS  /tmp/ccazZ5Hl.s 			page 145


 1650              		.loc 1 997 17 is_stmt 0 view .LVU615
 1651 0054 3388     		ldrh	r3, [r6]
 997:rtos/uC-FS/FAT/fs_fat.c ****                 return (0u);
 1652              		.loc 1 997 16 view .LVU616
 1653 0056 002B     		cmp	r3, #0
 1654 0058 35D1     		bne	.L103
1001:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->QueryFreeClusCnt++;
 1655              		.loc 1 1001 13 is_stmt 1 view .LVU617
1001:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->QueryFreeClusCnt++;
 1656              		.loc 1 1001 27 is_stmt 0 view .LVU618
 1657 005a 95F85030 		ldrb	r3, [r5, #80]	@ zero_extendqisi2
1001:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->QueryFreeClusCnt++;
 1658              		.loc 1 1001 16 view .LVU619
 1659 005e 012B     		cmp	r3, #1
 1660 0060 27D0     		beq	.L106
 1661              	.L99:
1005:rtos/uC-FS/FAT/fs_fat.c ****             clus_cnt++;                                         /* Inc del clus cnt.               
 1662              		.loc 1 1005 57 is_stmt 1 view .LVU620
1006:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus free'd: %d.\r\n", cur_clus));
 1663              		.loc 1 1006 13 view .LVU621
1006:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus free'd: %d.\r\n", cur_clus));
 1664              		.loc 1 1006 21 is_stmt 0 view .LVU622
 1665 0062 039B     		ldr	r3, [sp, #12]
 1666 0064 0133     		adds	r3, r3, #1
 1667 0066 0393     		str	r3, [sp, #12]
 1668              	.LVL137:
 1669              	.L98:
1007:rtos/uC-FS/FAT/fs_fat.c ****         }
 1670              		.loc 1 1007 88 is_stmt 1 view .LVU623
1010:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 1671              		.loc 1 1010 9 view .LVU624
1010:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 1672              		.loc 1 1010 19 is_stmt 0 view .LVU625
 1673 0068 EB6C     		ldr	r3, [r5, #76]
1010:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 1674              		.loc 1 1010 36 view .LVU626
 1675 006a D3F800B0 		ldr	fp, [r3]
1010:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 1676              		.loc 1 1010 9 view .LVU627
 1677 006e 0096     		str	r6, [sp]
 1678 0070 5346     		mov	r3, r10
 1679 0072 4A46     		mov	r2, r9
 1680 0074 4146     		mov	r1, r8
 1681 0076 3846     		mov	r0, r7
 1682 0078 D847     		blx	fp
 1683              	.LVL138:
1015:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 1684              		.loc 1 1015 9 is_stmt 1 view .LVU628
1015:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 1685              		.loc 1 1015 13 is_stmt 0 view .LVU629
 1686 007a 3388     		ldrh	r3, [r6]
1015:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 1687              		.loc 1 1015 12 view .LVU630
 1688 007c 33BB     		cbnz	r3, .L104
1019:rtos/uC-FS/FAT/fs_fat.c **** 
 1689              		.loc 1 1019 9 is_stmt 1 view .LVU631
 1690              	.LVL139:
ARM GAS  /tmp/ccazZ5Hl.s 			page 146


1021:rtos/uC-FS/FAT/fs_fat.c **** 
 1691              		.loc 1 1021 13 view .LVU632
1021:rtos/uC-FS/FAT/fs_fat.c **** 
 1692              		.loc 1 1021 14 is_stmt 0 view .LVU633
 1693 007e 6B69     		ldr	r3, [r5, #20]
1021:rtos/uC-FS/FAT/fs_fat.c **** 
 1694              		.loc 1 1021 5 view .LVU634
 1695 0080 A342     		cmp	r3, r4
 1696 0082 1AD9     		bls	.L100
1021:rtos/uC-FS/FAT/fs_fat.c **** 
 1697              		.loc 1 1021 57 discriminator 1 view .LVU635
 1698 0084 012C     		cmp	r4, #1
 1699 0086 18D9     		bls	.L100
 1700              	.LVL140:
 1701              	.L95:
 973:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rd next FAT entry.              
 1702              		.loc 1 973 5 is_stmt 1 view .LVU636
 975:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 1703              		.loc 1 975 9 view .LVU637
 975:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 1704              		.loc 1 975 31 is_stmt 0 view .LVU638
 1705 0088 EB6C     		ldr	r3, [r5, #76]
 975:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 1706              		.loc 1 975 48 view .LVU639
 1707 008a D3F804A0 		ldr	r10, [r3, #4]
 1708 008e A146     		mov	r9, r4
 975:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 1709              		.loc 1 975 21 view .LVU640
 1710 0090 3346     		mov	r3, r6
 1711 0092 2246     		mov	r2, r4
 1712 0094 4146     		mov	r1, r8
 1713 0096 3846     		mov	r0, r7
 1714 0098 D047     		blx	r10
 1715              	.LVL141:
 1716 009a 0446     		mov	r4, r0
 1717              	.LVL142:
 979:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 1718              		.loc 1 979 9 is_stmt 1 view .LVU641
 979:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 1719              		.loc 1 979 13 is_stmt 0 view .LVU642
 1720 009c 3388     		ldrh	r3, [r6]
 979:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 1721              		.loc 1 979 12 view .LVU643
 1722 009e 7BB9     		cbnz	r3, .L102
 983:rtos/uC-FS/FAT/fs_fat.c ****             del = DEF_YES;
 1723              		.loc 1 983 9 is_stmt 1 view .LVU644
 983:rtos/uC-FS/FAT/fs_fat.c ****             del = DEF_YES;
 1724              		.loc 1 983 12 is_stmt 0 view .LVU645
 1725 00a0 029B     		ldr	r3, [sp, #8]
 1726 00a2 002B     		cmp	r3, #0
 1727 00a4 C7D1     		bne	.L97
 984:rtos/uC-FS/FAT/fs_fat.c ****             new_fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusEOF;   /*                             
 1728              		.loc 1 984 13 is_stmt 1 view .LVU646
 1729              	.LVL143:
 985:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus mark'd as EOC: %d.\r\n", cur_clus));
 1730              		.loc 1 985 13 view .LVU647
 985:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus mark'd as EOC: %d.\r\n", cur_clus));
ARM GAS  /tmp/ccazZ5Hl.s 			page 147


 1731              		.loc 1 985 39 is_stmt 0 view .LVU648
 1732 00a6 EB6C     		ldr	r3, [r5, #76]
 985:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus mark'd as EOC: %d.\r\n", cur_clus));
 1733              		.loc 1 985 27 view .LVU649
 1734 00a8 D3F80CA0 		ldr	r10, [r3, #12]
 1735              	.LVL144:
 986:rtos/uC-FS/FAT/fs_fat.c **** 
 1736              		.loc 1 986 95 is_stmt 1 view .LVU650
 984:rtos/uC-FS/FAT/fs_fat.c ****             new_fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusEOF;   /*                             
 1737              		.loc 1 984 17 is_stmt 0 view .LVU651
 1738 00ac 0123     		movs	r3, #1
 1739 00ae 0293     		str	r3, [sp, #8]
 1740 00b0 DAE7     		b	.L98
 1741              	.LVL145:
 1742              	.L106:
1002:rtos/uC-FS/FAT/fs_fat.c ****             }
 1743              		.loc 1 1002 17 is_stmt 1 view .LVU652
1002:rtos/uC-FS/FAT/fs_fat.c ****             }
 1744              		.loc 1 1002 27 is_stmt 0 view .LVU653
 1745 00b2 AB6D     		ldr	r3, [r5, #88]
1002:rtos/uC-FS/FAT/fs_fat.c ****             }
 1746              		.loc 1 1002 45 view .LVU654
 1747 00b4 0133     		adds	r3, r3, #1
 1748 00b6 AB65     		str	r3, [r5, #88]
 1749 00b8 D3E7     		b	.L99
 1750              	.LVL146:
 1751              	.L100:
1025:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_LOG(("FS_FAT_ClusChainDel(): %d FAT clus's free'd upon reaching clus chain end.\r\
 1752              		.loc 1 1025 5 is_stmt 1 view .LVU655
1028:rtos/uC-FS/FAT/fs_fat.c ****     }
 1753              		.loc 1 1028 112 view .LVU656
1031:rtos/uC-FS/FAT/fs_fat.c ****     return (clus_cnt);
 1754              		.loc 1 1031 4 view .LVU657
1031:rtos/uC-FS/FAT/fs_fat.c ****     return (clus_cnt);
 1755              		.loc 1 1031 11 is_stmt 0 view .LVU658
 1756 00ba 0023     		movs	r3, #0
 1757 00bc 3380     		strh	r3, [r6]	@ movhi
1032:rtos/uC-FS/FAT/fs_fat.c **** }
 1758              		.loc 1 1032 5 is_stmt 1 view .LVU659
1032:rtos/uC-FS/FAT/fs_fat.c **** }
 1759              		.loc 1 1032 12 is_stmt 0 view .LVU660
 1760 00be B6E7     		b	.L93
 1761              	.LVL147:
 1762              	.L102:
 980:rtos/uC-FS/FAT/fs_fat.c ****         }
 1763              		.loc 1 980 20 view .LVU661
 1764 00c0 0023     		movs	r3, #0
 1765 00c2 0393     		str	r3, [sp, #12]
 1766              	.LVL148:
 980:rtos/uC-FS/FAT/fs_fat.c ****         }
 1767              		.loc 1 980 20 view .LVU662
 1768 00c4 B3E7     		b	.L93
 1769              	.LVL149:
 1770              	.L103:
 998:rtos/uC-FS/FAT/fs_fat.c ****             }
 1771              		.loc 1 998 24 view .LVU663
 1772 00c6 0023     		movs	r3, #0
ARM GAS  /tmp/ccazZ5Hl.s 			page 148


 1773 00c8 0393     		str	r3, [sp, #12]
 1774              	.LVL150:
 998:rtos/uC-FS/FAT/fs_fat.c ****             }
 1775              		.loc 1 998 24 view .LVU664
 1776 00ca B0E7     		b	.L93
 1777              	.LVL151:
 1778              	.L104:
1016:rtos/uC-FS/FAT/fs_fat.c ****         }
 1779              		.loc 1 1016 20 view .LVU665
 1780 00cc 0023     		movs	r3, #0
 1781 00ce 0393     		str	r3, [sp, #12]
 1782              	.LVL152:
1016:rtos/uC-FS/FAT/fs_fat.c ****         }
 1783              		.loc 1 1016 20 view .LVU666
 1784 00d0 ADE7     		b	.L93
 1785              		.cfi_endproc
 1786              	.LFE1:
 1788              		.section	.text.FS_FAT_ClusChainFollow,"ax",%progbits
 1789              		.align	1
 1790              		.global	FS_FAT_ClusChainFollow
 1791              		.syntax unified
 1792              		.thumb
 1793              		.thumb_func
 1794              		.fpu fpv4-sp-d16
 1796              	FS_FAT_ClusChainFollow:
 1797              	.LVL153:
 1798              	.LFB3:
1206:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 1799              		.loc 1 1206 1 is_stmt 1 view -0
 1800              		.cfi_startproc
 1801              		@ args = 8, pretend = 0, frame = 16
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
1206:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 1803              		.loc 1 1206 1 is_stmt 0 view .LVU668
 1804 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1805              	.LCFI12:
 1806              		.cfi_def_cfa_offset 36
 1807              		.cfi_offset 4, -36
 1808              		.cfi_offset 5, -32
 1809              		.cfi_offset 6, -28
 1810              		.cfi_offset 7, -24
 1811              		.cfi_offset 8, -20
 1812              		.cfi_offset 9, -16
 1813              		.cfi_offset 10, -12
 1814              		.cfi_offset 11, -8
 1815              		.cfi_offset 14, -4
 1816 0004 85B0     		sub	sp, sp, #20
 1817              	.LCFI13:
 1818              		.cfi_def_cfa_offset 56
 1819 0006 8146     		mov	r9, r0
 1820 0008 8B46     		mov	fp, r1
 1821 000a 1446     		mov	r4, r2
 1822 000c 9A46     		mov	r10, r3
 1823 000e 0E9D     		ldr	r5, [sp, #56]
 1824 0010 0F9F     		ldr	r7, [sp, #60]
1207:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  *p_cnt;
 1825              		.loc 1 1207 5 is_stmt 1 view .LVU669
ARM GAS  /tmp/ccazZ5Hl.s 			page 149


1208:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   prev_clus;
 1826              		.loc 1 1208 5 view .LVU670
1209:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
 1827              		.loc 1 1209 5 view .LVU671
1210:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 1828              		.loc 1 1210 5 view .LVU672
1211:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cnt;
 1829              		.loc 1 1211 5 view .LVU673
1212:rtos/uC-FS/FAT/fs_fat.c **** 
 1830              		.loc 1 1212 5 view .LVU674
1215:rtos/uC-FS/FAT/fs_fat.c ****     p_cnt       = (p_clus_cnt == DEF_NULL) ? &cnt : p_clus_cnt;
 1831              		.loc 1 1215 5 view .LVU675
1215:rtos/uC-FS/FAT/fs_fat.c ****     p_cnt       = (p_clus_cnt == DEF_NULL) ? &cnt : p_clus_cnt;
 1832              		.loc 1 1215 17 is_stmt 0 view .LVU676
 1833 0012 466B     		ldr	r6, [r0, #52]
 1834              	.LVL154:
1216:rtos/uC-FS/FAT/fs_fat.c ****    *p_cnt       =  0u;
 1835              		.loc 1 1216 5 is_stmt 1 view .LVU677
1216:rtos/uC-FS/FAT/fs_fat.c ****    *p_cnt       =  0u;
 1836              		.loc 1 1216 51 is_stmt 0 view .LVU678
 1837 0014 4DB1     		cbz	r5, .L119
 1838              	.L108:
 1839              	.LVL155:
1217:rtos/uC-FS/FAT/fs_fat.c ****     prev_clus   =  0u;
 1840              		.loc 1 1217 4 is_stmt 1 discriminator 4 view .LVU679
1217:rtos/uC-FS/FAT/fs_fat.c ****     prev_clus   =  0u;
 1841              		.loc 1 1217 17 is_stmt 0 discriminator 4 view .LVU680
 1842 0016 0023     		movs	r3, #0
 1843              	.LVL156:
1217:rtos/uC-FS/FAT/fs_fat.c ****     prev_clus   =  0u;
 1844              		.loc 1 1217 17 discriminator 4 view .LVU681
 1845 0018 2B60     		str	r3, [r5]
1218:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus    =  start_clus;
 1846              		.loc 1 1218 5 is_stmt 1 discriminator 4 view .LVU682
 1847              	.LVL157:
1219:rtos/uC-FS/FAT/fs_fat.c ****     next_clus   =  start_clus;
 1848              		.loc 1 1219 5 discriminator 4 view .LVU683
1220:rtos/uC-FS/FAT/fs_fat.c **** 
 1849              		.loc 1 1220 5 discriminator 4 view .LVU684
1225:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainFollow(): Invalid start clus.\r\n"));
 1850              		.loc 1 1225 5 discriminator 4 view .LVU685
1225:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainFollow(): Invalid start clus.\r\n"));
 1851              		.loc 1 1225 9 is_stmt 0 discriminator 4 view .LVU686
 1852 001a 7369     		ldr	r3, [r6, #20]
1225:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainFollow(): Invalid start clus.\r\n"));
 1853              		.loc 1 1225 8 discriminator 4 view .LVU687
 1854 001c A342     		cmp	r3, r4
 1855 001e 06D9     		bls	.L109
1225:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainFollow(): Invalid start clus.\r\n"));
 1856              		.loc 1 1225 54 discriminator 1 view .LVU688
 1857 0020 012C     		cmp	r4, #1
 1858 0022 04D9     		bls	.L109
1218:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus    =  start_clus;
 1859              		.loc 1 1218 17 view .LVU689
 1860 0024 0023     		movs	r3, #0
 1861 0026 0193     		str	r3, [sp, #4]
 1862 0028 12E0     		b	.L110
ARM GAS  /tmp/ccazZ5Hl.s 			page 150


 1863              	.LVL158:
 1864              	.L119:
1216:rtos/uC-FS/FAT/fs_fat.c ****    *p_cnt       =  0u;
 1865              		.loc 1 1216 51 view .LVU690
 1866 002a 03AD     		add	r5, sp, #12
 1867 002c F3E7     		b	.L108
 1868              	.LVL159:
 1869              	.L109:
1226:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
 1870              		.loc 1 1226 76 is_stmt 1 view .LVU691
1227:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 1871              		.loc 1 1227 8 view .LVU692
1227:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 1872              		.loc 1 1227 15 is_stmt 0 view .LVU693
 1873 002e 0A23     		movs	r3, #10
 1874 0030 3B80     		strh	r3, [r7]	@ movhi
1228:rtos/uC-FS/FAT/fs_fat.c ****     }
 1875              		.loc 1 1228 9 is_stmt 1 view .LVU694
1228:rtos/uC-FS/FAT/fs_fat.c ****     }
 1876              		.loc 1 1228 16 is_stmt 0 view .LVU695
 1877 0032 0023     		movs	r3, #0
 1878 0034 0193     		str	r3, [sp, #4]
 1879              	.LVL160:
 1880              	.L107:
1263:rtos/uC-FS/FAT/fs_fat.c **** 
 1881              		.loc 1 1263 1 view .LVU696
 1882 0036 0198     		ldr	r0, [sp, #4]
 1883 0038 05B0     		add	sp, sp, #20
 1884              	.LCFI14:
 1885              		.cfi_remember_state
 1886              		.cfi_def_cfa_offset 36
 1887              		@ sp needed
 1888 003a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1889              	.LVL161:
 1890              	.L114:
 1891              	.LCFI15:
 1892              		.cfi_restore_state
1250:rtos/uC-FS/FAT/fs_fat.c ****                 return (prev_clus);                             /* ... rtn prev clus nbr.          
 1893              		.loc 1 1250 16 is_stmt 1 view .LVU697
1250:rtos/uC-FS/FAT/fs_fat.c ****                 return (prev_clus);                             /* ... rtn prev clus nbr.          
 1894              		.loc 1 1250 23 is_stmt 0 view .LVU698
 1895 003e 4FF4A763 		mov	r3, #1336
 1896 0042 3B80     		strh	r3, [r7]	@ movhi
1251:rtos/uC-FS/FAT/fs_fat.c ****             }
 1897              		.loc 1 1251 17 is_stmt 1 view .LVU699
1251:rtos/uC-FS/FAT/fs_fat.c ****             }
 1898              		.loc 1 1251 24 is_stmt 0 view .LVU700
 1899 0044 F7E7     		b	.L107
 1900              	.L113:
1255:rtos/uC-FS/FAT/fs_fat.c ****         prev_clus = cur_clus;
 1901              		.loc 1 1255 7 is_stmt 1 view .LVU701
1255:rtos/uC-FS/FAT/fs_fat.c ****         prev_clus = cur_clus;
 1902              		.loc 1 1255 8 is_stmt 0 view .LVU702
 1903 0046 2B68     		ldr	r3, [r5]
1255:rtos/uC-FS/FAT/fs_fat.c ****         prev_clus = cur_clus;
 1904              		.loc 1 1255 15 view .LVU703
 1905 0048 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccazZ5Hl.s 			page 151


 1906 004a 2B60     		str	r3, [r5]
1256:rtos/uC-FS/FAT/fs_fat.c ****         cur_clus  = next_clus;
 1907              		.loc 1 1256 9 is_stmt 1 view .LVU704
 1908              	.LVL162:
1257:rtos/uC-FS/FAT/fs_fat.c ****     }
 1909              		.loc 1 1257 9 view .LVU705
1256:rtos/uC-FS/FAT/fs_fat.c ****         cur_clus  = next_clus;
 1910              		.loc 1 1256 19 is_stmt 0 view .LVU706
 1911 004c 0194     		str	r4, [sp, #4]
1257:rtos/uC-FS/FAT/fs_fat.c ****     }
 1912              		.loc 1 1257 19 view .LVU707
 1913 004e 0446     		mov	r4, r0
 1914              	.LVL163:
 1915              	.L110:
1234:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rd next FAT entry.              
 1916              		.loc 1 1234 10 is_stmt 1 view .LVU708
1234:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rd next FAT entry.              
 1917              		.loc 1 1234 11 is_stmt 0 view .LVU709
 1918 0050 2B68     		ldr	r3, [r5]
1234:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rd next FAT entry.              
 1919              		.loc 1 1234 10 view .LVU710
 1920 0052 5345     		cmp	r3, r10
 1921 0054 17D2     		bcs	.L120
1236:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 1922              		.loc 1 1236 9 is_stmt 1 view .LVU711
1236:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 1923              		.loc 1 1236 31 is_stmt 0 view .LVU712
 1924 0056 F36C     		ldr	r3, [r6, #76]
1236:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 1925              		.loc 1 1236 48 view .LVU713
 1926 0058 D3F80480 		ldr	r8, [r3, #4]
1236:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 1927              		.loc 1 1236 21 view .LVU714
 1928 005c 3B46     		mov	r3, r7
 1929 005e 2246     		mov	r2, r4
 1930 0060 5946     		mov	r1, fp
 1931 0062 4846     		mov	r0, r9
 1932 0064 C047     		blx	r8
 1933              	.LVL164:
1240:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 1934              		.loc 1 1240 9 is_stmt 1 view .LVU715
1240:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 1935              		.loc 1 1240 13 is_stmt 0 view .LVU716
 1936 0066 3B88     		ldrh	r3, [r7]
1240:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 1937              		.loc 1 1240 12 view .LVU717
 1938 0068 8BB9     		cbnz	r3, .L117
1245:rtos/uC-FS/FAT/fs_fat.c ****             if (next_clus >= p_fat_data->FAT_TypeAPI_Ptr->ClusEOF) {
 1939              		.loc 1 1245 9 is_stmt 1 view .LVU718
1245:rtos/uC-FS/FAT/fs_fat.c ****             if (next_clus >= p_fat_data->FAT_TypeAPI_Ptr->ClusEOF) {
 1940              		.loc 1 1245 13 is_stmt 0 view .LVU719
 1941 006a 7369     		ldr	r3, [r6, #20]
1245:rtos/uC-FS/FAT/fs_fat.c ****             if (next_clus >= p_fat_data->FAT_TypeAPI_Ptr->ClusEOF) {
 1942              		.loc 1 1245 12 view .LVU720
 1943 006c 8342     		cmp	r3, r0
 1944 006e 01D9     		bls	.L112
1245:rtos/uC-FS/FAT/fs_fat.c ****             if (next_clus >= p_fat_data->FAT_TypeAPI_Ptr->ClusEOF) {
ARM GAS  /tmp/ccazZ5Hl.s 			page 152


 1945              		.loc 1 1245 57 discriminator 1 view .LVU721
 1946 0070 0128     		cmp	r0, #1
 1947 0072 E8D8     		bhi	.L113
 1948              	.L112:
1246:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_SYS_CLUS_CHAIN_END_EARLY;        /* If EOC is found ...             
 1949              		.loc 1 1246 13 is_stmt 1 view .LVU722
1246:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_SYS_CLUS_CHAIN_END_EARLY;        /* If EOC is found ...             
 1950              		.loc 1 1246 40 is_stmt 0 view .LVU723
 1951 0074 F36C     		ldr	r3, [r6, #76]
1246:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_SYS_CLUS_CHAIN_END_EARLY;        /* If EOC is found ...             
 1952              		.loc 1 1246 57 view .LVU724
 1953 0076 DB68     		ldr	r3, [r3, #12]
1246:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_SYS_CLUS_CHAIN_END_EARLY;        /* If EOC is found ...             
 1954              		.loc 1 1246 16 view .LVU725
 1955 0078 8342     		cmp	r3, r0
 1956 007a E0D8     		bhi	.L114
1247:rtos/uC-FS/FAT/fs_fat.c ****                 return (cur_clus);                              /* ... rtn cur clus nbr.           
 1957              		.loc 1 1247 16 is_stmt 1 view .LVU726
1247:rtos/uC-FS/FAT/fs_fat.c ****                 return (cur_clus);                              /* ... rtn cur clus nbr.           
 1958              		.loc 1 1247 23 is_stmt 0 view .LVU727
 1959 007c 40F23753 		movw	r3, #1335
 1960 0080 3B80     		strh	r3, [r7]	@ movhi
1248:rtos/uC-FS/FAT/fs_fat.c ****             } else {
 1961              		.loc 1 1248 17 is_stmt 1 view .LVU728
1248:rtos/uC-FS/FAT/fs_fat.c ****             } else {
 1962              		.loc 1 1248 24 is_stmt 0 view .LVU729
 1963 0082 0194     		str	r4, [sp, #4]
 1964              	.LVL165:
1248:rtos/uC-FS/FAT/fs_fat.c ****             } else {
 1965              		.loc 1 1248 24 view .LVU730
 1966 0084 D7E7     		b	.L107
 1967              	.LVL166:
 1968              	.L120:
1261:rtos/uC-FS/FAT/fs_fat.c ****     return (cur_clus);
 1969              		.loc 1 1261 4 is_stmt 1 view .LVU731
1261:rtos/uC-FS/FAT/fs_fat.c ****     return (cur_clus);
 1970              		.loc 1 1261 11 is_stmt 0 view .LVU732
 1971 0086 0023     		movs	r3, #0
 1972 0088 3B80     		strh	r3, [r7]	@ movhi
1262:rtos/uC-FS/FAT/fs_fat.c **** }
 1973              		.loc 1 1262 5 is_stmt 1 view .LVU733
1262:rtos/uC-FS/FAT/fs_fat.c **** }
 1974              		.loc 1 1262 12 is_stmt 0 view .LVU734
 1975 008a 0194     		str	r4, [sp, #4]
 1976              	.LVL167:
1262:rtos/uC-FS/FAT/fs_fat.c **** }
 1977              		.loc 1 1262 12 view .LVU735
 1978 008c D3E7     		b	.L107
 1979              	.LVL168:
 1980              	.L117:
1241:rtos/uC-FS/FAT/fs_fat.c ****         }
 1981              		.loc 1 1241 20 view .LVU736
 1982 008e 0023     		movs	r3, #0
 1983 0090 0193     		str	r3, [sp, #4]
 1984              	.LVL169:
1241:rtos/uC-FS/FAT/fs_fat.c ****         }
 1985              		.loc 1 1241 20 view .LVU737
ARM GAS  /tmp/ccazZ5Hl.s 			page 153


 1986 0092 D0E7     		b	.L107
 1987              		.cfi_endproc
 1988              	.LFE3:
 1990              		.section	.text.FS_FAT_ClusChainEndFind,"ax",%progbits
 1991              		.align	1
 1992              		.global	FS_FAT_ClusChainEndFind
 1993              		.syntax unified
 1994              		.thumb
 1995              		.thumb_func
 1996              		.fpu fpv4-sp-d16
 1998              	FS_FAT_ClusChainEndFind:
 1999              	.LVL170:
 2000              	.LFB4:
1300:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  end_clus;
 2001              		.loc 1 1300 1 is_stmt 1 view -0
 2002              		.cfi_startproc
 2003              		@ args = 4, pretend = 0, frame = 0
 2004              		@ frame_needed = 0, uses_anonymous_args = 0
1300:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  end_clus;
 2005              		.loc 1 1300 1 is_stmt 0 view .LVU739
 2006 0000 10B5     		push	{r4, lr}
 2007              	.LCFI16:
 2008              		.cfi_def_cfa_offset 8
 2009              		.cfi_offset 4, -8
 2010              		.cfi_offset 14, -4
 2011 0002 82B0     		sub	sp, sp, #8
 2012              	.LCFI17:
 2013              		.cfi_def_cfa_offset 16
 2014 0004 049C     		ldr	r4, [sp, #16]
1301:rtos/uC-FS/FAT/fs_fat.c **** 
 2015              		.loc 1 1301 5 is_stmt 1 view .LVU740
1304:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 2016              		.loc 1 1304 5 view .LVU741
1304:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 2017              		.loc 1 1304 16 is_stmt 0 view .LVU742
 2018 0006 0194     		str	r4, [sp, #4]
 2019 0008 0093     		str	r3, [sp]
 2020 000a 4FF0FF33 		mov	r3, #-1
 2021              	.LVL171:
1304:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 2022              		.loc 1 1304 16 view .LVU743
 2023 000e FFF7FEFF 		bl	FS_FAT_ClusChainFollow
 2024              	.LVL172:
1310:rtos/uC-FS/FAT/fs_fat.c ****         *p_err = FS_ERR_NONE;
 2025              		.loc 1 1310 5 is_stmt 1 view .LVU744
1310:rtos/uC-FS/FAT/fs_fat.c ****         *p_err = FS_ERR_NONE;
 2026              		.loc 1 1310 9 is_stmt 0 view .LVU745
 2027 0012 2288     		ldrh	r2, [r4]
1310:rtos/uC-FS/FAT/fs_fat.c ****         *p_err = FS_ERR_NONE;
 2028              		.loc 1 1310 8 view .LVU746
 2029 0014 40F23753 		movw	r3, #1335
 2030 0018 9A42     		cmp	r2, r3
 2031 001a 01D0     		beq	.L124
 2032              	.L121:
1315:rtos/uC-FS/FAT/fs_fat.c **** 
 2033              		.loc 1 1315 1 view .LVU747
 2034 001c 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccazZ5Hl.s 			page 154


 2035              	.LCFI18:
 2036              		.cfi_remember_state
 2037              		.cfi_def_cfa_offset 8
 2038              		@ sp needed
 2039 001e 10BD     		pop	{r4, pc}
 2040              	.LVL173:
 2041              	.L124:
 2042              	.LCFI19:
 2043              		.cfi_restore_state
1311:rtos/uC-FS/FAT/fs_fat.c ****     }
 2044              		.loc 1 1311 9 is_stmt 1 view .LVU748
1311:rtos/uC-FS/FAT/fs_fat.c ****     }
 2045              		.loc 1 1311 16 is_stmt 0 view .LVU749
 2046 0020 0023     		movs	r3, #0
 2047 0022 2380     		strh	r3, [r4]	@ movhi
1314:rtos/uC-FS/FAT/fs_fat.c **** }
 2048              		.loc 1 1314 5 is_stmt 1 view .LVU750
1314:rtos/uC-FS/FAT/fs_fat.c **** }
 2049              		.loc 1 1314 12 is_stmt 0 view .LVU751
 2050 0024 FAE7     		b	.L121
 2051              		.cfi_endproc
 2052              	.LFE4:
 2054              		.section	.text.FS_FAT_ClusChainReverseDel,"ax",%progbits
 2055              		.align	1
 2056              		.global	FS_FAT_ClusChainReverseDel
 2057              		.syntax unified
 2058              		.thumb
 2059              		.thumb_func
 2060              		.fpu fpv4-sp-d16
 2062              	FS_FAT_ClusChainReverseDel:
 2063              	.LVL174:
 2064              	.LFB2:
1080:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 2065              		.loc 1 1080 1 is_stmt 1 view -0
 2066              		.cfi_startproc
 2067              		@ args = 4, pretend = 0, frame = 8
 2068              		@ frame_needed = 0, uses_anonymous_args = 0
1080:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 2069              		.loc 1 1080 1 is_stmt 0 view .LVU753
 2070 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2071              	.LCFI20:
 2072              		.cfi_def_cfa_offset 36
 2073              		.cfi_offset 4, -36
 2074              		.cfi_offset 5, -32
 2075              		.cfi_offset 6, -28
 2076              		.cfi_offset 7, -24
 2077              		.cfi_offset 8, -20
 2078              		.cfi_offset 9, -16
 2079              		.cfi_offset 10, -12
 2080              		.cfi_offset 11, -8
 2081              		.cfi_offset 14, -4
 2082 0004 85B0     		sub	sp, sp, #20
 2083              	.LCFI21:
 2084              		.cfi_def_cfa_offset 56
 2085 0006 0393     		str	r3, [sp, #12]
 2086 0008 0E9E     		ldr	r6, [sp, #56]
1081:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
ARM GAS  /tmp/ccazZ5Hl.s 			page 155


 2087              		.loc 1 1081 5 is_stmt 1 view .LVU754
1082:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    cur_sec;
 2088              		.loc 1 1082 5 view .LVU755
1083:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   new_fat_entry;
 2089              		.loc 1 1083 5 view .LVU756
1084:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
 2090              		.loc 1 1084 5 view .LVU757
1090:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus    =  start_clus;
 2091              		.loc 1 1090 5 view .LVU758
1090:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus    =  start_clus;
 2092              		.loc 1 1090 17 is_stmt 0 view .LVU759
 2093 000a 456B     		ldr	r5, [r0, #52]
 2094              	.LVL175:
1091:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
 2095              		.loc 1 1091 5 is_stmt 1 view .LVU760
1098:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseDel(): Invalid start clus.\r\n"));
 2096              		.loc 1 1098 5 view .LVU761
1098:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseDel(): Invalid start clus.\r\n"));
 2097              		.loc 1 1098 9 is_stmt 0 view .LVU762
 2098 000c 6B69     		ldr	r3, [r5, #20]
 2099              	.LVL176:
1098:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseDel(): Invalid start clus.\r\n"));
 2100              		.loc 1 1098 8 view .LVU763
 2101 000e 9342     		cmp	r3, r2
 2102 0010 04D9     		bls	.L126
 2103 0012 8046     		mov	r8, r0
 2104 0014 8946     		mov	r9, r1
 2105 0016 1746     		mov	r7, r2
1098:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseDel(): Invalid start clus.\r\n"));
 2106              		.loc 1 1098 54 discriminator 1 view .LVU764
 2107 0018 012A     		cmp	r2, #1
 2108 001a 2BD8     		bhi	.L127
 2109              	.L126:
1099:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
 2110              		.loc 1 1099 80 is_stmt 1 view .LVU765
1100:rtos/uC-FS/FAT/fs_fat.c ****         return;
 2111              		.loc 1 1100 8 view .LVU766
1100:rtos/uC-FS/FAT/fs_fat.c ****         return;
 2112              		.loc 1 1100 15 is_stmt 0 view .LVU767
 2113 001c 0A23     		movs	r3, #10
 2114 001e 3380     		strh	r3, [r6]	@ movhi
1101:rtos/uC-FS/FAT/fs_fat.c ****     }
 2115              		.loc 1 1101 9 is_stmt 1 view .LVU768
 2116              	.LVL177:
 2117              	.L125:
1162:rtos/uC-FS/FAT/fs_fat.c **** #endif
 2118              		.loc 1 1162 1 is_stmt 0 view .LVU769
 2119 0020 05B0     		add	sp, sp, #20
 2120              	.LCFI22:
 2121              		.cfi_remember_state
 2122              		.cfi_def_cfa_offset 36
 2123              		@ sp needed
 2124 0022 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2125              	.LVL178:
 2126              	.L136:
 2127              	.LCFI23:
 2128              		.cfi_restore_state
ARM GAS  /tmp/ccazZ5Hl.s 			page 156


1117:rtos/uC-FS/FAT/fs_fat.c ****             ( cur_clus == 0u)) {
 2129              		.loc 1 1117 49 discriminator 1 view .LVU770
 2130 0026 002C     		cmp	r4, #0
 2131 0028 34D1     		bne	.L130
1119:rtos/uC-FS/FAT/fs_fat.c ****         }
 2132              		.loc 1 1119 22 view .LVU771
 2133 002a 3C46     		mov	r4, r7
 2134 002c 32E0     		b	.L130
 2135              	.LVL179:
 2136              	.L131:
1125:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus free'd: %d.\r\n", cur_clus));/*   ... se
 2137              		.loc 1 1125 13 is_stmt 1 view .LVU772
1125:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus free'd: %d.\r\n", cur_clus));/*   ... se
 2138              		.loc 1 1125 39 is_stmt 0 view .LVU773
 2139 002e EB6C     		ldr	r3, [r5, #76]
1125:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainDel(): FAT clus free'd: %d.\r\n", cur_clus));/*   ... se
 2140              		.loc 1 1125 27 view .LVU774
 2141 0030 D3F810A0 		ldr	r10, [r3, #16]
 2142              	.LVL180:
1126:rtos/uC-FS/FAT/fs_fat.c **** 
 2143              		.loc 1 1126 88 is_stmt 1 view .LVU775
1128:rtos/uC-FS/FAT/fs_fat.c ****             FSVol_ReleaseLocked(p_vol,                          /* #### UCFS-328                   
 2144              		.loc 1 1128 13 view .LVU776
1128:rtos/uC-FS/FAT/fs_fat.c ****             FSVol_ReleaseLocked(p_vol,                          /* #### UCFS-328                   
 2145              		.loc 1 1128 23 is_stmt 0 view .LVU777
 2146 0034 E86A     		ldr	r0, [r5, #44]
 2147 0036 A11E     		subs	r1, r4, #2
 2148 0038 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 2149 003c 9940     		lsls	r1, r1, r3
 2150              	.LVL181:
1129:rtos/uC-FS/FAT/fs_fat.c ****                                 cur_sec,
 2151              		.loc 1 1129 13 is_stmt 1 view .LVU778
 2152 003e 3346     		mov	r3, r6
 2153 0040 EA6B     		ldr	r2, [r5, #60]
 2154 0042 0144     		add	r1, r1, r0
 2155              	.LVL182:
1129:rtos/uC-FS/FAT/fs_fat.c ****                                 cur_sec,
 2156              		.loc 1 1129 13 is_stmt 0 view .LVU779
 2157 0044 4046     		mov	r0, r8
 2158 0046 FFF7FEFF 		bl	FSVol_ReleaseLocked
 2159              	.LVL183:
1133:rtos/uC-FS/FAT/fs_fat.c ****                 return;
 2160              		.loc 1 1133 13 is_stmt 1 view .LVU780
1133:rtos/uC-FS/FAT/fs_fat.c ****                 return;
 2161              		.loc 1 1133 17 is_stmt 0 view .LVU781
 2162 004a 3388     		ldrh	r3, [r6]
1133:rtos/uC-FS/FAT/fs_fat.c ****                 return;
 2163              		.loc 1 1133 16 view .LVU782
 2164 004c 002B     		cmp	r3, #0
 2165 004e E7D1     		bne	.L125
1137:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->QueryFreeClusCnt++;
 2166              		.loc 1 1137 13 is_stmt 1 view .LVU783
1137:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->QueryFreeClusCnt++;
 2167              		.loc 1 1137 27 is_stmt 0 view .LVU784
 2168 0050 95F85030 		ldrb	r3, [r5, #80]	@ zero_extendqisi2
1137:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->QueryFreeClusCnt++;
 2169              		.loc 1 1137 16 view .LVU785
ARM GAS  /tmp/ccazZ5Hl.s 			page 157


 2170 0054 012B     		cmp	r3, #1
 2171 0056 26D0     		beq	.L135
 2172              	.L132:
1141:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
 2173              		.loc 1 1141 57 is_stmt 1 view .LVU786
1148:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 2174              		.loc 1 1148 9 view .LVU787
1148:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 2175              		.loc 1 1148 19 is_stmt 0 view .LVU788
 2176 0058 EB6C     		ldr	r3, [r5, #76]
1148:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 2177              		.loc 1 1148 36 view .LVU789
 2178 005a D3F800B0 		ldr	fp, [r3]
1148:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 2179              		.loc 1 1148 9 view .LVU790
 2180 005e 0096     		str	r6, [sp]
 2181 0060 5346     		mov	r3, r10
 2182 0062 2246     		mov	r2, r4
 2183 0064 4946     		mov	r1, r9
 2184 0066 4046     		mov	r0, r8
 2185 0068 D847     		blx	fp
 2186              	.LVL184:
1153:rtos/uC-FS/FAT/fs_fat.c ****             return;
 2187              		.loc 1 1153 9 is_stmt 1 view .LVU791
1153:rtos/uC-FS/FAT/fs_fat.c ****             return;
 2188              		.loc 1 1153 13 is_stmt 0 view .LVU792
 2189 006a 3388     		ldrh	r3, [r6]
1153:rtos/uC-FS/FAT/fs_fat.c ****             return;
 2190              		.loc 1 1153 12 view .LVU793
 2191 006c 002B     		cmp	r3, #0
 2192 006e D7D1     		bne	.L125
1157:rtos/uC-FS/FAT/fs_fat.c **** 
 2193              		.loc 1 1157 13 is_stmt 1 view .LVU794
1157:rtos/uC-FS/FAT/fs_fat.c **** 
 2194              		.loc 1 1157 5 is_stmt 0 view .LVU795
 2195 0070 BC42     		cmp	r4, r7
 2196 0072 D5D0     		beq	.L125
 2197              	.LVL185:
 2198              	.L127:
1106:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Find chain end.                 
 2199              		.loc 1 1106 5 is_stmt 1 view .LVU796
1108:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 2200              		.loc 1 1108 9 view .LVU797
1108:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 2201              		.loc 1 1108 20 is_stmt 0 view .LVU798
 2202 0074 0096     		str	r6, [sp]
 2203 0076 0023     		movs	r3, #0
 2204 0078 3A46     		mov	r2, r7
 2205 007a 4946     		mov	r1, r9
 2206 007c 4046     		mov	r0, r8
 2207 007e FFF7FEFF 		bl	FS_FAT_ClusChainEndFind
 2208              	.LVL186:
 2209 0082 0446     		mov	r4, r0
 2210              	.LVL187:
1113:rtos/uC-FS/FAT/fs_fat.c ****             (*p_err != FS_ERR_SYS_CLUS_INVALID)) {
 2211              		.loc 1 1113 9 is_stmt 1 view .LVU799
1113:rtos/uC-FS/FAT/fs_fat.c ****             (*p_err != FS_ERR_SYS_CLUS_INVALID)) {
ARM GAS  /tmp/ccazZ5Hl.s 			page 158


 2212              		.loc 1 1113 14 is_stmt 0 view .LVU800
 2213 0084 3388     		ldrh	r3, [r6]
1113:rtos/uC-FS/FAT/fs_fat.c ****             (*p_err != FS_ERR_SYS_CLUS_INVALID)) {
 2214              		.loc 1 1113 12 view .LVU801
 2215 0086 13B1     		cbz	r3, .L129
1113:rtos/uC-FS/FAT/fs_fat.c ****             (*p_err != FS_ERR_SYS_CLUS_INVALID)) {
 2216              		.loc 1 1113 37 discriminator 1 view .LVU802
 2217 0088 B3F5A76F 		cmp	r3, #1336
 2218 008c C8D1     		bne	.L125
 2219              	.L129:
1117:rtos/uC-FS/FAT/fs_fat.c ****             ( cur_clus == 0u)) {
 2220              		.loc 1 1117 9 is_stmt 1 view .LVU803
1117:rtos/uC-FS/FAT/fs_fat.c ****             ( cur_clus == 0u)) {
 2221              		.loc 1 1117 12 is_stmt 0 view .LVU804
 2222 008e B3F5A76F 		cmp	r3, #1336
 2223 0092 C8D0     		beq	.L136
 2224              	.L130:
 2225              	.LVL188:
1122:rtos/uC-FS/FAT/fs_fat.c ****             new_fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusEOF;   /*                             
 2226              		.loc 1 1122 9 is_stmt 1 view .LVU805
1122:rtos/uC-FS/FAT/fs_fat.c ****             new_fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusEOF;   /*                             
 2227              		.loc 1 1122 12 is_stmt 0 view .LVU806
 2228 0094 BC42     		cmp	r4, r7
 2229 0096 CAD1     		bne	.L131
1122:rtos/uC-FS/FAT/fs_fat.c ****             new_fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusEOF;   /*                             
 2230              		.loc 1 1122 38 discriminator 1 view .LVU807
 2231 0098 039B     		ldr	r3, [sp, #12]
 2232 009a 002B     		cmp	r3, #0
 2233 009c C7D1     		bne	.L131
1123:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 2234              		.loc 1 1123 13 is_stmt 1 view .LVU808
1123:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 2235              		.loc 1 1123 39 is_stmt 0 view .LVU809
 2236 009e EB6C     		ldr	r3, [r5, #76]
1123:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 2237              		.loc 1 1123 27 view .LVU810
 2238 00a0 D3F80CA0 		ldr	r10, [r3, #12]
 2239              	.LVL189:
1123:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 2240              		.loc 1 1123 27 view .LVU811
 2241 00a4 D8E7     		b	.L132
 2242              	.L135:
1138:rtos/uC-FS/FAT/fs_fat.c ****             }
 2243              		.loc 1 1138 17 is_stmt 1 view .LVU812
1138:rtos/uC-FS/FAT/fs_fat.c ****             }
 2244              		.loc 1 1138 27 is_stmt 0 view .LVU813
 2245 00a6 AB6D     		ldr	r3, [r5, #88]
1138:rtos/uC-FS/FAT/fs_fat.c ****             }
 2246              		.loc 1 1138 45 view .LVU814
 2247 00a8 0133     		adds	r3, r3, #1
 2248 00aa AB65     		str	r3, [r5, #88]
 2249 00ac D4E7     		b	.L132
 2250              		.cfi_endproc
 2251              	.LFE2:
 2253              		.section	.text.FS_FAT_ClusChainReverseFollow,"ax",%progbits
 2254              		.align	1
 2255              		.global	FS_FAT_ClusChainReverseFollow
ARM GAS  /tmp/ccazZ5Hl.s 			page 159


 2256              		.syntax unified
 2257              		.thumb
 2258              		.thumb_func
 2259              		.fpu fpv4-sp-d16
 2261              	FS_FAT_ClusChainReverseFollow:
 2262              	.LVL190:
 2263              	.LFB5:
1360:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 2264              		.loc 1 1360 1 is_stmt 1 view -0
 2265              		.cfi_startproc
 2266              		@ args = 4, pretend = 0, frame = 0
 2267              		@ frame_needed = 0, uses_anonymous_args = 0
1360:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 2268              		.loc 1 1360 1 is_stmt 0 view .LVU816
 2269 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2270              	.LCFI24:
 2271              		.cfi_def_cfa_offset 40
 2272              		.cfi_offset 3, -40
 2273              		.cfi_offset 4, -36
 2274              		.cfi_offset 5, -32
 2275              		.cfi_offset 6, -28
 2276              		.cfi_offset 7, -24
 2277              		.cfi_offset 8, -20
 2278              		.cfi_offset 9, -16
 2279              		.cfi_offset 10, -12
 2280              		.cfi_offset 11, -8
 2281              		.cfi_offset 14, -4
 2282 0004 1F46     		mov	r7, r3
 2283 0006 DDF82880 		ldr	r8, [sp, #40]
1361:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
 2284              		.loc 1 1361 5 is_stmt 1 view .LVU817
1362:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 2285              		.loc 1 1362 5 view .LVU818
1363:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   target_clus;
 2286              		.loc 1 1363 5 view .LVU819
1364:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
 2287              		.loc 1 1364 5 view .LVU820
1370:rtos/uC-FS/FAT/fs_fat.c **** 
 2288              		.loc 1 1370 5 view .LVU821
1370:rtos/uC-FS/FAT/fs_fat.c **** 
 2289              		.loc 1 1370 16 is_stmt 0 view .LVU822
 2290 000a D0F834A0 		ldr	r10, [r0, #52]
 2291              	.LVL191:
1374:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseFollow(): Invalid start clus.\r\n"));
 2292              		.loc 1 1374 5 is_stmt 1 view .LVU823
1374:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseFollow(): Invalid start clus.\r\n"));
 2293              		.loc 1 1374 9 is_stmt 0 view .LVU824
 2294 000e DAF81430 		ldr	r3, [r10, #20]
 2295              	.LVL192:
1374:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseFollow(): Invalid start clus.\r\n"));
 2296              		.loc 1 1374 8 view .LVU825
 2297 0012 9342     		cmp	r3, r2
 2298 0014 0AD9     		bls	.L138
 2299 0016 0646     		mov	r6, r0
 2300 0018 8946     		mov	r9, r1
1374:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseFollow(): Invalid start clus.\r\n"));
 2301              		.loc 1 1374 54 discriminator 1 view .LVU826
ARM GAS  /tmp/ccazZ5Hl.s 			page 160


 2302 001a 012A     		cmp	r2, #1
 2303 001c 06D9     		bls	.L138
1379:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseFollow(): Invalid stop clus.\r\n"));
 2304              		.loc 1 1379 5 is_stmt 1 view .LVU827
1379:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseFollow(): Invalid stop clus.\r\n"));
 2305              		.loc 1 1379 8 is_stmt 0 view .LVU828
 2306 001e BB42     		cmp	r3, r7
 2307 0020 0BD9     		bls	.L141
1379:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_ClusChainReverseFollow(): Invalid stop clus.\r\n"));
 2308              		.loc 1 1379 53 discriminator 1 view .LVU829
 2309 0022 012F     		cmp	r7, #1
 2310 0024 09D9     		bls	.L141
1386:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus       =  start_clus - 1u;
 2311              		.loc 1 1386 5 is_stmt 1 view .LVU830
 2312              	.LVL193:
1387:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
 2313              		.loc 1 1387 5 view .LVU831
1387:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
 2314              		.loc 1 1387 20 is_stmt 0 view .LVU832
 2315 0026 551E     		subs	r5, r2, #1
 2316              	.LVL194:
1393:rtos/uC-FS/FAT/fs_fat.c **** 
 2317              		.loc 1 1393 5 is_stmt 1 view .LVU833
1386:rtos/uC-FS/FAT/fs_fat.c ****     cur_clus       =  start_clus - 1u;
 2318              		.loc 1 1386 20 is_stmt 0 view .LVU834
 2319 0028 1446     		mov	r4, r2
1393:rtos/uC-FS/FAT/fs_fat.c **** 
 2320              		.loc 1 1393 11 view .LVU835
 2321 002a 1FE0     		b	.L143
 2322              	.LVL195:
 2323              	.L138:
1375:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
 2324              		.loc 1 1375 83 is_stmt 1 view .LVU836
1376:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 2325              		.loc 1 1376 8 view .LVU837
1376:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 2326              		.loc 1 1376 15 is_stmt 0 view .LVU838
 2327 002c 0A23     		movs	r3, #10
 2328 002e A8F80030 		strh	r3, [r8]	@ movhi
1377:rtos/uC-FS/FAT/fs_fat.c ****     }
 2329              		.loc 1 1377 9 is_stmt 1 view .LVU839
1377:rtos/uC-FS/FAT/fs_fat.c ****     }
 2330              		.loc 1 1377 16 is_stmt 0 view .LVU840
 2331 0032 0024     		movs	r4, #0
 2332              	.LVL196:
 2333              	.L137:
1426:rtos/uC-FS/FAT/fs_fat.c **** 
 2334              		.loc 1 1426 1 view .LVU841
 2335 0034 2046     		mov	r0, r4
 2336 0036 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2337              	.LVL197:
 2338              	.L141:
1380:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_INVALID_ARG;
 2339              		.loc 1 1380 82 is_stmt 1 view .LVU842
1381:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 2340              		.loc 1 1381 8 view .LVU843
1381:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
ARM GAS  /tmp/ccazZ5Hl.s 			page 161


 2341              		.loc 1 1381 15 is_stmt 0 view .LVU844
 2342 003a 0A23     		movs	r3, #10
 2343 003c A8F80030 		strh	r3, [r8]	@ movhi
1382:rtos/uC-FS/FAT/fs_fat.c ****     }
 2344              		.loc 1 1382 9 is_stmt 1 view .LVU845
1382:rtos/uC-FS/FAT/fs_fat.c ****     }
 2345              		.loc 1 1382 16 is_stmt 0 view .LVU846
 2346 0040 0024     		movs	r4, #0
 2347 0042 F7E7     		b	.L137
 2348              	.LVL198:
 2349              	.L152:
1396:rtos/uC-FS/FAT/fs_fat.c ****         }
 2350              		.loc 1 1396 13 is_stmt 1 view .LVU847
1396:rtos/uC-FS/FAT/fs_fat.c ****         }
 2351              		.loc 1 1396 35 is_stmt 0 view .LVU848
 2352 0044 DAF81450 		ldr	r5, [r10, #20]
 2353              	.LVL199:
1396:rtos/uC-FS/FAT/fs_fat.c ****         }
 2354              		.loc 1 1396 23 view .LVU849
 2355 0048 013D     		subs	r5, r5, #1
 2356              	.LVL200:
 2357              	.L144:
1399:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainReverseFollow(): Reached start of cluster chain after %d
 2358              		.loc 1 1399 9 is_stmt 1 view .LVU850
1399:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_LOG(("FS_FAT_ClusChainReverseFollow(): Reached start of cluster chain after %d
 2359              		.loc 1 1399 12 is_stmt 0 view .LVU851
 2360 004a A542     		cmp	r5, r4
 2361 004c F2D0     		beq	.L137
1404:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 2362              		.loc 1 1404 9 is_stmt 1 view .LVU852
1404:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 2363              		.loc 1 1404 31 is_stmt 0 view .LVU853
 2364 004e DAF84C30 		ldr	r3, [r10, #76]
1404:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 2365              		.loc 1 1404 48 view .LVU854
 2366 0052 D3F804B0 		ldr	fp, [r3, #4]
1404:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 2367              		.loc 1 1404 21 view .LVU855
 2368 0056 4346     		mov	r3, r8
 2369 0058 2A46     		mov	r2, r5
 2370 005a 4946     		mov	r1, r9
 2371 005c 3046     		mov	r0, r6
 2372 005e D847     		blx	fp
 2373              	.LVL201:
1408:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2374              		.loc 1 1408 9 is_stmt 1 view .LVU856
1408:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2375              		.loc 1 1408 13 is_stmt 0 view .LVU857
 2376 0060 B8F80030 		ldrh	r3, [r8]
1408:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2377              		.loc 1 1408 12 view .LVU858
 2378 0064 6BB9     		cbnz	r3, .L147
1412:rtos/uC-FS/FAT/fs_fat.c ****             target_clus = cur_clus;
 2379              		.loc 1 1412 9 is_stmt 1 view .LVU859
1412:rtos/uC-FS/FAT/fs_fat.c ****             target_clus = cur_clus;
 2380              		.loc 1 1412 12 is_stmt 0 view .LVU860
 2381 0066 8442     		cmp	r4, r0
ARM GAS  /tmp/ccazZ5Hl.s 			page 162


 2382 0068 05D0     		beq	.L150
 2383              	.LVL202:
 2384              	.L145:
1418:rtos/uC-FS/FAT/fs_fat.c ****     }
 2385              		.loc 1 1418 9 is_stmt 1 view .LVU861
1418:rtos/uC-FS/FAT/fs_fat.c ****     }
 2386              		.loc 1 1418 17 is_stmt 0 view .LVU862
 2387 006a 013D     		subs	r5, r5, #1
 2388              	.LVL203:
 2389              	.L143:
1393:rtos/uC-FS/FAT/fs_fat.c **** 
 2390              		.loc 1 1393 11 is_stmt 1 view .LVU863
 2391 006c BC42     		cmp	r4, r7
 2392 006e 04D0     		beq	.L151
1395:rtos/uC-FS/FAT/fs_fat.c ****             cur_clus  = p_fat_data->MaxClusNbr - 1u;
 2393              		.loc 1 1395 9 view .LVU864
1395:rtos/uC-FS/FAT/fs_fat.c ****             cur_clus  = p_fat_data->MaxClusNbr - 1u;
 2394              		.loc 1 1395 12 is_stmt 0 view .LVU865
 2395 0070 012D     		cmp	r5, #1
 2396 0072 EAD8     		bhi	.L144
 2397 0074 E6E7     		b	.L152
 2398              	.LVL204:
 2399              	.L150:
1413:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
 2400              		.loc 1 1413 25 view .LVU866
 2401 0076 2C46     		mov	r4, r5
 2402              	.LVL205:
1413:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_TRACE_LEVEL >= TRACE_LEVEL_LOG)
 2403              		.loc 1 1413 25 view .LVU867
 2404 0078 F7E7     		b	.L145
 2405              	.LVL206:
 2406              	.L151:
1423:rtos/uC-FS/FAT/fs_fat.c ****    *p_err =  FS_ERR_NONE;
 2407              		.loc 1 1423 115 is_stmt 1 view .LVU868
1424:rtos/uC-FS/FAT/fs_fat.c ****     return (target_clus);
 2408              		.loc 1 1424 4 view .LVU869
1424:rtos/uC-FS/FAT/fs_fat.c ****     return (target_clus);
 2409              		.loc 1 1424 11 is_stmt 0 view .LVU870
 2410 007a 0023     		movs	r3, #0
 2411 007c A8F80030 		strh	r3, [r8]	@ movhi
1425:rtos/uC-FS/FAT/fs_fat.c **** }
 2412              		.loc 1 1425 5 is_stmt 1 view .LVU871
1425:rtos/uC-FS/FAT/fs_fat.c **** }
 2413              		.loc 1 1425 12 is_stmt 0 view .LVU872
 2414 0080 D8E7     		b	.L137
 2415              	.LVL207:
 2416              	.L147:
1409:rtos/uC-FS/FAT/fs_fat.c ****         }
 2417              		.loc 1 1409 20 view .LVU873
 2418 0082 0024     		movs	r4, #0
 2419              	.LVL208:
1409:rtos/uC-FS/FAT/fs_fat.c ****         }
 2420              		.loc 1 1409 20 view .LVU874
 2421 0084 D6E7     		b	.L137
 2422              		.cfi_endproc
 2423              	.LFE5:
 2425              		.section	.text.FS_FAT_ClusFreeFind,"ax",%progbits
ARM GAS  /tmp/ccazZ5Hl.s 			page 163


 2426              		.align	1
 2427              		.global	FS_FAT_ClusFreeFind
 2428              		.syntax unified
 2429              		.thumb
 2430              		.thumb_func
 2431              		.fpu fpv4-sp-d16
 2433              	FS_FAT_ClusFreeFind:
 2434              	.LVL209:
 2435              	.LFB6:
1458:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 2436              		.loc 1 1458 1 is_stmt 1 view -0
 2437              		.cfi_startproc
 2438              		@ args = 0, pretend = 0, frame = 0
 2439              		@ frame_needed = 0, uses_anonymous_args = 0
1458:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 2440              		.loc 1 1458 1 is_stmt 0 view .LVU876
 2441 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2442              	.LCFI25:
 2443              		.cfi_def_cfa_offset 40
 2444              		.cfi_offset 3, -40
 2445              		.cfi_offset 4, -36
 2446              		.cfi_offset 5, -32
 2447              		.cfi_offset 6, -28
 2448              		.cfi_offset 7, -24
 2449              		.cfi_offset 8, -20
 2450              		.cfi_offset 9, -16
 2451              		.cfi_offset 10, -12
 2452              		.cfi_offset 11, -8
 2453              		.cfi_offset 14, -4
 2454 0004 8046     		mov	r8, r0
 2455 0006 8A46     		mov	r10, r1
 2456 0008 1746     		mov	r7, r2
1459:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   fat_entry;
 2457              		.loc 1 1459 5 is_stmt 1 view .LVU877
1460:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 2458              		.loc 1 1460 5 view .LVU878
1461:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus_cnt_chkd;
 2459              		.loc 1 1461 5 view .LVU879
1462:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   max_nbr_clus;
 2460              		.loc 1 1462 5 view .LVU880
1463:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       clus_ignore;
 2461              		.loc 1 1463 5 view .LVU881
1464:rtos/uC-FS/FAT/fs_fat.c **** #if ((FS_FAT_CFG_FAT12_EN == DEF_ENABLED) && (FS_FAT_CFG_JOURNAL_EN == DEF_ENABLED))
 2462              		.loc 1 1464 5 view .LVU882
1471:rtos/uC-FS/FAT/fs_fat.c ****     next_clus      =  p_fat_data->NextClusNbr;
 2463              		.loc 1 1471 5 view .LVU883
1471:rtos/uC-FS/FAT/fs_fat.c ****     next_clus      =  p_fat_data->NextClusNbr;
 2464              		.loc 1 1471 20 is_stmt 0 view .LVU884
 2465 000a 456B     		ldr	r5, [r0, #52]
 2466              	.LVL210:
1472:rtos/uC-FS/FAT/fs_fat.c ****     max_nbr_clus   =  p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR;
 2467              		.loc 1 1472 5 is_stmt 1 view .LVU885
1472:rtos/uC-FS/FAT/fs_fat.c ****     max_nbr_clus   =  p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR;
 2468              		.loc 1 1472 20 is_stmt 0 view .LVU886
 2469 000c 2C6B     		ldr	r4, [r5, #48]
 2470              	.LVL211:
1473:rtos/uC-FS/FAT/fs_fat.c ****     clus_cnt_chkd  =  0u;
ARM GAS  /tmp/ccazZ5Hl.s 			page 164


 2471              		.loc 1 1473 5 is_stmt 1 view .LVU887
1473:rtos/uC-FS/FAT/fs_fat.c ****     clus_cnt_chkd  =  0u;
 2472              		.loc 1 1473 33 is_stmt 0 view .LVU888
 2473 000e 6B69     		ldr	r3, [r5, #20]
1473:rtos/uC-FS/FAT/fs_fat.c ****     clus_cnt_chkd  =  0u;
 2474              		.loc 1 1473 20 view .LVU889
 2475 0010 A3F10209 		sub	r9, r3, #2
 2476              	.LVL212:
1474:rtos/uC-FS/FAT/fs_fat.c **** 
 2477              		.loc 1 1474 5 is_stmt 1 view .LVU890
1478:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus >= p_fat_data->MaxClusNbr) {              /* Wrap clus nbr.                  
 2478              		.loc 1 1478 5 view .LVU891
1474:rtos/uC-FS/FAT/fs_fat.c **** 
 2479              		.loc 1 1474 20 is_stmt 0 view .LVU892
 2480 0014 0026     		movs	r6, #0
1478:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus >= p_fat_data->MaxClusNbr) {              /* Wrap clus nbr.                  
 2481              		.loc 1 1478 11 view .LVU893
 2482 0016 0FE0     		b	.L154
 2483              	.LVL213:
 2484              	.L155:
1485:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 2485              		.loc 1 1485 9 is_stmt 1 view .LVU894
1485:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 2486              		.loc 1 1485 31 is_stmt 0 view .LVU895
 2487 0018 EB6C     		ldr	r3, [r5, #76]
1485:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 2488              		.loc 1 1485 48 view .LVU896
 2489 001a D3F804B0 		ldr	fp, [r3, #4]
1485:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 2490              		.loc 1 1485 21 view .LVU897
 2491 001e 3B46     		mov	r3, r7
 2492 0020 2246     		mov	r2, r4
 2493 0022 5146     		mov	r1, r10
 2494 0024 4046     		mov	r0, r8
 2495 0026 D847     		blx	fp
 2496              	.LVL214:
1489:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2497              		.loc 1 1489 9 is_stmt 1 view .LVU898
1489:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2498              		.loc 1 1489 13 is_stmt 0 view .LVU899
 2499 0028 3B88     		ldrh	r3, [r7]
1489:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2500              		.loc 1 1489 12 view .LVU900
 2501 002a C3B9     		cbnz	r3, .L160
1495:rtos/uC-FS/FAT/fs_fat.c ****             clus_ignore = DEF_NO;                                   /* Clus not ignore'd by dflt.  
 2502              		.loc 1 1495 9 is_stmt 1 view .LVU901
1495:rtos/uC-FS/FAT/fs_fat.c ****             clus_ignore = DEF_NO;                                   /* Clus not ignore'd by dflt.  
 2503              		.loc 1 1495 36 is_stmt 0 view .LVU902
 2504 002c EB6C     		ldr	r3, [r5, #76]
1495:rtos/uC-FS/FAT/fs_fat.c ****             clus_ignore = DEF_NO;                                   /* Clus not ignore'd by dflt.  
 2505              		.loc 1 1495 53 view .LVU903
 2506 002e 1B69     		ldr	r3, [r3, #16]
1495:rtos/uC-FS/FAT/fs_fat.c ****             clus_ignore = DEF_NO;                                   /* Clus not ignore'd by dflt.  
 2507              		.loc 1 1495 12 view .LVU904
 2508 0030 8342     		cmp	r3, r0
 2509 0032 08D0     		beq	.L162
1516:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_chkd++;
ARM GAS  /tmp/ccazZ5Hl.s 			page 165


 2510              		.loc 1 1516 9 is_stmt 1 view .LVU905
1516:rtos/uC-FS/FAT/fs_fat.c ****         clus_cnt_chkd++;
 2511              		.loc 1 1516 18 is_stmt 0 view .LVU906
 2512 0034 0134     		adds	r4, r4, #1
 2513              	.LVL215:
1517:rtos/uC-FS/FAT/fs_fat.c ****     }
 2514              		.loc 1 1517 9 is_stmt 1 view .LVU907
1517:rtos/uC-FS/FAT/fs_fat.c ****     }
 2515              		.loc 1 1517 22 is_stmt 0 view .LVU908
 2516 0036 0136     		adds	r6, r6, #1
 2517              	.LVL216:
 2518              	.L154:
1478:rtos/uC-FS/FAT/fs_fat.c ****         if (next_clus >= p_fat_data->MaxClusNbr) {              /* Wrap clus nbr.                  
 2519              		.loc 1 1478 11 is_stmt 1 view .LVU909
 2520 0038 4E45     		cmp	r6, r9
 2521 003a 09D2     		bcs	.L163
1479:rtos/uC-FS/FAT/fs_fat.c ****             next_clus  = FS_FAT_MIN_CLUS_NBR;
 2522              		.loc 1 1479 9 view .LVU910
1479:rtos/uC-FS/FAT/fs_fat.c ****             next_clus  = FS_FAT_MIN_CLUS_NBR;
 2523              		.loc 1 1479 36 is_stmt 0 view .LVU911
 2524 003c 6B69     		ldr	r3, [r5, #20]
1479:rtos/uC-FS/FAT/fs_fat.c ****             next_clus  = FS_FAT_MIN_CLUS_NBR;
 2525              		.loc 1 1479 12 view .LVU912
 2526 003e A342     		cmp	r3, r4
 2527 0040 EAD8     		bhi	.L155
1480:rtos/uC-FS/FAT/fs_fat.c ****         }
 2528              		.loc 1 1480 24 view .LVU913
 2529 0042 0224     		movs	r4, #2
 2530              	.LVL217:
1480:rtos/uC-FS/FAT/fs_fat.c ****         }
 2531              		.loc 1 1480 24 view .LVU914
 2532 0044 E8E7     		b	.L155
 2533              	.LVL218:
 2534              	.L162:
1496:rtos/uC-FS/FAT/fs_fat.c **** #if ((FS_FAT_CFG_FAT12_EN == DEF_ENABLED) && (FS_FAT_CFG_JOURNAL_EN == DEF_ENABLED))
 2535              		.loc 1 1496 13 is_stmt 1 view .LVU915
1508:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data->NextClusNbr = next_clus + 1u;       /* ... else store next clus ...    
 2536              		.loc 1 1508 13 view .LVU916
1509:rtos/uC-FS/FAT/fs_fat.c ****                 FS_TRACE_LOG(("FS_FAT_ClusFreeFind(): New FAT clus alloc'd: %d.\r\n", next_clus));
 2537              		.loc 1 1509 17 view .LVU917
1509:rtos/uC-FS/FAT/fs_fat.c ****                 FS_TRACE_LOG(("FS_FAT_ClusFreeFind(): New FAT clus alloc'd: %d.\r\n", next_clus));
 2538              		.loc 1 1509 53 is_stmt 0 view .LVU918
 2539 0046 631C     		adds	r3, r4, #1
1509:rtos/uC-FS/FAT/fs_fat.c ****                 FS_TRACE_LOG(("FS_FAT_ClusFreeFind(): New FAT clus alloc'd: %d.\r\n", next_clus));
 2540              		.loc 1 1509 41 view .LVU919
 2541 0048 2B63     		str	r3, [r5, #48]
1510:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_NONE;
 2542              		.loc 1 1510 98 is_stmt 1 view .LVU920
1511:rtos/uC-FS/FAT/fs_fat.c ****                 return (next_clus);                             /*                           ... an
 2543              		.loc 1 1511 16 view .LVU921
1511:rtos/uC-FS/FAT/fs_fat.c ****                 return (next_clus);                             /*                           ... an
 2544              		.loc 1 1511 23 is_stmt 0 view .LVU922
 2545 004a 0023     		movs	r3, #0
 2546 004c 3B80     		strh	r3, [r7]	@ movhi
1512:rtos/uC-FS/FAT/fs_fat.c ****             }
 2547              		.loc 1 1512 17 is_stmt 1 view .LVU923
1512:rtos/uC-FS/FAT/fs_fat.c ****             }
ARM GAS  /tmp/ccazZ5Hl.s 			page 166


 2548              		.loc 1 1512 24 is_stmt 0 view .LVU924
 2549 004e 03E0     		b	.L153
 2550              	.LVL219:
 2551              	.L163:
1522:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_DBG(("FS_FAT_ClusFreeFind(): No free FAT clus could be found.\r\n"));
 2552              		.loc 1 1522 4 is_stmt 1 view .LVU925
1522:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_DBG(("FS_FAT_ClusFreeFind(): No free FAT clus could be found.\r\n"));
 2553              		.loc 1 1522 11 is_stmt 0 view .LVU926
 2554 0050 4FF49873 		mov	r3, #304
 2555 0054 3B80     		strh	r3, [r7]	@ movhi
1523:rtos/uC-FS/FAT/fs_fat.c ****     return (0u);
 2556              		.loc 1 1523 82 is_stmt 1 view .LVU927
1524:rtos/uC-FS/FAT/fs_fat.c **** }
 2557              		.loc 1 1524 5 view .LVU928
1524:rtos/uC-FS/FAT/fs_fat.c **** }
 2558              		.loc 1 1524 12 is_stmt 0 view .LVU929
 2559 0056 0024     		movs	r4, #0
 2560              	.LVL220:
 2561              	.L153:
1525:rtos/uC-FS/FAT/fs_fat.c **** #endif
 2562              		.loc 1 1525 1 view .LVU930
 2563 0058 2046     		mov	r0, r4
 2564 005a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2565              	.LVL221:
 2566              	.L160:
1490:rtos/uC-FS/FAT/fs_fat.c ****         }
 2567              		.loc 1 1490 20 view .LVU931
 2568 005e 0024     		movs	r4, #0
 2569              	.LVL222:
1490:rtos/uC-FS/FAT/fs_fat.c ****         }
 2570              		.loc 1 1490 20 view .LVU932
 2571 0060 FAE7     		b	.L153
 2572              		.cfi_endproc
 2573              	.LFE6:
 2575              		.section	.text.FS_FAT_ClusChainAlloc,"ax",%progbits
 2576              		.align	1
 2577              		.global	FS_FAT_ClusChainAlloc
 2578              		.syntax unified
 2579              		.thumb
 2580              		.thumb_func
 2581              		.fpu fpv4-sp-d16
 2583              	FS_FAT_ClusChainAlloc:
 2584              	.LVL223:
 2585              	.LFB0:
 713:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 2586              		.loc 1 713 1 is_stmt 1 view -0
 2587              		.cfi_startproc
 2588              		@ args = 4, pretend = 0, frame = 16
 2589              		@ frame_needed = 0, uses_anonymous_args = 0
 713:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 2590              		.loc 1 713 1 is_stmt 0 view .LVU934
 2591 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2592              	.LCFI26:
 2593              		.cfi_def_cfa_offset 36
 2594              		.cfi_offset 4, -36
 2595              		.cfi_offset 5, -32
 2596              		.cfi_offset 6, -28
ARM GAS  /tmp/ccazZ5Hl.s 			page 167


 2597              		.cfi_offset 7, -24
 2598              		.cfi_offset 8, -20
 2599              		.cfi_offset 9, -16
 2600              		.cfi_offset 10, -12
 2601              		.cfi_offset 11, -8
 2602              		.cfi_offset 14, -4
 2603 0004 87B0     		sub	sp, sp, #28
 2604              	.LCFI27:
 2605              		.cfi_def_cfa_offset 64
 2606 0006 0392     		str	r2, [sp, #12]
 2607 0008 109D     		ldr	r5, [sp, #64]
 714:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   rem_clus;
 2608              		.loc 1 714 5 is_stmt 1 view .LVU935
 715:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   cur_clus;
 2609              		.loc 1 715 5 view .LVU936
 716:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 2610              		.loc 1 716 5 view .LVU937
 717:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       is_new_chain;
 2611              		.loc 1 717 5 view .LVU938
 718:rtos/uC-FS/FAT/fs_fat.c **** 
 2612              		.loc 1 718 5 view .LVU939
 721:rtos/uC-FS/FAT/fs_fat.c ****     rem_clus     =  nbr_clus;
 2613              		.loc 1 721 5 view .LVU940
 721:rtos/uC-FS/FAT/fs_fat.c ****     rem_clus     =  nbr_clus;
 2614              		.loc 1 721 18 is_stmt 0 view .LVU941
 2615 000a D0F834B0 		ldr	fp, [r0, #52]
 2616              	.LVL224:
 722:rtos/uC-FS/FAT/fs_fat.c ****     is_new_chain =  DEF_NO;
 2617              		.loc 1 722 5 is_stmt 1 view .LVU942
 723:rtos/uC-FS/FAT/fs_fat.c **** 
 2618              		.loc 1 723 5 view .LVU943
 725:rtos/uC-FS/FAT/fs_fat.c **** 
 2619              		.loc 1 725 135 view .LVU944
 728:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
 2620              		.loc 1 728 5 view .LVU945
 728:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
 2621              		.loc 1 728 8 is_stmt 0 view .LVU946
 2622 000e 0493     		str	r3, [sp, #16]
 2623 0010 43B3     		cbz	r3, .L186
 2624 0012 0646     		mov	r6, r0
 2625 0014 0F46     		mov	r7, r1
 734:rtos/uC-FS/FAT/fs_fat.c ****         start_clus = FS_FAT_ClusFreeFind(p_vol,
 2626              		.loc 1 734 5 is_stmt 1 view .LVU947
 734:rtos/uC-FS/FAT/fs_fat.c ****         start_clus = FS_FAT_ClusFreeFind(p_vol,
 2627              		.loc 1 734 8 is_stmt 0 view .LVU948
 2628 0016 039B     		ldr	r3, [sp, #12]
 2629              	.LVL225:
 734:rtos/uC-FS/FAT/fs_fat.c ****         start_clus = FS_FAT_ClusFreeFind(p_vol,
 2630              		.loc 1 734 8 view .LVU949
 2631 0018 4BB3     		cbz	r3, .L187
 722:rtos/uC-FS/FAT/fs_fat.c ****     is_new_chain =  DEF_NO;
 2632              		.loc 1 722 18 view .LVU950
 2633 001a DDF81080 		ldr	r8, [sp, #16]
 723:rtos/uC-FS/FAT/fs_fat.c **** 
 2634              		.loc 1 723 18 view .LVU951
 2635 001e 0023     		movs	r3, #0
 2636 0020 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccazZ5Hl.s 			page 168


 2637              	.LVL226:
 2638              	.L167:
 744:rtos/uC-FS/FAT/fs_fat.c ****     }
 2639              		.loc 1 744 113 is_stmt 1 view .LVU952
 748:rtos/uC-FS/FAT/fs_fat.c ****                                                        p_buf,
 2640              		.loc 1 748 5 view .LVU953
 748:rtos/uC-FS/FAT/fs_fat.c ****                                                        p_buf,
 2641              		.loc 1 748 27 is_stmt 0 view .LVU954
 2642 0022 DBF84C30 		ldr	r3, [fp, #76]
 748:rtos/uC-FS/FAT/fs_fat.c ****                                                        p_buf,
 2643              		.loc 1 748 44 view .LVU955
 2644 0026 5C68     		ldr	r4, [r3, #4]
 748:rtos/uC-FS/FAT/fs_fat.c ****                                                        p_buf,
 2645              		.loc 1 748 17 view .LVU956
 2646 0028 2B46     		mov	r3, r5
 2647 002a 039A     		ldr	r2, [sp, #12]
 2648 002c 3946     		mov	r1, r7
 2649 002e 3046     		mov	r0, r6
 2650 0030 A047     		blx	r4
 2651              	.LVL227:
 752:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 2652              		.loc 1 752 5 is_stmt 1 view .LVU957
 752:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 2653              		.loc 1 752 9 is_stmt 0 view .LVU958
 2654 0032 2B88     		ldrh	r3, [r5]
 752:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 2655              		.loc 1 752 8 view .LVU959
 2656 0034 002B     		cmp	r3, #0
 2657 0036 40F08A80 		bne	.L178
 756:rtos/uC-FS/FAT/fs_fat.c **** 
 2658              		.loc 1 756 5 is_stmt 1 view .LVU960
 756:rtos/uC-FS/FAT/fs_fat.c **** 
 2659              		.loc 1 756 8 is_stmt 0 view .LVU961
 2660 003a 0028     		cmp	r0, #0
 2661 003c 62D0     		beq	.L179
 758:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is invalid (%08X)
 2662              		.loc 1 758 9 is_stmt 1 view .LVU962
 758:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is invalid (%08X)
 2663              		.loc 1 758 12 is_stmt 0 view .LVU963
 2664 003e 0128     		cmp	r0, #1
 2665 0040 22D9     		bls	.L188
 764:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_NONE;
 2666              		.loc 1 764 9 is_stmt 1 view .LVU964
 764:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_NONE;
 2667              		.loc 1 764 35 is_stmt 0 view .LVU965
 2668 0042 DBF81430 		ldr	r3, [fp, #20]
 764:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_NONE;
 2669              		.loc 1 764 12 view .LVU966
 2670 0046 8342     		cmp	r3, r0
 2671 0048 23D8     		bhi	.L189
 769:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is invalid (%08X)
 2672              		.loc 1 769 9 is_stmt 1 view .LVU967
 769:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is invalid (%08X)
 2673              		.loc 1 769 35 is_stmt 0 view .LVU968
 2674 004a DBF84C30 		ldr	r3, [fp, #76]
 769:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is invalid (%08X)
 2675              		.loc 1 769 52 view .LVU969
ARM GAS  /tmp/ccazZ5Hl.s 			page 169


 2676 004e 9B68     		ldr	r3, [r3, #8]
 769:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is invalid (%08X)
 2677              		.loc 1 769 12 view .LVU970
 2678 0050 8342     		cmp	r3, r0
 2679 0052 21D8     		bhi	.L190
 775:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is bad (%08X).\r\
 2680              		.loc 1 775 9 is_stmt 1 view .LVU971
 775:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is bad (%08X).\r\
 2681              		.loc 1 775 12 is_stmt 0 view .LVU972
 2682 0054 8342     		cmp	r3, r0
 2683 0056 24D0     		beq	.L191
 2684 0058 DDF80C90 		ldr	r9, [sp, #12]
 2685 005c 3346     		mov	r3, r6
 2686 005e 4646     		mov	r6, r8
 2687              	.LVL228:
 775:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is bad (%08X).\r\
 2688              		.loc 1 775 12 view .LVU973
 2689 0060 9846     		mov	r8, r3
 2690              	.LVL229:
 775:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Next clus in chain after %08X is bad (%08X).\r\
 2691              		.loc 1 775 12 view .LVU974
 2692 0062 34E0     		b	.L173
 2693              	.LVL230:
 2694              	.L186:
 729:rtos/uC-FS/FAT/fs_fat.c ****         return (start_clus);                                    /* ... ret successfully.           
 2695              		.loc 1 729 8 is_stmt 1 view .LVU975
 729:rtos/uC-FS/FAT/fs_fat.c ****         return (start_clus);                                    /* ... ret successfully.           
 2696              		.loc 1 729 15 is_stmt 0 view .LVU976
 2697 0064 2B80     		strh	r3, [r5]	@ movhi
 730:rtos/uC-FS/FAT/fs_fat.c ****     }
 2698              		.loc 1 730 9 is_stmt 1 view .LVU977
 730:rtos/uC-FS/FAT/fs_fat.c ****     }
 2699              		.loc 1 730 16 is_stmt 0 view .LVU978
 2700 0066 1046     		mov	r0, r2
 2701              	.LVL231:
 2702              	.L164:
 860:rtos/uC-FS/FAT/fs_fat.c **** #endif
 2703              		.loc 1 860 1 view .LVU979
 2704 0068 07B0     		add	sp, sp, #28
 2705              	.LCFI28:
 2706              		.cfi_remember_state
 2707              		.cfi_def_cfa_offset 36
 2708              		@ sp needed
 2709 006a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2710              	.LVL232:
 2711              	.L187:
 2712              	.LCFI29:
 2713              		.cfi_restore_state
 735:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 2714              		.loc 1 735 9 is_stmt 1 view .LVU980
 735:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 2715              		.loc 1 735 22 is_stmt 0 view .LVU981
 2716 006e 2A46     		mov	r2, r5
 2717              	.LVL233:
 735:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 2718              		.loc 1 735 22 view .LVU982
 2719 0070 FFF7FEFF 		bl	FS_FAT_ClusFreeFind
ARM GAS  /tmp/ccazZ5Hl.s 			page 170


 2720              	.LVL234:
 738:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2721              		.loc 1 738 9 is_stmt 1 view .LVU983
 738:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2722              		.loc 1 738 13 is_stmt 0 view .LVU984
 2723 0074 2B88     		ldrh	r3, [r5]
 738:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2724              		.loc 1 738 12 view .LVU985
 2725 0076 002B     		cmp	r3, #0
 2726 0078 67D1     		bne	.L177
 742:rtos/uC-FS/FAT/fs_fat.c ****         rem_clus--;
 2727              		.loc 1 742 9 is_stmt 1 view .LVU986
 2728              	.LVL235:
 743:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_LOG(("FS_FAT_ClusChainAlloc(): The new chain will start with cluster (%08X).\r\n",
 2729              		.loc 1 743 9 view .LVU987
 743:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_LOG(("FS_FAT_ClusChainAlloc(): The new chain will start with cluster (%08X).\r\n",
 2730              		.loc 1 743 17 is_stmt 0 view .LVU988
 2731 007a 049B     		ldr	r3, [sp, #16]
 2732 007c 03F1FF38 		add	r8, r3, #-1
 2733              	.LVL236:
 735:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 2734              		.loc 1 735 22 view .LVU989
 2735 0080 0390     		str	r0, [sp, #12]
 742:rtos/uC-FS/FAT/fs_fat.c ****         rem_clus--;
 2736              		.loc 1 742 22 view .LVU990
 2737 0082 0123     		movs	r3, #1
 2738 0084 0593     		str	r3, [sp, #20]
 2739 0086 CCE7     		b	.L167
 2740              	.LVL237:
 2741              	.L188:
 759:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_SYS_CLUS_INVALID;
 2742              		.loc 1 759 131 is_stmt 1 view .LVU991
 760:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2743              		.loc 1 760 12 view .LVU992
 760:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2744              		.loc 1 760 19 is_stmt 0 view .LVU993
 2745 0088 4FF4A763 		mov	r3, #1336
 2746 008c 2B80     		strh	r3, [r5]	@ movhi
 761:rtos/uC-FS/FAT/fs_fat.c ****         }
 2747              		.loc 1 761 13 is_stmt 1 view .LVU994
 761:rtos/uC-FS/FAT/fs_fat.c ****         }
 2748              		.loc 1 761 20 is_stmt 0 view .LVU995
 2749 008e 0020     		movs	r0, #0
 2750              	.LVL238:
 761:rtos/uC-FS/FAT/fs_fat.c ****         }
 2751              		.loc 1 761 20 view .LVU996
 2752 0090 EAE7     		b	.L164
 2753              	.LVL239:
 2754              	.L189:
 765:rtos/uC-FS/FAT/fs_fat.c ****             return (next_clus);
 2755              		.loc 1 765 12 is_stmt 1 view .LVU997
 765:rtos/uC-FS/FAT/fs_fat.c ****             return (next_clus);
 2756              		.loc 1 765 19 is_stmt 0 view .LVU998
 2757 0092 0023     		movs	r3, #0
 2758 0094 2B80     		strh	r3, [r5]	@ movhi
 766:rtos/uC-FS/FAT/fs_fat.c ****         }
 2759              		.loc 1 766 13 is_stmt 1 view .LVU999
ARM GAS  /tmp/ccazZ5Hl.s 			page 171


 766:rtos/uC-FS/FAT/fs_fat.c ****         }
 2760              		.loc 1 766 20 is_stmt 0 view .LVU1000
 2761 0096 E7E7     		b	.L164
 2762              	.L190:
 770:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_SYS_CLUS_INVALID;
 2763              		.loc 1 770 131 is_stmt 1 view .LVU1001
 771:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2764              		.loc 1 771 12 view .LVU1002
 771:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2765              		.loc 1 771 19 is_stmt 0 view .LVU1003
 2766 0098 4FF4A763 		mov	r3, #1336
 2767 009c 2B80     		strh	r3, [r5]	@ movhi
 772:rtos/uC-FS/FAT/fs_fat.c ****         }
 2768              		.loc 1 772 13 is_stmt 1 view .LVU1004
 772:rtos/uC-FS/FAT/fs_fat.c ****         }
 2769              		.loc 1 772 20 is_stmt 0 view .LVU1005
 2770 009e 0020     		movs	r0, #0
 2771              	.LVL240:
 772:rtos/uC-FS/FAT/fs_fat.c ****         }
 2772              		.loc 1 772 20 view .LVU1006
 2773 00a0 E2E7     		b	.L164
 2774              	.LVL241:
 2775              	.L191:
 776:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_SYS_CLUS_CHAIN_END;
 2776              		.loc 1 776 127 is_stmt 1 view .LVU1007
 777:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2777              		.loc 1 777 12 view .LVU1008
 777:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2778              		.loc 1 777 19 is_stmt 0 view .LVU1009
 2779 00a2 40F23653 		movw	r3, #1334
 2780 00a6 2B80     		strh	r3, [r5]	@ movhi
 778:rtos/uC-FS/FAT/fs_fat.c ****         }
 2781              		.loc 1 778 13 is_stmt 1 view .LVU1010
 778:rtos/uC-FS/FAT/fs_fat.c ****         }
 2782              		.loc 1 778 20 is_stmt 0 view .LVU1011
 2783 00a8 0020     		movs	r0, #0
 2784              	.LVL242:
 778:rtos/uC-FS/FAT/fs_fat.c ****         }
 2785              		.loc 1 778 20 view .LVU1012
 2786 00aa DDE7     		b	.L164
 2787              	.LVL243:
 2788              	.L193:
 809:rtos/uC-FS/FAT/fs_fat.c ****            FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): Reverting partial allocation.\r\n"));
 2789              		.loc 1 809 91 is_stmt 1 view .LVU1013
 810:rtos/uC-FS/FAT/fs_fat.c ****            FS_FAT_ClusChainReverseDel(p_vol,                    /* Del partially alloc'd clus chain
 2790              		.loc 1 810 88 view .LVU1014
 811:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 2791              		.loc 1 811 12 view .LVU1015
 2792 00ac 0095     		str	r5, [sp]
 2793 00ae 059B     		ldr	r3, [sp, #20]
 2794 00b0 039A     		ldr	r2, [sp, #12]
 2795 00b2 3946     		mov	r1, r7
 2796 00b4 4046     		mov	r0, r8
 2797              	.LVL244:
 811:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 2798              		.loc 1 811 12 is_stmt 0 view .LVU1016
 2799 00b6 FFF7FEFF 		bl	FS_FAT_ClusChainReverseDel
ARM GAS  /tmp/ccazZ5Hl.s 			page 172


 2800              	.LVL245:
 816:rtos/uC-FS/FAT/fs_fat.c ****                return (0u);
 2801              		.loc 1 816 12 is_stmt 1 view .LVU1017
 816:rtos/uC-FS/FAT/fs_fat.c ****                return (0u);
 2802              		.loc 1 816 16 is_stmt 0 view .LVU1018
 2803 00ba 2B88     		ldrh	r3, [r5]
 816:rtos/uC-FS/FAT/fs_fat.c ****                return (0u);
 2804              		.loc 1 816 15 view .LVU1019
 2805 00bc 002B     		cmp	r3, #0
 2806 00be 48D1     		bne	.L181
 819:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2807              		.loc 1 819 12 is_stmt 1 view .LVU1020
 819:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2808              		.loc 1 819 19 is_stmt 0 view .LVU1021
 2809 00c0 4FF49873 		mov	r3, #304
 2810 00c4 2B80     		strh	r3, [r5]	@ movhi
 820:rtos/uC-FS/FAT/fs_fat.c ****         }
 2811              		.loc 1 820 13 is_stmt 1 view .LVU1022
 820:rtos/uC-FS/FAT/fs_fat.c ****         }
 2812              		.loc 1 820 20 is_stmt 0 view .LVU1023
 2813 00c6 0020     		movs	r0, #0
 2814 00c8 CEE7     		b	.L164
 2815              	.L194:
 837:rtos/uC-FS/FAT/fs_fat.c ****         rem_clus--;
 2816              		.loc 1 837 9 is_stmt 1 view .LVU1024
 2817              	.LVL246:
 838:rtos/uC-FS/FAT/fs_fat.c ****     }
 2818              		.loc 1 838 9 view .LVU1025
 838:rtos/uC-FS/FAT/fs_fat.c ****     }
 2819              		.loc 1 838 17 is_stmt 0 view .LVU1026
 2820 00ca 013E     		subs	r6, r6, #1
 2821              	.LVL247:
 837:rtos/uC-FS/FAT/fs_fat.c ****         rem_clus--;
 2822              		.loc 1 837 18 view .LVU1027
 2823 00cc A146     		mov	r9, r4
 2824              	.LVL248:
 2825              	.L173:
 801:rtos/uC-FS/FAT/fs_fat.c **** 
 2826              		.loc 1 801 11 is_stmt 1 view .LVU1028
 2827 00ce FEB1     		cbz	r6, .L192
 803:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
 2828              		.loc 1 803 9 view .LVU1029
 803:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
 2829              		.loc 1 803 21 is_stmt 0 view .LVU1030
 2830 00d0 2A46     		mov	r2, r5
 2831 00d2 3946     		mov	r1, r7
 2832 00d4 4046     		mov	r0, r8
 2833 00d6 FFF7FEFF 		bl	FS_FAT_ClusFreeFind
 2834              	.LVL249:
 2835 00da 0446     		mov	r4, r0
 2836              	.LVL250:
 808:rtos/uC-FS/FAT/fs_fat.c ****            FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): No free FAT clus could be found.\r\n"));
 2837              		.loc 1 808 9 is_stmt 1 view .LVU1031
 808:rtos/uC-FS/FAT/fs_fat.c ****            FS_TRACE_DBG(("FS_FAT_ClusChainAlloc(): No free FAT clus could be found.\r\n"));
 2838              		.loc 1 808 12 is_stmt 0 view .LVU1032
 2839 00dc 8145     		cmp	r9, r0
 2840 00de E5D0     		beq	.L193
ARM GAS  /tmp/ccazZ5Hl.s 			page 173


 822:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2841              		.loc 1 822 9 is_stmt 1 view .LVU1033
 822:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2842              		.loc 1 822 13 is_stmt 0 view .LVU1034
 2843 00e0 2B88     		ldrh	r3, [r5]
 822:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2844              		.loc 1 822 12 view .LVU1035
 2845 00e2 002B     		cmp	r3, #0
 2846 00e4 37D1     		bne	.L182
 826:rtos/uC-FS/FAT/fs_fat.c **** 
 2847              		.loc 1 826 99 is_stmt 1 view .LVU1036
 828:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 2848              		.loc 1 828 9 view .LVU1037
 828:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 2849              		.loc 1 828 19 is_stmt 0 view .LVU1038
 2850 00e6 DBF84C30 		ldr	r3, [fp, #76]
 828:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 2851              		.loc 1 828 36 view .LVU1039
 2852 00ea D3F800A0 		ldr	r10, [r3]
 828:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 2853              		.loc 1 828 9 view .LVU1040
 2854 00ee 0095     		str	r5, [sp]
 2855 00f0 0346     		mov	r3, r0
 2856 00f2 4A46     		mov	r2, r9
 2857 00f4 3946     		mov	r1, r7
 2858 00f6 4046     		mov	r0, r8
 2859              	.LVL251:
 828:rtos/uC-FS/FAT/fs_fat.c ****                                                p_buf,
 2860              		.loc 1 828 9 view .LVU1041
 2861 00f8 D047     		blx	r10
 2862              	.LVL252:
 833:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2863              		.loc 1 833 9 is_stmt 1 view .LVU1042
 833:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2864              		.loc 1 833 13 is_stmt 0 view .LVU1043
 2865 00fa 2B88     		ldrh	r3, [r5]
 833:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 2866              		.loc 1 833 12 view .LVU1044
 2867 00fc 002B     		cmp	r3, #0
 2868 00fe E4D0     		beq	.L194
 834:rtos/uC-FS/FAT/fs_fat.c ****         }
 2869              		.loc 1 834 20 view .LVU1045
 2870 0100 0020     		movs	r0, #0
 2871 0102 B1E7     		b	.L164
 2872              	.LVL253:
 2873              	.L179:
 834:rtos/uC-FS/FAT/fs_fat.c ****         }
 2874              		.loc 1 834 20 view .LVU1046
 2875 0104 DDF80C90 		ldr	r9, [sp, #12]
 2876 0108 3346     		mov	r3, r6
 2877 010a 4646     		mov	r6, r8
 2878              	.LVL254:
 834:rtos/uC-FS/FAT/fs_fat.c ****         }
 2879              		.loc 1 834 20 view .LVU1047
 2880 010c 9846     		mov	r8, r3
 2881              	.LVL255:
 834:rtos/uC-FS/FAT/fs_fat.c ****         }
ARM GAS  /tmp/ccazZ5Hl.s 			page 174


 2882              		.loc 1 834 20 view .LVU1048
 2883 010e DEE7     		b	.L173
 2884              	.LVL256:
 2885              	.L192:
 834:rtos/uC-FS/FAT/fs_fat.c ****         }
 2886              		.loc 1 834 20 view .LVU1049
 2887 0110 4346     		mov	r3, r8
 2888 0112 B046     		mov	r8, r6
 2889              	.LVL257:
 834:rtos/uC-FS/FAT/fs_fat.c ****         }
 2890              		.loc 1 834 20 view .LVU1050
 2891 0114 1E46     		mov	r6, r3
 2892              	.LVL258:
 841:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 2893              		.loc 1 841 5 is_stmt 1 view .LVU1051
 841:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 2894              		.loc 1 841 15 is_stmt 0 view .LVU1052
 2895 0116 DBF84C30 		ldr	r3, [fp, #76]
 2896              	.LVL259:
 841:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 2897              		.loc 1 841 32 view .LVU1053
 2898 011a 1C68     		ldr	r4, [r3]
 841:rtos/uC-FS/FAT/fs_fat.c ****                                            p_buf,
 2899              		.loc 1 841 5 view .LVU1054
 2900 011c DB68     		ldr	r3, [r3, #12]
 2901 011e 0095     		str	r5, [sp]
 2902 0120 4A46     		mov	r2, r9
 2903 0122 3946     		mov	r1, r7
 2904 0124 3046     		mov	r0, r6
 2905 0126 A047     		blx	r4
 2906              	.LVL260:
 846:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 2907              		.loc 1 846 5 is_stmt 1 view .LVU1055
 846:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 2908              		.loc 1 846 9 is_stmt 0 view .LVU1056
 2909 0128 2B88     		ldrh	r3, [r5]
 846:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 2910              		.loc 1 846 8 view .LVU1057
 2911 012a B3B9     		cbnz	r3, .L184
 852:rtos/uC-FS/FAT/fs_fat.c ****     FS_CTR_STAT_INC(p_fat_data->StatAllocClusCtr);
 2912              		.loc 1 852 139 is_stmt 1 view .LVU1058
 853:rtos/uC-FS/FAT/fs_fat.c ****     if (p_fat_data->QueryInfoValid == DEF_YES) {                /* Update query info.              
 2913              		.loc 1 853 50 view .LVU1059
 854:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->QueryFreeClusCnt -= nbr_clus;
 2914              		.loc 1 854 5 view .LVU1060
 854:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->QueryFreeClusCnt -= nbr_clus;
 2915              		.loc 1 854 19 is_stmt 0 view .LVU1061
 2916 012c 9BF85030 		ldrb	r3, [fp, #80]	@ zero_extendqisi2
 854:rtos/uC-FS/FAT/fs_fat.c ****         p_fat_data->QueryFreeClusCnt -= nbr_clus;
 2917              		.loc 1 854 8 view .LVU1062
 2918 0130 012B     		cmp	r3, #1
 2919 0132 03D0     		beq	.L195
 2920              	.L175:
 858:rtos/uC-FS/FAT/fs_fat.c ****     return (start_clus);
 2921              		.loc 1 858 4 is_stmt 1 view .LVU1063
 858:rtos/uC-FS/FAT/fs_fat.c ****     return (start_clus);
 2922              		.loc 1 858 11 is_stmt 0 view .LVU1064
ARM GAS  /tmp/ccazZ5Hl.s 			page 175


 2923 0134 0023     		movs	r3, #0
 2924 0136 2B80     		strh	r3, [r5]	@ movhi
 859:rtos/uC-FS/FAT/fs_fat.c **** }
 2925              		.loc 1 859 5 is_stmt 1 view .LVU1065
 859:rtos/uC-FS/FAT/fs_fat.c **** }
 2926              		.loc 1 859 12 is_stmt 0 view .LVU1066
 2927 0138 0398     		ldr	r0, [sp, #12]
 2928 013a 95E7     		b	.L164
 2929              	.L195:
 855:rtos/uC-FS/FAT/fs_fat.c ****     }
 2930              		.loc 1 855 9 is_stmt 1 view .LVU1067
 855:rtos/uC-FS/FAT/fs_fat.c ****     }
 2931              		.loc 1 855 38 is_stmt 0 view .LVU1068
 2932 013c DBF85830 		ldr	r3, [fp, #88]
 2933 0140 049A     		ldr	r2, [sp, #16]
 2934 0142 9B1A     		subs	r3, r3, r2
 2935 0144 CBF85830 		str	r3, [fp, #88]
 2936 0148 F4E7     		b	.L175
 2937              	.LVL261:
 2938              	.L177:
 739:rtos/uC-FS/FAT/fs_fat.c ****         }
 2939              		.loc 1 739 20 view .LVU1069
 2940 014a 0398     		ldr	r0, [sp, #12]
 2941              	.LVL262:
 739:rtos/uC-FS/FAT/fs_fat.c ****         }
 2942              		.loc 1 739 20 view .LVU1070
 2943 014c 8CE7     		b	.L164
 2944              	.LVL263:
 2945              	.L178:
 753:rtos/uC-FS/FAT/fs_fat.c ****     }
 2946              		.loc 1 753 16 view .LVU1071
 2947 014e 0020     		movs	r0, #0
 2948              	.LVL264:
 753:rtos/uC-FS/FAT/fs_fat.c ****     }
 2949              		.loc 1 753 16 view .LVU1072
 2950 0150 8AE7     		b	.L164
 2951              	.LVL265:
 2952              	.L181:
 817:rtos/uC-FS/FAT/fs_fat.c ****            }
 2953              		.loc 1 817 23 view .LVU1073
 2954 0152 0020     		movs	r0, #0
 2955 0154 88E7     		b	.L164
 2956              	.LVL266:
 2957              	.L182:
 823:rtos/uC-FS/FAT/fs_fat.c ****         }
 2958              		.loc 1 823 20 view .LVU1074
 2959 0156 0020     		movs	r0, #0
 2960              	.LVL267:
 823:rtos/uC-FS/FAT/fs_fat.c ****         }
 2961              		.loc 1 823 20 view .LVU1075
 2962 0158 86E7     		b	.L164
 2963              	.LVL268:
 2964              	.L184:
 847:rtos/uC-FS/FAT/fs_fat.c ****     }
 2965              		.loc 1 847 16 view .LVU1076
 2966 015a 4046     		mov	r0, r8
 2967 015c 84E7     		b	.L164
ARM GAS  /tmp/ccazZ5Hl.s 			page 176


 2968              		.cfi_endproc
 2969              	.LFE0:
 2971              		.section	.text.FS_FAT_ClusNextGet,"ax",%progbits
 2972              		.align	1
 2973              		.global	FS_FAT_ClusNextGet
 2974              		.syntax unified
 2975              		.thumb
 2976              		.thumb_func
 2977              		.fpu fpv4-sp-d16
 2979              	FS_FAT_ClusNextGet:
 2980              	.LVL269:
 2981              	.LFB7:
1561:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 2982              		.loc 1 1561 1 is_stmt 1 view -0
 2983              		.cfi_startproc
 2984              		@ args = 0, pretend = 0, frame = 0
 2985              		@ frame_needed = 0, uses_anonymous_args = 0
1561:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 2986              		.loc 1 1561 1 is_stmt 0 view .LVU1078
 2987 0000 70B5     		push	{r4, r5, r6, lr}
 2988              	.LCFI30:
 2989              		.cfi_def_cfa_offset 16
 2990              		.cfi_offset 4, -16
 2991              		.cfi_offset 5, -12
 2992              		.cfi_offset 6, -8
 2993              		.cfi_offset 14, -4
 2994 0002 1C46     		mov	r4, r3
1562:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       valid;
 2995              		.loc 1 1562 5 is_stmt 1 view .LVU1079
1563:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 2996              		.loc 1 1563 5 view .LVU1080
1564:rtos/uC-FS/FAT/fs_fat.c **** 
 2997              		.loc 1 1564 5 view .LVU1081
1567:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  =  p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol, /* Rd next clus.                   
 2998              		.loc 1 1567 5 view .LVU1082
1567:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  =  p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol, /* Rd next clus.                   
 2999              		.loc 1 1567 16 is_stmt 0 view .LVU1083
 3000 0004 456B     		ldr	r5, [r0, #52]
 3001              	.LVL270:
1568:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
 3002              		.loc 1 1568 5 is_stmt 1 view .LVU1084
1568:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
 3003              		.loc 1 1568 29 is_stmt 0 view .LVU1085
 3004 0006 EE6C     		ldr	r6, [r5, #76]
1568:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
 3005              		.loc 1 1568 46 view .LVU1086
 3006 0008 7668     		ldr	r6, [r6, #4]
1568:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
 3007              		.loc 1 1568 19 view .LVU1087
 3008 000a B047     		blx	r6
 3009              	.LVL271:
1572:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 3010              		.loc 1 1572 5 is_stmt 1 view .LVU1088
1572:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 3011              		.loc 1 1572 9 is_stmt 0 view .LVU1089
 3012 000c 2388     		ldrh	r3, [r4]
1572:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
ARM GAS  /tmp/ccazZ5Hl.s 			page 177


 3013              		.loc 1 1572 8 view .LVU1090
 3014 000e ABB9     		cbnz	r3, .L200
1576:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_SYS_CLUS_CHAIN_END;
 3015              		.loc 1 1576 5 is_stmt 1 view .LVU1091
1576:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_SYS_CLUS_CHAIN_END;
 3016              		.loc 1 1576 32 is_stmt 0 view .LVU1092
 3017 0010 EB6C     		ldr	r3, [r5, #76]
1576:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_SYS_CLUS_CHAIN_END;
 3018              		.loc 1 1576 49 view .LVU1093
 3019 0012 DB68     		ldr	r3, [r3, #12]
1576:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_SYS_CLUS_CHAIN_END;
 3020              		.loc 1 1576 8 view .LVU1094
 3021 0014 8342     		cmp	r3, r0
 3022 0016 07D9     		bls	.L202
1581:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {                                      /* Cluster is invalid.             
 3023              		.loc 1 1581 5 is_stmt 1 view .LVU1095
1581:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {                                      /* Cluster is invalid.             
 3024              		.loc 1 1581 13 is_stmt 0 view .LVU1096
 3025 0018 6B69     		ldr	r3, [r5, #20]
1581:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {                                      /* Cluster is invalid.             
 3026              		.loc 1 1581 11 view .LVU1097
 3027 001a 8342     		cmp	r3, r0
 3028 001c 09D9     		bls	.L199
1581:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {                                      /* Cluster is invalid.             
 3029              		.loc 1 1581 13 discriminator 1 view .LVU1098
 3030 001e 0128     		cmp	r0, #1
 3031 0020 07D9     		bls	.L199
 3032              	.LVL272:
1582:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_SYS_CLUS_INVALID;
 3033              		.loc 1 1582 5 is_stmt 1 view .LVU1099
1587:rtos/uC-FS/FAT/fs_fat.c ****     return (next_clus);
 3034              		.loc 1 1587 4 view .LVU1100
1587:rtos/uC-FS/FAT/fs_fat.c ****     return (next_clus);
 3035              		.loc 1 1587 11 is_stmt 0 view .LVU1101
 3036 0022 0023     		movs	r3, #0
 3037 0024 2380     		strh	r3, [r4]	@ movhi
1588:rtos/uC-FS/FAT/fs_fat.c **** }
 3038              		.loc 1 1588 5 is_stmt 1 view .LVU1102
1588:rtos/uC-FS/FAT/fs_fat.c **** }
 3039              		.loc 1 1588 12 is_stmt 0 view .LVU1103
 3040 0026 0AE0     		b	.L196
 3041              	.LVL273:
 3042              	.L202:
1577:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 3043              		.loc 1 1577 8 is_stmt 1 view .LVU1104
1577:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 3044              		.loc 1 1577 15 is_stmt 0 view .LVU1105
 3045 0028 40F23653 		movw	r3, #1334
 3046 002c 2380     		strh	r3, [r4]	@ movhi
1578:rtos/uC-FS/FAT/fs_fat.c ****     }
 3047              		.loc 1 1578 9 is_stmt 1 view .LVU1106
1578:rtos/uC-FS/FAT/fs_fat.c ****     }
 3048              		.loc 1 1578 16 is_stmt 0 view .LVU1107
 3049 002e 0020     		movs	r0, #0
 3050              	.LVL274:
1578:rtos/uC-FS/FAT/fs_fat.c ****     }
 3051              		.loc 1 1578 16 view .LVU1108
ARM GAS  /tmp/ccazZ5Hl.s 			page 178


 3052 0030 05E0     		b	.L196
 3053              	.LVL275:
 3054              	.L199:
1582:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_SYS_CLUS_INVALID;
 3055              		.loc 1 1582 5 is_stmt 1 view .LVU1109
1583:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 3056              		.loc 1 1583 8 view .LVU1110
1583:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 3057              		.loc 1 1583 15 is_stmt 0 view .LVU1111
 3058 0032 4FF4A763 		mov	r3, #1336
 3059 0036 2380     		strh	r3, [r4]	@ movhi
1584:rtos/uC-FS/FAT/fs_fat.c ****     }
 3060              		.loc 1 1584 9 is_stmt 1 view .LVU1112
1584:rtos/uC-FS/FAT/fs_fat.c ****     }
 3061              		.loc 1 1584 16 is_stmt 0 view .LVU1113
 3062 0038 0020     		movs	r0, #0
 3063              	.LVL276:
1584:rtos/uC-FS/FAT/fs_fat.c ****     }
 3064              		.loc 1 1584 16 view .LVU1114
 3065 003a 00E0     		b	.L196
 3066              	.LVL277:
 3067              	.L200:
1573:rtos/uC-FS/FAT/fs_fat.c ****     }
 3068              		.loc 1 1573 16 view .LVU1115
 3069 003c 0020     		movs	r0, #0
 3070              	.LVL278:
 3071              	.L196:
1589:rtos/uC-FS/FAT/fs_fat.c **** 
 3072              		.loc 1 1589 1 view .LVU1116
 3073 003e 70BD     		pop	{r4, r5, r6, pc}
1589:rtos/uC-FS/FAT/fs_fat.c **** 
 3074              		.loc 1 1589 1 view .LVU1117
 3075              		.cfi_endproc
 3076              	.LFE7:
 3078              		.section	.text.FS_FAT_SecNextGet,"ax",%progbits
 3079              		.align	1
 3080              		.global	FS_FAT_SecNextGet
 3081              		.syntax unified
 3082              		.thumb
 3083              		.thumb_func
 3084              		.fpu fpv4-sp-d16
 3086              	FS_FAT_SecNextGet:
 3087              	.LVL279:
 3088              	.LFB8:
1622:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    clus_sec_rem;
 3089              		.loc 1 1622 1 is_stmt 1 view -0
 3090              		.cfi_startproc
 3091              		@ args = 0, pretend = 0, frame = 0
 3092              		@ frame_needed = 0, uses_anonymous_args = 0
1622:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    clus_sec_rem;
 3093              		.loc 1 1622 1 is_stmt 0 view .LVU1119
 3094 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3095              	.LCFI31:
 3096              		.cfi_def_cfa_offset 24
 3097              		.cfi_offset 3, -24
 3098              		.cfi_offset 4, -20
 3099              		.cfi_offset 5, -16
ARM GAS  /tmp/ccazZ5Hl.s 			page 179


 3100              		.cfi_offset 6, -12
 3101              		.cfi_offset 7, -8
 3102              		.cfi_offset 14, -4
 3103 0002 1D46     		mov	r5, r3
1623:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 3104              		.loc 1 1623 5 is_stmt 1 view .LVU1120
1624:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    next_sec;
 3105              		.loc 1 1624 5 view .LVU1121
1625:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    root_dir_sec_last;
 3106              		.loc 1 1625 5 view .LVU1122
1626:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   start_clus;
 3107              		.loc 1 1626 5 view .LVU1123
1627:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 3108              		.loc 1 1627 5 view .LVU1124
1628:rtos/uC-FS/FAT/fs_fat.c **** 
 3109              		.loc 1 1628 5 view .LVU1125
1631:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ HANDLE ROOT D
 3110              		.loc 1 1631 5 view .LVU1126
1631:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ------------------ HANDLE ROOT D
 3111              		.loc 1 1631 16 is_stmt 0 view .LVU1127
 3112 0004 446B     		ldr	r4, [r0, #52]
 3113              	.LVL280:
1633:rtos/uC-FS/FAT/fs_fat.c ****         if (start_sec < p_fat_data->DataStart) {                /* If start sec outside data       
 3114              		.loc 1 1633 5 is_stmt 1 view .LVU1128
1633:rtos/uC-FS/FAT/fs_fat.c ****         if (start_sec < p_fat_data->DataStart) {                /* If start sec outside data       
 3115              		.loc 1 1633 19 is_stmt 0 view .LVU1129
 3116 0006 94F84A30 		ldrb	r3, [r4, #74]	@ zero_extendqisi2
 3117              	.LVL281:
1633:rtos/uC-FS/FAT/fs_fat.c ****         if (start_sec < p_fat_data->DataStart) {                /* If start sec outside data       
 3118              		.loc 1 1633 8 view .LVU1130
 3119 000a 202B     		cmp	r3, #32
 3120 000c 13D0     		beq	.L204
1634:rtos/uC-FS/FAT/fs_fat.c ****             if (start_sec >= p_fat_data->RootDirStart) {        /* ... & sec within root dir       
 3121              		.loc 1 1634 9 is_stmt 1 view .LVU1131
1634:rtos/uC-FS/FAT/fs_fat.c ****             if (start_sec >= p_fat_data->RootDirStart) {        /* ... & sec within root dir       
 3122              		.loc 1 1634 35 is_stmt 0 view .LVU1132
 3123 000e E36A     		ldr	r3, [r4, #44]
1634:rtos/uC-FS/FAT/fs_fat.c ****             if (start_sec >= p_fat_data->RootDirStart) {        /* ... & sec within root dir       
 3124              		.loc 1 1634 12 view .LVU1133
 3125 0010 9342     		cmp	r3, r2
 3126 0012 10D9     		bls	.L204
1635:rtos/uC-FS/FAT/fs_fat.c ****                 root_dir_sec_last = p_fat_data->RootDirSize + p_fat_data->RootDirStart - 1u;
 3127              		.loc 1 1635 13 is_stmt 1 view .LVU1134
1635:rtos/uC-FS/FAT/fs_fat.c ****                 root_dir_sec_last = p_fat_data->RootDirSize + p_fat_data->RootDirStart - 1u;
 3128              		.loc 1 1635 40 is_stmt 0 view .LVU1135
 3129 0014 A36A     		ldr	r3, [r4, #40]
1635:rtos/uC-FS/FAT/fs_fat.c ****                 root_dir_sec_last = p_fat_data->RootDirSize + p_fat_data->RootDirStart - 1u;
 3130              		.loc 1 1635 16 view .LVU1136
 3131 0016 9342     		cmp	r3, r2
 3132 0018 08D8     		bhi	.L205
1636:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
 3133              		.loc 1 1636 17 is_stmt 1 view .LVU1137
1636:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
 3134              		.loc 1 1636 47 is_stmt 0 view .LVU1138
 3135 001a A168     		ldr	r1, [r4, #8]
 3136              	.LVL282:
1636:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
ARM GAS  /tmp/ccazZ5Hl.s 			page 180


 3137              		.loc 1 1636 61 view .LVU1139
 3138 001c 0B44     		add	r3, r3, r1
1636:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
 3139              		.loc 1 1636 35 view .LVU1140
 3140 001e 013B     		subs	r3, r3, #1
 3141              	.LVL283:
1637:rtos/uC-FS/FAT/fs_fat.c ****                     next_sec = start_sec + 1u;                  /* ... rtn next sec.               
 3142              		.loc 1 1637 17 is_stmt 1 view .LVU1141
1637:rtos/uC-FS/FAT/fs_fat.c ****                     next_sec = start_sec + 1u;                  /* ... rtn next sec.               
 3143              		.loc 1 1637 20 is_stmt 0 view .LVU1142
 3144 0020 9A42     		cmp	r2, r3
 3145 0022 03D2     		bcs	.L205
1638:rtos/uC-FS/FAT/fs_fat.c ****                    *p_err = FS_ERR_NONE;
 3146              		.loc 1 1638 21 is_stmt 1 view .LVU1143
1638:rtos/uC-FS/FAT/fs_fat.c ****                    *p_err = FS_ERR_NONE;
 3147              		.loc 1 1638 30 is_stmt 0 view .LVU1144
 3148 0024 501C     		adds	r0, r2, #1
 3149              	.LVL284:
1639:rtos/uC-FS/FAT/fs_fat.c ****                     return (next_sec);
 3150              		.loc 1 1639 20 is_stmt 1 view .LVU1145
1639:rtos/uC-FS/FAT/fs_fat.c ****                     return (next_sec);
 3151              		.loc 1 1639 27 is_stmt 0 view .LVU1146
 3152 0026 0023     		movs	r3, #0
 3153              	.LVL285:
1639:rtos/uC-FS/FAT/fs_fat.c ****                     return (next_sec);
 3154              		.loc 1 1639 27 view .LVU1147
 3155 0028 2B80     		strh	r3, [r5]	@ movhi
 3156              	.LVL286:
1640:rtos/uC-FS/FAT/fs_fat.c ****                 }
 3157              		.loc 1 1640 21 is_stmt 1 view .LVU1148
1640:rtos/uC-FS/FAT/fs_fat.c ****                 }
 3158              		.loc 1 1640 28 is_stmt 0 view .LVU1149
 3159 002a 0FE0     		b	.L203
 3160              	.LVL287:
 3161              	.L205:
1644:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 3162              		.loc 1 1644 12 is_stmt 1 view .LVU1150
1644:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 3163              		.loc 1 1644 19 is_stmt 0 view .LVU1151
 3164 002c 4FF4FB73 		mov	r3, #502
 3165 0030 2B80     		strh	r3, [r5]	@ movhi
1645:rtos/uC-FS/FAT/fs_fat.c ****         }
 3166              		.loc 1 1645 13 is_stmt 1 view .LVU1152
1645:rtos/uC-FS/FAT/fs_fat.c ****         }
 3167              		.loc 1 1645 20 is_stmt 0 view .LVU1153
 3168 0032 0020     		movs	r0, #0
 3169              	.LVL288:
1645:rtos/uC-FS/FAT/fs_fat.c ****         }
 3170              		.loc 1 1645 20 view .LVU1154
 3171 0034 0AE0     		b	.L203
 3172              	.LVL289:
 3173              	.L204:
1651:rtos/uC-FS/FAT/fs_fat.c **** 
 3174              		.loc 1 1651 5 is_stmt 1 view .LVU1155
1651:rtos/uC-FS/FAT/fs_fat.c **** 
 3175              		.loc 1 1651 20 is_stmt 0 view .LVU1156
 3176 0036 E36B     		ldr	r3, [r4, #60]
ARM GAS  /tmp/ccazZ5Hl.s 			page 181


 3177 0038 E66A     		ldr	r6, [r4, #44]
 3178 003a 961B     		subs	r6, r2, r6
 3179 003c 5F1E     		subs	r7, r3, #1
 3180 003e 3740     		ands	r7, r7, r6
1651:rtos/uC-FS/FAT/fs_fat.c **** 
 3181              		.loc 1 1651 18 view .LVU1157
 3182 0040 DB1B     		subs	r3, r3, r7
 3183              	.LVL290:
1653:rtos/uC-FS/FAT/fs_fat.c ****         next_sec = start_sec + 1u;                              /* ... rtn next sec.               
 3184              		.loc 1 1653 5 is_stmt 1 view .LVU1158
1653:rtos/uC-FS/FAT/fs_fat.c ****         next_sec = start_sec + 1u;                              /* ... rtn next sec.               
 3185              		.loc 1 1653 8 is_stmt 0 view .LVU1159
 3186 0042 012B     		cmp	r3, #1
 3187 0044 03D0     		beq	.L207
1654:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
 3188              		.loc 1 1654 9 is_stmt 1 view .LVU1160
1654:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
 3189              		.loc 1 1654 18 is_stmt 0 view .LVU1161
 3190 0046 501C     		adds	r0, r2, #1
 3191              	.LVL291:
1655:rtos/uC-FS/FAT/fs_fat.c ****         return (next_sec);
 3192              		.loc 1 1655 8 is_stmt 1 view .LVU1162
1655:rtos/uC-FS/FAT/fs_fat.c ****         return (next_sec);
 3193              		.loc 1 1655 15 is_stmt 0 view .LVU1163
 3194 0048 0023     		movs	r3, #0
 3195              	.LVL292:
1655:rtos/uC-FS/FAT/fs_fat.c ****         return (next_sec);
 3196              		.loc 1 1655 15 view .LVU1164
 3197 004a 2B80     		strh	r3, [r5]	@ movhi
 3198              	.LVL293:
1656:rtos/uC-FS/FAT/fs_fat.c ****     }
 3199              		.loc 1 1656 9 is_stmt 1 view .LVU1165
 3200              	.L203:
1671:rtos/uC-FS/FAT/fs_fat.c **** 
 3201              		.loc 1 1671 1 is_stmt 0 view .LVU1166
 3202 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3203              	.LVL294:
 3204              	.L207:
1659:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  = FS_FAT_ClusNextGet(p_vol,
 3205              		.loc 1 1659 5 is_stmt 1 view .LVU1167
1659:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  = FS_FAT_ClusNextGet(p_vol,
 3206              		.loc 1 1659 18 is_stmt 0 view .LVU1168
 3207 004e 94F84020 		ldrb	r2, [r4, #64]	@ zero_extendqisi2
 3208              	.LVL295:
1659:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  = FS_FAT_ClusNextGet(p_vol,
 3209              		.loc 1 1659 18 view .LVU1169
 3210 0052 26FA02F2 		lsr	r2, r6, r2
 3211              	.LVL296:
1660:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
 3212              		.loc 1 1660 5 is_stmt 1 view .LVU1170
1660:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
 3213              		.loc 1 1660 18 is_stmt 0 view .LVU1171
 3214 0056 2B46     		mov	r3, r5
 3215              	.LVL297:
1660:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
 3216              		.loc 1 1660 18 view .LVU1172
 3217 0058 0232     		adds	r2, r2, #2
ARM GAS  /tmp/ccazZ5Hl.s 			page 182


 3218              	.LVL298:
1660:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
 3219              		.loc 1 1660 18 view .LVU1173
 3220 005a FFF7FEFF 		bl	FS_FAT_ClusNextGet
 3221              	.LVL299:
1664:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 3222              		.loc 1 1664 5 is_stmt 1 view .LVU1174
1664:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 3223              		.loc 1 1664 9 is_stmt 0 view .LVU1175
 3224 005e 2B88     		ldrh	r3, [r5]
1664:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 3225              		.loc 1 1664 8 view .LVU1176
 3226 0060 43B9     		cbnz	r3, .L208
1668:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 3227              		.loc 1 1668 5 is_stmt 1 view .LVU1177
1668:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 3228              		.loc 1 1668 16 is_stmt 0 view .LVU1178
 3229 0062 E26A     		ldr	r2, [r4, #44]
 3230 0064 0238     		subs	r0, r0, #2
 3231              	.LVL300:
1668:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 3232              		.loc 1 1668 16 view .LVU1179
 3233 0066 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 3234 006a 9840     		lsls	r0, r0, r3
 3235              	.LVL301:
1668:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 3236              		.loc 1 1668 14 view .LVU1180
 3237 006c 1044     		add	r0, r0, r2
 3238              	.LVL302:
1669:rtos/uC-FS/FAT/fs_fat.c ****     return (next_sec);
 3239              		.loc 1 1669 4 is_stmt 1 view .LVU1181
1669:rtos/uC-FS/FAT/fs_fat.c ****     return (next_sec);
 3240              		.loc 1 1669 11 is_stmt 0 view .LVU1182
 3241 006e 0023     		movs	r3, #0
 3242 0070 2B80     		strh	r3, [r5]	@ movhi
1670:rtos/uC-FS/FAT/fs_fat.c **** }
 3243              		.loc 1 1670 5 is_stmt 1 view .LVU1183
1670:rtos/uC-FS/FAT/fs_fat.c **** }
 3244              		.loc 1 1670 12 is_stmt 0 view .LVU1184
 3245 0072 EBE7     		b	.L203
 3246              	.LVL303:
 3247              	.L208:
1665:rtos/uC-FS/FAT/fs_fat.c ****     }
 3248              		.loc 1 1665 16 view .LVU1185
 3249 0074 0020     		movs	r0, #0
 3250              	.LVL304:
1665:rtos/uC-FS/FAT/fs_fat.c ****     }
 3251              		.loc 1 1665 16 view .LVU1186
 3252 0076 E9E7     		b	.L203
 3253              		.cfi_endproc
 3254              	.LFE8:
 3256              		.section	.text.FS_FAT_Query,"ax",%progbits
 3257              		.align	1
 3258              		.global	FS_FAT_Query
 3259              		.syntax unified
 3260              		.thumb
 3261              		.thumb_func
ARM GAS  /tmp/ccazZ5Hl.s 			page 183


 3262              		.fpu fpv4-sp-d16
 3264              	FS_FAT_Query:
 3265              	.LVL305:
 3266              	.LFB10:
1847:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   bad_clus_cnt;
 3267              		.loc 1 1847 1 is_stmt 1 view -0
 3268              		.cfi_startproc
 3269              		@ args = 0, pretend = 0, frame = 8
 3270              		@ frame_needed = 0, uses_anonymous_args = 0
1847:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   bad_clus_cnt;
 3271              		.loc 1 1847 1 is_stmt 0 view .LVU1188
 3272 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3273              	.LCFI32:
 3274              		.cfi_def_cfa_offset 36
 3275              		.cfi_offset 4, -36
 3276              		.cfi_offset 5, -32
 3277              		.cfi_offset 6, -28
 3278              		.cfi_offset 7, -24
 3279              		.cfi_offset 8, -20
 3280              		.cfi_offset 9, -16
 3281              		.cfi_offset 10, -12
 3282              		.cfi_offset 11, -8
 3283              		.cfi_offset 14, -4
 3284 0004 83B0     		sub	sp, sp, #12
 3285              	.LCFI33:
 3286              		.cfi_def_cfa_offset 48
 3287 0006 9346     		mov	fp, r2
 3288 0008 1E46     		mov	r6, r3
1848:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus;
 3289              		.loc 1 1848 5 is_stmt 1 view .LVU1189
1849:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   fat_entry;
 3290              		.loc 1 1849 5 view .LVU1190
1850:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   free_clus_cnt;
 3291              		.loc 1 1850 5 view .LVU1191
1851:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   used_clus_cnt;
 3292              		.loc 1 1851 5 view .LVU1192
1852:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 3293              		.loc 1 1852 5 view .LVU1193
1853:rtos/uC-FS/FAT/fs_fat.c **** 
 3294              		.loc 1 1853 5 view .LVU1194
1857:rtos/uC-FS/FAT/fs_fat.c ****     p_info->BadSecCnt  =  0u;
 3295              		.loc 1 1857 5 view .LVU1195
1857:rtos/uC-FS/FAT/fs_fat.c ****     p_info->BadSecCnt  =  0u;
 3296              		.loc 1 1857 24 is_stmt 0 view .LVU1196
 3297 000a 456B     		ldr	r5, [r0, #52]
 3298              	.LVL306:
1858:rtos/uC-FS/FAT/fs_fat.c ****     p_info->FreeSecCnt =  0u;
 3299              		.loc 1 1858 5 is_stmt 1 view .LVU1197
1858:rtos/uC-FS/FAT/fs_fat.c ****     p_info->FreeSecCnt =  0u;
 3300              		.loc 1 1858 24 is_stmt 0 view .LVU1198
 3301 000c 0023     		movs	r3, #0
 3302              	.LVL307:
1858:rtos/uC-FS/FAT/fs_fat.c ****     p_info->FreeSecCnt =  0u;
 3303              		.loc 1 1858 24 view .LVU1199
 3304 000e 1360     		str	r3, [r2]
1859:rtos/uC-FS/FAT/fs_fat.c ****     p_info->UsedSecCnt =  0u;
 3305              		.loc 1 1859 5 is_stmt 1 view .LVU1200
ARM GAS  /tmp/ccazZ5Hl.s 			page 184


1859:rtos/uC-FS/FAT/fs_fat.c ****     p_info->UsedSecCnt =  0u;
 3306              		.loc 1 1859 24 is_stmt 0 view .LVU1201
 3307 0010 5360     		str	r3, [r2, #4]
1860:rtos/uC-FS/FAT/fs_fat.c ****     p_info->TotSecCnt  =  0u;
 3308              		.loc 1 1860 5 is_stmt 1 view .LVU1202
1860:rtos/uC-FS/FAT/fs_fat.c ****     p_info->TotSecCnt  =  0u;
 3309              		.loc 1 1860 24 is_stmt 0 view .LVU1203
 3310 0012 9360     		str	r3, [r2, #8]
1861:rtos/uC-FS/FAT/fs_fat.c **** 
 3311              		.loc 1 1861 5 is_stmt 1 view .LVU1204
1861:rtos/uC-FS/FAT/fs_fat.c **** 
 3312              		.loc 1 1861 24 is_stmt 0 view .LVU1205
 3313 0014 D360     		str	r3, [r2, #12]
1866:rtos/uC-FS/FAT/fs_fat.c ****         p_info->BadSecCnt  = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(p_fat_data->QueryBadClusCnt,  p_fat_data
 3314              		.loc 1 1866 5 is_stmt 1 view .LVU1206
1866:rtos/uC-FS/FAT/fs_fat.c ****         p_info->BadSecCnt  = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(p_fat_data->QueryBadClusCnt,  p_fat_data
 3315              		.loc 1 1866 19 is_stmt 0 view .LVU1207
 3316 0016 95F85030 		ldrb	r3, [r5, #80]	@ zero_extendqisi2
1866:rtos/uC-FS/FAT/fs_fat.c ****         p_info->BadSecCnt  = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(p_fat_data->QueryBadClusCnt,  p_fat_data
 3317              		.loc 1 1866 8 view .LVU1208
 3318 001a 012B     		cmp	r3, #1
 3319 001c 09D0     		beq	.L221
 3320 001e 8046     		mov	r8, r0
 3321 0020 8A46     		mov	r10, r1
1887:rtos/uC-FS/FAT/fs_fat.c ****     bad_clus_cnt  = 0u;
 3322              		.loc 1 1887 19 view .LVU1209
 3323 0022 4FF00009 		mov	r9, #0
1886:rtos/uC-FS/FAT/fs_fat.c ****     used_clus_cnt = 0u;
 3324              		.loc 1 1886 19 view .LVU1210
 3325 0026 CDF80090 		str	r9, [sp]
1889:rtos/uC-FS/FAT/fs_fat.c ****     while (clus < p_fat_data->MaxClusNbr) {
 3326              		.loc 1 1889 19 view .LVU1211
 3327 002a 0224     		movs	r4, #2
1888:rtos/uC-FS/FAT/fs_fat.c ****     clus          = 2u;
 3328              		.loc 1 1888 19 view .LVU1212
 3329 002c 0192     		str	r2, [sp, #4]
 3330 002e CB46     		mov	fp, r9
 3331 0030 29E0     		b	.L211
 3332              	.L221:
1867:rtos/uC-FS/FAT/fs_fat.c ****         p_info->FreeSecCnt = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(p_fat_data->QueryFreeClusCnt, p_fat_data
 3333              		.loc 1 1867 9 is_stmt 1 view .LVU1213
1867:rtos/uC-FS/FAT/fs_fat.c ****         p_info->FreeSecCnt = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(p_fat_data->QueryFreeClusCnt, p_fat_data
 3334              		.loc 1 1867 42 is_stmt 0 view .LVU1214
 3335 0032 6A6D     		ldr	r2, [r5, #84]
 3336              	.LVL308:
1867:rtos/uC-FS/FAT/fs_fat.c ****         p_info->FreeSecCnt = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(p_fat_data->QueryFreeClusCnt, p_fat_data
 3337              		.loc 1 1867 42 view .LVU1215
 3338 0034 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 3339 0038 9A40     		lsls	r2, r2, r3
1867:rtos/uC-FS/FAT/fs_fat.c ****         p_info->FreeSecCnt = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(p_fat_data->QueryFreeClusCnt, p_fat_data
 3340              		.loc 1 1867 28 view .LVU1216
 3341 003a CBF80020 		str	r2, [fp]
1868:rtos/uC-FS/FAT/fs_fat.c **** 
 3342              		.loc 1 1868 9 is_stmt 1 view .LVU1217
1868:rtos/uC-FS/FAT/fs_fat.c **** 
 3343              		.loc 1 1868 42 is_stmt 0 view .LVU1218
 3344 003e A96D     		ldr	r1, [r5, #88]
ARM GAS  /tmp/ccazZ5Hl.s 			page 185


 3345              	.LVL309:
1868:rtos/uC-FS/FAT/fs_fat.c **** 
 3346              		.loc 1 1868 42 view .LVU1219
 3347 0040 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 3348 0044 9940     		lsls	r1, r1, r3
1868:rtos/uC-FS/FAT/fs_fat.c **** 
 3349              		.loc 1 1868 28 view .LVU1220
 3350 0046 CBF80410 		str	r1, [fp, #4]
1870:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt = ((p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR) - p_fat_data->QueryBadC
 3351              		.loc 1 1870 9 is_stmt 1 view .LVU1221
1870:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt = ((p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR) - p_fat_data->QueryBadC
 3352              		.loc 1 1870 23 is_stmt 0 view .LVU1222
 3353 004a 6B69     		ldr	r3, [r5, #20]
1870:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt = ((p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR) - p_fat_data->QueryBadC
 3354              		.loc 1 1870 72 view .LVU1223
 3355 004c 6F6D     		ldr	r7, [r5, #84]
1870:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt = ((p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR) - p_fat_data->QueryBadC
 3356              		.loc 1 1870 102 view .LVU1224
 3357 004e AC6D     		ldr	r4, [r5, #88]
1870:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt = ((p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR) - p_fat_data->QueryBadC
 3358              		.loc 1 1870 90 view .LVU1225
 3359 0050 3819     		adds	r0, r7, r4
 3360              	.LVL310:
1870:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt = ((p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR) - p_fat_data->QueryBadC
 3361              		.loc 1 1870 90 view .LVU1226
 3362 0052 0230     		adds	r0, r0, #2
1870:rtos/uC-FS/FAT/fs_fat.c ****             used_clus_cnt = ((p_fat_data->MaxClusNbr - FS_FAT_MIN_CLUS_NBR) - p_fat_data->QueryBadC
 3363              		.loc 1 1870 12 view .LVU1227
 3364 0054 8342     		cmp	r3, r0
 3365 0056 03D3     		bcc	.L219
1871:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 3366              		.loc 1 1871 13 is_stmt 1 view .LVU1228
1871:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 3367              		.loc 1 1871 77 is_stmt 0 view .LVU1229
 3368 0058 DB1B     		subs	r3, r3, r7
1871:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 3369              		.loc 1 1871 108 view .LVU1230
 3370 005a 1B1B     		subs	r3, r3, r4
1871:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 3371              		.loc 1 1871 27 view .LVU1231
 3372 005c 023B     		subs	r3, r3, #2
 3373              	.LVL311:
1871:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 3374              		.loc 1 1871 27 view .LVU1232
 3375 005e 00E0     		b	.L212
 3376              	.LVL312:
 3377              	.L219:
1873:rtos/uC-FS/FAT/fs_fat.c ****         }
 3378              		.loc 1 1873 27 view .LVU1233
 3379 0060 0023     		movs	r3, #0
 3380              	.L212:
 3381              	.LVL313:
1876:rtos/uC-FS/FAT/fs_fat.c ****         p_info->TotSecCnt  =  p_info->BadSecCnt + p_info->FreeSecCnt + p_info->UsedSecCnt;
 3382              		.loc 1 1876 9 is_stmt 1 view .LVU1234
1876:rtos/uC-FS/FAT/fs_fat.c ****         p_info->TotSecCnt  =  p_info->BadSecCnt + p_info->FreeSecCnt + p_info->UsedSecCnt;
 3383              		.loc 1 1876 42 is_stmt 0 view .LVU1235
 3384 0062 95F84000 		ldrb	r0, [r5, #64]	@ zero_extendqisi2
ARM GAS  /tmp/ccazZ5Hl.s 			page 186


 3385 0066 8340     		lsls	r3, r3, r0
 3386              	.LVL314:
1876:rtos/uC-FS/FAT/fs_fat.c ****         p_info->TotSecCnt  =  p_info->BadSecCnt + p_info->FreeSecCnt + p_info->UsedSecCnt;
 3387              		.loc 1 1876 28 view .LVU1236
 3388 0068 CBF80830 		str	r3, [fp, #8]
1877:rtos/uC-FS/FAT/fs_fat.c **** 
 3389              		.loc 1 1877 9 is_stmt 1 view .LVU1237
1877:rtos/uC-FS/FAT/fs_fat.c **** 
 3390              		.loc 1 1877 49 is_stmt 0 view .LVU1238
 3391 006c 0A44     		add	r2, r2, r1
1877:rtos/uC-FS/FAT/fs_fat.c **** 
 3392              		.loc 1 1877 70 view .LVU1239
 3393 006e 1344     		add	r3, r3, r2
1877:rtos/uC-FS/FAT/fs_fat.c **** 
 3394              		.loc 1 1877 28 view .LVU1240
 3395 0070 CBF80C30 		str	r3, [fp, #12]
1879:rtos/uC-FS/FAT/fs_fat.c ****         return;
 3396              		.loc 1 1879 8 is_stmt 1 view .LVU1241
1879:rtos/uC-FS/FAT/fs_fat.c ****         return;
 3397              		.loc 1 1879 15 is_stmt 0 view .LVU1242
 3398 0074 0023     		movs	r3, #0
 3399 0076 3380     		strh	r3, [r6]	@ movhi
1880:rtos/uC-FS/FAT/fs_fat.c ****     }
 3400              		.loc 1 1880 9 is_stmt 1 view .LVU1243
 3401 0078 3EE0     		b	.L210
 3402              	.LVL315:
 3403              	.L223:
1900:rtos/uC-FS/FAT/fs_fat.c **** 
 3404              		.loc 1 1900 13 view .LVU1244
1900:rtos/uC-FS/FAT/fs_fat.c **** 
 3405              		.loc 1 1900 25 is_stmt 0 view .LVU1245
 3406 007a 0BF1010B 		add	fp, fp, #1
 3407              	.LVL316:
1900:rtos/uC-FS/FAT/fs_fat.c **** 
 3408              		.loc 1 1900 25 view .LVU1246
 3409 007e 01E0     		b	.L215
 3410              	.L216:
1906:rtos/uC-FS/FAT/fs_fat.c ****         }
 3411              		.loc 1 1906 13 is_stmt 1 view .LVU1247
1906:rtos/uC-FS/FAT/fs_fat.c ****         }
 3412              		.loc 1 1906 26 is_stmt 0 view .LVU1248
 3413 0080 09F10109 		add	r9, r9, #1
 3414              	.LVL317:
 3415              	.L215:
1909:rtos/uC-FS/FAT/fs_fat.c ****     }
 3416              		.loc 1 1909 9 is_stmt 1 view .LVU1249
1909:rtos/uC-FS/FAT/fs_fat.c ****     }
 3417              		.loc 1 1909 13 is_stmt 0 view .LVU1250
 3418 0084 0134     		adds	r4, r4, #1
 3419              	.LVL318:
 3420              	.L211:
1890:rtos/uC-FS/FAT/fs_fat.c ****         fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol,
 3421              		.loc 1 1890 11 is_stmt 1 view .LVU1251
1890:rtos/uC-FS/FAT/fs_fat.c ****         fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol,
 3422              		.loc 1 1890 29 is_stmt 0 view .LVU1252
 3423 0086 6B69     		ldr	r3, [r5, #20]
1890:rtos/uC-FS/FAT/fs_fat.c ****         fat_entry = p_fat_data->FAT_TypeAPI_Ptr->ClusValRd(p_vol,
ARM GAS  /tmp/ccazZ5Hl.s 			page 187


 3424              		.loc 1 1890 11 view .LVU1253
 3425 0088 A342     		cmp	r3, r4
 3426 008a 13D9     		bls	.L222
1891:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 3427              		.loc 1 1891 9 is_stmt 1 view .LVU1254
1891:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 3428              		.loc 1 1891 31 is_stmt 0 view .LVU1255
 3429 008c EB6C     		ldr	r3, [r5, #76]
1891:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 3430              		.loc 1 1891 48 view .LVU1256
 3431 008e 5F68     		ldr	r7, [r3, #4]
1891:rtos/uC-FS/FAT/fs_fat.c ****                                                            p_buf,
 3432              		.loc 1 1891 21 view .LVU1257
 3433 0090 3346     		mov	r3, r6
 3434 0092 2246     		mov	r2, r4
 3435 0094 5146     		mov	r1, r10
 3436 0096 4046     		mov	r0, r8
 3437 0098 B847     		blx	r7
 3438              	.LVL319:
1895:rtos/uC-FS/FAT/fs_fat.c ****             return;
 3439              		.loc 1 1895 9 is_stmt 1 view .LVU1258
1895:rtos/uC-FS/FAT/fs_fat.c ****             return;
 3440              		.loc 1 1895 13 is_stmt 0 view .LVU1259
 3441 009a 3388     		ldrh	r3, [r6]
1895:rtos/uC-FS/FAT/fs_fat.c ****             return;
 3442              		.loc 1 1895 12 view .LVU1260
 3443 009c 63BB     		cbnz	r3, .L210
1899:rtos/uC-FS/FAT/fs_fat.c ****             bad_clus_cnt++;
 3444              		.loc 1 1899 9 is_stmt 1 view .LVU1261
1899:rtos/uC-FS/FAT/fs_fat.c ****             bad_clus_cnt++;
 3445              		.loc 1 1899 36 is_stmt 0 view .LVU1262
 3446 009e EB6C     		ldr	r3, [r5, #76]
1899:rtos/uC-FS/FAT/fs_fat.c ****             bad_clus_cnt++;
 3447              		.loc 1 1899 53 view .LVU1263
 3448 00a0 9A68     		ldr	r2, [r3, #8]
1899:rtos/uC-FS/FAT/fs_fat.c ****             bad_clus_cnt++;
 3449              		.loc 1 1899 12 view .LVU1264
 3450 00a2 8242     		cmp	r2, r0
 3451 00a4 E9D0     		beq	.L223
1902:rtos/uC-FS/FAT/fs_fat.c ****             free_clus_cnt++;
 3452              		.loc 1 1902 16 is_stmt 1 view .LVU1265
1902:rtos/uC-FS/FAT/fs_fat.c ****             free_clus_cnt++;
 3453              		.loc 1 1902 60 is_stmt 0 view .LVU1266
 3454 00a6 1B69     		ldr	r3, [r3, #16]
1902:rtos/uC-FS/FAT/fs_fat.c ****             free_clus_cnt++;
 3455              		.loc 1 1902 19 view .LVU1267
 3456 00a8 8342     		cmp	r3, r0
 3457 00aa E9D1     		bne	.L216
1903:rtos/uC-FS/FAT/fs_fat.c **** 
 3458              		.loc 1 1903 13 is_stmt 1 view .LVU1268
1903:rtos/uC-FS/FAT/fs_fat.c **** 
 3459              		.loc 1 1903 26 is_stmt 0 view .LVU1269
 3460 00ac 009B     		ldr	r3, [sp]
 3461 00ae 0133     		adds	r3, r3, #1
 3462 00b0 0093     		str	r3, [sp]
 3463              	.LVL320:
1903:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 188


 3464              		.loc 1 1903 26 view .LVU1270
 3465 00b2 E7E7     		b	.L215
 3466              	.LVL321:
 3467              	.L222:
1903:rtos/uC-FS/FAT/fs_fat.c **** 
 3468              		.loc 1 1903 26 view .LVU1271
 3469 00b4 5A46     		mov	r2, fp
 3470 00b6 DDF804B0 		ldr	fp, [sp, #4]
 3471              	.LVL322:
1915:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryBadClusCnt  =  bad_clus_cnt;
 3472              		.loc 1 1915 5 is_stmt 1 view .LVU1272
1915:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryBadClusCnt  =  bad_clus_cnt;
 3473              		.loc 1 1915 34 is_stmt 0 view .LVU1273
 3474 00ba 0123     		movs	r3, #1
 3475 00bc 85F85030 		strb	r3, [r5, #80]
1916:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryFreeClusCnt =  free_clus_cnt;
 3476              		.loc 1 1916 5 is_stmt 1 view .LVU1274
1916:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data->QueryFreeClusCnt =  free_clus_cnt;
 3477              		.loc 1 1916 34 is_stmt 0 view .LVU1275
 3478 00c0 1346     		mov	r3, r2
 3479 00c2 6A65     		str	r2, [r5, #84]
1917:rtos/uC-FS/FAT/fs_fat.c **** 
 3480              		.loc 1 1917 5 is_stmt 1 view .LVU1276
1917:rtos/uC-FS/FAT/fs_fat.c **** 
 3481              		.loc 1 1917 34 is_stmt 0 view .LVU1277
 3482 00c4 0098     		ldr	r0, [sp]
 3483 00c6 A865     		str	r0, [r5, #88]
1919:rtos/uC-FS/FAT/fs_fat.c ****     p_info->FreeSecCnt           = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(free_clus_cnt, p_fat_data->ClusSiz
 3484              		.loc 1 1919 5 is_stmt 1 view .LVU1278
1919:rtos/uC-FS/FAT/fs_fat.c ****     p_info->FreeSecCnt           = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(free_clus_cnt, p_fat_data->ClusSiz
 3485              		.loc 1 1919 48 is_stmt 0 view .LVU1279
 3486 00c8 95F84020 		ldrb	r2, [r5, #64]	@ zero_extendqisi2
 3487              	.LVL323:
1919:rtos/uC-FS/FAT/fs_fat.c ****     p_info->FreeSecCnt           = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(free_clus_cnt, p_fat_data->ClusSiz
 3488              		.loc 1 1919 48 view .LVU1280
 3489 00cc 03FA02F2 		lsl	r2, r3, r2
1919:rtos/uC-FS/FAT/fs_fat.c ****     p_info->FreeSecCnt           = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(free_clus_cnt, p_fat_data->ClusSiz
 3490              		.loc 1 1919 34 view .LVU1281
 3491 00d0 CBF80020 		str	r2, [fp]
1920:rtos/uC-FS/FAT/fs_fat.c ****     p_info->UsedSecCnt           = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(used_clus_cnt, p_fat_data->ClusSiz
 3492              		.loc 1 1920 5 is_stmt 1 view .LVU1282
1920:rtos/uC-FS/FAT/fs_fat.c ****     p_info->UsedSecCnt           = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(used_clus_cnt, p_fat_data->ClusSiz
 3493              		.loc 1 1920 48 is_stmt 0 view .LVU1283
 3494 00d4 95F84010 		ldrb	r1, [r5, #64]	@ zero_extendqisi2
 3495 00d8 00FA01F1 		lsl	r1, r0, r1
1920:rtos/uC-FS/FAT/fs_fat.c ****     p_info->UsedSecCnt           = (FS_SEC_QTY)FS_UTIL_MULT_PWR2(used_clus_cnt, p_fat_data->ClusSiz
 3496              		.loc 1 1920 34 view .LVU1284
 3497 00dc CBF80410 		str	r1, [fp, #4]
1921:rtos/uC-FS/FAT/fs_fat.c ****     p_info->TotSecCnt            =  p_info->BadSecCnt + p_info->FreeSecCnt + p_info->UsedSecCnt;
 3498              		.loc 1 1921 5 is_stmt 1 view .LVU1285
1921:rtos/uC-FS/FAT/fs_fat.c ****     p_info->TotSecCnt            =  p_info->BadSecCnt + p_info->FreeSecCnt + p_info->UsedSecCnt;
 3499              		.loc 1 1921 48 is_stmt 0 view .LVU1286
 3500 00e0 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 3501              	.LVL324:
1921:rtos/uC-FS/FAT/fs_fat.c ****     p_info->TotSecCnt            =  p_info->BadSecCnt + p_info->FreeSecCnt + p_info->UsedSecCnt;
 3502              		.loc 1 1921 48 view .LVU1287
 3503 00e4 09FA03F3 		lsl	r3, r9, r3
ARM GAS  /tmp/ccazZ5Hl.s 			page 189


1921:rtos/uC-FS/FAT/fs_fat.c ****     p_info->TotSecCnt            =  p_info->BadSecCnt + p_info->FreeSecCnt + p_info->UsedSecCnt;
 3504              		.loc 1 1921 34 view .LVU1288
 3505 00e8 CBF80830 		str	r3, [fp, #8]
1922:rtos/uC-FS/FAT/fs_fat.c **** 
 3506              		.loc 1 1922 5 is_stmt 1 view .LVU1289
1922:rtos/uC-FS/FAT/fs_fat.c **** 
 3507              		.loc 1 1922 55 is_stmt 0 view .LVU1290
 3508 00ec 0A44     		add	r2, r2, r1
1922:rtos/uC-FS/FAT/fs_fat.c **** 
 3509              		.loc 1 1922 76 view .LVU1291
 3510 00ee 1344     		add	r3, r3, r2
1922:rtos/uC-FS/FAT/fs_fat.c **** 
 3511              		.loc 1 1922 34 view .LVU1292
 3512 00f0 CBF80C30 		str	r3, [fp, #12]
1924:rtos/uC-FS/FAT/fs_fat.c **** }
 3513              		.loc 1 1924 4 is_stmt 1 view .LVU1293
1924:rtos/uC-FS/FAT/fs_fat.c **** }
 3514              		.loc 1 1924 11 is_stmt 0 view .LVU1294
 3515 00f4 0023     		movs	r3, #0
 3516 00f6 3380     		strh	r3, [r6]	@ movhi
 3517              	.LVL325:
 3518              	.L210:
1925:rtos/uC-FS/FAT/fs_fat.c **** 
 3519              		.loc 1 1925 1 view .LVU1295
 3520 00f8 03B0     		add	sp, sp, #12
 3521              	.LCFI34:
 3522              		.cfi_def_cfa_offset 36
 3523              		@ sp needed
 3524 00fa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
1925:rtos/uC-FS/FAT/fs_fat.c **** 
 3525              		.loc 1 1925 1 view .LVU1296
 3526              		.cfi_endproc
 3527              	.LFE10:
 3529              		.section	.rodata.FS_FAT_MakeBootSec.str1.4,"aMS",%progbits,1
 3530              		.align	2
 3531              	.LC0:
 3532 0000 4D535749 		.ascii	"MSWIN4.1\000"
 3532      4E342E31 
 3532      00
 3533 0009 000000   		.align	2
 3534              	.LC1:
 3535 000c 4E4F204E 		.ascii	"NO NAME    \000"
 3535      414D4520 
 3535      20202000 
 3536              		.align	2
 3537              	.LC2:
 3538 0018 46415433 		.ascii	"FAT32   \000"
 3538      32202020 
 3538      00
 3539 0021 000000   		.align	2
 3540              	.LC3:
 3541 0024 46415431 		.ascii	"FAT12   \000"
 3541      32202020 
 3541      00
 3542 002d 000000   		.align	2
 3543              	.LC4:
 3544 0030 46415431 		.ascii	"FAT16   \000"
ARM GAS  /tmp/ccazZ5Hl.s 			page 190


 3544      36202020 
 3544      00
 3545              		.section	.text.FS_FAT_MakeBootSec,"ax",%progbits
 3546              		.align	1
 3547              		.global	FS_FAT_MakeBootSec
 3548              		.syntax unified
 3549              		.thumb
 3550              		.thumb_func
 3551              		.fpu fpv4-sp-d16
 3553              	FS_FAT_MakeBootSec:
 3554              	.LVL326:
 3555              	.LFB11:
1963:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U  *p_temp_08;
 3556              		.loc 1 1963 1 is_stmt 1 view -0
 3557              		.cfi_startproc
 3558              		@ args = 8, pretend = 0, frame = 0
 3559              		@ frame_needed = 0, uses_anonymous_args = 0
1963:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U  *p_temp_08;
 3560              		.loc 1 1963 1 is_stmt 0 view .LVU1298
 3561 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3562              	.LCFI35:
 3563              		.cfi_def_cfa_offset 32
 3564              		.cfi_offset 3, -32
 3565              		.cfi_offset 4, -28
 3566              		.cfi_offset 5, -24
 3567              		.cfi_offset 6, -20
 3568              		.cfi_offset 7, -16
 3569              		.cfi_offset 8, -12
 3570              		.cfi_offset 9, -8
 3571              		.cfi_offset 14, -4
 3572 0004 0446     		mov	r4, r0
 3573 0006 0D46     		mov	r5, r1
 3574 0008 1746     		mov	r7, r2
 3575 000a 1E46     		mov	r6, r3
 3576 000c DDF82090 		ldr	r9, [sp, #32]
 3577 0010 DDF82480 		ldr	r8, [sp, #36]
1964:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   sec_per_trk;
 3578              		.loc 1 1964 5 is_stmt 1 view .LVU1299
1965:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   num_heads;
 3579              		.loc 1 1965 5 view .LVU1300
1966:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U   nbr_32;
 3580              		.loc 1 1966 5 view .LVU1301
1967:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   nbr_16;
 3581              		.loc 1 1967 5 view .LVU1302
1968:rtos/uC-FS/FAT/fs_fat.c **** 
 3582              		.loc 1 1968 5 view .LVU1303
1971:rtos/uC-FS/FAT/fs_fat.c **** 
 3583              		.loc 1 1971 5 view .LVU1304
 3584              	.LVL327:
1975:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 1u],     FS_FAT_BS_JMPBOOT
 3585              		.loc 1 1975 5 view .LVU1305
1975:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 1u],     FS_FAT_BS_JMPBOOT
 3586              		.loc 1 1975 5 view .LVU1306
 3587 0014 EB23     		movs	r3, #235
 3588              	.LVL328:
1975:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 1u],     FS_FAT_BS_JMPBOOT
 3589              		.loc 1 1975 5 is_stmt 0 view .LVU1307
ARM GAS  /tmp/ccazZ5Hl.s 			page 191


 3590 0016 0370     		strb	r3, [r0]
1975:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 1u],     FS_FAT_BS_JMPBOOT
 3591              		.loc 1 1975 5 is_stmt 1 view .LVU1308
1976:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 2u],     FS_FAT_BS_JMPBOOT
 3592              		.loc 1 1976 5 view .LVU1309
1976:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 2u],     FS_FAT_BS_JMPBOOT
 3593              		.loc 1 1976 5 view .LVU1310
 3594 0018 5823     		movs	r3, #88
 3595 001a 4370     		strb	r3, [r0, #1]
1976:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_OFF_JMPBOOT + 2u],     FS_FAT_BS_JMPBOOT
 3596              		.loc 1 1976 5 view .LVU1311
1977:rtos/uC-FS/FAT/fs_fat.c **** 
 3597              		.loc 1 1977 5 view .LVU1312
1977:rtos/uC-FS/FAT/fs_fat.c **** 
 3598              		.loc 1 1977 5 view .LVU1313
 3599 001c 9023     		movs	r3, #144
 3600 001e 8370     		strb	r3, [r0, #2]
1977:rtos/uC-FS/FAT/fs_fat.c **** 
 3601              		.loc 1 1977 5 view .LVU1314
1979:rtos/uC-FS/FAT/fs_fat.c **** 
 3602              		.loc 1 1979 5 view .LVU1315
 3603 0020 0822     		movs	r2, #8
 3604              	.LVL329:
1979:rtos/uC-FS/FAT/fs_fat.c **** 
 3605              		.loc 1 1979 5 is_stmt 0 view .LVU1316
 3606 0022 7049     		ldr	r1, .L236
 3607              	.LVL330:
1979:rtos/uC-FS/FAT/fs_fat.c **** 
 3608              		.loc 1 1979 5 view .LVU1317
 3609 0024 0330     		adds	r0, r0, #3
 3610              	.LVL331:
1979:rtos/uC-FS/FAT/fs_fat.c **** 
 3611              		.loc 1 1979 5 view .LVU1318
 3612 0026 FFF7FEFF 		bl	Mem_Copy
 3613              	.LVL332:
1981:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_SECPERCLUS],      p_sys_cfg->ClusSi
 3614              		.loc 1 1981 5 is_stmt 1 view .LVU1319
1981:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_SECPERCLUS],      p_sys_cfg->ClusSi
 3615              		.loc 1 1981 5 view .LVU1320
 3616 002a E772     		strb	r7, [r4, #11]
1981:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_SECPERCLUS],      p_sys_cfg->ClusSi
 3617              		.loc 1 1981 5 view .LVU1321
 3618 002c C7F30727 		ubfx	r7, r7, #8, #8
 3619              	.LVL333:
1981:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_SECPERCLUS],      p_sys_cfg->ClusSi
 3620              		.loc 1 1981 5 is_stmt 0 view .LVU1322
 3621 0030 2773     		strb	r7, [r4, #12]
1981:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_SECPERCLUS],      p_sys_cfg->ClusSi
 3622              		.loc 1 1981 5 is_stmt 1 view .LVU1323
1982:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_RSVDSECCNT],      p_sys_cfg->RsvdAr
 3623              		.loc 1 1982 5 view .LVU1324
1982:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_RSVDSECCNT],      p_sys_cfg->RsvdAr
 3624              		.loc 1 1982 5 view .LVU1325
 3625 0032 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 3626 0034 6373     		strb	r3, [r4, #13]
1982:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_RSVDSECCNT],      p_sys_cfg->RsvdAr
 3627              		.loc 1 1982 5 view .LVU1326
ARM GAS  /tmp/ccazZ5Hl.s 			page 192


1983:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_NUMFATS],         p_sys_cfg->NbrFAT
 3628              		.loc 1 1983 5 view .LVU1327
1983:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_NUMFATS],         p_sys_cfg->NbrFAT
 3629              		.loc 1 1983 5 view .LVU1328
 3630 0036 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 3631 0038 A373     		strb	r3, [r4, #14]
1983:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_NUMFATS],         p_sys_cfg->NbrFAT
 3632              		.loc 1 1983 5 view .LVU1329
 3633 003a AB88     		ldrh	r3, [r5, #4]
 3634 003c 1B0A     		lsrs	r3, r3, #8
 3635 003e E373     		strb	r3, [r4, #15]
1983:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_NUMFATS],         p_sys_cfg->NbrFAT
 3636              		.loc 1 1983 5 view .LVU1330
1984:rtos/uC-FS/FAT/fs_fat.c **** 
 3637              		.loc 1 1984 5 view .LVU1331
1984:rtos/uC-FS/FAT/fs_fat.c **** 
 3638              		.loc 1 1984 5 view .LVU1332
 3639 0040 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 3640 0042 2374     		strb	r3, [r4, #16]
1984:rtos/uC-FS/FAT/fs_fat.c **** 
 3641              		.loc 1 1984 5 view .LVU1333
1986:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_ROOTENTCNT],      0);
 3642              		.loc 1 1986 5 view .LVU1334
1986:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_ROOTENTCNT],      0);
 3643              		.loc 1 1986 19 is_stmt 0 view .LVU1335
 3644 0044 AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
1986:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_ROOTENTCNT],      0);
 3645              		.loc 1 1986 9 view .LVU1336
 3646 0046 202B     		cmp	r3, #32
 3647 0048 21D0     		beq	.L232
1993:rtos/uC-FS/FAT/fs_fat.c ****         if (size <= DEF_INT_16U_MAX_VAL) {
 3648              		.loc 1 1993 9 is_stmt 1 view .LVU1337
1993:rtos/uC-FS/FAT/fs_fat.c ****         if (size <= DEF_INT_16U_MAX_VAL) {
 3649              		.loc 1 1993 9 view .LVU1338
 3650 004a 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 3651 004c 6374     		strb	r3, [r4, #17]
1993:rtos/uC-FS/FAT/fs_fat.c ****         if (size <= DEF_INT_16U_MAX_VAL) {
 3652              		.loc 1 1993 9 view .LVU1339
 3653 004e 2B89     		ldrh	r3, [r5, #8]
 3654 0050 1B0A     		lsrs	r3, r3, #8
 3655 0052 A374     		strb	r3, [r4, #18]
1993:rtos/uC-FS/FAT/fs_fat.c ****         if (size <= DEF_INT_16U_MAX_VAL) {
 3656              		.loc 1 1993 9 view .LVU1340
1994:rtos/uC-FS/FAT/fs_fat.c ****             MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC16],    size);
 3657              		.loc 1 1994 9 view .LVU1341
1994:rtos/uC-FS/FAT/fs_fat.c ****             MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC16],    size);
 3658              		.loc 1 1994 12 is_stmt 0 view .LVU1342
 3659 0054 B6F5803F 		cmp	r6, #65536
 3660 0058 03D2     		bcs	.L227
1995:rtos/uC-FS/FAT/fs_fat.c ****         }
 3661              		.loc 1 1995 13 is_stmt 1 view .LVU1343
1995:rtos/uC-FS/FAT/fs_fat.c ****         }
 3662              		.loc 1 1995 13 view .LVU1344
 3663 005a E674     		strb	r6, [r4, #19]
1995:rtos/uC-FS/FAT/fs_fat.c ****         }
 3664              		.loc 1 1995 13 view .LVU1345
 3665 005c C6F30723 		ubfx	r3, r6, #8, #8
ARM GAS  /tmp/ccazZ5Hl.s 			page 193


 3666 0060 2375     		strb	r3, [r4, #20]
 3667              	.L227:
1995:rtos/uC-FS/FAT/fs_fat.c ****         }
 3668              		.loc 1 1995 13 discriminator 1 view .LVU1346
1997:rtos/uC-FS/FAT/fs_fat.c ****         if (size > DEF_INT_16U_MAX_VAL) {
 3669              		.loc 1 1997 9 discriminator 1 view .LVU1347
1997:rtos/uC-FS/FAT/fs_fat.c ****         if (size > DEF_INT_16U_MAX_VAL) {
 3670              		.loc 1 1997 9 discriminator 1 view .LVU1348
 3671 0062 84F81690 		strb	r9, [r4, #22]
1997:rtos/uC-FS/FAT/fs_fat.c ****         if (size > DEF_INT_16U_MAX_VAL) {
 3672              		.loc 1 1997 9 discriminator 1 view .LVU1349
 3673 0066 C9F30723 		ubfx	r3, r9, #8, #8
 3674 006a E375     		strb	r3, [r4, #23]
1997:rtos/uC-FS/FAT/fs_fat.c ****         if (size > DEF_INT_16U_MAX_VAL) {
 3675              		.loc 1 1997 9 discriminator 1 view .LVU1350
1998:rtos/uC-FS/FAT/fs_fat.c ****             MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC32],    size);
 3676              		.loc 1 1998 9 discriminator 1 view .LVU1351
1998:rtos/uC-FS/FAT/fs_fat.c ****             MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC32],    size);
 3677              		.loc 1 1998 12 is_stmt 0 discriminator 1 view .LVU1352
 3678 006c B6F5803F 		cmp	r6, #65536
 3679 0070 21D3     		bcc	.L226
1999:rtos/uC-FS/FAT/fs_fat.c ****         }
 3680              		.loc 1 1999 13 is_stmt 1 view .LVU1353
1999:rtos/uC-FS/FAT/fs_fat.c ****         }
 3681              		.loc 1 1999 13 view .LVU1354
 3682 0072 84F82060 		strb	r6, [r4, #32]
1999:rtos/uC-FS/FAT/fs_fat.c ****         }
 3683              		.loc 1 1999 13 view .LVU1355
 3684 0076 C6F30723 		ubfx	r3, r6, #8, #8
 3685 007a 84F82130 		strb	r3, [r4, #33]
1999:rtos/uC-FS/FAT/fs_fat.c ****         }
 3686              		.loc 1 1999 13 view .LVU1356
 3687 007e C6F30743 		ubfx	r3, r6, #16, #8
 3688 0082 84F82230 		strb	r3, [r4, #34]
1999:rtos/uC-FS/FAT/fs_fat.c ****         }
 3689              		.loc 1 1999 13 view .LVU1357
 3690 0086 360E     		lsrs	r6, r6, #24
 3691              	.LVL334:
1999:rtos/uC-FS/FAT/fs_fat.c ****         }
 3692              		.loc 1 1999 13 is_stmt 0 view .LVU1358
 3693 0088 84F82360 		strb	r6, [r4, #35]
 3694 008c 13E0     		b	.L226
 3695              	.LVL335:
 3696              	.L232:
1987:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC16],        0);
 3697              		.loc 1 1987 9 is_stmt 1 view .LVU1359
1987:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC16],        0);
 3698              		.loc 1 1987 9 view .LVU1360
 3699 008e 0023     		movs	r3, #0
 3700 0090 6374     		strb	r3, [r4, #17]
1987:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC16],        0);
 3701              		.loc 1 1987 9 view .LVU1361
 3702 0092 A374     		strb	r3, [r4, #18]
1987:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC16],        0);
 3703              		.loc 1 1987 9 view .LVU1362
1988:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_FATSZ16],         0);
 3704              		.loc 1 1988 9 view .LVU1363
ARM GAS  /tmp/ccazZ5Hl.s 			page 194


1988:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_FATSZ16],         0);
 3705              		.loc 1 1988 9 view .LVU1364
 3706 0094 E374     		strb	r3, [r4, #19]
1988:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_FATSZ16],         0);
 3707              		.loc 1 1988 9 view .LVU1365
 3708 0096 2375     		strb	r3, [r4, #20]
1988:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_FATSZ16],         0);
 3709              		.loc 1 1988 9 view .LVU1366
1989:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC32],        size);
 3710              		.loc 1 1989 9 view .LVU1367
1989:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC32],        size);
 3711              		.loc 1 1989 9 view .LVU1368
 3712 0098 A375     		strb	r3, [r4, #22]
1989:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC32],        size);
 3713              		.loc 1 1989 9 view .LVU1369
 3714 009a E375     		strb	r3, [r4, #23]
1989:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_TOTSEC32],        size);
 3715              		.loc 1 1989 9 view .LVU1370
1990:rtos/uC-FS/FAT/fs_fat.c **** 
 3716              		.loc 1 1990 9 view .LVU1371
1990:rtos/uC-FS/FAT/fs_fat.c **** 
 3717              		.loc 1 1990 9 view .LVU1372
 3718 009c 84F82060 		strb	r6, [r4, #32]
1990:rtos/uC-FS/FAT/fs_fat.c **** 
 3719              		.loc 1 1990 9 view .LVU1373
 3720 00a0 C6F30723 		ubfx	r3, r6, #8, #8
 3721 00a4 84F82130 		strb	r3, [r4, #33]
1990:rtos/uC-FS/FAT/fs_fat.c **** 
 3722              		.loc 1 1990 9 view .LVU1374
 3723 00a8 C6F30743 		ubfx	r3, r6, #16, #8
 3724 00ac 84F82230 		strb	r3, [r4, #34]
1990:rtos/uC-FS/FAT/fs_fat.c **** 
 3725              		.loc 1 1990 9 view .LVU1375
 3726 00b0 360E     		lsrs	r6, r6, #24
 3727              	.LVL336:
1990:rtos/uC-FS/FAT/fs_fat.c **** 
 3728              		.loc 1 1990 9 is_stmt 0 view .LVU1376
 3729 00b2 84F82360 		strb	r6, [r4, #35]
1990:rtos/uC-FS/FAT/fs_fat.c **** 
 3730              		.loc 1 1990 9 is_stmt 1 view .LVU1377
 3731              	.L226:
1999:rtos/uC-FS/FAT/fs_fat.c ****         }
 3732              		.loc 1 1999 13 discriminator 1 view .LVU1378
2005:rtos/uC-FS/FAT/fs_fat.c ****     sec_per_trk = 0x3Fu;                                        /* See Note #3.                    
 3733              		.loc 1 2005 5 discriminator 1 view .LVU1379
2005:rtos/uC-FS/FAT/fs_fat.c ****     sec_per_trk = 0x3Fu;                                        /* See Note #3.                    
 3734              		.loc 1 2005 5 discriminator 1 view .LVU1380
 3735 00b6 F823     		movs	r3, #248
 3736 00b8 6375     		strb	r3, [r4, #21]
2005:rtos/uC-FS/FAT/fs_fat.c ****     sec_per_trk = 0x3Fu;                                        /* See Note #3.                    
 3737              		.loc 1 2005 5 discriminator 1 view .LVU1381
2006:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_SECPERTRK],       sec_per_trk);
 3738              		.loc 1 2006 5 discriminator 1 view .LVU1382
 3739              	.LVL337:
2007:rtos/uC-FS/FAT/fs_fat.c ****     num_heads   = 0xFFu;                                        /* See Note #3.                    
 3740              		.loc 1 2007 5 discriminator 1 view .LVU1383
2007:rtos/uC-FS/FAT/fs_fat.c ****     num_heads   = 0xFFu;                                        /* See Note #3.                    
ARM GAS  /tmp/ccazZ5Hl.s 			page 195


 3741              		.loc 1 2007 5 discriminator 1 view .LVU1384
 3742 00ba 3F23     		movs	r3, #63
 3743 00bc 2376     		strb	r3, [r4, #24]
2007:rtos/uC-FS/FAT/fs_fat.c ****     num_heads   = 0xFFu;                                        /* See Note #3.                    
 3744              		.loc 1 2007 5 discriminator 1 view .LVU1385
 3745 00be 0023     		movs	r3, #0
 3746 00c0 6376     		strb	r3, [r4, #25]
2007:rtos/uC-FS/FAT/fs_fat.c ****     num_heads   = 0xFFu;                                        /* See Note #3.                    
 3747              		.loc 1 2007 5 discriminator 1 view .LVU1386
2008:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_NUMHEADS],        num_heads);
 3748              		.loc 1 2008 5 discriminator 1 view .LVU1387
 3749              	.LVL338:
2009:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_HIDDSEC],         partition_start);
 3750              		.loc 1 2009 5 discriminator 1 view .LVU1388
2009:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_HIDDSEC],         partition_start);
 3751              		.loc 1 2009 5 discriminator 1 view .LVU1389
 3752 00c2 FF22     		movs	r2, #255
 3753 00c4 A276     		strb	r2, [r4, #26]
2009:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_HIDDSEC],         partition_start);
 3754              		.loc 1 2009 5 discriminator 1 view .LVU1390
 3755 00c6 E376     		strb	r3, [r4, #27]
2009:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_OFF_HIDDSEC],         partition_start);
 3756              		.loc 1 2009 5 discriminator 1 view .LVU1391
2010:rtos/uC-FS/FAT/fs_fat.c **** 
 3757              		.loc 1 2010 5 discriminator 1 view .LVU1392
2010:rtos/uC-FS/FAT/fs_fat.c **** 
 3758              		.loc 1 2010 5 discriminator 1 view .LVU1393
 3759 00c8 84F81C80 		strb	r8, [r4, #28]
2010:rtos/uC-FS/FAT/fs_fat.c **** 
 3760              		.loc 1 2010 5 discriminator 1 view .LVU1394
 3761 00cc C8F30723 		ubfx	r3, r8, #8, #8
 3762 00d0 6377     		strb	r3, [r4, #29]
2010:rtos/uC-FS/FAT/fs_fat.c **** 
 3763              		.loc 1 2010 5 discriminator 1 view .LVU1395
 3764 00d2 C8F30743 		ubfx	r3, r8, #16, #8
 3765 00d6 A377     		strb	r3, [r4, #30]
2010:rtos/uC-FS/FAT/fs_fat.c **** 
 3766              		.loc 1 2010 5 discriminator 1 view .LVU1396
 3767 00d8 4FEA1863 		lsr	r3, r8, #24
 3768 00dc E377     		strb	r3, [r4, #31]
2010:rtos/uC-FS/FAT/fs_fat.c **** 
 3769              		.loc 1 2010 5 discriminator 1 view .LVU1397
2015:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FATSZ32],   fat_size);
 3770              		.loc 1 2015 5 discriminator 1 view .LVU1398
2015:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FATSZ32],   fat_size);
 3771              		.loc 1 2015 19 is_stmt 0 discriminator 1 view .LVU1399
 3772 00de AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
2015:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FATSZ32],   fat_size);
 3773              		.loc 1 2015 9 discriminator 1 view .LVU1400
 3774 00e0 202B     		cmp	r3, #32
 3775 00e2 26D0     		beq	.L233
2035:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_RESERVED1],  0);
 3776              		.loc 1 2035 9 is_stmt 1 view .LVU1401
2035:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_RESERVED1],  0);
 3777              		.loc 1 2035 9 view .LVU1402
 3778 00e4 0023     		movs	r3, #0
 3779 00e6 84F82430 		strb	r3, [r4, #36]
ARM GAS  /tmp/ccazZ5Hl.s 			page 196


2035:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_RESERVED1],  0);
 3780              		.loc 1 2035 9 view .LVU1403
2036:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_BOOTSIG],    FS_FAT_BS_B
 3781              		.loc 1 2036 9 view .LVU1404
2036:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_BOOTSIG],    FS_FAT_BS_B
 3782              		.loc 1 2036 9 view .LVU1405
 3783 00ea 84F82530 		strb	r3, [r4, #37]
2036:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_BOOTSIG],    FS_FAT_BS_B
 3784              		.loc 1 2036 9 view .LVU1406
2037:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_VOLID],      0x12345678u
 3785              		.loc 1 2037 9 view .LVU1407
2037:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_VOLID],      0x12345678u
 3786              		.loc 1 2037 9 view .LVU1408
 3787 00ee 2923     		movs	r3, #41
 3788 00f0 84F82630 		strb	r3, [r4, #38]
2037:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_VOLID],      0x12345678u
 3789              		.loc 1 2037 9 view .LVU1409
2038:rtos/uC-FS/FAT/fs_fat.c **** 
 3790              		.loc 1 2038 9 view .LVU1410
2038:rtos/uC-FS/FAT/fs_fat.c **** 
 3791              		.loc 1 2038 9 view .LVU1411
 3792 00f4 7823     		movs	r3, #120
 3793 00f6 84F82730 		strb	r3, [r4, #39]
2038:rtos/uC-FS/FAT/fs_fat.c **** 
 3794              		.loc 1 2038 9 view .LVU1412
 3795 00fa 5623     		movs	r3, #86
 3796 00fc 84F82830 		strb	r3, [r4, #40]
2038:rtos/uC-FS/FAT/fs_fat.c **** 
 3797              		.loc 1 2038 9 view .LVU1413
 3798 0100 3423     		movs	r3, #52
 3799 0102 84F82930 		strb	r3, [r4, #41]
2038:rtos/uC-FS/FAT/fs_fat.c **** 
 3800              		.loc 1 2038 9 view .LVU1414
 3801 0106 1223     		movs	r3, #18
 3802 0108 84F82A30 		strb	r3, [r4, #42]
2038:rtos/uC-FS/FAT/fs_fat.c **** 
 3803              		.loc 1 2038 9 view .LVU1415
2040:rtos/uC-FS/FAT/fs_fat.c ****         if  (p_sys_cfg->FAT_Type == FS_FAT_FAT_TYPE_FAT12) {
 3804              		.loc 1 2040 9 view .LVU1416
 3805 010c 0B22     		movs	r2, #11
 3806 010e 3649     		ldr	r1, .L236+4
 3807 0110 04F12B00 		add	r0, r4, #43
 3808 0114 FFF7FEFF 		bl	Mem_Copy
 3809              	.LVL339:
2041:rtos/uC-FS/FAT/fs_fat.c ****             Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_FILSYSTYPE],      (void *)FS_FAT_BS_F
 3810              		.loc 1 2041 9 view .LVU1417
2041:rtos/uC-FS/FAT/fs_fat.c ****             Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_FILSYSTYPE],      (void *)FS_FAT_BS_F
 3811              		.loc 1 2041 23 is_stmt 0 view .LVU1418
 3812 0118 AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
2041:rtos/uC-FS/FAT/fs_fat.c ****             Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_FILSYSTYPE],      (void *)FS_FAT_BS_F
 3813              		.loc 1 2041 13 view .LVU1419
 3814 011a 0C2B     		cmp	r3, #12
 3815 011c 53D0     		beq	.L234
2044:rtos/uC-FS/FAT/fs_fat.c ****             Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_FILSYSTYPE],      (void *)FS_FAT_BS_F
 3816              		.loc 1 2044 16 is_stmt 1 view .LVU1420
2044:rtos/uC-FS/FAT/fs_fat.c ****             Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT1216_OFF_FILSYSTYPE],      (void *)FS_FAT_BS_F
 3817              		.loc 1 2044 20 is_stmt 0 view .LVU1421
ARM GAS  /tmp/ccazZ5Hl.s 			page 197


 3818 011e 102B     		cmp	r3, #16
 3819 0120 58D0     		beq	.L235
 3820              	.L229:
2047:rtos/uC-FS/FAT/fs_fat.c ****         }
 3821              		.loc 1 2047 89 is_stmt 1 view .LVU1422
2053:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BOOT_SIG_HI_OFF],         FS_FAT_BOOT_SIG_H
 3822              		.loc 1 2053 5 view .LVU1423
2053:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BOOT_SIG_HI_OFF],         FS_FAT_BOOT_SIG_H
 3823              		.loc 1 2053 5 view .LVU1424
 3824 0122 5523     		movs	r3, #85
 3825 0124 84F8FE31 		strb	r3, [r4, #510]
2053:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BOOT_SIG_HI_OFF],         FS_FAT_BOOT_SIG_H
 3826              		.loc 1 2053 5 view .LVU1425
2054:rtos/uC-FS/FAT/fs_fat.c **** }
 3827              		.loc 1 2054 5 view .LVU1426
2054:rtos/uC-FS/FAT/fs_fat.c **** }
 3828              		.loc 1 2054 5 view .LVU1427
 3829 0128 AA23     		movs	r3, #170
 3830 012a 84F8FF31 		strb	r3, [r4, #511]
2054:rtos/uC-FS/FAT/fs_fat.c **** }
 3831              		.loc 1 2054 5 view .LVU1428
2055:rtos/uC-FS/FAT/fs_fat.c **** #endif
 3832              		.loc 1 2055 1 is_stmt 0 view .LVU1429
 3833 012e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3834              	.LVL340:
 3835              	.L233:
2016:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_EXTFLAGS],  0);
 3836              		.loc 1 2016 9 is_stmt 1 view .LVU1430
2016:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_EXTFLAGS],  0);
 3837              		.loc 1 2016 9 view .LVU1431
 3838 0132 84F82490 		strb	r9, [r4, #36]
2016:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_EXTFLAGS],  0);
 3839              		.loc 1 2016 9 view .LVU1432
 3840 0136 C9F30723 		ubfx	r3, r9, #8, #8
 3841 013a 84F82530 		strb	r3, [r4, #37]
2016:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_EXTFLAGS],  0);
 3842              		.loc 1 2016 9 view .LVU1433
 3843 013e C9F30743 		ubfx	r3, r9, #16, #8
 3844 0142 84F82630 		strb	r3, [r4, #38]
2016:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_EXTFLAGS],  0);
 3845              		.loc 1 2016 9 view .LVU1434
 3846 0146 4FEA1969 		lsr	r9, r9, #24
 3847 014a 84F82790 		strb	r9, [r4, #39]
2016:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_EXTFLAGS],  0);
 3848              		.loc 1 2016 9 view .LVU1435
2017:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FSVER],     0);
 3849              		.loc 1 2017 9 view .LVU1436
2017:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FSVER],     0);
 3850              		.loc 1 2017 9 view .LVU1437
 3851 014e 0023     		movs	r3, #0
 3852 0150 84F82830 		strb	r3, [r4, #40]
2017:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FSVER],     0);
 3853              		.loc 1 2017 9 view .LVU1438
 3854 0154 84F82930 		strb	r3, [r4, #41]
2017:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FSVER],     0);
 3855              		.loc 1 2017 9 view .LVU1439
2018:rtos/uC-FS/FAT/fs_fat.c ****         nbr_32 = FS_FAT_DFLT_ROOT_CLUS_NBR;                     /* See Note #3.                    
ARM GAS  /tmp/ccazZ5Hl.s 			page 198


 3856              		.loc 1 2018 9 view .LVU1440
2018:rtos/uC-FS/FAT/fs_fat.c ****         nbr_32 = FS_FAT_DFLT_ROOT_CLUS_NBR;                     /* See Note #3.                    
 3857              		.loc 1 2018 9 view .LVU1441
 3858 0158 84F82A30 		strb	r3, [r4, #42]
2018:rtos/uC-FS/FAT/fs_fat.c ****         nbr_32 = FS_FAT_DFLT_ROOT_CLUS_NBR;                     /* See Note #3.                    
 3859              		.loc 1 2018 9 view .LVU1442
 3860 015c 84F82B30 		strb	r3, [r4, #43]
2018:rtos/uC-FS/FAT/fs_fat.c ****         nbr_32 = FS_FAT_DFLT_ROOT_CLUS_NBR;                     /* See Note #3.                    
 3861              		.loc 1 2018 9 view .LVU1443
2019:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_ROOTCLUS],  nbr_32);
 3862              		.loc 1 2019 9 view .LVU1444
 3863              	.LVL341:
2020:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_FSINFO_SEC_NBR;                    /* See Note #3.                    
 3864              		.loc 1 2020 9 view .LVU1445
2020:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_FSINFO_SEC_NBR;                    /* See Note #3.                    
 3865              		.loc 1 2020 9 view .LVU1446
 3866 0160 0222     		movs	r2, #2
 3867 0162 84F82C20 		strb	r2, [r4, #44]
2020:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_FSINFO_SEC_NBR;                    /* See Note #3.                    
 3868              		.loc 1 2020 9 view .LVU1447
 3869 0166 84F82D30 		strb	r3, [r4, #45]
2020:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_FSINFO_SEC_NBR;                    /* See Note #3.                    
 3870              		.loc 1 2020 9 view .LVU1448
 3871 016a 84F82E30 		strb	r3, [r4, #46]
2020:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_FSINFO_SEC_NBR;                    /* See Note #3.                    
 3872              		.loc 1 2020 9 view .LVU1449
 3873 016e 84F82F30 		strb	r3, [r4, #47]
2020:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_FSINFO_SEC_NBR;                    /* See Note #3.                    
 3874              		.loc 1 2020 9 view .LVU1450
2021:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_FSINFO],    nbr_16);
 3875              		.loc 1 2021 9 view .LVU1451
 3876              	.LVL342:
2022:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_BKBOOTSEC_SEC_NBR;                 /* See Note #3.                    
 3877              		.loc 1 2022 9 view .LVU1452
2022:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_BKBOOTSEC_SEC_NBR;                 /* See Note #3.                    
 3878              		.loc 1 2022 9 view .LVU1453
 3879 0172 0122     		movs	r2, #1
 3880 0174 84F83020 		strb	r2, [r4, #48]
2022:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_BKBOOTSEC_SEC_NBR;                 /* See Note #3.                    
 3881              		.loc 1 2022 9 view .LVU1454
 3882 0178 84F83130 		strb	r3, [r4, #49]
2022:rtos/uC-FS/FAT/fs_fat.c ****         nbr_16 = FS_FAT_DFLT_BKBOOTSEC_SEC_NBR;                 /* See Note #3.                    
 3883              		.loc 1 2022 9 view .LVU1455
2023:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT16U_LITTLE((void *)&p_temp_08[FS_FAT_BPB_FAT32_OFF_BKBOOTSEC], nbr_16);
 3884              		.loc 1 2023 9 view .LVU1456
 3885              	.LVL343:
2024:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_DRVNUM],     0);
 3886              		.loc 1 2024 9 view .LVU1457
2024:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_DRVNUM],     0);
 3887              		.loc 1 2024 9 view .LVU1458
 3888 017c 0622     		movs	r2, #6
 3889 017e 84F83220 		strb	r2, [r4, #50]
2024:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_DRVNUM],     0);
 3890              		.loc 1 2024 9 view .LVU1459
 3891 0182 84F83330 		strb	r3, [r4, #51]
2024:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_DRVNUM],     0);
 3892              		.loc 1 2024 9 view .LVU1460
ARM GAS  /tmp/ccazZ5Hl.s 			page 199


2025:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_RESERVED1],  0);
 3893              		.loc 1 2025 9 view .LVU1461
2025:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_RESERVED1],  0);
 3894              		.loc 1 2025 9 view .LVU1462
 3895 0186 84F84030 		strb	r3, [r4, #64]
2025:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_RESERVED1],  0);
 3896              		.loc 1 2025 9 view .LVU1463
2026:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_BOOTSIG],    FS_FAT_BS_BOO
 3897              		.loc 1 2026 9 view .LVU1464
2026:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_BOOTSIG],    FS_FAT_BS_BOO
 3898              		.loc 1 2026 9 view .LVU1465
 3899 018a 84F84130 		strb	r3, [r4, #65]
2026:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT08U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_BOOTSIG],    FS_FAT_BS_BOO
 3900              		.loc 1 2026 9 view .LVU1466
2027:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_VOLID],      0x12345678);
 3901              		.loc 1 2027 9 view .LVU1467
2027:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_VOLID],      0x12345678);
 3902              		.loc 1 2027 9 view .LVU1468
 3903 018e 2923     		movs	r3, #41
 3904 0190 84F84230 		strb	r3, [r4, #66]
2027:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_VOLID],      0x12345678);
 3905              		.loc 1 2027 9 view .LVU1469
2028:rtos/uC-FS/FAT/fs_fat.c **** 
 3906              		.loc 1 2028 9 view .LVU1470
2028:rtos/uC-FS/FAT/fs_fat.c **** 
 3907              		.loc 1 2028 9 view .LVU1471
 3908 0194 7823     		movs	r3, #120
 3909 0196 84F84330 		strb	r3, [r4, #67]
2028:rtos/uC-FS/FAT/fs_fat.c **** 
 3910              		.loc 1 2028 9 view .LVU1472
 3911 019a 5623     		movs	r3, #86
 3912 019c 84F84430 		strb	r3, [r4, #68]
2028:rtos/uC-FS/FAT/fs_fat.c **** 
 3913              		.loc 1 2028 9 view .LVU1473
 3914 01a0 3423     		movs	r3, #52
 3915 01a2 84F84530 		strb	r3, [r4, #69]
2028:rtos/uC-FS/FAT/fs_fat.c **** 
 3916              		.loc 1 2028 9 view .LVU1474
 3917 01a6 1223     		movs	r3, #18
 3918 01a8 84F84630 		strb	r3, [r4, #70]
2028:rtos/uC-FS/FAT/fs_fat.c **** 
 3919              		.loc 1 2028 9 view .LVU1475
2030:rtos/uC-FS/FAT/fs_fat.c ****         Mem_Copy((void *)&p_temp_08[FS_FAT_BS_FAT32_OFF_FILSYSTYPE],          (void *)FS_FAT_BS_FAT
 3920              		.loc 1 2030 9 view .LVU1476
 3921 01ac 0B22     		movs	r2, #11
 3922 01ae 0E49     		ldr	r1, .L236+4
 3923 01b0 04F14700 		add	r0, r4, #71
 3924 01b4 FFF7FEFF 		bl	Mem_Copy
 3925              	.LVL344:
2031:rtos/uC-FS/FAT/fs_fat.c **** 
 3926              		.loc 1 2031 9 view .LVU1477
 3927 01b8 0822     		movs	r2, #8
 3928 01ba 0C49     		ldr	r1, .L236+8
 3929 01bc 04F15200 		add	r0, r4, #82
 3930 01c0 FFF7FEFF 		bl	Mem_Copy
 3931              	.LVL345:
 3932 01c4 ADE7     		b	.L229
ARM GAS  /tmp/ccazZ5Hl.s 			page 200


 3933              	.LVL346:
 3934              	.L234:
2042:rtos/uC-FS/FAT/fs_fat.c **** 
 3935              		.loc 1 2042 13 view .LVU1478
 3936 01c6 0822     		movs	r2, #8
 3937 01c8 0949     		ldr	r1, .L236+12
 3938 01ca 04F13600 		add	r0, r4, #54
 3939 01ce FFF7FEFF 		bl	Mem_Copy
 3940              	.LVL347:
 3941 01d2 A6E7     		b	.L229
 3942              	.L235:
2045:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 3943              		.loc 1 2045 13 view .LVU1479
 3944 01d4 0822     		movs	r2, #8
 3945 01d6 0749     		ldr	r1, .L236+16
 3946 01d8 04F13600 		add	r0, r4, #54
 3947 01dc FFF7FEFF 		bl	Mem_Copy
 3948              	.LVL348:
 3949 01e0 9FE7     		b	.L229
 3950              	.L237:
 3951 01e2 00BF     		.align	2
 3952              	.L236:
 3953 01e4 00000000 		.word	.LC0
 3954 01e8 0C000000 		.word	.LC1
 3955 01ec 18000000 		.word	.LC2
 3956 01f0 24000000 		.word	.LC3
 3957 01f4 30000000 		.word	.LC4
 3958              		.cfi_endproc
 3959              	.LFE11:
 3961              		.section	.text.FS_FAT_ModuleInit,"ax",%progbits
 3962              		.align	1
 3963              		.global	FS_FAT_ModuleInit
 3964              		.syntax unified
 3965              		.thumb
 3966              		.thumb_func
 3967              		.fpu fpv4-sp-d16
 3969              	FS_FAT_ModuleInit:
 3970              	.LVL349:
 3971              	.LFB12:
2095:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T  octets_reqd;
 3972              		.loc 1 2095 1 view -0
 3973              		.cfi_startproc
 3974              		@ args = 0, pretend = 0, frame = 8
 3975              		@ frame_needed = 0, uses_anonymous_args = 0
2095:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T  octets_reqd;
 3976              		.loc 1 2095 1 is_stmt 0 view .LVU1481
 3977 0000 70B5     		push	{r4, r5, r6, lr}
 3978              	.LCFI36:
 3979              		.cfi_def_cfa_offset 16
 3980              		.cfi_offset 4, -16
 3981              		.cfi_offset 5, -12
 3982              		.cfi_offset 6, -8
 3983              		.cfi_offset 14, -4
 3984 0002 86B0     		sub	sp, sp, #24
 3985              	.LCFI37:
 3986              		.cfi_def_cfa_offset 40
 3987 0004 0D46     		mov	r5, r1
ARM GAS  /tmp/ccazZ5Hl.s 			page 201


 3988 0006 1646     		mov	r6, r2
 3989 0008 1C46     		mov	r4, r3
2096:rtos/uC-FS/FAT/fs_fat.c ****     LIB_ERR     pool_err;
 3990              		.loc 1 2096 5 is_stmt 1 view .LVU1482
2097:rtos/uC-FS/FAT/fs_fat.c **** 
 3991              		.loc 1 2097 5 view .LVU1483
2101:rtos/uC-FS/FAT/fs_fat.c ****                     DEF_NULL,
 3992              		.loc 1 2101 5 view .LVU1484
 3993 000a 0DF11203 		add	r3, sp, #18
 3994              	.LVL350:
2101:rtos/uC-FS/FAT/fs_fat.c ****                     DEF_NULL,
 3995              		.loc 1 2101 5 is_stmt 0 view .LVU1485
 3996 000e 0393     		str	r3, [sp, #12]
 3997 0010 05AB     		add	r3, sp, #20
 3998 0012 0293     		str	r3, [sp, #8]
 3999 0014 0423     		movs	r3, #4
 4000 0016 0193     		str	r3, [sp, #4]
 4001 0018 5C23     		movs	r3, #92
 4002 001a 0093     		str	r3, [sp]
 4003 001c 0346     		mov	r3, r0
 4004 001e 0022     		movs	r2, #0
 4005              	.LVL351:
2101:rtos/uC-FS/FAT/fs_fat.c ****                     DEF_NULL,
 4006              		.loc 1 2101 5 view .LVU1486
 4007 0020 1146     		mov	r1, r2
 4008              	.LVL352:
2101:rtos/uC-FS/FAT/fs_fat.c ****                     DEF_NULL,
 4009              		.loc 1 2101 5 view .LVU1487
 4010 0022 1048     		ldr	r0, .L245
 4011              	.LVL353:
2101:rtos/uC-FS/FAT/fs_fat.c ****                     DEF_NULL,
 4012              		.loc 1 2101 5 view .LVU1488
 4013 0024 FFF7FEFF 		bl	Mem_PoolCreate
 4014              	.LVL354:
2110:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_MEM_ALLOC;
 4015              		.loc 1 2110 5 is_stmt 1 view .LVU1489
2110:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_MEM_ALLOC;
 4016              		.loc 1 2110 18 is_stmt 0 view .LVU1490
 4017 0028 BDF81220 		ldrh	r2, [sp, #18]
2110:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_MEM_ALLOC;
 4018              		.loc 1 2110 8 view .LVU1491
 4019 002c 42F21073 		movw	r3, #10000
 4020 0030 9A42     		cmp	r2, r3
 4021 0032 03D0     		beq	.L239
2111:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_INFO(("FS_FAT_ModuleInit(): Could not alloc mem for FAT info: %d octets req'd.\r\n
 4022              		.loc 1 2111 8 is_stmt 1 view .LVU1492
2111:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_INFO(("FS_FAT_ModuleInit(): Could not alloc mem for FAT info: %d octets req'd.\r\n
 4023              		.loc 1 2111 15 is_stmt 0 view .LVU1493
 4024 0034 1123     		movs	r3, #17
 4025 0036 2380     		strh	r3, [r4]	@ movhi
2112:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4026              		.loc 1 2112 116 is_stmt 1 view .LVU1494
2113:rtos/uC-FS/FAT/fs_fat.c ****     }
 4027              		.loc 1 2113 9 view .LVU1495
 4028              	.L238:
2152:rtos/uC-FS/FAT/fs_fat.c **** 
 4029              		.loc 1 2152 1 is_stmt 0 view .LVU1496
ARM GAS  /tmp/ccazZ5Hl.s 			page 202


 4030 0038 06B0     		add	sp, sp, #24
 4031              	.LCFI38:
 4032              		.cfi_remember_state
 4033              		.cfi_def_cfa_offset 16
 4034              		@ sp needed
 4035 003a 70BD     		pop	{r4, r5, r6, pc}
 4036              	.LVL355:
 4037              	.L239:
 4038              	.LCFI39:
 4039              		.cfi_restore_state
2119:rtos/uC-FS/FAT/fs_fat.c ****                           p_err);
 4040              		.loc 1 2119 5 is_stmt 1 view .LVU1497
 4041 003c 2146     		mov	r1, r4
 4042 003e 2846     		mov	r0, r5
 4043 0040 FFF7FEFF 		bl	FS_FAT_FileModuleInit
 4044              	.LVL356:
2122:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4045              		.loc 1 2122 5 view .LVU1498
2122:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4046              		.loc 1 2122 9 is_stmt 0 view .LVU1499
 4047 0044 2388     		ldrh	r3, [r4]
2122:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4048              		.loc 1 2122 8 view .LVU1500
 4049 0046 002B     		cmp	r3, #0
 4050 0048 F6D1     		bne	.L238
2129:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_DirModuleInit(dir_cnt,
 4051              		.loc 1 2129 5 is_stmt 1 view .LVU1501
2129:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_DirModuleInit(dir_cnt,
 4052              		.loc 1 2129 8 is_stmt 0 view .LVU1502
 4053 004a 16B9     		cbnz	r6, .L244
 4054              	.L241:
2151:rtos/uC-FS/FAT/fs_fat.c **** }
 4055              		.loc 1 2151 4 is_stmt 1 view .LVU1503
2151:rtos/uC-FS/FAT/fs_fat.c **** }
 4056              		.loc 1 2151 11 is_stmt 0 view .LVU1504
 4057 004c 0023     		movs	r3, #0
 4058 004e 2380     		strh	r3, [r4]	@ movhi
 4059 0050 F2E7     		b	.L238
 4060              	.L244:
2130:rtos/uC-FS/FAT/fs_fat.c ****                              p_err);
 4061              		.loc 1 2130 9 is_stmt 1 view .LVU1505
 4062 0052 2146     		mov	r1, r4
 4063 0054 3046     		mov	r0, r6
 4064 0056 FFF7FEFF 		bl	FS_FAT_DirModuleInit
 4065              	.LVL357:
2133:rtos/uC-FS/FAT/fs_fat.c ****             return;
 4066              		.loc 1 2133 9 view .LVU1506
2133:rtos/uC-FS/FAT/fs_fat.c ****             return;
 4067              		.loc 1 2133 13 is_stmt 0 view .LVU1507
 4068 005a 2388     		ldrh	r3, [r4]
2133:rtos/uC-FS/FAT/fs_fat.c ****             return;
 4069              		.loc 1 2133 12 view .LVU1508
 4070 005c 002B     		cmp	r3, #0
 4071 005e F5D0     		beq	.L241
 4072 0060 EAE7     		b	.L238
 4073              	.L246:
 4074 0062 00BF     		.align	2
ARM GAS  /tmp/ccazZ5Hl.s 			page 203


 4075              	.L245:
 4076 0064 00000000 		.word	.LANCHOR3
 4077              		.cfi_endproc
 4078              	.LFE12:
 4080              		.section	.text.FS_FAT_VolClose,"ax",%progbits
 4081              		.align	1
 4082              		.global	FS_FAT_VolClose
 4083              		.syntax unified
 4084              		.thumb
 4085              		.thumb_func
 4086              		.fpu fpv4-sp-d16
 4088              	FS_FAT_VolClose:
 4089              	.LVL358:
 4090              	.LFB13:
2171:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA  *p_fat_data;
 4091              		.loc 1 2171 1 is_stmt 1 view -0
 4092              		.cfi_startproc
 4093              		@ args = 0, pretend = 0, frame = 8
 4094              		@ frame_needed = 0, uses_anonymous_args = 0
2171:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA  *p_fat_data;
 4095              		.loc 1 2171 1 is_stmt 0 view .LVU1510
 4096 0000 30B5     		push	{r4, r5, lr}
 4097              	.LCFI40:
 4098              		.cfi_def_cfa_offset 12
 4099              		.cfi_offset 4, -12
 4100              		.cfi_offset 5, -8
 4101              		.cfi_offset 14, -4
 4102 0002 83B0     		sub	sp, sp, #12
 4103              	.LCFI41:
 4104              		.cfi_def_cfa_offset 24
 4105 0004 0446     		mov	r4, r0
2172:rtos/uC-FS/FAT/fs_fat.c ****     FS_ERR        err;
 4106              		.loc 1 2172 5 is_stmt 1 view .LVU1511
2173:rtos/uC-FS/FAT/fs_fat.c ****     LIB_ERR       pool_err;
 4107              		.loc 1 2173 5 view .LVU1512
2174:rtos/uC-FS/FAT/fs_fat.c **** 
 4108              		.loc 1 2174 5 view .LVU1513
2188:rtos/uC-FS/FAT/fs_fat.c **** 
 4109              		.loc 1 2188 5 view .LVU1514
2188:rtos/uC-FS/FAT/fs_fat.c **** 
 4110              		.loc 1 2188 16 is_stmt 0 view .LVU1515
 4111 0006 456B     		ldr	r5, [r0, #52]
 4112              	.LVL359:
2190:rtos/uC-FS/FAT/fs_fat.c ****     if (err != FS_ERR_NONE) {
 4113              		.loc 1 2190 5 is_stmt 1 view .LVU1516
 4114 0008 0DF10600 		add	r0, sp, #6
 4115              	.LVL360:
2190:rtos/uC-FS/FAT/fs_fat.c ****     if (err != FS_ERR_NONE) {
 4116              		.loc 1 2190 5 is_stmt 0 view .LVU1517
 4117 000c FFF7FEFF 		bl	FS_OS_Lock
 4118              	.LVL361:
2191:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4119              		.loc 1 2191 5 is_stmt 1 view .LVU1518
2191:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4120              		.loc 1 2191 13 is_stmt 0 view .LVU1519
 4121 0010 BDF80630 		ldrh	r3, [sp, #6]
2191:rtos/uC-FS/FAT/fs_fat.c ****         return;
ARM GAS  /tmp/ccazZ5Hl.s 			page 204


 4122              		.loc 1 2191 8 view .LVU1520
 4123 0014 0BB1     		cbz	r3, .L252
 4124              	.L247:
2205:rtos/uC-FS/FAT/fs_fat.c **** 
 4125              		.loc 1 2205 1 view .LVU1521
 4126 0016 03B0     		add	sp, sp, #12
 4127              	.LCFI42:
 4128              		.cfi_remember_state
 4129              		.cfi_def_cfa_offset 12
 4130              		@ sp needed
 4131 0018 30BD     		pop	{r4, r5, pc}
 4132              	.LVL362:
 4133              	.L252:
 4134              	.LCFI43:
 4135              		.cfi_restore_state
2195:rtos/uC-FS/FAT/fs_fat.c ****                     (void *) p_fat_data,
 4136              		.loc 1 2195 5 is_stmt 1 view .LVU1522
 4137 001a 01AA     		add	r2, sp, #4
 4138 001c 2946     		mov	r1, r5
 4139 001e 0848     		ldr	r0, .L254
 4140 0020 FFF7FEFF 		bl	Mem_PoolBlkFree
 4141              	.LVL363:
2198:rtos/uC-FS/FAT/fs_fat.c **** 
 4142              		.loc 1 2198 5 view .LVU1523
 4143 0024 FFF7FEFF 		bl	FS_OS_Unlock
 4144              	.LVL364:
2200:rtos/uC-FS/FAT/fs_fat.c ****         CPU_SW_EXCEPTION(;);                                    /* Fatal err.                      
 4145              		.loc 1 2200 5 view .LVU1524
2200:rtos/uC-FS/FAT/fs_fat.c ****         CPU_SW_EXCEPTION(;);                                    /* Fatal err.                      
 4146              		.loc 1 2200 18 is_stmt 0 view .LVU1525
 4147 0028 BDF80420 		ldrh	r2, [sp, #4]
2200:rtos/uC-FS/FAT/fs_fat.c ****         CPU_SW_EXCEPTION(;);                                    /* Fatal err.                      
 4148              		.loc 1 2200 8 view .LVU1526
 4149 002c 42F21073 		movw	r3, #10000
 4150 0030 9A42     		cmp	r2, r3
 4151 0032 02D1     		bne	.L253
 4152              	.L250:
2201:rtos/uC-FS/FAT/fs_fat.c ****     }
 4153              		.loc 1 2201 9 is_stmt 1 discriminator 1 view .LVU1527
2204:rtos/uC-FS/FAT/fs_fat.c **** }
 4154              		.loc 1 2204 5 discriminator 1 view .LVU1528
2204:rtos/uC-FS/FAT/fs_fat.c **** }
 4155              		.loc 1 2204 20 is_stmt 0 discriminator 1 view .LVU1529
 4156 0034 0023     		movs	r3, #0
 4157 0036 6363     		str	r3, [r4, #52]
 4158 0038 EDE7     		b	.L247
 4159              	.L253:
2201:rtos/uC-FS/FAT/fs_fat.c ****     }
 4160              		.loc 1 2201 9 is_stmt 1 view .LVU1530
2201:rtos/uC-FS/FAT/fs_fat.c ****     }
 4161              		.loc 1 2201 9 view .LVU1531
 4162 003a FFF7FEFF 		bl	CPU_SW_Exception
 4163              	.LVL365:
 4164 003e F9E7     		b	.L250
 4165              	.L255:
 4166              		.align	2
 4167              	.L254:
ARM GAS  /tmp/ccazZ5Hl.s 			page 205


 4168 0040 00000000 		.word	.LANCHOR3
 4169              		.cfi_endproc
 4170              	.LFE13:
 4172              		.section	.text.FS_FAT_VolLabelGet,"ax",%progbits
 4173              		.align	1
 4174              		.global	FS_FAT_VolLabelGet
 4175              		.syntax unified
 4176              		.thumb
 4177              		.thumb_func
 4178              		.fpu fpv4-sp-d16
 4180              	FS_FAT_VolLabelGet:
 4181              	.LVL366:
 4182              	.LFB15:
2957:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR    label_buf[FS_FAT_VOL_LABEL_LEN + 1u];
 4183              		.loc 1 2957 1 view -0
 4184              		.cfi_startproc
 4185              		@ args = 0, pretend = 0, frame = 16
 4186              		@ frame_needed = 0, uses_anonymous_args = 0
2957:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR    label_buf[FS_FAT_VOL_LABEL_LEN + 1u];
 4187              		.loc 1 2957 1 is_stmt 0 view .LVU1533
 4188 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4189              	.LCFI44:
 4190              		.cfi_def_cfa_offset 20
 4191              		.cfi_offset 4, -20
 4192              		.cfi_offset 5, -16
 4193              		.cfi_offset 6, -12
 4194              		.cfi_offset 7, -8
 4195              		.cfi_offset 14, -4
 4196 0002 85B0     		sub	sp, sp, #20
 4197              	.LCFI45:
 4198              		.cfi_def_cfa_offset 40
 4199 0004 0546     		mov	r5, r0
 4200 0006 0F46     		mov	r7, r1
 4201 0008 1646     		mov	r6, r2
 4202 000a 1C46     		mov	r4, r3
2958:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T  label_len;
 4203              		.loc 1 2958 5 is_stmt 1 view .LVU1534
2959:rtos/uC-FS/FAT/fs_fat.c **** 
 4204              		.loc 1 2959 5 view .LVU1535
2962:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_LabelGet(p_vol,
 4205              		.loc 1 2962 5 view .LVU1536
 4206 000c 0C21     		movs	r1, #12
 4207              	.LVL367:
2962:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_LabelGet(p_vol,
 4208              		.loc 1 2962 5 is_stmt 0 view .LVU1537
 4209 000e 01A8     		add	r0, sp, #4
 4210              	.LVL368:
2962:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_LabelGet(p_vol,
 4211              		.loc 1 2962 5 view .LVU1538
 4212 0010 FFF7FEFF 		bl	Mem_Clr
 4213              	.LVL369:
2963:rtos/uC-FS/FAT/fs_fat.c ****                         label_buf,
 4214              		.loc 1 2963 5 is_stmt 1 view .LVU1539
 4215 0014 2246     		mov	r2, r4
 4216 0016 01A9     		add	r1, sp, #4
 4217 0018 2846     		mov	r0, r5
 4218 001a FFF7FEFF 		bl	FS_FAT_SFN_LabelGet
ARM GAS  /tmp/ccazZ5Hl.s 			page 206


 4219              	.LVL370:
2966:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4220              		.loc 1 2966 5 view .LVU1540
2966:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4221              		.loc 1 2966 9 is_stmt 0 view .LVU1541
 4222 001e 2388     		ldrh	r3, [r4]
2966:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4223              		.loc 1 2966 8 view .LVU1542
 4224 0020 0BB1     		cbz	r3, .L261
 4225              	.L256:
2978:rtos/uC-FS/FAT/fs_fat.c **** 
 4226              		.loc 1 2978 1 view .LVU1543
 4227 0022 05B0     		add	sp, sp, #20
 4228              	.LCFI46:
 4229              		.cfi_remember_state
 4230              		.cfi_def_cfa_offset 20
 4231              		@ sp needed
 4232 0024 F0BD     		pop	{r4, r5, r6, r7, pc}
 4233              	.LVL371:
 4234              	.L261:
 4235              	.LCFI47:
 4236              		.cfi_restore_state
2970:rtos/uC-FS/FAT/fs_fat.c ****     if (label_len > len_max) {
 4237              		.loc 1 2970 5 is_stmt 1 view .LVU1544
2970:rtos/uC-FS/FAT/fs_fat.c ****     if (label_len > len_max) {
 4238              		.loc 1 2970 17 is_stmt 0 view .LVU1545
 4239 0026 0B21     		movs	r1, #11
 4240 0028 01A8     		add	r0, sp, #4
 4241 002a FFF7FEFF 		bl	Str_Len_N
 4242              	.LVL372:
2971:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_LABEL_TOO_LONG;
 4243              		.loc 1 2971 5 is_stmt 1 view .LVU1546
2971:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_LABEL_TOO_LONG;
 4244              		.loc 1 2971 8 is_stmt 0 view .LVU1547
 4245 002e B042     		cmp	r0, r6
 4246 0030 03D9     		bls	.L258
2972:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4247              		.loc 1 2972 8 is_stmt 1 view .LVU1548
2972:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4248              		.loc 1 2972 15 is_stmt 0 view .LVU1549
 4249 0032 40F2A253 		movw	r3, #1442
 4250 0036 2380     		strh	r3, [r4]	@ movhi
2973:rtos/uC-FS/FAT/fs_fat.c ****     }
 4251              		.loc 1 2973 9 is_stmt 1 view .LVU1550
 4252 0038 F3E7     		b	.L256
 4253              	.L258:
2976:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 4254              		.loc 1 2976 5 view .LVU1551
 4255 003a 3246     		mov	r2, r6
 4256 003c 01A9     		add	r1, sp, #4
 4257 003e 3846     		mov	r0, r7
 4258              	.LVL373:
2976:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 4259              		.loc 1 2976 5 is_stmt 0 view .LVU1552
 4260 0040 FFF7FEFF 		bl	Str_Copy_N
 4261              	.LVL374:
2977:rtos/uC-FS/FAT/fs_fat.c **** }
ARM GAS  /tmp/ccazZ5Hl.s 			page 207


 4262              		.loc 1 2977 4 is_stmt 1 view .LVU1553
2977:rtos/uC-FS/FAT/fs_fat.c **** }
 4263              		.loc 1 2977 11 is_stmt 0 view .LVU1554
 4264 0044 0023     		movs	r3, #0
 4265 0046 2380     		strh	r3, [r4]	@ movhi
 4266 0048 EBE7     		b	.L256
 4267              		.cfi_endproc
 4268              	.LFE15:
 4270              		.section	.text.FS_FAT_VolLabelSet,"ax",%progbits
 4271              		.align	1
 4272              		.global	FS_FAT_VolLabelSet
 4273              		.syntax unified
 4274              		.thumb
 4275              		.thumb_func
 4276              		.fpu fpv4-sp-d16
 4278              	FS_FAT_VolLabelSet:
 4279              	.LVL375:
 4280              	.LFB16:
3015:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR    label_buf[FS_FAT_VOL_LABEL_LEN + 1u];
 4281              		.loc 1 3015 1 is_stmt 1 view -0
 4282              		.cfi_startproc
 4283              		@ args = 0, pretend = 0, frame = 16
 4284              		@ frame_needed = 0, uses_anonymous_args = 0
3015:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR    label_buf[FS_FAT_VOL_LABEL_LEN + 1u];
 4285              		.loc 1 3015 1 is_stmt 0 view .LVU1556
 4286 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4287              	.LCFI48:
 4288              		.cfi_def_cfa_offset 20
 4289              		.cfi_offset 4, -20
 4290              		.cfi_offset 5, -16
 4291              		.cfi_offset 6, -12
 4292              		.cfi_offset 7, -8
 4293              		.cfi_offset 14, -4
 4294 0002 85B0     		sub	sp, sp, #20
 4295              	.LCFI49:
 4296              		.cfi_def_cfa_offset 40
 4297 0004 0746     		mov	r7, r0
 4298 0006 0C46     		mov	r4, r1
 4299 0008 1646     		mov	r6, r2
3016:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T  label_len;
 4300              		.loc 1 3016 5 is_stmt 1 view .LVU1557
3017:rtos/uC-FS/FAT/fs_fat.c **** 
 4301              		.loc 1 3017 5 view .LVU1558
3020:rtos/uC-FS/FAT/fs_fat.c ****     if (label_len > FS_FAT_VOL_LABEL_LEN) {
 4302              		.loc 1 3020 5 view .LVU1559
3020:rtos/uC-FS/FAT/fs_fat.c ****     if (label_len > FS_FAT_VOL_LABEL_LEN) {
 4303              		.loc 1 3020 17 is_stmt 0 view .LVU1560
 4304 000a 0C21     		movs	r1, #12
 4305              	.LVL376:
3020:rtos/uC-FS/FAT/fs_fat.c ****     if (label_len > FS_FAT_VOL_LABEL_LEN) {
 4306              		.loc 1 3020 17 view .LVU1561
 4307 000c 2046     		mov	r0, r4
 4308              	.LVL377:
3020:rtos/uC-FS/FAT/fs_fat.c ****     if (label_len > FS_FAT_VOL_LABEL_LEN) {
 4309              		.loc 1 3020 17 view .LVU1562
 4310 000e FFF7FEFF 		bl	Str_Len_N
 4311              	.LVL378:
ARM GAS  /tmp/ccazZ5Hl.s 			page 208


3021:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_LABEL_TOO_LONG;
 4312              		.loc 1 3021 5 is_stmt 1 view .LVU1563
3021:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_LABEL_TOO_LONG;
 4313              		.loc 1 3021 8 is_stmt 0 view .LVU1564
 4314 0012 0B28     		cmp	r0, #11
 4315 0014 04D9     		bls	.L263
3022:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4316              		.loc 1 3022 8 is_stmt 1 view .LVU1565
3022:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4317              		.loc 1 3022 15 is_stmt 0 view .LVU1566
 4318 0016 40F2A253 		movw	r3, #1442
 4319 001a 3380     		strh	r3, [r6]	@ movhi
3023:rtos/uC-FS/FAT/fs_fat.c ****     }
 4320              		.loc 1 3023 9 is_stmt 1 view .LVU1567
 4321              	.LVL379:
 4322              	.L262:
3034:rtos/uC-FS/FAT/fs_fat.c **** #endif
 4323              		.loc 1 3034 1 is_stmt 0 view .LVU1568
 4324 001c 05B0     		add	sp, sp, #20
 4325              	.LCFI50:
 4326              		.cfi_remember_state
 4327              		.cfi_def_cfa_offset 20
 4328              		@ sp needed
 4329 001e F0BD     		pop	{r4, r5, r6, r7, pc}
 4330              	.LVL380:
 4331              	.L263:
 4332              	.LCFI51:
 4333              		.cfi_restore_state
3034:rtos/uC-FS/FAT/fs_fat.c **** #endif
 4334              		.loc 1 3034 1 view .LVU1569
 4335 0020 0546     		mov	r5, r0
3026:rtos/uC-FS/FAT/fs_fat.c ****     label_buf[FS_FAT_VOL_LABEL_LEN] = (CPU_CHAR)ASCII_CHAR_NULL;
 4336              		.loc 1 3026 5 is_stmt 1 view .LVU1570
 4337 0022 0C22     		movs	r2, #12
 4338 0024 2021     		movs	r1, #32
 4339 0026 01A8     		add	r0, sp, #4
 4340              	.LVL381:
3026:rtos/uC-FS/FAT/fs_fat.c ****     label_buf[FS_FAT_VOL_LABEL_LEN] = (CPU_CHAR)ASCII_CHAR_NULL;
 4341              		.loc 1 3026 5 is_stmt 0 view .LVU1571
 4342 0028 FFF7FEFF 		bl	Mem_Set
 4343              	.LVL382:
3027:rtos/uC-FS/FAT/fs_fat.c **** 
 4344              		.loc 1 3027 5 is_stmt 1 view .LVU1572
3027:rtos/uC-FS/FAT/fs_fat.c **** 
 4345              		.loc 1 3027 37 is_stmt 0 view .LVU1573
 4346 002c 0023     		movs	r3, #0
 4347 002e 8DF80F30 		strb	r3, [sp, #15]
3029:rtos/uC-FS/FAT/fs_fat.c **** 
 4348              		.loc 1 3029 5 is_stmt 1 view .LVU1574
 4349 0032 2A46     		mov	r2, r5
 4350 0034 2146     		mov	r1, r4
 4351 0036 01A8     		add	r0, sp, #4
 4352 0038 FFF7FEFF 		bl	Mem_Copy
 4353              	.LVL383:
3031:rtos/uC-FS/FAT/fs_fat.c ****                         label_buf,
 4354              		.loc 1 3031 5 view .LVU1575
 4355 003c 3246     		mov	r2, r6
ARM GAS  /tmp/ccazZ5Hl.s 			page 209


 4356 003e 01A9     		add	r1, sp, #4
 4357 0040 3846     		mov	r0, r7
 4358 0042 FFF7FEFF 		bl	FS_FAT_SFN_LabelSet
 4359              	.LVL384:
 4360 0046 E9E7     		b	.L262
 4361              		.cfi_endproc
 4362              	.LFE16:
 4364              		.section	.text.FS_FAT_VolOpen,"ax",%progbits
 4365              		.align	1
 4366              		.global	FS_FAT_VolOpen
 4367              		.syntax unified
 4368              		.thumb
 4369              		.thumb_func
 4370              		.fpu fpv4-sp-d16
 4372              	FS_FAT_VolOpen:
 4373              	.LVL385:
 4374              	.LFB17:
3063:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U    boot_sig;
 4375              		.loc 1 3063 1 view -0
 4376              		.cfi_startproc
 4377              		@ args = 0, pretend = 0, frame = 8
 4378              		@ frame_needed = 0, uses_anonymous_args = 0
3063:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U    boot_sig;
 4379              		.loc 1 3063 1 is_stmt 0 view .LVU1577
 4380 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4381              	.LCFI52:
 4382              		.cfi_def_cfa_offset 24
 4383              		.cfi_offset 4, -24
 4384              		.cfi_offset 5, -20
 4385              		.cfi_offset 6, -16
 4386              		.cfi_offset 7, -12
 4387              		.cfi_offset 8, -8
 4388              		.cfi_offset 14, -4
 4389 0004 84B0     		sub	sp, sp, #16
 4390              	.LCFI53:
 4391              		.cfi_def_cfa_offset 40
 4392 0006 0546     		mov	r5, r0
 4393 0008 0C46     		mov	r4, r1
3064:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF       *p_buf;
 4394              		.loc 1 3064 5 is_stmt 1 view .LVU1578
3065:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA  *p_fat_data;
 4395              		.loc 1 3065 5 view .LVU1579
3066:rtos/uC-FS/FAT/fs_fat.c ****     void         *p_temp;
 4396              		.loc 1 3066 5 view .LVU1580
3067:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U   *p_temp_08;
 4397              		.loc 1 3067 5 view .LVU1581
3068:rtos/uC-FS/FAT/fs_fat.c ****     FS_ERR        err_tmp;
 4398              		.loc 1 3068 5 view .LVU1582
3069:rtos/uC-FS/FAT/fs_fat.c ****     LIB_ERR       pool_err;
 4399              		.loc 1 3069 5 view .LVU1583
3070:rtos/uC-FS/FAT/fs_fat.c **** 
 4400              		.loc 1 3070 5 view .LVU1584
3073:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 4401              		.loc 1 3073 5 view .LVU1585
3073:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 4402              		.loc 1 3073 13 is_stmt 0 view .LVU1586
 4403 000a FFF7FEFF 		bl	FSBuf_Get
ARM GAS  /tmp/ccazZ5Hl.s 			page 210


 4404              	.LVL386:
3074:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 4405              		.loc 1 3074 5 is_stmt 1 view .LVU1587
3074:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 4406              		.loc 1 3074 8 is_stmt 0 view .LVU1588
 4407 000e E8B1     		cbz	r0, .L276
 4408 0010 0746     		mov	r7, r0
3079:rtos/uC-FS/FAT/fs_fat.c ****     p_temp_08 = (CPU_INT08U *)p_temp;
 4409              		.loc 1 3079 5 is_stmt 1 view .LVU1589
3079:rtos/uC-FS/FAT/fs_fat.c ****     p_temp_08 = (CPU_INT08U *)p_temp;
 4410              		.loc 1 3079 15 is_stmt 0 view .LVU1590
 4411 0012 0669     		ldr	r6, [r0, #16]
 4412              	.LVL387:
3080:rtos/uC-FS/FAT/fs_fat.c **** 
 4413              		.loc 1 3080 5 is_stmt 1 view .LVU1591
3085:rtos/uC-FS/FAT/fs_fat.c ****                      p_temp,
 4414              		.loc 1 3085 5 view .LVU1592
 4415 0014 0194     		str	r4, [sp, #4]
 4416 0016 0123     		movs	r3, #1
 4417 0018 0093     		str	r3, [sp]
 4418 001a 0022     		movs	r2, #0
 4419 001c 3146     		mov	r1, r6
 4420 001e 2846     		mov	r0, r5
 4421              	.LVL388:
3085:rtos/uC-FS/FAT/fs_fat.c ****                      p_temp,
 4422              		.loc 1 3085 5 is_stmt 0 view .LVU1593
 4423 0020 FFF7FEFF 		bl	FSVol_RdLockedEx
 4424              	.LVL389:
3092:rtos/uC-FS/FAT/fs_fat.c ****          FSBuf_Free(p_buf);
 4425              		.loc 1 3092 5 is_stmt 1 view .LVU1594
3092:rtos/uC-FS/FAT/fs_fat.c ****          FSBuf_Free(p_buf);
 4426              		.loc 1 3092 9 is_stmt 0 view .LVU1595
 4427 0024 2388     		ldrh	r3, [r4]
3092:rtos/uC-FS/FAT/fs_fat.c ****          FSBuf_Free(p_buf);
 4428              		.loc 1 3092 8 view .LVU1596
 4429 0026 B3B9     		cbnz	r3, .L277
3098:rtos/uC-FS/FAT/fs_fat.c ****     if (boot_sig != FS_FAT_BOOT_SIG) {
 4430              		.loc 1 3098 5 is_stmt 1 view .LVU1597
3098:rtos/uC-FS/FAT/fs_fat.c ****     if (boot_sig != FS_FAT_BOOT_SIG) {
 4431              		.loc 1 3098 16 is_stmt 0 view .LVU1598
 4432 0028 96F8FE31 		ldrb	r3, [r6, #510]	@ zero_extendqisi2
 4433 002c 96F8FF21 		ldrb	r2, [r6, #511]	@ zero_extendqisi2
3098:rtos/uC-FS/FAT/fs_fat.c ****     if (boot_sig != FS_FAT_BOOT_SIG) {
 4434              		.loc 1 3098 14 view .LVU1599
 4435 0030 03EB0223 		add	r3, r3, r2, lsl #8
 4436 0034 9BB2     		uxth	r3, r3
 4437              	.LVL390:
3099:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4438              		.loc 1 3099 5 is_stmt 1 view .LVU1600
3099:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4439              		.loc 1 3099 8 is_stmt 0 view .LVU1601
 4440 0036 4AF65522 		movw	r2, #43605
 4441 003a 9342     		cmp	r3, r2
 4442 003c 0FD0     		beq	.L270
3100:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolOpen(): Invalid boot sec sig: 0x%04X != 0x%04X\r\n", boot_sig, FS_
 4443              		.loc 1 3100 9 is_stmt 1 view .LVU1602
 4444 003e 3846     		mov	r0, r7
ARM GAS  /tmp/ccazZ5Hl.s 			page 211


 4445 0040 FFF7FEFF 		bl	FSBuf_Free
 4446              	.LVL391:
3101:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_INVALID_SYS;
 4447              		.loc 1 3101 114 view .LVU1603
3102:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4448              		.loc 1 3102 8 view .LVU1604
3102:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4449              		.loc 1 3102 15 is_stmt 0 view .LVU1605
 4450 0044 40F27F53 		movw	r3, #1407
 4451 0048 2380     		strh	r3, [r4]	@ movhi
3103:rtos/uC-FS/FAT/fs_fat.c ****     }
 4452              		.loc 1 3103 9 is_stmt 1 view .LVU1606
 4453 004a 01E0     		b	.L266
 4454              	.LVL392:
 4455              	.L276:
3075:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4456              		.loc 1 3075 8 view .LVU1607
3075:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4457              		.loc 1 3075 15 is_stmt 0 view .LVU1608
 4458 004c 6423     		movs	r3, #100
 4459 004e 2380     		strh	r3, [r4]	@ movhi
3076:rtos/uC-FS/FAT/fs_fat.c ****     }
 4460              		.loc 1 3076 9 is_stmt 1 view .LVU1609
 4461              	.LVL393:
 4462              	.L266:
3168:rtos/uC-FS/FAT/fs_fat.c **** 
 4463              		.loc 1 3168 1 is_stmt 0 view .LVU1610
 4464 0050 04B0     		add	sp, sp, #16
 4465              	.LCFI54:
 4466              		.cfi_remember_state
 4467              		.cfi_def_cfa_offset 24
 4468              		@ sp needed
 4469 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4470              	.LVL394:
 4471              	.L277:
 4472              	.LCFI55:
 4473              		.cfi_restore_state
3093:rtos/uC-FS/FAT/fs_fat.c ****          return;
 4474              		.loc 1 3093 10 is_stmt 1 view .LVU1611
 4475 0056 3846     		mov	r0, r7
 4476 0058 FFF7FEFF 		bl	FSBuf_Free
 4477              	.LVL395:
3094:rtos/uC-FS/FAT/fs_fat.c ****     }
 4478              		.loc 1 3094 10 view .LVU1612
 4479 005c F8E7     		b	.L266
 4480              	.LVL396:
 4481              	.L270:
3107:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
 4482              		.loc 1 3107 5 view .LVU1613
 4483 005e 2046     		mov	r0, r4
 4484 0060 FFF7FEFF 		bl	FS_OS_Lock
 4485              	.LVL397:
3108:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4486              		.loc 1 3108 5 view .LVU1614
3108:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4487              		.loc 1 3108 9 is_stmt 0 view .LVU1615
 4488 0064 2388     		ldrh	r3, [r4]
ARM GAS  /tmp/ccazZ5Hl.s 			page 212


3108:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4489              		.loc 1 3108 8 view .LVU1616
 4490 0066 E3B9     		cbnz	r3, .L278
3113:rtos/uC-FS/FAT/fs_fat.c ****                                                 sizeof(FS_FAT_DATA),
 4491              		.loc 1 3113 5 is_stmt 1 view .LVU1617
3113:rtos/uC-FS/FAT/fs_fat.c ****                                                 sizeof(FS_FAT_DATA),
 4492              		.loc 1 3113 33 is_stmt 0 view .LVU1618
 4493 0068 03AA     		add	r2, sp, #12
 4494 006a 5C21     		movs	r1, #92
 4495 006c 1748     		ldr	r0, .L281
 4496 006e FFF7FEFF 		bl	Mem_PoolBlkGet
 4497              	.LVL398:
 4498 0072 8046     		mov	r8, r0
 4499              	.LVL399:
3116:rtos/uC-FS/FAT/fs_fat.c ****     FS_OS_Unlock();
 4500              		.loc 1 3116 5 is_stmt 1 view .LVU1619
3117:rtos/uC-FS/FAT/fs_fat.c **** 
 4501              		.loc 1 3117 5 view .LVU1620
 4502 0074 FFF7FEFF 		bl	FS_OS_Unlock
 4503              	.LVL400:
3119:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4504              		.loc 1 3119 5 view .LVU1621
3119:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4505              		.loc 1 3119 8 is_stmt 0 view .LVU1622
 4506 0078 B8F1000F 		cmp	r8, #0
 4507 007c 15D0     		beq	.L279
3124:rtos/uC-FS/FAT/fs_fat.c **** 
 4508              		.loc 1 3124 5 is_stmt 1 view .LVU1623
 4509 007e 4046     		mov	r0, r8
 4510 0080 FFF7FEFF 		bl	FS_FAT_DataClr
 4511              	.LVL401:
3127:rtos/uC-FS/FAT/fs_fat.c ****                       p_temp_08,
 4512              		.loc 1 3127 5 view .LVU1624
 4513 0084 2246     		mov	r2, r4
 4514 0086 3146     		mov	r1, r6
 4515 0088 4046     		mov	r0, r8
 4516 008a FFF7FEFF 		bl	FS_FAT_ChkBootSec
 4517              	.LVL402:
3131:rtos/uC-FS/FAT/fs_fat.c **** 
 4518              		.loc 1 3131 5 view .LVU1625
 4519 008e 3846     		mov	r0, r7
 4520 0090 FFF7FEFF 		bl	FSBuf_Free
 4521              	.LVL403:
3133:rtos/uC-FS/FAT/fs_fat.c ****         FS_OS_Lock(&err_tmp);
 4522              		.loc 1 3133 5 view .LVU1626
3133:rtos/uC-FS/FAT/fs_fat.c ****         FS_OS_Lock(&err_tmp);
 4523              		.loc 1 3133 9 is_stmt 0 view .LVU1627
 4524 0094 2388     		ldrh	r3, [r4]
3133:rtos/uC-FS/FAT/fs_fat.c ****         FS_OS_Lock(&err_tmp);
 4525              		.loc 1 3133 8 view .LVU1628
 4526 0096 63B9     		cbnz	r3, .L280
3143:rtos/uC-FS/FAT/fs_fat.c **** 
 4527              		.loc 1 3143 5 is_stmt 1 view .LVU1629
3143:rtos/uC-FS/FAT/fs_fat.c **** 
 4528              		.loc 1 3143 20 is_stmt 0 view .LVU1630
 4529 0098 C5F83480 		str	r8, [r5, #52]
3160:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     Sec  size: %d B  \r\n",  p_fat_data->SecSi
ARM GAS  /tmp/ccazZ5Hl.s 			page 213


 4530              		.loc 1 3160 105 is_stmt 1 view .LVU1631
3161:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     Clus size: %d sec\r\n",  p_fat_data->ClusS
 4531              		.loc 1 3161 104 view .LVU1632
3162:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     Vol  size: %d sec\r\n",  p_fat_data->VolSi
 4532              		.loc 1 3162 109 view .LVU1633
3163:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     # Clus   : %d    \r\n", (p_fat_data->MaxCl
 4533              		.loc 1 3163 104 view .LVU1634
3164:rtos/uC-FS/FAT/fs_fat.c ****     FS_TRACE_INFO(("                                     # FATs   : %d    \r\n",  p_fat_data->NbrFA
 4534              		.loc 1 3164 130 view .LVU1635
3165:rtos/uC-FS/FAT/fs_fat.c **** 
 4535              		.loc 1 3165 104 view .LVU1636
3167:rtos/uC-FS/FAT/fs_fat.c **** }
 4536              		.loc 1 3167 4 view .LVU1637
3167:rtos/uC-FS/FAT/fs_fat.c **** }
 4537              		.loc 1 3167 11 is_stmt 0 view .LVU1638
 4538 009c 0023     		movs	r3, #0
 4539 009e 2380     		strh	r3, [r4]	@ movhi
 4540 00a0 D6E7     		b	.L266
 4541              	.LVL404:
 4542              	.L278:
3109:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4543              		.loc 1 3109 9 is_stmt 1 view .LVU1639
 4544 00a2 3846     		mov	r0, r7
 4545 00a4 FFF7FEFF 		bl	FSBuf_Free
 4546              	.LVL405:
3110:rtos/uC-FS/FAT/fs_fat.c ****     }
 4547              		.loc 1 3110 9 view .LVU1640
 4548 00a8 D2E7     		b	.L266
 4549              	.LVL406:
 4550              	.L279:
3120:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4551              		.loc 1 3120 9 view .LVU1641
 4552 00aa 3846     		mov	r0, r7
 4553 00ac FFF7FEFF 		bl	FSBuf_Free
 4554              	.LVL407:
3121:rtos/uC-FS/FAT/fs_fat.c ****     }
 4555              		.loc 1 3121 9 view .LVU1642
 4556 00b0 CEE7     		b	.L266
 4557              	.L280:
3134:rtos/uC-FS/FAT/fs_fat.c ****         Mem_PoolBlkFree(        &FS_FAT_DataPool,               /* ... free FAT data        ...    
 4558              		.loc 1 3134 9 view .LVU1643
 4559 00b2 0DF10E00 		add	r0, sp, #14
 4560 00b6 FFF7FEFF 		bl	FS_OS_Lock
 4561              	.LVL408:
3135:rtos/uC-FS/FAT/fs_fat.c ****                         (void *) p_fat_data,
 4562              		.loc 1 3135 9 view .LVU1644
 4563 00ba 03AA     		add	r2, sp, #12
 4564 00bc 4146     		mov	r1, r8
 4565 00be 0348     		ldr	r0, .L281
 4566 00c0 FFF7FEFF 		bl	Mem_PoolBlkFree
 4567              	.LVL409:
3138:rtos/uC-FS/FAT/fs_fat.c ****         return;                                                 /* ... & rtn.                      
 4568              		.loc 1 3138 9 view .LVU1645
 4569 00c4 FFF7FEFF 		bl	FS_OS_Unlock
 4570              	.LVL410:
3139:rtos/uC-FS/FAT/fs_fat.c ****     }
 4571              		.loc 1 3139 9 view .LVU1646
ARM GAS  /tmp/ccazZ5Hl.s 			page 214


 4572 00c8 C2E7     		b	.L266
 4573              	.L282:
 4574 00ca 00BF     		.align	2
 4575              	.L281:
 4576 00cc 00000000 		.word	.LANCHOR3
 4577              		.cfi_endproc
 4578              	.LFE17:
 4580              		.section	.text.FS_FAT_VolQuery,"ax",%progbits
 4581              		.align	1
 4582              		.global	FS_FAT_VolQuery
 4583              		.syntax unified
 4584              		.thumb
 4585              		.thumb_func
 4586              		.fpu fpv4-sp-d16
 4588              	FS_FAT_VolQuery:
 4589              	.LVL411:
 4590              	.LFB18:
3200:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF       *p_buf;
 4591              		.loc 1 3200 1 view -0
 4592              		.cfi_startproc
 4593              		@ args = 0, pretend = 0, frame = 0
 4594              		@ frame_needed = 0, uses_anonymous_args = 0
3200:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF       *p_buf;
 4595              		.loc 1 3200 1 is_stmt 0 view .LVU1648
 4596 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4597              	.LCFI56:
 4598              		.cfi_def_cfa_offset 24
 4599              		.cfi_offset 3, -24
 4600              		.cfi_offset 4, -20
 4601              		.cfi_offset 5, -16
 4602              		.cfi_offset 6, -12
 4603              		.cfi_offset 7, -8
 4604              		.cfi_offset 14, -4
 4605 0002 1546     		mov	r5, r2
3201:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA  *p_fat_data;
 4606              		.loc 1 3201 5 is_stmt 1 view .LVU1649
3202:rtos/uC-FS/FAT/fs_fat.c **** 
 4607              		.loc 1 3202 5 view .LVU1650
3205:rtos/uC-FS/FAT/fs_fat.c **** 
 4608              		.loc 1 3205 5 view .LVU1651
3205:rtos/uC-FS/FAT/fs_fat.c **** 
 4609              		.loc 1 3205 16 is_stmt 0 view .LVU1652
 4610 0004 436B     		ldr	r3, [r0, #52]
 4611              	.LVL412:
3207:rtos/uC-FS/FAT/fs_fat.c ****        *p_err =   FS_ERR_VOL_INVALID_SYS;
 4612              		.loc 1 3207 5 is_stmt 1 view .LVU1653
3207:rtos/uC-FS/FAT/fs_fat.c ****        *p_err =   FS_ERR_VOL_INVALID_SYS;
 4613              		.loc 1 3207 8 is_stmt 0 view .LVU1654
 4614 0006 7BB1     		cbz	r3, .L288
 4615 0008 0446     		mov	r4, r0
 4616 000a 0E46     		mov	r6, r1
3212:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 4617              		.loc 1 3212 5 is_stmt 1 view .LVU1655
3212:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 4618              		.loc 1 3212 13 is_stmt 0 view .LVU1656
 4619 000c FFF7FEFF 		bl	FSBuf_Get
 4620              	.LVL413:
ARM GAS  /tmp/ccazZ5Hl.s 			page 215


3213:rtos/uC-FS/FAT/fs_fat.c ****        *p_err =   FS_ERR_BUF_NONE_AVAIL;
 4621              		.loc 1 3213 5 is_stmt 1 view .LVU1657
3213:rtos/uC-FS/FAT/fs_fat.c ****        *p_err =   FS_ERR_BUF_NONE_AVAIL;
 4622              		.loc 1 3213 8 is_stmt 0 view .LVU1658
 4623 0010 0746     		mov	r7, r0
 4624 0012 68B1     		cbz	r0, .L289
3219:rtos/uC-FS/FAT/fs_fat.c ****                  p_buf,
 4625              		.loc 1 3219 5 is_stmt 1 view .LVU1659
 4626 0014 2B46     		mov	r3, r5
 4627 0016 3246     		mov	r2, r6
 4628 0018 0146     		mov	r1, r0
 4629 001a 2046     		mov	r0, r4
 4630              	.LVL414:
3219:rtos/uC-FS/FAT/fs_fat.c ****                  p_buf,
 4631              		.loc 1 3219 5 is_stmt 0 view .LVU1660
 4632 001c FFF7FEFF 		bl	FS_FAT_Query
 4633              	.LVL415:
3224:rtos/uC-FS/FAT/fs_fat.c **** }
 4634              		.loc 1 3224 5 is_stmt 1 view .LVU1661
 4635 0020 3846     		mov	r0, r7
 4636 0022 FFF7FEFF 		bl	FSBuf_Free
 4637              	.LVL416:
 4638              	.L283:
3225:rtos/uC-FS/FAT/fs_fat.c **** 
 4639              		.loc 1 3225 1 is_stmt 0 view .LVU1662
 4640 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4641              	.LVL417:
 4642              	.L288:
3208:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4643              		.loc 1 3208 8 is_stmt 1 view .LVU1663
3208:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4644              		.loc 1 3208 15 is_stmt 0 view .LVU1664
 4645 0028 40F27F53 		movw	r3, #1407
 4646              	.LVL418:
3208:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4647              		.loc 1 3208 15 view .LVU1665
 4648 002c 1380     		strh	r3, [r2]	@ movhi
 4649              	.LVL419:
3209:rtos/uC-FS/FAT/fs_fat.c ****     }
 4650              		.loc 1 3209 9 is_stmt 1 view .LVU1666
 4651 002e FAE7     		b	.L283
 4652              	.LVL420:
 4653              	.L289:
3214:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4654              		.loc 1 3214 8 view .LVU1667
3214:rtos/uC-FS/FAT/fs_fat.c ****         return;
 4655              		.loc 1 3214 15 is_stmt 0 view .LVU1668
 4656 0030 6423     		movs	r3, #100
 4657 0032 2B80     		strh	r3, [r5]	@ movhi
3215:rtos/uC-FS/FAT/fs_fat.c ****     }
 4658              		.loc 1 3215 9 is_stmt 1 view .LVU1669
 4659 0034 F7E7     		b	.L283
 4660              		.cfi_endproc
 4661              	.LFE18:
 4663              		.section	.text.FS_FAT_LowDirChkEmpty,"ax",%progbits
 4664              		.align	1
 4665              		.global	FS_FAT_LowDirChkEmpty
ARM GAS  /tmp/ccazZ5Hl.s 			page 216


 4666              		.syntax unified
 4667              		.thumb
 4668              		.thumb_func
 4669              		.fpu fpv4-sp-d16
 4671              	FS_FAT_LowDirChkEmpty:
 4672              	.LVL421:
 4673              	.LFB20:
3384:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_pos;
 4674              		.loc 1 3384 1 view -0
 4675              		.cfi_startproc
 4676              		@ args = 0, pretend = 0, frame = 16
 4677              		@ frame_needed = 0, uses_anonymous_args = 0
3384:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_pos;
 4678              		.loc 1 3384 1 is_stmt 0 view .LVU1671
 4679 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4680              	.LCFI57:
 4681              		.cfi_def_cfa_offset 24
 4682              		.cfi_offset 4, -24
 4683              		.cfi_offset 5, -20
 4684              		.cfi_offset 6, -16
 4685              		.cfi_offset 7, -12
 4686              		.cfi_offset 8, -8
 4687              		.cfi_offset 14, -4
 4688 0004 86B0     		sub	sp, sp, #24
 4689              	.LCFI58:
 4690              		.cfi_def_cfa_offset 48
 4691 0006 0F46     		mov	r7, r1
 4692 0008 1D46     		mov	r5, r3
3385:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_end_pos;
 4693              		.loc 1 3385 5 is_stmt 1 view .LVU1672
3386:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       dir_entry_cnt;
 4694              		.loc 1 3386 5 view .LVU1673
3387:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA     *p_fat_data;
 4695              		.loc 1 3387 5 view .LVU1674
3388:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN      valid;
 4696              		.loc 1 3388 5 view .LVU1675
3389:rtos/uC-FS/FAT/fs_fat.c **** 
 4697              		.loc 1 3389 5 view .LVU1676
3392:rtos/uC-FS/FAT/fs_fat.c **** 
 4698              		.loc 1 3392 5 view .LVU1677
3392:rtos/uC-FS/FAT/fs_fat.c **** 
 4699              		.loc 1 3392 16 is_stmt 0 view .LVU1678
 4700 000a 436B     		ldr	r3, [r0, #52]
 4701              	.LVL422:
3396:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {
 4702              		.loc 1 3396 5 is_stmt 1 view .LVU1679
3396:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {
 4703              		.loc 1 3396 13 is_stmt 0 view .LVU1680
 4704 000c 5969     		ldr	r1, [r3, #20]
 4705              	.LVL423:
3396:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {
 4706              		.loc 1 3396 11 view .LVU1681
 4707 000e 9142     		cmp	r1, r2
 4708 0010 22D9     		bls	.L291
 4709 0012 0646     		mov	r6, r0
3396:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_NO) {
 4710              		.loc 1 3396 13 discriminator 1 view .LVU1682
ARM GAS  /tmp/ccazZ5Hl.s 			page 217


 4711 0014 012A     		cmp	r2, #1
 4712 0016 1FD9     		bls	.L291
 4713              	.LVL424:
3397:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
 4714              		.loc 1 3397 5 is_stmt 1 view .LVU1683
3402:rtos/uC-FS/FAT/fs_fat.c ****     dir_pos.SecPos = 0u;
 4715              		.loc 1 3402 5 view .LVU1684
3402:rtos/uC-FS/FAT/fs_fat.c ****     dir_pos.SecPos = 0u;
 4716              		.loc 1 3402 22 is_stmt 0 view .LVU1685
 4717 0018 D96A     		ldr	r1, [r3, #44]
 4718 001a 023A     		subs	r2, r2, #2
 4719              	.LVL425:
3402:rtos/uC-FS/FAT/fs_fat.c ****     dir_pos.SecPos = 0u;
 4720              		.loc 1 3402 22 view .LVU1686
 4721 001c 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 4722              	.LVL426:
3402:rtos/uC-FS/FAT/fs_fat.c ****     dir_pos.SecPos = 0u;
 4723              		.loc 1 3402 22 view .LVU1687
 4724 0020 9A40     		lsls	r2, r2, r3
 4725              	.LVL427:
3402:rtos/uC-FS/FAT/fs_fat.c ****     dir_pos.SecPos = 0u;
 4726              		.loc 1 3402 22 view .LVU1688
 4727 0022 0A44     		add	r2, r2, r1
3402:rtos/uC-FS/FAT/fs_fat.c ****     dir_pos.SecPos = 0u;
 4728              		.loc 1 3402 20 view .LVU1689
 4729 0024 0492     		str	r2, [sp, #16]
3403:rtos/uC-FS/FAT/fs_fat.c **** 
 4730              		.loc 1 3403 5 is_stmt 1 view .LVU1690
3403:rtos/uC-FS/FAT/fs_fat.c **** 
 4731              		.loc 1 3403 20 is_stmt 0 view .LVU1691
 4732 0026 0024     		movs	r4, #0
 4733 0028 0594     		str	r4, [sp, #20]
3407:rtos/uC-FS/FAT/fs_fat.c ****     while (dir_entry_cnt < 3u) {
 4734              		.loc 1 3407 5 is_stmt 1 view .LVU1692
 4735              	.LVL428:
3408:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_FN_API_Active.NextDirEntryGet(             p_vol,
 4736              		.loc 1 3408 5 view .LVU1693
 4737              	.L292:
3408:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_FN_API_Active.NextDirEntryGet(             p_vol,
 4738              		.loc 1 3408 11 view .LVU1694
 4739 002a 022C     		cmp	r4, #2
 4740 002c 22D8     		bhi	.L298
3409:rtos/uC-FS/FAT/fs_fat.c ****                                                           p_buf,
 4741              		.loc 1 3409 9 view .LVU1695
3409:rtos/uC-FS/FAT/fs_fat.c ****                                                           p_buf,
 4742              		.loc 1 3409 29 is_stmt 0 view .LVU1696
 4743 002e 124B     		ldr	r3, .L301
 4744 0030 D3F81080 		ldr	r8, [r3, #16]
3409:rtos/uC-FS/FAT/fs_fat.c ****                                                           p_buf,
 4745              		.loc 1 3409 9 view .LVU1697
 4746 0034 0195     		str	r5, [sp, #4]
 4747 0036 02AB     		add	r3, sp, #8
 4748 0038 0093     		str	r3, [sp]
 4749 003a 04AB     		add	r3, sp, #16
 4750 003c 0022     		movs	r2, #0
 4751 003e 3946     		mov	r1, r7
 4752 0040 3046     		mov	r0, r6
ARM GAS  /tmp/ccazZ5Hl.s 			page 218


 4753 0042 C047     		blx	r8
 4754              	.LVL429:
3416:rtos/uC-FS/FAT/fs_fat.c ****             if (*p_err == FS_ERR_EOF) {                             /* If no entry found ...       
 4755              		.loc 1 3416 9 is_stmt 1 view .LVU1698
3416:rtos/uC-FS/FAT/fs_fat.c ****             if (*p_err == FS_ERR_EOF) {                             /* If no entry found ...       
 4756              		.loc 1 3416 13 is_stmt 0 view .LVU1699
 4757 0044 2B88     		ldrh	r3, [r5]
3416:rtos/uC-FS/FAT/fs_fat.c ****             if (*p_err == FS_ERR_EOF) {                             /* If no entry found ...       
 4758              		.loc 1 3416 12 view .LVU1700
 4759 0046 6BB9     		cbnz	r3, .L299
3424:rtos/uC-FS/FAT/fs_fat.c ****         dir_pos.SecPos = dir_end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 4760              		.loc 1 3424 9 is_stmt 1 view .LVU1701
3424:rtos/uC-FS/FAT/fs_fat.c ****         dir_pos.SecPos = dir_end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 4761              		.loc 1 3424 37 is_stmt 0 view .LVU1702
 4762 0048 029B     		ldr	r3, [sp, #8]
3424:rtos/uC-FS/FAT/fs_fat.c ****         dir_pos.SecPos = dir_end_pos.SecPos + FS_FAT_SIZE_DIR_ENTRY;
 4763              		.loc 1 3424 24 view .LVU1703
 4764 004a 0493     		str	r3, [sp, #16]
3425:rtos/uC-FS/FAT/fs_fat.c **** 
 4765              		.loc 1 3425 9 is_stmt 1 view .LVU1704
3425:rtos/uC-FS/FAT/fs_fat.c **** 
 4766              		.loc 1 3425 37 is_stmt 0 view .LVU1705
 4767 004c 039B     		ldr	r3, [sp, #12]
3425:rtos/uC-FS/FAT/fs_fat.c **** 
 4768              		.loc 1 3425 45 view .LVU1706
 4769 004e 2033     		adds	r3, r3, #32
3425:rtos/uC-FS/FAT/fs_fat.c **** 
 4770              		.loc 1 3425 24 view .LVU1707
 4771 0050 0593     		str	r3, [sp, #20]
3427:rtos/uC-FS/FAT/fs_fat.c ****     }
 4772              		.loc 1 3427 9 is_stmt 1 view .LVU1708
3427:rtos/uC-FS/FAT/fs_fat.c ****     }
 4773              		.loc 1 3427 22 is_stmt 0 view .LVU1709
 4774 0052 0134     		adds	r4, r4, #1
 4775              	.LVL430:
3427:rtos/uC-FS/FAT/fs_fat.c ****     }
 4776              		.loc 1 3427 22 view .LVU1710
 4777 0054 E4B2     		uxtb	r4, r4
 4778              	.LVL431:
3427:rtos/uC-FS/FAT/fs_fat.c ****     }
 4779              		.loc 1 3427 22 view .LVU1711
 4780 0056 E8E7     		b	.L292
 4781              	.LVL432:
 4782              	.L291:
3397:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
 4783              		.loc 1 3397 5 is_stmt 1 view .LVU1712
3398:rtos/uC-FS/FAT/fs_fat.c ****         return (DEF_YES);
 4784              		.loc 1 3398 8 view .LVU1713
3398:rtos/uC-FS/FAT/fs_fat.c ****         return (DEF_YES);
 4785              		.loc 1 3398 15 is_stmt 0 view .LVU1714
 4786 0058 0023     		movs	r3, #0
 4787              	.LVL433:
3398:rtos/uC-FS/FAT/fs_fat.c ****         return (DEF_YES);
 4788              		.loc 1 3398 15 view .LVU1715
 4789 005a 2B80     		strh	r3, [r5]	@ movhi
 4790              	.LVL434:
3399:rtos/uC-FS/FAT/fs_fat.c ****     }
ARM GAS  /tmp/ccazZ5Hl.s 			page 219


 4791              		.loc 1 3399 9 is_stmt 1 view .LVU1716
3399:rtos/uC-FS/FAT/fs_fat.c ****     }
 4792              		.loc 1 3399 16 is_stmt 0 view .LVU1717
 4793 005c 0120     		movs	r0, #1
 4794              	.LVL435:
 4795              	.L293:
3431:rtos/uC-FS/FAT/fs_fat.c **** #endif
 4796              		.loc 1 3431 1 view .LVU1718
 4797 005e 06B0     		add	sp, sp, #24
 4798              	.LCFI59:
 4799              		.cfi_remember_state
 4800              		.cfi_def_cfa_offset 24
 4801              		@ sp needed
 4802 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4803              	.LVL436:
 4804              	.L299:
 4805              	.LCFI60:
 4806              		.cfi_restore_state
3417:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err =  FS_ERR_NONE;
 4807              		.loc 1 3417 13 is_stmt 1 view .LVU1719
3417:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err =  FS_ERR_NONE;
 4808              		.loc 1 3417 16 is_stmt 0 view .LVU1720
 4809 0064 162B     		cmp	r3, #22
 4810 0066 01D0     		beq	.L300
3421:rtos/uC-FS/FAT/fs_fat.c ****         }
 4811              		.loc 1 3421 20 view .LVU1721
 4812 0068 0020     		movs	r0, #0
 4813 006a F8E7     		b	.L293
 4814              	.L300:
3418:rtos/uC-FS/FAT/fs_fat.c ****                  return (DEF_YES);                                  /* ... rtn empty.              
 4815              		.loc 1 3418 17 is_stmt 1 view .LVU1722
3418:rtos/uC-FS/FAT/fs_fat.c ****                  return (DEF_YES);                                  /* ... rtn empty.              
 4816              		.loc 1 3418 24 is_stmt 0 view .LVU1723
 4817 006c 0023     		movs	r3, #0
 4818 006e 2B80     		strh	r3, [r5]	@ movhi
3419:rtos/uC-FS/FAT/fs_fat.c ****             }
 4819              		.loc 1 3419 18 is_stmt 1 view .LVU1724
3419:rtos/uC-FS/FAT/fs_fat.c ****             }
 4820              		.loc 1 3419 25 is_stmt 0 view .LVU1725
 4821 0070 0120     		movs	r0, #1
 4822 0072 F4E7     		b	.L293
 4823              	.L298:
3430:rtos/uC-FS/FAT/fs_fat.c **** }
 4824              		.loc 1 3430 12 view .LVU1726
 4825 0074 0020     		movs	r0, #0
 4826 0076 F2E7     		b	.L293
 4827              	.L302:
 4828              		.align	2
 4829              	.L301:
 4830 0078 00000000 		.word	FS_FAT_LFN_API
 4831              		.cfi_endproc
 4832              	.LFE20:
 4834              		.section	.text.FS_FAT_LowFileFirstClusGet,"ax",%progbits
 4835              		.align	1
 4836              		.global	FS_FAT_LowFileFirstClusGet
 4837              		.syntax unified
 4838              		.thumb
ARM GAS  /tmp/ccazZ5Hl.s 			page 220


 4839              		.thumb_func
 4840              		.fpu fpv4-sp-d16
 4842              	FS_FAT_LowFileFirstClusGet:
 4843              	.LVL437:
 4844              	.LFB23:
3681:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U        attrib;
 4845              		.loc 1 3681 1 is_stmt 1 view -0
 4846              		.cfi_startproc
 4847              		@ args = 0, pretend = 0, frame = 24
 4848              		@ frame_needed = 0, uses_anonymous_args = 0
3681:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U        attrib;
 4849              		.loc 1 3681 1 is_stmt 0 view .LVU1728
 4850 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4851              	.LCFI61:
 4852              		.cfi_def_cfa_offset 20
 4853              		.cfi_offset 4, -20
 4854              		.cfi_offset 5, -16
 4855              		.cfi_offset 6, -12
 4856              		.cfi_offset 7, -8
 4857              		.cfi_offset 14, -4
 4858 0002 8BB0     		sub	sp, sp, #44
 4859              	.LCFI62:
 4860              		.cfi_def_cfa_offset 64
 4861 0004 1546     		mov	r5, r2
3682:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_end_pos;
 4862              		.loc 1 3682 5 is_stmt 1 view .LVU1729
3683:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    dir_first_sec;
 4863              		.loc 1 3683 5 view .LVU1730
3684:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_start_pos;
 4864              		.loc 1 3684 5 view .LVU1731
3685:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       is_dir;
 4865              		.loc 1 3685 5 view .LVU1732
3686:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U        file_size_sec;
 4866              		.loc 1 3686 5 view .LVU1733
3687:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       valid;
 4867              		.loc 1 3687 5 view .LVU1734
3688:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       invalid;
 4868              		.loc 1 3688 5 view .LVU1735
3689:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF           *p_buf;
 4869              		.loc 1 3689 5 view .LVU1736
3690:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
 4870              		.loc 1 3690 5 view .LVU1737
3691:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 4871              		.loc 1 3691 5 view .LVU1738
3692:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   file_first_clus;
 4872              		.loc 1 3692 5 view .LVU1739
3693:rtos/uC-FS/FAT/fs_fat.c **** 
 4873              		.loc 1 3693 5 view .LVU1740
3697:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Root dir is not file.\r\n"));
 4874              		.loc 1 3697 5 view .LVU1741
3697:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Root dir is not file.\r\n"));
 4875              		.loc 1 3697 19 is_stmt 0 view .LVU1742
 4876 0006 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
3697:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Root dir is not file.\r\n"));
 4877              		.loc 1 3697 8 view .LVU1743
 4878 0008 33B9     		cbnz	r3, .L304
3698:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_ENTRY_NOT_FILE;
ARM GAS  /tmp/ccazZ5Hl.s 			page 221


 4879              		.loc 1 3698 82 is_stmt 1 view .LVU1744
3699:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 4880              		.loc 1 3699 8 view .LVU1745
3699:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 4881              		.loc 1 3699 15 is_stmt 0 view .LVU1746
 4882 000a 4FF43173 		mov	r3, #708
 4883 000e 1380     		strh	r3, [r2]	@ movhi
3700:rtos/uC-FS/FAT/fs_fat.c ****     }
 4884              		.loc 1 3700 9 is_stmt 1 view .LVU1747
3700:rtos/uC-FS/FAT/fs_fat.c ****     }
 4885              		.loc 1 3700 16 is_stmt 0 view .LVU1748
 4886 0010 0024     		movs	r4, #0
 4887              	.LVL438:
 4888              	.L303:
3776:rtos/uC-FS/FAT/fs_fat.c **** 
 4889              		.loc 1 3776 1 view .LVU1749
 4890 0012 2046     		mov	r0, r4
 4891 0014 0BB0     		add	sp, sp, #44
 4892              	.LCFI63:
 4893              		.cfi_remember_state
 4894              		.cfi_def_cfa_offset 20
 4895              		@ sp needed
 4896 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 4897              	.LVL439:
 4898              	.L304:
 4899              	.LCFI64:
 4900              		.cfi_restore_state
3776:rtos/uC-FS/FAT/fs_fat.c **** 
 4901              		.loc 1 3776 1 view .LVU1750
 4902 0018 0746     		mov	r7, r0
 4903 001a 0C46     		mov	r4, r1
3703:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 4904              		.loc 1 3703 5 is_stmt 1 view .LVU1751
3703:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 4905              		.loc 1 3703 13 is_stmt 0 view .LVU1752
 4906 001c FFF7FEFF 		bl	FSBuf_Get
 4907              	.LVL440:
3704:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 4908              		.loc 1 3704 5 is_stmt 1 view .LVU1753
3704:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 4909              		.loc 1 3704 8 is_stmt 0 view .LVU1754
 4910 0020 0646     		mov	r6, r0
 4911 0022 0028     		cmp	r0, #0
 4912 0024 41D0     		beq	.L316
3709:rtos/uC-FS/FAT/fs_fat.c ****                      p_buf,
 4913              		.loc 1 3709 5 is_stmt 1 view .LVU1755
 4914 0026 0295     		str	r5, [sp, #8]
 4915 0028 08AB     		add	r3, sp, #32
 4916 002a 0193     		str	r3, [sp, #4]
 4917 002c 05AB     		add	r3, sp, #20
 4918 002e 0093     		str	r3, [sp]
 4919 0030 07AB     		add	r3, sp, #28
 4920 0032 2246     		mov	r2, r4
 4921 0034 0146     		mov	r1, r0
 4922 0036 3846     		mov	r0, r7
 4923              	.LVL441:
3709:rtos/uC-FS/FAT/fs_fat.c ****                      p_buf,
ARM GAS  /tmp/ccazZ5Hl.s 			page 222


 4924              		.loc 1 3709 5 is_stmt 0 view .LVU1756
 4925 0038 FFF7FEFF 		bl	FS_FAT_DataSrch
 4926              	.LVL442:
3717:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4927              		.loc 1 3717 5 is_stmt 1 view .LVU1757
3717:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4928              		.loc 1 3717 9 is_stmt 0 view .LVU1758
 4929 003c 2B88     		ldrh	r3, [r5]
3717:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4930              		.loc 1 3717 8 view .LVU1759
 4931 003e 002B     		cmp	r3, #0
 4932 0040 37D1     		bne	.L317
3722:rtos/uC-FS/FAT/fs_fat.c ****     attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR));
 4933              		.loc 1 3722 5 is_stmt 1 view .LVU1760
3722:rtos/uC-FS/FAT/fs_fat.c ****     attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR));
 4934              		.loc 1 3722 38 is_stmt 0 view .LVU1761
 4935 0042 3269     		ldr	r2, [r6, #16]
3722:rtos/uC-FS/FAT/fs_fat.c ****     attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR));
 4936              		.loc 1 3722 61 view .LVU1762
 4937 0044 099B     		ldr	r3, [sp, #36]
3722:rtos/uC-FS/FAT/fs_fat.c ****     attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR));
 4938              		.loc 1 3722 17 view .LVU1763
 4939 0046 1344     		add	r3, r3, r2
 4940              	.LVL443:
3723:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is invalid.    
 4941              		.loc 1 3723 5 is_stmt 1 view .LVU1764
3723:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is invalid.    
 4942              		.loc 1 3723 17 is_stmt 0 view .LVU1765
 4943 0048 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
3725:rtos/uC-FS/FAT/fs_fat.c ****     if (invalid) {
 4944              		.loc 1 3725 5 is_stmt 1 view .LVU1766
3725:rtos/uC-FS/FAT/fs_fat.c ****     if (invalid) {
 4945              		.loc 1 3725 13 is_stmt 0 view .LVU1767
 4946 004a 02F01801 		and	r1, r2, #24
 4947 004e 1829     		cmp	r1, #24
 4948 0050 34D0     		beq	.L318
 4949              	.LVL444:
3726:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4950              		.loc 1 3726 5 is_stmt 1 view .LVU1768
3733:rtos/uC-FS/FAT/fs_fat.c ****     if (invalid) {
 4951              		.loc 1 3733 5 view .LVU1769
3734:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4952              		.loc 1 3734 5 view .LVU1770
3734:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 4953              		.loc 1 3734 8 is_stmt 0 view .LVU1771
 4954 0052 12F0080F 		tst	r2, #8
 4955 0056 39D1     		bne	.L319
3742:rtos/uC-FS/FAT/fs_fat.c ****     is_dir        =  DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY);
 4956              		.loc 1 3742 5 is_stmt 1 view .LVU1772
3742:rtos/uC-FS/FAT/fs_fat.c ****     is_dir        =  DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY);
 4957              		.loc 1 3742 22 is_stmt 0 view .LVU1773
 4958 0058 1C7F     		ldrb	r4, [r3, #28]	@ zero_extendqisi2
 4959              	.LVL445:
3742:rtos/uC-FS/FAT/fs_fat.c ****     is_dir        =  DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY);
 4960              		.loc 1 3742 22 view .LVU1774
 4961 005a 597F     		ldrb	r1, [r3, #29]	@ zero_extendqisi2
 4962 005c 04EB0124 		add	r4, r4, r1, lsl #8
ARM GAS  /tmp/ccazZ5Hl.s 			page 223


 4963 0060 997F     		ldrb	r1, [r3, #30]	@ zero_extendqisi2
 4964 0062 04EB0144 		add	r4, r4, r1, lsl #16
 4965 0066 D97F     		ldrb	r1, [r3, #31]	@ zero_extendqisi2
 4966              	.LVL446:
3743:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data    = (FS_FAT_DATA *)p_vol->DataPtr;
 4967              		.loc 1 3743 5 is_stmt 1 view .LVU1775
3743:rtos/uC-FS/FAT/fs_fat.c ****     p_fat_data    = (FS_FAT_DATA *)p_vol->DataPtr;
 4968              		.loc 1 3743 19 is_stmt 0 view .LVU1776
 4969 0068 C2F30012 		ubfx	r2, r2, #4, #1
 4970              	.LVL447:
3744:rtos/uC-FS/FAT/fs_fat.c **** 
 4971              		.loc 1 3744 5 is_stmt 1 view .LVU1777
3744:rtos/uC-FS/FAT/fs_fat.c **** 
 4972              		.loc 1 3744 19 is_stmt 0 view .LVU1778
 4973 006c 786B     		ldr	r0, [r7, #52]
 4974              	.LVL448:
3746:rtos/uC-FS/FAT/fs_fat.c ****         (is_dir        == DEF_YES)) {                           /* ... or entry is dir     ...     
 4975              		.loc 1 3746 5 is_stmt 1 view .LVU1779
3746:rtos/uC-FS/FAT/fs_fat.c ****         (is_dir        == DEF_YES)) {                           /* ... or entry is dir     ...     
 4976              		.loc 1 3746 8 is_stmt 0 view .LVU1780
 4977 006e 14EB0164 		adds	r4, r4, r1, lsl #24
 4978              	.LVL449:
3746:rtos/uC-FS/FAT/fs_fat.c ****         (is_dir        == DEF_YES)) {                           /* ... or entry is dir     ...     
 4979              		.loc 1 3746 8 view .LVU1781
 4980 0072 00D1     		bne	.L310
3746:rtos/uC-FS/FAT/fs_fat.c ****         (is_dir        == DEF_YES)) {                           /* ... or entry is dir     ...     
 4981              		.loc 1 3746 31 discriminator 1 view .LVU1782
 4982 0074 AAB1     		cbz	r2, .L311
 4983              	.L310:
3749:rtos/uC-FS/FAT/fs_fat.c ****         if ((p_fat_data->FAT_Type == 12u) ||
 4984              		.loc 1 3749 9 is_stmt 1 view .LVU1783
3749:rtos/uC-FS/FAT/fs_fat.c ****         if ((p_fat_data->FAT_Type == 12u) ||
 4985              		.loc 1 3749 28 is_stmt 0 view .LVU1784
 4986 0076 1C7D     		ldrb	r4, [r3, #20]	@ zero_extendqisi2
 4987              	.LVL450:
3749:rtos/uC-FS/FAT/fs_fat.c ****         if ((p_fat_data->FAT_Type == 12u) ||
 4988              		.loc 1 3749 28 view .LVU1785
 4989 0078 5A7D     		ldrb	r2, [r3, #21]	@ zero_extendqisi2
 4990              	.LVL451:
3749:rtos/uC-FS/FAT/fs_fat.c ****         if ((p_fat_data->FAT_Type == 12u) ||
 4991              		.loc 1 3749 28 view .LVU1786
 4992 007a 04EB0222 		add	r2, r4, r2, lsl #8
 4993 007e 9C7E     		ldrb	r4, [r3, #26]	@ zero_extendqisi2
 4994 0080 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 4995              	.LVL452:
3749:rtos/uC-FS/FAT/fs_fat.c ****         if ((p_fat_data->FAT_Type == 12u) ||
 4996              		.loc 1 3749 28 view .LVU1787
 4997 0082 04EB0324 		add	r4, r4, r3, lsl #8
 4998 0086 A4B2     		uxth	r4, r4
3749:rtos/uC-FS/FAT/fs_fat.c ****         if ((p_fat_data->FAT_Type == 12u) ||
 4999              		.loc 1 3749 25 view .LVU1788
 5000 0088 04EB0244 		add	r4, r4, r2, lsl #16
 5001              	.LVL453:
3750:rtos/uC-FS/FAT/fs_fat.c ****             (p_fat_data->FAT_Type == 16u)) {
 5002              		.loc 1 3750 9 is_stmt 1 view .LVU1789
3750:rtos/uC-FS/FAT/fs_fat.c ****             (p_fat_data->FAT_Type == 16u)) {
 5003              		.loc 1 3750 24 is_stmt 0 view .LVU1790
ARM GAS  /tmp/ccazZ5Hl.s 			page 224


 5004 008c 90F84A30 		ldrb	r3, [r0, #74]	@ zero_extendqisi2
3750:rtos/uC-FS/FAT/fs_fat.c ****             (p_fat_data->FAT_Type == 16u)) {
 5005              		.loc 1 3750 12 view .LVU1791
 5006 0090 0C2B     		cmp	r3, #12
 5007 0092 23D0     		beq	.L312
3750:rtos/uC-FS/FAT/fs_fat.c ****             (p_fat_data->FAT_Type == 16u)) {
 5008              		.loc 1 3750 43 discriminator 1 view .LVU1792
 5009 0094 102B     		cmp	r3, #16
 5010 0096 21D0     		beq	.L312
 5011              	.L313:
3760:rtos/uC-FS/FAT/fs_fat.c ****         if (valid == DEF_NO) {
 5012              		.loc 1 3760 9 is_stmt 1 view .LVU1793
3760:rtos/uC-FS/FAT/fs_fat.c ****         if (valid == DEF_NO) {
 5013              		.loc 1 3760 22 is_stmt 0 view .LVU1794
 5014 0098 4369     		ldr	r3, [r0, #20]
3760:rtos/uC-FS/FAT/fs_fat.c ****         if (valid == DEF_NO) {
 5015              		.loc 1 3760 19 view .LVU1795
 5016 009a A342     		cmp	r3, r4
 5017 009c 23D9     		bls	.L314
3760:rtos/uC-FS/FAT/fs_fat.c ****         if (valid == DEF_NO) {
 5018              		.loc 1 3760 22 discriminator 1 view .LVU1796
 5019 009e 012C     		cmp	r4, #1
 5020 00a0 21D9     		bls	.L314
 5021              	.LVL454:
 5022              	.L311:
3773:rtos/uC-FS/FAT/fs_fat.c **** 
 5023              		.loc 1 3773 5 is_stmt 1 view .LVU1797
 5024 00a2 3046     		mov	r0, r6
 5025              	.LVL455:
3773:rtos/uC-FS/FAT/fs_fat.c **** 
 5026              		.loc 1 3773 5 is_stmt 0 view .LVU1798
 5027 00a4 FFF7FEFF 		bl	FSBuf_Free
 5028              	.LVL456:
3775:rtos/uC-FS/FAT/fs_fat.c **** }
 5029              		.loc 1 3775 5 is_stmt 1 view .LVU1799
3775:rtos/uC-FS/FAT/fs_fat.c **** }
 5030              		.loc 1 3775 12 is_stmt 0 view .LVU1800
 5031 00a8 B3E7     		b	.L303
 5032              	.LVL457:
 5033              	.L316:
3705:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 5034              		.loc 1 3705 8 is_stmt 1 view .LVU1801
3705:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 5035              		.loc 1 3705 15 is_stmt 0 view .LVU1802
 5036 00aa 6423     		movs	r3, #100
 5037 00ac 2B80     		strh	r3, [r5]	@ movhi
3706:rtos/uC-FS/FAT/fs_fat.c ****     }
 5038              		.loc 1 3706 9 is_stmt 1 view .LVU1803
3706:rtos/uC-FS/FAT/fs_fat.c ****     }
 5039              		.loc 1 3706 16 is_stmt 0 view .LVU1804
 5040 00ae 0024     		movs	r4, #0
 5041              	.LVL458:
3706:rtos/uC-FS/FAT/fs_fat.c ****     }
 5042              		.loc 1 3706 16 view .LVU1805
 5043 00b0 AFE7     		b	.L303
 5044              	.LVL459:
 5045              	.L317:
ARM GAS  /tmp/ccazZ5Hl.s 			page 225


3718:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 5046              		.loc 1 3718 9 is_stmt 1 view .LVU1806
 5047 00b2 3046     		mov	r0, r6
 5048 00b4 FFF7FEFF 		bl	FSBuf_Free
 5049              	.LVL460:
3719:rtos/uC-FS/FAT/fs_fat.c ****     }
 5050              		.loc 1 3719 9 view .LVU1807
3719:rtos/uC-FS/FAT/fs_fat.c ****     }
 5051              		.loc 1 3719 16 is_stmt 0 view .LVU1808
 5052 00b8 0024     		movs	r4, #0
 5053              	.LVL461:
3719:rtos/uC-FS/FAT/fs_fat.c ****     }
 5054              		.loc 1 3719 16 view .LVU1809
 5055 00ba AAE7     		b	.L303
 5056              	.LVL462:
 5057              	.L318:
3726:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 5058              		.loc 1 3726 5 is_stmt 1 view .LVU1810
3727:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Invalid entry: %s.\r\n", name_entry));
 5059              		.loc 1 3727 9 view .LVU1811
 5060 00bc 3046     		mov	r0, r6
 5061 00be FFF7FEFF 		bl	FSBuf_Free
 5062              	.LVL463:
3728:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_ENTRY_NOT_FILE;
 5063              		.loc 1 3728 91 view .LVU1812
3729:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 5064              		.loc 1 3729 8 view .LVU1813
3729:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 5065              		.loc 1 3729 15 is_stmt 0 view .LVU1814
 5066 00c2 4FF43173 		mov	r3, #708
 5067 00c6 2B80     		strh	r3, [r5]	@ movhi
3730:rtos/uC-FS/FAT/fs_fat.c ****     }
 5068              		.loc 1 3730 9 is_stmt 1 view .LVU1815
3730:rtos/uC-FS/FAT/fs_fat.c ****     }
 5069              		.loc 1 3730 16 is_stmt 0 view .LVU1816
 5070 00c8 0024     		movs	r4, #0
 5071              	.LVL464:
3730:rtos/uC-FS/FAT/fs_fat.c ****     }
 5072              		.loc 1 3730 16 view .LVU1817
 5073 00ca A2E7     		b	.L303
 5074              	.LVL465:
 5075              	.L319:
3735:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Volume ID:     %s.\r\n", name_entry));
 5076              		.loc 1 3735 9 is_stmt 1 view .LVU1818
 5077 00cc 3046     		mov	r0, r6
 5078 00ce FFF7FEFF 		bl	FSBuf_Free
 5079              	.LVL466:
3736:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_ENTRY_NOT_FILE;
 5080              		.loc 1 3736 91 view .LVU1819
3737:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 5081              		.loc 1 3737 8 view .LVU1820
3737:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 5082              		.loc 1 3737 15 is_stmt 0 view .LVU1821
 5083 00d2 4FF43173 		mov	r3, #708
 5084 00d6 2B80     		strh	r3, [r5]	@ movhi
3738:rtos/uC-FS/FAT/fs_fat.c ****     }
 5085              		.loc 1 3738 9 is_stmt 1 view .LVU1822
ARM GAS  /tmp/ccazZ5Hl.s 			page 226


3738:rtos/uC-FS/FAT/fs_fat.c ****     }
 5086              		.loc 1 3738 16 is_stmt 0 view .LVU1823
 5087 00d8 0024     		movs	r4, #0
 5088              	.LVL467:
3738:rtos/uC-FS/FAT/fs_fat.c ****     }
 5089              		.loc 1 3738 16 view .LVU1824
 5090 00da 9AE7     		b	.L303
 5091              	.LVL468:
 5092              	.L312:
3753:rtos/uC-FS/FAT/fs_fat.c ****                 FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): FstCluHI non-zero on FAT12/16 vol; dis
 5093              		.loc 1 3753 13 is_stmt 1 view .LVU1825
3753:rtos/uC-FS/FAT/fs_fat.c ****                 FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): FstCluHI non-zero on FAT12/16 vol; dis
 5094              		.loc 1 3753 16 is_stmt 0 view .LVU1826
 5095 00dc B4F5803F 		cmp	r4, #65536
 5096 00e0 DAD3     		bcc	.L313
3754:rtos/uC-FS/FAT/fs_fat.c ****                 file_first_clus &= DEF_INT_16U_MAX_VAL;
 5097              		.loc 1 3754 126 is_stmt 1 view .LVU1827
3755:rtos/uC-FS/FAT/fs_fat.c ****             }
 5098              		.loc 1 3755 17 view .LVU1828
3755:rtos/uC-FS/FAT/fs_fat.c ****             }
 5099              		.loc 1 3755 33 is_stmt 0 view .LVU1829
 5100 00e2 A4B2     		uxth	r4, r4
 5101              	.LVL469:
3755:rtos/uC-FS/FAT/fs_fat.c ****             }
 5102              		.loc 1 3755 33 view .LVU1830
 5103 00e4 D8E7     		b	.L313
 5104              	.L314:
 5105              	.LVL470:
3761:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_LowFileFirstClusGet(): Invalid clus in dir entry: %d\n", file_fir
 5106              		.loc 1 3761 9 is_stmt 1 view .LVU1831
3762:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 5107              		.loc 1 3762 109 view .LVU1832
3763:rtos/uC-FS/FAT/fs_fat.c ****             FSBuf_Free(p_buf);
 5108              		.loc 1 3763 12 view .LVU1833
3763:rtos/uC-FS/FAT/fs_fat.c ****             FSBuf_Free(p_buf);
 5109              		.loc 1 3763 19 is_stmt 0 view .LVU1834
 5110 00e6 40F27E53 		movw	r3, #1406
 5111 00ea 2B80     		strh	r3, [r5]	@ movhi
 5112              	.LVL471:
3764:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 5113              		.loc 1 3764 13 is_stmt 1 view .LVU1835
 5114 00ec 3046     		mov	r0, r6
 5115              	.LVL472:
3764:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 5116              		.loc 1 3764 13 is_stmt 0 view .LVU1836
 5117 00ee FFF7FEFF 		bl	FSBuf_Free
 5118              	.LVL473:
3765:rtos/uC-FS/FAT/fs_fat.c ****         }
 5119              		.loc 1 3765 13 is_stmt 1 view .LVU1837
3765:rtos/uC-FS/FAT/fs_fat.c ****         }
 5120              		.loc 1 3765 20 is_stmt 0 view .LVU1838
 5121 00f2 0024     		movs	r4, #0
 5122              	.LVL474:
3765:rtos/uC-FS/FAT/fs_fat.c ****         }
 5123              		.loc 1 3765 20 view .LVU1839
 5124 00f4 8DE7     		b	.L303
 5125              		.cfi_endproc
ARM GAS  /tmp/ccazZ5Hl.s 			page 227


 5126              	.LFE23:
 5128              		.section	.text.FS_FAT_LowEntryDel,"ax",%progbits
 5129              		.align	1
 5130              		.global	FS_FAT_LowEntryDel
 5131              		.syntax unified
 5132              		.thumb
 5133              		.thumb_func
 5134              		.fpu fpv4-sp-d16
 5136              	FS_FAT_LowEntryDel:
 5137              	.LVL475:
 5138              	.LFB26:
4326:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS     dir_end_pos;
 5139              		.loc 1 4326 1 is_stmt 1 view -0
 5140              		.cfi_startproc
 5141              		@ args = 0, pretend = 0, frame = 16
 5142              		@ frame_needed = 0, uses_anonymous_args = 0
4326:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS     dir_end_pos;
 5143              		.loc 1 4326 1 is_stmt 0 view .LVU1841
 5144 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5145              	.LCFI65:
 5146              		.cfi_def_cfa_offset 28
 5147              		.cfi_offset 4, -28
 5148              		.cfi_offset 5, -24
 5149              		.cfi_offset 6, -20
 5150              		.cfi_offset 7, -16
 5151              		.cfi_offset 8, -12
 5152              		.cfi_offset 9, -8
 5153              		.cfi_offset 14, -4
 5154 0004 87B0     		sub	sp, sp, #28
 5155              	.LCFI66:
 5156              		.cfi_def_cfa_offset 56
 5157 0006 0646     		mov	r6, r0
 5158 0008 0F46     		mov	r7, r1
 5159 000a 1446     		mov	r4, r2
 5160 000c 1D46     		mov	r5, r3
4327:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS     dir_start_pos;
 5161              		.loc 1 4327 5 is_stmt 1 view .LVU1842
4328:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA       *p_fat_data;
 5162              		.loc 1 4328 5 view .LVU1843
4329:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        valid;
 5163              		.loc 1 4329 5 view .LVU1844
4330:rtos/uC-FS/FAT/fs_fat.c **** 
 5164              		.loc 1 4330 5 view .LVU1845
4333:rtos/uC-FS/FAT/fs_fat.c **** 
 5165              		.loc 1 4333 5 view .LVU1846
4333:rtos/uC-FS/FAT/fs_fat.c **** 
 5166              		.loc 1 4333 16 is_stmt 0 view .LVU1847
 5167 000e D0F83490 		ldr	r9, [r0, #52]
 5168              	.LVL476:
4337:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_pos.SecPos = p_entry_data->DirStartSecPos;
 5169              		.loc 1 4337 5 is_stmt 1 view .LVU1848
4337:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_pos.SecPos = p_entry_data->DirStartSecPos;
 5170              		.loc 1 4337 40 is_stmt 0 view .LVU1849
 5171 0012 5369     		ldr	r3, [r2, #20]
 5172              	.LVL477:
4337:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_pos.SecPos = p_entry_data->DirStartSecPos;
 5173              		.loc 1 4337 26 view .LVU1850
ARM GAS  /tmp/ccazZ5Hl.s 			page 228


 5174 0014 0293     		str	r3, [sp, #8]
4338:rtos/uC-FS/FAT/fs_fat.c **** 
 5175              		.loc 1 4338 5 is_stmt 1 view .LVU1851
4338:rtos/uC-FS/FAT/fs_fat.c **** 
 5176              		.loc 1 4338 40 is_stmt 0 view .LVU1852
 5177 0016 9369     		ldr	r3, [r2, #24]
4338:rtos/uC-FS/FAT/fs_fat.c **** 
 5178              		.loc 1 4338 26 view .LVU1853
 5179 0018 0393     		str	r3, [sp, #12]
4340:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_pos.SecPos   = p_entry_data->DirEndSecPos;
 5180              		.loc 1 4340 5 is_stmt 1 view .LVU1854
4340:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_pos.SecPos   = p_entry_data->DirEndSecPos;
 5181              		.loc 1 4340 40 is_stmt 0 view .LVU1855
 5182 001a D369     		ldr	r3, [r2, #28]
4340:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_pos.SecPos   = p_entry_data->DirEndSecPos;
 5183              		.loc 1 4340 26 view .LVU1856
 5184 001c 0493     		str	r3, [sp, #16]
4341:rtos/uC-FS/FAT/fs_fat.c **** 
 5185              		.loc 1 4341 5 is_stmt 1 view .LVU1857
4341:rtos/uC-FS/FAT/fs_fat.c **** 
 5186              		.loc 1 4341 40 is_stmt 0 view .LVU1858
 5187 001e 136A     		ldr	r3, [r2, #32]
4341:rtos/uC-FS/FAT/fs_fat.c **** 
 5188              		.loc 1 4341 26 view .LVU1859
 5189 0020 0593     		str	r3, [sp, #20]
4343:rtos/uC-FS/FAT/fs_fat.c ****                                      p_buf,
 5190              		.loc 1 4343 5 is_stmt 1 view .LVU1860
4343:rtos/uC-FS/FAT/fs_fat.c ****                                      p_buf,
 5191              		.loc 1 4343 25 is_stmt 0 view .LVU1861
 5192 0022 0D4B     		ldr	r3, .L326
 5193 0024 D3F80880 		ldr	r8, [r3, #8]
4343:rtos/uC-FS/FAT/fs_fat.c ****                                      p_buf,
 5194              		.loc 1 4343 5 view .LVU1862
 5195 0028 0095     		str	r5, [sp]
 5196 002a 04AB     		add	r3, sp, #16
 5197 002c 02AA     		add	r2, sp, #8
 5198              	.LVL478:
4343:rtos/uC-FS/FAT/fs_fat.c ****                                      p_buf,
 5199              		.loc 1 4343 5 view .LVU1863
 5200 002e C047     		blx	r8
 5201              	.LVL479:
4349:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5202              		.loc 1 4349 5 is_stmt 1 view .LVU1864
4349:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5203              		.loc 1 4349 9 is_stmt 0 view .LVU1865
 5204 0030 2B88     		ldrh	r3, [r5]
4349:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5205              		.loc 1 4349 8 view .LVU1866
 5206 0032 33B9     		cbnz	r3, .L320
4355:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
 5207              		.loc 1 4355 5 is_stmt 1 view .LVU1867
4355:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
 5208              		.loc 1 4355 13 is_stmt 0 view .LVU1868
 5209 0034 626A     		ldr	r2, [r4, #36]
 5210 0036 D9F81430 		ldr	r3, [r9, #20]
4355:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
 5211              		.loc 1 4355 11 view .LVU1869
ARM GAS  /tmp/ccazZ5Hl.s 			page 229


 5212 003a 9A42     		cmp	r2, r3
 5213 003c 01D2     		bcs	.L320
4355:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
 5214              		.loc 1 4355 13 discriminator 1 view .LVU1870
 5215 003e 012A     		cmp	r2, #1
 5216 0040 02D8     		bhi	.L325
 5217              	.L320:
4366:rtos/uC-FS/FAT/fs_fat.c **** #endif
 5218              		.loc 1 4366 1 view .LVU1871
 5219 0042 07B0     		add	sp, sp, #28
 5220              	.LCFI67:
 5221              		.cfi_remember_state
 5222              		.cfi_def_cfa_offset 28
 5223              		@ sp needed
 5224 0044 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5225              	.LVL480:
 5226              	.L325:
 5227              	.LCFI68:
 5228              		.cfi_restore_state
4356:rtos/uC-FS/FAT/fs_fat.c ****         (void)FS_FAT_ClusChainDel(p_vol,
 5229              		.loc 1 4356 5 is_stmt 1 view .LVU1872
4357:rtos/uC-FS/FAT/fs_fat.c ****                                   p_buf,
 5230              		.loc 1 4357 9 view .LVU1873
4357:rtos/uC-FS/FAT/fs_fat.c ****                                   p_buf,
 5231              		.loc 1 4357 15 is_stmt 0 view .LVU1874
 5232 0048 0095     		str	r5, [sp]
 5233 004a 0123     		movs	r3, #1
 5234 004c 3946     		mov	r1, r7
 5235 004e 3046     		mov	r0, r6
 5236 0050 FFF7FEFF 		bl	FS_FAT_ClusChainDel
 5237              	.LVL481:
4362:rtos/uC-FS/FAT/fs_fat.c ****              return;
 5238              		.loc 1 4362 9 is_stmt 1 view .LVU1875
 5239 0054 F5E7     		b	.L320
 5240              	.L327:
 5241 0056 00BF     		.align	2
 5242              	.L326:
 5243 0058 00000000 		.word	FS_FAT_LFN_API
 5244              		.cfi_endproc
 5245              	.LFE26:
 5247              		.section	.text.FS_FAT_DateFmt,"ax",%progbits
 5248              		.align	1
 5249              		.global	FS_FAT_DateFmt
 5250              		.syntax unified
 5251              		.thumb
 5252              		.thumb_func
 5253              		.fpu fpv4-sp-d16
 5255              	FS_FAT_DateFmt:
 5256              	.LVL482:
 5257              	.LFB29:
4669:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   date_val;
 5258              		.loc 1 4669 1 view -0
 5259              		.cfi_startproc
 5260              		@ args = 0, pretend = 0, frame = 0
 5261              		@ frame_needed = 0, uses_anonymous_args = 0
4669:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   date_val;
 5262              		.loc 1 4669 1 is_stmt 0 view .LVU1877
ARM GAS  /tmp/ccazZ5Hl.s 			page 230


 5263 0000 10B5     		push	{r4, lr}
 5264              	.LCFI69:
 5265              		.cfi_def_cfa_offset 8
 5266              		.cfi_offset 4, -8
 5267              		.cfi_offset 14, -4
 5268 0002 0446     		mov	r4, r0
4670:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   day;
 5269              		.loc 1 4670 5 is_stmt 1 view .LVU1878
4671:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   month;
 5270              		.loc 1 4671 5 view .LVU1879
4672:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U   year;
 5271              		.loc 1 4672 5 view .LVU1880
4673:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN  valid;
 5272              		.loc 1 4673 5 view .LVU1881
4674:rtos/uC-FS/FAT/fs_fat.c **** 
 5273              		.loc 1 4674 5 view .LVU1882
4677:rtos/uC-FS/FAT/fs_fat.c **** 
 5274              		.loc 1 4677 5 view .LVU1883
4677:rtos/uC-FS/FAT/fs_fat.c **** 
 5275              		.loc 1 4677 13 is_stmt 0 view .LVU1884
 5276 0004 FFF7FEFF 		bl	Clk_IsDateTimeValid
 5277              	.LVL483:
4679:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 5278              		.loc 1 4679 5 is_stmt 1 view .LVU1885
4679:rtos/uC-FS/FAT/fs_fat.c ****         return (0u);
 5279              		.loc 1 4679 8 is_stmt 0 view .LVU1886
 5280 0008 78B1     		cbz	r0, .L330
4683:rtos/uC-FS/FAT/fs_fat.c ****     month = (CPU_INT16U)p_time->Month;
 5281              		.loc 1 4683 5 is_stmt 1 view .LVU1887
4683:rtos/uC-FS/FAT/fs_fat.c ****     month = (CPU_INT16U)p_time->Month;
 5282              		.loc 1 4683 11 is_stmt 0 view .LVU1888
 5283 000a A088     		ldrh	r0, [r4, #4]
 5284              	.LVL484:
4684:rtos/uC-FS/FAT/fs_fat.c ****     year  = (CPU_INT16U)p_time->Yr;
 5285              		.loc 1 4684 5 is_stmt 1 view .LVU1889
4684:rtos/uC-FS/FAT/fs_fat.c ****     year  = (CPU_INT16U)p_time->Yr;
 5286              		.loc 1 4684 11 is_stmt 0 view .LVU1890
 5287 000c A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 5288              	.LVL485:
4685:rtos/uC-FS/FAT/fs_fat.c **** 
 5289              		.loc 1 4685 5 is_stmt 1 view .LVU1891
4685:rtos/uC-FS/FAT/fs_fat.c **** 
 5290              		.loc 1 4685 11 is_stmt 0 view .LVU1892
 5291 000e 2388     		ldrh	r3, [r4]
 5292              	.LVL486:
4687:rtos/uC-FS/FAT/fs_fat.c ****         date_val = ((CPU_INT16U)((day         ) << 0)
 5293              		.loc 1 4687 5 is_stmt 1 view .LVU1893
4687:rtos/uC-FS/FAT/fs_fat.c ****         date_val = ((CPU_INT16U)((day         ) << 0)
 5294              		.loc 1 4687 26 is_stmt 0 view .LVU1894
 5295 0010 A3F2BC73 		subw	r3, r3, #1980
 5296              	.LVL487:
4687:rtos/uC-FS/FAT/fs_fat.c ****         date_val = ((CPU_INT16U)((day         ) << 0)
 5297              		.loc 1 4687 26 view .LVU1895
 5298 0014 9BB2     		uxth	r3, r3
 5299              	.LVL488:
4687:rtos/uC-FS/FAT/fs_fat.c ****         date_val = ((CPU_INT16U)((day         ) << 0)
 5300              		.loc 1 4687 8 view .LVU1896
ARM GAS  /tmp/ccazZ5Hl.s 			page 231


 5301 0016 7F2B     		cmp	r3, #127
 5302 0018 09D8     		bhi	.L331
4688:rtos/uC-FS/FAT/fs_fat.c ****                  +  (CPU_INT16U)((month       ) << 5)
 5303              		.loc 1 4688 9 is_stmt 1 view .LVU1897
4689:rtos/uC-FS/FAT/fs_fat.c ****                  +  (CPU_INT16U)((year - 1980u) << 9));
 5304              		.loc 1 4689 18 is_stmt 0 view .LVU1898
 5305 001a 00EB4210 		add	r0, r0, r2, lsl #5
 5306              	.LVL489:
4690:rtos/uC-FS/FAT/fs_fat.c ****     } else {
 5307              		.loc 1 4690 21 view .LVU1899
 5308 001e 5B02     		lsls	r3, r3, #9
 5309 0020 9BB2     		uxth	r3, r3
4688:rtos/uC-FS/FAT/fs_fat.c ****                  +  (CPU_INT16U)((month       ) << 5)
 5310              		.loc 1 4688 18 view .LVU1900
 5311 0022 13FA80F0 		uxtah	r0, r3, r0
 5312 0026 80B2     		uxth	r0, r0
 5313              	.LVL490:
4688:rtos/uC-FS/FAT/fs_fat.c ****                  +  (CPU_INT16U)((month       ) << 5)
 5314              		.loc 1 4688 18 view .LVU1901
 5315 0028 00E0     		b	.L329
 5316              	.LVL491:
 5317              	.L330:
4680:rtos/uC-FS/FAT/fs_fat.c ****     }
 5318              		.loc 1 4680 16 view .LVU1902
 5319 002a 0020     		movs	r0, #0
 5320              	.LVL492:
 5321              	.L329:
4696:rtos/uC-FS/FAT/fs_fat.c **** #endif
 5322              		.loc 1 4696 1 view .LVU1903
 5323 002c 10BD     		pop	{r4, pc}
 5324              	.LVL493:
 5325              	.L331:
4692:rtos/uC-FS/FAT/fs_fat.c ****     }
 5326              		.loc 1 4692 18 view .LVU1904
 5327 002e 0020     		movs	r0, #0
 5328              	.LVL494:
4692:rtos/uC-FS/FAT/fs_fat.c ****     }
 5329              		.loc 1 4692 18 view .LVU1905
 5330 0030 FCE7     		b	.L329
 5331              		.cfi_endproc
 5332              	.LFE29:
 5334              		.section	.text.FS_FAT_TimeFmt,"ax",%progbits
 5335              		.align	1
 5336              		.global	FS_FAT_TimeFmt
 5337              		.syntax unified
 5338              		.thumb
 5339              		.thumb_func
 5340              		.fpu fpv4-sp-d16
 5342              	FS_FAT_TimeFmt:
 5343              	.LVL495:
 5344              	.LFB30:
4725:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U  hour;
 5345              		.loc 1 4725 1 is_stmt 1 view -0
 5346              		.cfi_startproc
 5347              		@ args = 0, pretend = 0, frame = 0
 5348              		@ frame_needed = 0, uses_anonymous_args = 0
 5349              		@ link register save eliminated.
ARM GAS  /tmp/ccazZ5Hl.s 			page 232


4726:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U  min;
 5350              		.loc 1 4726 5 view .LVU1907
4727:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U  sec;
 5351              		.loc 1 4727 5 view .LVU1908
4728:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U  time_val;
 5352              		.loc 1 4728 5 view .LVU1909
4729:rtos/uC-FS/FAT/fs_fat.c **** 
 5353              		.loc 1 4729 5 view .LVU1910
4732:rtos/uC-FS/FAT/fs_fat.c ****     min  = (CPU_INT16U)p_time->Min;
 5354              		.loc 1 4732 5 view .LVU1911
4732:rtos/uC-FS/FAT/fs_fat.c ****     min  = (CPU_INT16U)p_time->Min;
 5355              		.loc 1 4732 10 is_stmt 0 view .LVU1912
 5356 0000 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 5357              	.LVL496:
4733:rtos/uC-FS/FAT/fs_fat.c ****     hour = (CPU_INT16U)p_time->Hr;
 5358              		.loc 1 4733 5 is_stmt 1 view .LVU1913
4733:rtos/uC-FS/FAT/fs_fat.c ****     hour = (CPU_INT16U)p_time->Hr;
 5359              		.loc 1 4733 10 is_stmt 0 view .LVU1914
 5360 0002 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 5361              	.LVL497:
4734:rtos/uC-FS/FAT/fs_fat.c **** 
 5362              		.loc 1 4734 5 is_stmt 1 view .LVU1915
4734:rtos/uC-FS/FAT/fs_fat.c **** 
 5363              		.loc 1 4734 10 is_stmt 0 view .LVU1916
 5364 0004 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 5365              	.LVL498:
4736:rtos/uC-FS/FAT/fs_fat.c ****         time_val = (CPU_INT16U)((CPU_INT16U)(sec  >>  1)
 5366              		.loc 1 4736 5 is_stmt 1 view .LVU1917
4736:rtos/uC-FS/FAT/fs_fat.c ****         time_val = (CPU_INT16U)((CPU_INT16U)(sec  >>  1)
 5367              		.loc 1 4736 8 is_stmt 0 view .LVU1918
 5368 0006 3C2A     		cmp	r2, #60
 5369 0008 0BD8     		bhi	.L335
4736:rtos/uC-FS/FAT/fs_fat.c ****         time_val = (CPU_INT16U)((CPU_INT16U)(sec  >>  1)
 5370              		.loc 1 4736 21 discriminator 1 view .LVU1919
 5371 000a 3B2B     		cmp	r3, #59
 5372 000c 0BD8     		bhi	.L336
4736:rtos/uC-FS/FAT/fs_fat.c ****         time_val = (CPU_INT16U)((CPU_INT16U)(sec  >>  1)
 5373              		.loc 1 4736 36 discriminator 2 view .LVU1920
 5374 000e 1729     		cmp	r1, #23
 5375 0010 0BD8     		bhi	.L337
4737:rtos/uC-FS/FAT/fs_fat.c ****                  +              (CPU_INT16U)(min  <<  5)
 5376              		.loc 1 4737 9 is_stmt 1 view .LVU1921
4738:rtos/uC-FS/FAT/fs_fat.c ****                  +              (CPU_INT16U)(hour << 11));
 5377              		.loc 1 4738 33 is_stmt 0 view .LVU1922
 5378 0012 5801     		lsls	r0, r3, #5
 5379              	.LVL499:
4738:rtos/uC-FS/FAT/fs_fat.c ****                  +              (CPU_INT16U)(hour << 11));
 5380              		.loc 1 4738 18 view .LVU1923
 5381 0014 00EB5200 		add	r0, r0, r2, lsr #1
4739:rtos/uC-FS/FAT/fs_fat.c ****     } else {
 5382              		.loc 1 4739 33 view .LVU1924
 5383 0018 C902     		lsls	r1, r1, #11
 5384              	.LVL500:
4739:rtos/uC-FS/FAT/fs_fat.c ****     } else {
 5385              		.loc 1 4739 33 view .LVU1925
 5386 001a 89B2     		uxth	r1, r1
4737:rtos/uC-FS/FAT/fs_fat.c ****                  +              (CPU_INT16U)(min  <<  5)
ARM GAS  /tmp/ccazZ5Hl.s 			page 233


 5387              		.loc 1 4737 18 view .LVU1926
 5388 001c 0844     		add	r0, r0, r1
 5389 001e 80B2     		uxth	r0, r0
 5390              	.LVL501:
4737:rtos/uC-FS/FAT/fs_fat.c ****                  +              (CPU_INT16U)(min  <<  5)
 5391              		.loc 1 4737 18 view .LVU1927
 5392 0020 7047     		bx	lr
 5393              	.LVL502:
 5394              	.L335:
4741:rtos/uC-FS/FAT/fs_fat.c ****     }
 5395              		.loc 1 4741 18 view .LVU1928
 5396 0022 0020     		movs	r0, #0
 5397              	.LVL503:
4741:rtos/uC-FS/FAT/fs_fat.c ****     }
 5398              		.loc 1 4741 18 view .LVU1929
 5399 0024 7047     		bx	lr
 5400              	.LVL504:
 5401              	.L336:
4741:rtos/uC-FS/FAT/fs_fat.c ****     }
 5402              		.loc 1 4741 18 view .LVU1930
 5403 0026 0020     		movs	r0, #0
 5404              	.LVL505:
4741:rtos/uC-FS/FAT/fs_fat.c ****     }
 5405              		.loc 1 4741 18 view .LVU1931
 5406 0028 7047     		bx	lr
 5407              	.LVL506:
 5408              	.L337:
4741:rtos/uC-FS/FAT/fs_fat.c ****     }
 5409              		.loc 1 4741 18 view .LVU1932
 5410 002a 0020     		movs	r0, #0
 5411              	.LVL507:
4744:rtos/uC-FS/FAT/fs_fat.c **** }
 5412              		.loc 1 4744 5 is_stmt 1 view .LVU1933
4745:rtos/uC-FS/FAT/fs_fat.c **** #endif
 5413              		.loc 1 4745 1 is_stmt 0 view .LVU1934
 5414 002c 7047     		bx	lr
 5415              		.cfi_endproc
 5416              	.LFE30:
 5418              		.section	.text.FS_FAT_LowEntryUpdate,"ax",%progbits
 5419              		.align	1
 5420              		.global	FS_FAT_LowEntryUpdate
 5421              		.syntax unified
 5422              		.thumb
 5423              		.thumb_func
 5424              		.fpu fpv4-sp-d16
 5426              	FS_FAT_LowEntryUpdate:
 5427              	.LVL508:
 5428              	.LFB19:
3274:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U      *p_dir_entry;
 5429              		.loc 1 3274 1 is_stmt 1 view -0
 5430              		.cfi_startproc
 5431              		@ args = 4, pretend = 0, frame = 24
 5432              		@ frame_needed = 0, uses_anonymous_args = 0
3274:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U      *p_dir_entry;
 5433              		.loc 1 3274 1 is_stmt 0 view .LVU1936
 5434 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5435              	.LCFI70:
ARM GAS  /tmp/ccazZ5Hl.s 			page 234


 5436              		.cfi_def_cfa_offset 24
 5437              		.cfi_offset 4, -24
 5438              		.cfi_offset 5, -20
 5439              		.cfi_offset 6, -16
 5440              		.cfi_offset 7, -12
 5441              		.cfi_offset 8, -8
 5442              		.cfi_offset 14, -4
 5443 0004 88B0     		sub	sp, sp, #32
 5444              	.LCFI71:
 5445              		.cfi_def_cfa_offset 56
 5446 0006 0E46     		mov	r6, r1
 5447 0008 1446     		mov	r4, r2
 5448 000a 9846     		mov	r8, r3
 5449 000c 0E9F     		ldr	r7, [sp, #56]
3275:rtos/uC-FS/FAT/fs_fat.c ****     CLK_DATE_TIME    stime;
 5450              		.loc 1 3275 5 is_stmt 1 view .LVU1937
3276:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATE      date_val;
 5451              		.loc 1 3276 5 view .LVU1938
3277:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_TIME      time_val;
 5452              		.loc 1 3277 5 view .LVU1939
3278:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN      success;
 5453              		.loc 1 3278 5 view .LVU1940
3279:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_JOURNAL_EN == DEF_ENABLED)
 5454              		.loc 1 3279 5 view .LVU1941
3286:rtos/uC-FS/FAT/fs_fat.c **** 
 5455              		.loc 1 3286 4 view .LVU1942
3306:rtos/uC-FS/FAT/fs_fat.c ****               p_entry_data->DirEndSec,
 5456              		.loc 1 3306 5 view .LVU1943
 5457 000e 0097     		str	r7, [sp]
 5458 0010 0123     		movs	r3, #1
 5459              	.LVL509:
3306:rtos/uC-FS/FAT/fs_fat.c ****               p_entry_data->DirEndSec,
 5460              		.loc 1 3306 5 is_stmt 0 view .LVU1944
 5461 0012 0222     		movs	r2, #2
 5462              	.LVL510:
3306:rtos/uC-FS/FAT/fs_fat.c ****               p_entry_data->DirEndSec,
 5463              		.loc 1 3306 5 view .LVU1945
 5464 0014 E169     		ldr	r1, [r4, #28]
 5465              	.LVL511:
3306:rtos/uC-FS/FAT/fs_fat.c ****               p_entry_data->DirEndSec,
 5466              		.loc 1 3306 5 view .LVU1946
 5467 0016 3046     		mov	r0, r6
 5468              	.LVL512:
3306:rtos/uC-FS/FAT/fs_fat.c ****               p_entry_data->DirEndSec,
 5469              		.loc 1 3306 5 view .LVU1947
 5470 0018 FFF7FEFF 		bl	FSBuf_Set
 5471              	.LVL513:
3311:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5472              		.loc 1 3311 5 is_stmt 1 view .LVU1948
3311:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5473              		.loc 1 3311 9 is_stmt 0 view .LVU1949
 5474 001c 3D88     		ldrh	r5, [r7]
3311:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5475              		.loc 1 3311 8 view .LVU1950
 5476 001e 6DBB     		cbnz	r5, .L338
3315:rtos/uC-FS/FAT/fs_fat.c ****         success = Clk_GetDateTime(&stime);                      /* Get date/time.                  
 5477              		.loc 1 3315 5 is_stmt 1 view .LVU1951
ARM GAS  /tmp/ccazZ5Hl.s 			page 235


3315:rtos/uC-FS/FAT/fs_fat.c ****         success = Clk_GetDateTime(&stime);                      /* Get date/time.                  
 5478              		.loc 1 3315 8 is_stmt 0 view .LVU1952
 5479 0020 B8F1010F 		cmp	r8, #1
 5480 0024 2DD0     		beq	.L345
3325:rtos/uC-FS/FAT/fs_fat.c ****         time_val = p_entry_data->TimeWr;
 5481              		.loc 1 3325 9 is_stmt 1 view .LVU1953
3325:rtos/uC-FS/FAT/fs_fat.c ****         time_val = p_entry_data->TimeWr;
 5482              		.loc 1 3325 18 is_stmt 0 view .LVU1954
 5483 0026 658F     		ldrh	r5, [r4, #58]
 5484              	.LVL514:
3326:rtos/uC-FS/FAT/fs_fat.c ****     }
 5485              		.loc 1 3326 9 is_stmt 1 view .LVU1955
3326:rtos/uC-FS/FAT/fs_fat.c ****     }
 5486              		.loc 1 3326 18 is_stmt 0 view .LVU1956
 5487 0028 A08F     		ldrh	r0, [r4, #60]
 5488              	.LVL515:
 5489              	.L341:
3330:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR),       p_entry_data->A
 5490              		.loc 1 3330 5 is_stmt 1 view .LVU1957
3330:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR),       p_entry_data->A
 5491              		.loc 1 3330 38 is_stmt 0 view .LVU1958
 5492 002a 3269     		ldr	r2, [r6, #16]
3330:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR),       p_entry_data->A
 5493              		.loc 1 3330 62 view .LVU1959
 5494 002c 236A     		ldr	r3, [r4, #32]
3330:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR),       p_entry_data->A
 5495              		.loc 1 3330 17 view .LVU1960
 5496 002e 1344     		add	r3, r3, r2
 5497              	.LVL516:
3331:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FSTCLUSHI),  p_entry_data->F
 5498              		.loc 1 3331 5 is_stmt 1 view .LVU1961
3331:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FSTCLUSHI),  p_entry_data->F
 5499              		.loc 1 3331 5 view .LVU1962
 5500 0030 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
 5501 0034 DA72     		strb	r2, [r3, #11]
3331:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FSTCLUSHI),  p_entry_data->F
 5502              		.loc 1 3331 5 view .LVU1963
3332:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FSTCLUSLO),  p_entry_data->F
 5503              		.loc 1 3332 5 view .LVU1964
3332:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FSTCLUSLO),  p_entry_data->F
 5504              		.loc 1 3332 5 view .LVU1965
 5505 0036 94F82620 		ldrb	r2, [r4, #38]	@ zero_extendqisi2
 5506 003a 1A75     		strb	r2, [r3, #20]
3332:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FSTCLUSLO),  p_entry_data->F
 5507              		.loc 1 3332 5 view .LVU1966
 5508 003c E28C     		ldrh	r2, [r4, #38]
 5509 003e 120A     		lsrs	r2, r2, #8
 5510 0040 5A75     		strb	r2, [r3, #21]
3332:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FSTCLUSLO),  p_entry_data->F
 5511              		.loc 1 3332 5 view .LVU1967
3333:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTTIME),    time_val);
 5512              		.loc 1 3333 5 view .LVU1968
3333:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTTIME),    time_val);
 5513              		.loc 1 3333 5 view .LVU1969
 5514 0042 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
 5515 0046 9A76     		strb	r2, [r3, #26]
3333:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTTIME),    time_val);
ARM GAS  /tmp/ccazZ5Hl.s 			page 236


 5516              		.loc 1 3333 5 view .LVU1970
 5517 0048 A28C     		ldrh	r2, [r4, #36]
 5518 004a 120A     		lsrs	r2, r2, #8
 5519 004c DA76     		strb	r2, [r3, #27]
3333:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTTIME),    time_val);
 5520              		.loc 1 3333 5 view .LVU1971
3334:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTDATE),    date_val);
 5521              		.loc 1 3334 5 view .LVU1972
3334:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTDATE),    date_val);
 5522              		.loc 1 3334 5 view .LVU1973
 5523 004e 9875     		strb	r0, [r3, #22]
3334:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTDATE),    date_val);
 5524              		.loc 1 3334 5 view .LVU1974
 5525 0050 C0F30720 		ubfx	r0, r0, #8, #8
 5526              	.LVL517:
3334:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTDATE),    date_val);
 5527              		.loc 1 3334 5 is_stmt 0 view .LVU1975
 5528 0054 D875     		strb	r0, [r3, #23]
3334:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_WRTDATE),    date_val);
 5529              		.loc 1 3334 5 is_stmt 1 view .LVU1976
3335:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_LSTACCDATE), date_val);
 5530              		.loc 1 3335 5 view .LVU1977
3335:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_LSTACCDATE), date_val);
 5531              		.loc 1 3335 5 view .LVU1978
 5532 0056 EAB2     		uxtb	r2, r5
 5533 0058 1A76     		strb	r2, [r3, #24]
3335:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_LSTACCDATE), date_val);
 5534              		.loc 1 3335 5 view .LVU1979
 5535 005a C5F30725 		ubfx	r5, r5, #8, #8
 5536              	.LVL518:
3335:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_LSTACCDATE), date_val);
 5537              		.loc 1 3335 5 is_stmt 0 view .LVU1980
 5538 005e 5D76     		strb	r5, [r3, #25]
3335:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT16U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_LSTACCDATE), date_val);
 5539              		.loc 1 3335 5 is_stmt 1 view .LVU1981
3336:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FILESIZE),   p_entry_data->F
 5540              		.loc 1 3336 5 view .LVU1982
3336:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FILESIZE),   p_entry_data->F
 5541              		.loc 1 3336 5 view .LVU1983
 5542 0060 9A74     		strb	r2, [r3, #18]
3336:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FILESIZE),   p_entry_data->F
 5543              		.loc 1 3336 5 view .LVU1984
 5544 0062 DD74     		strb	r5, [r3, #19]
3336:rtos/uC-FS/FAT/fs_fat.c ****     MEM_VAL_SET_INT32U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_FILESIZE),   p_entry_data->F
 5545              		.loc 1 3336 5 view .LVU1985
3337:rtos/uC-FS/FAT/fs_fat.c **** 
 5546              		.loc 1 3337 5 view .LVU1986
3337:rtos/uC-FS/FAT/fs_fat.c **** 
 5547              		.loc 1 3337 5 view .LVU1987
 5548 0064 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 5549 0066 1A77     		strb	r2, [r3, #28]
3337:rtos/uC-FS/FAT/fs_fat.c **** 
 5550              		.loc 1 3337 5 view .LVU1988
 5551 0068 6279     		ldrb	r2, [r4, #5]	@ zero_extendqisi2
 5552 006a 5A77     		strb	r2, [r3, #29]
3337:rtos/uC-FS/FAT/fs_fat.c **** 
 5553              		.loc 1 3337 5 view .LVU1989
ARM GAS  /tmp/ccazZ5Hl.s 			page 237


 5554 006c A279     		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 5555 006e 9A77     		strb	r2, [r3, #30]
3337:rtos/uC-FS/FAT/fs_fat.c **** 
 5556              		.loc 1 3337 5 view .LVU1990
 5557 0070 E279     		ldrb	r2, [r4, #7]	@ zero_extendqisi2
 5558 0072 DA77     		strb	r2, [r3, #31]
3337:rtos/uC-FS/FAT/fs_fat.c **** 
 5559              		.loc 1 3337 5 view .LVU1991
3340:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
 5560              		.loc 1 3340 5 view .LVU1992
 5561 0074 3946     		mov	r1, r7
 5562 0076 3046     		mov	r0, r6
 5563 0078 FFF7FEFF 		bl	FSBuf_MarkDirty
 5564              	.LVL519:
3341:rtos/uC-FS/FAT/fs_fat.c ****          return;
 5565              		.loc 1 3341 5 view .LVU1993
 5566              	.L338:
3344:rtos/uC-FS/FAT/fs_fat.c **** #endif
 5567              		.loc 1 3344 1 is_stmt 0 view .LVU1994
 5568 007c 08B0     		add	sp, sp, #32
 5569              	.LCFI72:
 5570              		.cfi_remember_state
 5571              		.cfi_def_cfa_offset 24
 5572              		@ sp needed
 5573 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5574              	.LVL520:
 5575              	.L345:
 5576              	.LCFI73:
 5577              		.cfi_restore_state
3316:rtos/uC-FS/FAT/fs_fat.c ****         if (success == DEF_YES) {
 5578              		.loc 1 3316 9 is_stmt 1 view .LVU1995
3316:rtos/uC-FS/FAT/fs_fat.c ****         if (success == DEF_YES) {
 5579              		.loc 1 3316 19 is_stmt 0 view .LVU1996
 5580 0082 03A8     		add	r0, sp, #12
 5581 0084 FFF7FEFF 		bl	Clk_GetDateTime
 5582              	.LVL521:
3317:rtos/uC-FS/FAT/fs_fat.c ****             date_val =  FS_FAT_DateFmt(&stime);
 5583              		.loc 1 3317 9 is_stmt 1 view .LVU1997
3317:rtos/uC-FS/FAT/fs_fat.c ****             date_val =  FS_FAT_DateFmt(&stime);
 5584              		.loc 1 3317 12 is_stmt 0 view .LVU1998
 5585 0088 0128     		cmp	r0, #1
 5586 008a 01D0     		beq	.L346
3322:rtos/uC-FS/FAT/fs_fat.c ****         }
 5587              		.loc 1 3322 22 view .LVU1999
 5588 008c 2846     		mov	r0, r5
 5589              	.LVL522:
3322:rtos/uC-FS/FAT/fs_fat.c ****         }
 5590              		.loc 1 3322 22 view .LVU2000
 5591 008e CCE7     		b	.L341
 5592              	.LVL523:
 5593              	.L346:
3318:rtos/uC-FS/FAT/fs_fat.c ****             time_val =  FS_FAT_TimeFmt(&stime);
 5594              		.loc 1 3318 13 is_stmt 1 view .LVU2001
3318:rtos/uC-FS/FAT/fs_fat.c ****             time_val =  FS_FAT_TimeFmt(&stime);
 5595              		.loc 1 3318 25 is_stmt 0 view .LVU2002
 5596 0090 03A8     		add	r0, sp, #12
 5597              	.LVL524:
ARM GAS  /tmp/ccazZ5Hl.s 			page 238


3318:rtos/uC-FS/FAT/fs_fat.c ****             time_val =  FS_FAT_TimeFmt(&stime);
 5598              		.loc 1 3318 25 view .LVU2003
 5599 0092 FFF7FEFF 		bl	FS_FAT_DateFmt
 5600              	.LVL525:
 5601 0096 0546     		mov	r5, r0
 5602              	.LVL526:
3319:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 5603              		.loc 1 3319 13 is_stmt 1 view .LVU2004
3319:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 5604              		.loc 1 3319 25 is_stmt 0 view .LVU2005
 5605 0098 03A8     		add	r0, sp, #12
 5606 009a FFF7FEFF 		bl	FS_FAT_TimeFmt
 5607              	.LVL527:
3319:rtos/uC-FS/FAT/fs_fat.c ****         } else {
 5608              		.loc 1 3319 25 view .LVU2006
 5609 009e C4E7     		b	.L341
 5610              		.cfi_endproc
 5611              	.LFE19:
 5613              		.section	.text.FS_FAT_LowFileFirstClusAdd,"ax",%progbits
 5614              		.align	1
 5615              		.global	FS_FAT_LowFileFirstClusAdd
 5616              		.syntax unified
 5617              		.thumb
 5618              		.thumb_func
 5619              		.fpu fpv4-sp-d16
 5621              	FS_FAT_LowFileFirstClusAdd:
 5622              	.LVL528:
 5623              	.LFB22:
3591:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus;
 5624              		.loc 1 3591 1 is_stmt 1 view -0
 5625              		.cfi_startproc
 5626              		@ args = 0, pretend = 0, frame = 0
 5627              		@ frame_needed = 0, uses_anonymous_args = 0
3591:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   clus;
 5628              		.loc 1 3591 1 is_stmt 0 view .LVU2008
 5629 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5630              	.LCFI74:
 5631              		.cfi_def_cfa_offset 24
 5632              		.cfi_offset 4, -24
 5633              		.cfi_offset 5, -20
 5634              		.cfi_offset 6, -16
 5635              		.cfi_offset 7, -12
 5636              		.cfi_offset 8, -8
 5637              		.cfi_offset 14, -4
 5638 0004 82B0     		sub	sp, sp, #8
 5639              	.LCFI75:
 5640              		.cfi_def_cfa_offset 32
 5641 0006 1D46     		mov	r5, r3
3592:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    sec;
 5642              		.loc 1 3592 5 is_stmt 1 view .LVU2009
3593:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 5643              		.loc 1 3593 5 view .LVU2010
3594:rtos/uC-FS/FAT/fs_fat.c **** 
 5644              		.loc 1 3594 5 view .LVU2011
3597:rtos/uC-FS/FAT/fs_fat.c **** 
 5645              		.loc 1 3597 5 view .LVU2012
3597:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 239


 5646              		.loc 1 3597 16 is_stmt 0 view .LVU2013
 5647 0008 466B     		ldr	r6, [r0, #52]
 5648              	.LVL529:
3600:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_DEV;
 5649              		.loc 1 3600 5 is_stmt 1 view .LVU2014
3600:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_DEV;
 5650              		.loc 1 3600 8 is_stmt 0 view .LVU2015
 5651 000a 6EB1     		cbz	r6, .L351
 5652 000c 0446     		mov	r4, r0
 5653 000e 0F46     		mov	r7, r1
 5654 0010 9046     		mov	r8, r2
3606:rtos/uC-FS/FAT/fs_fat.c ****                                  p_buf,
 5655              		.loc 1 3606 5 is_stmt 1 view .LVU2016
3606:rtos/uC-FS/FAT/fs_fat.c ****                                  p_buf,
 5656              		.loc 1 3606 12 is_stmt 0 view .LVU2017
 5657 0012 0093     		str	r3, [sp]
 5658 0014 0123     		movs	r3, #1
 5659              	.LVL530:
3606:rtos/uC-FS/FAT/fs_fat.c ****                                  p_buf,
 5660              		.loc 1 3606 12 view .LVU2018
 5661 0016 0022     		movs	r2, #0
 5662              	.LVL531:
3606:rtos/uC-FS/FAT/fs_fat.c ****                                  p_buf,
 5663              		.loc 1 3606 12 view .LVU2019
 5664 0018 4146     		mov	r1, r8
 5665              	.LVL532:
3606:rtos/uC-FS/FAT/fs_fat.c ****                                  p_buf,
 5666              		.loc 1 3606 12 view .LVU2020
 5667 001a FFF7FEFF 		bl	FS_FAT_ClusChainAlloc
 5668              	.LVL533:
3611:rtos/uC-FS/FAT/fs_fat.c ****          return;
 5669              		.loc 1 3611 5 is_stmt 1 view .LVU2021
3611:rtos/uC-FS/FAT/fs_fat.c ****          return;
 5670              		.loc 1 3611 9 is_stmt 0 view .LVU2022
 5671 001e 2B88     		ldrh	r3, [r5]
3611:rtos/uC-FS/FAT/fs_fat.c ****          return;
 5672              		.loc 1 3611 8 view .LVU2023
 5673 0020 33B1     		cbz	r3, .L352
 5674              	.LVL534:
 5675              	.L347:
3629:rtos/uC-FS/FAT/fs_fat.c **** #endif
 5676              		.loc 1 3629 1 view .LVU2024
 5677 0022 02B0     		add	sp, sp, #8
 5678              	.LCFI76:
 5679              		.cfi_remember_state
 5680              		.cfi_def_cfa_offset 24
 5681              		@ sp needed
 5682 0024 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5683              	.LVL535:
 5684              	.L351:
 5685              	.LCFI77:
 5686              		.cfi_restore_state
3601:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5687              		.loc 1 3601 8 is_stmt 1 view .LVU2025
3601:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5688              		.loc 1 3601 15 is_stmt 0 view .LVU2026
 5689 0028 4FF49673 		mov	r3, #300
ARM GAS  /tmp/ccazZ5Hl.s 			page 240


 5690              	.LVL536:
3601:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5691              		.loc 1 3601 15 view .LVU2027
 5692 002c 2B80     		strh	r3, [r5]	@ movhi
3602:rtos/uC-FS/FAT/fs_fat.c ****     }
 5693              		.loc 1 3602 9 is_stmt 1 view .LVU2028
 5694 002e F8E7     		b	.L347
 5695              	.LVL537:
 5696              	.L352:
3617:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileFirstClus = clus;
 5697              		.loc 1 3617 5 view .LVU2029
3617:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileFirstClus = clus;
 5698              		.loc 1 3617 35 is_stmt 0 view .LVU2030
 5699 0030 F36A     		ldr	r3, [r6, #44]
 5700 0032 821E     		subs	r2, r0, #2
 5701 0034 96F84010 		ldrb	r1, [r6, #64]	@ zero_extendqisi2
 5702 0038 8A40     		lsls	r2, r2, r1
3617:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileFirstClus = clus;
 5703              		.loc 1 3617 33 view .LVU2031
 5704 003a 1344     		add	r3, r3, r2
 5705              	.LVL538:
3618:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSec    = sec;
 5706              		.loc 1 3618 5 is_stmt 1 view .LVU2032
3618:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSec    = sec;
 5707              		.loc 1 3618 33 is_stmt 0 view .LVU2033
 5708 003c 7862     		str	r0, [r7, #36]
3619:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSecPos = 0u;
 5709              		.loc 1 3619 5 is_stmt 1 view .LVU2034
3619:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSecPos = 0u;
 5710              		.loc 1 3619 33 is_stmt 0 view .LVU2035
 5711 003e BB62     		str	r3, [r7, #40]
3620:rtos/uC-FS/FAT/fs_fat.c **** 
 5712              		.loc 1 3620 5 is_stmt 1 view .LVU2036
3620:rtos/uC-FS/FAT/fs_fat.c **** 
 5713              		.loc 1 3620 33 is_stmt 0 view .LVU2037
 5714 0040 0023     		movs	r3, #0
 5715              	.LVL539:
3620:rtos/uC-FS/FAT/fs_fat.c **** 
 5716              		.loc 1 3620 33 view .LVU2038
 5717 0042 FB62     		str	r3, [r7, #44]
3624:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
 5718              		.loc 1 3624 5 is_stmt 1 view .LVU2039
 5719 0044 0095     		str	r5, [sp]
 5720              	.LVL540:
3624:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
 5721              		.loc 1 3624 5 is_stmt 0 view .LVU2040
 5722 0046 0123     		movs	r3, #1
 5723 0048 3A46     		mov	r2, r7
 5724 004a 4146     		mov	r1, r8
 5725 004c 2046     		mov	r0, r4
 5726              	.LVL541:
3624:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
 5727              		.loc 1 3624 5 view .LVU2041
 5728 004e FFF7FEFF 		bl	FS_FAT_LowEntryUpdate
 5729              	.LVL542:
 5730 0052 E6E7     		b	.L347
 5731              		.cfi_endproc
ARM GAS  /tmp/ccazZ5Hl.s 			page 241


 5732              	.LFE22:
 5734              		.section	.text.FS_FAT_LowEntryTruncate,"ax",%progbits
 5735              		.align	1
 5736              		.global	FS_FAT_LowEntryTruncate
 5737              		.syntax unified
 5738              		.thumb
 5739              		.thumb_func
 5740              		.fpu fpv4-sp-d16
 5742              	FS_FAT_LowEntryTruncate:
 5743              	.LVL543:
 5744              	.LFB28:
4561:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        del_first;
 5745              		.loc 1 4561 1 is_stmt 1 view -0
 5746              		.cfi_startproc
 5747              		@ args = 4, pretend = 0, frame = 0
 5748              		@ frame_needed = 0, uses_anonymous_args = 0
4561:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        del_first;
 5749              		.loc 1 4561 1 is_stmt 0 view .LVU2043
 5750 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5751              	.LCFI78:
 5752              		.cfi_def_cfa_offset 32
 5753              		.cfi_offset 4, -32
 5754              		.cfi_offset 5, -28
 5755              		.cfi_offset 6, -24
 5756              		.cfi_offset 7, -20
 5757              		.cfi_offset 8, -16
 5758              		.cfi_offset 9, -12
 5759              		.cfi_offset 10, -8
 5760              		.cfi_offset 14, -4
 5761 0004 82B0     		sub	sp, sp, #8
 5762              	.LCFI79:
 5763              		.cfi_def_cfa_offset 40
 5764 0006 0546     		mov	r5, r0
 5765 0008 0E46     		mov	r6, r1
 5766 000a 1C46     		mov	r4, r3
 5767 000c 0A9F     		ldr	r7, [sp, #40]
4562:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA       *p_fat_data;
 5768              		.loc 1 4562 5 is_stmt 1 view .LVU2044
4563:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    file_first_clus;
 5769              		.loc 1 4563 5 view .LVU2045
4564:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FILE_SIZE   file_size;
 5770              		.loc 1 4564 5 view .LVU2046
4565:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FILE_SIZE   file_size_clus;
 5771              		.loc 1 4565 5 view .LVU2047
4566:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FILE_SIZE   file_size_truncated_clus;
 5772              		.loc 1 4566 5 view .LVU2048
4567:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN        valid;
 5773              		.loc 1 4567 5 view .LVU2049
4568:rtos/uC-FS/FAT/fs_fat.c **** 
 5774              		.loc 1 4568 5 view .LVU2050
4571:rtos/uC-FS/FAT/fs_fat.c **** 
 5775              		.loc 1 4571 5 view .LVU2051
4571:rtos/uC-FS/FAT/fs_fat.c **** 
 5776              		.loc 1 4571 16 is_stmt 0 view .LVU2052
 5777 000e D0F834A0 		ldr	r10, [r0, #52]
 5778              	.LVL544:
4575:rtos/uC-FS/FAT/fs_fat.c ****     file_first_clus = p_entry_data->FileFirstClus;              /* ... first file clus.            
ARM GAS  /tmp/ccazZ5Hl.s 			page 242


 5779              		.loc 1 4575 5 is_stmt 1 view .LVU2053
4575:rtos/uC-FS/FAT/fs_fat.c ****     file_first_clus = p_entry_data->FileFirstClus;              /* ... first file clus.            
 5780              		.loc 1 4575 21 is_stmt 0 view .LVU2054
 5781 0012 D2F80490 		ldr	r9, [r2, #4]
 5782              	.LVL545:
4576:rtos/uC-FS/FAT/fs_fat.c **** 
 5783              		.loc 1 4576 5 is_stmt 1 view .LVU2055
4576:rtos/uC-FS/FAT/fs_fat.c **** 
 5784              		.loc 1 4576 21 is_stmt 0 view .LVU2056
 5785 0016 D2F82480 		ldr	r8, [r2, #36]
 5786              	.LVL546:
4579:rtos/uC-FS/FAT/fs_fat.c ****     if (file_size_truncated == 0u) {                            /* If len is zero ...              
 5787              		.loc 1 4579 5 is_stmt 1 view .LVU2057
4579:rtos/uC-FS/FAT/fs_fat.c ****     if (file_size_truncated == 0u) {                            /* If len is zero ...              
 5788              		.loc 1 4579 28 is_stmt 0 view .LVU2058
 5789 001a 5360     		str	r3, [r2, #4]
4580:rtos/uC-FS/FAT/fs_fat.c ****         p_entry_data->FileFirstClus = 0u;                       /* ... then unlink first clus.     
 5790              		.loc 1 4580 5 is_stmt 1 view .LVU2059
4580:rtos/uC-FS/FAT/fs_fat.c ****         p_entry_data->FileFirstClus = 0u;                       /* ... then unlink first clus.     
 5791              		.loc 1 4580 8 is_stmt 0 view .LVU2060
 5792 001c 0BB9     		cbnz	r3, .L354
4581:rtos/uC-FS/FAT/fs_fat.c ****     }
 5793              		.loc 1 4581 9 is_stmt 1 view .LVU2061
4581:rtos/uC-FS/FAT/fs_fat.c ****     }
 5794              		.loc 1 4581 37 is_stmt 0 view .LVU2062
 5795 001e 0023     		movs	r3, #0
 5796              	.LVL547:
4581:rtos/uC-FS/FAT/fs_fat.c ****     }
 5797              		.loc 1 4581 37 view .LVU2063
 5798 0020 5362     		str	r3, [r2, #36]
 5799              	.L354:
4583:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
 5800              		.loc 1 4583 5 is_stmt 1 view .LVU2064
 5801 0022 0097     		str	r7, [sp]
 5802 0024 0123     		movs	r3, #1
 5803 0026 3146     		mov	r1, r6
 5804              	.LVL548:
4583:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
 5805              		.loc 1 4583 5 is_stmt 0 view .LVU2065
 5806 0028 2846     		mov	r0, r5
 5807              	.LVL549:
4583:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
 5808              		.loc 1 4583 5 view .LVU2066
 5809 002a FFF7FEFF 		bl	FS_FAT_LowEntryUpdate
 5810              	.LVL550:
4589:rtos/uC-FS/FAT/fs_fat.c ****          return;
 5811              		.loc 1 4589 5 is_stmt 1 view .LVU2067
4589:rtos/uC-FS/FAT/fs_fat.c ****          return;
 5812              		.loc 1 4589 9 is_stmt 0 view .LVU2068
 5813 002e 3B88     		ldrh	r3, [r7]
4589:rtos/uC-FS/FAT/fs_fat.c ****          return;
 5814              		.loc 1 4589 8 view .LVU2069
 5815 0030 83BB     		cbnz	r3, .L353
4596:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
 5816              		.loc 1 4596 5 is_stmt 1 view .LVU2070
4596:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
 5817              		.loc 1 4596 13 is_stmt 0 view .LVU2071
ARM GAS  /tmp/ccazZ5Hl.s 			page 243


 5818 0032 DAF81430 		ldr	r3, [r10, #20]
4596:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
 5819              		.loc 1 4596 11 view .LVU2072
 5820 0036 4345     		cmp	r3, r8
 5821 0038 2CD9     		bls	.L353
4596:rtos/uC-FS/FAT/fs_fat.c ****     if (valid == DEF_YES) {
 5822              		.loc 1 4596 13 discriminator 1 view .LVU2073
 5823 003a B8F1010F 		cmp	r8, #1
 5824 003e 29D9     		bls	.L353
 5825              	.LVL551:
4597:rtos/uC-FS/FAT/fs_fat.c ****         file_size_truncated_clus = (file_size_truncated  > 0u) ? (FS_UTIL_DIV_PWR2(file_size_trunca
 5826              		.loc 1 4597 5 is_stmt 1 view .LVU2074
4598:rtos/uC-FS/FAT/fs_fat.c ****         file_size_clus           = (file_size            > 0u) ? (FS_UTIL_DIV_PWR2(file_size       
 5827              		.loc 1 4598 9 view .LVU2075
4598:rtos/uC-FS/FAT/fs_fat.c ****         file_size_clus           = (file_size            > 0u) ? (FS_UTIL_DIV_PWR2(file_size       
 5828              		.loc 1 4598 148 is_stmt 0 view .LVU2076
 5829 0040 5CB3     		cbz	r4, .L362
4598:rtos/uC-FS/FAT/fs_fat.c ****         file_size_clus           = (file_size            > 0u) ? (FS_UTIL_DIV_PWR2(file_size       
 5830              		.loc 1 4598 67 discriminator 1 view .LVU2077
 5831 0042 631E     		subs	r3, r4, #1
 5832 0044 9AF84820 		ldrb	r2, [r10, #72]	@ zero_extendqisi2
 5833 0048 D340     		lsrs	r3, r3, r2
4598:rtos/uC-FS/FAT/fs_fat.c ****         file_size_clus           = (file_size            > 0u) ? (FS_UTIL_DIV_PWR2(file_size       
 5834              		.loc 1 4598 148 discriminator 1 view .LVU2078
 5835 004a 0133     		adds	r3, r3, #1
 5836              	.L356:
 5837              	.LVL552:
4599:rtos/uC-FS/FAT/fs_fat.c ****         del_first                = (file_size_truncated == 0u) ?  DEF_YES : DEF_NO;
 5838              		.loc 1 4599 9 is_stmt 1 discriminator 4 view .LVU2079
4599:rtos/uC-FS/FAT/fs_fat.c ****         del_first                = (file_size_truncated == 0u) ?  DEF_YES : DEF_NO;
 5839              		.loc 1 4599 148 is_stmt 0 discriminator 4 view .LVU2080
 5840 004c B9F1000F 		cmp	r9, #0
 5841 0050 07D0     		beq	.L357
4599:rtos/uC-FS/FAT/fs_fat.c ****         del_first                = (file_size_truncated == 0u) ?  DEF_YES : DEF_NO;
 5842              		.loc 1 4599 67 discriminator 1 view .LVU2081
 5843 0052 09F1FF39 		add	r9, r9, #-1
 5844              	.LVL553:
4599:rtos/uC-FS/FAT/fs_fat.c ****         del_first                = (file_size_truncated == 0u) ?  DEF_YES : DEF_NO;
 5845              		.loc 1 4599 67 discriminator 1 view .LVU2082
 5846 0056 9AF84820 		ldrb	r2, [r10, #72]	@ zero_extendqisi2
 5847 005a 29FA02F9 		lsr	r9, r9, r2
 5848              	.LVL554:
4599:rtos/uC-FS/FAT/fs_fat.c ****         del_first                = (file_size_truncated == 0u) ?  DEF_YES : DEF_NO;
 5849              		.loc 1 4599 148 discriminator 1 view .LVU2083
 5850 005e 09F10109 		add	r9, r9, #1
 5851              	.L357:
 5852              	.LVL555:
4600:rtos/uC-FS/FAT/fs_fat.c **** 
 5853              		.loc 1 4600 9 is_stmt 1 discriminator 4 view .LVU2084
4600:rtos/uC-FS/FAT/fs_fat.c **** 
 5854              		.loc 1 4600 34 is_stmt 0 discriminator 4 view .LVU2085
 5855 0062 E4B9     		cbnz	r4, .L363
4600:rtos/uC-FS/FAT/fs_fat.c **** 
 5856              		.loc 1 4600 34 view .LVU2086
 5857 0064 4FF0010A 		mov	r10, #1
 5858              	.LVL556:
 5859              	.L358:
ARM GAS  /tmp/ccazZ5Hl.s 			page 244


4602:rtos/uC-FS/FAT/fs_fat.c ****             (del_first                == DEF_YES)) {            /* ... or first clus must be del'd 
 5860              		.loc 1 4602 9 is_stmt 1 discriminator 4 view .LVU2087
4602:rtos/uC-FS/FAT/fs_fat.c ****             (del_first                == DEF_YES)) {            /* ... or first clus must be del'd 
 5861              		.loc 1 4602 12 is_stmt 0 discriminator 4 view .LVU2088
 5862 0068 4B45     		cmp	r3, r9
 5863 006a 1BD0     		beq	.L365
 5864              	.L359:
4605:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... find last clus of trunc'd fi
 5865              		.loc 1 4605 13 is_stmt 1 view .LVU2089
4605:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* ... find last clus of trunc'd fi
 5866              		.loc 1 4605 16 is_stmt 0 view .LVU2090
 5867 006c 5CB1     		cbz	r4, .L360
4607:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
 5868              		.loc 1 4607 17 is_stmt 1 view .LVU2091
4607:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
 5869              		.loc 1 4607 35 is_stmt 0 view .LVU2092
 5870 006e 0197     		str	r7, [sp, #4]
 5871 0070 0022     		movs	r2, #0
 5872 0072 0092     		str	r2, [sp]
 5873 0074 013B     		subs	r3, r3, #1
 5874              	.LVL557:
4607:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
 5875              		.loc 1 4607 35 view .LVU2093
 5876 0076 4246     		mov	r2, r8
 5877 0078 3146     		mov	r1, r6
 5878 007a 2846     		mov	r0, r5
 5879 007c FFF7FEFF 		bl	FS_FAT_ClusChainFollow
 5880              	.LVL558:
4607:rtos/uC-FS/FAT/fs_fat.c ****                                                          p_buf,
 5881              		.loc 1 4607 35 view .LVU2094
 5882 0080 8046     		mov	r8, r0
 5883              	.LVL559:
4614:rtos/uC-FS/FAT/fs_fat.c ****                     if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END_EARLY) ||
 5884              		.loc 1 4614 17 is_stmt 1 view .LVU2095
4614:rtos/uC-FS/FAT/fs_fat.c ****                     if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END_EARLY) ||
 5885              		.loc 1 4614 21 is_stmt 0 view .LVU2096
 5886 0082 3B88     		ldrh	r3, [r7]
4614:rtos/uC-FS/FAT/fs_fat.c ****                     if ((*p_err == FS_ERR_SYS_CLUS_CHAIN_END_EARLY) ||
 5887              		.loc 1 4614 20 view .LVU2097
 5888 0084 93B9     		cbnz	r3, .L366
 5889              	.LVL560:
 5890              	.L360:
4623:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 5891              		.loc 1 4623 13 is_stmt 1 view .LVU2098
4623:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 5892              		.loc 1 4623 19 is_stmt 0 view .LVU2099
 5893 0086 0097     		str	r7, [sp]
 5894 0088 5346     		mov	r3, r10
 5895 008a 4246     		mov	r2, r8
 5896 008c 3146     		mov	r1, r6
 5897 008e 2846     		mov	r0, r5
 5898 0090 FFF7FEFF 		bl	FS_FAT_ClusChainDel
 5899              	.LVL561:
4628:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 5900              		.loc 1 4628 13 is_stmt 1 view .LVU2100
 5901              	.L353:
4633:rtos/uC-FS/FAT/fs_fat.c **** #endif
ARM GAS  /tmp/ccazZ5Hl.s 			page 245


 5902              		.loc 1 4633 1 is_stmt 0 view .LVU2101
 5903 0094 02B0     		add	sp, sp, #8
 5904              	.LCFI80:
 5905              		.cfi_remember_state
 5906              		.cfi_def_cfa_offset 32
 5907              		@ sp needed
 5908 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5909              	.LVL562:
 5910              	.L362:
 5911              	.LCFI81:
 5912              		.cfi_restore_state
4598:rtos/uC-FS/FAT/fs_fat.c ****         file_size_clus           = (file_size            > 0u) ? (FS_UTIL_DIV_PWR2(file_size       
 5913              		.loc 1 4598 148 view .LVU2102
 5914 009a 2346     		mov	r3, r4
 5915 009c D6E7     		b	.L356
 5916              	.LVL563:
 5917              	.L363:
4600:rtos/uC-FS/FAT/fs_fat.c **** 
 5918              		.loc 1 4600 34 view .LVU2103
 5919 009e 4FF0000A 		mov	r10, #0
 5920              	.LVL564:
4600:rtos/uC-FS/FAT/fs_fat.c **** 
 5921              		.loc 1 4600 34 view .LVU2104
 5922 00a2 E1E7     		b	.L358
 5923              	.LVL565:
 5924              	.L365:
4602:rtos/uC-FS/FAT/fs_fat.c ****             (del_first                == DEF_YES)) {            /* ... or first clus must be del'd 
 5925              		.loc 1 4602 58 discriminator 1 view .LVU2105
 5926 00a4 BAF1000F 		cmp	r10, #0
 5927 00a8 F4D0     		beq	.L353
 5928 00aa DFE7     		b	.L359
 5929              	.LVL566:
 5930              	.L366:
4615:rtos/uC-FS/FAT/fs_fat.c ****                         (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 5931              		.loc 1 4615 21 is_stmt 1 view .LVU2106
4615:rtos/uC-FS/FAT/fs_fat.c ****                         (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 5932              		.loc 1 4615 69 is_stmt 0 view .LVU2107
 5933 00ac A3F23753 		subw	r3, r3, #1335
 5934 00b0 9BB2     		uxth	r3, r3
4615:rtos/uC-FS/FAT/fs_fat.c ****                         (*p_err == FS_ERR_SYS_CLUS_INVALID)) {
 5935              		.loc 1 4615 24 view .LVU2108
 5936 00b2 012B     		cmp	r3, #1
 5937 00b4 EED8     		bhi	.L353
4617:rtos/uC-FS/FAT/fs_fat.c ****                     }
 5938              		.loc 1 4617 26 is_stmt 1 view .LVU2109
4617:rtos/uC-FS/FAT/fs_fat.c ****                     }
 5939              		.loc 1 4617 33 is_stmt 0 view .LVU2110
 5940 00b6 40F2BF23 		movw	r3, #703
 5941 00ba 3B80     		strh	r3, [r7]	@ movhi
4619:rtos/uC-FS/FAT/fs_fat.c ****                 }
 5942              		.loc 1 4619 21 is_stmt 1 view .LVU2111
 5943 00bc EAE7     		b	.L353
 5944              		.cfi_endproc
 5945              	.LFE28:
 5947              		.section	.text.FS_FAT_DateTimeParse,"ax",%progbits
 5948              		.align	1
 5949              		.global	FS_FAT_DateTimeParse
ARM GAS  /tmp/ccazZ5Hl.s 			page 246


 5950              		.syntax unified
 5951              		.thumb
 5952              		.thumb_func
 5953              		.fpu fpv4-sp-d16
 5955              	FS_FAT_DateTimeParse:
 5956              	.LVL567:
 5957              	.LFB31:
4777:rtos/uC-FS/FAT/fs_fat.c ****     CLK_DATE_TIME  stime;
 5958              		.loc 1 4777 1 view -0
 5959              		.cfi_startproc
 5960              		@ args = 0, pretend = 0, frame = 24
 5961              		@ frame_needed = 0, uses_anonymous_args = 0
4777:rtos/uC-FS/FAT/fs_fat.c ****     CLK_DATE_TIME  stime;
 5962              		.loc 1 4777 1 is_stmt 0 view .LVU2113
 5963 0000 70B5     		push	{r4, r5, r6, lr}
 5964              	.LCFI82:
 5965              		.cfi_def_cfa_offset 16
 5966              		.cfi_offset 4, -16
 5967              		.cfi_offset 5, -12
 5968              		.cfi_offset 6, -8
 5969              		.cfi_offset 14, -4
 5970 0002 8AB0     		sub	sp, sp, #40
 5971              	.LCFI83:
 5972              		.cfi_def_cfa_offset 56
 5973 0004 0646     		mov	r6, r0
4778:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     day;
 5974              		.loc 1 4778 5 is_stmt 1 view .LVU2114
4779:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     hour;
 5975              		.loc 1 4779 5 view .LVU2115
4780:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     min;
 5976              		.loc 1 4780 5 view .LVU2116
4781:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     month;
 5977              		.loc 1 4781 5 view .LVU2117
4782:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U     sec;
 5978              		.loc 1 4782 5 view .LVU2118
4783:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT16U     year;
 5979              		.loc 1 4783 5 view .LVU2119
4784:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN    valid;
 5980              		.loc 1 4784 5 view .LVU2120
4785:rtos/uC-FS/FAT/fs_fat.c **** 
 5981              		.loc 1 4785 5 view .LVU2121
4788:rtos/uC-FS/FAT/fs_fat.c **** 
 5982              		.loc 1 4788 5 view .LVU2122
 5983              	.LVL568:
4790:rtos/uC-FS/FAT/fs_fat.c ****         day   = FS_FAT_DIRENT_DATE_GET_DAY(date);
 5984              		.loc 1 4790 5 view .LVU2123
4790:rtos/uC-FS/FAT/fs_fat.c ****         day   = FS_FAT_DIRENT_DATE_GET_DAY(date);
 5985              		.loc 1 4790 8 is_stmt 0 view .LVU2124
 5986 0006 21B9     		cbnz	r1, .L374
 5987              	.LVL569:
 5988              	.L368:
4808:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5989              		.loc 1 4808 8 is_stmt 1 view .LVU2125
4808:rtos/uC-FS/FAT/fs_fat.c ****         return;
 5990              		.loc 1 4808 16 is_stmt 0 view .LVU2126
 5991 0008 4FF0FF33 		mov	r3, #-1
 5992 000c 3360     		str	r3, [r6]
ARM GAS  /tmp/ccazZ5Hl.s 			page 247


4809:rtos/uC-FS/FAT/fs_fat.c ****     }
 5993              		.loc 1 4809 9 is_stmt 1 view .LVU2127
 5994              	.L367:
4834:rtos/uC-FS/FAT/fs_fat.c **** 
 5995              		.loc 1 4834 1 is_stmt 0 view .LVU2128
 5996 000e 0AB0     		add	sp, sp, #40
 5997              	.LCFI84:
 5998              		.cfi_remember_state
 5999              		.cfi_def_cfa_offset 16
 6000              		@ sp needed
 6001 0010 70BD     		pop	{r4, r5, r6, pc}
 6002              	.LVL570:
 6003              	.L374:
 6004              	.LCFI85:
 6005              		.cfi_restore_state
4834:rtos/uC-FS/FAT/fs_fat.c **** 
 6006              		.loc 1 4834 1 view .LVU2129
 6007 0012 1546     		mov	r5, r2
 6008 0014 0A46     		mov	r2, r1
 6009              	.LVL571:
4791:rtos/uC-FS/FAT/fs_fat.c ****         month = FS_FAT_DIRENT_DATE_GET_MONTH(date);
 6010              		.loc 1 4791 9 is_stmt 1 view .LVU2130
4792:rtos/uC-FS/FAT/fs_fat.c ****         year  = FS_FAT_DIRENT_DATE_GET_YEAR(date);
 6011              		.loc 1 4792 9 view .LVU2131
4793:rtos/uC-FS/FAT/fs_fat.c **** 
 6012              		.loc 1 4793 9 view .LVU2132
4793:rtos/uC-FS/FAT/fs_fat.c **** 
 6013              		.loc 1 4793 17 is_stmt 0 view .LVU2133
 6014 0016 490A     		lsrs	r1, r1, #9
 6015              	.LVL572:
4795:rtos/uC-FS/FAT/fs_fat.c ****                                       year,
 6016              		.loc 1 4795 9 is_stmt 1 view .LVU2134
4795:rtos/uC-FS/FAT/fs_fat.c ****                                       year,
 6017              		.loc 1 4795 17 is_stmt 0 view .LVU2135
 6018 0018 0023     		movs	r3, #0
 6019 001a 0393     		str	r3, [sp, #12]
 6020 001c 0293     		str	r3, [sp, #8]
 6021 001e 0193     		str	r3, [sp, #4]
 6022 0020 0093     		str	r3, [sp]
 6023 0022 02F01F03 		and	r3, r2, #31
 6024 0026 C2F34312 		ubfx	r2, r2, #5, #4
 6025              	.LVL573:
4795:rtos/uC-FS/FAT/fs_fat.c ****                                       year,
 6026              		.loc 1 4795 17 view .LVU2136
 6027 002a 01F2BC71 		addw	r1, r1, #1980
 6028              	.LVL574:
4795:rtos/uC-FS/FAT/fs_fat.c ****                                       year,
 6029              		.loc 1 4795 17 view .LVU2137
 6030 002e 05A8     		add	r0, sp, #20
 6031              	.LVL575:
4795:rtos/uC-FS/FAT/fs_fat.c ****                                       year,
 6032              		.loc 1 4795 17 view .LVU2138
 6033 0030 FFF7FEFF 		bl	Clk_UnixDateTimeMake
 6034              	.LVL576:
4807:rtos/uC-FS/FAT/fs_fat.c ****        *p_ts   = FS_TIME_TS_INVALID;
 6035              		.loc 1 4807 5 is_stmt 1 view .LVU2139
4807:rtos/uC-FS/FAT/fs_fat.c ****        *p_ts   = FS_TIME_TS_INVALID;
ARM GAS  /tmp/ccazZ5Hl.s 			page 248


 6036              		.loc 1 4807 8 is_stmt 0 view .LVU2140
 6037 0034 0146     		mov	r1, r0
 6038 0036 0028     		cmp	r0, #0
 6039 0038 E6D0     		beq	.L368
4812:rtos/uC-FS/FAT/fs_fat.c ****     min  = FS_FAT_DIRENT_TIME_GET_MIN(time);
 6040              		.loc 1 4812 5 is_stmt 1 view .LVU2141
4812:rtos/uC-FS/FAT/fs_fat.c ****     min  = FS_FAT_DIRENT_TIME_GET_MIN(time);
 6041              		.loc 1 4812 10 is_stmt 0 view .LVU2142
 6042 003a 05F01F03 		and	r3, r5, #31
 6043 003e 5C00     		lsls	r4, r3, #1
 6044              	.LVL577:
4813:rtos/uC-FS/FAT/fs_fat.c ****     hour = FS_FAT_DIRENT_TIME_GET_HOUR(time);
 6045              		.loc 1 4813 5 is_stmt 1 view .LVU2143
4813:rtos/uC-FS/FAT/fs_fat.c ****     hour = FS_FAT_DIRENT_TIME_GET_HOUR(time);
 6046              		.loc 1 4813 10 is_stmt 0 view .LVU2144
 6047 0040 C5F34510 		ubfx	r0, r5, #5, #6
 6048              	.LVL578:
4814:rtos/uC-FS/FAT/fs_fat.c **** 
 6049              		.loc 1 4814 5 is_stmt 1 view .LVU2145
4814:rtos/uC-FS/FAT/fs_fat.c **** 
 6050              		.loc 1 4814 10 is_stmt 0 view .LVU2146
 6051 0044 EA0A     		lsrs	r2, r5, #11
 6052              	.LVL579:
4816:rtos/uC-FS/FAT/fs_fat.c ****         stime.Sec = sec;
 6053              		.loc 1 4816 5 is_stmt 1 view .LVU2147
4816:rtos/uC-FS/FAT/fs_fat.c ****         stime.Sec = sec;
 6054              		.loc 1 4816 8 is_stmt 0 view .LVU2148
 6055 0046 1E2B     		cmp	r3, #30
 6056 0048 0BD8     		bhi	.L371
4816:rtos/uC-FS/FAT/fs_fat.c ****         stime.Sec = sec;
 6057              		.loc 1 4816 21 discriminator 1 view .LVU2149
 6058 004a 3B28     		cmp	r0, #59
 6059 004c 09D8     		bhi	.L371
4816:rtos/uC-FS/FAT/fs_fat.c ****         stime.Sec = sec;
 6060              		.loc 1 4816 36 discriminator 2 view .LVU2150
 6061 004e 172A     		cmp	r2, #23
 6062 0050 07D8     		bhi	.L371
4817:rtos/uC-FS/FAT/fs_fat.c ****         stime.Min = min;
 6063              		.loc 1 4817 9 is_stmt 1 view .LVU2151
4817:rtos/uC-FS/FAT/fs_fat.c ****         stime.Min = min;
 6064              		.loc 1 4817 19 is_stmt 0 view .LVU2152
 6065 0052 8DF82040 		strb	r4, [sp, #32]
4818:rtos/uC-FS/FAT/fs_fat.c ****         stime.Hr  = hour;
 6066              		.loc 1 4818 9 is_stmt 1 view .LVU2153
4818:rtos/uC-FS/FAT/fs_fat.c ****         stime.Hr  = hour;
 6067              		.loc 1 4818 19 is_stmt 0 view .LVU2154
 6068 0056 8DF81F00 		strb	r0, [sp, #31]
4819:rtos/uC-FS/FAT/fs_fat.c ****     } else {
 6069              		.loc 1 4819 9 is_stmt 1 view .LVU2155
4819:rtos/uC-FS/FAT/fs_fat.c ****     } else {
 6070              		.loc 1 4819 19 is_stmt 0 view .LVU2156
 6071 005a 8DF81E20 		strb	r2, [sp, #30]
 6072              	.LVL580:
4824:rtos/uC-FS/FAT/fs_fat.c ****         valid  = Clk_DateTimeToTS_Unix(p_ts,
 6073              		.loc 1 4824 5 is_stmt 1 view .LVU2157
4824:rtos/uC-FS/FAT/fs_fat.c ****         valid  = Clk_DateTimeToTS_Unix(p_ts,
 6074              		.loc 1 4824 8 is_stmt 0 view .LVU2158
ARM GAS  /tmp/ccazZ5Hl.s 			page 249


 6075 005e 0129     		cmp	r1, #1
 6076 0060 03D0     		beq	.L375
 6077              	.LVL581:
 6078              	.L371:
4832:rtos/uC-FS/FAT/fs_fat.c ****     }
 6079              		.loc 1 4832 8 is_stmt 1 view .LVU2159
4832:rtos/uC-FS/FAT/fs_fat.c ****     }
 6080              		.loc 1 4832 14 is_stmt 0 view .LVU2160
 6081 0062 4FF0FF33 		mov	r3, #-1
 6082 0066 3360     		str	r3, [r6]
 6083 0068 D1E7     		b	.L367
 6084              	.LVL582:
 6085              	.L375:
4825:rtos/uC-FS/FAT/fs_fat.c ****                                       &stime);
 6086              		.loc 1 4825 9 is_stmt 1 view .LVU2161
4825:rtos/uC-FS/FAT/fs_fat.c ****                                       &stime);
 6087              		.loc 1 4825 18 is_stmt 0 view .LVU2162
 6088 006a 05A9     		add	r1, sp, #20
 6089              	.LVL583:
4825:rtos/uC-FS/FAT/fs_fat.c ****                                       &stime);
 6090              		.loc 1 4825 18 view .LVU2163
 6091 006c 3046     		mov	r0, r6
 6092              	.LVL584:
4825:rtos/uC-FS/FAT/fs_fat.c ****                                       &stime);
 6093              		.loc 1 4825 18 view .LVU2164
 6094 006e FFF7FEFF 		bl	Clk_DateTimeToTS_Unix
 6095              	.LVL585:
4827:rtos/uC-FS/FAT/fs_fat.c ****            *p_ts   = FS_TIME_TS_INVALID;
 6096              		.loc 1 4827 9 is_stmt 1 view .LVU2165
4827:rtos/uC-FS/FAT/fs_fat.c ****            *p_ts   = FS_TIME_TS_INVALID;
 6097              		.loc 1 4827 12 is_stmt 0 view .LVU2166
 6098 0072 0128     		cmp	r0, #1
 6099 0074 CBD0     		beq	.L367
4828:rtos/uC-FS/FAT/fs_fat.c ****         }
 6100              		.loc 1 4828 12 is_stmt 1 view .LVU2167
4828:rtos/uC-FS/FAT/fs_fat.c ****         }
 6101              		.loc 1 4828 20 is_stmt 0 view .LVU2168
 6102 0076 4FF0FF33 		mov	r3, #-1
 6103 007a 3360     		str	r3, [r6]
 6104 007c C7E7     		b	.L367
 6105              		.cfi_endproc
 6106              	.LFE31:
 6108              		.section	.text.FS_FAT_SecClr,"ax",%progbits
 6109              		.align	1
 6110              		.global	FS_FAT_SecClr
 6111              		.syntax unified
 6112              		.thumb
 6113              		.thumb_func
 6114              		.fpu fpv4-sp-d16
 6116              	FS_FAT_SecClr:
 6117              	.LVL586:
 6118              	.LFB32:
4875:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR  cnt_rem;
 6119              		.loc 1 4875 1 is_stmt 1 view -0
 6120              		.cfi_startproc
 6121              		@ args = 12, pretend = 0, frame = 0
 6122              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccazZ5Hl.s 			page 250


4875:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR  cnt_rem;
 6123              		.loc 1 4875 1 is_stmt 0 view .LVU2170
 6124 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6125              	.LCFI86:
 6126              		.cfi_def_cfa_offset 36
 6127              		.cfi_offset 4, -36
 6128              		.cfi_offset 5, -32
 6129              		.cfi_offset 6, -28
 6130              		.cfi_offset 7, -24
 6131              		.cfi_offset 8, -20
 6132              		.cfi_offset 9, -16
 6133              		.cfi_offset 10, -12
 6134              		.cfi_offset 11, -8
 6135              		.cfi_offset 14, -4
 6136 0004 83B0     		sub	sp, sp, #12
 6137              	.LCFI87:
 6138              		.cfi_def_cfa_offset 48
 6139 0006 8246     		mov	r10, r0
 6140 0008 8846     		mov	r8, r1
 6141 000a 1646     		mov	r6, r2
 6142 000c 1C46     		mov	r4, r3
 6143 000e DDF834B0 		ldr	fp, [sp, #52]
 6144 0012 0E9F     		ldr	r7, [sp, #56]
4876:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR  cnt_clr;
 6145              		.loc 1 4876 5 is_stmt 1 view .LVU2171
4877:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR  sec_per_buf;
 6146              		.loc 1 4877 5 view .LVU2172
4878:rtos/uC-FS/FAT/fs_fat.c **** 
 6147              		.loc 1 4878 5 view .LVU2173
4881:rtos/uC-FS/FAT/fs_fat.c **** 
 6148              		.loc 1 4881 5 view .LVU2174
 6149 0014 FFF7FEFF 		bl	FS_MaxSecSizeGet
 6150              	.LVL587:
4881:rtos/uC-FS/FAT/fs_fat.c **** 
 6151              		.loc 1 4881 5 is_stmt 0 view .LVU2175
 6152 0018 0146     		mov	r1, r0
 6153 001a 4046     		mov	r0, r8
 6154 001c FFF7FEFF 		bl	Mem_Clr
 6155              	.LVL588:
4883:rtos/uC-FS/FAT/fs_fat.c ****     sec_per_buf = FS_MaxSecSizeGet() / sec_size;
 6156              		.loc 1 4883 5 is_stmt 1 view .LVU2176
4884:rtos/uC-FS/FAT/fs_fat.c **** 
 6157              		.loc 1 4884 5 view .LVU2177
4884:rtos/uC-FS/FAT/fs_fat.c **** 
 6158              		.loc 1 4884 19 is_stmt 0 view .LVU2178
 6159 0020 FFF7FEFF 		bl	FS_MaxSecSizeGet
 6160              	.LVL589:
4884:rtos/uC-FS/FAT/fs_fat.c **** 
 6161              		.loc 1 4884 17 view .LVU2179
 6162 0024 0C9B     		ldr	r3, [sp, #48]
 6163 0026 B0FBF3F9 		udiv	r9, r0, r3
 6164              	.LVL590:
4886:rtos/uC-FS/FAT/fs_fat.c ****         cnt_clr = (cnt_rem > sec_per_buf) ? sec_per_buf : cnt_rem;
 6165              		.loc 1 4886 5 is_stmt 1 view .LVU2180
 6166              	.L377:
4886:rtos/uC-FS/FAT/fs_fat.c ****         cnt_clr = (cnt_rem > sec_per_buf) ? sec_per_buf : cnt_rem;
 6167              		.loc 1 4886 11 view .LVU2181
ARM GAS  /tmp/ccazZ5Hl.s 			page 251


 6168 002a A4B1     		cbz	r4, .L376
4887:rtos/uC-FS/FAT/fs_fat.c **** 
 6169              		.loc 1 4887 9 view .LVU2182
4887:rtos/uC-FS/FAT/fs_fat.c **** 
 6170              		.loc 1 4887 17 is_stmt 0 view .LVU2183
 6171 002c 2546     		mov	r5, r4
 6172 002e 4C45     		cmp	r4, r9
 6173 0030 28BF     		it	cs
 6174 0032 4D46     		movcs	r5, r9
 6175              	.LVL591:
4889:rtos/uC-FS/FAT/fs_fat.c ****                                      p_temp,
 6176              		.loc 1 4889 9 is_stmt 1 view .LVU2184
 6177 0034 0197     		str	r7, [sp, #4]
 6178 0036 CDF800B0 		str	fp, [sp]
 6179 003a 2B46     		mov	r3, r5
 6180 003c 3246     		mov	r2, r6
 6181 003e 4146     		mov	r1, r8
 6182 0040 5046     		mov	r0, r10
 6183 0042 FFF7FEFF 		bl	FSVol_WrLockedEx
 6184              	.LVL592:
4896:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 6185              		.loc 1 4896 9 view .LVU2185
4896:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 6186              		.loc 1 4896 13 is_stmt 0 view .LVU2186
 6187 0046 3B88     		ldrh	r3, [r7]
4896:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 6188              		.loc 1 4896 12 view .LVU2187
 6189 0048 13B9     		cbnz	r3, .L382
4901:rtos/uC-FS/FAT/fs_fat.c ****         start   += cnt_clr;
 6190              		.loc 1 4901 9 is_stmt 1 view .LVU2188
4901:rtos/uC-FS/FAT/fs_fat.c ****         start   += cnt_clr;
 6191              		.loc 1 4901 17 is_stmt 0 view .LVU2189
 6192 004a 641B     		subs	r4, r4, r5
 6193              	.LVL593:
4902:rtos/uC-FS/FAT/fs_fat.c ****     }
 6194              		.loc 1 4902 9 is_stmt 1 view .LVU2190
4902:rtos/uC-FS/FAT/fs_fat.c ****     }
 6195              		.loc 1 4902 17 is_stmt 0 view .LVU2191
 6196 004c 2E44     		add	r6, r6, r5
 6197              	.LVL594:
4902:rtos/uC-FS/FAT/fs_fat.c ****     }
 6198              		.loc 1 4902 17 view .LVU2192
 6199 004e ECE7     		b	.L377
 6200              	.L382:
4897:rtos/uC-FS/FAT/fs_fat.c ****              break;
 6201              		.loc 1 4897 13 is_stmt 1 view .LVU2193
4897:rtos/uC-FS/FAT/fs_fat.c ****              break;
 6202              		.loc 1 4897 21 is_stmt 0 view .LVU2194
 6203 0050 4FF49673 		mov	r3, #300
 6204 0054 3B80     		strh	r3, [r7]	@ movhi
4898:rtos/uC-FS/FAT/fs_fat.c ****         }
 6205              		.loc 1 4898 14 is_stmt 1 view .LVU2195
 6206              	.LVL595:
 6207              	.L376:
4904:rtos/uC-FS/FAT/fs_fat.c **** #endif
 6208              		.loc 1 4904 1 is_stmt 0 view .LVU2196
 6209 0056 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccazZ5Hl.s 			page 252


 6210              	.LCFI88:
 6211              		.cfi_def_cfa_offset 36
 6212              		@ sp needed
 6213 0058 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
4904:rtos/uC-FS/FAT/fs_fat.c **** #endif
 6214              		.loc 1 4904 1 view .LVU2197
 6215              		.cfi_endproc
 6216              	.LFE32:
 6218              		.section	.text.FS_FAT_SecNextGetAlloc,"ax",%progbits
 6219              		.align	1
 6220              		.global	FS_FAT_SecNextGetAlloc
 6221              		.syntax unified
 6222              		.thumb
 6223              		.thumb_func
 6224              		.fpu fpv4-sp-d16
 6226              	FS_FAT_SecNextGetAlloc:
 6227              	.LVL596:
 6228              	.LFB9:
1716:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    clus_sec_rem;
 6229              		.loc 1 1716 1 is_stmt 1 view -0
 6230              		.cfi_startproc
 6231              		@ args = 4, pretend = 0, frame = 0
 6232              		@ frame_needed = 0, uses_anonymous_args = 0
1716:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    clus_sec_rem;
 6233              		.loc 1 1716 1 is_stmt 0 view .LVU2199
 6234 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6235              	.LCFI89:
 6236              		.cfi_def_cfa_offset 32
 6237              		.cfi_offset 4, -32
 6238              		.cfi_offset 5, -28
 6239              		.cfi_offset 6, -24
 6240              		.cfi_offset 7, -20
 6241              		.cfi_offset 8, -16
 6242              		.cfi_offset 9, -12
 6243              		.cfi_offset 10, -8
 6244              		.cfi_offset 14, -4
 6245 0004 84B0     		sub	sp, sp, #16
 6246              	.LCFI90:
 6247              		.cfi_def_cfa_offset 48
 6248 0006 0546     		mov	r5, r0
 6249 0008 0F46     		mov	r7, r1
 6250 000a 9846     		mov	r8, r3
 6251 000c 0C9E     		ldr	r6, [sp, #48]
1717:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   next_clus;
 6252              		.loc 1 1717 5 is_stmt 1 view .LVU2200
1718:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    next_sec;
 6253              		.loc 1 1718 5 view .LVU2201
1719:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    root_dir_sec_last;
 6254              		.loc 1 1719 5 view .LVU2202
1720:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   start_clus;
 6255              		.loc 1 1720 5 view .LVU2203
1721:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 6256              		.loc 1 1721 5 view .LVU2204
1722:rtos/uC-FS/FAT/fs_fat.c **** 
 6257              		.loc 1 1722 5 view .LVU2205
1725:rtos/uC-FS/FAT/fs_fat.c **** 
 6258              		.loc 1 1725 5 view .LVU2206
ARM GAS  /tmp/ccazZ5Hl.s 			page 253


1725:rtos/uC-FS/FAT/fs_fat.c **** 
 6259              		.loc 1 1725 16 is_stmt 0 view .LVU2207
 6260 000e 446B     		ldr	r4, [r0, #52]
 6261              	.LVL597:
1728:rtos/uC-FS/FAT/fs_fat.c ****         if (start_sec < p_fat_data->DataStart) {                /* If start sec outside data       
 6262              		.loc 1 1728 5 is_stmt 1 view .LVU2208
1728:rtos/uC-FS/FAT/fs_fat.c ****         if (start_sec < p_fat_data->DataStart) {                /* If start sec outside data       
 6263              		.loc 1 1728 19 is_stmt 0 view .LVU2209
 6264 0010 94F84A30 		ldrb	r3, [r4, #74]	@ zero_extendqisi2
 6265              	.LVL598:
1728:rtos/uC-FS/FAT/fs_fat.c ****         if (start_sec < p_fat_data->DataStart) {                /* If start sec outside data       
 6266              		.loc 1 1728 8 view .LVU2210
 6267 0014 202B     		cmp	r3, #32
 6268 0016 13D0     		beq	.L384
1729:rtos/uC-FS/FAT/fs_fat.c ****             if (start_sec >= p_fat_data->RootDirStart) {        /* ... & sec within root dir       
 6269              		.loc 1 1729 9 is_stmt 1 view .LVU2211
1729:rtos/uC-FS/FAT/fs_fat.c ****             if (start_sec >= p_fat_data->RootDirStart) {        /* ... & sec within root dir       
 6270              		.loc 1 1729 35 is_stmt 0 view .LVU2212
 6271 0018 E36A     		ldr	r3, [r4, #44]
1729:rtos/uC-FS/FAT/fs_fat.c ****             if (start_sec >= p_fat_data->RootDirStart) {        /* ... & sec within root dir       
 6272              		.loc 1 1729 12 view .LVU2213
 6273 001a 9342     		cmp	r3, r2
 6274 001c 10D9     		bls	.L384
1730:rtos/uC-FS/FAT/fs_fat.c ****                 root_dir_sec_last = p_fat_data->RootDirSize + p_fat_data->RootDirStart - 1u;
 6275              		.loc 1 1730 13 is_stmt 1 view .LVU2214
1730:rtos/uC-FS/FAT/fs_fat.c ****                 root_dir_sec_last = p_fat_data->RootDirSize + p_fat_data->RootDirStart - 1u;
 6276              		.loc 1 1730 40 is_stmt 0 view .LVU2215
 6277 001e A36A     		ldr	r3, [r4, #40]
1730:rtos/uC-FS/FAT/fs_fat.c ****                 root_dir_sec_last = p_fat_data->RootDirSize + p_fat_data->RootDirStart - 1u;
 6278              		.loc 1 1730 16 view .LVU2216
 6279 0020 9342     		cmp	r3, r2
 6280 0022 08D8     		bhi	.L385
1731:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
 6281              		.loc 1 1731 17 is_stmt 1 view .LVU2217
1731:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
 6282              		.loc 1 1731 47 is_stmt 0 view .LVU2218
 6283 0024 A168     		ldr	r1, [r4, #8]
 6284              	.LVL599:
1731:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
 6285              		.loc 1 1731 61 view .LVU2219
 6286 0026 0B44     		add	r3, r3, r1
1731:rtos/uC-FS/FAT/fs_fat.c ****                 if (start_sec < root_dir_sec_last) {            /* ... & sec before last root dir s
 6287              		.loc 1 1731 35 view .LVU2220
 6288 0028 013B     		subs	r3, r3, #1
 6289              	.LVL600:
1732:rtos/uC-FS/FAT/fs_fat.c ****                     next_sec = start_sec + 1u;                  /* ... rtn next sec.               
 6290              		.loc 1 1732 17 is_stmt 1 view .LVU2221
1732:rtos/uC-FS/FAT/fs_fat.c ****                     next_sec = start_sec + 1u;                  /* ... rtn next sec.               
 6291              		.loc 1 1732 20 is_stmt 0 view .LVU2222
 6292 002a 9A42     		cmp	r2, r3
 6293 002c 03D2     		bcs	.L385
1733:rtos/uC-FS/FAT/fs_fat.c ****                    *p_err = FS_ERR_NONE;
 6294              		.loc 1 1733 21 is_stmt 1 view .LVU2223
1733:rtos/uC-FS/FAT/fs_fat.c ****                    *p_err = FS_ERR_NONE;
 6295              		.loc 1 1733 30 is_stmt 0 view .LVU2224
 6296 002e 501C     		adds	r0, r2, #1
 6297              	.LVL601:
ARM GAS  /tmp/ccazZ5Hl.s 			page 254


1734:rtos/uC-FS/FAT/fs_fat.c ****                     return (next_sec);
 6298              		.loc 1 1734 20 is_stmt 1 view .LVU2225
1734:rtos/uC-FS/FAT/fs_fat.c ****                     return (next_sec);
 6299              		.loc 1 1734 27 is_stmt 0 view .LVU2226
 6300 0030 0023     		movs	r3, #0
 6301              	.LVL602:
1734:rtos/uC-FS/FAT/fs_fat.c ****                     return (next_sec);
 6302              		.loc 1 1734 27 view .LVU2227
 6303 0032 3380     		strh	r3, [r6]	@ movhi
 6304              	.LVL603:
1735:rtos/uC-FS/FAT/fs_fat.c ****                 }
 6305              		.loc 1 1735 21 is_stmt 1 view .LVU2228
1735:rtos/uC-FS/FAT/fs_fat.c ****                 }
 6306              		.loc 1 1735 28 is_stmt 0 view .LVU2229
 6307 0034 0FE0     		b	.L383
 6308              	.LVL604:
 6309              	.L385:
1739:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 6310              		.loc 1 1739 12 is_stmt 1 view .LVU2230
1739:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 6311              		.loc 1 1739 19 is_stmt 0 view .LVU2231
 6312 0036 4FF4FB73 		mov	r3, #502
 6313 003a 3380     		strh	r3, [r6]	@ movhi
1740:rtos/uC-FS/FAT/fs_fat.c ****         }
 6314              		.loc 1 1740 13 is_stmt 1 view .LVU2232
1740:rtos/uC-FS/FAT/fs_fat.c ****         }
 6315              		.loc 1 1740 20 is_stmt 0 view .LVU2233
 6316 003c 0020     		movs	r0, #0
 6317              	.LVL605:
1740:rtos/uC-FS/FAT/fs_fat.c ****         }
 6318              		.loc 1 1740 20 view .LVU2234
 6319 003e 0AE0     		b	.L383
 6320              	.LVL606:
 6321              	.L384:
1746:rtos/uC-FS/FAT/fs_fat.c **** 
 6322              		.loc 1 1746 5 is_stmt 1 view .LVU2235
1746:rtos/uC-FS/FAT/fs_fat.c **** 
 6323              		.loc 1 1746 20 is_stmt 0 view .LVU2236
 6324 0040 E06B     		ldr	r0, [r4, #60]
 6325              	.LVL607:
1746:rtos/uC-FS/FAT/fs_fat.c **** 
 6326              		.loc 1 1746 20 view .LVU2237
 6327 0042 E36A     		ldr	r3, [r4, #44]
 6328 0044 D31A     		subs	r3, r2, r3
 6329 0046 411E     		subs	r1, r0, #1
 6330              	.LVL608:
1746:rtos/uC-FS/FAT/fs_fat.c **** 
 6331              		.loc 1 1746 20 view .LVU2238
 6332 0048 1940     		ands	r1, r1, r3
1746:rtos/uC-FS/FAT/fs_fat.c **** 
 6333              		.loc 1 1746 18 view .LVU2239
 6334 004a 401A     		subs	r0, r0, r1
 6335              	.LVL609:
1748:rtos/uC-FS/FAT/fs_fat.c ****         next_sec = start_sec + 1u;                              /* ... rtn next sec.               
 6336              		.loc 1 1748 5 is_stmt 1 view .LVU2240
1748:rtos/uC-FS/FAT/fs_fat.c ****         next_sec = start_sec + 1u;                              /* ... rtn next sec.               
 6337              		.loc 1 1748 8 is_stmt 0 view .LVU2241
ARM GAS  /tmp/ccazZ5Hl.s 			page 255


 6338 004c 0128     		cmp	r0, #1
 6339 004e 05D0     		beq	.L387
1749:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
 6340              		.loc 1 1749 9 is_stmt 1 view .LVU2242
1749:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_NONE;
 6341              		.loc 1 1749 18 is_stmt 0 view .LVU2243
 6342 0050 501C     		adds	r0, r2, #1
 6343              	.LVL610:
1750:rtos/uC-FS/FAT/fs_fat.c ****         return (next_sec);
 6344              		.loc 1 1750 8 is_stmt 1 view .LVU2244
1750:rtos/uC-FS/FAT/fs_fat.c ****         return (next_sec);
 6345              		.loc 1 1750 15 is_stmt 0 view .LVU2245
 6346 0052 0023     		movs	r3, #0
 6347 0054 3380     		strh	r3, [r6]	@ movhi
 6348              	.LVL611:
1751:rtos/uC-FS/FAT/fs_fat.c ****     }
 6349              		.loc 1 1751 9 is_stmt 1 view .LVU2246
 6350              	.L383:
1816:rtos/uC-FS/FAT/fs_fat.c **** #endif
 6351              		.loc 1 1816 1 is_stmt 0 view .LVU2247
 6352 0056 04B0     		add	sp, sp, #16
 6353              	.LCFI91:
 6354              		.cfi_remember_state
 6355              		.cfi_def_cfa_offset 32
 6356              		@ sp needed
 6357 0058 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6358              	.LVL612:
 6359              	.L387:
 6360              	.LCFI92:
 6361              		.cfi_restore_state
1754:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  = FS_FAT_ClusNextGet(p_vol,
 6362              		.loc 1 1754 5 is_stmt 1 view .LVU2248
1754:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  = FS_FAT_ClusNextGet(p_vol,
 6363              		.loc 1 1754 18 is_stmt 0 view .LVU2249
 6364 005c 94F84090 		ldrb	r9, [r4, #64]	@ zero_extendqisi2
 6365 0060 23FA09F3 		lsr	r3, r3, r9
1754:rtos/uC-FS/FAT/fs_fat.c ****     next_clus  = FS_FAT_ClusNextGet(p_vol,
 6366              		.loc 1 1754 16 view .LVU2250
 6367 0064 03F10209 		add	r9, r3, #2
 6368              	.LVL613:
1755:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
 6369              		.loc 1 1755 5 is_stmt 1 view .LVU2251
1755:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
 6370              		.loc 1 1755 18 is_stmt 0 view .LVU2252
 6371 0068 3346     		mov	r3, r6
 6372 006a 4A46     		mov	r2, r9
 6373              	.LVL614:
1755:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
 6374              		.loc 1 1755 18 view .LVU2253
 6375 006c 3946     		mov	r1, r7
 6376 006e 2846     		mov	r0, r5
 6377              	.LVL615:
1755:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
 6378              		.loc 1 1755 18 view .LVU2254
 6379 0070 FFF7FEFF 		bl	FS_FAT_ClusNextGet
 6380              	.LVL616:
1755:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
ARM GAS  /tmp/ccazZ5Hl.s 			page 256


 6381              		.loc 1 1755 18 view .LVU2255
 6382 0074 8246     		mov	r10, r0
 6383              	.LVL617:
1759:rtos/uC-FS/FAT/fs_fat.c ****         case FS_ERR_NONE:                                       /* Another clus in chain already al
 6384              		.loc 1 1759 5 is_stmt 1 view .LVU2256
1759:rtos/uC-FS/FAT/fs_fat.c ****         case FS_ERR_NONE:                                       /* Another clus in chain already al
 6385              		.loc 1 1759 13 is_stmt 0 view .LVU2257
 6386 0076 3388     		ldrh	r3, [r6]
1759:rtos/uC-FS/FAT/fs_fat.c ****         case FS_ERR_NONE:                                       /* Another clus in chain already al
 6387              		.loc 1 1759 5 view .LVU2258
 6388 0078 D3B1     		cbz	r3, .L388
 6389 007a 40F23652 		movw	r2, #1334
 6390 007e 9342     		cmp	r3, r2
 6391 0080 40D1     		bne	.L389
1766:rtos/uC-FS/FAT/fs_fat.c ****                                           p_buf,
 6392              		.loc 1 1766 14 is_stmt 1 view .LVU2259
1766:rtos/uC-FS/FAT/fs_fat.c ****                                           p_buf,
 6393              		.loc 1 1766 21 is_stmt 0 view .LVU2260
 6394 0082 0096     		str	r6, [sp]
 6395 0084 0123     		movs	r3, #1
 6396 0086 4A46     		mov	r2, r9
 6397 0088 3946     		mov	r1, r7
 6398 008a 2846     		mov	r0, r5
 6399              	.LVL618:
1766:rtos/uC-FS/FAT/fs_fat.c ****                                           p_buf,
 6400              		.loc 1 1766 21 view .LVU2261
 6401 008c FFF7FEFF 		bl	FS_FAT_ClusChainAlloc
 6402              	.LVL619:
1771:rtos/uC-FS/FAT/fs_fat.c ****                  return (0u);
 6403              		.loc 1 1771 14 is_stmt 1 view .LVU2262
1771:rtos/uC-FS/FAT/fs_fat.c ****                  return (0u);
 6404              		.loc 1 1771 18 is_stmt 0 view .LVU2263
 6405 0090 3388     		ldrh	r3, [r6]
1771:rtos/uC-FS/FAT/fs_fat.c ****                  return (0u);
 6406              		.loc 1 1771 17 view .LVU2264
 6407 0092 0BB1     		cbz	r3, .L395
1772:rtos/uC-FS/FAT/fs_fat.c ****              }
 6408              		.loc 1 1772 25 view .LVU2265
 6409 0094 0020     		movs	r0, #0
 6410 0096 DEE7     		b	.L383
 6411              	.L395:
1775:rtos/uC-FS/FAT/fs_fat.c ****                                              p_buf,
 6412              		.loc 1 1775 14 is_stmt 1 view .LVU2266
1775:rtos/uC-FS/FAT/fs_fat.c ****                                              p_buf,
 6413              		.loc 1 1775 27 is_stmt 0 view .LVU2267
 6414 0098 3346     		mov	r3, r6
 6415 009a 4A46     		mov	r2, r9
 6416 009c 3946     		mov	r1, r7
 6417 009e 2846     		mov	r0, r5
 6418 00a0 FFF7FEFF 		bl	FS_FAT_ClusNextGet
 6419              	.LVL620:
 6420 00a4 8246     		mov	r10, r0
 6421              	.LVL621:
1779:rtos/uC-FS/FAT/fs_fat.c ****                  return (0u);
 6422              		.loc 1 1779 14 is_stmt 1 view .LVU2268
1779:rtos/uC-FS/FAT/fs_fat.c ****                  return (0u);
 6423              		.loc 1 1779 18 is_stmt 0 view .LVU2269
ARM GAS  /tmp/ccazZ5Hl.s 			page 257


 6424 00a6 3388     		ldrh	r3, [r6]
1779:rtos/uC-FS/FAT/fs_fat.c ****                  return (0u);
 6425              		.loc 1 1779 17 view .LVU2270
 6426 00a8 73BB     		cbnz	r3, .L391
 6427              	.LVL622:
1793:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Flush(p_buf, p_err);                              /* Flush buf (see Note #1).        
 6428              		.loc 1 1793 5 is_stmt 1 view .LVU2271
1793:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Flush(p_buf, p_err);                              /* Flush buf (see Note #1).        
 6429              		.loc 1 1793 8 is_stmt 0 view .LVU2272
 6430 00aa B8F1010F 		cmp	r8, #1
 6431 00ae 0AD0     		beq	.L396
 6432              	.LVL623:
 6433              	.L388:
1813:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 6434              		.loc 1 1813 5 is_stmt 1 view .LVU2273
1813:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 6435              		.loc 1 1813 16 is_stmt 0 view .LVU2274
 6436 00b0 E26A     		ldr	r2, [r4, #44]
 6437 00b2 AAF10200 		sub	r0, r10, #2
 6438 00b6 94F840A0 		ldrb	r10, [r4, #64]	@ zero_extendqisi2
 6439 00ba 00FA0AF0 		lsl	r0, r0, r10
1813:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 6440              		.loc 1 1813 14 view .LVU2275
 6441 00be 1044     		add	r0, r0, r2
 6442              	.LVL624:
1814:rtos/uC-FS/FAT/fs_fat.c ****     return (next_sec);
 6443              		.loc 1 1814 4 is_stmt 1 view .LVU2276
1814:rtos/uC-FS/FAT/fs_fat.c ****     return (next_sec);
 6444              		.loc 1 1814 11 is_stmt 0 view .LVU2277
 6445 00c0 0023     		movs	r3, #0
 6446 00c2 3380     		strh	r3, [r6]	@ movhi
1815:rtos/uC-FS/FAT/fs_fat.c **** }
 6447              		.loc 1 1815 5 is_stmt 1 view .LVU2278
1815:rtos/uC-FS/FAT/fs_fat.c **** }
 6448              		.loc 1 1815 12 is_stmt 0 view .LVU2279
 6449 00c4 C7E7     		b	.L383
 6450              	.LVL625:
 6451              	.L396:
1794:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
 6452              		.loc 1 1794 9 is_stmt 1 view .LVU2280
 6453 00c6 3146     		mov	r1, r6
 6454 00c8 3846     		mov	r0, r7
 6455              	.LVL626:
1794:rtos/uC-FS/FAT/fs_fat.c ****         if (*p_err != FS_ERR_NONE) {
 6456              		.loc 1 1794 9 is_stmt 0 view .LVU2281
 6457 00ca FFF7FEFF 		bl	FSBuf_Flush
 6458              	.LVL627:
1795:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 6459              		.loc 1 1795 9 is_stmt 1 view .LVU2282
1795:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 6460              		.loc 1 1795 13 is_stmt 0 view .LVU2283
 6461 00ce 3388     		ldrh	r3, [r6]
1795:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 6462              		.loc 1 1795 12 view .LVU2284
 6463 00d0 0BB1     		cbz	r3, .L397
1796:rtos/uC-FS/FAT/fs_fat.c ****         }
 6464              		.loc 1 1796 20 view .LVU2285
ARM GAS  /tmp/ccazZ5Hl.s 			page 258


 6465 00d2 0020     		movs	r0, #0
 6466 00d4 BFE7     		b	.L383
 6467              	.L397:
1799:rtos/uC-FS/FAT/fs_fat.c **** 
 6468              		.loc 1 1799 9 is_stmt 1 view .LVU2286
1799:rtos/uC-FS/FAT/fs_fat.c **** 
 6469              		.loc 1 1799 20 is_stmt 0 view .LVU2287
 6470 00d6 E16A     		ldr	r1, [r4, #44]
 6471 00d8 AAF10203 		sub	r3, r10, #2
 6472 00dc 94F84020 		ldrb	r2, [r4, #64]	@ zero_extendqisi2
 6473 00e0 03FA02F2 		lsl	r2, r3, r2
 6474              	.LVL628:
1801:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf->DataPtr,
 6475              		.loc 1 1801 9 is_stmt 1 view .LVU2288
 6476 00e4 E36B     		ldr	r3, [r4, #60]
 6477 00e6 0296     		str	r6, [sp, #8]
 6478 00e8 0220     		movs	r0, #2
 6479 00ea 0190     		str	r0, [sp, #4]
 6480 00ec 606B     		ldr	r0, [r4, #52]
 6481 00ee 0090     		str	r0, [sp]
 6482 00f0 0A44     		add	r2, r2, r1
 6483              	.LVL629:
1801:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf->DataPtr,
 6484              		.loc 1 1801 9 is_stmt 0 view .LVU2289
 6485 00f2 3969     		ldr	r1, [r7, #16]
 6486 00f4 2846     		mov	r0, r5
 6487 00f6 FFF7FEFF 		bl	FS_FAT_SecClr
 6488              	.LVL630:
1808:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 6489              		.loc 1 1808 9 is_stmt 1 view .LVU2290
1808:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 6490              		.loc 1 1808 13 is_stmt 0 view .LVU2291
 6491 00fa 3388     		ldrh	r3, [r6]
1808:rtos/uC-FS/FAT/fs_fat.c ****             return (0u);
 6492              		.loc 1 1808 12 view .LVU2292
 6493 00fc 002B     		cmp	r3, #0
 6494 00fe D7D0     		beq	.L388
1809:rtos/uC-FS/FAT/fs_fat.c ****         }
 6495              		.loc 1 1809 20 view .LVU2293
 6496 0100 0020     		movs	r0, #0
 6497 0102 A8E7     		b	.L383
 6498              	.LVL631:
 6499              	.L389:
1759:rtos/uC-FS/FAT/fs_fat.c ****         case FS_ERR_NONE:                                       /* Another clus in chain already al
 6500              		.loc 1 1759 5 view .LVU2294
 6501 0104 0020     		movs	r0, #0
 6502              	.LVL632:
1759:rtos/uC-FS/FAT/fs_fat.c ****         case FS_ERR_NONE:                                       /* Another clus in chain already al
 6503              		.loc 1 1759 5 view .LVU2295
 6504 0106 A6E7     		b	.L383
 6505              	.LVL633:
 6506              	.L391:
1780:rtos/uC-FS/FAT/fs_fat.c ****              }
 6507              		.loc 1 1780 25 view .LVU2296
 6508 0108 0020     		movs	r0, #0
 6509              	.LVL634:
1780:rtos/uC-FS/FAT/fs_fat.c ****              }
ARM GAS  /tmp/ccazZ5Hl.s 			page 259


 6510              		.loc 1 1780 25 view .LVU2297
 6511 010a A4E7     		b	.L383
 6512              		.cfi_endproc
 6513              	.LFE9:
 6515              		.section	.text.FS_FAT_VolFmt,"ax",%progbits
 6516              		.align	1
 6517              		.global	FS_FAT_VolFmt
 6518              		.syntax unified
 6519              		.thumb
 6520              		.thumb_func
 6521              		.fpu fpv4-sp-d16
 6523              	FS_FAT_VolFmt:
 6524              	.LVL635:
 6525              	.LFB14:
2383:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF            *p_buf;
 6526              		.loc 1 2383 1 is_stmt 1 view -0
 6527              		.cfi_startproc
 6528              		@ args = 4, pretend = 0, frame = 32
 6529              		@ frame_needed = 0, uses_anonymous_args = 0
2383:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF            *p_buf;
 6530              		.loc 1 2383 1 is_stmt 0 view .LVU2299
 6531 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6532              	.LCFI93:
 6533              		.cfi_def_cfa_offset 36
 6534              		.cfi_offset 4, -36
 6535              		.cfi_offset 5, -32
 6536              		.cfi_offset 6, -28
 6537              		.cfi_offset 7, -24
 6538              		.cfi_offset 8, -20
 6539              		.cfi_offset 9, -16
 6540              		.cfi_offset 10, -12
 6541              		.cfi_offset 11, -8
 6542              		.cfi_offset 14, -4
 6543 0004 8DB0     		sub	sp, sp, #52
 6544              	.LCFI94:
 6545              		.cfi_def_cfa_offset 88
 6546 0006 169E     		ldr	r6, [sp, #88]
2384:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR    data_size;
 6547              		.loc 1 2384 5 is_stmt 1 view .LVU2300
2385:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U         fat_ix;
 6548              		.loc 1 2385 5 view .LVU2301
2386:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     fat_size;
 6549              		.loc 1 2386 5 view .LVU2302
2387:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     fat_sec_cur;
 6550              		.loc 1 2387 5 view .LVU2303
2388:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     fat1_sec_start;
 6551              		.loc 1 2388 5 view .LVU2304
2389:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SYS_CFG     sys_cfg;
 6552              		.loc 1 2389 5 view .LVU2305
2390:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SYS_CFG    *p_fat_sys_cfg;
 6553              		.loc 1 2390 5 view .LVU2306
2391:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     root_dir_size;
 6554              		.loc 1 2391 5 view .LVU2307
2392:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     root_dir_sec_start;
 6555              		.loc 1 2392 5 view .LVU2308
2393:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     rsvd_sec_start;
 6556              		.loc 1 2393 5 view .LVU2309
ARM GAS  /tmp/ccazZ5Hl.s 			page 260


2394:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U         val;
 6557              		.loc 1 2394 5 view .LVU2310
2395:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR     data_sec_start;
 6558              		.loc 1 2395 5 view .LVU2311
2396:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U         clus_number;
 6559              		.loc 1 2396 5 view .LVU2312
2397:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_PARTITION_EN == DEF_ENABLED)
 6560              		.loc 1 2397 5 view .LVU2313
2405:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid dev size: 0.\r\n"));
 6561              		.loc 1 2405 5 view .LVU2314
2405:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid dev size: 0.\r\n"));
 6562              		.loc 1 2405 8 is_stmt 0 view .LVU2315
 6563 0008 3BB3     		cbz	r3, .L448
 6564 000a 0546     		mov	r5, r0
 6565 000c 1446     		mov	r4, r2
 6566 000e 9846     		mov	r8, r3
2411:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_GetSysCfg( sec_size,                             /* Get FAT configuration.          
 6567              		.loc 1 2411 5 is_stmt 1 view .LVU2316
2411:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_GetSysCfg( sec_size,                             /* Get FAT configuration.          
 6568              		.loc 1 2411 8 is_stmt 0 view .LVU2317
 6569 0010 49B3     		cbz	r1, .L449
2421:rtos/uC-FS/FAT/fs_fat.c **** 
 6570              		.loc 1 2421 9 is_stmt 1 view .LVU2318
 6571              	.LVL636:
2423:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.RootDirEntryCnt = p_fat_sys_cfg->RootDirEntryCnt;
 6572              		.loc 1 2423 9 view .LVU2319
2423:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.RootDirEntryCnt = p_fat_sys_cfg->RootDirEntryCnt;
 6573              		.loc 1 2423 48 is_stmt 0 view .LVU2320
 6574 0012 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 6575              	.LVL637:
2423:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.RootDirEntryCnt = p_fat_sys_cfg->RootDirEntryCnt;
 6576              		.loc 1 2423 33 view .LVU2321
 6577 0014 8DF82E00 		strb	r0, [sp, #46]
2424:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.RsvdAreaSize    = p_fat_sys_cfg->RsvdAreaSize;
 6578              		.loc 1 2424 9 is_stmt 1 view .LVU2322
2424:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.RsvdAreaSize    = p_fat_sys_cfg->RsvdAreaSize;
 6579              		.loc 1 2424 48 is_stmt 0 view .LVU2323
 6580 0018 B1F808C0 		ldrh	ip, [r1, #8]
2424:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.RsvdAreaSize    = p_fat_sys_cfg->RsvdAreaSize;
 6581              		.loc 1 2424 33 view .LVU2324
 6582 001c ADF82CC0 		strh	ip, [sp, #44]	@ movhi
2425:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.ClusSize        = p_fat_sys_cfg->ClusSize;
 6583              		.loc 1 2425 9 is_stmt 1 view .LVU2325
2425:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.ClusSize        = p_fat_sys_cfg->ClusSize;
 6584              		.loc 1 2425 48 is_stmt 0 view .LVU2326
 6585 0020 4F68     		ldr	r7, [r1, #4]
2425:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.ClusSize        = p_fat_sys_cfg->ClusSize;
 6586              		.loc 1 2425 33 view .LVU2327
 6587 0022 0A97     		str	r7, [sp, #40]
2426:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.NbrFATs         = p_fat_sys_cfg->NbrFATs;
 6588              		.loc 1 2426 9 is_stmt 1 view .LVU2328
2426:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.NbrFATs         = p_fat_sys_cfg->NbrFATs;
 6589              		.loc 1 2426 48 is_stmt 0 view .LVU2329
 6590 0024 0A68     		ldr	r2, [r1]
 6591              	.LVL638:
2426:rtos/uC-FS/FAT/fs_fat.c ****         sys_cfg.NbrFATs         = p_fat_sys_cfg->NbrFATs;
 6592              		.loc 1 2426 33 view .LVU2330
ARM GAS  /tmp/ccazZ5Hl.s 			page 261


 6593 0026 0992     		str	r2, [sp, #36]
2427:rtos/uC-FS/FAT/fs_fat.c **** 
 6594              		.loc 1 2427 9 is_stmt 1 view .LVU2331
2427:rtos/uC-FS/FAT/fs_fat.c **** 
 6595              		.loc 1 2427 48 is_stmt 0 view .LVU2332
 6596 0028 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 6597              	.LVL639:
2427:rtos/uC-FS/FAT/fs_fat.c **** 
 6598              		.loc 1 2427 33 view .LVU2333
 6599 002a 8DF82F30 		strb	r3, [sp, #47]
2429:rtos/uC-FS/FAT/fs_fat.c ****             (sys_cfg.ClusSize >  128u)) {
 6600              		.loc 1 2429 9 is_stmt 1 view .LVU2334
2429:rtos/uC-FS/FAT/fs_fat.c ****             (sys_cfg.ClusSize >  128u)) {
 6601              		.loc 1 2429 38 is_stmt 0 view .LVU2335
 6602 002e 511E     		subs	r1, r2, #1
 6603              	.LVL640:
2429:rtos/uC-FS/FAT/fs_fat.c ****             (sys_cfg.ClusSize >  128u)) {
 6604              		.loc 1 2429 12 view .LVU2336
 6605 0030 7F29     		cmp	r1, #127
 6606 0032 4ED8     		bhi	.L450
2436:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_VolFmt(): Cfg'd cluster size invalid: %d.\r\n", sys_cfg.ClusSize)
 6607              		.loc 1 2436 9 is_stmt 1 view .LVU2337
2436:rtos/uC-FS/FAT/fs_fat.c ****             FS_TRACE_DBG(("FS_FAT_VolFmt(): Cfg'd cluster size invalid: %d.\r\n", sys_cfg.ClusSize)
 6608              		.loc 1 2436 12 is_stmt 0 view .LVU2338
 6609 0034 0A42     		tst	r2, r1
 6610 0036 50D1     		bne	.L451
2442:rtos/uC-FS/FAT/fs_fat.c ****              sys_cfg.NbrFATs  = 2u;
 6611              		.loc 1 2442 9 is_stmt 1 view .LVU2339
2442:rtos/uC-FS/FAT/fs_fat.c ****              sys_cfg.NbrFATs  = 2u;
 6612              		.loc 1 2442 37 is_stmt 0 view .LVU2340
 6613 0038 013B     		subs	r3, r3, #1
 6614 003a DBB2     		uxtb	r3, r3
2442:rtos/uC-FS/FAT/fs_fat.c ****              sys_cfg.NbrFATs  = 2u;
 6615              		.loc 1 2442 12 view .LVU2341
 6616 003c 012B     		cmp	r3, #1
 6617 003e 02D9     		bls	.L405
2443:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting nbr FATs to 2.\r\n"));
 6618              		.loc 1 2443 14 is_stmt 1 view .LVU2342
2443:rtos/uC-FS/FAT/fs_fat.c ****              FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting nbr FATs to 2.\r\n"));
 6619              		.loc 1 2443 31 is_stmt 0 view .LVU2343
 6620 0040 0223     		movs	r3, #2
 6621 0042 8DF82F30 		strb	r3, [sp, #47]
 6622              	.L405:
2444:rtos/uC-FS/FAT/fs_fat.c ****         }
 6623              		.loc 1 2444 75 is_stmt 1 view .LVU2344
2447:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT12_EN == DEF_ENABLED)
 6624              		.loc 1 2447 9 view .LVU2345
 6625 0046 1028     		cmp	r0, #16
 6626 0048 5DD0     		beq	.L406
 6627 004a 2028     		cmp	r0, #32
 6628 004c 71D0     		beq	.L407
 6629 004e 0C28     		cmp	r0, #12
 6630 0050 47D0     		beq	.L452
2496:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_VOL_INVALID_SYS;
 6631              		.loc 1 2496 102 view .LVU2346
2497:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 6632              		.loc 1 2497 17 view .LVU2347
ARM GAS  /tmp/ccazZ5Hl.s 			page 262


2497:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 6633              		.loc 1 2497 24 is_stmt 0 view .LVU2348
 6634 0052 40F27F53 		movw	r3, #1407
 6635 0056 3380     		strh	r3, [r6]	@ movhi
2498:rtos/uC-FS/FAT/fs_fat.c ****         }
 6636              		.loc 1 2498 18 is_stmt 1 view .LVU2349
 6637 0058 02E0     		b	.L398
 6638              	.LVL641:
 6639              	.L448:
2406:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_DEV_INVALID_SIZE;
 6640              		.loc 1 2406 68 view .LVU2350
2407:rtos/uC-FS/FAT/fs_fat.c ****         return;
 6641              		.loc 1 2407 8 view .LVU2351
2407:rtos/uC-FS/FAT/fs_fat.c ****         return;
 6642              		.loc 1 2407 15 is_stmt 0 view .LVU2352
 6643 005a 40F24113 		movw	r3, #321
 6644              	.LVL642:
2407:rtos/uC-FS/FAT/fs_fat.c ****         return;
 6645              		.loc 1 2407 15 view .LVU2353
 6646 005e 3380     		strh	r3, [r6]	@ movhi
2408:rtos/uC-FS/FAT/fs_fat.c ****     }
 6647              		.loc 1 2408 9 is_stmt 1 view .LVU2354
 6648              	.LVL643:
 6649              	.L398:
2919:rtos/uC-FS/FAT/fs_fat.c **** #endif
 6650              		.loc 1 2919 1 is_stmt 0 view .LVU2355
 6651 0060 0DB0     		add	sp, sp, #52
 6652              	.LCFI95:
 6653              		.cfi_remember_state
 6654              		.cfi_def_cfa_offset 36
 6655              		@ sp needed
 6656 0062 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6657              	.LVL644:
 6658              	.L449:
 6659              	.LCFI96:
 6660              		.cfi_restore_state
2412:rtos/uC-FS/FAT/fs_fat.c ****                           size,
 6661              		.loc 1 2412 9 is_stmt 1 view .LVU2356
 6662 0066 3346     		mov	r3, r6
 6663              	.LVL645:
2412:rtos/uC-FS/FAT/fs_fat.c ****                           size,
 6664              		.loc 1 2412 9 is_stmt 0 view .LVU2357
 6665 0068 09AA     		add	r2, sp, #36
 6666              	.LVL646:
2412:rtos/uC-FS/FAT/fs_fat.c ****                           size,
 6667              		.loc 1 2412 9 view .LVU2358
 6668 006a 4146     		mov	r1, r8
 6669              	.LVL647:
2412:rtos/uC-FS/FAT/fs_fat.c ****                           size,
 6670              		.loc 1 2412 9 view .LVU2359
 6671 006c 2046     		mov	r0, r4
 6672              	.LVL648:
2412:rtos/uC-FS/FAT/fs_fat.c ****                           size,
 6673              		.loc 1 2412 9 view .LVU2360
 6674 006e FFF7FEFF 		bl	FS_FAT_GetSysCfg
 6675              	.LVL649:
2417:rtos/uC-FS/FAT/fs_fat.c ****             return;
ARM GAS  /tmp/ccazZ5Hl.s 			page 263


 6676              		.loc 1 2417 9 is_stmt 1 view .LVU2361
2417:rtos/uC-FS/FAT/fs_fat.c ****             return;
 6677              		.loc 1 2417 13 is_stmt 0 view .LVU2362
 6678 0072 3388     		ldrh	r3, [r6]
2417:rtos/uC-FS/FAT/fs_fat.c ****             return;
 6679              		.loc 1 2417 12 view .LVU2363
 6680 0074 002B     		cmp	r3, #0
 6681 0076 F3D1     		bne	.L398
 6682              	.L402:
2503:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 6683              		.loc 1 2503 5 is_stmt 1 view .LVU2364
2503:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 6684              		.loc 1 2503 13 is_stmt 0 view .LVU2365
 6685 0078 2846     		mov	r0, r5
 6686 007a FFF7FEFF 		bl	FSBuf_Get
 6687              	.LVL650:
2504:rtos/uC-FS/FAT/fs_fat.c ****        *p_err =   FS_ERR_BUF_NONE_AVAIL;
 6688              		.loc 1 2504 5 is_stmt 1 view .LVU2366
2504:rtos/uC-FS/FAT/fs_fat.c ****        *p_err =   FS_ERR_BUF_NONE_AVAIL;
 6689              		.loc 1 2504 8 is_stmt 0 view .LVU2367
 6690 007e 8146     		mov	r9, r0
 6691 0080 0028     		cmp	r0, #0
 6692 0082 66D0     		beq	.L453
2509:rtos/uC-FS/FAT/fs_fat.c ****                         0u,
 6693              		.loc 1 2509 5 is_stmt 1 view .LVU2368
 6694 0084 3346     		mov	r3, r6
 6695 0086 4246     		mov	r2, r8
 6696 0088 0021     		movs	r1, #0
 6697 008a 2846     		mov	r0, r5
 6698              	.LVL651:
2509:rtos/uC-FS/FAT/fs_fat.c ****                         0u,
 6699              		.loc 1 2509 5 is_stmt 0 view .LVU2369
 6700 008c FFF7FEFF 		bl	FSVol_ReleaseLocked
 6701              	.LVL652:
2513:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 6702              		.loc 1 2513 5 is_stmt 1 view .LVU2370
2513:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 6703              		.loc 1 2513 9 is_stmt 0 view .LVU2371
 6704 0090 3388     		ldrh	r3, [r6]
2513:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 6705              		.loc 1 2513 8 view .LVU2372
 6706 0092 002B     		cmp	r3, #0
 6707 0094 60D1     		bne	.L454
2518:rtos/uC-FS/FAT/fs_fat.c ****     if(size <= root_dir_size + sys_cfg.RsvdAreaSize) {
 6708              		.loc 1 2518 5 is_stmt 1 view .LVU2373
2518:rtos/uC-FS/FAT/fs_fat.c ****     if(size <= root_dir_size + sys_cfg.RsvdAreaSize) {
 6709              		.loc 1 2518 46 is_stmt 0 view .LVU2374
 6710 0096 BDF82C30 		ldrh	r3, [sp, #44]
2518:rtos/uC-FS/FAT/fs_fat.c ****     if(size <= root_dir_size + sys_cfg.RsvdAreaSize) {
 6711              		.loc 1 2518 88 view .LVU2375
 6712 009a 04EB4313 		add	r3, r4, r3, lsl #5
 6713 009e 013B     		subs	r3, r3, #1
2518:rtos/uC-FS/FAT/fs_fat.c ****     if(size <= root_dir_size + sys_cfg.RsvdAreaSize) {
 6714              		.loc 1 2518 19 view .LVU2376
 6715 00a0 B3FBF4F3 		udiv	r3, r3, r4
 6716 00a4 0593     		str	r3, [sp, #20]
 6717              	.LVL653:
ARM GAS  /tmp/ccazZ5Hl.s 			page 264


2519:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number.\r\n"));
 6718              		.loc 1 2519 5 is_stmt 1 view .LVU2377
2519:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number.\r\n"));
 6719              		.loc 1 2519 39 is_stmt 0 view .LVU2378
 6720 00a6 DDF828A0 		ldr	r10, [sp, #40]
2519:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number.\r\n"));
 6721              		.loc 1 2519 30 view .LVU2379
 6722 00aa 5344     		add	r3, r10, r3
 6723              	.LVL654:
2519:rtos/uC-FS/FAT/fs_fat.c ****         FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number.\r\n"));
 6724              		.loc 1 2519 7 view .LVU2380
 6725 00ac 4345     		cmp	r3, r8
 6726 00ae 57D2     		bcs	.L455
2525:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT16_EN == DEF_ENABLED)
 6727              		.loc 1 2525 5 is_stmt 1 view .LVU2381
2525:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT16_EN == DEF_ENABLED)
 6728              		.loc 1 2525 20 is_stmt 0 view .LVU2382
 6729 00b0 9DF82E30 		ldrb	r3, [sp, #46]	@ zero_extendqisi2
2525:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_FAT_CFG_FAT16_EN == DEF_ENABLED)
 6730              		.loc 1 2525 5 view .LVU2383
 6731 00b4 102B     		cmp	r3, #16
 6732 00b6 5AD0     		beq	.L417
 6733 00b8 202B     		cmp	r3, #32
 6734 00ba 00F0BF80 		beq	.L418
 6735 00be 0C2B     		cmp	r3, #12
 6736 00c0 00F02981 		beq	.L456
2772:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_DEV_INVALID_SIZE;
 6737              		.loc 1 2772 14 is_stmt 1 view .LVU2384
 6738 00c4 4846     		mov	r0, r9
 6739 00c6 FFF7FEFF 		bl	FSBuf_Free
 6740              	.LVL655:
2773:rtos/uC-FS/FAT/fs_fat.c ****              return;
 6741              		.loc 1 2773 13 view .LVU2385
2773:rtos/uC-FS/FAT/fs_fat.c ****              return;
 6742              		.loc 1 2773 20 is_stmt 0 view .LVU2386
 6743 00ca 40F24113 		movw	r3, #321
 6744 00ce 3380     		strh	r3, [r6]	@ movhi
2774:rtos/uC-FS/FAT/fs_fat.c ****     }
 6745              		.loc 1 2774 14 is_stmt 1 view .LVU2387
 6746 00d0 C6E7     		b	.L398
 6747              	.LVL656:
 6748              	.L450:
2431:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SYS;
 6749              		.loc 1 2431 101 view .LVU2388
2432:rtos/uC-FS/FAT/fs_fat.c ****             return;
 6750              		.loc 1 2432 12 view .LVU2389
2432:rtos/uC-FS/FAT/fs_fat.c ****             return;
 6751              		.loc 1 2432 19 is_stmt 0 view .LVU2390
 6752 00d2 40F27F53 		movw	r3, #1407
 6753 00d6 3380     		strh	r3, [r6]	@ movhi
2433:rtos/uC-FS/FAT/fs_fat.c ****         }
 6754              		.loc 1 2433 13 is_stmt 1 view .LVU2391
 6755 00d8 C2E7     		b	.L398
 6756              	.L451:
2437:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_VOL_INVALID_SYS;
 6757              		.loc 1 2437 101 view .LVU2392
2438:rtos/uC-FS/FAT/fs_fat.c ****             return;
ARM GAS  /tmp/ccazZ5Hl.s 			page 265


 6758              		.loc 1 2438 12 view .LVU2393
2438:rtos/uC-FS/FAT/fs_fat.c ****             return;
 6759              		.loc 1 2438 19 is_stmt 0 view .LVU2394
 6760 00da 40F27F53 		movw	r3, #1407
 6761 00de 3380     		strh	r3, [r6]	@ movhi
2439:rtos/uC-FS/FAT/fs_fat.c ****         }
 6762              		.loc 1 2439 13 is_stmt 1 view .LVU2395
 6763 00e0 BEE7     		b	.L398
 6764              	.L452:
2450:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RootDirEntryCnt = DEF_MIN(512u, 1u + (size / 2u));
 6765              		.loc 1 2450 18 view .LVU2396
2450:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RootDirEntryCnt = DEF_MIN(512u, 1u + (size / 2u));
 6766              		.loc 1 2450 21 is_stmt 0 view .LVU2397
 6767 00e2 BCF1000F 		cmp	ip, #0
 6768 00e6 09D1     		bne	.L409
2451:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6769              		.loc 1 2451 22 is_stmt 1 view .LVU2398
2451:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6770              		.loc 1 2451 48 is_stmt 0 view .LVU2399
 6771 00e8 4FEA5803 		lsr	r3, r8, #1
 6772 00ec 0133     		adds	r3, r3, #1
 6773 00ee B3F5007F 		cmp	r3, #512
 6774 00f2 28BF     		it	cs
 6775 00f4 4FF40073 		movcs	r3, #512
2451:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6776              		.loc 1 2451 46 view .LVU2400
 6777 00f8 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6778              	.L409:
2453:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RsvdAreaSize = FS_FAT_DFLT_RSVD_SEC_CNT_FAT12;
 6779              		.loc 1 2453 18 is_stmt 1 view .LVU2401
2453:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RsvdAreaSize = FS_FAT_DFLT_RSVD_SEC_CNT_FAT12;
 6780              		.loc 1 2453 21 is_stmt 0 view .LVU2402
 6781 00fc 002F     		cmp	r7, #0
 6782 00fe BBD1     		bne	.L402
2454:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting FAT rsvd area size to default: %d.\r\n
 6783              		.loc 1 2454 22 is_stmt 1 view .LVU2403
2454:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting FAT rsvd area size to default: %d.\r\n
 6784              		.loc 1 2454 43 is_stmt 0 view .LVU2404
 6785 0100 0123     		movs	r3, #1
 6786 0102 0A93     		str	r3, [sp, #40]
 6787 0104 B8E7     		b	.L402
 6788              	.L406:
2463:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RootDirEntryCnt = (CPU_INT16U)DEF_MIN(512u, 1u + (size / 2u));
 6789              		.loc 1 2463 18 is_stmt 1 view .LVU2405
2463:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RootDirEntryCnt = (CPU_INT16U)DEF_MIN(512u, 1u + (size / 2u));
 6790              		.loc 1 2463 21 is_stmt 0 view .LVU2406
 6791 0106 BCF1000F 		cmp	ip, #0
 6792 010a 0AD1     		bne	.L410
2464:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6793              		.loc 1 2464 22 is_stmt 1 view .LVU2407
2464:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6794              		.loc 1 2464 60 is_stmt 0 view .LVU2408
 6795 010c 4FEA5803 		lsr	r3, r8, #1
 6796 0110 5A1C     		adds	r2, r3, #1
2464:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6797              		.loc 1 2464 48 view .LVU2409
 6798 0112 B2F5007F 		cmp	r2, #512
ARM GAS  /tmp/ccazZ5Hl.s 			page 266


 6799 0116 09D8     		bhi	.L445
2464:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6800              		.loc 1 2464 60 discriminator 1 view .LVU2410
 6801 0118 9BB2     		uxth	r3, r3
2464:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6802              		.loc 1 2464 48 discriminator 1 view .LVU2411
 6803 011a 0133     		adds	r3, r3, #1
 6804 011c 9BB2     		uxth	r3, r3
 6805              	.L411:
2464:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6806              		.loc 1 2464 46 discriminator 4 view .LVU2412
 6807 011e ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6808              	.L410:
2466:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RsvdAreaSize = FS_FAT_DFLT_RSVD_SEC_CNT_FAT16;
 6809              		.loc 1 2466 18 is_stmt 1 view .LVU2413
2466:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RsvdAreaSize = FS_FAT_DFLT_RSVD_SEC_CNT_FAT16;
 6810              		.loc 1 2466 21 is_stmt 0 view .LVU2414
 6811 0122 002F     		cmp	r7, #0
 6812 0124 A8D1     		bne	.L402
2467:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting FAT rsvd area size to default: %d.\r\n
 6813              		.loc 1 2467 22 is_stmt 1 view .LVU2415
2467:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting FAT rsvd area size to default: %d.\r\n
 6814              		.loc 1 2467 43 is_stmt 0 view .LVU2416
 6815 0126 0123     		movs	r3, #1
 6816 0128 0A93     		str	r3, [sp, #40]
 6817 012a A5E7     		b	.L402
 6818              	.L445:
2464:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6819              		.loc 1 2464 48 view .LVU2417
 6820 012c 4FF40073 		mov	r3, #512
 6821 0130 F5E7     		b	.L411
 6822              	.L407:
2476:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RootDirEntryCnt  = 0u;
 6823              		.loc 1 2476 18 is_stmt 1 view .LVU2418
2476:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RootDirEntryCnt  = 0u;
 6824              		.loc 1 2476 21 is_stmt 0 view .LVU2419
 6825 0132 BCF1000F 		cmp	ip, #0
 6826 0136 02D0     		beq	.L412
2477:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting root dir entry cnt to 0 for FAT32.\r\n
 6827              		.loc 1 2477 22 is_stmt 1 view .LVU2420
2477:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting root dir entry cnt to 0 for FAT32.\r\n
 6828              		.loc 1 2477 47 is_stmt 0 view .LVU2421
 6829 0138 0023     		movs	r3, #0
 6830 013a ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6831              	.L412:
2478:rtos/uC-FS/FAT/fs_fat.c ****                  }
 6832              		.loc 1 2478 103 is_stmt 1 view .LVU2422
2480:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RsvdAreaSize = FS_FAT_DFLT_RSVD_SEC_CNT_FAT32;
 6833              		.loc 1 2480 18 view .LVU2423
2480:rtos/uC-FS/FAT/fs_fat.c ****                      sys_cfg.RsvdAreaSize = FS_FAT_DFLT_RSVD_SEC_CNT_FAT32;
 6834              		.loc 1 2480 21 is_stmt 0 view .LVU2424
 6835 013e 17B9     		cbnz	r7, .L413
2481:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting FAT rsvd area size to default: %d.\r\n
 6836              		.loc 1 2481 22 is_stmt 1 view .LVU2425
2481:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_VolFmt(): Setting FAT rsvd area size to default: %d.\r\n
 6837              		.loc 1 2481 43 is_stmt 0 view .LVU2426
 6838 0140 2023     		movs	r3, #32
ARM GAS  /tmp/ccazZ5Hl.s 			page 267


 6839 0142 0A93     		str	r3, [sp, #40]
2482:rtos/uC-FS/FAT/fs_fat.c ****                  } else if (sys_cfg.RsvdAreaSize < FS_FAT_DFLT_BKBOOTSEC_SEC_NBR + 1u) {
 6840              		.loc 1 2482 135 is_stmt 1 view .LVU2427
 6841 0144 98E7     		b	.L402
 6842              	.L413:
2483:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Make sure there is enough room f
 6843              		.loc 1 2483 25 view .LVU2428
2483:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Make sure there is enough room f
 6844              		.loc 1 2483 28 is_stmt 0 view .LVU2429
 6845 0146 062F     		cmp	r7, #6
 6846 0148 96D8     		bhi	.L402
2485:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_VOL_INVALID_SYS;
 6847              		.loc 1 2485 120 is_stmt 1 view .LVU2430
2486:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 6848              		.loc 1 2486 21 view .LVU2431
2486:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 6849              		.loc 1 2486 28 is_stmt 0 view .LVU2432
 6850 014a 40F27F53 		movw	r3, #1407
 6851 014e 3380     		strh	r3, [r6]	@ movhi
2487:rtos/uC-FS/FAT/fs_fat.c ****                  } else {
 6852              		.loc 1 2487 22 is_stmt 1 view .LVU2433
 6853 0150 86E7     		b	.L398
 6854              	.LVL657:
 6855              	.L453:
2505:rtos/uC-FS/FAT/fs_fat.c ****         return;
 6856              		.loc 1 2505 8 view .LVU2434
2505:rtos/uC-FS/FAT/fs_fat.c ****         return;
 6857              		.loc 1 2505 15 is_stmt 0 view .LVU2435
 6858 0152 6423     		movs	r3, #100
 6859 0154 3380     		strh	r3, [r6]	@ movhi
2506:rtos/uC-FS/FAT/fs_fat.c ****     }
 6860              		.loc 1 2506 9 is_stmt 1 view .LVU2436
 6861 0156 83E7     		b	.L398
 6862              	.LVL658:
 6863              	.L454:
2514:rtos/uC-FS/FAT/fs_fat.c ****         return;
 6864              		.loc 1 2514 9 view .LVU2437
 6865 0158 4846     		mov	r0, r9
 6866 015a FFF7FEFF 		bl	FSBuf_Free
 6867              	.LVL659:
2515:rtos/uC-FS/FAT/fs_fat.c ****     }
 6868              		.loc 1 2515 9 view .LVU2438
 6869 015e 7FE7     		b	.L398
 6870              	.LVL660:
 6871              	.L455:
2520:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_VOL_INVALID_SYS;
 6872              		.loc 1 2520 68 view .LVU2439
2521:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 6873              		.loc 1 2521 8 view .LVU2440
2521:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Free(p_buf);
 6874              		.loc 1 2521 15 is_stmt 0 view .LVU2441
 6875 0160 40F27F53 		movw	r3, #1407
 6876 0164 3380     		strh	r3, [r6]	@ movhi
2522:rtos/uC-FS/FAT/fs_fat.c ****         return;
 6877              		.loc 1 2522 9 is_stmt 1 view .LVU2442
 6878 0166 4846     		mov	r0, r9
 6879 0168 FFF7FEFF 		bl	FSBuf_Free
ARM GAS  /tmp/ccazZ5Hl.s 			page 268


 6880              	.LVL661:
2523:rtos/uC-FS/FAT/fs_fat.c ****     }
 6881              		.loc 1 2523 9 view .LVU2443
 6882 016c 78E7     		b	.L398
 6883              	.L417:
2529:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT16_E
 6884              		.loc 1 2529 14 view .LVU2444
2529:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT16_E
 6885              		.loc 1 2529 44 is_stmt 0 view .LVU2445
 6886 016e 059A     		ldr	r2, [sp, #20]
 6887 0170 A8EB0203 		sub	r3, r8, r2
2529:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT16_E
 6888              		.loc 1 2529 61 view .LVU2446
 6889 0174 A3EB0A03 		sub	r3, r3, r10
2530:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 6890              		.loc 1 2530 61 view .LVU2447
 6891 0178 099A     		ldr	r2, [sp, #36]
2530:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 6892              		.loc 1 2530 141 view .LVU2448
 6893 017a 9DF82F10 		ldrb	r1, [sp, #47]	@ zero_extendqisi2
2530:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 6894              		.loc 1 2530 116 view .LVU2449
 6895 017e 4800     		lsls	r0, r1, #1
2530:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 6896              		.loc 1 2530 83 view .LVU2450
 6897 0180 04FB0200 		mla	r0, r4, r2, r0
2530:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 6898              		.loc 1 2530 33 view .LVU2451
 6899 0184 B3FBF0F3 		udiv	r3, r3, r0
2529:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT16_E
 6900              		.loc 1 2529 33 view .LVU2452
 6901 0188 03FB0440 		mla	r0, r3, r4, r4
 6902 018c 0790     		str	r0, [sp, #28]
 6903              	.LVL662:
2532:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT16_ENTRY_NBR_OCTETS);
 6904              		.loc 1 2532 14 is_stmt 1 view .LVU2453
2532:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT16_ENTRY_NBR_OCTETS);
 6905              		.loc 1 2532 58 is_stmt 0 view .LVU2454
 6906 018e 6708     		lsrs	r7, r4, #1
2532:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT16_ENTRY_NBR_OCTETS);
 6907              		.loc 1 2532 46 view .LVU2455
 6908 0190 00EB5403 		add	r3, r0, r4, lsr #1
2532:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT16_ENTRY_NBR_OCTETS);
 6909              		.loc 1 2532 91 view .LVU2456
 6910 0194 013B     		subs	r3, r3, #1
2532:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT16_ENTRY_NBR_OCTETS);
 6911              		.loc 1 2532 33 view .LVU2457
 6912 0196 B3FBF7F7 		udiv	r7, r3, r7
 6913              	.LVL663:
2542:rtos/uC-FS/FAT/fs_fat.c ****              fat1_sec_start     = rsvd_sec_start + sys_cfg.RsvdAreaSize;
 6914              		.loc 1 2542 14 is_stmt 1 view .LVU2458
2543:rtos/uC-FS/FAT/fs_fat.c ****              root_dir_sec_start = fat1_sec_start + (fat_size * sys_cfg.NbrFATs);
 6915              		.loc 1 2543 14 view .LVU2459
2544:rtos/uC-FS/FAT/fs_fat.c **** 
 6916              		.loc 1 2544 14 view .LVU2460
2544:rtos/uC-FS/FAT/fs_fat.c **** 
 6917              		.loc 1 2544 33 is_stmt 0 view .LVU2461
ARM GAS  /tmp/ccazZ5Hl.s 			page 269


 6918 019a 07FB01A1 		mla	r1, r7, r1, r10
 6919 019e 0691     		str	r1, [sp, #24]
 6920              	.LVL664:
2547:rtos/uC-FS/FAT/fs_fat.c ****              clus_number        = DEF_MIN((size - data_sec_start) / sys_cfg.ClusSize, (fat_size * s
 6921              		.loc 1 2547 14 is_stmt 1 view .LVU2462
2547:rtos/uC-FS/FAT/fs_fat.c ****              clus_number        = DEF_MIN((size - data_sec_start) / sys_cfg.ClusSize, (fat_size * s
 6922              		.loc 1 2547 33 is_stmt 0 view .LVU2463
 6923 01a0 059B     		ldr	r3, [sp, #20]
 6924 01a2 5918     		adds	r1, r3, r1
 6925              	.LVL665:
2548:rtos/uC-FS/FAT/fs_fat.c **** 
 6926              		.loc 1 2548 14 is_stmt 1 view .LVU2464
2548:rtos/uC-FS/FAT/fs_fat.c **** 
 6927              		.loc 1 2548 35 is_stmt 0 view .LVU2465
 6928 01a4 07FB04F3 		mul	r3, r7, r4
 6929 01a8 5B08     		lsrs	r3, r3, #1
 6930 01aa A8EB0100 		sub	r0, r8, r1
 6931              	.LVL666:
2548:rtos/uC-FS/FAT/fs_fat.c **** 
 6932              		.loc 1 2548 35 view .LVU2466
 6933 01ae B0FBF2F2 		udiv	r2, r0, r2
2548:rtos/uC-FS/FAT/fs_fat.c **** 
 6934              		.loc 1 2548 33 view .LVU2467
 6935 01b2 9342     		cmp	r3, r2
 6936 01b4 28BF     		it	cs
 6937 01b6 1346     		movcs	r3, r2
 6938              	.LVL667:
2550:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 6939              		.loc 1 2550 14 is_stmt 1 view .LVU2468
2550:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 6940              		.loc 1 2550 16 is_stmt 0 view .LVU2469
 6941 01b8 8845     		cmp	r8, r1
 6942 01ba 2AD3     		bcc	.L457
2557:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 6943              		.loc 1 2557 14 is_stmt 1 view .LVU2470
2557:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 6944              		.loc 1 2557 17 is_stmt 0 view .LVU2471
 6945 01bc 40F6F472 		movw	r2, #4084
 6946 01c0 9342     		cmp	r3, r2
 6947 01c2 2DD9     		bls	.L458
2562:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 6948              		.loc 1 2562 21 is_stmt 1 view .LVU2472
2562:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 6949              		.loc 1 2562 24 is_stmt 0 view .LVU2473
 6950 01c4 4FF6F472 		movw	r2, #65524
 6951 01c8 9342     		cmp	r3, r2
 6952 01ca 30D8     		bhi	.L459
2567:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): clus number within unrecommended margin: %d.\r\n"
 6953              		.loc 1 2567 21 is_stmt 1 view .LVU2474
2572:rtos/uC-FS/FAT/fs_fat.c ****              }
 6954              		.loc 1 2572 18 view .LVU2475
2585:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_MakeBootSec(p_buf->DataPtr,
 6955              		.loc 1 2585 14 view .LVU2476
 6956 01cc 2146     		mov	r1, r4
 6957              	.LVL668:
2585:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_MakeBootSec(p_buf->DataPtr,
 6958              		.loc 1 2585 14 is_stmt 0 view .LVU2477
ARM GAS  /tmp/ccazZ5Hl.s 			page 270


 6959 01ce D9F81000 		ldr	r0, [r9, #16]
 6960 01d2 FFF7FEFF 		bl	Mem_Clr
 6961              	.LVL669:
2586:rtos/uC-FS/FAT/fs_fat.c ****                                &sys_cfg,
 6962              		.loc 1 2586 14 is_stmt 1 view .LVU2478
 6963 01d6 D9F81000 		ldr	r0, [r9, #16]
 6964 01da 2B6A     		ldr	r3, [r5, #32]
 6965 01dc 0193     		str	r3, [sp, #4]
 6966 01de 0097     		str	r7, [sp]
 6967 01e0 4346     		mov	r3, r8
 6968 01e2 2246     		mov	r2, r4
 6969 01e4 09A9     		add	r1, sp, #36
 6970 01e6 FFF7FEFF 		bl	FS_FAT_MakeBootSec
 6971              	.LVL670:
2593:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf->DataPtr,
 6972              		.loc 1 2593 14 view .LVU2479
 6973 01ea D9F81010 		ldr	r1, [r9, #16]
 6974 01ee 0196     		str	r6, [sp, #4]
 6975 01f0 0123     		movs	r3, #1
 6976 01f2 0093     		str	r3, [sp]
 6977 01f4 0022     		movs	r2, #0
 6978 01f6 2846     		mov	r0, r5
 6979 01f8 FFF7FEFF 		bl	FSVol_WrLockedEx
 6980              	.LVL671:
2600:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
 6981              		.loc 1 2600 14 view .LVU2480
2600:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
 6982              		.loc 1 2600 18 is_stmt 0 view .LVU2481
 6983 01fc 3388     		ldrh	r3, [r6]
2600:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
 6984              		.loc 1 2600 17 view .LVU2482
 6985 01fe 002B     		cmp	r3, #0
 6986 0200 00F0D880 		beq	.L424
2601:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 6987              		.loc 1 2601 18 is_stmt 1 view .LVU2483
2601:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 6988              		.loc 1 2601 26 is_stmt 0 view .LVU2484
 6989 0204 4FF49673 		mov	r3, #300
 6990 0208 3380     		strh	r3, [r6]	@ movhi
2602:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 6991              		.loc 1 2602 19 is_stmt 1 view .LVU2485
 6992 020a 4846     		mov	r0, r9
 6993 020c FFF7FEFF 		bl	FSBuf_Free
 6994              	.LVL672:
2603:rtos/uC-FS/FAT/fs_fat.c ****              }
 6995              		.loc 1 2603 19 view .LVU2486
 6996 0210 26E7     		b	.L398
 6997              	.LVL673:
 6998              	.L457:
2551:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_VOL_INVALID_SYS;
 6999              		.loc 1 2551 94 view .LVU2487
2552:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 7000              		.loc 1 2552 17 view .LVU2488
2552:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 7001              		.loc 1 2552 24 is_stmt 0 view .LVU2489
 7002 0212 40F27F53 		movw	r3, #1407
 7003              	.LVL674:
ARM GAS  /tmp/ccazZ5Hl.s 			page 271


2552:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 7004              		.loc 1 2552 24 view .LVU2490
 7005 0216 3380     		strh	r3, [r6]	@ movhi
2553:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 7006              		.loc 1 2553 18 is_stmt 1 view .LVU2491
 7007 0218 4846     		mov	r0, r9
 7008 021a FFF7FEFF 		bl	FSBuf_Free
 7009              	.LVL675:
2554:rtos/uC-FS/FAT/fs_fat.c ****              }
 7010              		.loc 1 2554 18 view .LVU2492
 7011 021e 1FE7     		b	.L398
 7012              	.LVL676:
 7013              	.L458:
2558:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_VOL_INVALID_SYS;
 7014              		.loc 1 2558 95 view .LVU2493
2559:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7015              		.loc 1 2559 18 view .LVU2494
2559:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7016              		.loc 1 2559 25 is_stmt 0 view .LVU2495
 7017 0220 40F27F53 		movw	r3, #1407
 7018              	.LVL677:
2559:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7019              		.loc 1 2559 25 view .LVU2496
 7020 0224 3380     		strh	r3, [r6]	@ movhi
 7021              	.LVL678:
2560:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7022              		.loc 1 2560 19 is_stmt 1 view .LVU2497
 7023 0226 4846     		mov	r0, r9
2560:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7024              		.loc 1 2560 19 is_stmt 0 view .LVU2498
 7025 0228 FFF7FEFF 		bl	FSBuf_Free
 7026              	.LVL679:
2561:rtos/uC-FS/FAT/fs_fat.c ****              } else if (clus_number > FS_FAT_MAX_NBR_CLUS_FAT16) {
 7027              		.loc 1 2561 19 is_stmt 1 view .LVU2499
 7028 022c 18E7     		b	.L398
 7029              	.LVL680:
 7030              	.L459:
2563:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_VOL_INVALID_SYS;
 7031              		.loc 1 2563 95 view .LVU2500
2564:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7032              		.loc 1 2564 18 view .LVU2501
2564:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7033              		.loc 1 2564 25 is_stmt 0 view .LVU2502
 7034 022e 40F27F53 		movw	r3, #1407
 7035              	.LVL681:
2564:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7036              		.loc 1 2564 25 view .LVU2503
 7037 0232 3380     		strh	r3, [r6]	@ movhi
 7038              	.LVL682:
2565:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7039              		.loc 1 2565 19 is_stmt 1 view .LVU2504
 7040 0234 4846     		mov	r0, r9
2565:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7041              		.loc 1 2565 19 is_stmt 0 view .LVU2505
 7042 0236 FFF7FEFF 		bl	FSBuf_Free
 7043              	.LVL683:
2566:rtos/uC-FS/FAT/fs_fat.c ****              } else if (clus_number <= (FS_FAT_MAX_NBR_CLUS_FAT12 + FS_FAT_CLUS_NBR_TOLERANCE)) {
ARM GAS  /tmp/ccazZ5Hl.s 			page 272


 7044              		.loc 1 2566 19 is_stmt 1 view .LVU2506
 7045 023a 11E7     		b	.L398
 7046              	.LVL684:
 7047              	.L418:
2612:rtos/uC-FS/FAT/fs_fat.c ****                                 /  ((sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT32_ENTRY_NBR_OCTETS 
 7048              		.loc 1 2612 14 view .LVU2507
2612:rtos/uC-FS/FAT/fs_fat.c ****                                 /  ((sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT32_ENTRY_NBR_OCTETS 
 7049              		.loc 1 2612 44 is_stmt 0 view .LVU2508
 7050 023c 059A     		ldr	r2, [sp, #20]
 7051 023e A8EB0203 		sub	r3, r8, r2
2612:rtos/uC-FS/FAT/fs_fat.c ****                                 /  ((sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT32_ENTRY_NBR_OCTETS 
 7052              		.loc 1 2612 61 view .LVU2509
 7053 0242 A3EB0A03 		sub	r3, r3, r10
2613:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7054              		.loc 1 2613 45 view .LVU2510
 7055 0246 099A     		ldr	r2, [sp, #36]
2613:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7056              		.loc 1 2613 125 view .LVU2511
 7057 0248 9DF82F10 		ldrb	r1, [sp, #47]	@ zero_extendqisi2
2613:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7058              		.loc 1 2613 100 view .LVU2512
 7059 024c 8800     		lsls	r0, r1, #2
2613:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7060              		.loc 1 2613 67 view .LVU2513
 7061 024e 04FB0200 		mla	r0, r4, r2, r0
2613:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7062              		.loc 1 2613 33 view .LVU2514
 7063 0252 B3FBF0F3 		udiv	r3, r3, r0
2612:rtos/uC-FS/FAT/fs_fat.c ****                                 /  ((sys_cfg.ClusSize * sec_size) + (FS_FAT_FAT32_ENTRY_NBR_OCTETS 
 7064              		.loc 1 2612 33 view .LVU2515
 7065 0256 03FB0440 		mla	r0, r3, r4, r4
 7066 025a 0790     		str	r0, [sp, #28]
 7067              	.LVL685:
2615:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT32_ENTRY_NBR_OCTETS);
 7068              		.loc 1 2615 14 is_stmt 1 view .LVU2516
2615:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT32_ENTRY_NBR_OCTETS);
 7069              		.loc 1 2615 58 is_stmt 0 view .LVU2517
 7070 025c A708     		lsrs	r7, r4, #2
2615:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT32_ENTRY_NBR_OCTETS);
 7071              		.loc 1 2615 46 view .LVU2518
 7072 025e 00EB9403 		add	r3, r0, r4, lsr #2
2615:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT32_ENTRY_NBR_OCTETS);
 7073              		.loc 1 2615 91 view .LVU2519
 7074 0262 013B     		subs	r3, r3, #1
2615:rtos/uC-FS/FAT/fs_fat.c ****                                 / (sec_size / FS_FAT_FAT32_ENTRY_NBR_OCTETS);
 7075              		.loc 1 2615 33 view .LVU2520
 7076 0264 B3FBF7F7 		udiv	r7, r3, r7
 7077              	.LVL686:
2623:rtos/uC-FS/FAT/fs_fat.c **** 
 7078              		.loc 1 2623 14 is_stmt 1 view .LVU2521
2626:rtos/uC-FS/FAT/fs_fat.c ****              fat1_sec_start     = rsvd_sec_start + sys_cfg.RsvdAreaSize;
 7079              		.loc 1 2626 14 view .LVU2522
2627:rtos/uC-FS/FAT/fs_fat.c ****              root_dir_sec_start = fat1_sec_start + (fat_size * sys_cfg.NbrFATs);
 7080              		.loc 1 2627 14 view .LVU2523
2628:rtos/uC-FS/FAT/fs_fat.c **** 
 7081              		.loc 1 2628 14 view .LVU2524
2628:rtos/uC-FS/FAT/fs_fat.c **** 
ARM GAS  /tmp/ccazZ5Hl.s 			page 273


 7082              		.loc 1 2628 33 is_stmt 0 view .LVU2525
 7083 0268 07FB01A1 		mla	r1, r7, r1, r10
 7084              	.LVL687:
2628:rtos/uC-FS/FAT/fs_fat.c **** 
 7085              		.loc 1 2628 33 view .LVU2526
 7086 026c 0691     		str	r1, [sp, #24]
 7087              	.LVL688:
2630:rtos/uC-FS/FAT/fs_fat.c ****              clus_number        = DEF_MIN((size - data_sec_start) / sys_cfg.ClusSize, (fat_size * s
 7088              		.loc 1 2630 14 is_stmt 1 view .LVU2527
2630:rtos/uC-FS/FAT/fs_fat.c ****              clus_number        = DEF_MIN((size - data_sec_start) / sys_cfg.ClusSize, (fat_size * s
 7089              		.loc 1 2630 33 is_stmt 0 view .LVU2528
 7090 026e 059B     		ldr	r3, [sp, #20]
 7091 0270 5918     		adds	r1, r3, r1
 7092              	.LVL689:
2631:rtos/uC-FS/FAT/fs_fat.c **** 
 7093              		.loc 1 2631 14 is_stmt 1 view .LVU2529
2631:rtos/uC-FS/FAT/fs_fat.c **** 
 7094              		.loc 1 2631 35 is_stmt 0 view .LVU2530
 7095 0272 07FB04F3 		mul	r3, r7, r4
 7096 0276 9B08     		lsrs	r3, r3, #2
 7097 0278 A8EB0100 		sub	r0, r8, r1
 7098              	.LVL690:
2631:rtos/uC-FS/FAT/fs_fat.c **** 
 7099              		.loc 1 2631 35 view .LVU2531
 7100 027c B0FBF2F2 		udiv	r2, r0, r2
2631:rtos/uC-FS/FAT/fs_fat.c **** 
 7101              		.loc 1 2631 33 view .LVU2532
 7102 0280 9342     		cmp	r3, r2
 7103 0282 28BF     		it	cs
 7104 0284 1346     		movcs	r3, r2
 7105              	.LVL691:
2633:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 7106              		.loc 1 2633 14 is_stmt 1 view .LVU2533
2633:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 7107              		.loc 1 2633 16 is_stmt 0 view .LVU2534
 7108 0286 8845     		cmp	r8, r1
 7109 0288 30D3     		bcc	.L460
2640:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 7110              		.loc 1 2640 14 is_stmt 1 view .LVU2535
2640:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 7111              		.loc 1 2640 17 is_stmt 0 view .LVU2536
 7112 028a 4FF6F472 		movw	r2, #65524
 7113 028e 9342     		cmp	r3, r2
 7114 0290 33D9     		bls	.L461
2645:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): clus number within unrecommended margin: %d.\r\n"
 7115              		.loc 1 2645 21 is_stmt 1 view .LVU2537
2648:rtos/uC-FS/FAT/fs_fat.c ****              }
 7116              		.loc 1 2648 18 view .LVU2538
2661:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_MakeBootSec(p_buf->DataPtr,
 7117              		.loc 1 2661 14 view .LVU2539
 7118 0292 2146     		mov	r1, r4
 7119              	.LVL692:
2661:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_MakeBootSec(p_buf->DataPtr,
 7120              		.loc 1 2661 14 is_stmt 0 view .LVU2540
 7121 0294 D9F81000 		ldr	r0, [r9, #16]
 7122 0298 FFF7FEFF 		bl	Mem_Clr
 7123              	.LVL693:
ARM GAS  /tmp/ccazZ5Hl.s 			page 274


2662:rtos/uC-FS/FAT/fs_fat.c ****                                &sys_cfg,
 7124              		.loc 1 2662 14 is_stmt 1 view .LVU2541
 7125 029c D9F81000 		ldr	r0, [r9, #16]
 7126 02a0 2B6A     		ldr	r3, [r5, #32]
 7127 02a2 0193     		str	r3, [sp, #4]
 7128 02a4 0097     		str	r7, [sp]
 7129 02a6 4346     		mov	r3, r8
 7130 02a8 2246     		mov	r2, r4
 7131 02aa 09A9     		add	r1, sp, #36
 7132 02ac FFF7FEFF 		bl	FS_FAT_MakeBootSec
 7133              	.LVL694:
2669:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf->DataPtr,
 7134              		.loc 1 2669 14 view .LVU2542
 7135 02b0 D9F81010 		ldr	r1, [r9, #16]
 7136 02b4 0196     		str	r6, [sp, #4]
 7137 02b6 0123     		movs	r3, #1
 7138 02b8 0093     		str	r3, [sp]
 7139 02ba 0022     		movs	r2, #0
 7140 02bc 2846     		mov	r0, r5
 7141 02be FFF7FEFF 		bl	FSVol_WrLockedEx
 7142              	.LVL695:
2676:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
 7143              		.loc 1 2676 14 view .LVU2543
2676:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
 7144              		.loc 1 2676 18 is_stmt 0 view .LVU2544
 7145 02c2 3388     		ldrh	r3, [r6]
2676:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
 7146              		.loc 1 2676 17 view .LVU2545
 7147 02c4 03BB     		cbnz	r3, .L462
2682:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf->DataPtr,
 7148              		.loc 1 2682 14 is_stmt 1 view .LVU2546
 7149 02c6 D9F81010 		ldr	r1, [r9, #16]
 7150 02ca 0196     		str	r6, [sp, #4]
 7151 02cc 0123     		movs	r3, #1
 7152 02ce 0093     		str	r3, [sp]
 7153 02d0 0622     		movs	r2, #6
 7154 02d2 2846     		mov	r0, r5
 7155 02d4 FFF7FEFF 		bl	FSVol_WrLockedEx
 7156              	.LVL696:
2689:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
 7157              		.loc 1 2689 14 view .LVU2547
2689:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
 7158              		.loc 1 2689 18 is_stmt 0 view .LVU2548
 7159 02d8 3388     		ldrh	r3, [r6]
2689:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err  = FS_ERR_DEV;
 7160              		.loc 1 2689 17 view .LVU2549
 7161 02da 002B     		cmp	r3, #0
 7162 02dc 6AD0     		beq	.L424
2690:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7163              		.loc 1 2690 18 is_stmt 1 view .LVU2550
2690:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7164              		.loc 1 2690 26 is_stmt 0 view .LVU2551
 7165 02de 4FF49673 		mov	r3, #300
 7166 02e2 3380     		strh	r3, [r6]	@ movhi
2691:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7167              		.loc 1 2691 19 is_stmt 1 view .LVU2552
 7168 02e4 4846     		mov	r0, r9
ARM GAS  /tmp/ccazZ5Hl.s 			page 275


 7169 02e6 FFF7FEFF 		bl	FSBuf_Free
 7170              	.LVL697:
2692:rtos/uC-FS/FAT/fs_fat.c ****              }
 7171              		.loc 1 2692 19 view .LVU2553
 7172 02ea B9E6     		b	.L398
 7173              	.LVL698:
 7174              	.L460:
2634:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_VOL_INVALID_SYS;
 7175              		.loc 1 2634 94 view .LVU2554
2635:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 7176              		.loc 1 2635 17 view .LVU2555
2635:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 7177              		.loc 1 2635 24 is_stmt 0 view .LVU2556
 7178 02ec 40F27F53 		movw	r3, #1407
 7179              	.LVL699:
2635:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 7180              		.loc 1 2635 24 view .LVU2557
 7181 02f0 3380     		strh	r3, [r6]	@ movhi
2636:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 7182              		.loc 1 2636 18 is_stmt 1 view .LVU2558
 7183 02f2 4846     		mov	r0, r9
 7184 02f4 FFF7FEFF 		bl	FSBuf_Free
 7185              	.LVL700:
2637:rtos/uC-FS/FAT/fs_fat.c ****              }
 7186              		.loc 1 2637 18 view .LVU2559
 7187 02f8 B2E6     		b	.L398
 7188              	.LVL701:
 7189              	.L461:
2641:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_VOL_INVALID_SYS;
 7190              		.loc 1 2641 95 view .LVU2560
2642:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7191              		.loc 1 2642 18 view .LVU2561
2642:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7192              		.loc 1 2642 25 is_stmt 0 view .LVU2562
 7193 02fa 40F27F53 		movw	r3, #1407
 7194              	.LVL702:
2642:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7195              		.loc 1 2642 25 view .LVU2563
 7196 02fe 3380     		strh	r3, [r6]	@ movhi
 7197              	.LVL703:
2643:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7198              		.loc 1 2643 19 is_stmt 1 view .LVU2564
 7199 0300 4846     		mov	r0, r9
2643:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7200              		.loc 1 2643 19 is_stmt 0 view .LVU2565
 7201 0302 FFF7FEFF 		bl	FSBuf_Free
 7202              	.LVL704:
2644:rtos/uC-FS/FAT/fs_fat.c ****              } else if (clus_number <= (FS_FAT_MAX_NBR_CLUS_FAT16 + FS_FAT_CLUS_NBR_TOLERANCE)) {
 7203              		.loc 1 2644 19 is_stmt 1 view .LVU2566
 7204 0306 ABE6     		b	.L398
 7205              	.L462:
2677:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7206              		.loc 1 2677 18 view .LVU2567
2677:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7207              		.loc 1 2677 26 is_stmt 0 view .LVU2568
 7208 0308 4FF49673 		mov	r3, #300
 7209 030c 3380     		strh	r3, [r6]	@ movhi
ARM GAS  /tmp/ccazZ5Hl.s 			page 276


2678:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7210              		.loc 1 2678 19 is_stmt 1 view .LVU2569
 7211 030e 4846     		mov	r0, r9
 7212 0310 FFF7FEFF 		bl	FSBuf_Free
 7213              	.LVL705:
2679:rtos/uC-FS/FAT/fs_fat.c ****              }
 7214              		.loc 1 2679 19 view .LVU2570
 7215 0314 A4E6     		b	.L398
 7216              	.LVL706:
 7217              	.L456:
2700:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + ((FS_FAT_SEC_NB
 7218              		.loc 1 2700 14 view .LVU2571
2700:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + ((FS_FAT_SEC_NB
 7219              		.loc 1 2700 44 is_stmt 0 view .LVU2572
 7220 0316 059A     		ldr	r2, [sp, #20]
 7221 0318 A8EB0203 		sub	r3, r8, r2
2700:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + ((FS_FAT_SEC_NB
 7222              		.loc 1 2700 61 view .LVU2573
 7223 031c A3EB0A03 		sub	r3, r3, r10
2701:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7224              		.loc 1 2701 61 view .LVU2574
 7225 0320 0999     		ldr	r1, [sp, #36]
2701:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7226              		.loc 1 2701 109 view .LVU2575
 7227 0322 9DF82F20 		ldrb	r2, [sp, #47]	@ zero_extendqisi2
2701:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7228              		.loc 1 2701 118 view .LVU2576
 7229 0326 02EB5200 		add	r0, r2, r2, lsr #1
2701:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7230              		.loc 1 2701 83 view .LVU2577
 7231 032a 04FB0100 		mla	r0, r4, r1, r0
2701:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Calc fat sec cnt (see Note #5). 
 7232              		.loc 1 2701 33 view .LVU2578
 7233 032e B3FBF0F3 		udiv	r3, r3, r0
2700:rtos/uC-FS/FAT/fs_fat.c ****                                 /  (((FS_FAT_SEC_NBR)sys_cfg.ClusSize * sec_size) + ((FS_FAT_SEC_NB
 7234              		.loc 1 2700 33 view .LVU2579
 7235 0332 03FB0447 		mla	r7, r3, r4, r4
 7236 0336 0797     		str	r7, [sp, #28]
 7237              	.LVL707:
2703:rtos/uC-FS/FAT/fs_fat.c ****                                 / (((sec_size * 2u) + 1u) / 3u);
 7238              		.loc 1 2703 14 is_stmt 1 view .LVU2580
2703:rtos/uC-FS/FAT/fs_fat.c ****                                 / (((sec_size * 2u) + 1u) / 3u);
 7239              		.loc 1 2703 60 is_stmt 0 view .LVU2581
 7240 0338 6300     		lsls	r3, r4, #1
2703:rtos/uC-FS/FAT/fs_fat.c ****                                 / (((sec_size * 2u) + 1u) / 3u);
 7241              		.loc 1 2703 66 view .LVU2582
 7242 033a 0133     		adds	r3, r3, #1
2703:rtos/uC-FS/FAT/fs_fat.c ****                                 / (((sec_size * 2u) + 1u) / 3u);
 7243              		.loc 1 2703 72 view .LVU2583
 7244 033c C748     		ldr	r0, .L474
 7245 033e A0FB03C3 		umull	ip, r3, r0, r3
 7246 0342 4FEA530C 		lsr	ip, r3, #1
2703:rtos/uC-FS/FAT/fs_fat.c ****                                 / (((sec_size * 2u) + 1u) / 3u);
 7247              		.loc 1 2703 46 view .LVU2584
 7248 0346 07EB5307 		add	r7, r7, r3, lsr #1
 7249              	.LVL708:
2703:rtos/uC-FS/FAT/fs_fat.c ****                                 / (((sec_size * 2u) + 1u) / 3u);
ARM GAS  /tmp/ccazZ5Hl.s 			page 277


 7250              		.loc 1 2703 78 view .LVU2585
 7251 034a 013F     		subs	r7, r7, #1
2703:rtos/uC-FS/FAT/fs_fat.c ****                                 / (((sec_size * 2u) + 1u) / 3u);
 7252              		.loc 1 2703 33 view .LVU2586
 7253 034c B7FBFCF7 		udiv	r7, r7, ip
 7254              	.LVL709:
2712:rtos/uC-FS/FAT/fs_fat.c ****              fat1_sec_start     = rsvd_sec_start + sys_cfg.RsvdAreaSize;
 7255              		.loc 1 2712 14 is_stmt 1 view .LVU2587
2713:rtos/uC-FS/FAT/fs_fat.c ****              root_dir_sec_start = fat1_sec_start + (fat_size * sys_cfg.NbrFATs);
 7256              		.loc 1 2713 14 view .LVU2588
2714:rtos/uC-FS/FAT/fs_fat.c **** 
 7257              		.loc 1 2714 14 view .LVU2589
2714:rtos/uC-FS/FAT/fs_fat.c **** 
 7258              		.loc 1 2714 33 is_stmt 0 view .LVU2590
 7259 0350 07FB02A2 		mla	r2, r7, r2, r10
 7260 0354 0692     		str	r2, [sp, #24]
 7261              	.LVL710:
2716:rtos/uC-FS/FAT/fs_fat.c ****              clus_number        = DEF_MIN((size - data_sec_start) / sys_cfg.ClusSize, (fat_size * s
 7262              		.loc 1 2716 14 is_stmt 1 view .LVU2591
2716:rtos/uC-FS/FAT/fs_fat.c ****              clus_number        = DEF_MIN((size - data_sec_start) / sys_cfg.ClusSize, (fat_size * s
 7263              		.loc 1 2716 33 is_stmt 0 view .LVU2592
 7264 0356 059B     		ldr	r3, [sp, #20]
 7265 0358 9A18     		adds	r2, r3, r2
 7266              	.LVL711:
2717:rtos/uC-FS/FAT/fs_fat.c **** 
 7267              		.loc 1 2717 14 is_stmt 1 view .LVU2593
2717:rtos/uC-FS/FAT/fs_fat.c **** 
 7268              		.loc 1 2717 35 is_stmt 0 view .LVU2594
 7269 035a 07FB04F3 		mul	r3, r7, r4
 7270 035e 5B00     		lsls	r3, r3, #1
 7271 0360 A0FB0330 		umull	r3, r0, r0, r3
 7272 0364 4008     		lsrs	r0, r0, #1
 7273 0366 A8EB0203 		sub	r3, r8, r2
 7274 036a B3FBF1F1 		udiv	r1, r3, r1
2717:rtos/uC-FS/FAT/fs_fat.c **** 
 7275              		.loc 1 2717 33 view .LVU2595
 7276 036e 8842     		cmp	r0, r1
 7277 0370 28BF     		it	cs
 7278 0372 0846     		movcs	r0, r1
 7279              	.LVL712:
2719:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 7280              		.loc 1 2719 14 is_stmt 1 view .LVU2596
2719:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 7281              		.loc 1 2719 16 is_stmt 0 view .LVU2597
 7282 0374 9045     		cmp	r8, r2
 7283 0376 37D3     		bcc	.L463
2726:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 7284              		.loc 1 2726 14 is_stmt 1 view .LVU2598
2726:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): Invalid clus number: %d.\r\n", clus_number));
 7285              		.loc 1 2726 17 is_stmt 0 view .LVU2599
 7286 0378 40F6F473 		movw	r3, #4084
 7287 037c 9842     		cmp	r0, r3
 7288 037e 3AD8     		bhi	.L464
2731:rtos/uC-FS/FAT/fs_fat.c ****                   FS_TRACE_DBG(("FS_FAT_VolFmt(): clus number within unrecommended margin: %d.\r\n"
 7289              		.loc 1 2731 21 is_stmt 1 view .LVU2600
2734:rtos/uC-FS/FAT/fs_fat.c ****              }
 7290              		.loc 1 2734 18 view .LVU2601
ARM GAS  /tmp/ccazZ5Hl.s 			page 278


2747:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_MakeBootSec(p_buf->DataPtr,
 7291              		.loc 1 2747 14 view .LVU2602
 7292 0380 2146     		mov	r1, r4
 7293 0382 D9F81000 		ldr	r0, [r9, #16]
 7294              	.LVL713:
2747:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_MakeBootSec(p_buf->DataPtr,
 7295              		.loc 1 2747 14 is_stmt 0 view .LVU2603
 7296 0386 FFF7FEFF 		bl	Mem_Clr
 7297              	.LVL714:
2748:rtos/uC-FS/FAT/fs_fat.c ****                                &sys_cfg,
 7298              		.loc 1 2748 14 is_stmt 1 view .LVU2604
 7299 038a D9F81000 		ldr	r0, [r9, #16]
 7300 038e 2B6A     		ldr	r3, [r5, #32]
 7301 0390 0193     		str	r3, [sp, #4]
 7302 0392 0097     		str	r7, [sp]
 7303 0394 4346     		mov	r3, r8
 7304 0396 2246     		mov	r2, r4
 7305 0398 09A9     		add	r1, sp, #36
 7306 039a FFF7FEFF 		bl	FS_FAT_MakeBootSec
 7307              	.LVL715:
2756:rtos/uC-FS/FAT/fs_fat.c ****                               p_buf->DataPtr,
 7308              		.loc 1 2756 14 view .LVU2605
 7309 039e D9F81010 		ldr	r1, [r9, #16]
 7310 03a2 0196     		str	r6, [sp, #4]
 7311 03a4 0123     		movs	r3, #1
 7312 03a6 0093     		str	r3, [sp]
 7313 03a8 0022     		movs	r2, #0
 7314 03aa 2846     		mov	r0, r5
 7315 03ac FFF7FEFF 		bl	FSVol_WrLockedEx
 7316              	.LVL716:
2763:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_DEV;
 7317              		.loc 1 2763 14 view .LVU2606
2763:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_DEV;
 7318              		.loc 1 2763 18 is_stmt 0 view .LVU2607
 7319 03b0 3388     		ldrh	r3, [r6]
2763:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_DEV;
 7320              		.loc 1 2763 17 view .LVU2608
 7321 03b2 3BBB     		cbnz	r3, .L465
 7322              	.LVL717:
 7323              	.L424:
2778:rtos/uC-FS/FAT/fs_fat.c ****     fat_sec_cur = fat1_sec_start;
 7324              		.loc 1 2778 5 is_stmt 1 view .LVU2609
2779:rtos/uC-FS/FAT/fs_fat.c ****     while (fat_ix < sys_cfg.NbrFATs) {                          /* Clr each FAT.                   
 7325              		.loc 1 2779 5 view .LVU2610
2780:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,
 7326              		.loc 1 2780 5 view .LVU2611
2779:rtos/uC-FS/FAT/fs_fat.c ****     while (fat_ix < sys_cfg.NbrFATs) {                          /* Clr each FAT.                   
 7327              		.loc 1 2779 17 is_stmt 0 view .LVU2612
 7328 03b4 D346     		mov	fp, r10
2778:rtos/uC-FS/FAT/fs_fat.c ****     fat_sec_cur = fat1_sec_start;
 7329              		.loc 1 2778 17 view .LVU2613
 7330 03b6 4FF00008 		mov	r8, #0
 7331              	.LVL718:
 7332              	.L430:
2780:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,
 7333              		.loc 1 2780 11 is_stmt 1 view .LVU2614
2780:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,
ARM GAS  /tmp/ccazZ5Hl.s 			page 279


 7334              		.loc 1 2780 28 is_stmt 0 view .LVU2615
 7335 03ba 9DF82F30 		ldrb	r3, [sp, #47]	@ zero_extendqisi2
2780:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,
 7336              		.loc 1 2780 11 view .LVU2616
 7337 03be 4345     		cmp	r3, r8
 7338 03c0 2ED9     		bls	.L466
2781:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf->DataPtr,
 7339              		.loc 1 2781 9 is_stmt 1 view .LVU2617
 7340 03c2 D9F81010 		ldr	r1, [r9, #16]
 7341 03c6 0296     		str	r6, [sp, #8]
 7342 03c8 0123     		movs	r3, #1
 7343 03ca 0193     		str	r3, [sp, #4]
 7344 03cc 0094     		str	r4, [sp]
 7345 03ce 3B46     		mov	r3, r7
 7346 03d0 5A46     		mov	r2, fp
 7347 03d2 2846     		mov	r0, r5
 7348 03d4 FFF7FEFF 		bl	FS_FAT_SecClr
 7349              	.LVL719:
2788:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 7350              		.loc 1 2788 9 view .LVU2618
2788:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 7351              		.loc 1 2788 13 is_stmt 0 view .LVU2619
 7352 03d8 3388     		ldrh	r3, [r6]
2788:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 7353              		.loc 1 2788 12 view .LVU2620
 7354 03da D3B9     		cbnz	r3, .L467
2794:rtos/uC-FS/FAT/fs_fat.c ****         fat_ix++;
 7355              		.loc 1 2794 9 is_stmt 1 view .LVU2621
2794:rtos/uC-FS/FAT/fs_fat.c ****         fat_ix++;
 7356              		.loc 1 2794 21 is_stmt 0 view .LVU2622
 7357 03dc BB44     		add	fp, fp, r7
 7358              	.LVL720:
2795:rtos/uC-FS/FAT/fs_fat.c ****     }
 7359              		.loc 1 2795 9 is_stmt 1 view .LVU2623
2795:rtos/uC-FS/FAT/fs_fat.c ****     }
 7360              		.loc 1 2795 15 is_stmt 0 view .LVU2624
 7361 03de 08F10108 		add	r8, r8, #1
 7362              	.LVL721:
2795:rtos/uC-FS/FAT/fs_fat.c ****     }
 7363              		.loc 1 2795 15 view .LVU2625
 7364 03e2 5FFA88F8 		uxtb	r8, r8
 7365              	.LVL722:
2795:rtos/uC-FS/FAT/fs_fat.c ****     }
 7366              		.loc 1 2795 15 view .LVU2626
 7367 03e6 E8E7     		b	.L430
 7368              	.LVL723:
 7369              	.L463:
2720:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_VOL_INVALID_SYS;
 7370              		.loc 1 2720 94 is_stmt 1 view .LVU2627
2721:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 7371              		.loc 1 2721 17 view .LVU2628
2721:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 7372              		.loc 1 2721 24 is_stmt 0 view .LVU2629
 7373 03e8 40F27F53 		movw	r3, #1407
 7374 03ec 3380     		strh	r3, [r6]	@ movhi
2722:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 7375              		.loc 1 2722 18 is_stmt 1 view .LVU2630
ARM GAS  /tmp/ccazZ5Hl.s 			page 280


 7376 03ee 4846     		mov	r0, r9
 7377              	.LVL724:
2722:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 7378              		.loc 1 2722 18 is_stmt 0 view .LVU2631
 7379 03f0 FFF7FEFF 		bl	FSBuf_Free
 7380              	.LVL725:
2723:rtos/uC-FS/FAT/fs_fat.c ****              }
 7381              		.loc 1 2723 18 is_stmt 1 view .LVU2632
 7382 03f4 34E6     		b	.L398
 7383              	.LVL726:
 7384              	.L464:
2727:rtos/uC-FS/FAT/fs_fat.c ****                  *p_err = FS_ERR_VOL_INVALID_SYS;
 7385              		.loc 1 2727 95 view .LVU2633
2728:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7386              		.loc 1 2728 18 view .LVU2634
2728:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7387              		.loc 1 2728 25 is_stmt 0 view .LVU2635
 7388 03f6 40F27F53 		movw	r3, #1407
 7389 03fa 3380     		strh	r3, [r6]	@ movhi
2729:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7390              		.loc 1 2729 19 is_stmt 1 view .LVU2636
 7391 03fc 4846     		mov	r0, r9
 7392              	.LVL727:
2729:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7393              		.loc 1 2729 19 is_stmt 0 view .LVU2637
 7394 03fe FFF7FEFF 		bl	FSBuf_Free
 7395              	.LVL728:
2730:rtos/uC-FS/FAT/fs_fat.c ****              } else if (clus_number > (FS_FAT_MAX_NBR_CLUS_FAT12 - FS_FAT_CLUS_NBR_TOLERANCE)) {
 7396              		.loc 1 2730 19 is_stmt 1 view .LVU2638
 7397 0402 2DE6     		b	.L398
 7398              	.L465:
2764:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7399              		.loc 1 2764 18 view .LVU2639
2764:rtos/uC-FS/FAT/fs_fat.c ****                   FSBuf_Free(p_buf);
 7400              		.loc 1 2764 25 is_stmt 0 view .LVU2640
 7401 0404 4FF49673 		mov	r3, #300
 7402 0408 3380     		strh	r3, [r6]	@ movhi
2765:rtos/uC-FS/FAT/fs_fat.c ****                   return;
 7403              		.loc 1 2765 19 is_stmt 1 view .LVU2641
 7404 040a 4846     		mov	r0, r9
 7405 040c FFF7FEFF 		bl	FSBuf_Free
 7406              	.LVL729:
2766:rtos/uC-FS/FAT/fs_fat.c ****              }
 7407              		.loc 1 2766 19 view .LVU2642
 7408 0410 26E6     		b	.L398
 7409              	.LVL730:
 7410              	.L467:
2789:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
 7411              		.loc 1 2789 13 view .LVU2643
2789:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
 7412              		.loc 1 2789 21 is_stmt 0 view .LVU2644
 7413 0412 4FF49673 		mov	r3, #300
 7414 0416 3380     		strh	r3, [r6]	@ movhi
2790:rtos/uC-FS/FAT/fs_fat.c ****              return;
 7415              		.loc 1 2790 14 is_stmt 1 view .LVU2645
 7416 0418 4846     		mov	r0, r9
 7417 041a FFF7FEFF 		bl	FSBuf_Free
ARM GAS  /tmp/ccazZ5Hl.s 			page 281


 7418              	.LVL731:
2791:rtos/uC-FS/FAT/fs_fat.c ****         }
 7419              		.loc 1 2791 14 view .LVU2646
 7420 041e 1FE6     		b	.L398
 7421              	.L466:
2801:rtos/uC-FS/FAT/fs_fat.c ****         case FS_FAT_FAT_TYPE_FAT12:
 7422              		.loc 1 2801 5 view .LVU2647
2801:rtos/uC-FS/FAT/fs_fat.c ****         case FS_FAT_FAT_TYPE_FAT12:
 7423              		.loc 1 2801 20 is_stmt 0 view .LVU2648
 7424 0420 9DF82E30 		ldrb	r3, [sp, #46]	@ zero_extendqisi2
2801:rtos/uC-FS/FAT/fs_fat.c ****         case FS_FAT_FAT_TYPE_FAT12:
 7425              		.loc 1 2801 5 view .LVU2649
 7426 0424 102B     		cmp	r3, #16
 7427 0426 31D0     		beq	.L433
 7428 0428 202B     		cmp	r3, #32
 7429 042a 3ED0     		beq	.L434
 7430 042c 0C2B     		cmp	r3, #12
 7431 042e 06D0     		beq	.L468
2825:rtos/uC-FS/FAT/fs_fat.c ****             *p_err = FS_ERR_DEV_INVALID_SIZE;
 7432              		.loc 1 2825 14 is_stmt 1 view .LVU2650
 7433 0430 4846     		mov	r0, r9
 7434 0432 FFF7FEFF 		bl	FSBuf_Free
 7435              	.LVL732:
2826:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7436              		.loc 1 2826 13 view .LVU2651
2826:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7437              		.loc 1 2826 20 is_stmt 0 view .LVU2652
 7438 0436 40F24113 		movw	r3, #321
 7439 043a 3380     		strh	r3, [r6]	@ movhi
2827:rtos/uC-FS/FAT/fs_fat.c ****     }
 7440              		.loc 1 2827 14 is_stmt 1 view .LVU2653
 7441 043c 0FE0     		b	.L436
 7442              	.L468:
2803:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 0u), val);
 7443              		.loc 1 2803 14 view .LVU2654
 7444              	.LVL733:
2804:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7445              		.loc 1 2804 14 view .LVU2655
2804:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7446              		.loc 1 2804 14 view .LVU2656
 7447 043e D9F81030 		ldr	r3, [r9, #16]
 7448 0442 F822     		movs	r2, #248
 7449 0444 1A70     		strb	r2, [r3]
2804:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7450              		.loc 1 2804 14 view .LVU2657
 7451 0446 D9F81030 		ldr	r3, [r9, #16]
 7452 044a 8F22     		movs	r2, #143
 7453 044c 5A70     		strb	r2, [r3, #1]
2804:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7454              		.loc 1 2804 14 view .LVU2658
 7455 044e D9F81030 		ldr	r3, [r9, #16]
 7456 0452 FF22     		movs	r2, #255
 7457 0454 9A70     		strb	r2, [r3, #2]
2804:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7458              		.loc 1 2804 14 view .LVU2659
 7459 0456 D9F81030 		ldr	r3, [r9, #16]
 7460 045a 0022     		movs	r2, #0
ARM GAS  /tmp/ccazZ5Hl.s 			page 282


 7461 045c DA70     		strb	r2, [r3, #3]
2804:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7462              		.loc 1 2804 14 view .LVU2660
2805:rtos/uC-FS/FAT/fs_fat.c **** 
 7463              		.loc 1 2805 14 view .LVU2661
 7464              	.LVL734:
 7465              	.L436:
2778:rtos/uC-FS/FAT/fs_fat.c ****     fat_sec_cur = fat1_sec_start;
 7466              		.loc 1 2778 17 is_stmt 0 view .LVU2662
 7467 045e 4FF00008 		mov	r8, #0
 7468              	.LVL735:
 7469              	.L438:
2832:rtos/uC-FS/FAT/fs_fat.c ****         FSVol_WrLockedEx(p_vol,
 7470              		.loc 1 2832 11 is_stmt 1 view .LVU2663
2832:rtos/uC-FS/FAT/fs_fat.c ****         FSVol_WrLockedEx(p_vol,
 7471              		.loc 1 2832 28 is_stmt 0 view .LVU2664
 7472 0462 9DF82F30 		ldrb	r3, [sp, #47]	@ zero_extendqisi2
2832:rtos/uC-FS/FAT/fs_fat.c ****         FSVol_WrLockedEx(p_vol,
 7473              		.loc 1 2832 11 view .LVU2665
 7474 0466 4345     		cmp	r3, r8
 7475 0468 4ED9     		bls	.L469
2833:rtos/uC-FS/FAT/fs_fat.c ****                          p_buf->DataPtr,
 7476              		.loc 1 2833 9 is_stmt 1 view .LVU2666
 7477 046a D9F81010 		ldr	r1, [r9, #16]
 7478 046e 0196     		str	r6, [sp, #4]
 7479 0470 0123     		movs	r3, #1
 7480 0472 0093     		str	r3, [sp]
 7481 0474 5246     		mov	r2, r10
 7482 0476 2846     		mov	r0, r5
 7483 0478 FFF7FEFF 		bl	FSVol_WrLockedEx
 7484              	.LVL736:
2840:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 7485              		.loc 1 2840 9 view .LVU2667
2840:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 7486              		.loc 1 2840 13 is_stmt 0 view .LVU2668
 7487 047c 3388     		ldrh	r3, [r6]
2840:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 7488              		.loc 1 2840 12 view .LVU2669
 7489 047e E3BB     		cbnz	r3, .L470
2846:rtos/uC-FS/FAT/fs_fat.c ****         fat_sec_cur += fat_size;
 7490              		.loc 1 2846 9 is_stmt 1 view .LVU2670
2846:rtos/uC-FS/FAT/fs_fat.c ****         fat_sec_cur += fat_size;
 7491              		.loc 1 2846 15 is_stmt 0 view .LVU2671
 7492 0480 08F10108 		add	r8, r8, #1
 7493              	.LVL737:
2846:rtos/uC-FS/FAT/fs_fat.c ****         fat_sec_cur += fat_size;
 7494              		.loc 1 2846 15 view .LVU2672
 7495 0484 5FFA88F8 		uxtb	r8, r8
 7496              	.LVL738:
2847:rtos/uC-FS/FAT/fs_fat.c ****     }
 7497              		.loc 1 2847 9 is_stmt 1 view .LVU2673
2847:rtos/uC-FS/FAT/fs_fat.c ****     }
 7498              		.loc 1 2847 21 is_stmt 0 view .LVU2674
 7499 0488 BA44     		add	r10, r10, r7
 7500              	.LVL739:
2847:rtos/uC-FS/FAT/fs_fat.c ****     }
 7501              		.loc 1 2847 21 view .LVU2675
ARM GAS  /tmp/ccazZ5Hl.s 			page 283


 7502 048a EAE7     		b	.L438
 7503              	.LVL740:
 7504              	.L433:
2809:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 0u), val);
 7505              		.loc 1 2809 14 is_stmt 1 view .LVU2676
2810:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7506              		.loc 1 2810 14 view .LVU2677
2810:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7507              		.loc 1 2810 14 view .LVU2678
 7508 048c D9F81030 		ldr	r3, [r9, #16]
 7509 0490 F822     		movs	r2, #248
 7510 0492 1A70     		strb	r2, [r3]
2810:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7511              		.loc 1 2810 14 view .LVU2679
 7512 0494 D9F81010 		ldr	r1, [r9, #16]
 7513 0498 FF23     		movs	r3, #255
 7514 049a 4B70     		strb	r3, [r1, #1]
2810:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7515              		.loc 1 2810 14 view .LVU2680
 7516 049c D9F81010 		ldr	r1, [r9, #16]
 7517 04a0 8A70     		strb	r2, [r1, #2]
2810:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7518              		.loc 1 2810 14 view .LVU2681
 7519 04a2 D9F81020 		ldr	r2, [r9, #16]
 7520 04a6 D370     		strb	r3, [r2, #3]
2810:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7521              		.loc 1 2810 14 view .LVU2682
2811:rtos/uC-FS/FAT/fs_fat.c **** 
 7522              		.loc 1 2811 14 view .LVU2683
 7523 04a8 D9E7     		b	.L436
 7524              	.LVL741:
 7525              	.L434:
2815:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 0u), val);
 7526              		.loc 1 2815 14 view .LVU2684
2816:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFF00u | FS_FAT_BPB_MEDIA_FIXED;        /* See Note #8.                    
 7527              		.loc 1 2816 14 view .LVU2685
2816:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFF00u | FS_FAT_BPB_MEDIA_FIXED;        /* See Note #8.                    
 7528              		.loc 1 2816 14 view .LVU2686
 7529 04aa D9F81030 		ldr	r3, [r9, #16]
 7530 04ae F821     		movs	r1, #248
 7531 04b0 1970     		strb	r1, [r3]
2816:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFF00u | FS_FAT_BPB_MEDIA_FIXED;        /* See Note #8.                    
 7532              		.loc 1 2816 14 view .LVU2687
 7533 04b2 D9F81020 		ldr	r2, [r9, #16]
 7534 04b6 FF23     		movs	r3, #255
 7535 04b8 5370     		strb	r3, [r2, #1]
2816:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFF00u | FS_FAT_BPB_MEDIA_FIXED;        /* See Note #8.                    
 7536              		.loc 1 2816 14 view .LVU2688
 7537 04ba D9F81020 		ldr	r2, [r9, #16]
 7538 04be 9370     		strb	r3, [r2, #2]
2816:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFF00u | FS_FAT_BPB_MEDIA_FIXED;        /* See Note #8.                    
 7539              		.loc 1 2816 14 view .LVU2689
 7540 04c0 D9F81000 		ldr	r0, [r9, #16]
 7541 04c4 0F22     		movs	r2, #15
 7542 04c6 C270     		strb	r2, [r0, #3]
2816:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFF00u | FS_FAT_BPB_MEDIA_FIXED;        /* See Note #8.                    
 7543              		.loc 1 2816 14 view .LVU2690
ARM GAS  /tmp/ccazZ5Hl.s 			page 284


2817:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 4u), val);
 7544              		.loc 1 2817 14 view .LVU2691
2818:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFFF8u;                                 /* See Note #8.                    
 7545              		.loc 1 2818 14 view .LVU2692
2818:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFFF8u;                                 /* See Note #8.                    
 7546              		.loc 1 2818 14 view .LVU2693
 7547 04c8 D9F81000 		ldr	r0, [r9, #16]
 7548 04cc 0171     		strb	r1, [r0, #4]
2818:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFFF8u;                                 /* See Note #8.                    
 7549              		.loc 1 2818 14 view .LVU2694
 7550 04ce D9F81000 		ldr	r0, [r9, #16]
 7551 04d2 4371     		strb	r3, [r0, #5]
2818:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFFF8u;                                 /* See Note #8.                    
 7552              		.loc 1 2818 14 view .LVU2695
 7553 04d4 D9F81000 		ldr	r0, [r9, #16]
 7554 04d8 8371     		strb	r3, [r0, #6]
2818:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFFF8u;                                 /* See Note #8.                    
 7555              		.loc 1 2818 14 view .LVU2696
 7556 04da D9F81000 		ldr	r0, [r9, #16]
 7557 04de C271     		strb	r2, [r0, #7]
2818:rtos/uC-FS/FAT/fs_fat.c ****              val = 0x0FFFFFF8u;                                 /* See Note #8.                    
 7558              		.loc 1 2818 14 view .LVU2697
2819:rtos/uC-FS/FAT/fs_fat.c ****              MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + 8u), val); /* Clus 2
 7559              		.loc 1 2819 14 view .LVU2698
2820:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7560              		.loc 1 2820 14 view .LVU2699
2820:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7561              		.loc 1 2820 14 view .LVU2700
 7562 04e0 D9F81000 		ldr	r0, [r9, #16]
 7563 04e4 0172     		strb	r1, [r0, #8]
2820:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7564              		.loc 1 2820 14 view .LVU2701
 7565 04e6 D9F81010 		ldr	r1, [r9, #16]
 7566 04ea 4B72     		strb	r3, [r1, #9]
2820:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7567              		.loc 1 2820 14 view .LVU2702
 7568 04ec D9F81010 		ldr	r1, [r9, #16]
 7569 04f0 8B72     		strb	r3, [r1, #10]
2820:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7570              		.loc 1 2820 14 view .LVU2703
 7571 04f2 D9F81030 		ldr	r3, [r9, #16]
 7572 04f6 DA72     		strb	r2, [r3, #11]
2820:rtos/uC-FS/FAT/fs_fat.c ****              break;
 7573              		.loc 1 2820 14 view .LVU2704
2821:rtos/uC-FS/FAT/fs_fat.c **** 
 7574              		.loc 1 2821 14 view .LVU2705
 7575 04f8 B1E7     		b	.L436
 7576              	.LVL742:
 7577              	.L470:
2841:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
 7578              		.loc 1 2841 13 view .LVU2706
2841:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
 7579              		.loc 1 2841 21 is_stmt 0 view .LVU2707
 7580 04fa 4FF49673 		mov	r3, #300
 7581 04fe 3380     		strh	r3, [r6]	@ movhi
2842:rtos/uC-FS/FAT/fs_fat.c ****              return;
 7582              		.loc 1 2842 14 is_stmt 1 view .LVU2708
ARM GAS  /tmp/ccazZ5Hl.s 			page 285


 7583 0500 4846     		mov	r0, r9
 7584 0502 FFF7FEFF 		bl	FSBuf_Free
 7585              	.LVL743:
2843:rtos/uC-FS/FAT/fs_fat.c ****         }
 7586              		.loc 1 2843 14 view .LVU2709
 7587 0506 ABE5     		b	.L398
 7588              	.L469:
2853:rtos/uC-FS/FAT/fs_fat.c ****         Mem_Clr(p_buf->DataPtr, (CPU_SIZE_T)sec_size);
 7589              		.loc 1 2853 5 view .LVU2710
2853:rtos/uC-FS/FAT/fs_fat.c ****         Mem_Clr(p_buf->DataPtr, (CPU_SIZE_T)sec_size);
 7590              		.loc 1 2853 16 is_stmt 0 view .LVU2711
 7591 0508 9DF82E30 		ldrb	r3, [sp, #46]	@ zero_extendqisi2
2853:rtos/uC-FS/FAT/fs_fat.c ****         Mem_Clr(p_buf->DataPtr, (CPU_SIZE_T)sec_size);
 7592              		.loc 1 2853 8 view .LVU2712
 7593 050c 202B     		cmp	r3, #32
 7594 050e 1DD0     		beq	.L471
 7595              	.L440:
2892:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,                                    /* Clr root dir clus.              
 7596              		.loc 1 2892 5 is_stmt 1 view .LVU2713
2892:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,                                    /* Clr root dir clus.              
 7597              		.loc 1 2892 16 is_stmt 0 view .LVU2714
 7598 0510 9DF82E30 		ldrb	r3, [sp, #46]	@ zero_extendqisi2
2892:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_SecClr(p_vol,                                    /* Clr root dir clus.              
 7599              		.loc 1 2892 8 view .LVU2715
 7600 0514 202B     		cmp	r3, #32
 7601 0516 00F08E80 		beq	.L472
2901:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf->DataPtr,
 7602              		.loc 1 2901 9 is_stmt 1 view .LVU2716
 7603 051a D9F81010 		ldr	r1, [r9, #16]
 7604 051e 0296     		str	r6, [sp, #8]
 7605 0520 0223     		movs	r3, #2
 7606 0522 0193     		str	r3, [sp, #4]
 7607 0524 0094     		str	r4, [sp]
 7608 0526 059B     		ldr	r3, [sp, #20]
 7609 0528 069A     		ldr	r2, [sp, #24]
 7610 052a 2846     		mov	r0, r5
 7611 052c FFF7FEFF 		bl	FS_FAT_SecClr
 7612              	.LVL744:
 7613              	.L442:
2910:rtos/uC-FS/FAT/fs_fat.c ****         *p_err  = FS_ERR_DEV;
 7614              		.loc 1 2910 5 view .LVU2717
2910:rtos/uC-FS/FAT/fs_fat.c ****         *p_err  = FS_ERR_DEV;
 7615              		.loc 1 2910 9 is_stmt 0 view .LVU2718
 7616 0530 3388     		ldrh	r3, [r6]
2910:rtos/uC-FS/FAT/fs_fat.c ****         *p_err  = FS_ERR_DEV;
 7617              		.loc 1 2910 8 view .LVU2719
 7618 0532 002B     		cmp	r3, #0
 7619 0534 40F08B80 		bne	.L473
2916:rtos/uC-FS/FAT/fs_fat.c ****     FSBuf_Free(p_buf);
 7620              		.loc 1 2916 5 is_stmt 1 view .LVU2720
 7621 0538 3146     		mov	r1, r6
 7622 053a 4846     		mov	r0, r9
 7623 053c FFF7FEFF 		bl	FSBuf_Flush
 7624              	.LVL745:
2917:rtos/uC-FS/FAT/fs_fat.c ****    *p_err = FS_ERR_NONE;
 7625              		.loc 1 2917 5 view .LVU2721
 7626 0540 4846     		mov	r0, r9
ARM GAS  /tmp/ccazZ5Hl.s 			page 286


 7627 0542 FFF7FEFF 		bl	FSBuf_Free
 7628              	.LVL746:
2918:rtos/uC-FS/FAT/fs_fat.c **** }
 7629              		.loc 1 2918 4 view .LVU2722
2918:rtos/uC-FS/FAT/fs_fat.c **** }
 7630              		.loc 1 2918 11 is_stmt 0 view .LVU2723
 7631 0546 0023     		movs	r3, #0
 7632 0548 3380     		strh	r3, [r6]	@ movhi
 7633 054a 89E5     		b	.L398
 7634              	.L471:
2854:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_LEADSIG;                               /* See Note #8.                    
 7635              		.loc 1 2854 9 is_stmt 1 view .LVU2724
 7636 054c 2146     		mov	r1, r4
 7637 054e D9F81000 		ldr	r0, [r9, #16]
 7638 0552 FFF7FEFF 		bl	Mem_Clr
 7639              	.LVL747:
2855:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + FS_FAT_FSI_OFF_LEADSIG), 
 7640              		.loc 1 2855 9 view .LVU2725
2856:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_STRUCSIG;                              /* See Note #8.                    
 7641              		.loc 1 2856 9 view .LVU2726
2856:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_STRUCSIG;                              /* See Note #8.                    
 7642              		.loc 1 2856 9 view .LVU2727
 7643 0556 D9F81020 		ldr	r2, [r9, #16]
 7644 055a 5223     		movs	r3, #82
 7645 055c 1370     		strb	r3, [r2]
2856:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_STRUCSIG;                              /* See Note #8.                    
 7646              		.loc 1 2856 9 view .LVU2728
 7647 055e D9F81020 		ldr	r2, [r9, #16]
 7648 0562 5370     		strb	r3, [r2, #1]
2856:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_STRUCSIG;                              /* See Note #8.                    
 7649              		.loc 1 2856 9 view .LVU2729
 7650 0564 D9F81020 		ldr	r2, [r9, #16]
 7651 0568 6123     		movs	r3, #97
 7652 056a 9370     		strb	r3, [r2, #2]
2856:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_STRUCSIG;                              /* See Note #8.                    
 7653              		.loc 1 2856 9 view .LVU2730
 7654 056c D9F81010 		ldr	r1, [r9, #16]
 7655 0570 4122     		movs	r2, #65
 7656 0572 CA70     		strb	r2, [r1, #3]
2856:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_STRUCSIG;                              /* See Note #8.                    
 7657              		.loc 1 2856 9 view .LVU2731
2857:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + FS_FAT_FSI_OFF_STRUCSIG),
 7658              		.loc 1 2857 9 view .LVU2732
 7659              	.LVL748:
2858:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_TRAILSIG;                              /* See Note #8.                    
 7660              		.loc 1 2858 9 view .LVU2733
2858:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_TRAILSIG;                              /* See Note #8.                    
 7661              		.loc 1 2858 9 view .LVU2734
 7662 0574 D9F81000 		ldr	r0, [r9, #16]
 7663 0578 7221     		movs	r1, #114
 7664 057a 80F8E411 		strb	r1, [r0, #484]
2858:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_TRAILSIG;                              /* See Note #8.                    
 7665              		.loc 1 2858 9 view .LVU2735
 7666 057e D9F81000 		ldr	r0, [r9, #16]
 7667 0582 80F8E511 		strb	r1, [r0, #485]
2858:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_TRAILSIG;                              /* See Note #8.                    
 7668              		.loc 1 2858 9 view .LVU2736
ARM GAS  /tmp/ccazZ5Hl.s 			page 287


 7669 0586 D9F81010 		ldr	r1, [r9, #16]
 7670 058a 81F8E621 		strb	r2, [r1, #486]
2858:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_TRAILSIG;                              /* See Note #8.                    
 7671              		.loc 1 2858 9 view .LVU2737
 7672 058e D9F81020 		ldr	r2, [r9, #16]
 7673 0592 82F8E731 		strb	r3, [r2, #487]
2858:rtos/uC-FS/FAT/fs_fat.c ****         val = FS_FAT_FSI_TRAILSIG;                              /* See Note #8.                    
 7674              		.loc 1 2858 9 view .LVU2738
2859:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + FS_FAT_FSI_OFF_TRAILSIG),
 7675              		.loc 1 2859 9 view .LVU2739
 7676              	.LVL749:
2860:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Only one clus (for root dir) is 
 7677              		.loc 1 2860 9 view .LVU2740
2860:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Only one clus (for root dir) is 
 7678              		.loc 1 2860 9 view .LVU2741
 7679 0596 D9F81030 		ldr	r3, [r9, #16]
 7680 059a 0022     		movs	r2, #0
 7681 059c 83F8FC21 		strb	r2, [r3, #508]
2860:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Only one clus (for root dir) is 
 7682              		.loc 1 2860 9 view .LVU2742
 7683 05a0 D9F81030 		ldr	r3, [r9, #16]
 7684 05a4 83F8FD21 		strb	r2, [r3, #509]
2860:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Only one clus (for root dir) is 
 7685              		.loc 1 2860 9 view .LVU2743
 7686 05a8 D9F81030 		ldr	r3, [r9, #16]
 7687 05ac 5521     		movs	r1, #85
 7688 05ae 83F8FE11 		strb	r1, [r3, #510]
2860:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Only one clus (for root dir) is 
 7689              		.loc 1 2860 9 view .LVU2744
 7690 05b2 D9F81030 		ldr	r3, [r9, #16]
 7691 05b6 AA21     		movs	r1, #170
 7692 05b8 83F8FF11 		strb	r1, [r3, #511]
2860:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Only one clus (for root dir) is 
 7693              		.loc 1 2860 9 view .LVU2745
2862:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Next free clus is clus after roo
 7694              		.loc 1 2862 9 view .LVU2746
2862:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Next free clus is clus after roo
 7695              		.loc 1 2862 9 view .LVU2747
 7696 05bc D9F81030 		ldr	r3, [r9, #16]
 7697 05c0 0798     		ldr	r0, [sp, #28]
 7698 05c2 411E     		subs	r1, r0, #1
 7699 05c4 83F8E811 		strb	r1, [r3, #488]
2862:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Next free clus is clus after roo
 7700              		.loc 1 2862 9 view .LVU2748
 7701 05c8 0B46     		mov	r3, r1
 7702 05ca D9F81010 		ldr	r1, [r9, #16]
 7703 05ce C3F30720 		ubfx	r0, r3, #8, #8
 7704 05d2 81F8E901 		strb	r0, [r1, #489]
2862:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Next free clus is clus after roo
 7705              		.loc 1 2862 9 view .LVU2749
 7706 05d6 D9F81010 		ldr	r1, [r9, #16]
 7707 05da C3F30740 		ubfx	r0, r3, #16, #8
 7708 05de 81F8EA01 		strb	r0, [r1, #490]
2862:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Next free clus is clus after roo
 7709              		.loc 1 2862 9 view .LVU2750
 7710 05e2 D9F81010 		ldr	r1, [r9, #16]
 7711 05e6 1B0E     		lsrs	r3, r3, #24
ARM GAS  /tmp/ccazZ5Hl.s 			page 288


 7712 05e8 81F8EB31 		strb	r3, [r1, #491]
2862:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Next free clus is clus after roo
 7713              		.loc 1 2862 9 view .LVU2751
2864:rtos/uC-FS/FAT/fs_fat.c ****         MEM_VAL_SET_INT32U_LITTLE((void *)((CPU_INT08U *)p_buf->DataPtr + FS_FAT_FSI_OFF_NXT_FREE),
 7714              		.loc 1 2864 9 view .LVU2752
 7715              	.LVL750:
2865:rtos/uC-FS/FAT/fs_fat.c **** 
 7716              		.loc 1 2865 9 view .LVU2753
2865:rtos/uC-FS/FAT/fs_fat.c **** 
 7717              		.loc 1 2865 9 view .LVU2754
 7718 05ec D9F81030 		ldr	r3, [r9, #16]
 7719 05f0 0321     		movs	r1, #3
 7720 05f2 83F8EC11 		strb	r1, [r3, #492]
2865:rtos/uC-FS/FAT/fs_fat.c **** 
 7721              		.loc 1 2865 9 view .LVU2755
 7722 05f6 D9F81030 		ldr	r3, [r9, #16]
 7723 05fa 83F8ED21 		strb	r2, [r3, #493]
2865:rtos/uC-FS/FAT/fs_fat.c **** 
 7724              		.loc 1 2865 9 view .LVU2756
 7725 05fe D9F81030 		ldr	r3, [r9, #16]
 7726 0602 83F8EE21 		strb	r2, [r3, #494]
2865:rtos/uC-FS/FAT/fs_fat.c **** 
 7727              		.loc 1 2865 9 view .LVU2757
 7728 0606 D9F81030 		ldr	r3, [r9, #16]
 7729 060a 83F8EF21 		strb	r2, [r3, #495]
2865:rtos/uC-FS/FAT/fs_fat.c **** 
 7730              		.loc 1 2865 9 view .LVU2758
2867:rtos/uC-FS/FAT/fs_fat.c ****                          p_buf->DataPtr,
 7731              		.loc 1 2867 9 view .LVU2759
 7732 060e D9F81010 		ldr	r1, [r9, #16]
 7733 0612 0196     		str	r6, [sp, #4]
 7734 0614 0122     		movs	r2, #1
 7735 0616 0092     		str	r2, [sp]
 7736 0618 1346     		mov	r3, r2
 7737 061a 2846     		mov	r0, r5
 7738 061c FFF7FEFF 		bl	FSVol_WrLockedEx
 7739              	.LVL751:
2874:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 7740              		.loc 1 2874 9 view .LVU2760
2874:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 7741              		.loc 1 2874 13 is_stmt 0 view .LVU2761
 7742 0620 3388     		ldrh	r3, [r6]
2874:rtos/uC-FS/FAT/fs_fat.c ****             *p_err  = FS_ERR_DEV;
 7743              		.loc 1 2874 12 view .LVU2762
 7744 0622 002B     		cmp	r3, #0
 7745 0624 3FF474AF 		beq	.L440
2875:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
 7746              		.loc 1 2875 13 is_stmt 1 view .LVU2763
2875:rtos/uC-FS/FAT/fs_fat.c ****              FSBuf_Free(p_buf);
 7747              		.loc 1 2875 21 is_stmt 0 view .LVU2764
 7748 0628 4FF49673 		mov	r3, #300
 7749 062c 3380     		strh	r3, [r6]	@ movhi
2876:rtos/uC-FS/FAT/fs_fat.c ****              return;
 7750              		.loc 1 2876 14 is_stmt 1 view .LVU2765
 7751 062e 4846     		mov	r0, r9
 7752 0630 FFF7FEFF 		bl	FSBuf_Free
 7753              	.LVL752:
ARM GAS  /tmp/ccazZ5Hl.s 			page 289


2877:rtos/uC-FS/FAT/fs_fat.c ****         }
 7754              		.loc 1 2877 14 view .LVU2766
 7755 0634 14E5     		b	.L398
 7756              	.LVL753:
 7757              	.L472:
2893:rtos/uC-FS/FAT/fs_fat.c ****                       p_buf->DataPtr,
 7758              		.loc 1 2893 9 view .LVU2767
 7759 0636 D9F81010 		ldr	r1, [r9, #16]
 7760 063a 0296     		str	r6, [sp, #8]
 7761 063c 0223     		movs	r3, #2
 7762 063e 0193     		str	r3, [sp, #4]
 7763 0640 0094     		str	r4, [sp]
 7764 0642 099B     		ldr	r3, [sp, #36]
 7765 0644 069A     		ldr	r2, [sp, #24]
 7766 0646 2846     		mov	r0, r5
 7767 0648 FFF7FEFF 		bl	FS_FAT_SecClr
 7768              	.LVL754:
 7769 064c 70E7     		b	.L442
 7770              	.L473:
2911:rtos/uC-FS/FAT/fs_fat.c ****          FSBuf_Free(p_buf);
 7771              		.loc 1 2911 9 view .LVU2768
2911:rtos/uC-FS/FAT/fs_fat.c ****          FSBuf_Free(p_buf);
 7772              		.loc 1 2911 17 is_stmt 0 view .LVU2769
 7773 064e 4FF49673 		mov	r3, #300
 7774 0652 3380     		strh	r3, [r6]	@ movhi
2912:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7775              		.loc 1 2912 10 is_stmt 1 view .LVU2770
 7776 0654 4846     		mov	r0, r9
 7777 0656 FFF7FEFF 		bl	FSBuf_Free
 7778              	.LVL755:
2913:rtos/uC-FS/FAT/fs_fat.c ****     }
 7779              		.loc 1 2913 10 view .LVU2771
 7780 065a 01E5     		b	.L398
 7781              	.L475:
 7782              		.align	2
 7783              	.L474:
 7784 065c ABAAAAAA 		.word	-1431655765
 7785              		.cfi_endproc
 7786              	.LFE14:
 7788              		.section	.text.FS_FAT_LowDirFirstClusAdd,"ax",%progbits
 7789              		.align	1
 7790              		.syntax unified
 7791              		.thumb
 7792              		.thumb_func
 7793              		.fpu fpv4-sp-d16
 7795              	FS_FAT_LowDirFirstClusAdd:
 7796              	.LVL756:
 7797              	.LFB21:
3477:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
 7798              		.loc 1 3477 1 view -0
 7799              		.cfi_startproc
 7800              		@ args = 4, pretend = 0, frame = 0
 7801              		@ frame_needed = 0, uses_anonymous_args = 0
3477:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
 7802              		.loc 1 3477 1 is_stmt 0 view .LVU2773
 7803 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7804              	.LCFI97:
ARM GAS  /tmp/ccazZ5Hl.s 			page 290


 7805              		.cfi_def_cfa_offset 36
 7806              		.cfi_offset 4, -36
 7807              		.cfi_offset 5, -32
 7808              		.cfi_offset 6, -28
 7809              		.cfi_offset 7, -24
 7810              		.cfi_offset 8, -20
 7811              		.cfi_offset 9, -16
 7812              		.cfi_offset 10, -12
 7813              		.cfi_offset 11, -8
 7814              		.cfi_offset 14, -4
 7815 0004 85B0     		sub	sp, sp, #20
 7816              	.LCFI98:
 7817              		.cfi_def_cfa_offset 56
 7818 0006 0646     		mov	r6, r0
 7819 0008 8946     		mov	r9, r1
 7820 000a 1446     		mov	r4, r2
 7821 000c 9846     		mov	r8, r3
 7822 000e 0E9D     		ldr	r5, [sp, #56]
3478:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 7823              		.loc 1 3478 5 is_stmt 1 view .LVU2774
3479:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   file_clus;
 7824              		.loc 1 3479 5 view .LVU2775
3480:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    file_sec;
 7825              		.loc 1 3480 5 view .LVU2776
3481:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   dir_parent_clus;
 7826              		.loc 1 3481 5 view .LVU2777
3482:rtos/uC-FS/FAT/fs_fat.c **** 
 7827              		.loc 1 3482 5 view .LVU2778
3486:rtos/uC-FS/FAT/fs_fat.c ****     file_clus  =  FS_FAT_ClusChainAlloc(p_vol,
 7828              		.loc 1 3486 5 view .LVU2779
3486:rtos/uC-FS/FAT/fs_fat.c ****     file_clus  =  FS_FAT_ClusChainAlloc(p_vol,
 7829              		.loc 1 3486 16 is_stmt 0 view .LVU2780
 7830 0010 D0F834A0 		ldr	r10, [r0, #52]
 7831              	.LVL757:
3487:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
 7832              		.loc 1 3487 5 is_stmt 1 view .LVU2781
3487:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
 7833              		.loc 1 3487 19 is_stmt 0 view .LVU2782
 7834 0014 0095     		str	r5, [sp]
 7835 0016 0123     		movs	r3, #1
 7836              	.LVL758:
3487:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
 7837              		.loc 1 3487 19 view .LVU2783
 7838 0018 0022     		movs	r2, #0
 7839              	.LVL759:
3487:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
 7840              		.loc 1 3487 19 view .LVU2784
 7841 001a 2146     		mov	r1, r4
 7842              	.LVL760:
3487:rtos/uC-FS/FAT/fs_fat.c ****                                         p_buf,
 7843              		.loc 1 3487 19 view .LVU2785
 7844 001c FFF7FEFF 		bl	FS_FAT_ClusChainAlloc
 7845              	.LVL761:
3492:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7846              		.loc 1 3492 5 is_stmt 1 view .LVU2786
3492:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7847              		.loc 1 3492 9 is_stmt 0 view .LVU2787
ARM GAS  /tmp/ccazZ5Hl.s 			page 291


 7848 0020 2B88     		ldrh	r3, [r5]
3492:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7849              		.loc 1 3492 8 view .LVU2788
 7850 0022 13B1     		cbz	r3, .L481
 7851              	.LVL762:
 7852              	.L476:
3549:rtos/uC-FS/FAT/fs_fat.c **** #endif
 7853              		.loc 1 3549 1 view .LVU2789
 7854 0024 05B0     		add	sp, sp, #20
 7855              	.LCFI99:
 7856              		.cfi_remember_state
 7857              		.cfi_def_cfa_offset 36
 7858              		@ sp needed
 7859 0026 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7860              	.LVL763:
 7861              	.L481:
 7862              	.LCFI100:
 7863              		.cfi_restore_state
3549:rtos/uC-FS/FAT/fs_fat.c **** #endif
 7864              		.loc 1 3549 1 view .LVU2790
 7865 002a 0746     		mov	r7, r0
3496:rtos/uC-FS/FAT/fs_fat.c **** 
 7866              		.loc 1 3496 5 is_stmt 1 view .LVU2791
3496:rtos/uC-FS/FAT/fs_fat.c **** 
 7867              		.loc 1 3496 16 is_stmt 0 view .LVU2792
 7868 002c DAF82C20 		ldr	r2, [r10, #44]
 7869 0030 831E     		subs	r3, r0, #2
 7870 0032 9AF84010 		ldrb	r1, [r10, #64]	@ zero_extendqisi2
 7871 0036 8B40     		lsls	r3, r3, r1
3496:rtos/uC-FS/FAT/fs_fat.c **** 
 7872              		.loc 1 3496 14 view .LVU2793
 7873 0038 02EB030B 		add	fp, r2, r3
 7874              	.LVL764:
3498:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
 7875              		.loc 1 3498 5 is_stmt 1 view .LVU2794
 7876 003c 2946     		mov	r1, r5
 7877 003e 2046     		mov	r0, r4
 7878              	.LVL765:
3498:rtos/uC-FS/FAT/fs_fat.c ****     if (*p_err != FS_ERR_NONE) {
 7879              		.loc 1 3498 5 is_stmt 0 view .LVU2795
 7880 0040 FFF7FEFF 		bl	FSBuf_Flush
 7881              	.LVL766:
3499:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7882              		.loc 1 3499 5 is_stmt 1 view .LVU2796
3499:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7883              		.loc 1 3499 9 is_stmt 0 view .LVU2797
 7884 0044 2B88     		ldrh	r3, [r5]
3499:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7885              		.loc 1 3499 8 view .LVU2798
 7886 0046 002B     		cmp	r3, #0
 7887 0048 ECD1     		bne	.L476
3503:rtos/uC-FS/FAT/fs_fat.c ****                   p_buf->DataPtr,
 7888              		.loc 1 3503 5 is_stmt 1 view .LVU2799
 7889 004a DAF83C30 		ldr	r3, [r10, #60]
 7890 004e 0295     		str	r5, [sp, #8]
 7891 0050 0422     		movs	r2, #4
 7892 0052 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/ccazZ5Hl.s 			page 292


 7893 0054 DAF83420 		ldr	r2, [r10, #52]
 7894 0058 0092     		str	r2, [sp]
 7895 005a 5A46     		mov	r2, fp
 7896 005c 2169     		ldr	r1, [r4, #16]
 7897 005e 3046     		mov	r0, r6
 7898 0060 FFF7FEFF 		bl	FS_FAT_SecClr
 7899              	.LVL767:
3510:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7900              		.loc 1 3510 5 view .LVU2800
3510:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7901              		.loc 1 3510 9 is_stmt 0 view .LVU2801
 7902 0064 2B88     		ldrh	r3, [r5]
3510:rtos/uC-FS/FAT/fs_fat.c ****          return;
 7903              		.loc 1 3510 8 view .LVU2802
 7904 0066 002B     		cmp	r3, #0
 7905 0068 DCD1     		bne	.L476
3515:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSec    = file_sec;
 7906              		.loc 1 3515 5 is_stmt 1 view .LVU2803
3515:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->FileCurSec    = file_sec;
 7907              		.loc 1 3515 33 is_stmt 0 view .LVU2804
 7908 006a C9F82470 		str	r7, [r9, #36]
3516:rtos/uC-FS/FAT/fs_fat.c **** 
 7909              		.loc 1 3516 5 is_stmt 1 view .LVU2805
3516:rtos/uC-FS/FAT/fs_fat.c **** 
 7910              		.loc 1 3516 33 is_stmt 0 view .LVU2806
 7911 006e C9F828B0 		str	fp, [r9, #40]
3520:rtos/uC-FS/FAT/fs_fat.c ****               file_sec,
 7912              		.loc 1 3520 5 is_stmt 1 view .LVU2807
 7913 0072 0095     		str	r5, [sp]
 7914 0074 0222     		movs	r2, #2
 7915 0076 5946     		mov	r1, fp
 7916 0078 2046     		mov	r0, r4
 7917 007a FFF7FEFF 		bl	FSBuf_Set
 7918              	.LVL768:
3525:rtos/uC-FS/FAT/fs_fat.c ****         return;
 7919              		.loc 1 3525 5 view .LVU2808
3525:rtos/uC-FS/FAT/fs_fat.c ****         return;
 7920              		.loc 1 3525 9 is_stmt 0 view .LVU2809
 7921 007e 2B88     		ldrh	r3, [r5]
3525:rtos/uC-FS/FAT/fs_fat.c ****         return;
 7922              		.loc 1 3525 8 view .LVU2810
 7923 0080 002B     		cmp	r3, #0
 7924 0082 CFD1     		bne	.L476
3529:rtos/uC-FS/FAT/fs_fat.c **** 
 7925              		.loc 1 3529 5 is_stmt 1 view .LVU2811
 7926 0084 DAF83410 		ldr	r1, [r10, #52]
 7927 0088 2069     		ldr	r0, [r4, #16]
 7928 008a FFF7FEFF 		bl	Mem_Clr
 7929              	.LVL769:
3531:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void       *) p_dir_entry,
 7930              		.loc 1 3531 5 view .LVU2812
3531:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void       *) p_dir_entry,
 7931              		.loc 1 3531 17 is_stmt 0 view .LVU2813
 7932 008e 2669     		ldr	r6, [r4, #16]
 7933              	.LVL770:
3532:rtos/uC-FS/FAT/fs_fat.c ****                            (CPU_INT32U *)&FS_FAT_NameDot[0],
 7934              		.loc 1 3532 5 is_stmt 1 view .LVU2814
ARM GAS  /tmp/ccazZ5Hl.s 			page 293


 7935 0090 0023     		movs	r3, #0
 7936 0092 0193     		str	r3, [sp, #4]
 7937 0094 0093     		str	r3, [sp]
 7938 0096 3B46     		mov	r3, r7
 7939 0098 0122     		movs	r2, #1
 7940 009a 1049     		ldr	r1, .L482
 7941 009c 3046     		mov	r0, r6
 7942 009e FFF7FEFF 		bl	FS_FAT_SFN_DirEntryFmt
 7943              	.LVL771:
3539:rtos/uC-FS/FAT/fs_fat.c ****     dir_parent_clus  = (dir_parent_sec == p_fat_data->RootDirStart) ? 0u : FS_FAT_SEC_TO_CLUS(p_fat
 7944              		.loc 1 3539 5 view .LVU2815
3539:rtos/uC-FS/FAT/fs_fat.c ****     dir_parent_clus  = (dir_parent_sec == p_fat_data->RootDirStart) ? 0u : FS_FAT_SEC_TO_CLUS(p_fat
 7945              		.loc 1 3539 21 is_stmt 0 view .LVU2816
 7946 00a2 06F12000 		add	r0, r6, #32
 7947              	.LVL772:
3540:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void        *) p_dir_entry,
 7948              		.loc 1 3540 5 is_stmt 1 view .LVU2817
3540:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void        *) p_dir_entry,
 7949              		.loc 1 3540 53 is_stmt 0 view .LVU2818
 7950 00a6 DAF82830 		ldr	r3, [r10, #40]
3540:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void        *) p_dir_entry,
 7951              		.loc 1 3540 74 view .LVU2819
 7952 00aa 4345     		cmp	r3, r8
 7953 00ac 14D0     		beq	.L479
3540:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void        *) p_dir_entry,
 7954              		.loc 1 3540 76 discriminator 1 view .LVU2820
 7955 00ae DAF82C30 		ldr	r3, [r10, #44]
 7956 00b2 A8EB0303 		sub	r3, r8, r3
 7957 00b6 9AF84080 		ldrb	r8, [r10, #64]	@ zero_extendqisi2
 7958              	.LVL773:
3540:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void        *) p_dir_entry,
 7959              		.loc 1 3540 76 discriminator 1 view .LVU2821
 7960 00ba 23FA08F3 		lsr	r3, r3, r8
3540:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void        *) p_dir_entry,
 7961              		.loc 1 3540 74 discriminator 1 view .LVU2822
 7962 00be 0233     		adds	r3, r3, #2
 7963              	.L478:
 7964              	.LVL774:
3541:rtos/uC-FS/FAT/fs_fat.c ****                            (CPU_INT32U  *)&FS_FAT_NameDotDot[0],
 7965              		.loc 1 3541 5 is_stmt 1 discriminator 4 view .LVU2823
 7966 00c0 0022     		movs	r2, #0
 7967 00c2 0192     		str	r2, [sp, #4]
 7968 00c4 0092     		str	r2, [sp]
 7969 00c6 0122     		movs	r2, #1
 7970 00c8 0549     		ldr	r1, .L482+4
 7971 00ca FFF7FEFF 		bl	FS_FAT_SFN_DirEntryFmt
 7972              	.LVL775:
3548:rtos/uC-FS/FAT/fs_fat.c **** }
 7973              		.loc 1 3548 5 discriminator 4 view .LVU2824
 7974 00ce 2946     		mov	r1, r5
 7975 00d0 2046     		mov	r0, r4
 7976 00d2 FFF7FEFF 		bl	FSBuf_MarkDirty
 7977              	.LVL776:
 7978 00d6 A5E7     		b	.L476
 7979              	.LVL777:
 7980              	.L479:
3540:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SFN_DirEntryFmt((void        *) p_dir_entry,
ARM GAS  /tmp/ccazZ5Hl.s 			page 294


 7981              		.loc 1 3540 74 is_stmt 0 view .LVU2825
 7982 00d8 0023     		movs	r3, #0
 7983 00da F1E7     		b	.L478
 7984              	.L483:
 7985              		.align	2
 7986              	.L482:
 7987 00dc 00000000 		.word	.LANCHOR4
 7988 00e0 00000000 		.word	.LANCHOR5
 7989              		.cfi_endproc
 7990              	.LFE21:
 7992              		.section	.text.FS_FAT_LowEntryCreate,"ax",%progbits
 7993              		.align	1
 7994              		.global	FS_FAT_LowEntryCreate
 7995              		.syntax unified
 7996              		.thumb
 7997              		.thumb_func
 7998              		.fpu fpv4-sp-d16
 8000              	FS_FAT_LowEntryCreate:
 8001              	.LVL778:
 8002              	.LFB25:
4216:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
 8003              		.loc 1 4216 1 is_stmt 1 view -0
 8004              		.cfi_startproc
 8005              		@ args = 12, pretend = 0, frame = 16
 8006              		@ frame_needed = 0, uses_anonymous_args = 0
4216:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
 8007              		.loc 1 4216 1 is_stmt 0 view .LVU2827
 8008 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8009              	.LCFI101:
 8010              		.cfi_def_cfa_offset 36
 8011              		.cfi_offset 4, -36
 8012              		.cfi_offset 5, -32
 8013              		.cfi_offset 6, -28
 8014              		.cfi_offset 7, -24
 8015              		.cfi_offset 8, -20
 8016              		.cfi_offset 9, -16
 8017              		.cfi_offset 10, -12
 8018              		.cfi_offset 11, -8
 8019              		.cfi_offset 14, -4
 8020 0004 89B0     		sub	sp, sp, #36
 8021              	.LCFI102:
 8022              		.cfi_def_cfa_offset 72
 8023 0006 0646     		mov	r6, r0
 8024 0008 0D46     		mov	r5, r1
 8025 000a 1446     		mov	r4, r2
 8026 000c 9846     		mov	r8, r3
 8027 000e DDF848A0 		ldr	r10, [sp, #72]
 8028 0012 9DF84C90 		ldrb	r9, [sp, #76]	@ zero_extendqisi2
 8029 0016 149F     		ldr	r7, [sp, #80]
4217:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   file_clus;
 8030              		.loc 1 4217 5 is_stmt 1 view .LVU2828
4218:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_start_pos;
 8031              		.loc 1 4218 5 view .LVU2829
4219:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_end_pos;
 8032              		.loc 1 4219 5 view .LVU2830
4220:rtos/uC-FS/FAT/fs_fat.c **** 
 8033              		.loc 1 4220 5 view .LVU2831
ARM GAS  /tmp/ccazZ5Hl.s 			page 295


4225:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_LowDirFirstClusAdd(p_vol,
 8034              		.loc 1 4225 5 view .LVU2832
4225:rtos/uC-FS/FAT/fs_fat.c ****         FS_FAT_LowDirFirstClusAdd(p_vol,
 8035              		.loc 1 4225 8 is_stmt 0 view .LVU2833
 8036 0018 B9F1010F 		cmp	r9, #1
 8037 001c 17D0     		beq	.L490
4240:rtos/uC-FS/FAT/fs_fat.c ****     }
 8038              		.loc 1 4240 19 view .LVU2834
 8039 001e 0022     		movs	r2, #0
 8040              	.LVL779:
 8041              	.L485:
4247:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_pos.SecPos = 0u;
 8042              		.loc 1 4247 5 is_stmt 1 view .LVU2835
4247:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_pos.SecPos = 0u;
 8043              		.loc 1 4247 26 is_stmt 0 view .LVU2836
 8044 0020 CDF818A0 		str	r10, [sp, #24]
4248:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FN_API_Active.DirEntryCreate( p_vol,
 8045              		.loc 1 4248 5 is_stmt 1 view .LVU2837
4248:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FN_API_Active.DirEntryCreate( p_vol,
 8046              		.loc 1 4248 26 is_stmt 0 view .LVU2838
 8047 0024 0023     		movs	r3, #0
 8048 0026 0793     		str	r3, [sp, #28]
4249:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 8049              		.loc 1 4249 5 is_stmt 1 view .LVU2839
4249:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 8050              		.loc 1 4249 25 is_stmt 0 view .LVU2840
 8051 0028 174B     		ldr	r3, .L492
 8052 002a D3F800B0 		ldr	fp, [r3]
4249:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 8053              		.loc 1 4249 5 view .LVU2841
 8054 002e 0397     		str	r7, [sp, #12]
 8055 0030 04AB     		add	r3, sp, #16
 8056 0032 0293     		str	r3, [sp, #8]
 8057 0034 06AB     		add	r3, sp, #24
 8058 0036 0193     		str	r3, [sp, #4]
 8059 0038 0092     		str	r2, [sp]
 8060 003a 4B46     		mov	r3, r9
 8061 003c 4246     		mov	r2, r8
 8062              	.LVL780:
4249:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 8063              		.loc 1 4249 5 view .LVU2842
 8064 003e 2946     		mov	r1, r5
 8065 0040 3046     		mov	r0, r6
 8066 0042 D847     		blx	fp
 8067              	.LVL781:
4258:rtos/uC-FS/FAT/fs_fat.c ****           return;
 8068              		.loc 1 4258 6 is_stmt 1 view .LVU2843
4258:rtos/uC-FS/FAT/fs_fat.c ****           return;
 8069              		.loc 1 4258 10 is_stmt 0 view .LVU2844
 8070 0044 3B88     		ldrh	r3, [r7]
4258:rtos/uC-FS/FAT/fs_fat.c ****           return;
 8071              		.loc 1 4258 9 view .LVU2845
 8072 0046 6BB1     		cbz	r3, .L491
 8073              	.L484:
4289:rtos/uC-FS/FAT/fs_fat.c **** #endif
 8074              		.loc 1 4289 1 view .LVU2846
 8075 0048 09B0     		add	sp, sp, #36
ARM GAS  /tmp/ccazZ5Hl.s 			page 296


 8076              	.LCFI103:
 8077              		.cfi_remember_state
 8078              		.cfi_def_cfa_offset 36
 8079              		@ sp needed
 8080 004a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8081              	.LVL782:
 8082              	.L490:
 8083              	.LCFI104:
 8084              		.cfi_restore_state
4226:rtos/uC-FS/FAT/fs_fat.c ****                                   p_entry_data,
 8085              		.loc 1 4226 9 is_stmt 1 view .LVU2847
 8086 004e 0097     		str	r7, [sp]
 8087 0050 5346     		mov	r3, r10
 8088              	.LVL783:
4226:rtos/uC-FS/FAT/fs_fat.c ****                                   p_entry_data,
 8089              		.loc 1 4226 9 is_stmt 0 view .LVU2848
 8090 0052 0A46     		mov	r2, r1
 8091              	.LVL784:
4226:rtos/uC-FS/FAT/fs_fat.c ****                                   p_entry_data,
 8092              		.loc 1 4226 9 view .LVU2849
 8093 0054 2146     		mov	r1, r4
 8094              	.LVL785:
4226:rtos/uC-FS/FAT/fs_fat.c ****                                   p_entry_data,
 8095              		.loc 1 4226 9 view .LVU2850
 8096 0056 FFF7FEFF 		bl	FS_FAT_LowDirFirstClusAdd
 8097              	.LVL786:
4232:rtos/uC-FS/FAT/fs_fat.c ****              return;
 8098              		.loc 1 4232 9 is_stmt 1 view .LVU2851
4232:rtos/uC-FS/FAT/fs_fat.c ****              return;
 8099              		.loc 1 4232 13 is_stmt 0 view .LVU2852
 8100 005a 3B88     		ldrh	r3, [r7]
4232:rtos/uC-FS/FAT/fs_fat.c ****              return;
 8101              		.loc 1 4232 12 view .LVU2853
 8102 005c 002B     		cmp	r3, #0
 8103 005e F3D1     		bne	.L484
4236:rtos/uC-FS/FAT/fs_fat.c **** 
 8104              		.loc 1 4236 9 is_stmt 1 view .LVU2854
4236:rtos/uC-FS/FAT/fs_fat.c **** 
 8105              		.loc 1 4236 19 is_stmt 0 view .LVU2855
 8106 0060 626A     		ldr	r2, [r4, #36]
 8107              	.LVL787:
4236:rtos/uC-FS/FAT/fs_fat.c **** 
 8108              		.loc 1 4236 19 view .LVU2856
 8109 0062 DDE7     		b	.L485
 8110              	.LVL788:
 8111              	.L491:
4266:rtos/uC-FS/FAT/fs_fat.c ****      FS_FAT_FileDataInit(p_entry_data,
 8112              		.loc 1 4266 6 is_stmt 1 view .LVU2857
4266:rtos/uC-FS/FAT/fs_fat.c ****      FS_FAT_FileDataInit(p_entry_data,
 8113              		.loc 1 4266 39 is_stmt 0 view .LVU2858
 8114 0064 2969     		ldr	r1, [r5, #16]
 8115              	.LVL789:
4267:rtos/uC-FS/FAT/fs_fat.c ****                          p_dir_entry);
 8116              		.loc 1 4267 6 is_stmt 1 view .LVU2859
 8117 0066 059B     		ldr	r3, [sp, #20]
 8118 0068 1944     		add	r1, r1, r3
 8119              	.LVL790:
ARM GAS  /tmp/ccazZ5Hl.s 			page 297


4267:rtos/uC-FS/FAT/fs_fat.c ****                          p_dir_entry);
 8120              		.loc 1 4267 6 is_stmt 0 view .LVU2860
 8121 006a 2046     		mov	r0, r4
 8122 006c FFF7FEFF 		bl	FS_FAT_FileDataInit
 8123              	.LVL791:
4270:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirStartSec    = dir_start_pos.SecNbr;
 8124              		.loc 1 4270 6 is_stmt 1 view .LVU2861
4270:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirStartSec    = dir_start_pos.SecNbr;
 8125              		.loc 1 4270 35 is_stmt 0 view .LVU2862
 8126 0070 C4F810A0 		str	r10, [r4, #16]
4271:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirStartSecPos = dir_start_pos.SecPos;
 8127              		.loc 1 4271 6 is_stmt 1 view .LVU2863
4271:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirStartSecPos = dir_start_pos.SecPos;
 8128              		.loc 1 4271 50 is_stmt 0 view .LVU2864
 8129 0074 069B     		ldr	r3, [sp, #24]
4271:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirStartSecPos = dir_start_pos.SecPos;
 8130              		.loc 1 4271 35 view .LVU2865
 8131 0076 6361     		str	r3, [r4, #20]
4272:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirEndSec      = dir_end_pos.SecNbr;
 8132              		.loc 1 4272 6 is_stmt 1 view .LVU2866
4272:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirEndSec      = dir_end_pos.SecNbr;
 8133              		.loc 1 4272 50 is_stmt 0 view .LVU2867
 8134 0078 079B     		ldr	r3, [sp, #28]
4272:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirEndSec      = dir_end_pos.SecNbr;
 8135              		.loc 1 4272 35 view .LVU2868
 8136 007a A361     		str	r3, [r4, #24]
4273:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirEndSecPos   = dir_end_pos.SecPos;
 8137              		.loc 1 4273 6 is_stmt 1 view .LVU2869
4273:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirEndSecPos   = dir_end_pos.SecPos;
 8138              		.loc 1 4273 48 is_stmt 0 view .LVU2870
 8139 007c 049B     		ldr	r3, [sp, #16]
4273:rtos/uC-FS/FAT/fs_fat.c ****      p_entry_data->DirEndSecPos   = dir_end_pos.SecPos;
 8140              		.loc 1 4273 35 view .LVU2871
 8141 007e E361     		str	r3, [r4, #28]
4274:rtos/uC-FS/FAT/fs_fat.c **** 
 8142              		.loc 1 4274 6 is_stmt 1 view .LVU2872
4274:rtos/uC-FS/FAT/fs_fat.c **** 
 8143              		.loc 1 4274 48 is_stmt 0 view .LVU2873
 8144 0080 059B     		ldr	r3, [sp, #20]
4274:rtos/uC-FS/FAT/fs_fat.c **** 
 8145              		.loc 1 4274 35 view .LVU2874
 8146 0082 2362     		str	r3, [r4, #32]
4285:rtos/uC-FS/FAT/fs_fat.c ****      FS_TRACE_LOG(("                         Dir pos      %04X\r\n", p_entry_data->DirEndSecPos));
 8147              		.loc 1 4285 95 is_stmt 1 view .LVU2875
4286:rtos/uC-FS/FAT/fs_fat.c **** 
 8148              		.loc 1 4286 98 view .LVU2876
 8149 0084 E0E7     		b	.L484
 8150              	.L493:
 8151 0086 00BF     		.align	2
 8152              	.L492:
 8153 0088 00000000 		.word	FS_FAT_LFN_API
 8154              		.cfi_endproc
 8155              	.LFE25:
 8157              		.section	.text.FS_FAT_LowEntryRename,"ax",%progbits
 8158              		.align	1
 8159              		.global	FS_FAT_LowEntryRename
 8160              		.syntax unified
ARM GAS  /tmp/ccazZ5Hl.s 			page 298


 8161              		.thumb
 8162              		.thumb_func
 8163              		.fpu fpv4-sp-d16
 8165              	FS_FAT_LowEntryRename:
 8166              	.LVL792:
 8167              	.LFB27:
4421:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_end_old;
 8168              		.loc 1 4421 1 view -0
 8169              		.cfi_startproc
 8170              		@ args = 12, pretend = 0, frame = 40
 8171              		@ frame_needed = 0, uses_anonymous_args = 0
4421:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_end_old;
 8172              		.loc 1 4421 1 is_stmt 0 view .LVU2878
 8173 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8174              	.LCFI105:
 8175              		.cfi_def_cfa_offset 36
 8176              		.cfi_offset 4, -36
 8177              		.cfi_offset 5, -32
 8178              		.cfi_offset 6, -28
 8179              		.cfi_offset 7, -24
 8180              		.cfi_offset 8, -20
 8181              		.cfi_offset 9, -16
 8182              		.cfi_offset 10, -12
 8183              		.cfi_offset 11, -8
 8184              		.cfi_offset 14, -4
 8185 0004 8FB0     		sub	sp, sp, #60
 8186              	.LCFI106:
 8187              		.cfi_def_cfa_offset 96
 8188 0006 0646     		mov	r6, r0
 8189 0008 8846     		mov	r8, r1
 8190 000a 1546     		mov	r5, r2
 8191 000c 1C46     		mov	r4, r3
 8192 000e 9DF86090 		ldrb	r9, [sp, #96]	@ zero_extendqisi2
 8193 0012 1A9F     		ldr	r7, [sp, #104]
4422:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR   dir_first_sec;
 8194              		.loc 1 4422 5 is_stmt 1 view .LVU2879
4423:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_start_old;
 8195              		.loc 1 4423 5 view .LVU2880
4424:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_start_new;
 8196              		.loc 1 4424 5 view .LVU2881
4425:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS   dir_end_new;
 8197              		.loc 1 4425 5 view .LVU2882
4426:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR  target_entry_first_clus;
 8198              		.loc 1 4426 5 view .LVU2883
4427:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA     *p_fat_data;
 8199              		.loc 1 4427 5 view .LVU2884
4428:rtos/uC-FS/FAT/fs_fat.c **** 
 8200              		.loc 1 4428 5 view .LVU2885
4431:rtos/uC-FS/FAT/fs_fat.c **** 
 8201              		.loc 1 4431 5 view .LVU2886
4431:rtos/uC-FS/FAT/fs_fat.c **** 
 8202              		.loc 1 4431 16 is_stmt 0 view .LVU2887
 8203 0014 D0F834A0 		ldr	r10, [r0, #52]
 8204              	.LVL793:
4434:rtos/uC-FS/FAT/fs_fat.c ****         target_entry_first_clus = p_entry_data_new->FileFirstClus;
 8205              		.loc 1 4434 5 is_stmt 1 view .LVU2888
4434:rtos/uC-FS/FAT/fs_fat.c ****         target_entry_first_clus = p_entry_data_new->FileFirstClus;
ARM GAS  /tmp/ccazZ5Hl.s 			page 299


 8206              		.loc 1 4434 8 is_stmt 0 view .LVU2889
 8207 0018 B9F1010F 		cmp	r9, #1
 8208 001c 13D1     		bne	.L499
4435:rtos/uC-FS/FAT/fs_fat.c **** 
 8209              		.loc 1 4435 9 is_stmt 1 view .LVU2890
4435:rtos/uC-FS/FAT/fs_fat.c **** 
 8210              		.loc 1 4435 33 is_stmt 0 view .LVU2891
 8211 001e 5B6A     		ldr	r3, [r3, #36]
 8212              	.LVL794:
4435:rtos/uC-FS/FAT/fs_fat.c **** 
 8213              		.loc 1 4435 33 view .LVU2892
 8214 0020 0593     		str	r3, [sp, #20]
 8215              	.LVL795:
4437:rtos/uC-FS/FAT/fs_fat.c ****         dir_start_new.SecPos    = p_entry_data_new->DirStartSecPos;
 8216              		.loc 1 4437 9 is_stmt 1 view .LVU2893
4437:rtos/uC-FS/FAT/fs_fat.c ****         dir_start_new.SecPos    = p_entry_data_new->DirStartSecPos;
 8217              		.loc 1 4437 51 is_stmt 0 view .LVU2894
 8218 0022 6369     		ldr	r3, [r4, #20]
 8219              	.LVL796:
4437:rtos/uC-FS/FAT/fs_fat.c ****         dir_start_new.SecPos    = p_entry_data_new->DirStartSecPos;
 8220              		.loc 1 4437 33 view .LVU2895
 8221 0024 0893     		str	r3, [sp, #32]
4438:rtos/uC-FS/FAT/fs_fat.c ****         dir_end_new.SecNbr      = p_entry_data_new->DirEndSec;
 8222              		.loc 1 4438 9 is_stmt 1 view .LVU2896
4438:rtos/uC-FS/FAT/fs_fat.c ****         dir_end_new.SecNbr      = p_entry_data_new->DirEndSec;
 8223              		.loc 1 4438 51 is_stmt 0 view .LVU2897
 8224 0026 A369     		ldr	r3, [r4, #24]
4438:rtos/uC-FS/FAT/fs_fat.c ****         dir_end_new.SecNbr      = p_entry_data_new->DirEndSec;
 8225              		.loc 1 4438 33 view .LVU2898
 8226 0028 0993     		str	r3, [sp, #36]
4439:rtos/uC-FS/FAT/fs_fat.c ****         dir_end_new.SecPos      = p_entry_data_new->DirEndSecPos;
 8227              		.loc 1 4439 9 is_stmt 1 view .LVU2899
4439:rtos/uC-FS/FAT/fs_fat.c ****         dir_end_new.SecPos      = p_entry_data_new->DirEndSecPos;
 8228              		.loc 1 4439 51 is_stmt 0 view .LVU2900
 8229 002a E369     		ldr	r3, [r4, #28]
4439:rtos/uC-FS/FAT/fs_fat.c ****         dir_end_new.SecPos      = p_entry_data_new->DirEndSecPos;
 8230              		.loc 1 4439 33 view .LVU2901
 8231 002c 0693     		str	r3, [sp, #24]
4440:rtos/uC-FS/FAT/fs_fat.c **** 
 8232              		.loc 1 4440 9 is_stmt 1 view .LVU2902
4440:rtos/uC-FS/FAT/fs_fat.c **** 
 8233              		.loc 1 4440 51 is_stmt 0 view .LVU2903
 8234 002e 236A     		ldr	r3, [r4, #32]
4440:rtos/uC-FS/FAT/fs_fat.c **** 
 8235              		.loc 1 4440 33 view .LVU2904
 8236 0030 0793     		str	r3, [sp, #28]
4442:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 8237              		.loc 1 4442 9 is_stmt 1 view .LVU2905
4442:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 8238              		.loc 1 4442 29 is_stmt 0 view .LVU2906
 8239 0032 2D4B     		ldr	r3, .L502
 8240 0034 D3F808B0 		ldr	fp, [r3, #8]
4442:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 8241              		.loc 1 4442 9 view .LVU2907
 8242 0038 0097     		str	r7, [sp]
 8243              	.LVL797:
4442:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
ARM GAS  /tmp/ccazZ5Hl.s 			page 300


 8244              		.loc 1 4442 9 view .LVU2908
 8245 003a 06AB     		add	r3, sp, #24
 8246 003c 08AA     		add	r2, sp, #32
 8247              	.LVL798:
4442:rtos/uC-FS/FAT/fs_fat.c ****                                          p_buf,
 8248              		.loc 1 4442 9 view .LVU2909
 8249 003e D847     		blx	fp
 8250              	.LVL799:
4447:rtos/uC-FS/FAT/fs_fat.c ****             return;
 8251              		.loc 1 4447 9 is_stmt 1 view .LVU2910
4447:rtos/uC-FS/FAT/fs_fat.c ****             return;
 8252              		.loc 1 4447 13 is_stmt 0 view .LVU2911
 8253 0040 3B88     		ldrh	r3, [r7]
4447:rtos/uC-FS/FAT/fs_fat.c ****             return;
 8254              		.loc 1 4447 12 view .LVU2912
 8255 0042 13B1     		cbz	r3, .L495
 8256 0044 0EE0     		b	.L494
 8257              	.LVL800:
 8258              	.L499:
4451:rtos/uC-FS/FAT/fs_fat.c ****     }
 8259              		.loc 1 4451 33 view .LVU2913
 8260 0046 0023     		movs	r3, #0
 8261              	.LVL801:
4451:rtos/uC-FS/FAT/fs_fat.c ****     }
 8262              		.loc 1 4451 33 view .LVU2914
 8263 0048 0593     		str	r3, [sp, #20]
 8264              	.LVL802:
 8265              	.L495:
4456:rtos/uC-FS/FAT/fs_fat.c **** 
 8266              		.loc 1 4456 5 is_stmt 1 view .LVU2915
4456:rtos/uC-FS/FAT/fs_fat.c **** 
 8267              		.loc 1 4456 19 is_stmt 0 view .LVU2916
 8268 004a 2369     		ldr	r3, [r4, #16]
 8269              	.LVL803:
4458:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
 8270              		.loc 1 4458 5 is_stmt 1 view .LVU2917
 8271 004c 0297     		str	r7, [sp, #8]
 8272 004e 0022     		movs	r2, #0
 8273 0050 0192     		str	r2, [sp, #4]
 8274 0052 0093     		str	r3, [sp]
 8275 0054 199B     		ldr	r3, [sp, #100]
 8276              	.LVL804:
4458:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
 8277              		.loc 1 4458 5 is_stmt 0 view .LVU2918
 8278 0056 2246     		mov	r2, r4
 8279 0058 4146     		mov	r1, r8
 8280 005a 3046     		mov	r0, r6
 8281 005c FFF7FEFF 		bl	FS_FAT_LowEntryCreate
 8282              	.LVL805:
4465:rtos/uC-FS/FAT/fs_fat.c ****         return;                                                 /* ... rtn err.                    
 8283              		.loc 1 4465 5 is_stmt 1 view .LVU2919
4465:rtos/uC-FS/FAT/fs_fat.c ****         return;                                                 /* ... rtn err.                    
 8284              		.loc 1 4465 9 is_stmt 0 view .LVU2920
 8285 0060 3B88     		ldrh	r3, [r7]
4465:rtos/uC-FS/FAT/fs_fat.c ****         return;                                                 /* ... rtn err.                    
 8286              		.loc 1 4465 8 view .LVU2921
 8287 0062 13B1     		cbz	r3, .L501
ARM GAS  /tmp/ccazZ5Hl.s 			page 301


 8288              	.LVL806:
 8289              	.L494:
4520:rtos/uC-FS/FAT/fs_fat.c **** #endif
 8290              		.loc 1 4520 1 view .LVU2922
 8291 0064 0FB0     		add	sp, sp, #60
 8292              	.LCFI107:
 8293              		.cfi_remember_state
 8294              		.cfi_def_cfa_offset 36
 8295              		@ sp needed
 8296 0066 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8297              	.LVL807:
 8298              	.L501:
 8299              	.LCFI108:
 8300              		.cfi_restore_state
4471:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->FileFirstClus = p_entry_data_old->FileFirstClus;
 8301              		.loc 1 4471 5 is_stmt 1 view .LVU2923
4471:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->FileFirstClus = p_entry_data_old->FileFirstClus;
 8302              		.loc 1 4471 55 is_stmt 0 view .LVU2924
 8303 006a 2B6B     		ldr	r3, [r5, #48]
4471:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->FileFirstClus = p_entry_data_old->FileFirstClus;
 8304              		.loc 1 4471 37 view .LVU2925
 8305 006c 2363     		str	r3, [r4, #48]
4472:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->FileSize      = p_entry_data_old->FileSize;
 8306              		.loc 1 4472 5 is_stmt 1 view .LVU2926
4472:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->FileSize      = p_entry_data_old->FileSize;
 8307              		.loc 1 4472 55 is_stmt 0 view .LVU2927
 8308 006e 6B6A     		ldr	r3, [r5, #36]
4472:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->FileSize      = p_entry_data_old->FileSize;
 8309              		.loc 1 4472 37 view .LVU2928
 8310 0070 6362     		str	r3, [r4, #36]
4473:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateCreate    = p_entry_data_old->DateCreate;
 8311              		.loc 1 4473 5 is_stmt 1 view .LVU2929
4473:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateCreate    = p_entry_data_old->DateCreate;
 8312              		.loc 1 4473 55 is_stmt 0 view .LVU2930
 8313 0072 6B68     		ldr	r3, [r5, #4]
4473:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateCreate    = p_entry_data_old->DateCreate;
 8314              		.loc 1 4473 37 view .LVU2931
 8315 0074 6360     		str	r3, [r4, #4]
4474:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->TimeCreate    = p_entry_data_old->TimeCreate;
 8316              		.loc 1 4474 5 is_stmt 1 view .LVU2932
4474:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->TimeCreate    = p_entry_data_old->TimeCreate;
 8317              		.loc 1 4474 55 is_stmt 0 view .LVU2933
 8318 0076 AB8E     		ldrh	r3, [r5, #52]
4474:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->TimeCreate    = p_entry_data_old->TimeCreate;
 8319              		.loc 1 4474 37 view .LVU2934
 8320 0078 A386     		strh	r3, [r4, #52]	@ movhi
4475:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateWr        = p_entry_data_old->DateWr;
 8321              		.loc 1 4475 5 is_stmt 1 view .LVU2935
4475:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateWr        = p_entry_data_old->DateWr;
 8322              		.loc 1 4475 55 is_stmt 0 view .LVU2936
 8323 007a EB8E     		ldrh	r3, [r5, #54]
4475:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateWr        = p_entry_data_old->DateWr;
 8324              		.loc 1 4475 37 view .LVU2937
 8325 007c E386     		strh	r3, [r4, #54]	@ movhi
4476:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->TimeWr        = p_entry_data_old->TimeWr;
 8326              		.loc 1 4476 5 is_stmt 1 view .LVU2938
4476:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->TimeWr        = p_entry_data_old->TimeWr;
ARM GAS  /tmp/ccazZ5Hl.s 			page 302


 8327              		.loc 1 4476 55 is_stmt 0 view .LVU2939
 8328 007e 6B8F     		ldrh	r3, [r5, #58]
4476:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->TimeWr        = p_entry_data_old->TimeWr;
 8329              		.loc 1 4476 37 view .LVU2940
 8330 0080 6387     		strh	r3, [r4, #58]	@ movhi
4477:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateAccess    = p_entry_data_old->DateAccess;
 8331              		.loc 1 4477 5 is_stmt 1 view .LVU2941
4477:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateAccess    = p_entry_data_old->DateAccess;
 8332              		.loc 1 4477 55 is_stmt 0 view .LVU2942
 8333 0082 AB8F     		ldrh	r3, [r5, #60]
4477:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data_new->DateAccess    = p_entry_data_old->DateAccess;
 8334              		.loc 1 4477 37 view .LVU2943
 8335 0084 A387     		strh	r3, [r4, #60]	@ movhi
4478:rtos/uC-FS/FAT/fs_fat.c **** 
 8336              		.loc 1 4478 5 is_stmt 1 view .LVU2944
4478:rtos/uC-FS/FAT/fs_fat.c **** 
 8337              		.loc 1 4478 55 is_stmt 0 view .LVU2945
 8338 0086 2B8F     		ldrh	r3, [r5, #56]
4478:rtos/uC-FS/FAT/fs_fat.c **** 
 8339              		.loc 1 4478 37 view .LVU2946
 8340 0088 2387     		strh	r3, [r4, #56]	@ movhi
4480:rtos/uC-FS/FAT/fs_fat.c ****                           p_buf,
 8341              		.loc 1 4480 5 is_stmt 1 view .LVU2947
 8342 008a 0097     		str	r7, [sp]
 8343 008c 0023     		movs	r3, #0
 8344 008e 2246     		mov	r2, r4
 8345 0090 4146     		mov	r1, r8
 8346 0092 3046     		mov	r0, r6
 8347 0094 FFF7FEFF 		bl	FS_FAT_LowEntryUpdate
 8348              	.LVL808:
4486:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8349              		.loc 1 4486 5 view .LVU2948
4486:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8350              		.loc 1 4486 9 is_stmt 0 view .LVU2949
 8351 0098 3B88     		ldrh	r3, [r7]
4486:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8352              		.loc 1 4486 8 view .LVU2950
 8353 009a 002B     		cmp	r3, #0
 8354 009c E2D1     		bne	.L494
4491:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_old.SecPos = p_entry_data_old->DirStartSecPos;
 8355              		.loc 1 4491 5 is_stmt 1 view .LVU2951
4491:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_old.SecPos = p_entry_data_old->DirStartSecPos;
 8356              		.loc 1 4491 44 is_stmt 0 view .LVU2952
 8357 009e 6B69     		ldr	r3, [r5, #20]
4491:rtos/uC-FS/FAT/fs_fat.c ****     dir_start_old.SecPos = p_entry_data_old->DirStartSecPos;
 8358              		.loc 1 4491 26 view .LVU2953
 8359 00a0 0A93     		str	r3, [sp, #40]
4492:rtos/uC-FS/FAT/fs_fat.c **** 
 8360              		.loc 1 4492 5 is_stmt 1 view .LVU2954
4492:rtos/uC-FS/FAT/fs_fat.c **** 
 8361              		.loc 1 4492 44 is_stmt 0 view .LVU2955
 8362 00a2 AB69     		ldr	r3, [r5, #24]
4492:rtos/uC-FS/FAT/fs_fat.c **** 
 8363              		.loc 1 4492 26 view .LVU2956
 8364 00a4 0B93     		str	r3, [sp, #44]
4494:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_old.SecPos   = p_entry_data_old->DirEndSecPos;
 8365              		.loc 1 4494 5 is_stmt 1 view .LVU2957
ARM GAS  /tmp/ccazZ5Hl.s 			page 303


4494:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_old.SecPos   = p_entry_data_old->DirEndSecPos;
 8366              		.loc 1 4494 44 is_stmt 0 view .LVU2958
 8367 00a6 EB69     		ldr	r3, [r5, #28]
4494:rtos/uC-FS/FAT/fs_fat.c ****     dir_end_old.SecPos   = p_entry_data_old->DirEndSecPos;
 8368              		.loc 1 4494 26 view .LVU2959
 8369 00a8 0C93     		str	r3, [sp, #48]
4495:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FN_API_Active.DirEntryDel( p_vol,
 8370              		.loc 1 4495 5 is_stmt 1 view .LVU2960
4495:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FN_API_Active.DirEntryDel( p_vol,
 8371              		.loc 1 4495 44 is_stmt 0 view .LVU2961
 8372 00aa 2B6A     		ldr	r3, [r5, #32]
4495:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_FN_API_Active.DirEntryDel( p_vol,
 8373              		.loc 1 4495 26 view .LVU2962
 8374 00ac 0D93     		str	r3, [sp, #52]
4496:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 8375              		.loc 1 4496 5 is_stmt 1 view .LVU2963
4496:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 8376              		.loc 1 4496 25 is_stmt 0 view .LVU2964
 8377 00ae 0E4B     		ldr	r3, .L502
 8378 00b0 9C68     		ldr	r4, [r3, #8]
 8379              	.LVL809:
4496:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 8380              		.loc 1 4496 5 view .LVU2965
 8381 00b2 0097     		str	r7, [sp]
 8382 00b4 0CAB     		add	r3, sp, #48
 8383 00b6 0AAA     		add	r2, sp, #40
 8384 00b8 4146     		mov	r1, r8
 8385 00ba 3046     		mov	r0, r6
 8386 00bc A047     		blx	r4
 8387              	.LVL810:
4502:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8388              		.loc 1 4502 5 is_stmt 1 view .LVU2966
4502:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8389              		.loc 1 4502 9 is_stmt 0 view .LVU2967
 8390 00be 3B88     		ldrh	r3, [r7]
4502:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8391              		.loc 1 4502 8 view .LVU2968
 8392 00c0 002B     		cmp	r3, #0
 8393 00c2 CFD1     		bne	.L494
4508:rtos/uC-FS/FAT/fs_fat.c ****         if (FS_FAT_IS_VALID_CLUS(p_fat_data, target_entry_first_clus) == DEF_YES) {
 8394              		.loc 1 4508 5 is_stmt 1 view .LVU2969
4508:rtos/uC-FS/FAT/fs_fat.c ****         if (FS_FAT_IS_VALID_CLUS(p_fat_data, target_entry_first_clus) == DEF_YES) {
 8395              		.loc 1 4508 8 is_stmt 0 view .LVU2970
 8396 00c4 B9F1010F 		cmp	r9, #1
 8397 00c8 CCD1     		bne	.L494
4509:rtos/uC-FS/FAT/fs_fat.c ****             (void)FS_FAT_ClusChainDel(p_vol,
 8398              		.loc 1 4509 9 is_stmt 1 view .LVU2971
4509:rtos/uC-FS/FAT/fs_fat.c ****             (void)FS_FAT_ClusChainDel(p_vol,
 8399              		.loc 1 4509 13 is_stmt 0 view .LVU2972
 8400 00ca DAF81430 		ldr	r3, [r10, #20]
4509:rtos/uC-FS/FAT/fs_fat.c ****             (void)FS_FAT_ClusChainDel(p_vol,
 8401              		.loc 1 4509 12 view .LVU2973
 8402 00ce 059A     		ldr	r2, [sp, #20]
 8403 00d0 9342     		cmp	r3, r2
 8404 00d2 C7D9     		bls	.L494
4509:rtos/uC-FS/FAT/fs_fat.c ****             (void)FS_FAT_ClusChainDel(p_vol,
 8405              		.loc 1 4509 71 discriminator 1 view .LVU2974
ARM GAS  /tmp/ccazZ5Hl.s 			page 304


 8406 00d4 012A     		cmp	r2, #1
 8407 00d6 C5D9     		bls	.L494
4510:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 8408              		.loc 1 4510 13 is_stmt 1 view .LVU2975
4510:rtos/uC-FS/FAT/fs_fat.c ****                                       p_buf,
 8409              		.loc 1 4510 19 is_stmt 0 view .LVU2976
 8410 00d8 0097     		str	r7, [sp]
 8411 00da 0123     		movs	r3, #1
 8412 00dc 4146     		mov	r1, r8
 8413 00de 3046     		mov	r0, r6
 8414 00e0 FFF7FEFF 		bl	FS_FAT_ClusChainDel
 8415              	.LVL811:
4515:rtos/uC-FS/FAT/fs_fat.c ****                 return;
 8416              		.loc 1 4515 13 is_stmt 1 view .LVU2977
 8417 00e4 BEE7     		b	.L494
 8418              	.L503:
 8419 00e6 00BF     		.align	2
 8420              	.L502:
 8421 00e8 00000000 		.word	FS_FAT_LFN_API
 8422              		.cfi_endproc
 8423              	.LFE27:
 8425              		.section	.text.FS_FAT_Char_LastPathSep,"ax",%progbits
 8426              		.align	1
 8427              		.global	FS_FAT_Char_LastPathSep
 8428              		.syntax unified
 8429              		.thumb
 8430              		.thumb_func
 8431              		.fpu fpv4-sp-d16
 8433              	FS_FAT_Char_LastPathSep:
 8434              	.LVL812:
 8435              	.LFB33:
4927:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR     *pstr_next;
 8436              		.loc 1 4927 1 view -0
 8437              		.cfi_startproc
 8438              		@ args = 0, pretend = 0, frame = 0
 8439              		@ frame_needed = 0, uses_anonymous_args = 0
4927:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR     *pstr_next;
 8440              		.loc 1 4927 1 is_stmt 0 view .LVU2979
 8441 0000 10B5     		push	{r4, lr}
 8442              	.LCFI109:
 8443              		.cfi_def_cfa_offset 8
 8444              		.cfi_offset 4, -8
 8445              		.cfi_offset 14, -4
 8446 0002 0446     		mov	r4, r0
4928:rtos/uC-FS/FAT/fs_fat.c ****     CPU_SIZE_T    str_len;
 8447              		.loc 1 4928 5 is_stmt 1 view .LVU2980
4929:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN   non_sep_found;
 8448              		.loc 1 4929 5 view .LVU2981
4930:rtos/uC-FS/FAT/fs_fat.c **** 
 8449              		.loc 1 4930 5 view .LVU2982
4933:rtos/uC-FS/FAT/fs_fat.c ****     str_len        = Str_Len_N(pstr, FS_FAT_MAX_PATH_NAME_LEN);
 8450              		.loc 1 4933 5 view .LVU2983
 8451              	.LVL813:
4934:rtos/uC-FS/FAT/fs_fat.c ****     pstr_next     += str_len;
 8452              		.loc 1 4934 5 view .LVU2984
4934:rtos/uC-FS/FAT/fs_fat.c ****     pstr_next     += str_len;
 8453              		.loc 1 4934 22 is_stmt 0 view .LVU2985
ARM GAS  /tmp/ccazZ5Hl.s 			page 305


 8454 0004 4FF48071 		mov	r1, #256
 8455 0008 FFF7FEFF 		bl	Str_Len_N
 8456              	.LVL814:
4935:rtos/uC-FS/FAT/fs_fat.c ****     non_sep_found  = DEF_NO;
 8457              		.loc 1 4935 5 is_stmt 1 view .LVU2986
4935:rtos/uC-FS/FAT/fs_fat.c ****     non_sep_found  = DEF_NO;
 8458              		.loc 1 4935 19 is_stmt 0 view .LVU2987
 8459 000c 2044     		add	r0, r0, r4
 8460              	.LVL815:
4936:rtos/uC-FS/FAT/fs_fat.c ****     while ( ( pstr_next     != pstr) &&                         /* Srch str from end until beginnin
 8461              		.loc 1 4936 5 is_stmt 1 view .LVU2988
4937:rtos/uC-FS/FAT/fs_fat.c ****            ((*pstr_next     != FS_FAT_PATH_SEP_CHAR) ||         /* ... until srch char found       
 8462              		.loc 1 4937 5 view .LVU2989
4936:rtos/uC-FS/FAT/fs_fat.c ****     while ( ( pstr_next     != pstr) &&                         /* Srch str from end until beginnin
 8463              		.loc 1 4936 20 is_stmt 0 view .LVU2990
 8464 000e 0022     		movs	r2, #0
4937:rtos/uC-FS/FAT/fs_fat.c ****            ((*pstr_next     != FS_FAT_PATH_SEP_CHAR) ||         /* ... until srch char found       
 8465              		.loc 1 4937 11 view .LVU2991
 8466 0010 00E0     		b	.L505
 8467              	.LVL816:
 8468              	.L506:
4944:rtos/uC-FS/FAT/fs_fat.c ****     }
 8469              		.loc 1 4944 9 is_stmt 1 view .LVU2992
4944:rtos/uC-FS/FAT/fs_fat.c ****     }
 8470              		.loc 1 4944 18 is_stmt 0 view .LVU2993
 8471 0012 0138     		subs	r0, r0, #1
 8472              	.LVL817:
 8473              	.L505:
4937:rtos/uC-FS/FAT/fs_fat.c ****            ((*pstr_next     != FS_FAT_PATH_SEP_CHAR) ||         /* ... until srch char found       
 8474              		.loc 1 4937 11 is_stmt 1 view .LVU2994
 8475 0014 A042     		cmp	r0, r4
 8476 0016 0AD0     		beq	.L507
4938:rtos/uC-FS/FAT/fs_fat.c ****             ( non_sep_found == DEF_NO))) {                      /* ... but after non-srch char foun
 8477              		.loc 1 4938 14 is_stmt 0 discriminator 1 view .LVU2995
 8478 0018 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
4937:rtos/uC-FS/FAT/fs_fat.c ****            ((*pstr_next     != FS_FAT_PATH_SEP_CHAR) ||         /* ... until srch char found       
 8479              		.loc 1 4937 38 discriminator 1 view .LVU2996
 8480 001a 5C2B     		cmp	r3, #92
 8481 001c 05D0     		beq	.L513
 8482              	.L508:
4940:rtos/uC-FS/FAT/fs_fat.c ****             (*pstr_next != ASCII_CHAR_NULL)) {
 8483              		.loc 1 4940 9 is_stmt 1 view .LVU2997
4940:rtos/uC-FS/FAT/fs_fat.c ****             (*pstr_next != ASCII_CHAR_NULL)) {
 8484              		.loc 1 4940 12 is_stmt 0 view .LVU2998
 8485 001e 5C2B     		cmp	r3, #92
 8486 0020 F7D0     		beq	.L506
4940:rtos/uC-FS/FAT/fs_fat.c ****             (*pstr_next != ASCII_CHAR_NULL)) {
 8487              		.loc 1 4940 50 discriminator 1 view .LVU2999
 8488 0022 002B     		cmp	r3, #0
 8489 0024 F5D0     		beq	.L506
4942:rtos/uC-FS/FAT/fs_fat.c ****         }
 8490              		.loc 1 4942 27 view .LVU3000
 8491 0026 0122     		movs	r2, #1
 8492              	.LVL818:
4942:rtos/uC-FS/FAT/fs_fat.c ****         }
 8493              		.loc 1 4942 27 view .LVU3001
 8494 0028 F3E7     		b	.L506
ARM GAS  /tmp/ccazZ5Hl.s 			page 306


 8495              	.LVL819:
 8496              	.L513:
4938:rtos/uC-FS/FAT/fs_fat.c ****             ( non_sep_found == DEF_NO))) {                      /* ... but after non-srch char foun
 8497              		.loc 1 4938 54 view .LVU3002
 8498 002a 002A     		cmp	r2, #0
 8499 002c F7D0     		beq	.L508
 8500              	.L507:
4948:rtos/uC-FS/FAT/fs_fat.c ****          return ((CPU_CHAR *)0);                                /* ... rtn NULL.                   
 8501              		.loc 1 4948 5 is_stmt 1 view .LVU3003
4948:rtos/uC-FS/FAT/fs_fat.c ****          return ((CPU_CHAR *)0);                                /* ... rtn NULL.                   
 8502              		.loc 1 4948 9 is_stmt 0 view .LVU3004
 8503 002e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
4948:rtos/uC-FS/FAT/fs_fat.c ****          return ((CPU_CHAR *)0);                                /* ... rtn NULL.                   
 8504              		.loc 1 4948 8 view .LVU3005
 8505 0030 5C2B     		cmp	r3, #92
 8506 0032 00D1     		bne	.L514
 8507              	.LVL820:
 8508              	.L504:
4953:rtos/uC-FS/FAT/fs_fat.c **** #endif
 8509              		.loc 1 4953 1 view .LVU3006
 8510 0034 10BD     		pop	{r4, pc}
 8511              	.LVL821:
 8512              	.L514:
4949:rtos/uC-FS/FAT/fs_fat.c ****     }
 8513              		.loc 1 4949 17 view .LVU3007
 8514 0036 0020     		movs	r0, #0
 8515              	.LVL822:
4949:rtos/uC-FS/FAT/fs_fat.c ****     }
 8516              		.loc 1 4949 17 view .LVU3008
 8517 0038 FCE7     		b	.L504
 8518              		.cfi_endproc
 8519              	.LFE33:
 8521              		.section	.text.FS_FAT_LowEntryFind,"ax",%progbits
 8522              		.align	1
 8523              		.global	FS_FAT_LowEntryFind
 8524              		.syntax unified
 8525              		.thumb
 8526              		.thumb_func
 8527              		.fpu fpv4-sp-d16
 8529              	FS_FAT_LowEntryFind:
 8530              	.LVL823:
 8531              	.LFB24:
3866:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U        attrib;
 8532              		.loc 1 3866 1 is_stmt 1 view -0
 8533              		.cfi_startproc
 8534              		@ args = 4, pretend = 0, frame = 24
 8535              		@ frame_needed = 0, uses_anonymous_args = 0
3866:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U        attrib;
 8536              		.loc 1 3866 1 is_stmt 0 view .LVU3010
 8537 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8538              	.LCFI110:
 8539              		.cfi_def_cfa_offset 36
 8540              		.cfi_offset 4, -36
 8541              		.cfi_offset 5, -32
 8542              		.cfi_offset 6, -28
 8543              		.cfi_offset 7, -24
 8544              		.cfi_offset 8, -20
ARM GAS  /tmp/ccazZ5Hl.s 			page 307


 8545              		.cfi_offset 9, -16
 8546              		.cfi_offset 10, -12
 8547              		.cfi_offset 11, -8
 8548              		.cfi_offset 14, -4
 8549 0004 8BB0     		sub	sp, sp, #44
 8550              	.LCFI111:
 8551              		.cfi_def_cfa_offset 80
 8552 0006 149F     		ldr	r7, [sp, #80]
3867:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_end_pos;
 8553              		.loc 1 3867 5 is_stmt 1 view .LVU3011
3868:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    dir_first_sec;
 8554              		.loc 1 3868 5 view .LVU3012
3869:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DIR_POS    dir_start_pos;
 8555              		.loc 1 3869 5 view .LVU3013
3870:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       is_dir;
 8556              		.loc 1 3870 5 view .LVU3014
3871:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_CLUS_NBR   file_clus;
 8557              		.loc 1 3871 5 view .LVU3015
3872:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_SEC_NBR    file_sec;
 8558              		.loc 1 3872 5 view .LVU3016
3873:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT32U        file_size_sec;
 8559              		.loc 1 3873 5 view .LVU3017
3874:rtos/uC-FS/FAT/fs_fat.c ****     CPU_BOOLEAN       valid;
 8560              		.loc 1 3874 5 view .LVU3018
3875:rtos/uC-FS/FAT/fs_fat.c ****     FS_BUF           *p_buf;
 8561              		.loc 1 3875 5 view .LVU3019
3876:rtos/uC-FS/FAT/fs_fat.c ****     CPU_INT08U       *p_dir_entry;
 8562              		.loc 1 3876 5 view .LVU3020
3877:rtos/uC-FS/FAT/fs_fat.c ****     FS_FAT_DATA      *p_fat_data;
 8563              		.loc 1 3877 5 view .LVU3021
3878:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 8564              		.loc 1 3878 5 view .LVU3022
3880:rtos/uC-FS/FAT/fs_fat.c ****     CPU_CHAR         *p_slash;
 8565              		.loc 1 3880 5 view .LVU3023
3881:rtos/uC-FS/FAT/fs_fat.c **** #endif
 8566              		.loc 1 3881 5 view .LVU3024
3887:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8567              		.loc 1 3887 5 view .LVU3025
3887:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8568              		.loc 1 3887 8 is_stmt 0 view .LVU3026
 8569 0008 13F0030F 		tst	r3, #3
 8570 000c 39D0     		beq	.L552
 8571 000e 8046     		mov	r8, r0
 8572 0010 0E46     		mov	r6, r1
 8573 0012 1546     		mov	r5, r2
 8574 0014 1C46     		mov	r4, r3
3892:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8575              		.loc 1 3892 5 is_stmt 1 view .LVU3027
3892:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8576              		.loc 1 3892 8 is_stmt 0 view .LVU3028
 8577 0016 13F4407F 		tst	r3, #768
 8578 001a 38D0     		beq	.L553
3897:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8579              		.loc 1 3897 5 is_stmt 1 view .LVU3029
3897:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8580              		.loc 1 3897 9 is_stmt 0 view .LVU3030
 8581 001c 03F48473 		and	r3, r3, #264
ARM GAS  /tmp/ccazZ5Hl.s 			page 308


 8582              	.LVL824:
3897:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8583              		.loc 1 3897 8 view .LVU3031
 8584 0020 B3F5847F 		cmp	r3, #264
 8585 0024 37D0     		beq	.L554
3902:rtos/uC-FS/FAT/fs_fat.c ****         if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_WR) == DEF_YES) {
 8586              		.loc 1 3902 5 is_stmt 1 view .LVU3032
3902:rtos/uC-FS/FAT/fs_fat.c ****         if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_WR) == DEF_YES) {
 8587              		.loc 1 3902 9 is_stmt 0 view .LVU3033
 8588 0026 C4F3C019 		ubfx	r9, r4, #7, #1
3902:rtos/uC-FS/FAT/fs_fat.c ****         if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_WR) == DEF_YES) {
 8589              		.loc 1 3902 8 view .LVU3034
 8590 002a 14F0800F 		tst	r4, #128
 8591 002e 02D0     		beq	.L520
3903:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8592              		.loc 1 3903 9 is_stmt 1 view .LVU3035
3903:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8593              		.loc 1 3903 12 is_stmt 0 view .LVU3036
 8594 0030 14F0020F 		tst	r4, #2
 8595 0034 33D0     		beq	.L555
 8596              	.L520:
3909:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8597              		.loc 1 3909 5 is_stmt 1 view .LVU3037
3909:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8598              		.loc 1 3909 9 is_stmt 0 view .LVU3038
 8599 0036 04F44173 		and	r3, r4, #772
3909:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_FILE_INVALID_ACCESS_MODE;
 8600              		.loc 1 3909 8 view .LVU3039
 8601 003a B3F5417F 		cmp	r3, #772
 8602 003e 32D0     		beq	.L556
3924:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->Mode = mode;
 8603              		.loc 1 3924 5 is_stmt 1 view .LVU3040
 8604 0040 3046     		mov	r0, r6
 8605              	.LVL825:
3924:rtos/uC-FS/FAT/fs_fat.c ****     p_entry_data->Mode = mode;
 8606              		.loc 1 3924 5 is_stmt 0 view .LVU3041
 8607 0042 FFF7FEFF 		bl	FS_FAT_FileDataClr
 8608              	.LVL826:
3925:rtos/uC-FS/FAT/fs_fat.c **** 
 8609              		.loc 1 3925 5 is_stmt 1 view .LVU3042
3925:rtos/uC-FS/FAT/fs_fat.c **** 
 8610              		.loc 1 3925 24 is_stmt 0 view .LVU3043
 8611 0046 F460     		str	r4, [r6, #12]
3927:rtos/uC-FS/FAT/fs_fat.c ****         if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_DIR) == DEF_YES) {
 8612              		.loc 1 3927 5 is_stmt 1 view .LVU3044
3927:rtos/uC-FS/FAT/fs_fat.c ****         if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_DIR) == DEF_YES) {
 8613              		.loc 1 3927 19 is_stmt 0 view .LVU3045
 8614 0048 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
3927:rtos/uC-FS/FAT/fs_fat.c ****         if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_DIR) == DEF_YES) {
 8615              		.loc 1 3927 8 view .LVU3046
 8616 004a 002B     		cmp	r3, #0
 8617 004c 37D1     		bne	.L522
3928:rtos/uC-FS/FAT/fs_fat.c ****             if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_MUST_CREATE) == DEF_NO) {
 8618              		.loc 1 3928 9 is_stmt 1 view .LVU3047
3928:rtos/uC-FS/FAT/fs_fat.c ****             if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_MUST_CREATE) == DEF_NO) {
 8619              		.loc 1 3928 12 is_stmt 0 view .LVU3048
 8620 004e 14F4807F 		tst	r4, #256
ARM GAS  /tmp/ccazZ5Hl.s 			page 309


 8621 0052 30D0     		beq	.L523
3929:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->Attrib        =  FS_FAT_DIRENT_ATTR_DIRECTORY;
 8622              		.loc 1 3929 13 is_stmt 1 view .LVU3049
3929:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->Attrib        =  FS_FAT_DIRENT_ATTR_DIRECTORY;
 8623              		.loc 1 3929 17 is_stmt 0 view .LVU3050
 8624 0054 C4F34012 		ubfx	r2, r4, #5, #1
3929:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->Attrib        =  FS_FAT_DIRENT_ATTR_DIRECTORY;
 8625              		.loc 1 3929 16 view .LVU3051
 8626 0058 14F0200F 		tst	r4, #32
 8627 005c 27D1     		bne	.L524
3930:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data                  = (FS_FAT_DATA *)p_vol->DataPtr;
 8628              		.loc 1 3930 17 is_stmt 1 view .LVU3052
3930:rtos/uC-FS/FAT/fs_fat.c ****                 p_fat_data                  = (FS_FAT_DATA *)p_vol->DataPtr;
 8629              		.loc 1 3930 45 is_stmt 0 view .LVU3053
 8630 005e 1023     		movs	r3, #16
 8631 0060 3363     		str	r3, [r6, #48]
3931:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->FileCurSec    =  p_fat_data->RootDirStart;
 8632              		.loc 1 3931 17 is_stmt 1 view .LVU3054
3931:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->FileCurSec    =  p_fat_data->RootDirStart;
 8633              		.loc 1 3931 45 is_stmt 0 view .LVU3055
 8634 0062 D8F83410 		ldr	r1, [r8, #52]
 8635              	.LVL827:
3932:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->FileFirstClus = (p_fat_data->RootDirStart < p_fat_data->DataStart) ? 
 8636              		.loc 1 3932 17 is_stmt 1 view .LVU3056
3932:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->FileFirstClus = (p_fat_data->RootDirStart < p_fat_data->DataStart) ? 
 8637              		.loc 1 3932 58 is_stmt 0 view .LVU3057
 8638 0066 8B6A     		ldr	r3, [r1, #40]
3932:rtos/uC-FS/FAT/fs_fat.c ****                 p_entry_data->FileFirstClus = (p_fat_data->RootDirStart < p_fat_data->DataStart) ? 
 8639              		.loc 1 3932 45 view .LVU3058
 8640 0068 B362     		str	r3, [r6, #40]
3933:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_NONE;
 8641              		.loc 1 3933 17 is_stmt 1 view .LVU3059
3933:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_NONE;
 8642              		.loc 1 3933 85 is_stmt 0 view .LVU3060
 8643 006a C86A     		ldr	r0, [r1, #44]
3933:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_NONE;
 8644              		.loc 1 3933 103 view .LVU3061
 8645 006c 8342     		cmp	r3, r0
 8646 006e 04D3     		bcc	.L525
3933:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_NONE;
 8647              		.loc 1 3933 105 discriminator 1 view .LVU3062
 8648 0070 1B1A     		subs	r3, r3, r0
 8649 0072 91F84020 		ldrb	r2, [r1, #64]	@ zero_extendqisi2
 8650 0076 D340     		lsrs	r3, r3, r2
3933:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_NONE;
 8651              		.loc 1 3933 103 discriminator 1 view .LVU3063
 8652 0078 9A1C     		adds	r2, r3, #2
 8653              	.L525:
3933:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_NONE;
 8654              		.loc 1 3933 45 discriminator 4 view .LVU3064
 8655 007a 7262     		str	r2, [r6, #36]
3934:rtos/uC-FS/FAT/fs_fat.c ****             } else {
 8656              		.loc 1 3934 16 is_stmt 1 discriminator 4 view .LVU3065
3934:rtos/uC-FS/FAT/fs_fat.c ****             } else {
 8657              		.loc 1 3934 23 is_stmt 0 discriminator 4 view .LVU3066
 8658 007c 0023     		movs	r3, #0
 8659 007e 3B80     		strh	r3, [r7]	@ movhi
ARM GAS  /tmp/ccazZ5Hl.s 			page 310


 8660 0080 02E0     		b	.L515
 8661              	.LVL828:
 8662              	.L552:
3888:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8663              		.loc 1 3888 8 is_stmt 1 view .LVU3067
3888:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8664              		.loc 1 3888 15 is_stmt 0 view .LVU3068
 8665 0082 40F22333 		movw	r3, #803
 8666              	.LVL829:
3888:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8667              		.loc 1 3888 15 view .LVU3069
 8668 0086 3B80     		strh	r3, [r7]	@ movhi
3889:rtos/uC-FS/FAT/fs_fat.c ****     }
 8669              		.loc 1 3889 9 is_stmt 1 view .LVU3070
 8670              	.LVL830:
 8671              	.L515:
4159:rtos/uC-FS/FAT/fs_fat.c **** 
 8672              		.loc 1 4159 1 is_stmt 0 view .LVU3071
 8673 0088 0BB0     		add	sp, sp, #44
 8674              	.LCFI112:
 8675              		.cfi_remember_state
 8676              		.cfi_def_cfa_offset 36
 8677              		@ sp needed
 8678 008a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8679              	.LVL831:
 8680              	.L553:
 8681              	.LCFI113:
 8682              		.cfi_restore_state
3893:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8683              		.loc 1 3893 8 is_stmt 1 view .LVU3072
3893:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8684              		.loc 1 3893 15 is_stmt 0 view .LVU3073
 8685 008e 40F22333 		movw	r3, #803
 8686              	.LVL832:
3893:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8687              		.loc 1 3893 15 view .LVU3074
 8688 0092 3B80     		strh	r3, [r7]	@ movhi
3894:rtos/uC-FS/FAT/fs_fat.c ****     }
 8689              		.loc 1 3894 9 is_stmt 1 view .LVU3075
 8690 0094 F8E7     		b	.L515
 8691              	.L554:
3898:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8692              		.loc 1 3898 8 view .LVU3076
3898:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8693              		.loc 1 3898 15 is_stmt 0 view .LVU3077
 8694 0096 40F22333 		movw	r3, #803
 8695 009a 3B80     		strh	r3, [r7]	@ movhi
3899:rtos/uC-FS/FAT/fs_fat.c ****     }
 8696              		.loc 1 3899 9 is_stmt 1 view .LVU3078
 8697 009c F4E7     		b	.L515
 8698              	.L555:
3904:rtos/uC-FS/FAT/fs_fat.c ****             return;
 8699              		.loc 1 3904 12 view .LVU3079
3904:rtos/uC-FS/FAT/fs_fat.c ****             return;
 8700              		.loc 1 3904 19 is_stmt 0 view .LVU3080
 8701 009e 40F22333 		movw	r3, #803
 8702 00a2 3B80     		strh	r3, [r7]	@ movhi
ARM GAS  /tmp/ccazZ5Hl.s 			page 311


3905:rtos/uC-FS/FAT/fs_fat.c ****         }
 8703              		.loc 1 3905 13 is_stmt 1 view .LVU3081
 8704 00a4 F0E7     		b	.L515
 8705              	.L556:
3910:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8706              		.loc 1 3910 8 view .LVU3082
3910:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8707              		.loc 1 3910 15 is_stmt 0 view .LVU3083
 8708 00a6 40F22333 		movw	r3, #803
 8709 00aa 3B80     		strh	r3, [r7]	@ movhi
3911:rtos/uC-FS/FAT/fs_fat.c ****     }
 8710              		.loc 1 3911 9 is_stmt 1 view .LVU3084
 8711 00ac ECE7     		b	.L515
 8712              	.LVL833:
 8713              	.L524:
3936:rtos/uC-FS/FAT/fs_fat.c ****                *p_err = FS_ERR_ENTRY_EXISTS;
 8714              		.loc 1 3936 85 view .LVU3085
3937:rtos/uC-FS/FAT/fs_fat.c ****             }
 8715              		.loc 1 3937 16 view .LVU3086
3937:rtos/uC-FS/FAT/fs_fat.c ****             }
 8716              		.loc 1 3937 23 is_stmt 0 view .LVU3087
 8717 00ae 4FF43073 		mov	r3, #704
 8718 00b2 3B80     		strh	r3, [r7]	@ movhi
 8719 00b4 E8E7     		b	.L515
 8720              	.L523:
3940:rtos/uC-FS/FAT/fs_fat.c ****            *p_err = FS_ERR_ENTRY_NOT_FILE;
 8721              		.loc 1 3940 79 is_stmt 1 view .LVU3088
3941:rtos/uC-FS/FAT/fs_fat.c ****         }
 8722              		.loc 1 3941 12 view .LVU3089
3941:rtos/uC-FS/FAT/fs_fat.c ****         }
 8723              		.loc 1 3941 19 is_stmt 0 view .LVU3090
 8724 00b6 4FF43173 		mov	r3, #708
 8725 00ba 3B80     		strh	r3, [r7]	@ movhi
3943:rtos/uC-FS/FAT/fs_fat.c ****     }
 8726              		.loc 1 3943 9 is_stmt 1 view .LVU3091
 8727 00bc E4E7     		b	.L515
 8728              	.L522:
3946:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 8729              		.loc 1 3946 5 view .LVU3092
3946:rtos/uC-FS/FAT/fs_fat.c ****     if (p_buf == (FS_BUF *)0) {
 8730              		.loc 1 3946 13 is_stmt 0 view .LVU3093
 8731 00be 4046     		mov	r0, r8
 8732 00c0 FFF7FEFF 		bl	FSBuf_Get
 8733              	.LVL834:
3947:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 8734              		.loc 1 3947 5 is_stmt 1 view .LVU3094
3947:rtos/uC-FS/FAT/fs_fat.c ****        *p_err = FS_ERR_BUF_NONE_AVAIL;
 8735              		.loc 1 3947 8 is_stmt 0 view .LVU3095
 8736 00c4 8246     		mov	r10, r0
 8737 00c6 70B3     		cbz	r0, .L557
3952:rtos/uC-FS/FAT/fs_fat.c ****                      p_buf,
 8738              		.loc 1 3952 5 is_stmt 1 view .LVU3096
 8739 00c8 0297     		str	r7, [sp, #8]
 8740 00ca 08AB     		add	r3, sp, #32
 8741 00cc 0193     		str	r3, [sp, #4]
 8742 00ce 05AB     		add	r3, sp, #20
 8743 00d0 0093     		str	r3, [sp]
ARM GAS  /tmp/ccazZ5Hl.s 			page 312


 8744 00d2 07AB     		add	r3, sp, #28
 8745 00d4 2A46     		mov	r2, r5
 8746 00d6 0146     		mov	r1, r0
 8747 00d8 4046     		mov	r0, r8
 8748              	.LVL835:
3952:rtos/uC-FS/FAT/fs_fat.c ****                      p_buf,
 8749              		.loc 1 3952 5 is_stmt 0 view .LVU3097
 8750 00da FFF7FEFF 		bl	FS_FAT_DataSrch
 8751              	.LVL836:
3961:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 8752              		.loc 1 3961 5 is_stmt 1 view .LVU3098
3961:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 8753              		.loc 1 3961 13 is_stmt 0 view .LVU3099
 8754 00de 3B88     		ldrh	r3, [r7]
3961:rtos/uC-FS/FAT/fs_fat.c **** #if (FS_CFG_RD_ONLY_EN == DEF_DISABLED)
 8755              		.loc 1 3961 5 view .LVU3100
 8756 00e0 43B3     		cbz	r3, .L528
 8757 00e2 40F2C522 		movw	r2, #709
 8758 00e6 9342     		cmp	r3, r2
 8759 00e8 15D1     		bne	.L529
3965:rtos/uC-FS/FAT/fs_fat.c ****              if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_CREATE | FS_FAT_MODE_MUST_CREATE) == DEF_YES) {
 8760              		.loc 1 3965 14 is_stmt 1 view .LVU3101
3965:rtos/uC-FS/FAT/fs_fat.c ****              if (DEF_BIT_IS_CLR(mode, FS_FAT_MODE_CREATE | FS_FAT_MODE_MUST_CREATE) == DEF_YES) {
 8761              		.loc 1 3965 40 is_stmt 0 view .LVU3102
 8762 00ea 079B     		ldr	r3, [sp, #28]
 8763 00ec 3361     		str	r3, [r6, #16]
3966:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Entry not found: %s.\r\n", name_entry));
 8764              		.loc 1 3966 14 is_stmt 1 view .LVU3103
3966:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Entry not found: %s.\r\n", name_entry));
 8765              		.loc 1 3966 17 is_stmt 0 view .LVU3104
 8766 00ee 14F0240F 		tst	r4, #36
 8767 00f2 1BD0     		beq	.L558
3976:rtos/uC-FS/FAT/fs_fat.c ****              if (p_slash != (CPU_CHAR *)0) {
 8768              		.loc 1 3976 14 is_stmt 1 view .LVU3105
3976:rtos/uC-FS/FAT/fs_fat.c ****              if (p_slash != (CPU_CHAR *)0) {
 8769              		.loc 1 3976 24 is_stmt 0 view .LVU3106
 8770 00f4 2846     		mov	r0, r5
 8771 00f6 FFF7FEFF 		bl	FS_FAT_Char_LastPathSep
 8772              	.LVL837:
3977:rtos/uC-FS/FAT/fs_fat.c ****                  name_entry = p_slash + 1u;
 8773              		.loc 1 3977 14 is_stmt 1 view .LVU3107
3977:rtos/uC-FS/FAT/fs_fat.c ****                  name_entry = p_slash + 1u;
 8774              		.loc 1 3977 17 is_stmt 0 view .LVU3108
 8775 00fa 00B1     		cbz	r0, .L531
3978:rtos/uC-FS/FAT/fs_fat.c ****              }
 8776              		.loc 1 3978 18 is_stmt 1 view .LVU3109
3978:rtos/uC-FS/FAT/fs_fat.c ****              }
 8777              		.loc 1 3978 29 is_stmt 0 view .LVU3110
 8778 00fc 451C     		adds	r5, r0, #1
 8779              	.LVL838:
 8780              	.L531:
3981:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_LowEntryCreate(p_vol,
 8781              		.loc 1 3981 14 is_stmt 1 view .LVU3111
3981:rtos/uC-FS/FAT/fs_fat.c ****              FS_FAT_LowEntryCreate(p_vol,
 8782              		.loc 1 3981 21 is_stmt 0 view .LVU3112
 8783 00fe C4F30024 		ubfx	r4, r4, #8, #1
 8784              	.LVL839:
ARM GAS  /tmp/ccazZ5Hl.s 			page 313


3982:rtos/uC-FS/FAT/fs_fat.c ****                                    p_buf,
 8785              		.loc 1 3982 14 is_stmt 1 view .LVU3113
 8786 0102 0297     		str	r7, [sp, #8]
 8787 0104 0194     		str	r4, [sp, #4]
 8788 0106 079B     		ldr	r3, [sp, #28]
 8789 0108 0093     		str	r3, [sp]
 8790 010a 2B46     		mov	r3, r5
 8791 010c 3246     		mov	r2, r6
 8792 010e 5146     		mov	r1, r10
 8793 0110 4046     		mov	r0, r8
 8794              	.LVL840:
3982:rtos/uC-FS/FAT/fs_fat.c ****                                    p_buf,
 8795              		.loc 1 3982 14 is_stmt 0 view .LVU3114
 8796 0112 FFF7FEFF 		bl	FS_FAT_LowEntryCreate
 8797              	.LVL841:
3989:rtos/uC-FS/FAT/fs_fat.c **** #endif
 8798              		.loc 1 3989 14 is_stmt 1 view .LVU3115
 8799              	.L529:
4154:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Flush(p_buf, p_err);
 8800              		.loc 1 4154 5 view .LVU3116
4154:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Flush(p_buf, p_err);
 8801              		.loc 1 4154 8 is_stmt 0 view .LVU3117
 8802 0116 3B88     		ldrh	r3, [r7]
4154:rtos/uC-FS/FAT/fs_fat.c ****         FSBuf_Flush(p_buf, p_err);
 8803              		.loc 1 4154 7 view .LVU3118
 8804 0118 002B     		cmp	r3, #0
 8805 011a 00F0DF80 		beq	.L559
 8806              	.L549:
4158:rtos/uC-FS/FAT/fs_fat.c **** }
 8807              		.loc 1 4158 5 is_stmt 1 view .LVU3119
 8808 011e 5046     		mov	r0, r10
 8809 0120 FFF7FEFF 		bl	FSBuf_Free
 8810              	.LVL842:
 8811 0124 B0E7     		b	.L515
 8812              	.LVL843:
 8813              	.L557:
3948:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8814              		.loc 1 3948 8 view .LVU3120
3948:rtos/uC-FS/FAT/fs_fat.c ****         return;
 8815              		.loc 1 3948 15 is_stmt 0 view .LVU3121
 8816 0126 6423     		movs	r3, #100
 8817 0128 3B80     		strh	r3, [r7]	@ movhi
3949:rtos/uC-FS/FAT/fs_fat.c ****     }
 8818              		.loc 1 3949 9 is_stmt 1 view .LVU3122
 8819 012a ADE7     		b	.L515
 8820              	.LVL844:
 8821              	.L558:
3967:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 8822              		.loc 1 3967 95 view .LVU3123
3968:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 8823              		.loc 1 3968 18 view .LVU3124
 8824 012c 5046     		mov	r0, r10
 8825 012e FFF7FEFF 		bl	FSBuf_Free
 8826              	.LVL845:
3969:rtos/uC-FS/FAT/fs_fat.c ****              }
 8827              		.loc 1 3969 18 view .LVU3125
 8828 0132 A9E7     		b	.L515
ARM GAS  /tmp/ccazZ5Hl.s 			page 314


 8829              	.L528:
3995:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 8830              		.loc 1 3995 14 view .LVU3126
3995:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 8831              		.loc 1 3995 17 is_stmt 0 view .LVU3127
 8832 0134 14F0200F 		tst	r4, #32
 8833 0138 71D1     		bne	.L560
4002:rtos/uC-FS/FAT/fs_fat.c ****              attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR)
 8834              		.loc 1 4002 14 is_stmt 1 view .LVU3128
4002:rtos/uC-FS/FAT/fs_fat.c ****              attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR)
 8835              		.loc 1 4002 47 is_stmt 0 view .LVU3129
 8836 013a DAF81050 		ldr	r5, [r10, #16]
 8837              	.LVL846:
4002:rtos/uC-FS/FAT/fs_fat.c ****              attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR)
 8838              		.loc 1 4002 70 view .LVU3130
 8839 013e 099B     		ldr	r3, [sp, #36]
4002:rtos/uC-FS/FAT/fs_fat.c ****              attrib      = MEM_VAL_GET_INT08U_LITTLE((void *)(p_dir_entry + FS_FAT_DIRENT_OFF_ATTR)
 8840              		.loc 1 4002 26 view .LVU3131
 8841 0140 1D44     		add	r5, r5, r3
 8842              	.LVL847:
4003:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is invalid.    
 8843              		.loc 1 4003 14 is_stmt 1 view .LVU3132
4003:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is invalid.    
 8844              		.loc 1 4003 26 is_stmt 0 view .LVU3133
 8845 0142 95F80BB0 		ldrb	fp, [r5, #11]	@ zero_extendqisi2
 8846              	.LVL848:
4005:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 8847              		.loc 1 4005 14 is_stmt 1 view .LVU3134
4005:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 8848              		.loc 1 4005 17 is_stmt 0 view .LVU3135
 8849 0146 0BF01802 		and	r2, fp, #24
 8850 014a 182A     		cmp	r2, #24
 8851 014c 6ED0     		beq	.L561
4013:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 8852              		.loc 1 4013 14 is_stmt 1 view .LVU3136
4013:rtos/uC-FS/FAT/fs_fat.c ****                  FSBuf_Free(p_buf);
 8853              		.loc 1 4013 17 is_stmt 0 view .LVU3137
 8854 014e 1BF0080F 		tst	fp, #8
 8855 0152 72D1     		bne	.L562
4020:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is dir but mode
 8856              		.loc 1 4020 14 is_stmt 1 view .LVU3138
4020:rtos/uC-FS/FAT/fs_fat.c ****                                                                 /* Rtn err if entry is dir but mode
 8857              		.loc 1 4020 17 is_stmt 0 view .LVU3139
 8858 0154 1BF0100F 		tst	fp, #16
 8859 0158 7DD0     		beq	.L535
4022:rtos/uC-FS/FAT/fs_fat.c ****                      FSBuf_Free(p_buf);
 8860              		.loc 1 4022 18 is_stmt 1 view .LVU3140
4022:rtos/uC-FS/FAT/fs_fat.c ****                      FSBuf_Free(p_buf);
 8861              		.loc 1 4022 21 is_stmt 0 view .LVU3141
 8862 015a 14F4807F 		tst	r4, #256
 8863 015e 73D0     		beq	.L563
 8864              	.L536:
4039:rtos/uC-FS/FAT/fs_fat.c ****                  (DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_READ_ONLY) == DEF_YES) &&
 8865              		.loc 1 4039 14 is_stmt 1 view .LVU3142
4039:rtos/uC-FS/FAT/fs_fat.c ****                  (DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_READ_ONLY) == DEF_YES) &&
 8866              		.loc 1 4039 17 is_stmt 0 view .LVU3143
 8867 0160 14F0020F 		tst	r4, #2
ARM GAS  /tmp/ccazZ5Hl.s 			page 315


 8868 0164 05D0     		beq	.L537
4039:rtos/uC-FS/FAT/fs_fat.c ****                  (DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_READ_ONLY) == DEF_YES) &&
 8869              		.loc 1 4039 84 discriminator 1 view .LVU3144
 8870 0166 1BF0010F 		tst	fp, #1
 8871 016a 02D0     		beq	.L537
4040:rtos/uC-FS/FAT/fs_fat.c ****                  (DEF_BIT_IS_CLR(mode,   FS_FAT_MODE_DEL)              == DEF_YES)) {
 8872              		.loc 1 4040 84 view .LVU3145
 8873 016c 14F0800F 		tst	r4, #128
 8874 0170 7BD0     		beq	.L564
 8875              	.L537:
4049:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirStartSec    = dir_start_pos.SecNbr;
 8876              		.loc 1 4049 14 is_stmt 1 view .LVU3146
4049:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirStartSec    = dir_start_pos.SecNbr;
 8877              		.loc 1 4049 43 is_stmt 0 view .LVU3147
 8878 0172 079A     		ldr	r2, [sp, #28]
 8879 0174 3261     		str	r2, [r6, #16]
4050:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirStartSecPos = dir_start_pos.SecPos;
 8880              		.loc 1 4050 14 is_stmt 1 view .LVU3148
4050:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirStartSecPos = dir_start_pos.SecPos;
 8881              		.loc 1 4050 58 is_stmt 0 view .LVU3149
 8882 0176 059A     		ldr	r2, [sp, #20]
4050:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirStartSecPos = dir_start_pos.SecPos;
 8883              		.loc 1 4050 43 view .LVU3150
 8884 0178 7261     		str	r2, [r6, #20]
4051:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirEndSec      = dir_end_pos.SecNbr;
 8885              		.loc 1 4051 14 is_stmt 1 view .LVU3151
4051:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirEndSec      = dir_end_pos.SecNbr;
 8886              		.loc 1 4051 58 is_stmt 0 view .LVU3152
 8887 017a 069A     		ldr	r2, [sp, #24]
4051:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirEndSec      = dir_end_pos.SecNbr;
 8888              		.loc 1 4051 43 view .LVU3153
 8889 017c B261     		str	r2, [r6, #24]
4052:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirEndSecPos   = dir_end_pos.SecPos;
 8890              		.loc 1 4052 14 is_stmt 1 view .LVU3154
4052:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirEndSecPos   = dir_end_pos.SecPos;
 8891              		.loc 1 4052 56 is_stmt 0 view .LVU3155
 8892 017e 089A     		ldr	r2, [sp, #32]
4052:rtos/uC-FS/FAT/fs_fat.c ****              p_entry_data->DirEndSecPos   = dir_end_pos.SecPos;
 8893              		.loc 1 4052 43 view .LVU3156
 8894 0180 F261     		str	r2, [r6, #28]
4053:rtos/uC-FS/FAT/fs_fat.c **** 
 8895              		.loc 1 4053 14 is_stmt 1 view .LVU3157
4053:rtos/uC-FS/FAT/fs_fat.c **** 
 8896              		.loc 1 4053 43 is_stmt 0 view .LVU3158
 8897 0182 3362     		str	r3, [r6, #32]
4056:rtos/uC-FS/FAT/fs_fat.c ****                                  p_dir_entry);
 8898              		.loc 1 4056 14 is_stmt 1 view .LVU3159
 8899 0184 2946     		mov	r1, r5
 8900 0186 3046     		mov	r0, r6
 8901 0188 FFF7FEFF 		bl	FS_FAT_FileDataInit
 8902              	.LVL849:
4061:rtos/uC-FS/FAT/fs_fat.c ****              is_dir        =  DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY);
 8903              		.loc 1 4061 14 view .LVU3160
4061:rtos/uC-FS/FAT/fs_fat.c ****              is_dir        =  DEF_BIT_IS_SET(attrib, FS_FAT_DIRENT_ATTR_DIRECTORY);
 8904              		.loc 1 4061 28 is_stmt 0 view .LVU3161
 8905 018c 7268     		ldr	r2, [r6, #4]
 8906              	.LVL850:
ARM GAS  /tmp/ccazZ5Hl.s 			page 316


4062:rtos/uC-FS/FAT/fs_fat.c ****              p_fat_data    = (FS_FAT_DATA *)p_vol->DataPtr;
 8907              		.loc 1 4062 14 is_stmt 1 view .LVU3162
4062:rtos/uC-FS/FAT/fs_fat.c ****              p_fat_data    = (FS_FAT_DATA *)p_vol->DataPtr;
 8908              		.loc 1 4062 28 is_stmt 0 view .LVU3163
 8909 018e CBF30010 		ubfx	r0, fp, #4, #1
 8910              	.LVL851:
4063:rtos/uC-FS/FAT/fs_fat.c **** 
 8911              		.loc 1 4063 14 is_stmt 1 view .LVU3164
4063:rtos/uC-FS/FAT/fs_fat.c **** 
 8912              		.loc 1 4063 28 is_stmt 0 view .LVU3165
 8913 0192 D8F83410 		ldr	r1, [r8, #52]
 8914              	.LVL852:
4066:rtos/uC-FS/FAT/fs_fat.c ****              if ((file_clus     != 0u) ||                       /* If file first clus is non zero .
 8915              		.loc 1 4066 14 is_stmt 1 view .LVU3166
4066:rtos/uC-FS/FAT/fs_fat.c ****              if ((file_clus     != 0u) ||                       /* If file first clus is non zero .
 8916              		.loc 1 4066 27 is_stmt 0 view .LVU3167
 8917 0196 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 8918 0198 95F815C0 		ldrb	ip, [r5, #21]	@ zero_extendqisi2
 8919 019c 03EB0C2C 		add	ip, r3, ip, lsl #8
 8920 01a0 AB7E     		ldrb	r3, [r5, #26]	@ zero_extendqisi2
 8921 01a2 ED7E     		ldrb	r5, [r5, #27]	@ zero_extendqisi2
 8922              	.LVL853:
4066:rtos/uC-FS/FAT/fs_fat.c ****              if ((file_clus     != 0u) ||                       /* If file first clus is non zero .
 8923              		.loc 1 4066 27 view .LVU3168
 8924 01a4 03EB0523 		add	r3, r3, r5, lsl #8
 8925 01a8 9BB2     		uxth	r3, r3
 8926              	.LVL854:
4067:rtos/uC-FS/FAT/fs_fat.c ****                  (file_size_sec != 0u) ||                       /* ... or file has non-zero size ..
 8927              		.loc 1 4067 14 is_stmt 1 view .LVU3169
4067:rtos/uC-FS/FAT/fs_fat.c ****                  (file_size_sec != 0u) ||                       /* ... or file has non-zero size ..
 8928              		.loc 1 4067 17 is_stmt 0 view .LVU3170
 8929 01aa 13EB0C43 		adds	r3, r3, ip, lsl #16
 8930              	.LVL855:
4067:rtos/uC-FS/FAT/fs_fat.c ****                  (file_size_sec != 0u) ||                       /* ... or file has non-zero size ..
 8931              		.loc 1 4067 17 view .LVU3171
 8932 01ae 02D1     		bne	.L538
4067:rtos/uC-FS/FAT/fs_fat.c ****                  (file_size_sec != 0u) ||                       /* ... or file has non-zero size ..
 8933              		.loc 1 4067 40 discriminator 1 view .LVU3172
 8934 01b0 0AB9     		cbnz	r2, .L538
4068:rtos/uC-FS/FAT/fs_fat.c ****                  (is_dir        == DEF_YES)) {                  /* ... or entry is dir ...         
 8935              		.loc 1 4068 40 view .LVU3173
 8936 01b2 0028     		cmp	r0, #0
 8937 01b4 6CD0     		beq	.L539
 8938              	.L538:
4071:rtos/uC-FS/FAT/fs_fat.c ****                      (p_fat_data->FAT_Type == 16u)) {
 8939              		.loc 1 4071 18 is_stmt 1 view .LVU3174
4071:rtos/uC-FS/FAT/fs_fat.c ****                      (p_fat_data->FAT_Type == 16u)) {
 8940              		.loc 1 4071 33 is_stmt 0 view .LVU3175
 8941 01b6 91F84A00 		ldrb	r0, [r1, #74]	@ zero_extendqisi2
 8942              	.LVL856:
4071:rtos/uC-FS/FAT/fs_fat.c ****                      (p_fat_data->FAT_Type == 16u)) {
 8943              		.loc 1 4071 21 view .LVU3176
 8944 01ba 0C28     		cmp	r0, #12
 8945 01bc 5CD0     		beq	.L540
4071:rtos/uC-FS/FAT/fs_fat.c ****                      (p_fat_data->FAT_Type == 16u)) {
 8946              		.loc 1 4071 52 discriminator 1 view .LVU3177
 8947 01be 1028     		cmp	r0, #16
ARM GAS  /tmp/ccazZ5Hl.s 			page 317


 8948 01c0 5AD0     		beq	.L540
 8949              	.LVL857:
 8950              	.L541:
4078:rtos/uC-FS/FAT/fs_fat.c ****                  if (valid == DEF_NO) {
 8951              		.loc 1 4078 18 is_stmt 1 view .LVU3178
4078:rtos/uC-FS/FAT/fs_fat.c ****                  if (valid == DEF_NO) {
 8952              		.loc 1 4078 31 is_stmt 0 view .LVU3179
 8953 01c2 4869     		ldr	r0, [r1, #20]
4078:rtos/uC-FS/FAT/fs_fat.c ****                  if (valid == DEF_NO) {
 8954              		.loc 1 4078 28 view .LVU3180
 8955 01c4 9842     		cmp	r0, r3
 8956 01c6 01D9     		bls	.L542
4078:rtos/uC-FS/FAT/fs_fat.c ****                  if (valid == DEF_NO) {
 8957              		.loc 1 4078 31 discriminator 1 view .LVU3181
 8958 01c8 012B     		cmp	r3, #1
 8959 01ca 02D8     		bhi	.L543
 8960              	.L542:
 8961              	.LVL858:
4079:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Invalid clus in dir entry: %d\n", file_c
 8962              		.loc 1 4079 18 is_stmt 1 view .LVU3182
4080:rtos/uC-FS/FAT/fs_fat.c ****                      if (DEF_BIT_IS_SET(mode, FS_FAT_MODE_DEL) == DEF_NO) {     /* See Note #5.    
 8963              		.loc 1 4080 105 view .LVU3183
4081:rtos/uC-FS/FAT/fs_fat.c ****                         *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 8964              		.loc 1 4081 22 view .LVU3184
4081:rtos/uC-FS/FAT/fs_fat.c ****                         *p_err = FS_ERR_VOL_INVALID_SEC_NBR;
 8965              		.loc 1 4081 25 is_stmt 0 view .LVU3185
 8966 01cc B9F1000F 		cmp	r9, #0
 8967 01d0 57D0     		beq	.L565
 8968              	.LVL859:
 8969              	.L543:
4087:rtos/uC-FS/FAT/fs_fat.c ****                  file_sec                    = FS_FAT_CLUS_TO_SEC(p_fat_data, file_clus);
 8970              		.loc 1 4087 18 is_stmt 1 view .LVU3186
4087:rtos/uC-FS/FAT/fs_fat.c ****                  file_sec                    = FS_FAT_CLUS_TO_SEC(p_fat_data, file_clus);
 8971              		.loc 1 4087 46 is_stmt 0 view .LVU3187
 8972 01d2 7362     		str	r3, [r6, #36]
4088:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = file_sec;
 8973              		.loc 1 4088 18 is_stmt 1 view .LVU3188
4088:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = file_sec;
 8974              		.loc 1 4088 48 is_stmt 0 view .LVU3189
 8975 01d4 C86A     		ldr	r0, [r1, #44]
 8976 01d6 023B     		subs	r3, r3, #2
 8977              	.LVL860:
4088:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = file_sec;
 8978              		.loc 1 4088 48 view .LVU3190
 8979 01d8 91F84010 		ldrb	r1, [r1, #64]	@ zero_extendqisi2
 8980              	.LVL861:
4088:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = file_sec;
 8981              		.loc 1 4088 48 view .LVU3191
 8982 01dc 8B40     		lsls	r3, r3, r1
4088:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = file_sec;
 8983              		.loc 1 4088 46 view .LVU3192
 8984 01de 0344     		add	r3, r3, r0
 8985              	.LVL862:
4089:rtos/uC-FS/FAT/fs_fat.c **** 
 8986              		.loc 1 4089 18 is_stmt 1 view .LVU3193
4089:rtos/uC-FS/FAT/fs_fat.c **** 
 8987              		.loc 1 4089 46 is_stmt 0 view .LVU3194
ARM GAS  /tmp/ccazZ5Hl.s 			page 318


 8988 01e0 B362     		str	r3, [r6, #40]
 8989              	.LVL863:
 8990              	.L544:
4099:rtos/uC-FS/FAT/fs_fat.c ****                                                                                     /* Chk whether 
 8991              		.loc 1 4099 14 is_stmt 1 view .LVU3195
4099:rtos/uC-FS/FAT/fs_fat.c ****                                                                                     /* Chk whether 
 8992              		.loc 1 4099 17 is_stmt 0 view .LVU3196
 8993 01e2 B9F1000F 		cmp	r9, #0
 8994 01e6 66D0     		beq	.L545
4101:rtos/uC-FS/FAT/fs_fat.c ****                  if (is_dir == DEF_YES) {
 8995              		.loc 1 4101 18 is_stmt 1 view .LVU3197
4101:rtos/uC-FS/FAT/fs_fat.c ****                  if (is_dir == DEF_YES) {
 8996              		.loc 1 4101 27 is_stmt 0 view .LVU3198
 8997 01e8 336B     		ldr	r3, [r6, #48]
 8998              	.LVL864:
4102:rtos/uC-FS/FAT/fs_fat.c ****                      empty = FS_FAT_LowDirChkEmpty(p_vol,
 8999              		.loc 1 4102 18 is_stmt 1 view .LVU3199
4102:rtos/uC-FS/FAT/fs_fat.c ****                      empty = FS_FAT_LowDirChkEmpty(p_vol,
 9000              		.loc 1 4102 21 is_stmt 0 view .LVU3200
 9001 01ea 13F0100F 		tst	r3, #16
 9002 01ee 0AD0     		beq	.L546
4103:rtos/uC-FS/FAT/fs_fat.c ****                                                    p_buf,
 9003              		.loc 1 4103 22 is_stmt 1 view .LVU3201
4103:rtos/uC-FS/FAT/fs_fat.c ****                                                    p_buf,
 9004              		.loc 1 4103 30 is_stmt 0 view .LVU3202
 9005 01f0 3B46     		mov	r3, r7
 9006              	.LVL865:
4103:rtos/uC-FS/FAT/fs_fat.c ****                                                    p_buf,
 9007              		.loc 1 4103 30 view .LVU3203
 9008 01f2 726A     		ldr	r2, [r6, #36]
 9009              	.LVL866:
4103:rtos/uC-FS/FAT/fs_fat.c ****                                                    p_buf,
 9010              		.loc 1 4103 30 view .LVU3204
 9011 01f4 5146     		mov	r1, r10
 9012 01f6 4046     		mov	r0, r8
 9013 01f8 FFF7FEFF 		bl	FS_FAT_LowDirChkEmpty
 9014              	.LVL867:
4107:rtos/uC-FS/FAT/fs_fat.c ****                           FSBuf_Free(p_buf);
 9015              		.loc 1 4107 22 is_stmt 1 view .LVU3205
4107:rtos/uC-FS/FAT/fs_fat.c ****                           FSBuf_Free(p_buf);
 9016              		.loc 1 4107 26 is_stmt 0 view .LVU3206
 9017 01fc 3A88     		ldrh	r2, [r7]
4107:rtos/uC-FS/FAT/fs_fat.c ****                           FSBuf_Free(p_buf);
 9018              		.loc 1 4107 25 view .LVU3207
 9019 01fe 002A     		cmp	r2, #0
 9020 0200 4AD1     		bne	.L566
4111:rtos/uC-FS/FAT/fs_fat.c ****                           FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Cannot delete non-empty directory.\
 9021              		.loc 1 4111 22 is_stmt 1 view .LVU3208
4111:rtos/uC-FS/FAT/fs_fat.c ****                           FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Cannot delete non-empty directory.\
 9022              		.loc 1 4111 25 is_stmt 0 view .LVU3209
 9023 0202 0028     		cmp	r0, #0
 9024 0204 4CD0     		beq	.L567
 9025              	.LVL868:
 9026              	.L546:
4119:rtos/uC-FS/FAT/fs_fat.c ****                                     p_buf,
 9027              		.loc 1 4119 18 is_stmt 1 view .LVU3210
 9028 0206 3B46     		mov	r3, r7
ARM GAS  /tmp/ccazZ5Hl.s 			page 319


 9029 0208 3246     		mov	r2, r6
 9030 020a 5146     		mov	r1, r10
 9031 020c 4046     		mov	r0, r8
 9032 020e FFF7FEFF 		bl	FS_FAT_LowEntryDel
 9033              	.LVL869:
4123:rtos/uC-FS/FAT/fs_fat.c ****                       FSBuf_Free(p_buf);
 9034              		.loc 1 4123 18 view .LVU3211
4123:rtos/uC-FS/FAT/fs_fat.c ****                       FSBuf_Free(p_buf);
 9035              		.loc 1 4123 22 is_stmt 0 view .LVU3212
 9036 0212 3B88     		ldrh	r3, [r7]
4123:rtos/uC-FS/FAT/fs_fat.c ****                       FSBuf_Free(p_buf);
 9037              		.loc 1 4123 21 view .LVU3213
 9038 0214 002B     		cmp	r3, #0
 9039 0216 4AD1     		bne	.L568
 9040              	.L548:
4147:rtos/uC-FS/FAT/fs_fat.c ****              break;
 9041              		.loc 1 4147 13 is_stmt 1 view .LVU3214
4147:rtos/uC-FS/FAT/fs_fat.c ****              break;
 9042              		.loc 1 4147 20 is_stmt 0 view .LVU3215
 9043 0218 0023     		movs	r3, #0
 9044 021a 3B80     		strh	r3, [r7]	@ movhi
4148:rtos/uC-FS/FAT/fs_fat.c **** 
 9045              		.loc 1 4148 14 is_stmt 1 view .LVU3216
 9046 021c 7BE7     		b	.L529
 9047              	.LVL870:
 9048              	.L560:
3996:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Entry should not exist: %s.\r\n", name_entry
 9049              		.loc 1 3996 18 view .LVU3217
 9050 021e 5046     		mov	r0, r10
 9051 0220 FFF7FEFF 		bl	FSBuf_Free
 9052              	.LVL871:
3997:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_ENTRY_EXISTS;
 9053              		.loc 1 3997 102 view .LVU3218
3998:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 9054              		.loc 1 3998 17 view .LVU3219
3998:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 9055              		.loc 1 3998 24 is_stmt 0 view .LVU3220
 9056 0224 4FF43073 		mov	r3, #704
 9057 0228 3B80     		strh	r3, [r7]	@ movhi
3999:rtos/uC-FS/FAT/fs_fat.c ****              }
 9058              		.loc 1 3999 18 is_stmt 1 view .LVU3221
 9059 022a 2DE7     		b	.L515
 9060              	.LVL872:
 9061              	.L561:
4006:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Invalid entry: %s.\r\n", name_entry));
 9062              		.loc 1 4006 18 view .LVU3222
 9063 022c 5046     		mov	r0, r10
 9064 022e FFF7FEFF 		bl	FSBuf_Free
 9065              	.LVL873:
4007:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_ENTRY_NOT_FILE;
 9066              		.loc 1 4007 93 view .LVU3223
4008:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 9067              		.loc 1 4008 17 view .LVU3224
4008:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 9068              		.loc 1 4008 24 is_stmt 0 view .LVU3225
 9069 0232 4FF43173 		mov	r3, #708
 9070 0236 3B80     		strh	r3, [r7]	@ movhi
ARM GAS  /tmp/ccazZ5Hl.s 			page 320


4009:rtos/uC-FS/FAT/fs_fat.c ****              }
 9071              		.loc 1 4009 18 is_stmt 1 view .LVU3226
 9072 0238 26E7     		b	.L515
 9073              	.L562:
4014:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Volume ID: %s.\r\n", name_entry));
 9074              		.loc 1 4014 18 view .LVU3227
 9075 023a 5046     		mov	r0, r10
 9076 023c FFF7FEFF 		bl	FSBuf_Free
 9077              	.LVL874:
4015:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_ENTRY_NOT_FILE;
 9078              		.loc 1 4015 89 view .LVU3228
4016:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 9079              		.loc 1 4016 17 view .LVU3229
4016:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 9080              		.loc 1 4016 24 is_stmt 0 view .LVU3230
 9081 0240 4FF43173 		mov	r3, #708
 9082 0244 3B80     		strh	r3, [r7]	@ movhi
4017:rtos/uC-FS/FAT/fs_fat.c ****              }
 9083              		.loc 1 4017 18 is_stmt 1 view .LVU3231
 9084 0246 1FE7     		b	.L515
 9085              	.L563:
4023:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Dir NOT file: %s.\r\n", name_entry));
 9086              		.loc 1 4023 22 view .LVU3232
 9087 0248 5046     		mov	r0, r10
 9088 024a FFF7FEFF 		bl	FSBuf_Free
 9089              	.LVL875:
4024:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_ENTRY_NOT_FILE;
 9090              		.loc 1 4024 96 view .LVU3233
4025:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 9091              		.loc 1 4025 21 view .LVU3234
4025:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 9092              		.loc 1 4025 28 is_stmt 0 view .LVU3235
 9093 024e 4FF43173 		mov	r3, #708
 9094 0252 3B80     		strh	r3, [r7]	@ movhi
4026:rtos/uC-FS/FAT/fs_fat.c ****                  }
 9095              		.loc 1 4026 22 is_stmt 1 view .LVU3236
 9096 0254 18E7     		b	.L515
 9097              	.L535:
4030:rtos/uC-FS/FAT/fs_fat.c ****                      FSBuf_Free(p_buf);
 9098              		.loc 1 4030 18 view .LVU3237
4030:rtos/uC-FS/FAT/fs_fat.c ****                      FSBuf_Free(p_buf);
 9099              		.loc 1 4030 21 is_stmt 0 view .LVU3238
 9100 0256 14F4007F 		tst	r4, #512
 9101 025a 81D1     		bne	.L536
4031:rtos/uC-FS/FAT/fs_fat.c ****                      FS_TRACE_DBG(("FS_FAT_LowEntryFind(): File NOT dir: %s.\r\n", name_entry));
 9102              		.loc 1 4031 22 is_stmt 1 view .LVU3239
 9103 025c 5046     		mov	r0, r10
 9104 025e FFF7FEFF 		bl	FSBuf_Free
 9105              	.LVL876:
4032:rtos/uC-FS/FAT/fs_fat.c ****                     *p_err = FS_ERR_ENTRY_NOT_DIR;
 9106              		.loc 1 4032 96 view .LVU3240
4033:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 9107              		.loc 1 4033 21 view .LVU3241
4033:rtos/uC-FS/FAT/fs_fat.c ****                      return;
 9108              		.loc 1 4033 28 is_stmt 0 view .LVU3242
 9109 0262 40F2C223 		movw	r3, #706
 9110 0266 3B80     		strh	r3, [r7]	@ movhi
ARM GAS  /tmp/ccazZ5Hl.s 			page 321


4034:rtos/uC-FS/FAT/fs_fat.c ****                  }
 9111              		.loc 1 4034 22 is_stmt 1 view .LVU3243
 9112 0268 0EE7     		b	.L515
 9113              	.L564:
4042:rtos/uC-FS/FAT/fs_fat.c ****                  FS_TRACE_DBG(("FS_FAT_LowEntryFind(): Entry is read only: %s.\r\n", name_entry));
 9114              		.loc 1 4042 18 view .LVU3244
 9115 026a 5046     		mov	r0, r10
 9116 026c FFF7FEFF 		bl	FSBuf_Free
 9117              	.LVL877:
4043:rtos/uC-FS/FAT/fs_fat.c ****                 *p_err = FS_ERR_ENTRY_RD_ONLY;
 9118              		.loc 1 4043 98 view .LVU3245
4044:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 9119              		.loc 1 4044 17 view .LVU3246
4044:rtos/uC-FS/FAT/fs_fat.c ****                  return;
 9120              		.loc 1 4044 24 is_stmt 0 view .LVU3247
 9121 0270 4FF43273 		mov	r3, #712
 9122 0274 3B80     		strh	r3, [r7]	@ movhi
4045:rtos/uC-FS/FAT/fs_fat.c ****              }
 9123              		.loc 1 4045 18 is_stmt 1 view .LVU3248
 9124 0276 07E7     		b	.L515
 9125              	.LVL878:
 9126              	.L540:
4073:rtos/uC-FS/FAT/fs_fat.c ****                          FS_TRACE_DBG(("FS_FAT_LowEntryFind(): FstCluHI non-zero on FAT12/16 vol; d
 9127              		.loc 1 4073 22 view .LVU3249
4073:rtos/uC-FS/FAT/fs_fat.c ****                          FS_TRACE_DBG(("FS_FAT_LowEntryFind(): FstCluHI non-zero on FAT12/16 vol; d
 9128              		.loc 1 4073 25 is_stmt 0 view .LVU3250
 9129 0278 B3F5803F 		cmp	r3, #65536
 9130 027c A1D3     		bcc	.L541
4074:rtos/uC-FS/FAT/fs_fat.c ****                          file_clus &= DEF_INT_16U_MAX_VAL;
 9131              		.loc 1 4074 128 is_stmt 1 view .LVU3251
4075:rtos/uC-FS/FAT/fs_fat.c ****                      }
 9132              		.loc 1 4075 26 view .LVU3252
4075:rtos/uC-FS/FAT/fs_fat.c ****                      }
 9133              		.loc 1 4075 36 is_stmt 0 view .LVU3253
 9134 027e 9BB2     		uxth	r3, r3
 9135              	.LVL879:
4075:rtos/uC-FS/FAT/fs_fat.c ****                      }
 9136              		.loc 1 4075 36 view .LVU3254
 9137 0280 9FE7     		b	.L541
 9138              	.LVL880:
 9139              	.L565:
4082:rtos/uC-FS/FAT/fs_fat.c ****                          FSBuf_Free(p_buf);
 9140              		.loc 1 4082 25 is_stmt 1 view .LVU3255
4082:rtos/uC-FS/FAT/fs_fat.c ****                          FSBuf_Free(p_buf);
 9141              		.loc 1 4082 32 is_stmt 0 view .LVU3256
 9142 0282 40F27E53 		movw	r3, #1406
 9143              	.LVL881:
4082:rtos/uC-FS/FAT/fs_fat.c ****                          FSBuf_Free(p_buf);
 9144              		.loc 1 4082 32 view .LVU3257
 9145 0286 3B80     		strh	r3, [r7]	@ movhi
4083:rtos/uC-FS/FAT/fs_fat.c ****                          return;
 9146              		.loc 1 4083 26 is_stmt 1 view .LVU3258
 9147 0288 5046     		mov	r0, r10
 9148 028a FFF7FEFF 		bl	FSBuf_Free
 9149              	.LVL882:
4084:rtos/uC-FS/FAT/fs_fat.c ****                      }
 9150              		.loc 1 4084 26 view .LVU3259
ARM GAS  /tmp/ccazZ5Hl.s 			page 322


 9151 028e FBE6     		b	.L515
 9152              	.LVL883:
 9153              	.L539:
4092:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = 0u;
 9154              		.loc 1 4092 18 view .LVU3260
4092:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = 0u;
 9155              		.loc 1 4092 46 is_stmt 0 view .LVU3261
 9156 0290 0023     		movs	r3, #0
 9157              	.LVL884:
4092:rtos/uC-FS/FAT/fs_fat.c ****                  p_entry_data->FileCurSec    = 0u;
 9158              		.loc 1 4092 46 view .LVU3262
 9159 0292 7362     		str	r3, [r6, #36]
4093:rtos/uC-FS/FAT/fs_fat.c ****              }
 9160              		.loc 1 4093 18 is_stmt 1 view .LVU3263
4093:rtos/uC-FS/FAT/fs_fat.c ****              }
 9161              		.loc 1 4093 46 is_stmt 0 view .LVU3264
 9162 0294 B362     		str	r3, [r6, #40]
 9163 0296 A4E7     		b	.L544
 9164              	.LVL885:
 9165              	.L566:
4108:rtos/uC-FS/FAT/fs_fat.c ****                           return;
 9166              		.loc 1 4108 27 is_stmt 1 view .LVU3265
 9167 0298 5046     		mov	r0, r10
 9168              	.LVL886:
4108:rtos/uC-FS/FAT/fs_fat.c ****                           return;
 9169              		.loc 1 4108 27 is_stmt 0 view .LVU3266
 9170 029a FFF7FEFF 		bl	FSBuf_Free
 9171              	.LVL887:
4109:rtos/uC-FS/FAT/fs_fat.c ****                      }
 9172              		.loc 1 4109 27 is_stmt 1 view .LVU3267
 9173 029e F3E6     		b	.L515
 9174              	.LVL888:
 9175              	.L567:
4112:rtos/uC-FS/FAT/fs_fat.c ****                          *p_err = FS_ERR_ENTRY_NOT_EMPTY;
 9176              		.loc 1 4112 106 view .LVU3268
4113:rtos/uC-FS/FAT/fs_fat.c ****                           FSBuf_Free(p_buf);
 9177              		.loc 1 4113 26 view .LVU3269
4113:rtos/uC-FS/FAT/fs_fat.c ****                           FSBuf_Free(p_buf);
 9178              		.loc 1 4113 33 is_stmt 0 view .LVU3270
 9179 02a0 40F2C323 		movw	r3, #707
 9180 02a4 3B80     		strh	r3, [r7]	@ movhi
4114:rtos/uC-FS/FAT/fs_fat.c ****                           return;
 9181              		.loc 1 4114 27 is_stmt 1 view .LVU3271
 9182 02a6 5046     		mov	r0, r10
 9183              	.LVL889:
4114:rtos/uC-FS/FAT/fs_fat.c ****                           return;
 9184              		.loc 1 4114 27 is_stmt 0 view .LVU3272
 9185 02a8 FFF7FEFF 		bl	FSBuf_Free
 9186              	.LVL890:
4115:rtos/uC-FS/FAT/fs_fat.c ****                      }
 9187              		.loc 1 4115 27 is_stmt 1 view .LVU3273
 9188 02ac ECE6     		b	.L515
 9189              	.L568:
4124:rtos/uC-FS/FAT/fs_fat.c ****                       return;
 9190              		.loc 1 4124 23 view .LVU3274
 9191 02ae 5046     		mov	r0, r10
 9192 02b0 FFF7FEFF 		bl	FSBuf_Free
ARM GAS  /tmp/ccazZ5Hl.s 			page 323


 9193              	.LVL891:
4125:rtos/uC-FS/FAT/fs_fat.c ****                  }
 9194              		.loc 1 4125 23 view .LVU3275
 9195 02b4 E8E6     		b	.L515
 9196              	.LVL892:
 9197              	.L545:
4131:rtos/uC-FS/FAT/fs_fat.c ****                      if (p_entry_data->FileSize > 0u) {
 9198              		.loc 1 4131 18 view .LVU3276
4131:rtos/uC-FS/FAT/fs_fat.c ****                      if (p_entry_data->FileSize > 0u) {
 9199              		.loc 1 4131 21 is_stmt 0 view .LVU3277
 9200 02b6 14F0080F 		tst	r4, #8
 9201 02ba ADD0     		beq	.L548
4132:rtos/uC-FS/FAT/fs_fat.c ****                          FS_FAT_LowEntryTruncate(p_vol,
 9202              		.loc 1 4132 22 is_stmt 1 view .LVU3278
4132:rtos/uC-FS/FAT/fs_fat.c ****                          FS_FAT_LowEntryTruncate(p_vol,
 9203              		.loc 1 4132 25 is_stmt 0 view .LVU3279
 9204 02bc 002A     		cmp	r2, #0
 9205 02be ABD0     		beq	.L548
4133:rtos/uC-FS/FAT/fs_fat.c ****                                                  p_buf,
 9206              		.loc 1 4133 26 is_stmt 1 view .LVU3280
 9207 02c0 0097     		str	r7, [sp]
 9208 02c2 0023     		movs	r3, #0
 9209 02c4 3246     		mov	r2, r6
 9210              	.LVL893:
4133:rtos/uC-FS/FAT/fs_fat.c ****                                                  p_buf,
 9211              		.loc 1 4133 26 is_stmt 0 view .LVU3281
 9212 02c6 5146     		mov	r1, r10
 9213 02c8 4046     		mov	r0, r8
 9214 02ca FFF7FEFF 		bl	FS_FAT_LowEntryTruncate
 9215              	.LVL894:
4138:rtos/uC-FS/FAT/fs_fat.c ****                               FSBuf_Free(p_buf);
 9216              		.loc 1 4138 26 is_stmt 1 view .LVU3282
4138:rtos/uC-FS/FAT/fs_fat.c ****                               FSBuf_Free(p_buf);
 9217              		.loc 1 4138 30 is_stmt 0 view .LVU3283
 9218 02ce 3B88     		ldrh	r3, [r7]
4138:rtos/uC-FS/FAT/fs_fat.c ****                               FSBuf_Free(p_buf);
 9219              		.loc 1 4138 29 view .LVU3284
 9220 02d0 002B     		cmp	r3, #0
 9221 02d2 A1D0     		beq	.L548
4139:rtos/uC-FS/FAT/fs_fat.c ****                               return;
 9222              		.loc 1 4139 31 is_stmt 1 view .LVU3285
 9223 02d4 5046     		mov	r0, r10
 9224 02d6 FFF7FEFF 		bl	FSBuf_Free
 9225              	.LVL895:
4140:rtos/uC-FS/FAT/fs_fat.c ****                          }
 9226              		.loc 1 4140 31 view .LVU3286
 9227 02da D5E6     		b	.L515
 9228              	.LVL896:
 9229              	.L559:
4155:rtos/uC-FS/FAT/fs_fat.c ****     }
 9230              		.loc 1 4155 9 view .LVU3287
 9231 02dc 3946     		mov	r1, r7
 9232 02de 5046     		mov	r0, r10
 9233 02e0 FFF7FEFF 		bl	FSBuf_Flush
 9234              	.LVL897:
 9235 02e4 1BE7     		b	.L549
 9236              		.cfi_endproc
ARM GAS  /tmp/ccazZ5Hl.s 			page 324


 9237              	.LFE24:
 9239              		.section	.bss.FS_FAT_DataPool,"aw",%nobits
 9240              		.align	2
 9241              		.set	.LANCHOR3,. + 0
 9244              	FS_FAT_DataPool:
 9245 0000 00000000 		.space	24
 9245      00000000 
 9245      00000000 
 9245      00000000 
 9245      00000000 
 9246              		.section	.rodata.FS_FAT_NameDot,"a"
 9247              		.align	2
 9248              		.set	.LANCHOR4,. + 0
 9251              	FS_FAT_NameDot:
 9252 0000 2E202020 		.word	538976302
 9253 0004 20202020 		.word	538976288
 9254 0008 20202020 		.word	538976288
 9255              		.section	.rodata.FS_FAT_NameDotDot,"a"
 9256              		.align	2
 9257              		.set	.LANCHOR5,. + 0
 9260              	FS_FAT_NameDotDot:
 9261 0000 2E2E2020 		.word	538979886
 9262 0004 20202020 		.word	538976288
 9263 0008 20202020 		.word	538976288
 9264              		.section	.rodata.FS_FAT_TblFAT12,"a"
 9265              		.align	2
 9266              		.set	.LANCHOR2,. + 0
 9269              	FS_FAT_TblFAT12:
 9270 0000 24000000 		.word	36
 9271 0004 00000000 		.word	0
 9272 0008 25000000 		.word	37
 9273 000c 01000000 		.word	1
 9274 0010 C80F0000 		.word	4040
 9275 0014 02000000 		.word	2
 9276 0018 791F0000 		.word	8057
 9277 001c 04000000 		.word	4
 9278 0020 A83E0000 		.word	16040
 9279 0024 08000000 		.word	8
 9280 0028 327D0000 		.word	32050
 9281 002c 10000000 		.word	16
 9282 0030 3CFA0000 		.word	64060
 9283 0034 20000000 		.word	32
 9284 0038 50F40100 		.word	128080
 9285 003c 40000000 		.word	64
 9286 0040 78E80300 		.word	256120
 9287 0044 00000000 		.word	0
 9288 0048 00000000 		.word	0
 9289 004c 00000000 		.word	0
 9290              		.section	.rodata.FS_FAT_TblFAT16,"a"
 9291              		.align	2
 9292              		.set	.LANCHOR1,. + 0
 9295              	FS_FAT_TblFAT16:
 9296 0000 D0200000 		.word	8400
 9297 0004 00000000 		.word	0
 9298 0008 A87F0000 		.word	32680
 9299 000c 02000000 		.word	2
 9300 0010 70FF0300 		.word	262000
ARM GAS  /tmp/ccazZ5Hl.s 			page 325


 9301 0014 04000000 		.word	4
 9302 0018 E0FE0700 		.word	524000
 9303 001c 08000000 		.word	8
 9304 0020 C0FD0F00 		.word	1048000
 9305 0024 10000000 		.word	16
 9306 0028 80FB1F00 		.word	2096000
 9307 002c 20000000 		.word	32
 9308 0030 00004000 		.word	4194304
 9309 0034 40000000 		.word	64
 9310 0038 FFFFFFFF 		.word	-1
 9311 003c 00000000 		.word	0
 9312 0040 00000000 		.word	0
 9313 0044 00000000 		.word	0
 9314              		.section	.rodata.FS_FAT_TblFAT32,"a"
 9315              		.align	2
 9316              		.set	.LANCHOR0,. + 0
 9319              	FS_FAT_TblFAT32:
 9320 0000 28040100 		.word	66600
 9321 0004 00000000 		.word	0
 9322 0008 00200800 		.word	532480
 9323 000c 01000000 		.word	1
 9324 0010 00000001 		.word	16777216
 9325 0014 08000000 		.word	8
 9326 0018 00000002 		.word	33554432
 9327 001c 10000000 		.word	16
 9328 0020 00000004 		.word	67108864
 9329 0024 20000000 		.word	32
 9330 0028 FFFFFFFF 		.word	-1
 9331 002c 40000000 		.word	64
 9332 0030 00000000 		.word	0
 9333 0034 00000000 		.word	0
 9334              		.text
 9335              	.Letext0:
 9336              		.file 2 "rtos/uC-CPU/ARM-Cortex-M/ARMv7-M/GNU/cpu.h"
 9337              		.file 3 "rtos/uC-LIB/lib_def.h"
 9338              		.file 4 "rtos/uC-LIB/lib_mem.h"
 9339              		.file 5 "rtos/uC-Clk/Source/clk.h"
 9340              		.file 6 "rtos/uC-FS/FAT/../Source/fs_type.h"
 9341              		.file 7 "rtos/uC-FS/FAT/../Source/fs_buf.h"
 9342              		.file 8 "rtos/uC-FS/FAT/../Source/fs_dev.h"
 9343              		.file 9 "rtos/uC-FS/FAT/../Source/fs_sys.h"
 9344              		.file 10 "rtos/uC-FS/FAT/../Source/fs_vol.h"
 9345              		.file 11 "rtos/uC-FS/FAT/../Source/fs_err.h"
 9346              		.file 12 "rtos/uC-FS/FAT/../Source/fs_ctr.h"
 9347              		.file 13 "rtos/uC-FS/FAT/fs_fat_type.h"
 9348              		.file 14 "rtos/uC-FS/FAT/fs_fat.h"
 9349              		.file 15 "rtos/uC-FS/FAT/fs_fat_fat12.h"
 9350              		.file 16 "rtos/uC-FS/FAT/fs_fat_fat16.h"
 9351              		.file 17 "rtos/uC-FS/FAT/fs_fat_fat32.h"
 9352              		.file 18 "rtos/uC-FS/FAT/fs_fat_lfn.h"
 9353              		.file 19 "rtos/uC-FS/FAT/fs_fat_sfn.h"
 9354              		.file 20 "rtos/uC-FS/FAT/../Source/fs_util.h"
 9355              		.file 21 "rtos/uC-LIB/lib_str.h"
 9356              		.file 22 "rtos/uC-FS/FAT/../Source/fs.h"
 9357              		.file 23 "rtos/uC-CPU/cpu_core.h"
 9358              		.file 24 "rtos/uC-FS/FAT/fs_fat_file.h"
 9359              		.file 25 "rtos/uC-FS/FAT/fs_fat_dir.h"
ARM GAS  /tmp/ccazZ5Hl.s 			page 326


ARM GAS  /tmp/ccazZ5Hl.s 			page 327


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fs_fat.c
     /tmp/ccazZ5Hl.s:18     .text.FS_FAT_GetSysCfg:0000000000000000 $t
     /tmp/ccazZ5Hl.s:25     .text.FS_FAT_GetSysCfg:0000000000000000 FS_FAT_GetSysCfg
     /tmp/ccazZ5Hl.s:348    .text.FS_FAT_GetSysCfg:0000000000000118 $d
     /tmp/ccazZ5Hl.s:356    .text.FS_FAT_DataSrch:0000000000000000 $t
     /tmp/ccazZ5Hl.s:362    .text.FS_FAT_DataSrch:0000000000000000 FS_FAT_DataSrch
     /tmp/ccazZ5Hl.s:718    .text.FS_FAT_DataSrch:000000000000013c $d
     /tmp/ccazZ5Hl.s:723    .text.FS_FAT_FileDataClr:0000000000000000 $t
     /tmp/ccazZ5Hl.s:729    .text.FS_FAT_FileDataClr:0000000000000000 FS_FAT_FileDataClr
     /tmp/ccazZ5Hl.s:798    .text.FS_FAT_FileDataInit:0000000000000000 $t
     /tmp/ccazZ5Hl.s:804    .text.FS_FAT_FileDataInit:0000000000000000 FS_FAT_FileDataInit
     /tmp/ccazZ5Hl.s:869    .text.FS_FAT_DataClr:0000000000000000 $t
     /tmp/ccazZ5Hl.s:875    .text.FS_FAT_DataClr:0000000000000000 FS_FAT_DataClr
     /tmp/ccazZ5Hl.s:965    .text.FS_FAT_ChkBootSec:0000000000000000 $t
     /tmp/ccazZ5Hl.s:971    .text.FS_FAT_ChkBootSec:0000000000000000 FS_FAT_ChkBootSec
     /tmp/ccazZ5Hl.s:1040   .text.FS_FAT_ChkBootSec:0000000000000044 $d
     /tmp/ccazZ5Hl.s:1073   .text.FS_FAT_ChkBootSec:0000000000000064 $t
     /tmp/ccazZ5Hl.s:1526   .text.FS_FAT_ChkBootSec:0000000000000284 $d
     /tmp/ccazZ5Hl.s:1534   .text.FS_FAT_ClusChainDel:0000000000000000 $t
     /tmp/ccazZ5Hl.s:1541   .text.FS_FAT_ClusChainDel:0000000000000000 FS_FAT_ClusChainDel
     /tmp/ccazZ5Hl.s:1789   .text.FS_FAT_ClusChainFollow:0000000000000000 $t
     /tmp/ccazZ5Hl.s:1796   .text.FS_FAT_ClusChainFollow:0000000000000000 FS_FAT_ClusChainFollow
     /tmp/ccazZ5Hl.s:1991   .text.FS_FAT_ClusChainEndFind:0000000000000000 $t
     /tmp/ccazZ5Hl.s:1998   .text.FS_FAT_ClusChainEndFind:0000000000000000 FS_FAT_ClusChainEndFind
     /tmp/ccazZ5Hl.s:2055   .text.FS_FAT_ClusChainReverseDel:0000000000000000 $t
     /tmp/ccazZ5Hl.s:2062   .text.FS_FAT_ClusChainReverseDel:0000000000000000 FS_FAT_ClusChainReverseDel
     /tmp/ccazZ5Hl.s:2254   .text.FS_FAT_ClusChainReverseFollow:0000000000000000 $t
     /tmp/ccazZ5Hl.s:2261   .text.FS_FAT_ClusChainReverseFollow:0000000000000000 FS_FAT_ClusChainReverseFollow
     /tmp/ccazZ5Hl.s:2426   .text.FS_FAT_ClusFreeFind:0000000000000000 $t
     /tmp/ccazZ5Hl.s:2433   .text.FS_FAT_ClusFreeFind:0000000000000000 FS_FAT_ClusFreeFind
     /tmp/ccazZ5Hl.s:2576   .text.FS_FAT_ClusChainAlloc:0000000000000000 $t
     /tmp/ccazZ5Hl.s:2583   .text.FS_FAT_ClusChainAlloc:0000000000000000 FS_FAT_ClusChainAlloc
     /tmp/ccazZ5Hl.s:2972   .text.FS_FAT_ClusNextGet:0000000000000000 $t
     /tmp/ccazZ5Hl.s:2979   .text.FS_FAT_ClusNextGet:0000000000000000 FS_FAT_ClusNextGet
     /tmp/ccazZ5Hl.s:3079   .text.FS_FAT_SecNextGet:0000000000000000 $t
     /tmp/ccazZ5Hl.s:3086   .text.FS_FAT_SecNextGet:0000000000000000 FS_FAT_SecNextGet
     /tmp/ccazZ5Hl.s:3257   .text.FS_FAT_Query:0000000000000000 $t
     /tmp/ccazZ5Hl.s:3264   .text.FS_FAT_Query:0000000000000000 FS_FAT_Query
     /tmp/ccazZ5Hl.s:3530   .rodata.FS_FAT_MakeBootSec.str1.4:0000000000000000 $d
     /tmp/ccazZ5Hl.s:3546   .text.FS_FAT_MakeBootSec:0000000000000000 $t
     /tmp/ccazZ5Hl.s:3553   .text.FS_FAT_MakeBootSec:0000000000000000 FS_FAT_MakeBootSec
     /tmp/ccazZ5Hl.s:3953   .text.FS_FAT_MakeBootSec:00000000000001e4 $d
     /tmp/ccazZ5Hl.s:3962   .text.FS_FAT_ModuleInit:0000000000000000 $t
     /tmp/ccazZ5Hl.s:3969   .text.FS_FAT_ModuleInit:0000000000000000 FS_FAT_ModuleInit
     /tmp/ccazZ5Hl.s:4076   .text.FS_FAT_ModuleInit:0000000000000064 $d
     /tmp/ccazZ5Hl.s:4081   .text.FS_FAT_VolClose:0000000000000000 $t
     /tmp/ccazZ5Hl.s:4088   .text.FS_FAT_VolClose:0000000000000000 FS_FAT_VolClose
     /tmp/ccazZ5Hl.s:4168   .text.FS_FAT_VolClose:0000000000000040 $d
     /tmp/ccazZ5Hl.s:4173   .text.FS_FAT_VolLabelGet:0000000000000000 $t
     /tmp/ccazZ5Hl.s:4180   .text.FS_FAT_VolLabelGet:0000000000000000 FS_FAT_VolLabelGet
     /tmp/ccazZ5Hl.s:4271   .text.FS_FAT_VolLabelSet:0000000000000000 $t
     /tmp/ccazZ5Hl.s:4278   .text.FS_FAT_VolLabelSet:0000000000000000 FS_FAT_VolLabelSet
     /tmp/ccazZ5Hl.s:4365   .text.FS_FAT_VolOpen:0000000000000000 $t
     /tmp/ccazZ5Hl.s:4372   .text.FS_FAT_VolOpen:0000000000000000 FS_FAT_VolOpen
     /tmp/ccazZ5Hl.s:4576   .text.FS_FAT_VolOpen:00000000000000cc $d
     /tmp/ccazZ5Hl.s:4581   .text.FS_FAT_VolQuery:0000000000000000 $t
ARM GAS  /tmp/ccazZ5Hl.s 			page 328


     /tmp/ccazZ5Hl.s:4588   .text.FS_FAT_VolQuery:0000000000000000 FS_FAT_VolQuery
     /tmp/ccazZ5Hl.s:4664   .text.FS_FAT_LowDirChkEmpty:0000000000000000 $t
     /tmp/ccazZ5Hl.s:4671   .text.FS_FAT_LowDirChkEmpty:0000000000000000 FS_FAT_LowDirChkEmpty
     /tmp/ccazZ5Hl.s:4830   .text.FS_FAT_LowDirChkEmpty:0000000000000078 $d
     /tmp/ccazZ5Hl.s:4835   .text.FS_FAT_LowFileFirstClusGet:0000000000000000 $t
     /tmp/ccazZ5Hl.s:4842   .text.FS_FAT_LowFileFirstClusGet:0000000000000000 FS_FAT_LowFileFirstClusGet
     /tmp/ccazZ5Hl.s:5129   .text.FS_FAT_LowEntryDel:0000000000000000 $t
     /tmp/ccazZ5Hl.s:5136   .text.FS_FAT_LowEntryDel:0000000000000000 FS_FAT_LowEntryDel
     /tmp/ccazZ5Hl.s:5243   .text.FS_FAT_LowEntryDel:0000000000000058 $d
     /tmp/ccazZ5Hl.s:5248   .text.FS_FAT_DateFmt:0000000000000000 $t
     /tmp/ccazZ5Hl.s:5255   .text.FS_FAT_DateFmt:0000000000000000 FS_FAT_DateFmt
     /tmp/ccazZ5Hl.s:5335   .text.FS_FAT_TimeFmt:0000000000000000 $t
     /tmp/ccazZ5Hl.s:5342   .text.FS_FAT_TimeFmt:0000000000000000 FS_FAT_TimeFmt
     /tmp/ccazZ5Hl.s:5419   .text.FS_FAT_LowEntryUpdate:0000000000000000 $t
     /tmp/ccazZ5Hl.s:5426   .text.FS_FAT_LowEntryUpdate:0000000000000000 FS_FAT_LowEntryUpdate
     /tmp/ccazZ5Hl.s:5614   .text.FS_FAT_LowFileFirstClusAdd:0000000000000000 $t
     /tmp/ccazZ5Hl.s:5621   .text.FS_FAT_LowFileFirstClusAdd:0000000000000000 FS_FAT_LowFileFirstClusAdd
     /tmp/ccazZ5Hl.s:5735   .text.FS_FAT_LowEntryTruncate:0000000000000000 $t
     /tmp/ccazZ5Hl.s:5742   .text.FS_FAT_LowEntryTruncate:0000000000000000 FS_FAT_LowEntryTruncate
     /tmp/ccazZ5Hl.s:5948   .text.FS_FAT_DateTimeParse:0000000000000000 $t
     /tmp/ccazZ5Hl.s:5955   .text.FS_FAT_DateTimeParse:0000000000000000 FS_FAT_DateTimeParse
     /tmp/ccazZ5Hl.s:6109   .text.FS_FAT_SecClr:0000000000000000 $t
     /tmp/ccazZ5Hl.s:6116   .text.FS_FAT_SecClr:0000000000000000 FS_FAT_SecClr
     /tmp/ccazZ5Hl.s:6219   .text.FS_FAT_SecNextGetAlloc:0000000000000000 $t
     /tmp/ccazZ5Hl.s:6226   .text.FS_FAT_SecNextGetAlloc:0000000000000000 FS_FAT_SecNextGetAlloc
     /tmp/ccazZ5Hl.s:6516   .text.FS_FAT_VolFmt:0000000000000000 $t
     /tmp/ccazZ5Hl.s:6523   .text.FS_FAT_VolFmt:0000000000000000 FS_FAT_VolFmt
     /tmp/ccazZ5Hl.s:7784   .text.FS_FAT_VolFmt:000000000000065c $d
     /tmp/ccazZ5Hl.s:7789   .text.FS_FAT_LowDirFirstClusAdd:0000000000000000 $t
     /tmp/ccazZ5Hl.s:7795   .text.FS_FAT_LowDirFirstClusAdd:0000000000000000 FS_FAT_LowDirFirstClusAdd
     /tmp/ccazZ5Hl.s:7987   .text.FS_FAT_LowDirFirstClusAdd:00000000000000dc $d
     /tmp/ccazZ5Hl.s:7993   .text.FS_FAT_LowEntryCreate:0000000000000000 $t
     /tmp/ccazZ5Hl.s:8000   .text.FS_FAT_LowEntryCreate:0000000000000000 FS_FAT_LowEntryCreate
     /tmp/ccazZ5Hl.s:8153   .text.FS_FAT_LowEntryCreate:0000000000000088 $d
     /tmp/ccazZ5Hl.s:8158   .text.FS_FAT_LowEntryRename:0000000000000000 $t
     /tmp/ccazZ5Hl.s:8165   .text.FS_FAT_LowEntryRename:0000000000000000 FS_FAT_LowEntryRename
     /tmp/ccazZ5Hl.s:8421   .text.FS_FAT_LowEntryRename:00000000000000e8 $d
     /tmp/ccazZ5Hl.s:8426   .text.FS_FAT_Char_LastPathSep:0000000000000000 $t
     /tmp/ccazZ5Hl.s:8433   .text.FS_FAT_Char_LastPathSep:0000000000000000 FS_FAT_Char_LastPathSep
     /tmp/ccazZ5Hl.s:8522   .text.FS_FAT_LowEntryFind:0000000000000000 $t
     /tmp/ccazZ5Hl.s:8529   .text.FS_FAT_LowEntryFind:0000000000000000 FS_FAT_LowEntryFind
     /tmp/ccazZ5Hl.s:9240   .bss.FS_FAT_DataPool:0000000000000000 $d
     /tmp/ccazZ5Hl.s:9244   .bss.FS_FAT_DataPool:0000000000000000 FS_FAT_DataPool
     /tmp/ccazZ5Hl.s:9247   .rodata.FS_FAT_NameDot:0000000000000000 $d
     /tmp/ccazZ5Hl.s:9251   .rodata.FS_FAT_NameDot:0000000000000000 FS_FAT_NameDot
     /tmp/ccazZ5Hl.s:9256   .rodata.FS_FAT_NameDotDot:0000000000000000 $d
     /tmp/ccazZ5Hl.s:9260   .rodata.FS_FAT_NameDotDot:0000000000000000 FS_FAT_NameDotDot
     /tmp/ccazZ5Hl.s:9265   .rodata.FS_FAT_TblFAT12:0000000000000000 $d
     /tmp/ccazZ5Hl.s:9269   .rodata.FS_FAT_TblFAT12:0000000000000000 FS_FAT_TblFAT12
     /tmp/ccazZ5Hl.s:9291   .rodata.FS_FAT_TblFAT16:0000000000000000 $d
     /tmp/ccazZ5Hl.s:9295   .rodata.FS_FAT_TblFAT16:0000000000000000 FS_FAT_TblFAT16
     /tmp/ccazZ5Hl.s:9315   .rodata.FS_FAT_TblFAT32:0000000000000000 $d
     /tmp/ccazZ5Hl.s:9319   .rodata.FS_FAT_TblFAT32:0000000000000000 FS_FAT_TblFAT32
                           .group:0000000000000000 wm4.0.0f5aa60db9403f389c005f20ecce4286
                           .group:0000000000000000 wm4.cpu_def.h.46.baa122a2898bdc40bb50d1f21ead1515
                           .group:0000000000000000 wm4.cpu_cfg.h.45.38a6a562da8b04490c382a226238c57e
                           .group:0000000000000000 wm4.cpu.h.171.3cb15ee3ccb812cbfdf76d1fbfb9eda0
ARM GAS  /tmp/ccazZ5Hl.s 			page 329


                           .group:0000000000000000 wm4.cpu_core.h.51.7b35a59c319673f88ae4a256248776ec
                           .group:0000000000000000 wm4.lib_def.h.66.6ab2a012067a8e1f4289db5765835062
                           .group:0000000000000000 wm4.cpu_core.h.143.d3b700e12b3a14ed3bee14c822b49a7d
                           .group:0000000000000000 wm4.lib_cfg.h.40.b2958733f73e73af70f675ca0f89303e
                           .group:0000000000000000 wm4.lib_mem.h.121.89b942a057fb20091baad8bf6b28b1e6
                           .group:0000000000000000 wm4.fs.h.42.4f6311a594ee5619f1ee7a9392eb7faa
                           .group:0000000000000000 wm4.lib_ascii.h.84.da234f9d4d202bba866fb26067887eec
                           .group:0000000000000000 wm4.fs_def.h.42.653ad677c23ef93c522ec84af681385d
                           .group:0000000000000000 wm4.fs_cfg.h.116.da4f8e9d0b9040a97ef3bf26c61e90fd
                           .group:0000000000000000 wm4.clk.h.99.39403db6a27321e53b261bbe20b56e1d
                           .group:0000000000000000 wm4.lib_str.h.60.d6fb3a1336db17c586ed26be94929677
                           .group:0000000000000000 wm4.clk_cfg.h.45.428f260ed0fbcfa16fc822c67c85dade
                           .group:0000000000000000 wm4.clk.h.219.c24c7347fcc7691d3157fe73514cb366
                           .group:0000000000000000 wm4.fs_cfg_fs.h.176.c85074fbe881bfa594608376a65f4dc2
                           .group:0000000000000000 wm4.fs_type.h.42.3e681b291920189044ba1da24ae0f22a
                           .group:0000000000000000 wm4.fs_err.h.42.d52bfed31dff3d1419c5cf09952dee67
                           .group:0000000000000000 wm4.fs.h.97.1d629f0ba32b5622ab4e01a254bd98e8
                           .group:0000000000000000 wm4.fs_buf.h.42.0c8ba10968f085926266a27b71b3972d
                           .group:0000000000000000 wm4.fs_dev.h.42.457d0b7de373584765db5fbe40e7c30d
                           .group:0000000000000000 wm4.fs_ctr.h.42.9d1398cac157503ac8af114819f7782b
                           .group:0000000000000000 wm4.fs_dev.h.84.0b8682dc82cfd464ab0da30a876c8006
                           .group:0000000000000000 wm4.fs_file.h.42.74c26597bc17b842069a1de9e164f613
                           .group:0000000000000000 wm4.fs_partition.h.67.8ebaf66c6856560a32378f39b9544644
                           .group:0000000000000000 wm4.fs_entry.h.42.9d70c930b2952a9ef63a0a4e9d586c20
                           .group:0000000000000000 wm4.fs_dir.h.83.d0300b5b24eed020443871730cac76e3
                           .group:0000000000000000 wm4.fs_unicode.h.42.7187f638062b29b06572d839ddc5f920
                           .group:0000000000000000 wm4.fs_vol.h.42.b307128eec61fcaf68a96ce7f965d41e
                           .group:0000000000000000 wm4.fs_util.h.64.fe7812d6ca4c430dea2d2e705fd73c11
                           .group:0000000000000000 wm4.fs_fat_type.h.44.5030ef39a150a8f4f55331616cd38bbd
                           .group:0000000000000000 wm4.fs_fat.h.103.89adf2d396ea9a0dd44def3a42712dd1
                           .group:0000000000000000 wm4.fs_fat_fat12.h.50.b6cc511e686f02c3dbd2fff2c7c88147
                           .group:0000000000000000 wm4.fs_fat_fat16.h.50.93a0f739558c9e265a84abb45f64f78e
                           .group:0000000000000000 wm4.fs_fat_fat32.h.50.a6b70f6b9ad91c101291560fde8b0e7b
                           .group:0000000000000000 wm4.fs_fat_file.h.46.57a3dc191e4dabebc97abce5b708f253
                           .group:0000000000000000 wm4.fs_fat_lfn.h.50.b46137ae8fe3a65a357b1862d2f89547
                           .group:0000000000000000 wm4.fs_fat_sfn.h.46.5d51e4dfd288beb475141580db2c7825

UNDEFINED SYMBOLS
FS_FAT_LFN_API
FSUtil_Log2
FS_FAT_FAT12_API
FS_FAT_FAT16_API
FS_FAT_FAT32_API
FSVol_ReleaseLocked
Mem_Copy
Mem_PoolCreate
FS_FAT_FileModuleInit
FS_FAT_DirModuleInit
FS_OS_Lock
Mem_PoolBlkFree
FS_OS_Unlock
CPU_SW_Exception
Mem_Clr
FS_FAT_SFN_LabelGet
Str_Len_N
Str_Copy_N
Mem_Set
ARM GAS  /tmp/ccazZ5Hl.s 			page 330


FS_FAT_SFN_LabelSet
FSBuf_Get
FSVol_RdLockedEx
FSBuf_Free
Mem_PoolBlkGet
Clk_IsDateTimeValid
FSBuf_Set
FSBuf_MarkDirty
Clk_GetDateTime
Clk_UnixDateTimeMake
Clk_DateTimeToTS_Unix
FS_MaxSecSizeGet
FSVol_WrLockedEx
FSBuf_Flush
FS_FAT_SFN_DirEntryFmt
